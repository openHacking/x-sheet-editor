{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/svg/cell.png","webpack:///./assets/svg/s-resize.png","webpack:///./assets/svg/e-resize.png","webpack:///./src/lib/donwload/download.js","webpack:///./src/const/Constant.js","webpack:///./src/utils/Utils.js","webpack:///./src/lib/Element.js","webpack:///./src/lib/Widget.js","webpack:///./src/lib/Layer.js","webpack:///./src/lib/layer/VerticalLayer.js","webpack:///./src/lib/layer/VerticalLayerElement.js","webpack:///./src/core/work/tools/Icon.js","webpack:///./src/core/work/tools/base/Item.js","webpack:///./src/core/work/tools/Undo.js","webpack:///./src/core/work/tools/Redo.js","webpack:///./src/core/work/tools/PaintFormat.js","webpack:///./src/core/work/tools/ClearFormat.js","webpack:///./src/core/work/tools/base/DropDownItem.js","webpack:///./src/utils/EventBind.js","webpack:///./src/component/scrollbar/ScrollBarX.js","webpack:///./src/component/scrollbar/ScrollBarY.js","webpack:///./src/lib/layer/HorizontalLayerElement.js","webpack:///./src/lib/layer/HorizontalLayer.js","webpack:///./src/component/elpopup/ElPopUp.js","webpack:///./src/component/elcontextmenu/ELContextMenu.js","webpack:///./src/component/elcontextmenu/ELContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/format/FormatContextMenuItem.js","webpack:///./src/component/elcontextmenu/ELContextMenuDivider.js","webpack:///./src/core/work/tools/contextmenu/format/FormatContextMenu.js","webpack:///./src/core/work/tools/Format.js","webpack:///./src/core/work/tools/contextmenu/font/FontContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/font/FontContextMenu.js","webpack:///./src/core/work/tools/Font.js","webpack:///./src/core/work/tools/contextmenu/fontsize/FontSizeContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/fontsize/FontSizeContextMenu.js","webpack:///./src/core/work/tools/FontSize.js","webpack:///./src/core/work/tools/FontBold.js","webpack:///./src/core/work/tools/FontItalic.js","webpack:///./src/core/work/tools/UnderLine.js","webpack:///./src/core/work/tools/FontStrike.js","webpack:///./src/core/work/tools/contextmenu/fontcolor/FontColorContextMenuItem.js","webpack:///./src/component/dragpanel/DragPanel.js","webpack:///./src/component/colorpicker/ColorPicker.js","webpack:///./src/component/colorpicker/colorarray/ColorItem.js","webpack:///./src/component/colorpicker/colorarray/ColorArray.js","webpack:///./src/core/work/tools/contextmenu/fontcolor/FontColorContextMenu.js","webpack:///./src/core/work/tools/FontColor.js","webpack:///./src/core/work/tools/contextmenu/fillcolor/FillColorContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/fillcolor/FillColorContextMenu.js","webpack:///./src/core/work/tools/FillColor.js","webpack:///./src/core/work/tools/contextmenu/border/bordertype/BorderTypeContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon1.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon2.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon3.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon4.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon5.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon6.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon7.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon8.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon9.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon10.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderColor.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderType.js","webpack:///./src/core/work/tools/contextmenu/border/bordercolor/BorderColorContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/border/bordercolor/BorderColorContextMenu.js","webpack:///./src/core/work/tools/contextmenu/border/linetype/LineTypeContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/border/linetype/LineTypeContextMenu.js","webpack:///./src/canvas/Line.js","webpack:///./src/core/work/tools/contextmenu/border/bordertype/BorderTypeContextMenu.js","webpack:///./src/core/work/tools/contextmenu/icon/border/Border.js","webpack:///./src/core/work/tools/Merge.js","webpack:///./src/core/work/tools/contextmenu/icon/horizontal/HorizontalIcon1.js","webpack:///./src/core/work/tools/contextmenu/icon/horizontal/HorizontalIcon2.js","webpack:///./src/core/work/tools/contextmenu/icon/horizontal/HorizontalIcon3.js","webpack:///./src/core/work/tools/contextmenu/horizontal/HorizontalContextMenuItem.js","webpack:///./src/canvas/font/BaseFont.js","webpack:///./src/core/work/tools/contextmenu/horizontal/HorizontalContextMenu.js","webpack:///./src/core/work/tools/HorizontalAlign.js","webpack:///./src/core/work/tools/contextmenu/vertical/VerticalContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/icon/vertical/VerticalIcon1.js","webpack:///./src/core/work/tools/contextmenu/icon/vertical/VerticalIcon2.js","webpack:///./src/core/work/tools/contextmenu/icon/vertical/VerticalIcon3.js","webpack:///./src/core/work/tools/contextmenu/vertical/VerticalContextMenu.js","webpack:///./src/core/work/tools/VerticalAlign.js","webpack:///./src/core/work/tools/contextmenu/icon/textwrapping/TextWrappingIcon1.js","webpack:///./src/core/work/tools/contextmenu/icon/textwrapping/TextWrappingIcon2.js","webpack:///./src/core/work/tools/contextmenu/icon/textwrapping/TextWrappingIcon3.js","webpack:///./src/core/work/tools/contextmenu/textwrapping/TextWrappingContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/textwrapping/TextWrappingContextMenu.js","webpack:///./src/core/work/tools/TextWrapping.js","webpack:///./src/core/work/tools/Fixed.js","webpack:///./src/core/work/tools/Filter.js","webpack:///./src/core/work/tools/Functions.js","webpack:///./src/core/table/tablebase/RectRange.js","webpack:///./src/canvas/Rect.js","webpack:///./src/core/table/screenwiget/selector/ScreenSelector.js","webpack:///./src/core/table/tablecell/CellFont.js","webpack:///./src/core/table/tablecell/Border.js","webpack:///./src/core/table/tablecell/CellBorder.js","webpack:///./src/core/table/tablecell/Cell.js","webpack:///./src/core/work/tools/contextmenu/scale/ScaleContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/scale/ScaleContextMenu.js","webpack:///./src/core/work/tools/Scale.js","webpack:///./src/core/table/xscreen/part/XScreenPart.js","webpack:///./src/core/table/xscreen/part/XScreenLTPart.js","webpack:///./src/core/table/xscreen/part/XScreenTPart.js","webpack:///./src/core/table/xscreen/part/XScreenBRPart.js","webpack:///./src/core/table/xscreen/part/XScreenLPart.js","webpack:///./src/core/table/xscreen/item/XScreenItem.js","webpack:///./src/core/table/xscreen/zone/XScreenZone.js","webpack:///./src/core/table/xscreen/zone/XScreenBRZone.js","webpack:///./src/core/table/xscreen/zone/XScreenLTZone.js","webpack:///./src/core/table/xscreen/zone/XScreenLZone.js","webpack:///./src/core/table/xscreen/zone/XScreenTZone.js","webpack:///./src/core/table/xscreen/XScreen.js","webpack:///./src/core/table/xscreen/item/border/XScreenBorderItem.js","webpack:///./src/core/table/xscreen/item/border/XScreenCssBorderItem.js","webpack:///./src/core/table/xscreenitems/xselect/XSelectItem.js","webpack:///./src/core/table/xscreen/item/border/XScreenSvgBorderItem.js","webpack:///./src/core/table/xscreenitems/xcopystyle/XcopyStyle.js","webpack:///./src/core/work/TopMenu.js","webpack:///./src/core/work/options/base/Item.js","webpack:///./src/core/work/options/File.js","webpack:///./src/core/work/options/ForMart.js","webpack:///./src/core/work/options/Insert.js","webpack:///./src/core/work/options/Look.js","webpack:///./src/core/work/options/Update.js","webpack:///./src/core/work/TopOption.js","webpack:///./src/core/work/WorkTop.js","webpack:///./src/lib/layer/center/VerticalCenterElement.js","webpack:///./src/lib/layer/center/VerticalCenter.js","webpack:///./src/core/work/SheetView.js","webpack:///./src/core/work/TabView.js","webpack:///./src/core/work/Tab.js","webpack:///./src/core/table/tablebase/Scale.js","webpack:///./src/core/table/tablebase/Code.js","webpack:///./src/core/table/tablebase/Rows.js","webpack:///./src/core/table/tablebase/Cols.js","webpack:///./src/core/table/tablebase/Fixed.js","webpack:///./src/core/table/tablebase/Scroll.js","webpack:///./src/core/table/XTableMousePointer.js","webpack:///./src/core/table/XTableKeyboard.js","webpack:///./src/core/table/resizer/XReSizer.js","webpack:///./src/core/table/resizer/YReSizer.js","webpack:///./src/core/table/highlight/XHeightLight.js","webpack:///./src/core/table/highlight/YHeightLight.js","webpack:///./src/core/table/XTableFocus.js","webpack:///./src/canvas/XDraw.js","webpack:///./src/core/table/XTableScrollView.js","webpack:///./src/core/table/XTableAreaView.js","webpack:///./src/core/table/XTableEdit.js","webpack:///./src/canvas/Grid.js","webpack:///./src/canvas/Crop.js","webpack:///./src/utils/DateUtils.js","webpack:///./src/core/table/XTableFormat.js","webpack:///./src/canvas/Box.js","webpack:///./src/core/table/tablecell/Cells.js","webpack:///./src/canvas/font/VerticalFont.js","webpack:///./src/canvas/RTFunction.js","webpack:///./src/canvas/Angle.js","webpack:///./src/canvas/font/AngleFont.js","webpack:///./src/canvas/font/HorizontalFont.js","webpack:///./src/canvas/font/XFont.js","webpack:///./src/core/table/tablebase/Text.js","webpack:///./src/core/table/helper/BaseCellsHelper.js","webpack:///./src/core/table/helper/StyleCellsHelper.js","webpack:///./src/core/table/helper/TextCellsHelper.js","webpack:///./src/core/table/tablebase/Merges.js","webpack:///./src/core/table/datasnapshot/DataProxy.js","webpack:///./src/core/table/datasnapshot/proxy/TableCellDataProxy.js","webpack:///./src/core/table/datasnapshot/record/CellDataRecord.js","webpack:///./src/core/table/datasnapshot/record/MergeDataRecord.js","webpack:///./src/core/table/datasnapshot/proxy/TableMergeDataProxy.js","webpack:///./src/core/table/datasnapshot/proxy/TableColsDataProxy.js","webpack:///./src/core/table/datasnapshot/record/ColsDataRecord.js","webpack:///./src/core/table/datasnapshot/proxy/TableRowsDataProxy.js","webpack:///./src/core/table/datasnapshot/record/RowsDataRecord.js","webpack:///./src/core/table/datasnapshot/TableDataSnapshot.js","webpack:///./src/core/table/linehandle/filter/LineFilter.js","webpack:///./src/core/table/linehandle/filter/outrange/LeftOutRangeFilter.js","webpack:///./src/core/table/linehandle/filter/outrange/RightOutRangeFilter.js","webpack:///./src/core/table/linehandle/BaseLine.js","webpack:///./src/core/table/linehandle/filter/mege/HorizontalMergeFilter.js","webpack:///./src/core/table/linehandle/filter/mege/VerticalMergeFilter.js","webpack:///./src/core/table/linehandle/filter/borderdisplay/HorizontalBorderDisplayFilter.js","webpack:///./src/core/table/linehandle/filter/borderdisplay/VerticalBorderDisplayFilter.js","webpack:///./src/core/table/linehandle/grid/TableGrid.js","webpack:///./src/core/table/linehandle/filter/FilterChain.js","webpack:///./src/core/table/linehandle/grid/TableHorizontalGrid.js","webpack:///./src/core/table/linehandle/grid/TableVerticalGrid.js","webpack:///./src/core/table/linehandle/filter/borderdiff/BottomBorderDiffFilter.js","webpack:///./src/core/table/linehandle/filter/borderdiff/LeftBorderDiffFilter.js","webpack:///./src/core/table/linehandle/filter/borderdiff/RightBorderDiffFilter.js","webpack:///./src/core/table/linehandle/filter/borderdiff/TopBorderDiffFilter.js","webpack:///./src/core/table/linehandle/border/TableBorder.js","webpack:///./src/core/table/linehandle/border/TableHorizontalBorder.js","webpack:///./src/core/table/linehandle/border/TableVerticalBorder.js","webpack:///./src/core/table/helper/OperateCellsHelper.js","webpack:///./src/core/table/XTableHistoryAreaView.js","webpack:///./src/core/table/XTableStyle.js","webpack:///./src/core/table/xscreenitems/xautofill/XautoFillItem.js","webpack:///./src/core/table/XTableDimensions,.js","webpack:///./src/core/work/Sheet.js","webpack:///./src/core/work/WorkBody.js","webpack:///./src/core/work/BottomMenu.js","webpack:///./src/core/work/WorkBottom.js","webpack:///./src/core/work/Work.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","define","download","data","strFileName","strMimeType","blob","reader","self","window","defaultMime","mimeType","payload","url","anchor","document","createElement","toString","a","String","myBlob","Blob","MozBlob","WebKitBlob","fileName","this","length","split","pop","href","indexOf","ajax","XMLHttpRequest","open","responseType","onload","e","target","response","setTimeout","send","test","navigator","msSaveBlob","dataUrlToBlob","saver","type","strUrl","parts","binData","atob","decodeURIComponent","mx","uiArr","Uint8Array","charCodeAt","winMode","setAttribute","className","innerHTML","style","display","body","appendChild","click","removeChild","URL","revokeObjectURL","userAgent","replace","confirm","location","f","src","createObjectURL","constructor","btoa","y","encodeURIComponent","FileReader","result","readAsDataURL","Constant","SYSTEM_EVENT_TYPE","MOUSE_MOVE","toLocaleLowerCase","MOUSE_DOWN","MOUSE_UP","MOUSE_OVER","MOUSE_LEAVE","MOUSE_WHEEL","MOUSE_ENTER","CLICK","KEY_DOWN","KEY_UP","DRAG_START","SCROLL","RESIZE","CHANGE","INPUT","VISIBILITY_CHANGE","TABLE_EVENT_TYPE","CHANGE_HEIGHT","CHANGE_WIDTH","DATA_CHANGE","SELECT_CHANGE","SELECT_DOWN","SELECT_OVER","SCALE_CHANGE","WORK_BODY_EVENT_TYPE","CHANGE_ACTIVE","MOUSE_POINTER_TYPE","SELECT_ONE_COLUMN","SELECT_ONE_ROW","SELECT_CELL","AUTO_FILL","COL_RESIZE","ROW_RESIZE","cssPrefix","XSheetVersion","S4","Math","random","substring","alphabets","DATA_TYPE","throttleHandle","Utils","arg","json","JSON","stringify","parse","isUnDef","sources","forEach","source","keys","v","Array","isArray","isPlainObject","mergeDeep","assign","isEmptyObject","trim","obj","getPrototypeOf","objOrAry","cb","total","size","min","max","val","isNumber","parseFloat","parseInt","index","str","idx","ret","expoNet","x","charAt","indexAt","stringAt","xn","yn","expr2xy","xy2expr","initS","initV","ifv","getV","time","clearTimeout","sv","tv","equal","leftChain","rightChain","compare2Objects","isNaN","Date","RegExp","Number","isPrototypeOf","push","arguments","a1","a2","getSelection","focus","range","selectAllChildren","collapseToEnd","selection","createRange","moveToElementText","collapse","select","isBlank","now","width","innerWidth","height","innerHeight","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","element","el","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","EMPTY","Nul","Undef","undefined","Element","tag","eventNames","handler","fen","oen","eventName","addEventListener","evt","k","button","stopPropagation","css","top","offsetTop","left","offsetLeft","offsetHeight","offsetWidth","scrollLeft","scrollTop","clientHeight","getBoundingClientRect","parentNode","args","childNodes","ele","child","firstChild","lastChild","children","insertBefore","previousSibling","nextSibling","createTextNode","contains","classList","add","remove","cls","toggleClass","toggle","flag","addClass","removeClass","active","getAttribute","removeAttribute","content","removeProperty","getComputedStyle","computedStyle","on","show","hide","innerText","sibling","previousElementSibling","nextElementSibling","position","repeat","right","bottom","message","event","CustomEvent","detail","bubbles","cancelable","dispatchEvent","querySelectorAll","eleArray","item","targetEl","h","Widget","nodeType","box","pageX","pageY","eleTop","eleLeft","widget","onAttach","Layer","VerticalLayer","options","VerticalLayerElement","flexGrow","Icon","iconNameEl","Item","Undo","icon","Redo","PaintFormat","sheets","sheet","splice","ClearFormat","DropDownItem","drop","title","text","html","px","cssRemoveKeys","EventBind","fn","removeEventListener","moveFunc","upFunc","xEvtUp","unbind","func","ScrollBarX","option","scroll","to","lastBut","nextBut","block","blockLeft","maxBlockLeft","blockWidth","minBlockWidth","scrollTo","contentWidth","viewPortWidth","isHide","evt1","downEventXy","computeEventXy","mouseMoveUp","evt2","computeScrollTo","preventDefault","contentBox","move","maxTo","ScrollBarY","blockTop","maxBlockTop","blockHeight","minBlockHeight","contentHeight","viewPortHeight","HorizontalLayerElement","HorizontalLayer","EL_POPUP_POSITION","TOP","LEFT","BOTTOM","RIGHT","POOL","root","ElPopUp","off","scrollBarX","scrollBarY","contentLayer","scrollBarYLayer","overflow","horizontalLayer","contentVerticalLayer","scrollBarXVerticalLayer","verticalLayer","filter","close","scrollbar","elBox","maxWidth","maxHeight","offset","setSize","ELContextMenu","menus","elPopUp","ELContextMenuItem","pool","FormatContextMenuItem","desc","iconElement","titleElement","descElement","ELContextMenuDivider","FormatContextMenu","onUpdate","items","update","setActive","addItem","init","first","setTitle","format","Format","copyProp","contextMenu","setWidth","setEllipsis","formatContextMenu","FontContextMenuItem","FontContextMenu","setActiveByType","Font","fontContextMenu","FontSizeContextMenuItem","FontSizeContextMenu","FontSize","fontSizeContextMenu","FontBold","FontItalic","UnderLine","FontStrike","FontColorContextMenuItem","DRAG_PANEL_POSITION","CENTER","DragPanel","mask","viewPort","ColorPicker","selectCb","dragPanel","color","preViewColorPoint","colorValueTips","colorInput","selectColorPoint","selectColorArea1","selectColorArea2","selectColorArea3","center","colorHuxTips","colorBar","colorBarPoint","cancelButton","selectButton","buttons","hex","len","join","hsx","g","b","rgbToHsb","hexToRgb","rgb","hsb","delta","t1","t2","t3","round","nr","rgbToHex","hsbToRgb","startsWith","match","isHex","parseRgb","e1","xy","centerBox","downSelect","e2","moveSelect","colorBarBox","downHue","moveHue","hexColor","fixHsx","colorValue","hsbToHex","isRgb","change","colorBarPointBox","colorBarPointLeft","selectColorPointBox","selectColorPointLeft","selectColorPointTop","areaColorValue","sliderPosition","hueChange","selectChange","hexToHsb","fixHex","ColorItem","isDark","checkedIcon","ColorArray","colors","activeColor","setActiveByColor","FontColorContextMenu","colorPicker","customizeColorArray","colorArray","reset","array","plus","customize","FontColor","fontColorContextMenu","setIcon","setColor","FillColorContextMenuItem","FillColorContextMenu","FillColor","fillColorContextMenu","BorderTypeContextMenuItem","BorderIcon1","BorderIcon2","BorderIcon3","BorderIcon4","BorderIcon5","BorderIcon6","BorderIcon7","BorderIcon8","BorderIcon9","BorderIcon10","BorderColor","BorderType","BorderColorContextMenuItem","BorderColorContextMenu","LineTypeContextMenuItem","typeIcon","LineTypeContextMenu","LINE_TYPE","SOLID_LINE","DOTTED_LINE","POINT_LINE","DOUBLE_LINE","SolidLine","draw","attr","sx","sy","ex","ey","lineWidth","strokeStyle","setLineDash","line","DottedLine","dash","DoubleLine","padding","spacing","leftShow","topShow","rightShow","bottomShow","iFMerge","iFMergeFirstRow","iFMergeLastRow","iFMergeFirstCol","iFMergeLastCol","row","col","pos","external","ifMerge","firstRow","lastRow","firstCol","lastCol","sTopLeftCorner","sTop","sBottom","eBottomLeftCorner","eBottom","eTop","sLeft","sRight","eTopRightCorner","eRight","eLeft","sTopRightCorner","eBottomRightCorner","sBottomLeftCorner","internal","handleExternal","handleInternal","Line","solidLine","dottedLine","pointLine","doubleLine","drawLine","BorderTypeContextMenu","borderIcon1","borderIcon2","borderIcon3","borderIcon4","borderIcon5","div1","borderIcon6","borderIcon7","borderIcon8","borderIcon9","borderIcon10","div2","borderIcons","borderColor","borderType","div3","borderColorAndType","borderColorContextMenu","lineTypeContextMenu","closeAll","isOpen","Border","borderTypeContextMenu","Merge","HorizontalIcon1","HorizontalIcon2","HorizontalIcon3","HorizontalContextMenuItem","BaseFont","rect","dw","measureText","textWrap","TypeError","VERTICAL_ALIGN","ALIGN","TEXT_WRAP","OVER_FLOW","WORD_WRAP","TRUNCATE","TEXT_DIRECTION","HORIZONTAL","VERTICAL","ANGLE","HorizontalContextMenu","horizontalIcon1","horizontalIcon2","horizontalIcon3","horizontalIcons","HorizontalAlign","horizontalContextMenu","VerticalContextMenuItem","VerticalIcon1","VerticalIcon2","VerticalIcon3","VerticalContextMenu","verticalIcon1","verticalIcon2","verticalIcon3","verticalIcons","VerticalAlign","verticalContextMenu","TextWrappingIcon1","TextWrappingIcon2","TextWrappingIcon3","TextWrappingContextMenuItem","TextWrappingContextMenu","textWrappingIcon1","textWrappingIcon2","textWrappingIcon3","textWrappingIcons","TextWrapping","textWrappingContextMenu","Fixed","Filter","Functions","RectRange","sri","sci","eri","eci","w","ref","refs","ri","ci","rowFilter","j","other","disjoint","coincide","equals","difference","addRet","dsr","dsc","der","dec","multiple","Rect","SCREEN_SELECT_EVENT","DOWN_SELECT","SELECT_CHANGE_OVER","CellFont","align","verticalAlign","strikethrough","underline","bold","italic","angle","direction","justifyContent","alignItems","zIndexID","zIndex","$zIndex","$display","$width","$color","$type","border","origin","getZIndex","CellBorder","setLDisplay","setTDisplay","setRDisplay","setBDisplay","setLColor","setTColor","setRColor","setBColor","setLWidth","setTWidth","setRWidth","setBWidth","setLType","setTType","setRType","setBType","Cell","background","fontAttr","borderAttr","toCssStyle","ScaleContextMenuItem","scale","ScaleContextMenu","Scale","scaleContextMenu","XScreenPart","xScreenZone","XScreenLTPart","XScreenTPart","XScreenBRPart","XScreenLPart","XScreenItem","table","lt","br","xScreen","rectRange","cols","rows","scrollView","getScrollView","sectionSumWidth","sectionSumHeight","setLeft","setTop","setHeight","fixed","fxLeft","fxTop","XScreenZone","XScreenBRZone","XScreenLTZone","XScreenLZone","XScreenTZone","DISPLAY_AREA","BRT","BRL","BR","ALL","XScreen","displayArea","ltZone","tZone","brZone","lZone","sizeHandle","attach","setXScreen","onAdd","fixedWidth","getFixedWidth","fixedHeight","getFixedHeight","brLeft","getWidth","brTop","getHeight","ltDisplay","tDisplay","lDisplay","RANGE_OVER_GO","LT","T","L","LTT","LTL","XScreenBorderItem","blt","bt","bl","bbr","fixTop","fixLeft","rowsLen","colsLen","ltt","ltl","brt","brl","overGo","XScreenCssBorderItem","setBorderType","SELECT_LOCAL","XSelectItem","targetOffset","selectLocal","selectRange","targetRange","downRange","moveRange","ltElem","brElem","lElem","tElem","ltCorner","lCorner","tCorner","brCorner","mousePointer","targetRangeHandle","targetOffsetHandle","targetBorderHandle","targetCornerHandle","activate","downSelectRange","trigger","moveSelectRange","rectRangeBoundOut","hideAllBorder","rectRangeOverGo","showTBorder","showBBorder","showLBorder","showRBorder","rectRangeSumWidth","rectRangeSumHeight","merges","getTableMerges","getRiCiByXy","getFirstIncludes","viewRange","union","SVG","XcopyStyle","offsetHandle","borderHandle","xSelect","findType","Divider","TopMenu","workTop","sheetView","work","undo","redo","setScale","paintFormat","clearFormat","getActiveSheet","styleCellsHelper","getStyleCellsHelper","tableDataSnapshot","getTableDataSnapshot","begin","cellDataProxy","getCellOrNewCellByViewRange","callback","cell","clone","setCell","end","render","font","dprFontSize","fontColor","fillColor","lineType","operateCellsHelper","getOperateCellsHelper","newCell","setAllDisplay","setAllColor","setAllWidth","setAllType","fontBold","fontItalic","underLine","fontStrike","merge","horizontalAlign","textWrapping","functions","setStatus","setFormatStatus","setFontStatus","setFontSizeStatus","setFontBoldStatus","setFontItalicStatus","setUnderLineStatus","setFontStrikeStatus","setFontColorStatus","setFillColorStatus","setHorizontalAlignStatus","setVerticalAlignStatus","setTextWrappingStatus","canBack","back","canGo","go","cells","getTableCells","xCopyStyle","showCopyStyle","addSheet","hideCopyStyle","removeSheet","targetRect","srcRect","getCell","getCellOrNew","find","mergeDataProxy","isNotUnDef","deleteMerge","addMerge","includeSheet","setUndoStatus","setRedoStatus","setScaleStatus","setPaintFormatStatus","firstCell","File","ForMart","Insert","Look","Update","TopOption","logoEle","titleEle","optionsEle","leftEle","rightEle","file","insert","look","WorkTop","toolsMenu","VerticalCenterElement","VerticalCenter","SheetView","sheetList","activeIndex","TabView","last","next","tabs","optiions","tab","onSwitch","tabList","current","offsetSizeLeft","number","Tab","setName","ScaleAdapter","goto","Code","scaleAdapter","gridColor","Rows","minIf","ei","rowHeight","getOrNew","rangeSum","Cols","colWidth","SCROLL_TYPE","H_LEFT","H_RIGHT","V_TOP","V_BOTTOM","UN","Scroll","XTableMousePointer","lock","sResize","eResize","XTableKeyboard","stop","register","keyCode","code","XReSizer","hoverEl","lineEl","colsDataProxy","moveOff","set","getEventLeft","ceil","visualHeight","newLeft","resize","visualWidth","YReSizer","rowsDataProxy","getEventTop","my","newTop","XHeightLight","checkOut","getLeft","getIndexWidth","getIndexHeight","fixWidth","YHeightLight","getTop","fixHeight","XTableFocus","findByEl","DPR","devicePixelRatio","XDraw","getOffsetX","getOffsetY","ctx","fillText","rounding","fillRect","beginPath","moveTo","lpx","lineTo","stroke","sw","sh","tx","ty","tw","th","drawImage","canvas","offsetX","offsetY","save","restore","clip","fill","rotate","Draw","radian","translate","getContext","rpx","dpr","PI","dpx","Base","VIEW_MODE","CHANGE_ADD","CHANGE_NOT","STATIC","BOUND_OUT","XTableScrollView","lastView","view","within","XTableAreaView","xTableScrollView","XTableEdit","input","editOffset","keepLastIndex","hideEdit","dbClick","showEdit","Grid","Error","Crop","DateUtils","fmt","date","getMonth","getDate","getHours","getMinutes","getSeconds","floor","S","getMilliseconds","resultYear","exec","yearFormatPart","yearVal","getFullYear","substr","res","Val","formatPart","replaceVal","dateText","defaultVal","reg","year","month","day","hours","minutes","seconds","milliseconds","oneChar","onePart","onePartReg","dataInfo","parserToDate","lastIndex","lastIndexOf","isFraction","toExponential","dateFormat","Box","backgroundColor","fillStyle","Cells","isString","VerticalFont","lineHeight","textWidth","textAlign","textBaseline","overflowFont","truncateFont","wrapTextFont","breakArray","textBreak","textArray","breakLen","bi","wOffset","maxLen","textLen","hOffset","ii","char","bx","by","pw","ph","totalWidth","crop","ti","RTSinKit","tilt","abs","sin","inverse","RTCosKit","cos","nearby","ANGLE_ORIGIN","TOP_LEFT","TOP_CENTER","TOP_RIGHT","MIDDLE_LEFT","MIDDLE_CENTER","MIDDLE_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","Angle","AngleFont","textArrayLen","textHeight","haveWidth","jj","rx","ry","ax","ay","dwAngle","revert","trigonometricWidth","trigonometricHeight","rtx","rty","totalHeight","outbounds","pointOffset","diff","textHypotenuseWidth","start","HorizontalFont","XFont","setTextWrap","setPadding","TextBuilder","Text","BaseCellsHelper","xTableAreaView","getCellTextMaxWidth","rightWidth","leftWidth","tmp","StyleCellsHelper","startX","startY","minSri","minSci","maxSri","maxSci","getCellByViewRange","BREAK_LOOP","TextCellsHelper","reverseRows","reverseCols","newRow","newCol","getCellOverFlow","Merges","map","valueOf","each","getOffset","no","checked","getIncludes","old","sync","cellRange","cr","intersects","DataProxy","TableCellDataProxy","setCellOrNew","oldCell","$setCell","CellDataRecord","MERGE_RECORD_TYPE","ADD","DELETE","MergeDataRecord","recordType","TableMergeDataProxy","$deleteMerge","$addMerge","TableColsDataProxy","newWidth","oldWidth","$setWidth","ColsDataRecord","TableRowsDataProxy","newHeight","oldHeight","$setHeight","RowsDataRecord","TableDataSnapshot","record","backLayerStack","goLayerStack","recordLayer","layer","backNotice","goNotice","endNotice","LineFilter","apply","LeftOutRangeFilter","master","getCellBoundOutSize","masterBlank","nextBlank","RightOutRangeFilter","BaseLine","rightOutRangeFilter","leftOutRangeFilter","horizontalIterate","handle","brink","jump","endRow","execute","endCol","HorizontalMergeFilter","VerticalMergeFilter","HorizontalBorderDisplayFilter","VerticalBorderDisplayFilter","TableGrid","drawCheck","horizontalBorderDisplayFilter","verticalBorderDisplayFilter","horizontalMergeFilter","verticalMergeFilter","breakpoint","verticalIterate","ChainLogic","AND","OR","FilterChain","logic","chain","TableHorizontalGrid","computerHorizontalLine","concat","TableVerticalGrid","computerVerticalLine","BottomBorderDiffFilter","priority","LeftBorderDiffFilter","RightBorderDiffFilter","TopBorderDiffFilter","TableBorder","drawOptimization","bottomBorderDiffFilter","leftBorderDiffFilter","rightBorderDiffFilter","topBorderDiffFilter","ck1","ck2","ck3","TableHorizontalBorder","computerBottomHorizontalLine","computerTopHorizontalLine","TableVerticalBorder","computerRightVerticalLine","computerLeftVerticalLine","OperateCellsHelper","XTableHistoryAreaView","lastScrollView","enterView","scrollEnterView","leaveView","getLastScrollView","coincideDifference","getEnterView","RENDER_MODE","RENDER","SCALE","XTableUI","drawX","drawY","mapOriginX","mapOriginY","mapTargetX","mapTargetY","mapWidth","mapHeight","fullScrollView","borderView","borderX","borderY","viewMode","getX","getRenderMode","getViewMode","getFullScrollView","getY","getLineView","getLeaveView","renderMode","getMapWidth","getMapHeight","ox","getMapOriginX","oy","getMapOriginY","getMapTargetX","getMapTargetY","settings","dx","getDrawX","dy","getDrawY","XTableContentUI","textCellsHelper","textFont","lView","builder","getBuilder","setDraw","setText","XTableFormat","setAttr","setRect","setOverFlow","build","setContentWidth","rView","getCellSkipMergeCellByViewRange","getMergeCellByViewRange","getLineX","getLineY","cellHorizontalBorder","cellVerticalBorder","getMergeCoincideRange","getCoincideRangeBrink","bottomHorizontalLine","getBottomHorizontalLine","topHorizontalLine","getTopHorizontalLine","leftVerticalLine","getLeftVerticalLine","rightVerticalLine","getRightVerticalLine","setType","topMergeHorizontalLine","getTopMergeHorizontalLine","bottomMergeHorizontalLine","getBottomMergeHorizontalLine","leftMergeVerticalLine","getLeftMergeVerticalLine","rightMergeVerticalLine","getRightMergeVerticalLine","grid","cellHorizontalGrid","cellVerticalGrid","horizontalLine","getHorizontalLine","verticalLine","getVerticalLine","mergeHorizontalLine","getMergeHorizontalLine","mergeVerticalLine","getMergeVerticalLine","drawBackgroundColor","drawMap","drawClear","drawColor","drawFont","drawBoundOutFont","showGrid","drawGrid","drawBorder","XTableIndexUI","XTableLeftIndexUI","getSize","getColor","eachHeight","ch","indexGrid","leftIndexHorizontalGrid","leftIndexVerticalGrid","getBackground","XTableTopIndexUI","eachWidth","cw","topIndexVerticalGrid","topIndexHorizontalGrid","XTableFrozenLeftIndex","XTableFrozenContent","XTableFrozenTopIndex","XTableFrozenFullRect","indexHeight","indexWidth","XTableLeftIndex","xTop","getScrollEnterView","XTableLeft","XTableContent","xLeft","XTableTop","XTableTopIndex","XTableStyle","leftShowFilter","topShowFilter","rightShowFilter","bottomShowFilter","getGridColor","xTableFrozenFullRect","xLeftFrozenIndex","xTopFrozenIndex","xTableFrozenContent","xLeftIndex","xTopIndex","xContent","enable","enableOptimization","disableOptimization","parent","fullRect","setValue","drawBorderOptimize","XautoFillItem","mergeForceSplit","onBeforeAutoFill","onAfterAutoFill","moveDir","moveRangeHandle","autoFillTo","hasEdgeCheck","rSize","cSize","selectorSri","selectorSci","selectorEri","selectorEci","minRi","maxRi","minCi","maxCi","splitMerge","copyContent","copyMerge","sIndexRi","tIndexRi","sIndexCi","tIndexCi","mergeRect","newMerge","Dimensions","KeyBoardTab","keyboard","edit","screenSelector","tabId","tabNext","selectorAttr","id","cLen","rLen","srcMerges","targetMerges","setOffset","onChangeStack","onSelectChangeStack","XTableDimensions","visualHeightCache","visualWidthCache","cvCssPx","xTableStyle","xReSizer","yReSizer","xHeightLight","yHeightLight","keyBoardTab","rangeReduceIf","x1","scrolling","y1","screen","setDivideLayer","Sheet","tableConfig","WorkBody","workConfig","tabSheet","poweredBy","sheetViewLayer","scrollBarXLayer","scrollBarXVerticalCenter","scrollBarXHorizontalLayer","sheetSwitchTabLayer","horizontalLayer1","horizontalLayer2","horizontalLayer1Layer","horizontalLayer2Layer","layerVerticalLayer","scrollY","scrollX","tabView","addTabSheet","setActiveTab","getScrollTotalHeight","getScrollTotalWidth","getContentWidth","getContentHeight","scrollMove","setActiveIndex","deltaY","throttle","updateScroll","createSheet","setActiveSheet","getData","BottomMenu","workBottom","sum","avg","fullScreen","isFull","WorkBottom","bottomMenu","Work","topLayer","bodyLayer","bottomLayer","setSum","setAvg","setNumber","XSheet","selectors","querySelector","setRoot","version"],"mappings":"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","file":"XSheet.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = __webpack_public_path__ + \"c4ab8001e109540f7ae6a34181d695d3.png\";","module.exports = __webpack_public_path__ + \"42b436e7c64603182355d52d31ea49f1.png\";","module.exports = __webpack_public_path__ + \"9dfd8685ea7e1e5c025514eec46a4547.png\";","//download.js v4.2, by dandavis; 2008-2016. [CCBY2] see http://danml.com/download.html for tests/usage\r\n// v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\r\n// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs\r\n// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.\r\n// v4 adds AMD/UMD, commonJS, and plain browser support\r\n// v4.1 adds url download capability via solo URL argument (same domain/CORS only)\r\n// v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors\r\n// https://github.com/rndme/download\r\n\r\n(function (root, factory) {\r\n  if (typeof define === 'function' && define.amd) {\r\n    // AMD. Register as an anonymous module.\r\n    define([], factory);\r\n  } else if (typeof exports === 'object') {\r\n    // Node. Does not work with strict CommonJS, but\r\n    // only CommonJS-like environments that support module.exports,\r\n    // like Node.\r\n    module.exports = factory();\r\n  } else {\r\n    // Browser globals (root is window)\r\n    root.download = factory();\r\n  }\r\n}(this, function () {\r\n\r\n  return function download(data, strFileName, strMimeType) {\r\n\r\n    var self = window, // this script is only for browsers anyway...\r\n      defaultMime = \"application/octet-stream\", // this default mime also triggers iframe downloads\r\n      mimeType = strMimeType || defaultMime,\r\n      payload = data,\r\n      url = !strFileName && !strMimeType && payload,\r\n      anchor = document.createElement(\"a\"),\r\n      toString = function(a){return String(a);},\r\n      myBlob = (self.Blob || self.MozBlob || self.WebKitBlob || toString),\r\n      fileName = strFileName || \"download\",\r\n      blob,\r\n      reader;\r\n    myBlob= myBlob.call ? myBlob.bind(self) : Blob ;\r\n\r\n    if(String(this)===\"true\"){ //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\r\n      payload=[payload, mimeType];\r\n      mimeType=payload[0];\r\n      payload=payload[1];\r\n    }\r\n\r\n\r\n    if(url && url.length< 2048){ // if no filename and no mime, assume a url was passed as the only argument\r\n      fileName = url.split(\"/\").pop().split(\"?\")[0];\r\n      anchor.href = url; // assign href prop to temp anchor\r\n      if(anchor.href.indexOf(url) !== -1){ // if the browser determines that it's a potentially valid url path:\r\n        var ajax=new XMLHttpRequest();\r\n        ajax.open( \"GET\", url, true);\r\n        ajax.responseType = 'blob';\r\n        ajax.onload= function(e){\r\n          download(e.target.response, fileName, defaultMime);\r\n        };\r\n        setTimeout(function(){ ajax.send();}, 0); // allows setting custom ajax headers using the return:\r\n        return ajax;\r\n      } // end if valid url?\r\n    } // end if url?\r\n\r\n\r\n    //go ahead and download dataURLs right away\r\n    if(/^data\\:[\\w+\\-]+\\/[\\w+\\-]+[,;]/.test(payload)){\r\n\r\n      if(payload.length > (1024*1024*1.999) && myBlob !== toString ){\r\n        payload=dataUrlToBlob(payload);\r\n        mimeType=payload.type || defaultMime;\r\n      }else{\r\n        return navigator.msSaveBlob ?  // IE10 can't do a[download], only Blobs:\r\n          navigator.msSaveBlob(dataUrlToBlob(payload), fileName) :\r\n          saver(payload) ; // everyone else can save dataURLs un-processed\r\n      }\r\n\r\n    }//end if dataURL passed?\r\n\r\n    blob = payload instanceof myBlob ?\r\n      payload :\r\n      new myBlob([payload], {type: mimeType}) ;\r\n\r\n\r\n    function dataUrlToBlob(strUrl) {\r\n      var parts= strUrl.split(/[:;,]/),\r\n        type= parts[1],\r\n        decoder= parts[2] == \"base64\" ? atob : decodeURIComponent,\r\n        binData= decoder( parts.pop() ),\r\n        mx= binData.length,\r\n        i= 0,\r\n        uiArr= new Uint8Array(mx);\r\n\r\n      for(i;i<mx;++i) uiArr[i]= binData.charCodeAt(i);\r\n\r\n      return new myBlob([uiArr], {type: type});\r\n    }\r\n\r\n    function saver(url, winMode){\r\n\r\n      if ('download' in anchor) { //html5 A[download]\r\n        anchor.href = url;\r\n        anchor.setAttribute(\"download\", fileName);\r\n        anchor.className = \"download-js-link\";\r\n        anchor.innerHTML = \"downloading...\";\r\n        anchor.style.display = \"none\";\r\n        document.body.appendChild(anchor);\r\n        setTimeout(function() {\r\n          anchor.click();\r\n          document.body.removeChild(anchor);\r\n          if(winMode===true){setTimeout(function(){ self.URL.revokeObjectURL(anchor.href);}, 250 );}\r\n        }, 66);\r\n        return true;\r\n      }\r\n\r\n      // handle non-a[download] safari as best we can:\r\n      if(/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\r\n        url=url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\r\n        if(!window.open(url)){ // popup blocked, offer direct download:\r\n          if(confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")){ location.href=url; }\r\n        }\r\n        return true;\r\n      }\r\n\r\n      //do iframe dataURL download (old ch+FF):\r\n      var f = document.createElement(\"iframe\");\r\n      document.body.appendChild(f);\r\n\r\n      if(!winMode){ // force a mime that will download:\r\n        url=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\r\n      }\r\n      f.src=url;\r\n      setTimeout(function(){ document.body.removeChild(f); }, 333);\r\n\r\n    }//end saver\r\n\r\n\r\n\r\n\r\n    if (navigator.msSaveBlob) { // IE10+ : (has Blob, but not a[download] or URL)\r\n      return navigator.msSaveBlob(blob, fileName);\r\n    }\r\n\r\n    if(self.URL){ // simple fast and modern way using Blob and URL:\r\n      saver(self.URL.createObjectURL(blob), true);\r\n    }else{\r\n      // handle non-Blob()+non-URL browsers:\r\n      if(typeof blob === \"string\" || blob.constructor===toString ){\r\n        try{\r\n          return saver( \"data:\" +  mimeType   + \";base64,\"  +  self.btoa(blob)  );\r\n        }catch(y){\r\n          return saver( \"data:\" +  mimeType   + \",\" + encodeURIComponent(blob)  );\r\n        }\r\n      }\r\n\r\n      // Blob but not URL support:\r\n      reader=new FileReader();\r\n      reader.onload=function(e){\r\n        saver(this.result);\r\n      };\r\n      reader.readAsDataURL(blob);\r\n    }\r\n    return true;\r\n  }; /* end download() */\r\n}));\r\n","const Constant = {};\r\nConstant.SYSTEM_EVENT_TYPE = {\r\n  MOUSE_MOVE: 'mouseMove'.toLocaleLowerCase(),\r\n  MOUSE_DOWN: 'mouseDown'.toLocaleLowerCase(),\r\n  MOUSE_UP: 'mouseUp'.toLocaleLowerCase(),\r\n  MOUSE_OVER: 'mouseOver'.toLocaleLowerCase(),\r\n  MOUSE_LEAVE: 'mouseLeave'.toLocaleLowerCase(),\r\n  MOUSE_WHEEL: 'mouseWheel'.toLocaleLowerCase(),\r\n  MOUSE_ENTER: 'mouseEnter'.toLocaleLowerCase(),\r\n  CLICK: 'click'.toLocaleLowerCase(),\r\n  KEY_DOWN: 'keyDown'.toLocaleLowerCase(),\r\n  KEY_UP: 'keyUp'.toLocaleLowerCase(),\r\n  DRAG_START: 'dragStart'.toLocaleLowerCase(),\r\n  SCROLL: 'scroll'.toLocaleLowerCase(),\r\n  RESIZE: 'resize'.toLocaleLowerCase(),\r\n  CHANGE: 'change'.toLocaleLowerCase(),\r\n  INPUT: 'input'.toLocaleLowerCase(),\r\n  VISIBILITY_CHANGE: 'visibilityChange'.toLocaleLowerCase(),\r\n};\r\nConstant.TABLE_EVENT_TYPE = {\r\n  CHANGE_HEIGHT: 'tableChangeHeight'.toLocaleLowerCase(),\r\n  CHANGE_WIDTH: 'tableChangeWidth'.toLocaleLowerCase(),\r\n  DATA_CHANGE: 'tableDataChange'.toLocaleLowerCase(),\r\n  SELECT_CHANGE: 'tableSelectChange'.toLocaleLowerCase(),\r\n  SELECT_DOWN: 'tableSelectDown'.toLocaleLowerCase(),\r\n  SELECT_OVER: 'tableSelectOver'.toLocaleLowerCase(),\r\n  SCALE_CHANGE: 'scaleChange'.toLocaleLowerCase(),\r\n};\r\nConstant.WORK_BODY_EVENT_TYPE = {\r\n  CHANGE_ACTIVE: 'workBodyChangeActive'.toLocaleLowerCase(),\r\n};\r\nConstant.MOUSE_POINTER_TYPE = {\r\n  SELECT_ONE_COLUMN: {\r\n    key: Symbol('选择一列'),\r\n    type: 's-resize',\r\n  },\r\n  SELECT_ONE_ROW: {\r\n    key: Symbol('选择一行'),\r\n    type: 'e-resize',\r\n  },\r\n  SELECT_CELL: {\r\n    key: Symbol('选择单元格'),\r\n    type: 'cell',\r\n  },\r\n  AUTO_FILL: {\r\n    key: Symbol('单元格内容自动填充'),\r\n    type: 'crosshair',\r\n  },\r\n  COL_RESIZE: {\r\n    key: Symbol('调整列宽'),\r\n    type: 'col-resize',\r\n  },\r\n  ROW_RESIZE: {\r\n    key: Symbol('调整行高'),\r\n    type: 'row-resize',\r\n  },\r\n};\r\n\r\nconst cssPrefix = 'x-sheet';\r\n\r\nconst XSheetVersion = 'X-Sheet 1.0.0-develop';\r\n\r\nexport { cssPrefix };\r\nexport { XSheetVersion };\r\nexport { Constant };\r\n","// eslint-disable-next-line no-unused-vars\n/* global navigator document window */\n\nfunction S4() {\n  // eslint-disable-next-line no-bitwise\n  return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n}\n\nconst alphabets = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\nconst DATA_TYPE = {\n  String: 1,\n  Boolean: 2,\n  Number: 3,\n  Object: 4,\n  Array: 5,\n  Function: 6,\n  Null: 7,\n  Undefined: 8,\n  Promise: 9,\n  GeneratorFunction: 10,\n  AsyncFunction: 11,\n  BigInt: 12,\n  Symbol: 13,\n  Un: 14,\n};\n\nlet throttleHandle = null;\n\nclass Utils {\n\n  static type(arg) {\n    const type = Object.prototype.toString.call(arg);\n    switch (type) {\n      case '[object Null]':\n        return DATA_TYPE.Null;\n      case '[object Undefined]':\n        return DATA_TYPE.Undefined;\n      case '[object String]':\n        return DATA_TYPE.String;\n      case '[object Boolean]':\n        return DATA_TYPE.Boolean;\n      case '[object Number]':\n        return DATA_TYPE.Number;\n      case '[object Function]':\n        return DATA_TYPE.Function;\n      case '[object Array]':\n        return DATA_TYPE.Array;\n      case '[object Promise]':\n        return DATA_TYPE.Promise;\n      case '[object GeneratorFunction]':\n        return DATA_TYPE.GeneratorFunction;\n      case '[object AsyncFunction]':\n        return DATA_TYPE.AsyncFunction;\n      case '[object BigInt]':\n        return DATA_TYPE.BigInt;\n      case '[object Symbol]':\n        return DATA_TYPE.Symbol;\n      default:\n        return DATA_TYPE.Un;\n    }\n  }\n\n  static cloneDeep(object) {\n    const json = JSON.stringify(object);\n    return JSON.parse(json);\n  }\n\n  static mergeDeep(object = {}, ...sources) {\n    if (Utils.isUnDef(object)) {\n      return {};\n    }\n    if (Utils.isUnDef(sources) || sources.length === 0) {\n      return object;\n    }\n    sources.forEach((source) => {\n      if (Utils.isUnDef(source)) return;\n      Object.keys(source).forEach((key) => {\n        const v = source[key];\n        if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean') {\n          object[key] = v;\n        } else if (typeof v !== 'function' && !Array.isArray(v) && Utils.isPlainObject(v)) {\n          object[key] = object[key] || {};\n          Utils.mergeDeep(object[key], v);\n        } else {\n          object[key] = v;\n        }\n      });\n    });\n    return object;\n  }\n\n  static copyProp(t, s) {\n    return Object.assign(t, s);\n  }\n\n  static isMac() {\n    return /macintosh|mac os x/i.test(navigator.userAgent);\n  }\n\n  static isWindows() {\n    return /windows|win32/i.test(navigator.userAgent);\n  }\n\n  static isEmptyObject(object) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in object) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (object.hasOwnProperty(key)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static isNotEmptyObject(object) {\n    return !Utils.isEmptyObject(object);\n  }\n\n  static isUnDef(e) {\n    return e === undefined || e === null;\n  }\n\n  static isNotUnDef(e) {\n    return !this.isUnDef(e);\n  }\n\n  static isNotZero(e) {\n    return e !== 0;\n  }\n\n  static isNumber(e) {\n    return /^(-?\\d+.\\d+)$|^(-?\\d+)$/.test(e);\n  }\n\n  static isFraction(e) {\n    return /^\\d+\\/\\d+$/.test(e);\n  }\n\n  static isFunction(e) {\n    const type = Utils.type(e);\n    return type === DATA_TYPE.Function;\n  }\n\n  static isArray(e) {\n    return Utils.type(e) === DATA_TYPE.Array;\n  }\n\n  static isBlank(s) {\n    if (Utils.isUnDef(s)) {\n      return true;\n    }\n    return s.toString().trim() === '';\n  }\n\n  static isPlainObject(obj) {\n    if (Utils.isUnDef(obj)) {\n      return false;\n    }\n    return Object.getPrototypeOf(obj) === Object.getPrototypeOf({});\n  }\n\n  static isString(obj) {\n    return Utils.type(obj) === DATA_TYPE.String;\n  }\n\n  static sum(objOrAry, cb = value => value) {\n    let total = 0;\n    let size = 0;\n    Object.keys(objOrAry).forEach((key) => {\n      total += cb(objOrAry[key], key);\n      size += 1;\n    });\n    return [total, size];\n  }\n\n  static rangeSum(min, max, cb) {\n    let s = 0;\n    for (let i = min; i < max; i += 1) {\n      s += cb(i);\n    }\n    return s;\n  }\n\n  static parseFloat(val) {\n    if (Utils.isNumber(val)) return parseFloat(val);\n    return 0;\n  }\n\n  static parseInt(val) {\n    if (Utils.isNumber(val)) return parseInt(val, 10);\n    return 0;\n  }\n\n  static stringAt(index) {\n    let str = '';\n    let idx = index;\n    while (idx >= alphabets.length) {\n      idx /= alphabets.length;\n      idx -= 1;\n      str += alphabets[parseInt(idx, 10) % alphabets.length];\n    }\n    const last = index % alphabets.length;\n    str += alphabets[last];\n    return str;\n  }\n\n  static indexAt(str) {\n    let ret = 0;\n    for (let i = 0; i < str.length - 1; i += 1) {\n      const idx = str.charCodeAt(i) - 65;\n      const expoNet = str.length - 1 - i;\n      ret += (alphabets.length ** expoNet) + (alphabets.length * idx);\n    }\n    ret += str.charCodeAt(str.length - 1) - 65;\n    return ret;\n  }\n\n  static expr2xy(src) {\n    let x = '';\n    let y = '';\n    for (let i = 0; i < src.length; i += 1) {\n      if (src.charAt(i) >= '0' && src.charAt(i) <= '9') {\n        y += src.charAt(i);\n      } else {\n        x += src.charAt(i);\n      }\n    }\n    return [Utils.indexAt(x), parseInt(y, 10) - 1];\n  }\n\n  static xy2expr(x, y) {\n    return `${Utils.stringAt(x)}${y + 1}`;\n  }\n\n  static expr2expr(src, xn, yn) {\n    const [x, y] = Utils.expr2xy(src);\n    return Utils.xy2expr(x + xn, y + yn);\n  }\n\n  static rangeReduceIf(min, max, initS, initV, ifv, getV) {\n    let s = initS;\n    let v = initV;\n    let i = min;\n    for (; i < max; i += 1) {\n      if (s >= ifv) break;\n      v = getV(i);\n      s += v;\n    }\n    return [i, s - v, v];\n  }\n\n  static throttle(cb = () => {}, time = 500) {\n    if (throttleHandle) clearTimeout(throttleHandle);\n    throttleHandle = setTimeout(cb, time);\n  }\n\n  static contrastDifference(target, src) {\n    const result = {};\n    if (Utils.isUnDef(target) || Utils.isUnDef(src)) {\n      return result;\n    }\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in target) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (target.hasOwnProperty(key)) {\n        const sv = src[key];\n        const tv = target[key];\n        if (!Utils.isUnDef(sv) && !Utils.isUnDef(tv) && !Utils.equal(sv, tv)) {\n          result[key] = target[key];\n        }\n      }\n    }\n    return result;\n  }\n\n  static minIf(v, min) {\n    if (v < min) return min;\n    return v;\n  }\n\n  static maxIf(v, max) {\n    if (v > max) return max;\n    return v;\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  static equal(x, y) {\n    let i;\n    let l;\n    let leftChain;\n    let rightChain;\n    function compare2Objects(x, y) {\n      let p;\n      // eslint-disable-next-line no-restricted-globals\n      if (isNaN(x) && isNaN(y) && typeof x === 'number' && typeof y === 'number') {\n        return true;\n      }\n      if (x === y) {\n        return true;\n      }\n      if ((typeof x === 'function' && typeof y === 'function')\n        || (x instanceof Date && y instanceof Date)\n        || (x instanceof RegExp && y instanceof RegExp)\n        || (x instanceof String && y instanceof String)\n        || (x instanceof Number && y instanceof Number)) {\n        return x.toString() === y.toString();\n      }\n      if (!(x instanceof Object && y instanceof Object)) {\n        return false;\n      }\n      // eslint-disable-next-line no-prototype-builtins\n      if (x.isPrototypeOf(y) || y.isPrototypeOf(x)) {\n        return false;\n      }\n      if (x.constructor !== y.constructor) {\n        return false;\n      }\n      if (x.prototype !== y.prototype) {\n        return false;\n      }\n      if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1) {\n        return false;\n      }\n      // eslint-disable-next-line guard-for-in,no-restricted-syntax\n      for (p in y) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n          return false;\n        }\n        if (typeof y[p] !== typeof x[p]) {\n          return false;\n        }\n      }\n      // eslint-disable-next-line guard-for-in,no-restricted-syntax\n      for (p in x) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n          return false;\n        } if (typeof y[p] !== typeof x[p]) {\n          return false;\n        }\n        switch (typeof (x[p])) {\n          case 'object':\n          case 'function':\n            leftChain.push(x);\n            rightChain.push(y);\n            if (!compare2Objects(x[p], y[p])) {\n              return false;\n            }\n            leftChain.pop();\n            rightChain.pop();\n            break;\n          default:\n            if (x[p] !== y[p]) {\n              return false;\n            }\n            break;\n        }\n      }\n      return true;\n    }\n    if (arguments.length < 1) {\n      return true;\n    }\n    // eslint-disable-next-line no-plusplus\n    for (i = 1, l = arguments.length; i < l; i++) {\n      leftChain = [];\n      rightChain = [];\n      // eslint-disable-next-line prefer-rest-params\n      if (!compare2Objects(arguments[0], arguments[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static arrayIncludeArray(a1, a2) {\n    if (Utils.isUnDef(a1) || Utils.isUnDef(a2)) {\n      return false;\n    }\n    if (a1.length !== a2.length) {\n      return false;\n    }\n    for (let i = 0; i < a1.length; i += 1) {\n      if (a2.indexOf(a1[i]) === -1) return false;\n    }\n    return true;\n  }\n\n  static keepLastIndex(obj) {\n    if (window.getSelection) {\n      obj.focus();\n      const range = window.getSelection();\n      range.selectAllChildren(obj);\n      range.collapseToEnd();\n    } else if (document.selection) {\n      const range = document.selection.createRange();\n      range.moveToElementText(obj);\n      range.collapse(false);\n      range.select();\n    }\n  }\n\n  static trim(s) {\n    if (this.isBlank(s)) return '';\n    return s.trim();\n  }\n\n  static now() {\n    return Date.now().toString();\n  }\n\n  static viewPort() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  }\n\n  static exitFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    }\n  }\n\n  static fullScreen(element) {\n    if (element.el) {\n      element = element.el;\n    }\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.msRequestFullscreen) {\n      element.msRequestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n      element.webkitRequestFullscreen();\n    }\n  }\n\n  static isFull() {\n    return !!(document.webkitIsFullScreen || document.mozFullScreen\n      || document.msFullscreenElement || document.fullscreenElement);\n  }\n\n  static uuid() {\n    return (`${S4() + S4()}${S4()}${S4()}${S4()}${S4()}${S4()}${S4()}`);\n  }\n}\n\nUtils.EMPTY = '';\nUtils.Nul = null;\nUtils.Undef = undefined;\n\nexport { Utils };\n","/* global document CustomEvent window */\r\n\r\nimport { Utils } from '../utils/Utils';\r\n\r\nclass Element {\r\n\r\n  constructor(tag, className = '') {\r\n    if (typeof tag === 'string') {\r\n      this.el = document.createElement(tag);\r\n      this.el.className = className;\r\n    } else {\r\n      this.el = tag;\r\n    }\r\n    this.el.data = [];\r\n  }\r\n\r\n  data(key, value) {\r\n    if (value !== undefined) {\r\n      this.el.data[key] = value;\r\n      return this;\r\n    }\r\n    return this.el.data[key];\r\n  }\r\n\r\n  on(eventNames, handler) {\r\n    const [fen, ...oen] = eventNames.split('.');\r\n    let eventName = fen;\r\n    if (eventName === 'mousewheel' && /Firefox/i.test(window.navigator.userAgent)) {\r\n      eventName = 'DOMMouseScroll';\r\n    }\r\n    this.el.addEventListener(eventName, (evt) => {\r\n      handler(evt);\r\n      for (let i = 0; i < oen.length; i += 1) {\r\n        const k = oen[i];\r\n        if (k === 'left' && evt.button !== 0) {\r\n          return;\r\n        }\r\n        if (k === 'right' && evt.button !== 2) {\r\n          return;\r\n        }\r\n        if (k === 'stop') {\r\n          evt.stopPropagation();\r\n        }\r\n      }\r\n    });\r\n    return this;\r\n  }\r\n\r\n  offset(value) {\r\n    if (value !== undefined) {\r\n      Object.keys(value).forEach((k) => {\r\n        this.css(k, `${value[k]}px`);\r\n      });\r\n      return this;\r\n    }\r\n    const {\r\n      offsetTop, offsetLeft, offsetHeight, offsetWidth,\r\n    } = this.el;\r\n    return {\r\n      top: offsetTop,\r\n      left: offsetLeft,\r\n      height: offsetHeight,\r\n      width: offsetWidth,\r\n    };\r\n  }\r\n\r\n  scroll(v) {\r\n    const { el } = this;\r\n    if (v !== undefined) {\r\n      if (v.left !== undefined) {\r\n        el.scrollLeft = v.left;\r\n      }\r\n      if (v.top !== undefined) {\r\n        el.scrollTop = v.top;\r\n      }\r\n    }\r\n    return { left: el.scrollLeft, top: el.scrollTop };\r\n  }\r\n\r\n  scrollTop() {\r\n    return this.el.scrollTop;\r\n  }\r\n\r\n  clientHeight() {\r\n    return this.el.clientHeight;\r\n  }\r\n\r\n  box() {\r\n    return this.el.getBoundingClientRect();\r\n  }\r\n\r\n  parent() {\r\n    return new Element(this.el.parentNode);\r\n  }\r\n\r\n  children(...args) {\r\n    if (arguments.length === 0) {\r\n      return this.el.childNodes;\r\n    }\r\n    args.forEach(ele => this.child(ele));\r\n    return this;\r\n  }\r\n\r\n  first() {\r\n    return this.el.firstChild;\r\n  }\r\n\r\n  last() {\r\n    return this.el.lastChild;\r\n  }\r\n\r\n  remove(ele) {\r\n    return this.el.removeChild(ele.el || ele);\r\n  }\r\n\r\n  prepend(ele) {\r\n    const { el } = this;\r\n    if (el.children.length > 0) {\r\n      el.insertBefore(ele, el.firstChild);\r\n    } else {\r\n      el.appendChild(ele);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  prev() {\r\n    return this.el.previousSibling;\r\n  }\r\n\r\n  next() {\r\n    return this.el.nextSibling;\r\n  }\r\n\r\n  child(arg) {\r\n    let ele = arg;\r\n    if (typeof arg === 'string') {\r\n      ele = document.createTextNode(arg);\r\n    } else if (arg instanceof Element) {\r\n      ele = arg.el;\r\n    }\r\n    this.el.appendChild(ele);\r\n    return this;\r\n  }\r\n\r\n  contains(ele) {\r\n    return this.el.contains(ele);\r\n  }\r\n\r\n  className(v) {\r\n    if (v !== undefined) {\r\n      this.el.className = v;\r\n      return this;\r\n    }\r\n    return this.el.className;\r\n  }\r\n\r\n  addClass(name) {\r\n    this.el.classList.add(name);\r\n    return this;\r\n  }\r\n\r\n  hasClass(name) {\r\n    return this.el.classList.contains(name);\r\n  }\r\n\r\n  removeClass(name) {\r\n    this.el.classList.remove(name);\r\n    return this;\r\n  }\r\n\r\n  toggle(cls = 'active') {\r\n    return this.toggleClass(cls);\r\n  }\r\n\r\n  toggleClass(name) {\r\n    return this.el.classList.toggle(name);\r\n  }\r\n\r\n  active(flag = true, cls = 'active') {\r\n    if (flag) this.addClass(cls);\r\n    else this.removeClass(cls);\r\n    return this;\r\n  }\r\n\r\n  checked(flag = true) {\r\n    this.active(flag, 'checked');\r\n    return this;\r\n  }\r\n\r\n  disabled(flag = true) {\r\n    if (flag) this.addClass('disabled');\r\n    else this.removeClass('disabled');\r\n    return this;\r\n  }\r\n\r\n  attr(key, value) {\r\n    if (value !== undefined) {\r\n      this.el.setAttribute(key, value);\r\n    } else {\r\n      if (typeof key === 'string') {\r\n        return this.el.getAttribute(key);\r\n      }\r\n      Object.keys(key).forEach((k) => {\r\n        this.el.setAttribute(k, key[k]);\r\n      });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  removeAttr(key) {\r\n    this.el.removeAttribute(key);\r\n    return this;\r\n  }\r\n\r\n  html(content) {\r\n    if (content !== undefined) {\r\n      this.el.innerHTML = content;\r\n      return this;\r\n    }\r\n    return this.el.innerHTML;\r\n  }\r\n\r\n  val(v) {\r\n    if (v !== undefined) {\r\n      this.el.value = v;\r\n      return this;\r\n    }\r\n    return this.el.value;\r\n  }\r\n\r\n  cssRemoveKeys(...keys) {\r\n    keys.forEach(k => this.el.style.removeProperty(k));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * set or get style attr\r\n   * @param name\r\n   * @param value\r\n   * @returns {String|Element}\r\n   */\r\n  css(name, value) {\r\n    if (value === undefined && typeof name !== 'string') {\r\n      Object.keys(name).forEach((k) => {\r\n        this.el.style[k] = name[k];\r\n      });\r\n      return this;\r\n    }\r\n    if (value !== undefined) {\r\n      this.el.style[name] = value;\r\n      return this;\r\n    }\r\n    return this.el.style[name];\r\n  }\r\n\r\n  computedStyle() {\r\n    return window.getComputedStyle(this.el, null);\r\n  }\r\n\r\n  show() {\r\n    const style = this.computedStyle();\r\n    if (style && style.display !== 'block') {\r\n      this.css('display', 'block');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  hide() {\r\n    const style = this.computedStyle();\r\n    if (style && style.display !== 'none') {\r\n      this.css('display', 'none');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  display(on) {\r\n    if (on) this.show(); else this.hide();\r\n  }\r\n\r\n  text(val) {\r\n    if (val === undefined) return this.el.innerText;\r\n    this.el.innerText = val;\r\n    return val;\r\n  }\r\n\r\n  sibling() {\r\n    let sibling = this.el;\r\n    const result = [];\r\n    // eslint-disable-next-line no-cond-assign\r\n    while ((sibling = sibling.previousElementSibling) !== null) result.push(new Element(sibling));\r\n    sibling = this.el;\r\n    // eslint-disable-next-line no-cond-assign\r\n    while ((sibling = sibling.nextElementSibling) !== null) result.push(new Element(sibling));\r\n    return result;\r\n  }\r\n\r\n  position() {\r\n    let top = 0; let left = 0; const right = 0; const bottom = 0;\r\n    if (this.el.style.position) {\r\n      if (this.el.top) {\r\n        top = this.el.style.top\r\n          .replace('%', '')\r\n          .repeat('px', '');\r\n      }\r\n      if (this.el.left) {\r\n        left = this.el.style.left\r\n          .replace('%', '')\r\n          .repeat('px', '');\r\n      }\r\n      if (this.el.right) {\r\n        top = this.el.style.right\r\n          .replace('%', '')\r\n          .repeat('px', '');\r\n      }\r\n      if (this.el.bottom) {\r\n        top = this.el.style.bottom\r\n          .replace('%', '')\r\n          .repeat('px', '');\r\n      }\r\n    }\r\n    return {\r\n      top: Utils.parseFloat(top),\r\n      left: Utils.parseFloat(left),\r\n      right: Utils.parseFloat(right),\r\n      bottom: Utils.parseFloat(bottom),\r\n    };\r\n  }\r\n\r\n  trigger(type, message) {\r\n    const event = new CustomEvent(type, {\r\n      detail: message,\r\n      bubbles: true,\r\n      cancelable: false,\r\n    });\r\n    this.el.dispatchEvent(event);\r\n  }\r\n\r\n  focus() {\r\n    this.el.focus();\r\n  }\r\n\r\n  find(select) {\r\n    const result = this.el.querySelectorAll(select);\r\n    if (result && result.length === 1) {\r\n      return new Element(result[0]);\r\n    }\r\n    const eleArray = [];\r\n    if (result) {\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      for (const item of result) {\r\n        eleArray.push(new Element(item));\r\n      }\r\n    }\r\n    return eleArray;\r\n  }\r\n\r\n  isChild(target) {\r\n    let targetEl = target || target.el;\r\n    while (targetEl !== undefined && targetEl !== null && targetEl !== document.body) {\r\n      if (targetEl === this.el) return true;\r\n      targetEl = targetEl.parentNode;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nconst h = (tag, className = '') => new Element(tag, className);\r\n\r\nexport {\r\n  Element,\r\n  h,\r\n};\r\n","import { Element } from './Element';\r\nimport { cssPrefix } from '../const/Constant';\r\n\r\nclass Widget extends Element {\r\n\r\n  constructor(className = '', nodeType = \"div\") {\r\n    super(nodeType, `${cssPrefix}-widget ${className}`);\r\n  }\r\n\r\n  computeEventXy(event, element = this) {\r\n    const { top, left } = element.box();\r\n    return {\r\n      x: event.pageX - left,\r\n      y: event.pageY - top,\r\n    };\r\n  }\r\n\r\n  computeWidgetXy(element) {\r\n    if (!element) {\r\n      return {\r\n        x: 0,\r\n        y: 0,\r\n      };\r\n    }\r\n    const { top: eleTop, left: eleLeft } = element.box();\r\n    const { top, left } = this.box();\r\n    return {\r\n      x: eleLeft - left,\r\n      y: eleTop - top,\r\n    };\r\n  }\r\n\r\n  attach(widget) {\r\n    this.children(widget);\r\n    widget.onAttach(this);\r\n  }\r\n\r\n  onAttach() {  }\r\n}\r\n\r\nexport { Widget };\r\n","import { Widget } from './Widget';\r\nimport { cssPrefix } from '../const/Constant';\r\n\r\nclass Layer extends Widget {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-layer ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {Layer}\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { Layer } from '../Layer';\r\n\r\nclass VerticalLayer extends Layer {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-vertical-layer`);\r\n    this.options = Utils.mergeDeep({\r\n      style: {},\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { VerticalLayer };\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { Layer } from '../Layer';\r\n\r\nclass VerticalLayerElement extends Layer {\r\n  constructor(options) {\r\n    super(`${cssPrefix}-vertical-layer-element`);\r\n    this.options = Utils.mergeDeep({\r\n      style: {\r\n        flexGrow: '0',\r\n      },\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { VerticalLayerElement };\r\n","import { Widget } from '../../../lib/Widget';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { h } from '../../../lib/Element';\r\n\r\nclass Icon extends Widget {\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-icon`);\r\n    this.iconNameEl = h('div', `${cssPrefix}-icon-img ${className}`);\r\n    this.child(this.iconNameEl);\r\n  }\r\n\r\n  setWidth(width) {\r\n    this.iconNameEl.css('width', `${width}px`);\r\n  }\r\n\r\n  setHeight(height) {\r\n    this.iconNameEl.css('height', `${height}px`);\r\n  }\r\n}\r\n\r\nexport { Icon };\r\n","import { Widget } from '../../../../lib/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass Item extends Widget {\r\n  constructor(className) {\r\n    super(`${cssPrefix}-tools-item ${className}`);\r\n  }\r\n}\r\n\r\nexport { Item };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass Undo extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-undo`);\r\n    this.icon = new Icon('undo');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { Undo };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass Redo extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-redo`);\r\n    this.icon = new Icon('redo');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { Redo };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\n\r\nclass PaintFormat extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-point-format`);\r\n    this.icon = new Icon('point-format');\r\n    this.sheets = [];\r\n    this.children(this.icon);\r\n  }\r\n\r\n  addSheet(sheet) {\r\n    this.sheets.push(sheet);\r\n  }\r\n\r\n  removeSheet(sheet) {\r\n    for (let i = 0; i < this.sheets.length; i += 1) {\r\n      if (this.sheets[i] === sheet) {\r\n        this.sheets.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  includeSheet(sheet) {\r\n    for (let i = 0; i < this.sheets.length; i += 1) {\r\n      if (this.sheets[i] === sheet) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport { PaintFormat };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\n\r\nclass ClearFormat extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-clear-format`);\r\n    this.icon = new Icon('clear-format');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { ClearFormat };\r\n","import { Item } from './Item';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\nimport { h } from '../../../../lib/Element';\r\nimport { Icon } from '../Icon';\r\n\r\nclass DropDownItem extends Item {\r\n  constructor(className) {\r\n    super(`${cssPrefix}-tools-drop-down-item ${className}`);\r\n    this.drop = h('div', `${cssPrefix}-tools-drop-down-item-mark`);\r\n    this.title = h('div', `${cssPrefix}-tools-drop-down-item-title`);\r\n    this.drop.children(new Icon('arrow-down'));\r\n    this.children(this.title);\r\n    this.children(this.drop);\r\n  }\r\n\r\n  setTitle(text) {\r\n    this.title.text(text);\r\n  }\r\n\r\n  setIcon(icon) {\r\n    this.title.html('');\r\n    this.title.children(icon);\r\n  }\r\n\r\n  setWidth(px) {\r\n    this.title.css('width', `${px}px`);\r\n  }\r\n\r\n  setEllipsis() {\r\n    this.title.css('overflow', 'hidden');\r\n    this.title.css('text-overflow', 'ellipsis');\r\n    this.title.css('white-space', 'nowrap');\r\n  }\r\n\r\n  removeEllipsis() {\r\n    this.title.cssRemoveKeys('overflow');\r\n    this.title.cssRemoveKeys('text-overflow');\r\n    this.title.cssRemoveKeys('white-space');\r\n  }\r\n}\r\n\r\nexport { DropDownItem };\r\n","import { Constant } from '../const/Constant';\r\n\r\nclass EventBind {\r\n  static bind(target, name, fn) {\r\n    if (Array.isArray(target)) {\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      for (const item of target) {\r\n        (item.el || item).addEventListener(name, fn);\r\n      }\r\n    } else {\r\n      (target.el || target).addEventListener(name, fn);\r\n    }\r\n  }\r\n\r\n  static unbind(target, name, fn) {\r\n    if (Array.isArray(target)) {\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      for (const item of target) {\r\n        (item.el || item).addEventListener(name, fn);\r\n      }\r\n    } else {\r\n      (target.el || target).removeEventListener(name, fn);\r\n    }\r\n  }\r\n\r\n  static mouseMoveUp(target, moveFunc = () => {}, upFunc = () => {}) {\r\n    const xEvtUp = (evt) => {\r\n      EventBind.unbind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, moveFunc);\r\n      EventBind.unbind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp);\r\n      upFunc(evt);\r\n    };\r\n    EventBind.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, moveFunc);\r\n    EventBind.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp);\r\n  }\r\n\r\n  static dbClick(target, func = () => {}) {\r\n    let t = 0;\r\n    EventBind.bind(target, Constant.SYSTEM_EVENT_TYPE.CLICK, (e) => {\r\n      const n = Date.now();\r\n      if (n - t <= 300) {\r\n        func(e);\r\n        t = 0;\r\n      } else {\r\n        t = n;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport { EventBind };\r\n","/* global document */\r\nimport { Widget } from '../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { h } from '../../lib/Element';\r\nimport { Utils } from '../../utils/Utils';\r\n\r\nimport { EventBind } from '../../utils/EventBind';\r\n\r\nclass ScrollBarX extends Widget {\r\n\r\n  constructor(option) {\r\n    super(`${cssPrefix}-scroll-bar-x`);\r\n    this.option = Utils.mergeDeep({\r\n      style: {},\r\n      scroll: to => to,\r\n    }, option);\r\n    this.lastBut = h('div', `${cssPrefix}-scroll-bar-x-last-but`);\r\n    this.nextBut = h('div', `${cssPrefix}-scroll-bar-x-next-but`);\r\n    this.content = h('div', `${cssPrefix}-scroll-bar-x-content`);\r\n    this.block = h('div', `${cssPrefix}-scroll-bar-x-block`);\r\n    this.content.children(this.block);\r\n    this.children(...[\r\n      this.lastBut,\r\n      this.nextBut,\r\n      this.content,\r\n    ]);\r\n    this.blockLeft = 0;\r\n    this.maxBlockLeft = 0;\r\n    this.blockWidth = 0;\r\n    this.minBlockWidth = 20;\r\n    this.scrollTo = 0;\r\n    this.contentWidth = 0;\r\n    this.viewPortWidth = 0;\r\n    this.isHide = true;\r\n    this.css(this.option.style);\r\n    this.hide();\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n  }\r\n\r\n  bind() {\r\n    this.block.on(Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (evt1) => {\r\n      if (evt1.button !== 0) return;\r\n      const downEventXy = this.computeEventXy(evt1, this.block);\r\n      EventBind.mouseMoveUp(h(document), (evt2) => {\r\n        // 计算移动的距离\r\n        const moveEventXy = this.computeEventXy(evt2, this.content);\r\n        let left = moveEventXy.x - downEventXy.x;\r\n        if (left < 0) left = 0;\r\n        if (left > this.maxBlockLeft) left = this.maxBlockLeft;\r\n        // 计算滑动的距离\r\n        this.blockLeft = left;\r\n        this.scrollTo = this.computeScrollTo(this.blockLeft);\r\n        this.block.css('left', `${left}px`);\r\n        this.option.scroll(this.scrollTo);\r\n        evt2.stopPropagation();\r\n        evt2.preventDefault();\r\n      });\r\n      evt1.stopPropagation();\r\n      evt1.preventDefault();\r\n    });\r\n  }\r\n\r\n  setSize(viewPortWidth, contentWidth) {\r\n    if (viewPortWidth < contentWidth) {\r\n      this.isHide = false;\r\n      this.show();\r\n      // 计算滑块宽度\r\n      const contentBox = this.content.box();\r\n      const blockWidth = viewPortWidth / contentWidth * contentBox.width;\r\n      this.blockWidth = blockWidth < this.minBlockWidth ? this.minBlockWidth : blockWidth;\r\n      this.viewPortWidth = viewPortWidth;\r\n      this.contentWidth = contentWidth;\r\n      this.maxBlockLeft = contentBox.width - this.blockWidth;\r\n      this.block.css('width', `${this.blockWidth}px`);\r\n      // 计算滑块位置\r\n      const blockLeft = (this.scrollTo / (contentWidth - viewPortWidth)) * this.maxBlockLeft;\r\n      this.blockLeft = blockLeft > this.maxBlockLeft ? this.maxBlockLeft : blockLeft;\r\n      this.scrollTo = this.computeScrollTo(this.blockLeft);\r\n      this.block.css('left', `${this.blockLeft}px`);\r\n    } else {\r\n      this.isHide = true;\r\n      this.hide();\r\n      this.option.scroll(0);\r\n    }\r\n  }\r\n\r\n  scrollMove(move) {\r\n    let to = move;\r\n    const maxTo = this.contentWidth - this.viewPortWidth;\r\n    if (to > maxTo) to = maxTo; else if (to < 0) to = 0;\r\n    const blockLeft = (to / (this.contentWidth - this.viewPortWidth)) * this.maxBlockLeft;\r\n    this.blockLeft = blockLeft > this.maxBlockLeft ? this.maxBlockLeft : blockLeft;\r\n    if (this.scrollTo !== to && this.isHide === false) {\r\n      this.scrollTo = to;\r\n      this.block.css('left', `${this.blockLeft}px`);\r\n      this.option.scroll(this.scrollTo);\r\n    }\r\n  }\r\n\r\n  computeScrollTo(move) {\r\n    return (move / this.maxBlockLeft) * (this.contentWidth - this.viewPortWidth);\r\n  }\r\n}\r\n\r\nexport { ScrollBarX };\r\n","/* global document */\r\nimport { Widget } from '../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { h } from '../../lib/Element';\r\n\r\nimport { Utils } from '../../utils/Utils';\r\nimport { EventBind } from '../../utils/EventBind';\r\n\r\nclass ScrollBarY extends Widget {\r\n\r\n  constructor(option) {\r\n    super(`${cssPrefix}-scroll-bar-y`);\r\n    this.option = Utils.mergeDeep({\r\n      style: {},\r\n      scroll: to => to,\r\n    }, option);\r\n    this.lastBut = h('div', `${cssPrefix}-scroll-bar-y-last-but`);\r\n    this.nextBut = h('div', `${cssPrefix}-scroll-bar-y-next-but`);\r\n    this.content = h('div', `${cssPrefix}-scroll-bar-y-content`);\r\n    this.block = h('div', `${cssPrefix}-scroll-bar-y-block`);\r\n    this.content.children(this.block);\r\n    this.children(...[\r\n      this.lastBut,\r\n      this.nextBut,\r\n      this.content,\r\n    ]);\r\n    this.blockTop = 0;\r\n    this.maxBlockTop = 0;\r\n    this.blockHeight = 0;\r\n    this.minBlockHeight = 20;\r\n    this.scrollTo = 0;\r\n    this.contentHeight = 0;\r\n    this.viewPortHeight = 0;\r\n    this.isHide = true;\r\n    this.css(this.option.style);\r\n    this.hide();\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n  }\r\n\r\n  bind() {\r\n    EventBind.bind(this.block, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (evt1) => {\r\n      if (evt1.button !== 0) return;\r\n      const downEventXy = this.computeEventXy(evt1, this.block);\r\n      EventBind.mouseMoveUp(h(document), (evt2) => {\r\n        // 计算移动的距离\r\n        const moveEventXy = this.computeEventXy(evt2, this.content);\r\n        let top = moveEventXy.y - downEventXy.y;\r\n        if (top < 0) top = 0;\r\n        if (top > this.maxBlockTop) top = this.maxBlockTop;\r\n        // 计算滑动的距离\r\n        this.blockTop = top;\r\n        this.scrollTo = this.computeScrollTo(this.blockTop);\r\n        this.block.css('top', `${top}px`);\r\n        this.option.scroll(this.scrollTo);\r\n        evt2.stopPropagation();\r\n        evt2.preventDefault();\r\n      });\r\n    });\r\n  }\r\n\r\n  setSize(viewPortHeight, contentHeight) {\r\n    if (viewPortHeight < contentHeight) {\r\n      this.isHide = false;\r\n      this.show();\r\n      // 计算滑块高度\r\n      const contentBox = this.content.box();\r\n      const blockHeight = viewPortHeight / contentHeight * contentBox.height;\r\n      this.blockHeight = blockHeight < this.minBlockHeight ? this.minBlockHeight : blockHeight;\r\n      this.viewPortHeight = viewPortHeight;\r\n      this.contentHeight = contentHeight;\r\n      this.maxBlockTop = contentBox.height - this.blockHeight;\r\n      this.block.css('height', `${this.blockHeight}px`);\r\n      // 计算滑块位置\r\n      const blockTop = (this.scrollTo / (contentHeight - viewPortHeight)) * this.maxBlockTop;\r\n      this.blockTop = blockTop > this.maxBlockTop ? this.maxBlockTop : blockTop;\r\n      this.scrollTo = this.computeScrollTo(this.blockTop);\r\n      this.block.css('top', `${this.blockTop}px`);\r\n    } else {\r\n      this.isHide = true;\r\n      this.hide();\r\n      this.option.scroll(0);\r\n    }\r\n  }\r\n\r\n  scrollMove(move) {\r\n    let to = move;\r\n    const maxTo = this.contentHeight - this.viewPortHeight;\r\n    if (to > maxTo) to = maxTo; else if (to < 0) to = 0;\r\n    const blockTop = (to / (this.contentHeight - this.viewPortHeight)) * this.maxBlockTop;\r\n    this.blockTop = blockTop > this.maxBlockTop ? this.maxBlockTop : blockTop;\r\n    if (this.scrollTo !== to && this.isHide === false) {\r\n      this.scrollTo = to;\r\n      this.block.css('top', `${this.blockTop}px`);\r\n      this.option.scroll(this.scrollTo);\r\n    }\r\n  }\r\n\r\n  computeScrollTo(move) {\r\n    return (move / this.maxBlockTop) * (this.contentHeight - this.viewPortHeight);\r\n  }\r\n\r\n}\r\n\r\nexport { ScrollBarY };\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { Layer } from '../Layer';\r\n\r\nclass HorizontalLayerElement extends Layer {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-horizontal-layer-element`);\r\n    this.options = Utils.mergeDeep({\r\n      style: {\r\n        flexGrow: '0',\r\n      },\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { HorizontalLayerElement };\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { Layer } from '../Layer';\r\n\r\nclass HorizontalLayer extends Layer {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-horizontal-layer`);\r\n    this.options = Utils.mergeDeep({\r\n      style: {},\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { HorizontalLayer };\r\n","/* global window */\r\nimport { Widget } from '../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { h } from '../../lib/Element';\r\nimport { ScrollBarX } from '../scrollbar/ScrollBarX';\r\nimport { ScrollBarY } from '../scrollbar/ScrollBarY';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { HorizontalLayerElement } from '../../lib/layer/HorizontalLayerElement';\r\nimport { HorizontalLayer } from '../../lib/layer/HorizontalLayer';\r\nimport { VerticalLayer } from '../../lib/layer/VerticalLayer';\r\nimport { VerticalLayerElement } from '../../lib/layer/VerticalLayerElement';\r\nimport { EventBind } from '../../utils/EventBind';\r\n\r\nconst EL_POPUP_POSITION = {\r\n  TOP: 1,\r\n  LEFT: 2,\r\n  BOTTOM: 3,\r\n  RIGHT: 4,\r\n};\r\n\r\nconst POOL = [];\r\n\r\nlet root = null;\r\n\r\nclass ElPopUp extends Widget {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-el-pop-up`);\r\n    POOL.push(this);\r\n    this.options = Utils.mergeDeep({\r\n      position: EL_POPUP_POSITION.BOTTOM,\r\n      el: null,\r\n    }, options);\r\n    this.off = true;\r\n\r\n    this.content = new Widget(`${cssPrefix}-el-pop-up-content`);\r\n    this.scrollBarX = new ScrollBarX();\r\n    this.scrollBarY = new ScrollBarY();\r\n\r\n    // 内容\r\n    const contentLayer = new HorizontalLayerElement({\r\n      style: {\r\n        flexGrow: 1,\r\n      },\r\n    });\r\n    contentLayer.children(this.content);\r\n\r\n    // Y 滚动条\r\n    const scrollBarYLayer = new HorizontalLayerElement({\r\n      style: {\r\n        overflow: 'inherit',\r\n      },\r\n    });\r\n    scrollBarYLayer.children(this.scrollBarY);\r\n\r\n    const horizontalLayer = new HorizontalLayer();\r\n    horizontalLayer.children(contentLayer);\r\n    horizontalLayer.children(scrollBarYLayer);\r\n\r\n    // 内容 & Y 滚动条\r\n    const contentVerticalLayer = new VerticalLayerElement(horizontalLayer);\r\n    contentVerticalLayer.children(horizontalLayer);\r\n\r\n    // X 滚动条\r\n    const scrollBarXVerticalLayer = new VerticalLayerElement();\r\n    scrollBarXVerticalLayer.children(this.scrollBarX);\r\n\r\n    const verticalLayer = new VerticalLayer();\r\n    verticalLayer.children(contentVerticalLayer);\r\n    verticalLayer.children(scrollBarXVerticalLayer);\r\n    super.children(verticalLayer);\r\n\r\n    this.bind();\r\n  }\r\n\r\n  bind() {\r\n    EventBind.bind(window, Constant.SYSTEM_EVENT_TYPE.RESIZE, () => {\r\n      this.position();\r\n      this.scrollbar();\r\n    });\r\n  }\r\n\r\n  children(...args) {\r\n    this.content.children(...args);\r\n  }\r\n\r\n  position() {\r\n    const { content } = this;\r\n    const { el, position } = this.options;\r\n    const elBox = el.box();\r\n    const contentBox = content.box();\r\n    let { top, left } = elBox;\r\n    switch (position) {\r\n      case EL_POPUP_POSITION.TOP:\r\n        top = elBox.top - contentBox.height;\r\n        break;\r\n      case EL_POPUP_POSITION.LEFT:\r\n        left = elBox.left - contentBox.width;\r\n        break;\r\n      case EL_POPUP_POSITION.RIGHT:\r\n        left = elBox.left + elBox.width;\r\n        break;\r\n      case EL_POPUP_POSITION.BOTTOM:\r\n        top = elBox.top + elBox.height;\r\n        break;\r\n      default: break;\r\n    }\r\n    const maxWidth = window.innerWidth;\r\n    const maxHeight = window.innerHeight;\r\n    if (left < 0 || left + contentBox.width > maxWidth) {\r\n      // 左右颠倒\r\n      switch (position) {\r\n        case EL_POPUP_POSITION.LEFT:\r\n          left = elBox.left + elBox.width;\r\n          break;\r\n        case EL_POPUP_POSITION.RIGHT:\r\n          left = elBox.left - contentBox.width;\r\n          break;\r\n        default: break;\r\n      }\r\n    }\r\n    if (top < 0 || top + contentBox.height > maxHeight) {\r\n      // 上下颠倒\r\n      switch (position) {\r\n        case EL_POPUP_POSITION.TOP:\r\n          top = elBox.top + elBox.height;\r\n          break;\r\n        case EL_POPUP_POSITION.BOTTOM:\r\n          top = elBox.top - contentBox.height;\r\n          break;\r\n        default: break;\r\n      }\r\n    }\r\n    if (left < 0 || left + contentBox.width > maxWidth) {\r\n      top = elBox.top + elBox.height;\r\n      ({ left } = elBox);\r\n    }\r\n    if (top < 0 || top + contentBox.height > maxHeight) {\r\n      top = elBox.top + elBox.height;\r\n      ({ left } = elBox);\r\n    }\r\n    this.offset({\r\n      top,\r\n      left,\r\n    });\r\n  }\r\n\r\n  scrollbar() {\r\n    const { content } = this;\r\n    const contentBox = content.box();\r\n    const box = this.box();\r\n    this.scrollBarY.setSize(box.height, contentBox.height);\r\n    this.scrollBarX.setSize(box.width, contentBox.width);\r\n  }\r\n\r\n  open() {\r\n    if (this.off && root) {\r\n      root.children(this);\r\n      this.position();\r\n      this.scrollbar();\r\n      this.off = false;\r\n    }\r\n  }\r\n\r\n  close() {\r\n    if (this.off === false && root) {\r\n      root.remove(this);\r\n      this.off = true;\r\n    }\r\n  }\r\n\r\n  static closeAll(filter = []) {\r\n    POOL.forEach((item) => {\r\n      if (filter.indexOf(item) === -1) {\r\n        item.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  static setRoot(element) {\r\n    if (element.el) {\r\n      element = h(element.el);\r\n    } else {\r\n      element = h(element);\r\n    }\r\n    root = element;\r\n  }\r\n\r\n}\r\n\r\nexport { ElPopUp, EL_POPUP_POSITION };\r\n","/* global document */\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { EventBind } from '../../utils/EventBind';\r\nimport { Widget } from '../../lib/Widget';\r\nimport { ElPopUp } from '../elpopup/ElPopUp';\r\nimport { Utils } from '../../utils/Utils';\r\n\r\nclass ELContextMenu extends Widget {\r\n\r\n  constructor(className = '', options = {}) {\r\n    super(`${cssPrefix}-el-context-menu ${className}`);\r\n    this.options = Utils.mergeDeep({}, options);\r\n    this.menus = [];\r\n    // 环绕元素弹层组件\r\n    this.elPopUp = new ElPopUp(this.options);\r\n    this.elPopUp.children(this);\r\n    this.bind();\r\n  }\r\n\r\n  bind() {\r\n    EventBind.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (event) => {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n    });\r\n    EventBind.bind(document.body, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  addItem(item) {\r\n    const { menus } = this;\r\n    menus.push(item);\r\n    this.children(item);\r\n    return this;\r\n  }\r\n\r\n  open() {\r\n    this.elPopUp.open();\r\n    return this;\r\n  }\r\n\r\n  close() {\r\n    this.elPopUp.close();\r\n    return this;\r\n  }\r\n\r\n  isOpen() {\r\n    return this.elPopUp.off;\r\n  }\r\n}\r\n\r\nexport { ELContextMenu };\r\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\n\r\nclass ELContextMenuItem extends Widget {\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-el-context-menu-item hover ${className}`);\r\n  }\r\n}\r\n\r\nexport { ELContextMenuItem };\r\n","import { h } from '../../../../../lib/Element';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { ELContextMenuItem } from '../../../../../component/elcontextmenu/ELContextMenuItem';\r\nimport { Icon } from '../../Icon';\r\n\r\nconst pool = [];\r\n\r\nclass FormatContextMenuItem extends ELContextMenuItem {\r\n  constructor(title, desc) {\r\n    super(`${cssPrefix}-format-context-menu-item`);\r\n    this.title = title;\r\n    this.desc = desc;\r\n    this.icon = new Icon('checked');\r\n    this.iconElement = h('div', `${cssPrefix}-format-context-menu-item-icon`);\r\n    this.iconElement.children(this.icon);\r\n    this.titleElement = h('div', `${cssPrefix}-format-context-menu-item-title`);\r\n    this.descElement = h('div', `${cssPrefix}-format-context-menu-item-desc`);\r\n    this.titleElement.text(title);\r\n    this.descElement.text(desc);\r\n    this.children(this.iconElement);\r\n    this.children(this.titleElement);\r\n    this.children(this.descElement);\r\n    pool.push(this);\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.titleElement.text(title);\r\n  }\r\n\r\n  setDesc(desc) {\r\n    this.descElement.text(desc);\r\n  }\r\n\r\n  setActive() {\r\n    pool.forEach((item) => {\r\n      item.removeClass('active');\r\n    });\r\n    this.addClass('active');\r\n  }\r\n}\r\n\r\nexport { FormatContextMenuItem };\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { Widget } from '../../lib/Widget';\r\n\r\nclass ELContextMenuDivider extends Widget {\r\n  constructor() {\r\n    super(`${cssPrefix}-el-context-menu-item-divider`);\r\n  }\r\n}\r\n\r\nexport { ELContextMenuDivider };\r\n","import { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { ELContextMenu } from '../../../../../component/elcontextmenu/ELContextMenu';\r\nimport { FormatContextMenuItem } from './FormatContextMenuItem';\r\nimport { ELContextMenuDivider } from '../../../../../component/elcontextmenu/ELContextMenuDivider';\r\n\r\nimport { Utils } from '../../../../../utils/Utils';\r\n\r\nclass FormatContextMenu extends ELContextMenu {\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-format-context-menu`, Utils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new FormatContextMenuItem('常规', '').data('type', 'default'),\r\n      new FormatContextMenuItem('文本', '').data('type', 'text'),\r\n      new ELContextMenuDivider(),\r\n      new FormatContextMenuItem('数值', '0.59').data('type', 'number'),\r\n      new FormatContextMenuItem('百分比', '90.00%').data('type', 'percentage'),\r\n      new FormatContextMenuItem('分数', '1/2').data('type', 'fraction'),\r\n      new FormatContextMenuItem('科学计数', '9.50e-01').data('type', 'ENotation'),\r\n      new ELContextMenuDivider(),\r\n      new FormatContextMenuItem('人民币', '￥5.00').data('type', 'rmb'),\r\n      new FormatContextMenuItem('港币', 'HK5.00').data('type', 'hk'),\r\n      new FormatContextMenuItem('美元', '$5.00').data('type', 'dollar'),\r\n      new ELContextMenuDivider(),\r\n      new FormatContextMenuItem('日期', '2018/4/18').data('type', 'date1'),\r\n      new FormatContextMenuItem('日期', '4月18日').data('type', 'date2'),\r\n      new FormatContextMenuItem('日期', '2018年4月').data('type', 'date3'),\r\n      new FormatContextMenuItem('日期', '2018年4月18日').data('type', 'date4'),\r\n      new FormatContextMenuItem('日期', '2018/4/18 14:30:30').data('type', 'date5'),\r\n      new FormatContextMenuItem('时间', '14:30:30').data('type', 'time'),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      if (item instanceof FormatContextMenuItem && item.data('type')) {\r\n        item.on(Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n          this.update(item.data('type'), item.title);\r\n          item.setActive();\r\n        });\r\n      }\r\n      this.addItem(item);\r\n    });\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    const { options, items } = this;\r\n    const { el } = options;\r\n    const first = items[0];\r\n    el.setTitle(first.title);\r\n    first.setActive();\r\n  }\r\n\r\n  update(format, title) {\r\n    const { options } = this;\r\n    options.onUpdate(format, title);\r\n    this.close();\r\n  }\r\n\r\n  setActiveByType(type) {\r\n    this.items.forEach((item) => {\r\n      if (item.data('type') === type) {\r\n        item.setActive();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport { FormatContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { FormatContextMenu } from './contextmenu/format/FormatContextMenu';\r\nimport { EL_POPUP_POSITION } from '../../../component/elpopup/ElPopUp';\r\nimport { Utils } from '../../../utils/Utils';\r\n\r\nclass Format extends DropDownItem {\r\n  constructor(options) {\r\n    super(`${cssPrefix}-tools-format`);\r\n    this.options = Utils.copyProp({\r\n      contextMenu: {},\r\n    }, options);\r\n    this.setTitle('常规');\r\n    this.setWidth(50);\r\n    this.setEllipsis();\r\n    this.formatContextMenu = new FormatContextMenu(Utils.copyProp({\r\n      el: this,\r\n      position: EL_POPUP_POSITION.BOTTOM,\r\n    }, this.options.contextMenu));\r\n  }\r\n}\r\n\r\nexport { Format };\r\n","import { ELContextMenuItem } from '../../../../../component/elcontextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../lib/Element';\r\nimport { Icon } from '../../Icon';\r\n\r\nconst pool = [];\r\n\r\nclass FontContextMenuItem extends ELContextMenuItem {\r\n  constructor(title) {\r\n    super(`${cssPrefix}-font-context-menu-item`);\r\n    this.title = title;\r\n    this.icon = new Icon('checked');\r\n    this.iconElement = h('div', `${cssPrefix}-font-context-menu-item-icon`);\r\n    this.iconElement.children(this.icon);\r\n    this.titleElement = h('div', `${cssPrefix}-font-context-menu-item-title`);\r\n    this.titleElement.text(title);\r\n    this.titleElement.css('font-family', title);\r\n    this.children(this.iconElement);\r\n    this.children(this.titleElement);\r\n    pool.push(this);\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title;\r\n    this.titleElement.text(title);\r\n  }\r\n\r\n  setActive() {\r\n    pool.forEach((item) => {\r\n      item.removeClass('active');\r\n    });\r\n    this.addClass('active');\r\n  }\r\n}\r\n\r\nexport { FontContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../component/elcontextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { Utils } from '../../../../../utils/Utils';\r\nimport { FontContextMenuItem } from './FontContextMenuItem';\r\n\r\n\r\nclass FontContextMenu extends ELContextMenu {\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-context-menu`, Utils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new FontContextMenuItem('Arial'),\r\n      new FontContextMenuItem('Helvetica'),\r\n      new FontContextMenuItem('Source Sans Pro'),\r\n      new FontContextMenuItem('Comic Sans Ms'),\r\n      new FontContextMenuItem('Courier New'),\r\n      new FontContextMenuItem('Verdana'),\r\n      new FontContextMenuItem('Lalo'),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      item.on(Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n        this.update(item.title);\r\n        item.setActive();\r\n      });\r\n      this.addItem(item);\r\n    });\r\n    this.setActiveByType(this.items[0].title);\r\n  }\r\n\r\n  update(type) {\r\n    const { options } = this;\r\n    options.onUpdate(type);\r\n    this.close();\r\n  }\r\n\r\n  setActiveByType(type) {\r\n    this.items.forEach((item) => {\r\n      if (item.title === type) {\r\n        item.setActive();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport { FontContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Utils } from '../../../utils/Utils';\r\nimport { EL_POPUP_POSITION } from '../../../component/elpopup/ElPopUp';\r\nimport { FontContextMenu } from './contextmenu/font/FontContextMenu';\r\n\r\nclass Font extends DropDownItem {\r\n  constructor(options) {\r\n    super(`${cssPrefix}-tools-font`);\r\n    this.options = Utils.copyProp({\r\n      contextMenu: {},\r\n    }, options);\r\n    this.setTitle('Arial');\r\n    this.setWidth(50);\r\n    this.setEllipsis();\r\n    this.fontContextMenu = new FontContextMenu(Utils.copyProp({\r\n      el: this,\r\n      position: EL_POPUP_POSITION.BOTTOM,\r\n    }, this.options.contextMenu));\r\n  }\r\n}\r\n\r\nexport { Font };\r\n","import { ELContextMenuItem } from '../../../../../component/elcontextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../lib/Element';\r\n\r\nclass FontSizeContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(size) {\r\n    super(`${cssPrefix}-font-size-context-menu-item`);\r\n    this.size = size;\r\n    this.titleElement = h('div', `${cssPrefix}-font-size-context-menu-item-title`);\r\n    this.titleElement.text(size);\r\n    this.titleElement.css('text-align', 'center');\r\n    this.children(this.titleElement);\r\n  }\r\n\r\n}\r\n\r\nexport { FontSizeContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../component/elcontextmenu/ELContextMenu';\r\nimport { Utils } from '../../../../../utils/Utils';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { FontSizeContextMenuItem } from './FontSizeContextMenuItem';\r\n\r\n\r\nclass FontSizeContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-size-context-menu`, Utils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n\r\n    this.items = [\r\n      new FontSizeContextMenuItem(6),\r\n      new FontSizeContextMenuItem(7),\r\n      new FontSizeContextMenuItem(8),\r\n      new FontSizeContextMenuItem(9),\r\n      new FontSizeContextMenuItem(10),\r\n      new FontSizeContextMenuItem(11),\r\n      new FontSizeContextMenuItem(12),\r\n      new FontSizeContextMenuItem(14),\r\n      new FontSizeContextMenuItem(15),\r\n      new FontSizeContextMenuItem(18),\r\n      new FontSizeContextMenuItem(24),\r\n      new FontSizeContextMenuItem(36),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      item.on(Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n        this.update(item.size);\r\n      });\r\n      this.addItem(item);\r\n    });\r\n  }\r\n\r\n  update(size) {\r\n    const { options } = this;\r\n    options.onUpdate(size);\r\n    this.close();\r\n  }\r\n\r\n}\r\n\r\nexport { FontSizeContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { FontSizeContextMenu } from './contextmenu/fontsize/FontSizeContextMenu';\r\nimport { Utils } from '../../../utils/Utils';\r\nimport { EL_POPUP_POSITION } from '../../../component/elpopup/ElPopUp';\r\n\r\nclass FontSize extends DropDownItem {\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-font-size`);\r\n    this.options = options;\r\n    this.setTitle('10');\r\n    this.setWidth(30);\r\n    this.setEllipsis();\r\n    this.fontSizeContextMenu = new FontSizeContextMenu(Utils.copyProp({\r\n      el: this,\r\n      position: EL_POPUP_POSITION.BOTTOM,\r\n    }, this.options.contextMenu));\r\n  }\r\n}\r\n\r\nexport { FontSize };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass FontBold extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-bold`);\r\n    this.icon = new Icon('font-bold');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { FontBold };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass FontItalic extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-italic`);\r\n    this.icon = new Icon('font-italic');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { FontItalic };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass UnderLine extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-under-line`);\r\n    this.icon = new Icon('under-line');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { UnderLine };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\n\r\nclass FontStrike extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-strike`);\r\n    this.icon = new Icon('font-strike');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { FontStrike };\r\n","import { ELContextMenuItem } from '../../../../../component/elcontextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../lib/Element';\r\n\r\nclass FontColorContextMenuItem extends ELContextMenuItem {\r\n  constructor(title, icon) {\r\n    super(`${cssPrefix}-font-color-context-menu-item`);\r\n    this.title = title;\r\n    this.icon = icon;\r\n    if (icon) {\r\n      this.iconElement = h('div', `${cssPrefix}-font-color-context-menu-item-icon`);\r\n      this.iconElement.children(this.icon);\r\n      this.children(this.iconElement);\r\n    }\r\n    if (title) {\r\n      this.titleElement = h('div', `${cssPrefix}-font-color-context-menu-item-title`);\r\n      this.titleElement.text(title);\r\n      this.children(this.titleElement);\r\n    }\r\n  }\r\n}\r\n\r\nexport { FontColorContextMenuItem };\r\n","/* global document */\r\nimport { Widget } from '../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { EventBind } from '../../utils/EventBind';\r\n\r\nimport { h } from '../../lib/Element';\r\nimport { Utils } from '../../utils/Utils';\r\n\r\nconst POOL = [];\r\n\r\nlet root = null;\r\n\r\nconst DRAG_PANEL_POSITION = {\r\n  LEFT: 1,\r\n  TOP: 2,\r\n  RIGHT: 3,\r\n  CENTER: 4,\r\n};\r\n\r\nclass DragPanel extends Widget {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-drag-panel`);\r\n    this.options = Utils.mergeDeep({\r\n      position: DRAG_PANEL_POSITION.CENTER,\r\n    }, options);\r\n    this.off = true;\r\n    this.mask = h('div', `${cssPrefix}-drag-panel-mask`);\r\n    this.content = h('div', `${cssPrefix}-drag-panel-content`);\r\n    super.children(this.content);\r\n    this.bind();\r\n    POOL.push(this);\r\n  }\r\n\r\n  bind() {\r\n    const { mask } = this;\r\n    EventBind.bind(mask, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.close();\r\n      e.stopPropagation();\r\n    });\r\n    EventBind.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (evt1) => {\r\n      if (evt1.button !== 0) return;\r\n      const downEventXy = this.computeEventXy(evt1, this);\r\n      EventBind.mouseMoveUp(h(document), (evt2) => {\r\n        // 计算移动的距离\r\n        const top = evt2.pageY - downEventXy.y;\r\n        const left = evt2.pageX - downEventXy.x;\r\n        this.offset({ top, left });\r\n        evt2.stopPropagation();\r\n        evt2.preventDefault();\r\n      });\r\n      evt1.stopPropagation();\r\n      evt1.preventDefault();\r\n    });\r\n  }\r\n\r\n  position() {\r\n    const { options } = this;\r\n    const { position } = options;\r\n    const { width, height } = Utils.viewPort();\r\n    const box = this.box();\r\n    switch (position) {\r\n      case DRAG_PANEL_POSITION.LEFT:\r\n        break;\r\n      case DRAG_PANEL_POSITION.RIGHT:\r\n        break;\r\n      case DRAG_PANEL_POSITION.TOP:\r\n        break;\r\n      case DRAG_PANEL_POSITION.CENTER:\r\n        this.offset({\r\n          left: width / 2 - box.width / 2,\r\n          top: height / 2 - box.height / 2,\r\n        });\r\n        break;\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  open() {\r\n    if (this.off && root) {\r\n      const { mask } = this;\r\n      root.children(mask);\r\n      root.children(this);\r\n      this.position();\r\n      this.off = false;\r\n    }\r\n  }\r\n\r\n  close() {\r\n    if (this.off === false && root) {\r\n      const { mask } = this;\r\n      root.remove(this);\r\n      root.remove(mask);\r\n      this.off = true;\r\n    }\r\n  }\r\n\r\n  children(...args) {\r\n    this.content.children(...args);\r\n  }\r\n\r\n  static closeAll(filter = []) {\r\n    POOL.forEach((item) => {\r\n      if (filter.indexOf(item) === -1) {\r\n        item.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  static setRoot(element) {\r\n    if (element.el) {\r\n      element = h(element.el);\r\n    } else {\r\n      element = h(element);\r\n    }\r\n    root = element;\r\n  }\r\n\r\n}\r\n\r\nexport { DragPanel };\r\n","/* global document */\r\nimport { h } from '../../lib/Element';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { Widget } from '../../lib/Widget';\r\nimport { DragPanel } from '../dragpanel/DragPanel';\r\nimport { EventBind } from '../../utils/EventBind';\r\n\r\nimport { Utils } from '../../utils/Utils';\r\n\r\nclass ColorPicker extends Widget {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-color-picker`);\r\n    this.options = Utils.mergeDeep({\r\n      selectCb: () => {},\r\n    }, options);\r\n    // 拖拽组件\r\n    this.dragPanel = new DragPanel();\r\n    this.color = [360, 0, 100];\r\n    // 头部\r\n    this.preViewColorPoint = h('div', `${cssPrefix}-color-picker-pre-view-color-point`);\r\n    this.colorValueTips = h('div', `${cssPrefix}-color-picker-color-value-tips`);\r\n    this.colorValueTips.text('十六进制颜色值');\r\n    this.colorInput = h('input', `${cssPrefix}-color-picker-color-input`);\r\n    this.top = h('div', `${cssPrefix}-color-picker-top`);\r\n    this.top.children(this.preViewColorPoint);\r\n    this.top.children(this.colorValueTips);\r\n    this.top.children(this.colorInput);\r\n    // 中间部分\r\n    this.selectColorPoint = h('div', `${cssPrefix}-color-picker-select-color-point`);\r\n    this.selectColorArea1 = h('div', `${cssPrefix}-color-picker-select-color-area area1`);\r\n    this.selectColorArea2 = h('div', `${cssPrefix}-color-picker-select-color-area area2`);\r\n    this.selectColorArea3 = h('div', `${cssPrefix}-color-picker-select-color-area area3`);\r\n    this.center = h('div', `${cssPrefix}-color-picker-center`);\r\n    this.center.children(this.selectColorArea1);\r\n    this.center.children(this.selectColorArea2);\r\n    this.center.children(this.selectColorArea3);\r\n    this.center.children(this.selectColorPoint);\r\n    // 底部\r\n    this.colorHuxTips = h('div', `${cssPrefix}-color-picker-color-hux-tips`);\r\n    this.colorBar = h('div', `${cssPrefix}-color-picker-color-bar`);\r\n    this.colorBarPoint = h('div', `${cssPrefix}-color-picker-bar-point`);\r\n    this.bottom = h('div', `${cssPrefix}-color-picker-bottom`);\r\n    this.colorHuxTips.text('HUE');\r\n    this.colorBar.children(this.colorBarPoint);\r\n    this.bottom.children(this.colorHuxTips);\r\n    this.bottom.children(this.colorBar);\r\n    // 按钮\r\n    this.cancelButton = h('div', `${cssPrefix}-color-picker-button cancel`);\r\n    this.selectButton = h('div', `${cssPrefix}-color-picker-button select`);\r\n    this.buttons = h('div', `${cssPrefix}-color-picker-buttons`);\r\n    this.cancelButton.text('取消');\r\n    this.selectButton.text('确定');\r\n    this.buttons.children(this.selectButton);\r\n    this.buttons.children(this.cancelButton);\r\n    this.children(this.top);\r\n    this.children(this.center);\r\n    this.children(this.bottom);\r\n    this.children(this.buttons);\r\n    this.dragPanel.children(this);\r\n    this.dragPanel.css('background', '#ffffff');\r\n    this.bind();\r\n  }\r\n\r\n  bind() {\r\n    const { selectColorPoint, center } = this;\r\n    const { colorBarPoint, colorBar } = this;\r\n    const { colorInput, cancelButton, selectButton } = this;\r\n    EventBind.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      e.stopPropagation();\r\n    });\r\n    EventBind.bind(selectColorPoint, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\r\n      const xy = this.computeEventXy(e1, center);\r\n      const centerBox = center.box();\r\n      if (xy.x < 0) xy.x = 0;\r\n      if (xy.x > centerBox.width) xy.x = centerBox.width;\r\n      if (xy.y < 0) xy.y = 0;\r\n      if (xy.y > centerBox.height) xy.y = centerBox.height;\r\n      this.downSelect(xy.x, xy.y, centerBox.width, centerBox.height);\r\n      EventBind.mouseMoveUp(h(document), (e2) => {\r\n        const xy = this.computeEventXy(e2, center);\r\n        if (xy.x < 0) xy.x = 0;\r\n        if (xy.x > centerBox.width) xy.x = centerBox.width;\r\n        if (xy.y < 0) xy.y = 0;\r\n        if (xy.y > centerBox.height) xy.y = centerBox.height;\r\n        this.moveSelect(xy.x, xy.y, centerBox.width, centerBox.height);\r\n      });\r\n    });\r\n    EventBind.bind(colorBarPoint, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\r\n      const xy = this.computeEventXy(e1, colorBar);\r\n      const colorBarBox = colorBar.box();\r\n      if (xy.x < 0) xy.x = 0;\r\n      if (xy.x > colorBarBox.width) xy.x = colorBarBox.width;\r\n      this.downHue(xy.x, colorBarBox.width);\r\n      EventBind.mouseMoveUp(h(document), (e2) => {\r\n        const xy = this.computeEventXy(e2, colorBar);\r\n        const colorBarBox = colorBar.box();\r\n        if (xy.x < 0) xy.x = 0;\r\n        if (xy.x > colorBarBox.width) xy.x = colorBarBox.width;\r\n        this.moveHue(xy.x, colorBarBox.width);\r\n      });\r\n    });\r\n    EventBind.bind(colorInput, Constant.SYSTEM_EVENT_TYPE.CHANGE, () => {\r\n      const value = colorInput.val();\r\n      if (value) {\r\n        this.hexColor(value);\r\n      }\r\n    });\r\n    EventBind.bind(cancelButton, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.close();\r\n    });\r\n    EventBind.bind(selectButton, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      const { color } = this;\r\n      const hsb = ColorPicker.fixHsx({\r\n        h: parseInt(color[0], 10),\r\n        s: parseInt(color[1], 10),\r\n        x: parseInt(color[2], 10),\r\n      });\r\n      const colorValue = ColorPicker.hsbToHex(hsb);\r\n      this.options.selectCb(`#${colorValue}`);\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  open(hex) {\r\n    const { dragPanel } = this;\r\n    dragPanel.open();\r\n    if (hex) {\r\n      if (ColorPicker.isRgb(hex)) {\r\n        const rgb = ColorPicker.parseRgb(hex);\r\n        // eslint-disable-next-line no-param-reassign\r\n        hex = ColorPicker.rgbToHex(rgb);\r\n      }\r\n      this.hexColor(hex);\r\n    } else {\r\n      this.change();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  close() {\r\n    const { dragPanel } = this;\r\n    dragPanel.close();\r\n    return this;\r\n  }\r\n\r\n  sliderPosition(hsb) {\r\n    // hue 滑块位置\r\n    const { colorBar, colorBarPoint } = this;\r\n    const colorBarPointBox = colorBarPoint.box();\r\n    const colorBarBox = colorBar.box();\r\n    let colorBarPointLeft = parseInt(colorBarBox.width - colorBarBox.width * hsb.h / 360, 10);\r\n    colorBarPointLeft -= colorBarPointBox.width / 2;\r\n    colorBarPoint.offset({\r\n      left: colorBarPointLeft,\r\n    });\r\n    // select color 滑块位置\r\n    const { center, selectColorPoint } = this;\r\n    const selectColorPointBox = selectColorPoint.box();\r\n    const centerBox = center.box();\r\n    let selectColorPointLeft = parseInt(centerBox.width * hsb.s / 100, 10);\r\n    let selectColorPointTop = parseInt(centerBox.height * (100 - hsb.x) / 100, 10);\r\n    selectColorPointLeft -= selectColorPointBox.width / 2;\r\n    selectColorPointTop -= selectColorPointBox.height / 2;\r\n    selectColorPoint.offset({\r\n      left: selectColorPointLeft,\r\n      top: selectColorPointTop,\r\n    });\r\n  }\r\n\r\n  hueChange() {\r\n    const { color } = this;\r\n    const hsb = ColorPicker.fixHsx({\r\n      h: parseInt(color[0], 10),\r\n      s: parseInt(color[1], 10),\r\n      x: parseInt(color[2], 10),\r\n    });\r\n    const {\r\n      colorBarPoint, selectColorPoint, preViewColorPoint, selectColorArea1, colorInput,\r\n    } = this;\r\n    const colorValue = ColorPicker.hsbToHex(hsb);\r\n    const areaColorValue = ColorPicker.hsbToHex({ h: hsb.h, s: 100, x: 100 });\r\n    selectColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    preViewColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    colorBarPoint.css('backgroundColor', `#${areaColorValue}`);\r\n    selectColorArea1.css('backgroundColor', `#${areaColorValue}`);\r\n    colorInput.val(`#${colorValue}`);\r\n    this.sliderPosition(hsb);\r\n  }\r\n\r\n  selectChange() {\r\n    const { color } = this;\r\n    const hsb = ColorPicker.fixHsx({\r\n      h: parseInt(color[0], 10),\r\n      s: parseInt(color[1], 10),\r\n      x: parseInt(color[2], 10),\r\n    });\r\n    const { preViewColorPoint, selectColorPoint, colorInput } = this;\r\n    const colorValue = ColorPicker.hsbToHex(hsb);\r\n    selectColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    preViewColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    colorInput.val(`#${colorValue}`);\r\n    this.sliderPosition(hsb);\r\n  }\r\n\r\n  change() {\r\n    this.hueChange();\r\n    this.selectChange();\r\n  }\r\n\r\n  downSelect(x, y, width, height) {\r\n    const { color } = this;\r\n    color[1] = parseInt(100 * x / width, 10);\r\n    color[2] = parseInt(100 * (height - y) / height, 10);\r\n    this.selectChange();\r\n  }\r\n\r\n  moveSelect(x, y, width, height) {\r\n    const { color } = this;\r\n    color[1] = parseInt(100 * (Math.max(0, Math.min(width, x))) / width, 10);\r\n    color[2] = parseInt(100 * (height - Math.max(0, Math.min(height, y))) / height, 10);\r\n    this.selectChange();\r\n  }\r\n\r\n  downHue(x, width) {\r\n    const { color } = this;\r\n    color[0] = parseInt(360 * (width - x) / width, 10);\r\n    this.hueChange();\r\n  }\r\n\r\n  moveHue(x, width) {\r\n    const { color } = this;\r\n    color[0] = parseInt(360 * (width - Math.max(0, Math.min(width, x))) / width, 10);\r\n    this.hueChange();\r\n  }\r\n\r\n  hexColor(hex) {\r\n    const { color } = this;\r\n    const result = ColorPicker.hexToHsb(ColorPicker.fixHex(hex));\r\n    color[0] = result.h;\r\n    color[1] = result.s;\r\n    color[2] = result.x;\r\n    this.change();\r\n  }\r\n\r\n  static fixHex(hex) {\r\n    const len = 6 - hex.length;\r\n    if (len > 0) {\r\n      const o = [];\r\n      for (let i = 0; i < len; i += 1) {\r\n        o.push('0');\r\n      }\r\n      o.push(hex);\r\n      // eslint-disable-next-line no-param-reassign\r\n      hex = o.join('');\r\n    }\r\n    return hex;\r\n  }\r\n\r\n  static fixHsx(hsx) {\r\n    return {\r\n      h: Math.min(360, Math.max(0, hsx.h)),\r\n      s: Math.min(100, Math.max(0, hsx.s)),\r\n      x: Math.min(100, Math.max(0, hsx.x)),\r\n    };\r\n  }\r\n\r\n  static hexToRgb(hex) {\r\n    // eslint-disable-next-line no-redeclare,no-param-reassign\r\n    hex = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\r\n    // eslint-disable-next-line no-bitwise\r\n    return { r: hex >> 16, g: (hex & 0x00FF00) >> 8, b: (hex & 0x0000FF) };\r\n  }\r\n\r\n  static hexToHsb(hex) {\r\n    return this.rgbToHsb(this.hexToRgb(hex));\r\n  }\r\n\r\n  static rgbToHsb(rgb) {\r\n    const hsb = { h: 0, s: 0, x: 0 };\r\n    const min = Math.min(rgb.r, rgb.g, rgb.b);\r\n    const max = Math.max(rgb.r, rgb.g, rgb.b);\r\n    const delta = max - min;\r\n    hsb.x = max;\r\n    hsb.s = max !== 0 ? 255 * delta / max : 0;\r\n    if (hsb.s !== 0) {\r\n      if (rgb.r === max) hsb.h = (rgb.g - rgb.b) / delta;\r\n      else if (rgb.g === max) hsb.h = 2 + (rgb.b - rgb.r) / delta;\r\n      else hsb.h = 4 + (rgb.r - rgb.g) / delta;\r\n    } else hsb.h = -1;\r\n    hsb.h *= 60;\r\n    if (hsb.h < 0) hsb.h += 360;\r\n    hsb.s *= 100 / 255;\r\n    hsb.x *= 100 / 255;\r\n    return hsb;\r\n  }\r\n\r\n  static hsbToRgb(hsb) {\r\n    const rgb = {};\r\n    let { h } = hsb;\r\n    const s = hsb.s * 255 / 100;\r\n    const v = hsb.x * 255 / 100;\r\n    if (s === 0) {\r\n      rgb.r = v;\r\n      rgb.g = v;\r\n      rgb.b = v;\r\n    } else {\r\n      const t1 = v;\r\n      const t2 = (255 - s) * v / 255;\r\n      const t3 = (t1 - t2) * (h % 60) / 60;\r\n      if (h === 360) h = 0;\r\n      if (h < 60) {\r\n        rgb.r = t1;\r\n        rgb.b = t2;\r\n        rgb.g = t2 + t3;\r\n      } else if (h < 120) {\r\n        rgb.g = t1;\r\n        rgb.b = t2;\r\n        rgb.r = t1 - t3;\r\n      } else if (h < 180) {\r\n        rgb.g = t1;\r\n        rgb.r = t2;\r\n        rgb.b = t2 + t3;\r\n      } else if (h < 240) {\r\n        rgb.b = t1;\r\n        rgb.r = t2;\r\n        rgb.g = t1 - t3;\r\n      } else if (h < 300) {\r\n        rgb.b = t1;\r\n        rgb.g = t2;\r\n        rgb.r = t2 + t3;\r\n      } else if (h < 360) {\r\n        rgb.r = t1;\r\n        rgb.g = t2;\r\n        rgb.b = t1 - t3;\r\n      } else {\r\n        rgb.r = 0;\r\n        rgb.g = 0;\r\n        rgb.b = 0;\r\n      }\r\n    }\r\n    return { r: Math.round(rgb.r), g: Math.round(rgb.g), b: Math.round(rgb.b) };\r\n  }\r\n\r\n  static rgbToHex(rgb) {\r\n    const hex = [\r\n      rgb.r.toString(16),\r\n      rgb.g.toString(16),\r\n      rgb.b.toString(16),\r\n    ];\r\n    hex.forEach((val, nr) => {\r\n      if (val.length === 1) {\r\n        hex[nr] = `0${val}`;\r\n      }\r\n    });\r\n    return hex.join('');\r\n  }\r\n\r\n  static hsbToHex(hsb) {\r\n    return this.rgbToHex(this.hsbToRgb(hsb));\r\n  }\r\n\r\n  static isRgb(rgb) {\r\n    return rgb.startsWith('rgb');\r\n  }\r\n\r\n  static isHex(hex) {\r\n    return hex.startsWith('#');\r\n  }\r\n\r\n  static parseRgb(rgb) {\r\n    const rxp = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/;\r\n    const result = rgb.match(rxp);\r\n    return {\r\n      r: result[1],\r\n      g: result[2],\r\n      b: result[3],\r\n    };\r\n  }\r\n\r\n  static isDark(rgb) {\r\n    if (Utils.isBlank(rgb)) {\r\n      return false;\r\n    }\r\n    if (this.isHex(rgb)) {\r\n      const v = ColorPicker.hexToRgb(rgb);\r\n      // eslint-disable-next-line no-param-reassign\r\n      rgb = `rgb(${v.r}, ${v.g}, ${v.b})`;\r\n    }\r\n    const result = ColorPicker.parseRgb(rgb);\r\n    return result.r * 0.299 + result.g * 0.578 + result.b * 0.114 >= 192;\r\n  }\r\n}\r\n\r\nexport { ColorPicker };\r\n","import { Widget } from '../../../lib/Widget';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Utils } from '../../../utils/Utils';\r\nimport { Icon } from '../../../core/work/tools/Icon';\r\nimport { ColorPicker } from '../ColorPicker';\r\n\r\nclass ColorItem extends Widget {\r\n  constructor(options) {\r\n    super(`${cssPrefix}-color-array-item`);\r\n    this.options = Utils.mergeDeep({\r\n      color: null,\r\n      icon: null,\r\n    }, options);\r\n    this.color = this.options.color;\r\n    this.icon = this.options.icon;\r\n    if (this.color) {\r\n      this.css('backgroundColor', this.color);\r\n      if (ColorPicker.isDark(this.options.color)) {\r\n        this.checkedIcon = new Icon('checked-dark');\r\n        this.children(this.checkedIcon);\r\n      } else {\r\n        this.checkedIcon = new Icon('checked-light');\r\n        this.children(this.checkedIcon);\r\n      }\r\n      this.checkedIcon.hide();\r\n    }\r\n    if (this.icon) {\r\n      this.children(this.options.icon);\r\n    }\r\n  }\r\n\r\n  setActive(active) {\r\n    if (this.checkedIcon) {\r\n      if (active) {\r\n        this.checkedIcon.show();\r\n      } else {\r\n        this.checkedIcon.hide();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport { ColorItem };\r\n","import { Widget } from '../../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../../const/Constant';\r\nimport { ColorItem } from './ColorItem';\r\nimport { Utils } from '../../../utils/Utils';\r\n\r\n\r\nclass ColorArray extends Widget {\r\n  constructor(options) {\r\n    super(`${cssPrefix}-color-array`);\r\n    this.options = Utils.mergeDeep({\r\n      colors: [\r\n        new ColorItem({ color: 'rgb(0,0,0)' }),\r\n        new ColorItem({ color: 'rgb(67, 67, 67)' }),\r\n        new ColorItem({ color: 'rgb(102, 102, 102)' }),\r\n        new ColorItem({ color: 'rgb(153, 153, 153)' }),\r\n        new ColorItem({ color: 'rgb(183, 183, 183)' }),\r\n        new ColorItem({ color: 'rgb(204, 204, 204)' }),\r\n        new ColorItem({ color: 'rgb(217, 217, 217)' }),\r\n        new ColorItem({ color: 'rgb(239, 239, 239)' }),\r\n        new ColorItem({ color: 'rgb(255, 255, 255)' }),\r\n\r\n        new ColorItem({ color: 'rgb(152, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(255, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(255, 153, 0)' }),\r\n        new ColorItem({ color: 'rgb(255, 255, 0)' }),\r\n        new ColorItem({ color: 'rgb(0, 255, 0)' }),\r\n        new ColorItem({ color: 'rgb(0, 255, 255)' }),\r\n        new ColorItem({ color: 'rgb(74, 134, 232)' }),\r\n        new ColorItem({ color: 'rgb(0, 0, 255)' }),\r\n        new ColorItem({ color: 'rgb(153, 0, 255)' }),\r\n        new ColorItem({ color: 'rgb(255, 0, 255)' }),\r\n\r\n        new ColorItem({ color: 'rgb(230, 184, 175)' }),\r\n        new ColorItem({ color: 'rgb(244, 204, 204)' }),\r\n        new ColorItem({ color: 'rgb(252, 229, 205)' }),\r\n        new ColorItem({ color: 'rgb(255, 242, 204)' }),\r\n        new ColorItem({ color: 'rgb(217, 234, 211)' }),\r\n        new ColorItem({ color: 'rgb(208, 224, 227)' }),\r\n        new ColorItem({ color: 'rgb(201, 218, 248)' }),\r\n        new ColorItem({ color: 'rgb(207, 226, 243)' }),\r\n        new ColorItem({ color: 'rgb(217, 210, 233)' }),\r\n        new ColorItem({ color: 'rgb(234, 209, 220)' }),\r\n\r\n        new ColorItem({ color: 'rgb(221, 126, 107)' }),\r\n        new ColorItem({ color: 'rgb(234, 153, 153)' }),\r\n        new ColorItem({ color: 'rgb(249, 203, 156)' }),\r\n        new ColorItem({ color: 'rgb(255, 229, 153)' }),\r\n        new ColorItem({ color: 'rgb(182, 215, 168)' }),\r\n        new ColorItem({ color: 'rgb(162, 196, 201)' }),\r\n        new ColorItem({ color: 'rgb(164, 194, 244)' }),\r\n        new ColorItem({ color: 'rgb(159, 197, 232)' }),\r\n        new ColorItem({ color: 'rgb(180, 167, 214)' }),\r\n        new ColorItem({ color: 'rgb(213, 166, 189)' }),\r\n\r\n        new ColorItem({ color: 'rgb(204, 65, 37)' }),\r\n        new ColorItem({ color: 'rgb(224, 102, 102)' }),\r\n        new ColorItem({ color: 'rgb(246, 178, 107)' }),\r\n        new ColorItem({ color: 'rgb(255, 217, 102)' }),\r\n        new ColorItem({ color: 'rgb(147, 196, 125)' }),\r\n        new ColorItem({ color: 'rgb(118, 165, 175)' }),\r\n        new ColorItem({ color: 'rgb(109, 158, 235)' }),\r\n        new ColorItem({ color: 'rgb(111, 168, 220)' }),\r\n        new ColorItem({ color: 'rgb(142, 124, 195)' }),\r\n        new ColorItem({ color: 'rgb(194, 123, 160)' }),\r\n\r\n        new ColorItem({ color: 'rgb(166, 28, 0)' }),\r\n        new ColorItem({ color: 'rgb(204, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(230, 145, 56)' }),\r\n        new ColorItem({ color: 'rgb(241, 194, 50)' }),\r\n        new ColorItem({ color: 'rgb(106, 168, 79)' }),\r\n        new ColorItem({ color: 'rgb(69, 129, 142)' }),\r\n        new ColorItem({ color: 'rgb(60, 120, 216)' }),\r\n        new ColorItem({ color: 'rgb(61, 133, 198)' }),\r\n        new ColorItem({ color: 'rgb(103, 78, 167)' }),\r\n        new ColorItem({ color: 'rgb(166, 77, 121)' }),\r\n\r\n        new ColorItem({ color: 'rgb(133, 32, 12)' }),\r\n        new ColorItem({ color: 'rgb(153, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(180, 95, 6)' }),\r\n        new ColorItem({ color: 'rgb(191, 144, 0)' }),\r\n        new ColorItem({ color: 'rgb(56, 118, 29)' }),\r\n        new ColorItem({ color: 'rgb(19, 79, 92)' }),\r\n        new ColorItem({ color: 'rgb(17, 85, 204)' }),\r\n        new ColorItem({ color: 'rgb(11, 83, 148)' }),\r\n        new ColorItem({ color: 'rgb(53, 28, 117)' }),\r\n        new ColorItem({ color: 'rgb(116, 27, 71)' }),\r\n\r\n        new ColorItem({ color: 'rgb(91, 15, 0)' }),\r\n        new ColorItem({ color: 'rgb(102, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(120, 63, 4)' }),\r\n        new ColorItem({ color: 'rgb(127, 96, 0)' }),\r\n        new ColorItem({ color: 'rgb(39, 78, 19)' }),\r\n        new ColorItem({ color: 'rgb(12, 52, 61)' }),\r\n        new ColorItem({ color: 'rgb(28, 69, 135)' }),\r\n        new ColorItem({ color: 'rgb(7, 55, 99)' }),\r\n        new ColorItem({ color: 'rgb(32, 18, 77)' }),\r\n        new ColorItem({ color: 'rgb(76, 17, 48)' }),\r\n      ],\r\n      selectCb: () => {},\r\n    }, options);\r\n    this.colors = this.options.colors;\r\n    this.activeColor = null;\r\n    this.colors.forEach((item) => {\r\n      this.children(item);\r\n      item.on(Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n        this.options.selectCb(item);\r\n        if (item.options.color) {\r\n          this.setActiveByColor(item.options.color);\r\n        }\r\n      });\r\n    });\r\n    if (this.colors.length > 0) {\r\n      this.setActiveByColor(this.colors[0].options.color);\r\n    }\r\n  }\r\n\r\n  add(item) {\r\n    item.on(Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.options.selectCb(item);\r\n      if (item.options.color) {\r\n        this.setActiveByColor(item.options.color);\r\n      }\r\n    });\r\n    this.colors.push(item);\r\n    this.children(item);\r\n  }\r\n\r\n  setActiveByColor(color) {\r\n    this.colors.forEach((item) => {\r\n      const { options } = item;\r\n      if (options.color === color) {\r\n        item.setActive(true);\r\n        this.activeColor = options.color;\r\n      } else {\r\n        item.setActive(false);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport { ColorArray };\r\n","import { ELContextMenu } from '../../../../../component/elcontextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { FontColorContextMenuItem } from './FontColorContextMenuItem';\r\nimport { ColorArray } from '../../../../../component/colorpicker/colorarray/ColorArray';\r\nimport { h } from '../../../../../lib/Element';\r\nimport { ColorItem } from '../../../../../component/colorpicker/colorarray/ColorItem';\r\nimport { ELContextMenuDivider } from '../../../../../component/elcontextmenu/ELContextMenuDivider';\r\nimport { Icon } from '../../Icon';\r\nimport { Utils } from '../../../../../utils/Utils';\r\n\r\nimport { ColorPicker } from '../../../../../component/colorpicker/ColorPicker';\r\n\r\nclass FontColorContextMenu extends ELContextMenu {\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-color-context-menu`, Utils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.colorPicker = new ColorPicker({\r\n      selectCb: (color) => {\r\n        const item = new ColorItem({ color });\r\n        this.customizeColorArray.add(item);\r\n        this.customizeColorArray.setActiveByColor(color);\r\n        this.colorArray.setActiveByColor(null);\r\n        this.options.onUpdate(color);\r\n        this.close();\r\n      },\r\n    });\r\n    // 重置\r\n    this.reset = new FontColorContextMenuItem('重置', new Icon('clear-color'));\r\n    this.reset.on(Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.options.onUpdate('rgb(0,0,0)');\r\n      this.customizeColorArray.setActiveByColor(null);\r\n      this.colorArray.setActiveByColor(null);\r\n    });\r\n    // 颜色筛选\r\n    this.array = new FontColorContextMenuItem();\r\n    this.array.removeClass('hover');\r\n    this.colorArray = new ColorArray({\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) this.options.onUpdate(color);\r\n        this.customizeColorArray.setActiveByColor(null);\r\n        this.close();\r\n      },\r\n    });\r\n    this.array.children(this.colorArray);\r\n    // 历史选中\r\n    this.title = h('div', `${cssPrefix}-font-color-context-menu-color-title`);\r\n    this.title.text('自定义');\r\n    this.plus = new Icon('plus');\r\n    this.customizeColorArray = new ColorArray({\r\n      colors: [\r\n        new ColorItem({ icon: this.plus }),\r\n      ],\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) {\r\n          this.options.onUpdate(color);\r\n          this.colorArray.setActiveByColor(null);\r\n          this.close();\r\n        } else {\r\n          this.colorPicker.open(this.customizeColorArray.activeColor);\r\n        }\r\n      },\r\n    });\r\n    this.customize = new FontColorContextMenuItem();\r\n    this.customize.removeClass('hover');\r\n    this.customize.children(this.title);\r\n    this.customize.children(this.customizeColorArray);\r\n    // 菜单元素追加子节点\r\n    this.addItem(this.reset);\r\n    this.addItem(this.array);\r\n    this.addItem(new ELContextMenuDivider());\r\n    this.addItem(this.customize);\r\n  }\r\n\r\n  setActiveByColor(color) {\r\n    this.customizeColorArray.setActiveByColor(color);\r\n    this.colorArray.setActiveByColor(color);\r\n  }\r\n}\r\n\r\nexport { FontColorContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Utils } from '../../../utils/Utils';\r\nimport { EL_POPUP_POSITION } from '../../../component/elpopup/ElPopUp';\r\nimport { FontColorContextMenu } from './contextmenu/fontcolor/FontColorContextMenu';\r\n\r\nclass FontColor extends DropDownItem {\r\n  constructor(options) {\r\n    super(`${cssPrefix}-tools-font-color`);\r\n    this.options = Utils.mergeDeep({ contextMenu: {} }, options);\r\n    this.icon = new Icon('color');\r\n    this.fontColorContextMenu = new FontColorContextMenu(Utils.copyProp({\r\n      el: this,\r\n      position: EL_POPUP_POSITION.BOTTOM,\r\n    }, this.options.contextMenu));\r\n    this.setIcon(this.icon);\r\n    this.setColor('rgb(0,0,0)');\r\n    this.fontColorContextMenu.setActiveByColor('rgb(0,0,0)');\r\n  }\r\n\r\n  setColor(color) {\r\n    this.icon.css('border-bottom', `3px solid ${color}`);\r\n  }\r\n}\r\n\r\nexport { FontColor };\r\n","import { ELContextMenuItem } from '../../../../../component/elcontextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../lib/Element';\r\n\r\nclass FillColorContextMenuItem extends ELContextMenuItem {\r\n  constructor(title, icon) {\r\n    super(`${cssPrefix}-fill-color-context-menu-item`);\r\n    this.title = title;\r\n    this.icon = icon;\r\n    if (icon) {\r\n      this.iconElement = h('div', `${cssPrefix}-fill-color-context-menu-item-icon`);\r\n      this.iconElement.children(this.icon);\r\n      this.children(this.iconElement);\r\n    }\r\n    if (title) {\r\n      this.titleElement = h('div', `${cssPrefix}-fill-color-context-menu-item-title`);\r\n      this.titleElement.text(title);\r\n      this.children(this.titleElement);\r\n    }\r\n  }\r\n}\r\n\r\nexport { FillColorContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../component/elcontextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { ColorArray } from '../../../../../component/colorpicker/colorarray/ColorArray';\r\nimport { h } from '../../../../../lib/Element';\r\nimport { ColorItem } from '../../../../../component/colorpicker/colorarray/ColorItem';\r\nimport { ELContextMenuDivider } from '../../../../../component/elcontextmenu/ELContextMenuDivider';\r\nimport { Icon } from '../../Icon';\r\nimport { Utils } from '../../../../../utils/Utils';\r\n\r\nimport { FillColorContextMenuItem } from './FillColorContextMenuItem';\r\nimport { ColorPicker } from '../../../../../component/colorpicker/ColorPicker';\r\n\r\nclass FillColorContextMenu extends ELContextMenu {\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-color-context-menu`, Utils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.colorPicker = new ColorPicker({\r\n      selectCb: (color) => {\r\n        const item = new ColorItem({ color });\r\n        this.customizeColorArray.add(item);\r\n        this.customizeColorArray.setActiveByColor(color);\r\n        this.colorArray.setActiveByColor(null);\r\n        this.options.onUpdate(color);\r\n        this.close();\r\n      },\r\n    });\r\n    // 重置\r\n    this.reset = new FillColorContextMenuItem('重置', new Icon('clear-color'));\r\n    this.reset.on(Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.options.onUpdate(null);\r\n      this.customizeColorArray.setActiveByColor(null);\r\n      this.colorArray.setActiveByColor(null);\r\n    });\r\n    // 颜色筛选\r\n    this.array = new FillColorContextMenuItem();\r\n    this.array.removeClass('hover');\r\n    this.colorArray = new ColorArray({\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) this.options.onUpdate(color);\r\n        this.customizeColorArray.setActiveByColor(null);\r\n        this.close();\r\n      },\r\n    });\r\n    this.array.children(this.colorArray);\r\n    // 历史选中\r\n    this.title = h('div', `${cssPrefix}-font-color-context-menu-color-title`);\r\n    this.title.text('自定义');\r\n    this.plus = new Icon('plus');\r\n    this.customizeColorArray = new ColorArray({\r\n      colors: [\r\n        new ColorItem({ icon: this.plus }),\r\n      ],\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) {\r\n          this.options.onUpdate(color);\r\n          this.colorArray.setActiveByColor(null);\r\n          this.close();\r\n        } else {\r\n          this.colorPicker.open(this.customizeColorArray.activeColor);\r\n        }\r\n      },\r\n    });\r\n    this.customize = new FillColorContextMenuItem();\r\n    this.customize.removeClass('hover');\r\n    this.customize.children(this.title);\r\n    this.customize.children(this.customizeColorArray);\r\n    // 菜单元素追加子节点\r\n    this.addItem(this.reset);\r\n    this.addItem(this.array);\r\n    this.addItem(new ELContextMenuDivider());\r\n    this.addItem(this.customize);\r\n  }\r\n\r\n  setActiveByColor(color) {\r\n    this.customizeColorArray.setActiveByColor(color);\r\n    this.colorArray.setActiveByColor(color);\r\n  }\r\n}\r\n\r\nexport { FillColorContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Utils } from '../../../utils/Utils';\r\nimport { EL_POPUP_POSITION } from '../../../component/elpopup/ElPopUp';\r\nimport { FillColorContextMenu } from './contextmenu/fillcolor/FillColorContextMenu';\r\n\r\nclass FillColor extends DropDownItem {\r\n  constructor(options) {\r\n    super(`${cssPrefix}-tools-fill-color`);\r\n    this.options = Utils.mergeDeep({ contextMenu: {} }, options);\r\n    this.icon = new Icon('fill-color');\r\n    this.fillColorContextMenu = new FillColorContextMenu(Utils.copyProp({\r\n      el: this,\r\n      position: EL_POPUP_POSITION.BOTTOM,\r\n    }, this.options.contextMenu));\r\n    this.setIcon(this.icon);\r\n    this.setColor('rgb(255, 255, 255)');\r\n    this.fillColorContextMenu.setActiveByColor('rgb(255, 255, 255)');\r\n  }\r\n\r\n  setColor(color) {\r\n    this.icon.css('border-bottom', `3px solid ${color}`);\r\n  }\r\n}\r\n\r\nexport { FillColor };\r\n","import { ELContextMenuItem } from '../../../../../../component/elcontextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\n\r\nclass BorderTypeContextMenuItem extends ELContextMenuItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-border-type-context-menu-item`);\r\n  }\r\n}\r\n\r\nexport { BorderTypeContextMenuItem };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon1 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border1`);\r\n    this.icon = new Icon('border1');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon1 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon2 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border2`);\r\n    this.icon = new Icon('border2');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon2 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon3 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border3`);\r\n    this.icon = new Icon('border3');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon3 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon4 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border4`);\r\n    this.icon = new Icon('border4');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon4 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon5 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border5`);\r\n    this.icon = new Icon('border5');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon5 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon6 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border6`);\r\n    this.icon = new Icon('border6');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon6 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon7 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border7`);\r\n    this.icon = new Icon('border7');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon7 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon8 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border8`);\r\n    this.icon = new Icon('border8');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon8 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon9 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border9`);\r\n    this.icon = new Icon('border9');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon9 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon10 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border10`);\r\n    this.icon = new Icon('border10');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon10 };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { DropDownItem } from '../../../base/DropDownItem';\r\n\r\nclass BorderColor extends DropDownItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border-color`);\r\n    this.icon = new Icon('border-color');\r\n    this.setIcon(this.icon);\r\n    this.setColor('#000000');\r\n  }\r\n\r\n  setColor(color) {\r\n    this.icon.css('border-bottom', `3px solid ${color}`);\r\n  }\r\n}\r\n\r\nexport { BorderColor };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { DropDownItem } from '../../../base/DropDownItem';\r\n\r\nclass BorderType extends DropDownItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border-type`);\r\n    this.icon = new Icon('border-type');\r\n    this.setIcon(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderType };\r\n","import { ELContextMenuItem } from '../../../../../../component/elcontextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { h } from '../../../../../../lib/Element';\r\n\r\nclass BorderColorContextMenuItem extends ELContextMenuItem {\r\n  constructor(title, icon) {\r\n    super(`${cssPrefix}-border-color-context-menu-item`);\r\n    this.title = title;\r\n    this.icon = icon;\r\n    if (icon) {\r\n      this.iconElement = h('div', `${cssPrefix}-border-color-context-menu-item-icon`);\r\n      this.iconElement.children(this.icon);\r\n      this.children(this.iconElement);\r\n    }\r\n    if (title) {\r\n      this.titleElement = h('div', `${cssPrefix}-border-color-context-menu-item-title`);\r\n      this.titleElement.text(title);\r\n      this.children(this.titleElement);\r\n    }\r\n  }\r\n}\r\n\r\nexport { BorderColorContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../../component/elcontextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../../const/Constant';\r\nimport { Utils } from '../../../../../../utils/Utils';\r\nimport { ColorPicker } from '../../../../../../component/colorpicker/ColorPicker';\r\nimport { ColorItem } from '../../../../../../component/colorpicker/colorarray/ColorItem';\r\nimport { Icon } from '../../../Icon';\r\nimport { ColorArray } from '../../../../../../component/colorpicker/colorarray/ColorArray';\r\nimport { ELContextMenuDivider } from '../../../../../../component/elcontextmenu/ELContextMenuDivider';\r\nimport { BorderColorContextMenuItem } from './BorderColorContextMenuItem';\r\nimport { h } from '../../../../../../lib/Element';\r\n\r\nclass BorderColorContextMenu extends ELContextMenu {\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-border-color-context-menu`, Utils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.colorPicker = new ColorPicker({\r\n      selectCb: (color) => {\r\n        const item = new ColorItem({ color });\r\n        this.customizeColorArray.add(item);\r\n        this.customizeColorArray.setActiveByColor(color);\r\n        this.colorArray.setActiveByColor(null);\r\n        this.options.onUpdate(color);\r\n        this.close();\r\n      },\r\n    });\r\n    // 重置\r\n    this.reset = new BorderColorContextMenuItem('重置', new Icon('clear-color'));\r\n    this.reset.on(Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.options.onUpdate('rgb(0,0,0)');\r\n      this.customizeColorArray.setActiveByColor(null);\r\n      this.colorArray.setActiveByColor(null);\r\n    });\r\n    // 颜色筛选\r\n    this.array = new BorderColorContextMenuItem();\r\n    this.array.removeClass('hover');\r\n    this.colorArray = new ColorArray({\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) this.options.onUpdate(color);\r\n        this.customizeColorArray.setActiveByColor(null);\r\n        this.close();\r\n      },\r\n    });\r\n    this.array.children(this.colorArray);\r\n    // 历史选中\r\n    this.title = h('div', `${cssPrefix}-border-color-context-menu-color-title`);\r\n    this.title.text('自定义');\r\n    this.plus = new Icon('plus');\r\n    this.customizeColorArray = new ColorArray({\r\n      colors: [\r\n        new ColorItem({ icon: this.plus }),\r\n      ],\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) {\r\n          this.options.onUpdate(color);\r\n          this.colorArray.setActiveByColor(null);\r\n          this.close();\r\n        } else {\r\n          this.colorPicker.open(this.customizeColorArray.activeColor);\r\n        }\r\n      },\r\n    });\r\n    this.customize = new BorderColorContextMenuItem();\r\n    this.customize.removeClass('hover');\r\n    this.customize.children(this.title);\r\n    this.customize.children(this.customizeColorArray);\r\n    // 菜单元素追加子节点\r\n    this.addItem(this.reset);\r\n    this.addItem(this.array);\r\n    this.addItem(new ELContextMenuDivider());\r\n    this.addItem(this.customize);\r\n  }\r\n\r\n  setActiveByColor(color) {\r\n    this.customizeColorArray.setActiveByColor(color);\r\n    this.colorArray.setActiveByColor(color);\r\n  }\r\n}\r\n\r\nexport { BorderColorContextMenu };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { h } from '../../../../../../lib/Element';\r\nimport { ELContextMenuItem } from '../../../../../../component/elcontextmenu/ELContextMenuItem';\r\n\r\nconst pool = [];\r\n\r\nclass LineTypeContextMenuItem extends ELContextMenuItem {\r\n  constructor(type) {\r\n    super(`${cssPrefix}-font-context-menu-item`);\r\n    this.type = type;\r\n    this.icon = new Icon('checked');\r\n    this.typeIcon = new Icon(type);\r\n    this.typeIcon.setWidth(50);\r\n    this.iconElement = h('div', `${cssPrefix}-font-context-menu-item-icon`);\r\n    this.titleElement = h('div', `${cssPrefix}-font-context-menu-item-title`);\r\n    this.iconElement.children(this.icon);\r\n    this.titleElement.children(this.typeIcon);\r\n    this.children(this.iconElement);\r\n    this.children(this.titleElement);\r\n    pool.push(this);\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title;\r\n    this.titleElement.text(title);\r\n  }\r\n\r\n  setActive() {\r\n    pool.forEach((item) => {\r\n      item.removeClass('active');\r\n    });\r\n    this.addClass('active');\r\n  }\r\n}\r\n\r\nexport { LineTypeContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../../component/elcontextmenu/ELContextMenu';\r\nimport { Utils } from '../../../../../../utils/Utils';\r\nimport { cssPrefix, Constant } from '../../../../../../const/Constant';\r\nimport { LineTypeContextMenuItem } from './LineTypeContextMenuItem';\r\n\r\n\r\nclass LineTypeContextMenu extends ELContextMenu {\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-line-type-context-menu`, Utils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new LineTypeContextMenuItem('line1'),\r\n      new LineTypeContextMenuItem('line2'),\r\n      new LineTypeContextMenuItem('line3'),\r\n      new LineTypeContextMenuItem('line4'),\r\n      new LineTypeContextMenuItem('line5'),\r\n      new LineTypeContextMenuItem('line6'),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      item.on(Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n        this.update(item.type);\r\n        item.setActive();\r\n      });\r\n      this.addItem(item);\r\n    });\r\n    this.setActiveByType(this.items[0].type);\r\n  }\r\n\r\n  update(type) {\r\n    const { options } = this;\r\n    options.onUpdate(type);\r\n    this.close();\r\n  }\r\n\r\n  setActiveByType(type) {\r\n    this.items.forEach((item) => {\r\n      if (item.type === type) {\r\n        item.setActive();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport { LineTypeContextMenu };\r\n","import { Utils } from '../utils/Utils';\r\n\r\nconst LINE_TYPE = {\r\n  SOLID_LINE: 0,\r\n  DOTTED_LINE: 1,\r\n  POINT_LINE: 2,\r\n  DOUBLE_LINE: 3,\r\n};\r\n\r\nclass SolidLine {\r\n\r\n  constructor(draw, attr) {\r\n    this.draw = draw;\r\n    Utils.mergeDeep(this, {\r\n      color: '#000000',\r\n      width: 1,\r\n    }, attr);\r\n  }\r\n\r\n  drawLine(sx, sy, ex, ey) {\r\n    const { draw } = this;\r\n    const { width, color } = this;\r\n    draw.attr({\r\n      lineWidth: width,\r\n      strokeStyle: color,\r\n    });\r\n    draw.setLineDash([]);\r\n    draw.line([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  setColor(color) {\r\n    this.color = color;\r\n  }\r\n\r\n  setWidth(width) {\r\n    this.width = width;\r\n  }\r\n}\r\n\r\nclass DottedLine {\r\n\r\n  constructor(draw, attr) {\r\n    this.draw = draw;\r\n    Utils.mergeDeep(this, {\r\n      color: '#000000',\r\n      width: 1,\r\n      dash: [5],\r\n    }, attr);\r\n  }\r\n\r\n  drawLine(sx, sy, ex, ey) {\r\n    const { draw, dash } = this;\r\n    const { width, color } = this;\r\n    draw.attr({\r\n      lineWidth: width,\r\n      strokeStyle: color,\r\n    });\r\n    draw.setLineDash(dash);\r\n    draw.line([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  setColor(color) {\r\n    this.color = color;\r\n  }\r\n\r\n  setWidth(width) {\r\n    this.width = width;\r\n  }\r\n}\r\n\r\nclass DoubleLine {\r\n\r\n  constructor(draw, attr) {\r\n    this.draw = draw;\r\n    Utils.mergeDeep(this, {\r\n      color: '#000000',\r\n      width: 1,\r\n      padding: 1,\r\n      spacing: 1.5,\r\n      leftShow: () => false,\r\n      topShow: () => false,\r\n      rightShow: () => false,\r\n      bottomShow: () => false,\r\n      iFMerge: () => false,\r\n      iFMergeFirstRow: () => false,\r\n      iFMergeLastRow: () => false,\r\n      iFMergeFirstCol: () => false,\r\n      iFMergeLastCol: () => false,\r\n    }, attr);\r\n  }\r\n\r\n  handleExternal(sx, sy, ex, ey, row, col, pos) {\r\n    const external = {};\r\n    const { leftShow, topShow, rightShow, bottomShow } = this;\r\n    const { iFMerge, iFMergeFirstRow, iFMergeLastRow, iFMergeFirstCol, iFMergeLastCol } = this;\r\n    const { spacing } = this;\r\n    let ifMerge = null;\r\n    let firstRow = null;\r\n    let lastRow = null;\r\n    let firstCol = null;\r\n    let lastCol = null;\r\n    switch (pos) {\r\n      case 'left':\r\n        ifMerge = iFMerge(row, col - 1);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row, col - 1);\r\n          lastRow = iFMergeLastRow(row, col - 1);\r\n          firstCol = iFMergeFirstCol(row, col - 1);\r\n          lastCol = iFMergeLastCol(row, col - 1);\r\n        }\r\n        break;\r\n      case 'top':\r\n        ifMerge = iFMerge(row - 1, col);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row - 1, col);\r\n          lastRow = iFMergeLastRow(row - 1, col);\r\n          firstCol = iFMergeFirstCol(row - 1, col);\r\n          lastCol = iFMergeLastCol(row - 1, col);\r\n        }\r\n        break;\r\n      case 'right':\r\n        ifMerge = iFMerge(row, col + 1);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row, col + 1);\r\n          lastRow = iFMergeLastRow(row, col + 1);\r\n          firstCol = iFMergeFirstCol(row, col + 1);\r\n          lastCol = iFMergeLastCol(row, col + 1);\r\n        }\r\n        break;\r\n      case 'bottom':\r\n        ifMerge = iFMerge(row + 1, col);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row + 1, col);\r\n          lastRow = iFMergeLastRow(row + 1, col);\r\n          firstCol = iFMergeFirstCol(row + 1, col);\r\n          lastCol = iFMergeLastCol(row + 1, col);\r\n        }\r\n        break;\r\n      default: break;\r\n    }\r\n    if (ifMerge) {\r\n      switch (pos) {\r\n        case 'left': {\r\n          external.sx = sx - spacing;\r\n          external.ex = ex - spacing;\r\n          // 检查顶边和上底边及左上角底边及左顶边\r\n          const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          external.sy = sy;\r\n          if (sTop || sBottom) external.sy = sy - spacing;\r\n          if (sTopLeftCorner && firstRow) external.sy = sy + spacing;\r\n          // 检查底边和下顶边及左下角顶边和左底边\r\n          const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          external.ey = ey;\r\n          if (eBottom || eTop) external.ey = ey + spacing;\r\n          if (eBottomLeftCorner && lastRow) external.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'top': {\r\n          external.sy = sy - spacing;\r\n          external.ey = ey - spacing;\r\n          // 检查左边和左右边及左上角右边及上左边\r\n          const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          external.sx = sx;\r\n          if (sLeft || sRight) external.sx = sx - spacing;\r\n          if (sTopLeftCorner && firstCol) external.sx = sx + spacing;\r\n          // 检查右边和右左边及右上角左边及上右边\r\n          const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          external.ex = ex;\r\n          if (eRight || eLeft) external.ex = ex + spacing;\r\n          if (eTopRightCorner && lastCol) external.ex = ex - spacing;\r\n          break;\r\n        }\r\n        case 'right': {\r\n          external.sx = sx + spacing;\r\n          external.ex = ex + spacing;\r\n          // 检查顶边和上底边及右上角底边及右顶边\r\n          const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          external.sy = sy;\r\n          if (sTop || sBottom) external.sy = sy - spacing;\r\n          if (sTopRightCorner && firstRow) external.sy = sy + spacing;\r\n          // 检查底边和下顶边及右下角顶边及右底边\r\n          const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          external.ey = ey;\r\n          if (eBottom || eTop) external.ey = ey + spacing;\r\n          if (eBottomRightCorner && lastRow) external.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'bottom': {\r\n          external.sy = sy + spacing;\r\n          external.ey = ey + spacing;\r\n          // 检查左边和左右边及左下角右边及下左边\r\n          const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          external.sx = sx;\r\n          if (sLeft || sRight) external.sx = sx - spacing;\r\n          if (sBottomLeftCorner && firstCol) external.sx = sx + spacing;\r\n          // 检查右边和右左边及右下角左边及下右边\r\n          const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          external.ex = ex;\r\n          if (eRight || eLeft) external.ex = ex + spacing;\r\n          if (eBottomRightCorner && lastCol) external.ex = ex - spacing;\r\n          break;\r\n        }\r\n        default: break;\r\n      }\r\n      return external;\r\n    }\r\n    switch (pos) {\r\n      case 'left': {\r\n        external.sx = sx - spacing;\r\n        external.ex = ex - spacing;\r\n        // 检查顶边和上底边及左上角底边及左顶边\r\n        const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        external.sy = sy;\r\n        if (sTop || sBottom) external.sy = sy - spacing;\r\n        if (sTopLeftCorner) external.sy = sy + spacing;\r\n        // 检查底边和下顶边及左下角顶边和左底边\r\n        const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        external.ey = ey;\r\n        if (eBottom || eTop) external.ey = ey + spacing;\r\n        if (eBottomLeftCorner) external.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'top': {\r\n        external.sy = sy - spacing;\r\n        external.ey = ey - spacing;\r\n        // 检查左边和左右边及左上角右边及上左边\r\n        const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        external.sx = sx;\r\n        if (sLeft || sRight) external.sx = sx - spacing;\r\n        if (sTopLeftCorner) external.sx = sx + spacing;\r\n        // 检查右边和右左边及右上角左边及上右边\r\n        const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        external.ex = ex;\r\n        if (eRight || eLeft) external.ex = ex + spacing;\r\n        if (eTopRightCorner) external.ex = ex - spacing;\r\n        break;\r\n      }\r\n      case 'right': {\r\n        external.sx = sx + spacing;\r\n        external.ex = ex + spacing;\r\n        // 检查顶边和上底边及右上角底边及右顶边\r\n        const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        external.sy = sy;\r\n        if (sTop || sBottom) external.sy = sy - spacing;\r\n        if (sTopRightCorner) external.sy = sy + spacing;\r\n        // 检查底边和下顶边及右下角顶边及右底边\r\n        const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        external.ey = ey;\r\n        if (eBottom || eTop) external.ey = ey + spacing;\r\n        if (eBottomRightCorner) external.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'bottom': {\r\n        external.sy = sy + spacing;\r\n        external.ey = ey + spacing;\r\n        // 检查左边和左右边及左下角右边及下左边\r\n        const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        external.sx = sx;\r\n        if (sLeft || sRight) external.sx = sx - spacing;\r\n        if (sBottomLeftCorner) external.sx = sx + spacing;\r\n        // 检查右边和右左边及右下角左边及下右边\r\n        const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        external.ex = ex;\r\n        if (eRight || eLeft) external.ex = ex + spacing;\r\n        if (eBottomRightCorner) external.ex = ex - spacing;\r\n        break;\r\n      }\r\n      default: break;\r\n    }\r\n    return external;\r\n  }\r\n\r\n  handleInternal(sx, sy, ex, ey, row, col, pos) {\r\n    const internal = {};\r\n    const { leftShow, topShow, rightShow, bottomShow } = this;\r\n    const { iFMerge, iFMergeFirstRow, iFMergeLastRow, iFMergeFirstCol, iFMergeLastCol } = this;\r\n    const { spacing } = this;\r\n    const ifMerge = iFMerge(row, col);\r\n    // merge\r\n    if (ifMerge) {\r\n      const firstRow = iFMergeFirstRow(row, col);\r\n      const lastRow = iFMergeLastRow(row, col);\r\n      const firstCol = iFMergeFirstCol(row, col);\r\n      const lastCol = iFMergeLastCol(row, col);\r\n      switch (pos) {\r\n        case 'left': {\r\n          internal.sx = sx + spacing;\r\n          internal.ex = ex + spacing;\r\n          // 检查顶边和上底边及左上角底边及左顶边\r\n          const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          internal.sy = sy;\r\n          if (sTopLeftCorner) internal.sy = sy - spacing;\r\n          if ((sTop || sBottom) && firstRow) internal.sy = sy + spacing;\r\n          // 检查底边和下顶边及左下角顶边和左底边\r\n          const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          internal.ey = ey;\r\n          if (eBottomLeftCorner) internal.ey = ey + spacing;\r\n          if ((eBottom || eTop) && lastRow) internal.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'top': {\r\n          internal.sy = sy + spacing;\r\n          internal.ey = ey + spacing;\r\n          // 检查左边和左右边及左上角右边及上左边\r\n          const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          internal.sx = sx;\r\n          if (sTopLeftCorner) internal.sx = sx - spacing;\r\n          if ((sLeft || sRight) && firstCol) internal.sx = sx + spacing;\r\n          // 检查右边和右左边及右上角左边及上右边\r\n          const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          internal.ex = ex;\r\n          if (eTopRightCorner) internal.ex = ex + spacing;\r\n          if ((eRight || eLeft) && lastCol) internal.ex = ex - spacing;\r\n          break;\r\n        }\r\n        case 'right': {\r\n          internal.sx = sx - spacing;\r\n          internal.ex = ex - spacing;\r\n          // 检查顶边和上底边及右上角底边及右上边\r\n          const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          internal.sy = sy;\r\n          if (sTopRightCorner) internal.sy = sy - spacing;\r\n          if ((sTop || sBottom) && firstRow) internal.sy = sy + spacing;\r\n          // 检查底边和下顶边右下角顶边及右下边\r\n          const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          internal.ey = ey;\r\n          if (eBottomRightCorner) internal.ey = ey + spacing;\r\n          if ((eBottom || eTop) && lastRow) internal.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'bottom': {\r\n          internal.sy = sy - spacing;\r\n          internal.ey = ey - spacing;\r\n          // 检查左边和左右边及左下角右边及下左边\r\n          const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          internal.sx = sx;\r\n          if (sBottomLeftCorner) internal.sx = sx - spacing;\r\n          if ((sLeft || sRight) && firstCol) internal.sx = sx + spacing;\r\n          // 检查右边和右左边及右下角左边及下右边\r\n          const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          internal.ex = ex;\r\n          if (eBottomRightCorner) internal.ex = ex + spacing;\r\n          if ((eRight || eLeft) && lastCol) internal.ex = ex - spacing;\r\n          break;\r\n        }\r\n        default: break;\r\n      }\r\n      return internal;\r\n    }\r\n    switch (pos) {\r\n      case 'left': {\r\n        internal.sx = sx + spacing;\r\n        internal.ex = ex + spacing;\r\n        // 检查顶边和上底边及左上角底边及左顶边\r\n        const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        internal.sy = sy;\r\n        if (sTopLeftCorner) internal.sy = sy - spacing;\r\n        if (sTop || sBottom) internal.sy = sy + spacing;\r\n        // 检查底边和下顶边及左下角顶边和左底边\r\n        const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        internal.ey = ey;\r\n        if (eBottomLeftCorner) internal.ey = ey + spacing;\r\n        if (eBottom || eTop) internal.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'top': {\r\n        internal.sy = sy + spacing;\r\n        internal.ey = ey + spacing;\r\n        // 检查左边和左右边及左上角右边及上左边\r\n        const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        internal.sx = sx;\r\n        if (sTopLeftCorner) internal.sx = sx - spacing;\r\n        if (sLeft || sRight) internal.sx = sx + spacing;\r\n        // 检查右边和右左边及右上角左边及上右边\r\n        const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        internal.ex = ex;\r\n        if (eTopRightCorner) internal.ex = ex + spacing;\r\n        if (eRight || eLeft) internal.ex = ex - spacing;\r\n        break;\r\n      }\r\n      case 'right': {\r\n        internal.sx = sx - spacing;\r\n        internal.ex = ex - spacing;\r\n        // 检查顶边和上底边及右上角底边及右上边\r\n        const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        internal.sy = sy;\r\n        if (sTopRightCorner) internal.sy = sy - spacing;\r\n        if (sTop || sBottom) internal.sy = sy + spacing;\r\n        // 检查底边和下顶边右下角顶边及右下边\r\n        const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        internal.ey = ey;\r\n        if (eBottomRightCorner) internal.ey = ey + spacing;\r\n        if (eBottom || eTop) internal.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'bottom': {\r\n        internal.sy = sy - spacing;\r\n        internal.ey = ey - spacing;\r\n        // 检查左边和左右边及左下角右边及下左边\r\n        const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        internal.sx = sx;\r\n        if (sBottomLeftCorner) internal.sx = sx - spacing;\r\n        if (sLeft || sRight) internal.sx = sx + spacing;\r\n        // 检查右边和右左边及右下角左边及下右边\r\n        const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        internal.ex = ex;\r\n        if (eBottomRightCorner) internal.ex = ex + spacing;\r\n        if (eRight || eLeft) internal.ex = ex - spacing;\r\n        break;\r\n      }\r\n      default: break;\r\n    }\r\n    return internal;\r\n  }\r\n\r\n  drawLine(sx, sy, ex, ey, row, col, pos) {\r\n    const { draw } = this;\r\n    const { width, color } = this;\r\n    draw.attr({\r\n      lineWidth: width,\r\n      strokeStyle: color,\r\n    });\r\n    draw.setLineDash([]);\r\n    const external = this.handleExternal(sx, sy, ex, ey, row, col, pos);\r\n    const internal = this.handleInternal(sx, sy, ex, ey, row, col, pos);\r\n    if (!Utils.isEmptyObject(internal)) {\r\n      draw.line([internal.sx, internal.sy], [internal.ex, internal.ey]);\r\n    }\r\n    if (!Utils.isEmptyObject(external)) {\r\n      draw.line([external.sx, external.sy], [external.ex, external.ey]);\r\n    }\r\n  }\r\n\r\n  setColor(color) {\r\n    this.color = color;\r\n  }\r\n\r\n  setWidth(width) {\r\n    this.width = width;\r\n  }\r\n}\r\n\r\nclass Line {\r\n\r\n  constructor(draw, attr = {}) {\r\n    this.type = LINE_TYPE.SOLID_LINE;\r\n    this.solidLine = new SolidLine(draw, Utils.mergeDeep({}, attr));\r\n    this.dottedLine = new DottedLine(draw, Utils.mergeDeep({\r\n      dash: [5],\r\n    }, attr));\r\n    this.pointLine = new DottedLine(draw, Utils.mergeDeep({\r\n      dash: [2, 2],\r\n    }, attr));\r\n    this.doubleLine = new DoubleLine(draw, Utils.mergeDeep({}, attr));\r\n  }\r\n\r\n  drawLine(sx, sy, ex, ey, row, col, pos) {\r\n    const {\r\n      type,\r\n      solidLine,\r\n      dottedLine,\r\n      pointLine,\r\n      doubleLine,\r\n    } = this;\r\n    switch (type) {\r\n      case LINE_TYPE.SOLID_LINE:\r\n        solidLine.drawLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOTTED_LINE:\r\n        dottedLine.drawLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.POINT_LINE:\r\n        pointLine.drawLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOUBLE_LINE:\r\n        doubleLine.drawLine(sx, sy, ex, ey, row, col, pos);\r\n        break;\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  setType(type) {\r\n    this.type = type;\r\n  }\r\n\r\n  setWidth(width) {\r\n    if (width) {\r\n      if (this.type === LINE_TYPE.SOLID_LINE) {\r\n        this.solidLine.setWidth(width);\r\n      }\r\n    }\r\n  }\r\n\r\n  setColor(color) {\r\n    if (color) {\r\n      this.solidLine.setColor(color);\r\n      this.dottedLine.setColor(color);\r\n      this.pointLine.setColor(color);\r\n      this.doubleLine.setColor(color);\r\n    }\r\n  }\r\n}\r\n\r\nexport { Line, LINE_TYPE };\r\n","import { ELContextMenu } from '../../../../../../component/elcontextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../../const/Constant';\r\nimport { Utils } from '../../../../../../utils/Utils';\r\nimport { BorderTypeContextMenuItem } from './BorderTypeContextMenuItem';\r\nimport { ELContextMenuDivider } from '../../../../../../component/elcontextmenu/ELContextMenuDivider';\r\nimport { h } from '../../../../../../lib/Element';\r\nimport { BorderIcon1 } from '../../icon/border/BorderIcon1';\r\nimport { BorderIcon2 } from '../../icon/border/BorderIcon2';\r\nimport { BorderIcon3 } from '../../icon/border/BorderIcon3';\r\nimport { BorderIcon4 } from '../../icon/border/BorderIcon4';\r\nimport { BorderIcon5 } from '../../icon/border/BorderIcon5';\r\nimport { BorderIcon6 } from '../../icon/border/BorderIcon6';\r\nimport { BorderIcon7 } from '../../icon/border/BorderIcon7';\r\nimport { BorderIcon8 } from '../../icon/border/BorderIcon8';\r\nimport { BorderIcon9 } from '../../icon/border/BorderIcon9';\r\nimport { BorderIcon10 } from '../../icon/border/BorderIcon10';\r\nimport { BorderColor } from '../../icon/border/BorderColor';\r\nimport { BorderType } from '../../icon/border/BorderType';\r\nimport { EventBind } from '../../../../../../utils/EventBind';\r\nimport { EL_POPUP_POSITION, ElPopUp } from '../../../../../../component/elpopup/ElPopUp';\r\nimport { BorderColorContextMenu } from '../bordercolor/BorderColorContextMenu';\r\nimport { LineTypeContextMenu } from '../linetype/LineTypeContextMenu';\r\nimport { LINE_TYPE } from '../../../../../../canvas/Line';\r\n\r\nclass BorderTypeContextMenu extends ELContextMenu {\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-border-type-context-menu`, Utils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.type = LINE_TYPE.SOLID_LINE;\r\n    this.color = '#000000';\r\n    // 边框样式\r\n    this.borderIcon1 = new BorderIcon1();\r\n    this.borderIcon2 = new BorderIcon2();\r\n    this.borderIcon3 = new BorderIcon3();\r\n    this.borderIcon4 = new BorderIcon4();\r\n    this.borderIcon5 = new BorderIcon5();\r\n    const div1 = h('div', `${cssPrefix}-border-type-context-menu-type-icon-line`);\r\n    div1.children(this.borderIcon1);\r\n    div1.children(this.borderIcon2);\r\n    div1.children(this.borderIcon3);\r\n    div1.children(this.borderIcon4);\r\n    div1.children(this.borderIcon5);\r\n    this.borderIcon6 = new BorderIcon6();\r\n    this.borderIcon7 = new BorderIcon7();\r\n    this.borderIcon8 = new BorderIcon8();\r\n    this.borderIcon9 = new BorderIcon9();\r\n    this.borderIcon10 = new BorderIcon10();\r\n    const div2 = h('div', `${cssPrefix}-border-type-context-menu-type-icon-line`);\r\n    div2.children(this.borderIcon6);\r\n    div2.children(this.borderIcon7);\r\n    div2.children(this.borderIcon8);\r\n    div2.children(this.borderIcon9);\r\n    div2.children(this.borderIcon10);\r\n    this.borderIcons = new BorderTypeContextMenuItem();\r\n    this.borderIcons.removeClass('hover');\r\n    this.borderIcons.children(div1);\r\n    this.borderIcons.children(div2);\r\n    // 子菜单\r\n    this.borderColor = new BorderColor();\r\n    this.borderType = new BorderType();\r\n    const div3 = h('div', `${cssPrefix}-border-type-context-menu-type-icon-line`);\r\n    div3.children(this.borderColor);\r\n    div3.children(this.borderType);\r\n    this.borderColorAndType = new BorderTypeContextMenuItem();\r\n    this.borderColorAndType.removeClass('hover');\r\n    this.borderColorAndType.children(div3);\r\n    // 追加子菜单\r\n    this.addItem(this.borderIcons);\r\n    this.addItem(new ELContextMenuDivider());\r\n    this.addItem(this.borderColorAndType);\r\n    // 边框颜色菜单\r\n    this.borderColorContextMenu = new BorderColorContextMenu(Utils.copyProp({\r\n      el: this.borderColor,\r\n      position: EL_POPUP_POSITION.BOTTOM,\r\n    }, {\r\n      onUpdate: (color) => {\r\n        this.color = color;\r\n        this.borderColor.setColor(color);\r\n      },\r\n    }));\r\n    // 边框类型\r\n    this.lineTypeContextMenu = new LineTypeContextMenu(Utils.copyProp({\r\n      el: this.borderType,\r\n      position: EL_POPUP_POSITION.BOTTOM,\r\n    }, {\r\n      onUpdate: (type) => {\r\n        this.type = type;\r\n      },\r\n    }));\r\n    // 添加事件\r\n    EventBind.bind(this.borderColor, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { borderColorContextMenu } = this;\r\n      const { elPopUp } = borderColorContextMenu;\r\n      ElPopUp.closeAll([elPopUp, this.elPopUp]);\r\n      if (borderColorContextMenu.isOpen()) {\r\n        borderColorContextMenu.open();\r\n      } else {\r\n        borderColorContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    EventBind.bind(this.borderType, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { lineTypeContextMenu } = this;\r\n      const { elPopUp } = lineTypeContextMenu;\r\n      ElPopUp.closeAll([elPopUp, this.elPopUp]);\r\n      if (lineTypeContextMenu.isOpen()) {\r\n        lineTypeContextMenu.open();\r\n      } else {\r\n        lineTypeContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    EventBind.bind(this.borderIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border1', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    EventBind.bind(this.borderIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border2', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    EventBind.bind(this.borderIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border3', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    EventBind.bind(this.borderIcon4, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border4', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    EventBind.bind(this.borderIcon5, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border5', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    EventBind.bind(this.borderIcon6, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border6', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    EventBind.bind(this.borderIcon7, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border7', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    EventBind.bind(this.borderIcon8, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border8', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    EventBind.bind(this.borderIcon9, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border9', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    EventBind.bind(this.borderIcon10, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border10', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n  }\r\n}\r\n\r\nexport { BorderTypeContextMenu };\r\n","import { DropDownItem } from '../../../base/DropDownItem';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { BorderTypeContextMenu } from '../../border/bordertype/BorderTypeContextMenu';\r\nimport { Utils } from '../../../../../../utils/Utils';\r\nimport { EL_POPUP_POSITION } from '../../../../../../component/elpopup/ElPopUp';\r\n\r\nclass Border extends DropDownItem {\r\n  constructor(options) {\r\n    super(`${cssPrefix}-tools-border`);\r\n    this.options = Utils.copyProp({\r\n      contextMenu: {},\r\n    }, options);\r\n    this.icon = new Icon('border');\r\n    this.setIcon(this.icon);\r\n    this.borderTypeContextMenu = new BorderTypeContextMenu(Utils.copyProp({\r\n      el: this,\r\n      position: EL_POPUP_POSITION.BOTTOM,\r\n    }, this.options.contextMenu));\r\n  }\r\n}\r\nexport { Border };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass Merge extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-merge`);\r\n    this.icon = new Icon('merge');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { Merge };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass HorizontalIcon1 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-horizontal1`);\r\n    this.icon = new Icon('align-left');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { HorizontalIcon1 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass HorizontalIcon2 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-horizontal2`);\r\n    this.icon = new Icon('align-center');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { HorizontalIcon2 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass HorizontalIcon3 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-horizontal3`);\r\n    this.icon = new Icon('align-right');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { HorizontalIcon3 };\r\n","import { ELContextMenuItem } from '../../../../../component/elcontextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\n\r\nclass HorizontalContextMenuItem extends ELContextMenuItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-horizontal-type-context-menu-item`);\r\n  }\r\n}\r\n\r\nexport { HorizontalContextMenuItem };\r\n","class BaseFont {\r\n\r\n  constructor({\r\n    overflow, text, rect, dw, attr,\r\n  }) {\r\n    this.overflow = overflow;\r\n    this.text = text;\r\n    this.dw = dw;\r\n    this.rect = rect;\r\n    this.attr = attr;\r\n  }\r\n\r\n  textWidth(text) {\r\n    const { dw } = this;\r\n    return dw.measureText(text).width;\r\n  }\r\n\r\n  textBreak(text) {\r\n    return text.split(/\\n/);\r\n  }\r\n\r\n  isBlank(text) {\r\n    return text === null || text === undefined || text.toString().trim() === '';\r\n  }\r\n\r\n  setTextWrap(textWrap) {\r\n    this.attr.textWrap = textWrap;\r\n  }\r\n\r\n  setSize(size) {\r\n    this.attr.size = size;\r\n  }\r\n\r\n  setPadding(padding) {\r\n    this.attr.padding = padding;\r\n  }\r\n\r\n  truncateFont() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  overflowFont() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  wrapTextFont() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  draw() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n}\r\nBaseFont.VERTICAL_ALIGN = {\r\n  top: 'top',\r\n  center: 'middle',\r\n  bottom: 'bottom',\r\n};\r\nBaseFont.ALIGN = {\r\n  left: 'left',\r\n  center: 'center',\r\n  right: 'right',\r\n};\r\nBaseFont.TEXT_WRAP = {\r\n  OVER_FLOW: 1,\r\n  WORD_WRAP: 2,\r\n  TRUNCATE: 3,\r\n};\r\nBaseFont.TEXT_DIRECTION = {\r\n  HORIZONTAL: 'horizontal',\r\n  VERTICAL: 'vertical',\r\n  ANGLE: 'angle',\r\n};\r\nexport {\r\n  BaseFont,\r\n};\r\n","import { ELContextMenu } from '../../../../../component/elcontextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { Utils } from '../../../../../utils/Utils';\r\nimport { h } from '../../../../../lib/Element';\r\nimport { HorizontalIcon1 } from '../icon/horizontal/HorizontalIcon1';\r\nimport { HorizontalIcon2 } from '../icon/horizontal/HorizontalIcon2';\r\nimport { HorizontalIcon3 } from '../icon/horizontal/HorizontalIcon3';\r\nimport { HorizontalContextMenuItem } from './HorizontalContextMenuItem';\r\nimport { EventBind } from '../../../../../utils/EventBind';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass HorizontalContextMenu extends ELContextMenu {\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-horizontal-type-context-menu`, Utils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.horizontalIcon1 = new HorizontalIcon1();\r\n    this.horizontalIcon2 = new HorizontalIcon2();\r\n    this.horizontalIcon3 = new HorizontalIcon3();\r\n    const div2 = h('div', `${cssPrefix}-horizontal-type-context-menu-type-icon-line`);\r\n    div2.children(this.horizontalIcon1);\r\n    div2.children(this.horizontalIcon2);\r\n    div2.children(this.horizontalIcon3);\r\n    this.horizontalIcons = new HorizontalContextMenuItem();\r\n    this.horizontalIcons.removeClass('hover');\r\n    this.horizontalIcons.children(div2);\r\n    this.addItem(this.horizontalIcons);\r\n    // 添加事件\r\n    EventBind.bind(this.horizontalIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.ALIGN.left);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    EventBind.bind(this.horizontalIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.ALIGN.center);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    EventBind.bind(this.horizontalIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.ALIGN.right);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n  }\r\n}\r\n\r\nexport { HorizontalContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { HorizontalContextMenu } from './contextmenu/horizontal/HorizontalContextMenu';\r\nimport { Utils } from '../../../utils/Utils';\r\nimport { EL_POPUP_POSITION } from '../../../component/elpopup/ElPopUp';\r\n\r\nclass HorizontalAlign extends DropDownItem {\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-tools-horizontal-align`);\r\n    this.options = Utils.mergeDeep({ contextMenu: {} }, options);\r\n    this.icon = new Icon('align-left');\r\n    this.setIcon(this.icon);\r\n    this.horizontalContextMenu = new HorizontalContextMenu(Utils.copyProp({\r\n      el: this,\r\n      position: EL_POPUP_POSITION.BOTTOM,\r\n    }, this.options.contextMenu));\r\n  }\r\n}\r\nexport { HorizontalAlign };\r\n","import { ELContextMenuItem } from '../../../../../component/elcontextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\n\r\nclass VerticalContextMenuItem extends ELContextMenuItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-vertical-type-context-menu-item`);\r\n  }\r\n}\r\n\r\nexport { VerticalContextMenuItem };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass VerticalIcon1 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-verticalIcon1`);\r\n    this.icon = new Icon('align-top');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { VerticalIcon1 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass VerticalIcon2 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-verticalIcon2`);\r\n    this.icon = new Icon('align-middle');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { VerticalIcon2 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass VerticalIcon3 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-verticalIcon3`);\r\n    this.icon = new Icon('align-bottom');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { VerticalIcon3 };\r\n","import { ELContextMenu } from '../../../../../component/elcontextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { Utils } from '../../../../../utils/Utils';\r\nimport { h } from '../../../../../lib/Element';\r\nimport { VerticalContextMenuItem } from './VerticalContextMenuItem';\r\nimport { VerticalIcon1 } from '../icon/vertical/VerticalIcon1';\r\nimport { VerticalIcon2 } from '../icon/vertical/VerticalIcon2';\r\nimport { VerticalIcon3 } from '../icon/vertical/VerticalIcon3';\r\nimport { EventBind } from '../../../../../utils/EventBind';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass VerticalContextMenu extends ELContextMenu {\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-vertical-type-context-menu`, Utils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.verticalIcon1 = new VerticalIcon1();\r\n    this.verticalIcon2 = new VerticalIcon2();\r\n    this.verticalIcon3 = new VerticalIcon3();\r\n    const div2 = h('div', `${cssPrefix}-vertical-type-context-menu-type-icon-line`);\r\n    div2.children(this.verticalIcon1);\r\n    div2.children(this.verticalIcon2);\r\n    div2.children(this.verticalIcon3);\r\n    this.verticalIcons = new VerticalContextMenuItem();\r\n    this.verticalIcons.removeClass('hover');\r\n    this.verticalIcons.children(div2);\r\n    this.addItem(this.verticalIcons);\r\n    // 添加事件\r\n    EventBind.bind(this.verticalIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.VERTICAL_ALIGN.top);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    EventBind.bind(this.verticalIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.VERTICAL_ALIGN.center);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    EventBind.bind(this.verticalIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.VERTICAL_ALIGN.bottom);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n  }\r\n}\r\n\r\nexport { VerticalContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Utils } from '../../../utils/Utils';\r\nimport { EL_POPUP_POSITION } from '../../../component/elpopup/ElPopUp';\r\nimport { VerticalContextMenu } from './contextmenu/vertical/VerticalContextMenu';\r\n\r\nclass VerticalAlign extends DropDownItem {\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-tools-vertical-align`);\r\n    this.options = Utils.mergeDeep({ contextMenu: {} }, options);\r\n    this.icon = new Icon('align-middle');\r\n    this.setIcon(this.icon);\r\n    this.verticalContextMenu = new VerticalContextMenu(Utils.copyProp({\r\n      el: this,\r\n      position: EL_POPUP_POSITION.BOTTOM,\r\n    }, this.options.contextMenu));\r\n  }\r\n}\r\n\r\nexport { VerticalAlign };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass TextWrappingIcon1 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-text-wrapping1`);\r\n    this.icon = new Icon('truncate');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { TextWrappingIcon1 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass TextWrappingIcon2 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-text-wrapping2`);\r\n    this.icon = new Icon('overflow');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { TextWrappingIcon2 };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass TextWrappingIcon3 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-text-wrapping3`);\r\n    this.icon = new Icon('wrap');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { TextWrappingIcon3 };\r\n","import { ELContextMenuItem } from '../../../../../component/elcontextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\n\r\nclass TextWrappingContextMenuItem extends ELContextMenuItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-text-wrapping-context-menu-item`);\r\n  }\r\n}\r\n\r\nexport { TextWrappingContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../component/elcontextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { Utils } from '../../../../../utils/Utils';\r\nimport { TextWrappingIcon1 } from '../icon/textwrapping/TextWrappingIcon1';\r\nimport { TextWrappingIcon2 } from '../icon/textwrapping/TextWrappingIcon2';\r\nimport { TextWrappingIcon3 } from '../icon/textwrapping/TextWrappingIcon3';\r\nimport { h } from '../../../../../lib/Element';\r\nimport { TextWrappingContextMenuItem } from './TextWrappingContextMenuItem';\r\nimport { EventBind } from '../../../../../utils/EventBind';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass TextWrappingContextMenu extends ELContextMenu {\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-text-wrapping-context-menu`, Utils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.textWrappingIcon1 = new TextWrappingIcon1();\r\n    this.textWrappingIcon2 = new TextWrappingIcon2();\r\n    this.textWrappingIcon3 = new TextWrappingIcon3();\r\n    const div2 = h('div', `${cssPrefix}-text-wrapping-context-menu-type-icon-line`);\r\n    div2.children(this.textWrappingIcon1);\r\n    div2.children(this.textWrappingIcon2);\r\n    div2.children(this.textWrappingIcon3);\r\n    this.textWrappingIcons = new TextWrappingContextMenuItem();\r\n    this.textWrappingIcons.removeClass('hover');\r\n    this.textWrappingIcons.children(div2);\r\n    this.addItem(this.textWrappingIcons);\r\n    // 添加事件\r\n    EventBind.bind(this.textWrappingIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.TEXT_WRAP.TRUNCATE);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    EventBind.bind(this.textWrappingIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.TEXT_WRAP.OVER_FLOW);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    EventBind.bind(this.textWrappingIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.TEXT_WRAP.WORD_WRAP);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n  }\r\n}\r\n\r\nexport { TextWrappingContextMenu };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Utils } from '../../../utils/Utils';\r\nimport { EL_POPUP_POSITION } from '../../../component/elpopup/ElPopUp';\r\nimport { DropDownItem } from './base/DropDownItem';\r\nimport { TextWrappingContextMenu } from './contextmenu/textwrapping/TextWrappingContextMenu';\r\n\r\nclass TextWrapping extends DropDownItem {\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-tools-text-wrapping`);\r\n    this.options = Utils.mergeDeep({ contextMenu: {} }, options);\r\n    this.icon = new Icon('text-wrap');\r\n    this.setIcon(this.icon);\r\n    this.textWrappingContextMenu = new TextWrappingContextMenu(Utils.copyProp({\r\n      el: this,\r\n      position: EL_POPUP_POSITION.BOTTOM,\r\n    }, this.options.contextMenu));\r\n  }\r\n}\r\n\r\nexport { TextWrapping };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass Fixed extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-fixed`);\r\n    this.icon = new Icon('freeze');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { Fixed };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass Filter extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-filter`);\r\n    this.icon = new Icon('filter');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { Filter };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\n\r\nclass Functions extends DropDownItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-format`);\r\n    this.icon = new Icon('functions');\r\n    this.setIcon(this.icon);\r\n  }\r\n}\r\nexport { Functions };\r\n","import { Utils } from '../../../utils/Utils';\r\n\r\nclass RectRange {\r\n\r\n  /**\r\n   * RectRange\r\n   * @param {int} sri 起始行\r\n   * @param {int} sci 起始列\r\n   * @param {int} eri 结束行\r\n   * @param {int} eci 结束列\r\n   * @param {int} w 宽度\r\n   * @param {int} h 高度\r\n   */\r\n  constructor(sri, sci, eri, eci, w = 0, h = 0) {\r\n    this.sri = sri;\r\n    this.sci = sci;\r\n    this.eri = eri;\r\n    this.eci = eci;\r\n    this.w = w;\r\n    this.h = h;\r\n  }\r\n\r\n  /**\r\n   * 设置区域\r\n   * @param {int} sri 起始行\r\n   * @param {int} sci 起始列\r\n   * @param {int} eri 结束行\r\n   * @param {int} eci 结束列\r\n   */\r\n  set(sri, sci, eri, eci) {\r\n    this.sri = sri;\r\n    this.sci = sci;\r\n    this.eri = eri;\r\n    this.eci = eci;\r\n  }\r\n\r\n  /**\r\n   * 判断是否跨多个单元格\r\n   * @returns {boolean}\r\n   */\r\n  multiple() {\r\n    return this.eri - this.sri > 0 || this.eci - this.sci > 0;\r\n  }\r\n\r\n  /**\r\n   * 判断当前的区域是否包含指定的行和列\r\n   * 参数支持 ri, ci 和 A10 两种形式\r\n   * @param {[int, int] | String} args 行索引,列索引 或者 字符串\r\n   * @returns {boolean}\r\n   */\r\n  includes(...args) {\r\n    let [ri, ci] = [0, 0];\r\n    if (args.length === 1) {\r\n      [ci, ri] = Utils.expr2xy(args[0]);\r\n    } else if (args.length === 2) {\r\n      [ri, ci] = args;\r\n    }\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this;\r\n    return sri <= ri && ri <= eri && sci <= ci && ci <= eci;\r\n  }\r\n\r\n  /**\r\n   * 循环过滤指定的行列\r\n   * @param {Function} cb 回调函数\r\n   * @param {Function} rowFilter 过滤使用的回调函数\r\n   */\r\n  each(cb, rowFilter = () => true) {\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this;\r\n    for (let i = sri; i <= eri; i += 1) {\r\n      if (rowFilter(i)) {\r\n        for (let j = sci; j <= eci; j += 1) {\r\n          cb(i, j);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 判断当前的区域是否包含指定的区域\r\n   * @param {RectRange} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  contains(other) {\r\n    return this.sri <= other.sri\r\n      && this.sci <= other.sci\r\n      && this.eri >= other.eri\r\n      && this.eci >= other.eci;\r\n  }\r\n\r\n  /**\r\n   * 判断当前的区域是否被指定的区域包含\r\n   * @param {RectRange} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  within(other) {\r\n    return this.sri >= other.sri\r\n      && this.sci >= other.sci\r\n      && this.eri <= other.eri\r\n      && this.eci <= other.eci;\r\n  }\r\n\r\n  /**\r\n   * 判断当前的区域和指定的区域不发生重合\r\n   * @param {RectRange} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  disjoint(other) {\r\n    return this.sri > other.eri\r\n      || this.sci > other.eci\r\n      || other.sri > this.eri\r\n      || other.sci > this.eci;\r\n  }\r\n\r\n  /**\r\n   * 判断当前的区域和指定的区域发生重合\r\n   * @param {RectRange} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  intersects(other) {\r\n    return this.sri <= other.eri\r\n      && this.sci <= other.eci\r\n      && other.sri <= this.eri\r\n      && other.sci <= this.eci;\r\n  }\r\n\r\n  /**\r\n   * 返回当前区域和指定区域合并后的新区域\r\n   * @param {RectRange} other 区域\r\n   * @returns {RectRange}\r\n   */\r\n  union(other) {\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this;\r\n    return new RectRange(\r\n      other.sri < sri ? other.sri : sri,\r\n      other.sci < sci ? other.sci : sci,\r\n      other.eri > eri ? other.eri : eri,\r\n      other.eci > eci ? other.eci : eci,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 返回当前区域和指定区域合重合的新区域\r\n   * @param {RectRange} other\r\n   * @returns {RectRange}\r\n   */\r\n  coincide(other) {\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this;\r\n    if (this.disjoint(other)) {\r\n      return RectRange.EMPTY;\r\n    }\r\n    return new RectRange(\r\n      other.sri > sri ? other.sri : sri,\r\n      other.sci > sci ? other.sci : sci,\r\n      other.eri < eri ? other.eri : eri,\r\n      other.eci < eci ? other.eci : eci,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 当前区域和指定区域重合\r\n   * 返回当前区域和指定区域不重合的部分\r\n   * @param {RectRange} other 区域\r\n   * @returns {Array}\r\n   */\r\n  coincideDifference(other) {\r\n    if (this.coincide(other).equals(RectRange.EMPTY)) {\r\n      return [];\r\n    }\r\n    return this.difference(other);\r\n  }\r\n\r\n  /**\r\n   * 返回当前区域和指定区域不重合的部分\r\n   * @param {RectRange} other 区域\r\n   * @returns {Array}\r\n   */\r\n  difference(other) {\r\n    const ret = [];\r\n    const addRet = (sri, sci, eri, eci) => {\r\n      ret.push(new RectRange(sri, sci, eri, eci));\r\n    };\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this;\r\n    const dsr = other.sri - sri;\r\n    const dsc = other.sci - sci;\r\n    const der = eri - other.eri;\r\n    const dec = eci - other.eci;\r\n    if (dsr > 0) {\r\n      addRet(sri, sci, other.sri - 1, eci);\r\n      if (der > 0) {\r\n        addRet(other.eri + 1, sci, eri, eci);\r\n        if (dsc > 0) {\r\n          addRet(other.sri, sci, other.eri, other.sci - 1);\r\n        }\r\n        if (dec > 0) {\r\n          addRet(other.sri, other.eci + 1, other.eri, eci);\r\n        }\r\n      } else {\r\n        if (dsc > 0) {\r\n          addRet(other.sri, sci, eri, other.sci - 1);\r\n        }\r\n        if (dec > 0) {\r\n          addRet(other.sri, other.eci + 1, eri, eci);\r\n        }\r\n      }\r\n    } else if (der > 0) {\r\n      addRet(other.eri + 1, sci, eri, eci);\r\n      if (dsc > 0) {\r\n        addRet(sri, sci, other.eri, other.sci - 1);\r\n      }\r\n      if (dec > 0) {\r\n        addRet(sri, other.eci + 1, other.eri, eci);\r\n      }\r\n    }\r\n    if (dsc > 0) {\r\n      addRet(sri, sci, eri, other.sci - 1);\r\n      if (dec > 0) {\r\n        addRet(sri, other.eri + 1, eri, eci);\r\n        if (dsr > 0) {\r\n          addRet(sri, other.sci, other.sri - 1, other.eci);\r\n        }\r\n        if (der > 0) {\r\n          addRet(other.sri + 1, other.sci, eri, other.eci);\r\n        }\r\n      } else {\r\n        if (dsr > 0) {\r\n          addRet(sri, other.sci, other.sri - 1, eci);\r\n        }\r\n        if (der > 0) {\r\n          addRet(other.sri + 1, other.sci, eri, eci);\r\n        }\r\n      }\r\n    } else if (dec > 0) {\r\n      addRet(sri, other.eci + 1, eri, eci);\r\n      if (dsr > 0) {\r\n        addRet(sri, sci, other.sri - 1, other.eci);\r\n      }\r\n      if (der > 0) {\r\n        addRet(other.eri + 1, sci, eri, other.eci);\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * 当前区域跨的行列数\r\n   * @returns {number[]}\r\n   */\r\n  size() {\r\n    return [\r\n      this.eri - this.sri + 1,\r\n      this.eci - this.sci + 1,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * 返回边缘区域\r\n   * @returns {{top: RectRange, left: RectRange, bottom: RectRange, right: RectRange}}\r\n   */\r\n  brink() {\r\n    const { sri, eri, sci, eci } = this;\r\n    const top = new RectRange(sri, sci, sri, eci);\r\n    const bottom = new RectRange(eri, sci, eri, eci);\r\n    const right = new RectRange(sri, eci, eri, eci);\r\n    const left = new RectRange(sri, sci, eri, sci);\r\n    return { top, right, bottom, left };\r\n  }\r\n\r\n  /**\r\n   * equals\r\n   * @param {RectRange} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  equals(other) {\r\n    return this.eri === other.eri\r\n      && this.eci === other.eci\r\n      && this.sri === other.sri\r\n      && this.sci === other.sci;\r\n  }\r\n\r\n  /**\r\n   * 克隆\r\n   * @returns {RectRange}\r\n   */\r\n  clone() {\r\n    const {\r\n      sri, sci, eri, eci, w, h,\r\n    } = this;\r\n    return new RectRange(sri, sci, eri, eci, w, h);\r\n  }\r\n\r\n  toString() {\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this;\r\n    let ref = Utils.xy2expr(sci, sri);\r\n    if (this.multiple()) {\r\n      ref = `${ref}:${Utils.xy2expr(eci, eri)}`;\r\n    }\r\n    return ref;\r\n  }\r\n\r\n  /**\r\n   * 将 B1:B8 或者 B1 参数转换成新的区域\r\n   * @param {String} ref 行列字符串\r\n   * @returns {RectRange}\r\n   */\r\n  static valueOf(ref) {\r\n    const refs = ref.split(':');\r\n    const [sci, sri] = Utils.expr2xy(refs[0]);\r\n    let [eri, eci] = [sri, sci];\r\n    if (refs.length > 1) {\r\n      [eci, eri] = Utils.expr2xy(refs[1]);\r\n    }\r\n    return new RectRange(sri, sci, eri, eci);\r\n  }\r\n}\r\n\r\nRectRange.EMPTY = new RectRange(-1, -1, -1, -1);\r\n\r\nexport { RectRange };\r\n","class Rect {\r\n\r\n  constructor({\r\n    x, y, width, height,\r\n  }) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  /**\r\n   * 扩展尺寸\r\n   * @param size\r\n   * @returns {Rect}\r\n   */\r\n  expandSize(size) {\r\n    this.width += size;\r\n    this.height += size;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 判断两个矩形是否不发生重合\r\n   * @param {Rect} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  disjoint(other) {\r\n    return this.x > other.x + other.width\r\n      || this.y > this.y + other.height\r\n      || other.x > this.x + this.width\r\n      || other.y > this.y + this.height;\r\n  }\r\n\r\n  /**\r\n   * 复制\r\n   * @returns {Rect}\r\n   */\r\n  clone() {\r\n    const { x, y, width, height } = this;\r\n    return new Rect({ x, y, width, height });\r\n  }\r\n\r\n}\r\n\r\n\r\nexport { Rect };\r\n","/* global document */\r\nimport { Selector } from './Selector';\r\nimport { EventBind } from '../../../../utils/EventBind';\r\nimport { Constant } from '../../../../const/Constant';\r\nimport { ScreenWidget } from '../../screen/ScreenWidget';\r\nimport { RectRange } from '../../tablebase/RectRange';\r\nimport { Rect } from '../../../../canvas/Rect';\r\n\r\nconst SCREEN_SELECT_EVENT = {\r\n  DOWN_SELECT: Symbol('选择单元格时触发'),\r\n  CHANGE: Symbol('选择区域大小发生变化时触发'),\r\n  SELECT_CHANGE: Symbol('选择区域发生变化时触发'),\r\n  SELECT_CHANGE_OVER: Symbol('选择区域结束时触发'),\r\n};\r\n\r\nclass ScreenSelector extends ScreenWidget {\r\n\r\n  constructor(screen, options = {}) {\r\n    super(screen);\r\n    this.options = options;\r\n    this.selectorAttr = null;\r\n    this.downSelectorAttr = null;\r\n    this.onChangeStack = [];\r\n    this.onSelectChangeStack = [];\r\n    this.onSelectChangeOver = [];\r\n    this.onDownSelectStack = [];\r\n    this.lt = new Selector();\r\n    this.t = new Selector();\r\n    this.l = new Selector();\r\n    this.br = new Selector();\r\n    this.bind();\r\n  }\r\n\r\n  bind() {\r\n    const { screen } = this;\r\n    const { table } = screen;\r\n    const { mousePointer, focus } = table;\r\n    EventBind.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\r\n      if (e1.button !== 0) return;\r\n      const { activate } = focus;\r\n      const { el } = activate;\r\n      if (el !== table) return;\r\n      const { x, y } = table.computeEventXy(e1);\r\n      const downSelectAttr = this.getDownXYSelectorAttr(x, y);\r\n      this.setSelectAttr(downSelectAttr);\r\n      this.setDownSelectAttr(downSelectAttr);\r\n      this.setOffset(downSelectAttr);\r\n      this.onDownSelectStack.forEach(cb => cb());\r\n      this.onChangeStack.forEach(cb => cb());\r\n      this.onSelectChangeStack.forEach(cb => cb());\r\n      const { edgeType } = downSelectAttr;\r\n      let key;\r\n      switch (edgeType) {\r\n        case 'left': {\r\n          key = Constant.MOUSE_POINTER_TYPE.SELECT_ONE_ROW;\r\n          break;\r\n        }\r\n        case 'top': {\r\n          key = Constant.MOUSE_POINTER_TYPE.SELECT_ONE_COLUMN;\r\n          break;\r\n        }\r\n        default: {\r\n          key = Constant.MOUSE_POINTER_TYPE.SELECT_CELL;\r\n          break;\r\n        }\r\n      }\r\n      mousePointer.on(key);\r\n      EventBind.mouseMoveUp(document, (e2) => {\r\n        const { x, y } = table.computeEventXy(e2);\r\n        const moveSelectorAttr = this.getMoveXySelectorAttr(downSelectAttr, x, y);\r\n        this.setSelectAttr(moveSelectorAttr);\r\n        this.setOffset(moveSelectorAttr);\r\n        this.onChangeStack.forEach(cb => cb());\r\n        this.onSelectChangeStack.forEach(cb => cb());\r\n      }, () => {\r\n        mousePointer.off(key);\r\n        this.onSelectChangeOver.forEach(cb => cb());\r\n      });\r\n    });\r\n    EventBind.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\r\n      if (this.selectorAttr) {\r\n        this.setOffset(this.selectorAttr);\r\n      }\r\n    });\r\n    EventBind.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      if (this.selectorAttr) {\r\n        this.setOffset(this.selectorAttr);\r\n        this.onChangeStack.forEach(cb => cb());\r\n      }\r\n    });\r\n    EventBind.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      if (this.selectorAttr) {\r\n        this.setOffset(this.selectorAttr);\r\n        this.onChangeStack.forEach(cb => cb());\r\n      }\r\n    });\r\n    EventBind.bind(table, Constant.TABLE_EVENT_TYPE.SCALE_CHANGE, () => {\r\n      if (this.selectorAttr) {\r\n        this.setOffset(this.selectorAttr);\r\n        this.onChangeStack.forEach(cb => cb());\r\n      }\r\n    });\r\n  }\r\n\r\n  setLTOffset(selectorAttr) {\r\n    const { screen } = this;\r\n    const { table } = screen;\r\n    const {\r\n      xTableFrozenContent, cols, rows,\r\n    } = table;\r\n    const viewRange = xTableFrozenContent.getScrollView();\r\n    const { rect } = selectorAttr;\r\n\r\n    const empty = new RectRange(-1, -1, -1, -1);\r\n    const coincideRange = rect.coincide(viewRange);\r\n    if (empty.equals(coincideRange)) {\r\n      this.lt.hide();\r\n      return;\r\n    }\r\n\r\n    const width = cols.sectionSumWidth(coincideRange.sci, coincideRange.eci);\r\n    const height = rows.sectionSumHeight(coincideRange.sri, coincideRange.eri);\r\n    const top = rows.sectionSumHeight(viewRange.sri, coincideRange.sri - 1);\r\n    const left = cols.sectionSumWidth(viewRange.sci, coincideRange.sci - 1);\r\n\r\n    if (rect.eci > viewRange.eci) {\r\n      this.lt.areaEl.css('border-right', 'none');\r\n    } else {\r\n      this.lt.areaEl.cssRemoveKeys('border-right');\r\n    }\r\n    if (rect.eri > viewRange.eri) {\r\n      this.lt.areaEl.css('border-bottom', 'none');\r\n    } else {\r\n      this.lt.areaEl.cssRemoveKeys('border-bottom');\r\n    }\r\n\r\n    const size = new Rect({\r\n      x: left, y: top, width, height,\r\n    });\r\n    this.lt.offset({\r\n      width: size.width,\r\n      height: size.height,\r\n      left: size.x,\r\n      top: size.y,\r\n    }).show();\r\n  }\r\n\r\n  setTOffset(selectorAttr) {\r\n    const { screen } = this;\r\n    const { table } = screen;\r\n    const {\r\n      xTop, cols, rows,\r\n    } = table;\r\n    const viewRange = xTop.getScrollView();\r\n    const { rect } = selectorAttr;\r\n\r\n    const empty = new RectRange(-1, -1, -1, -1);\r\n    const coincideRange = rect.coincide(viewRange);\r\n    if (empty.equals(coincideRange)) {\r\n      this.t.hide();\r\n      return;\r\n    }\r\n\r\n    const width = cols.sectionSumWidth(coincideRange.sci, coincideRange.eci);\r\n    const height = rows.sectionSumHeight(coincideRange.sri, coincideRange.eri);\r\n    const top = rows.sectionSumHeight(viewRange.sri, coincideRange.sri - 1);\r\n    const left = cols.sectionSumWidth(viewRange.sci, coincideRange.sci - 1);\r\n\r\n    if (rect.sci < viewRange.sci) {\r\n      this.t.areaEl.css('border-left', 'none');\r\n    } else {\r\n      this.t.areaEl.cssRemoveKeys('border-left');\r\n    }\r\n    if (rect.eri > viewRange.eri) {\r\n      this.t.areaEl.css('border-bottom', 'none');\r\n    } else {\r\n      this.t.areaEl.cssRemoveKeys('border-bottom');\r\n    }\r\n    if (rect.eci > viewRange.eci) {\r\n      this.t.areaEl.css('border-right', 'none');\r\n    } else {\r\n      this.t.areaEl.cssRemoveKeys('border-right');\r\n    }\r\n\r\n    const size = new Rect({\r\n      x: left, y: top, width, height,\r\n    });\r\n    this.t.offset({\r\n      width: size.width,\r\n      height: size.height,\r\n      left: size.x,\r\n      top: size.y,\r\n    }).show();\r\n  }\r\n\r\n  setLOffset(selectorAttr) {\r\n    const { screen } = this;\r\n    const { table } = screen;\r\n    const {\r\n      xLeft, cols, rows,\r\n    } = table;\r\n    const viewRange = xLeft.getScrollView();\r\n    const { rect } = selectorAttr;\r\n\r\n    const empty = new RectRange(-1, -1, -1, -1);\r\n    const coincideRange = rect.coincide(viewRange);\r\n    if (empty.equals(coincideRange)) {\r\n      this.l.hide();\r\n      return;\r\n    }\r\n\r\n    const width = cols.sectionSumWidth(coincideRange.sci, coincideRange.eci);\r\n    const height = rows.sectionSumHeight(coincideRange.sri, coincideRange.eri);\r\n    const top = rows.sectionSumHeight(viewRange.sri, coincideRange.sri - 1);\r\n    const left = cols.sectionSumWidth(viewRange.sci, coincideRange.sci - 1);\r\n\r\n    if (rect.sri < viewRange.sri) {\r\n      this.l.areaEl.css('border-top', 'none');\r\n    } else {\r\n      this.l.areaEl.cssRemoveKeys('border-top');\r\n    }\r\n    if (rect.eci > viewRange.eci) {\r\n      this.l.areaEl.css('border-right', 'none');\r\n    } else {\r\n      this.l.areaEl.cssRemoveKeys('border-right');\r\n    }\r\n    if (rect.eri > viewRange.eri) {\r\n      this.l.areaEl.css('border-bottom', 'none');\r\n    } else {\r\n      this.l.areaEl.cssRemoveKeys('border-bottom');\r\n    }\r\n\r\n    const size = new Rect({\r\n      x: left, y: top, width, height,\r\n    });\r\n    this.l.offset({\r\n      width: size.width,\r\n      height: size.height,\r\n      left: size.x,\r\n      top: size.y,\r\n    }).show();\r\n  }\r\n\r\n  setBROffset(selectorAttr) {\r\n    const { screen } = this;\r\n    const { table } = screen;\r\n    const {\r\n      cols, rows,\r\n    } = table;\r\n    const viewRange = table.getScrollView();\r\n    const { rect } = selectorAttr;\r\n\r\n    const empty = new RectRange(-1, -1, -1, -1);\r\n    const coincideRange = rect.coincide(viewRange);\r\n    if (empty.equals(coincideRange)) {\r\n      this.br.hide();\r\n      return;\r\n    }\r\n\r\n    const width = cols.sectionSumWidth(coincideRange.sci, coincideRange.eci);\r\n    const height = rows.sectionSumHeight(coincideRange.sri, coincideRange.eri);\r\n    const top = rows.sectionSumHeight(viewRange.sri, coincideRange.sri - 1);\r\n    const left = cols.sectionSumWidth(viewRange.sci, coincideRange.sci - 1);\r\n\r\n    if (rect.sci < viewRange.sci) {\r\n      this.br.areaEl.css('border-left', 'none');\r\n    } else {\r\n      this.br.areaEl.cssRemoveKeys('border-left');\r\n    }\r\n    if (rect.sri < viewRange.sri) {\r\n      this.br.areaEl.css('border-top', 'none');\r\n    } else {\r\n      this.br.areaEl.cssRemoveKeys('border-top');\r\n    }\r\n    if (rect.eri > viewRange.eri) {\r\n      this.br.areaEl.css('border-bottom', 'none');\r\n    } else {\r\n      this.br.areaEl.cssRemoveKeys('border-bottom');\r\n    }\r\n    if (rect.eci > viewRange.eci) {\r\n      this.br.areaEl.css('border-right', 'none');\r\n    } else {\r\n      this.br.areaEl.cssRemoveKeys('border-right');\r\n    }\r\n\r\n    const size = new Rect({\r\n      x: left, y: top, width, height,\r\n    });\r\n    this.br.offset({\r\n      width: size.width,\r\n      height: size.height,\r\n      left: size.x,\r\n      top: size.y,\r\n    }).show();\r\n  }\r\n\r\n  setLTCorner(selectorAttr, intersectsArea) {\r\n    const { screen } = this;\r\n    const { table } = screen;\r\n    const { xTableFrozenContent } = table;\r\n    const viewRange = xTableFrozenContent.getScrollView();\r\n    const { rect, edge, edgeType } = selectorAttr;\r\n\r\n    const empty = new RectRange(-1, -1, -1, -1);\r\n    const coincideRange = rect.coincide(viewRange);\r\n    if (empty.equals(coincideRange)) {\r\n      return;\r\n    }\r\n\r\n    this.lt.cornerEl.cssRemoveKeys('left');\r\n    this.lt.cornerEl.cssRemoveKeys('top');\r\n    this.lt.cornerEl.cssRemoveKeys('right');\r\n    this.lt.cornerEl.cssRemoveKeys('bottom');\r\n    this.lt.cornerEl.hide();\r\n\r\n    if (edge) {\r\n      const ltT = intersectsArea === 'ltt';\r\n      const ltL = intersectsArea === 'ltl';\r\n      if (edgeType === 'left' && ltT) {\r\n        this.lt.cornerEl.show();\r\n        this.lt.cornerEl.css('left', '0px');\r\n        this.lt.cornerEl.css('bottom', '0px');\r\n      }\r\n      if (edgeType === 'top' && ltL) {\r\n        this.lt.cornerEl.show();\r\n        this.lt.cornerEl.css('right', '0px');\r\n        this.lt.cornerEl.css('top', '0px');\r\n      }\r\n    } else {\r\n      const lt = intersectsArea === 'lt';\r\n      if (lt) {\r\n        this.lt.cornerEl.show();\r\n        this.lt.cornerEl.css('right', '0px');\r\n        this.lt.cornerEl.css('bottom', '0px');\r\n      }\r\n      if (rect.eci > viewRange.eci) {\r\n        this.lt.cornerEl.hide();\r\n      }\r\n      if (rect.eri > viewRange.eri) {\r\n        this.lt.cornerEl.hide();\r\n      }\r\n    }\r\n  }\r\n\r\n  setTCorner(selectorAttr, intersectsArea) {\r\n    const { screen } = this;\r\n    const { table } = screen;\r\n    const { xTop } = table;\r\n    const viewRange = xTop.getScrollView();\r\n    const { rect, edge, edgeType } = selectorAttr;\r\n\r\n    const empty = new RectRange(-1, -1, -1, -1);\r\n    const coincideRange = rect.coincide(viewRange);\r\n    if (empty.equals(coincideRange)) {\r\n      return;\r\n    }\r\n\r\n    this.t.cornerEl.cssRemoveKeys('left');\r\n    this.t.cornerEl.cssRemoveKeys('top');\r\n    this.t.cornerEl.cssRemoveKeys('right');\r\n    this.t.cornerEl.cssRemoveKeys('bottom');\r\n    this.t.cornerEl.hide();\r\n\r\n    if (edge) {\r\n      const tBr = intersectsArea === 'tbr';\r\n      const ltTBrL = intersectsArea === 'lttlbr';\r\n      if (edgeType === 'top' && tBr) {\r\n        this.t.cornerEl.show();\r\n        this.t.cornerEl.css('right', '0px');\r\n        this.t.cornerEl.css('top', '0px');\r\n      }\r\n      if (edgeType === 'top' && ltTBrL) {\r\n        this.t.cornerEl.show();\r\n        this.t.cornerEl.css('right', '0px');\r\n        this.t.cornerEl.css('top', '0px');\r\n      }\r\n      if (edgeType === 'top' && rect.eci > viewRange.eci) {\r\n        this.t.cornerEl.hide();\r\n      }\r\n    } else {\r\n      const t = intersectsArea === 't';\r\n      const ltT = intersectsArea === 'ltt';\r\n      if (t || ltT) {\r\n        this.t.cornerEl.show();\r\n        this.t.cornerEl.css('right', '0px');\r\n        this.t.cornerEl.css('bottom', '0px');\r\n      }\r\n      if (rect.eci > viewRange.eci) {\r\n        this.t.cornerEl.hide();\r\n      }\r\n      if (rect.eri > viewRange.eri) {\r\n        this.t.cornerEl.hide();\r\n      }\r\n    }\r\n  }\r\n\r\n  setLCorner(selectorAttr, intersectsArea) {\r\n    const { screen } = this;\r\n    const { table } = screen;\r\n    const { xLeft } = table;\r\n    const viewRange = xLeft.getScrollView();\r\n    const { rect, edge, edgeType } = selectorAttr;\r\n\r\n    const empty = new RectRange(-1, -1, -1, -1);\r\n    const coincideRange = rect.coincide(viewRange);\r\n    if (empty.equals(coincideRange)) {\r\n      return;\r\n    }\r\n\r\n    this.l.cornerEl.cssRemoveKeys('left');\r\n    this.l.cornerEl.cssRemoveKeys('top');\r\n    this.l.cornerEl.cssRemoveKeys('right');\r\n    this.l.cornerEl.cssRemoveKeys('bottom');\r\n    this.l.cornerEl.hide();\r\n\r\n    if (edge) {\r\n      const lBr = intersectsArea === 'lbr';\r\n      const ltTBrL = intersectsArea === 'lttlbr';\r\n      if (edgeType === 'left' && lBr) {\r\n        this.l.cornerEl.show();\r\n        this.l.cornerEl.css('left', '0');\r\n        this.l.cornerEl.css('bottom', '0');\r\n      }\r\n      if (edgeType === 'left' && ltTBrL) {\r\n        this.l.cornerEl.show();\r\n        this.l.cornerEl.css('left', '0');\r\n        this.l.cornerEl.css('bottom', '0');\r\n      }\r\n      if (edgeType === 'left' && rect.eri > viewRange.eri) {\r\n        this.l.cornerEl.hide();\r\n      }\r\n    } else {\r\n      const l = intersectsArea === 'l';\r\n      const ltL = intersectsArea === 'ltl';\r\n      if (l || ltL) {\r\n        this.l.cornerEl.show();\r\n        this.l.cornerEl.css('right', '0px');\r\n        this.l.cornerEl.css('bottom', '0px');\r\n      }\r\n      if (rect.eci > viewRange.eci) {\r\n        this.l.cornerEl.hide();\r\n      }\r\n      if (rect.eri > viewRange.eri) {\r\n        this.l.cornerEl.hide();\r\n      }\r\n    }\r\n  }\r\n\r\n  setBrCorner(selectorAttr, intersectsArea) {\r\n    const { screen } = this;\r\n    const { table } = screen;\r\n    const viewRange = table.getScrollView();\r\n    const { rect, edge, edgeType } = selectorAttr;\r\n\r\n    const empty = new RectRange(-1, -1, -1, -1);\r\n    const coincideRange = rect.coincide(viewRange);\r\n    if (empty.equals(coincideRange)) {\r\n      return;\r\n    }\r\n\r\n    this.br.cornerEl.cssRemoveKeys('left');\r\n    this.br.cornerEl.cssRemoveKeys('top');\r\n    this.br.cornerEl.cssRemoveKeys('right');\r\n    this.br.cornerEl.cssRemoveKeys('bottom');\r\n    this.br.cornerEl.hide();\r\n\r\n    if (edge) {\r\n      const br = intersectsArea === 'br';\r\n      const ltTLBr = intersectsArea === 'lttlbr';\r\n      if (edgeType === 'left' && br) {\r\n        this.br.cornerEl.show();\r\n        this.br.cornerEl.css('left', '0');\r\n        this.br.cornerEl.css('bottom', '0');\r\n      }\r\n      if (edgeType === 'top' && br) {\r\n        this.br.cornerEl.show();\r\n        this.br.cornerEl.css('right', '0');\r\n        this.br.cornerEl.css('top', '0');\r\n      }\r\n      if (edgeType === 'left-top' && ltTLBr) {\r\n        this.br.cornerEl.show();\r\n        this.br.cornerEl.css('right', '0');\r\n        this.br.cornerEl.css('bottom', '0');\r\n      }\r\n      if (edgeType === 'left-top' && br) {\r\n        this.br.cornerEl.show();\r\n        this.br.cornerEl.css('right', '0');\r\n        this.br.cornerEl.css('bottom', '0');\r\n      }\r\n      if (edgeType === 'left' && rect.eri > viewRange.eri) {\r\n        this.br.cornerEl.hide();\r\n      }\r\n      if (edgeType === 'top' && rect.eci > viewRange.eci) {\r\n        this.br.cornerEl.hide();\r\n      }\r\n    } else {\r\n      const br = intersectsArea === 'br';\r\n      const tBr = intersectsArea === 'tbr';\r\n      const lBr = intersectsArea === 'lbr';\r\n      const ltTLBr = intersectsArea === 'lttlbr';\r\n      if (br || tBr || lBr || lBr || ltTLBr) {\r\n        this.br.cornerEl.show();\r\n        this.br.cornerEl.css('right', '0px');\r\n        this.br.cornerEl.css('bottom', '0px');\r\n      }\r\n      if (rect.eri > viewRange.eri) {\r\n        this.br.cornerEl.hide();\r\n      }\r\n      if (rect.eci > viewRange.eci) {\r\n        this.br.cornerEl.hide();\r\n      }\r\n    }\r\n  }\r\n\r\n  setSelectAttr(selectorAttr) {\r\n    this.selectorAttr = selectorAttr;\r\n    this.selectorAttr.id = Date.now();\r\n  }\r\n\r\n  setDownSelectAttr(downSelectorAttr) {\r\n    this.downSelectorAttr = downSelectorAttr;\r\n  }\r\n\r\n  getIntersectsArea(selectorAttr) {\r\n    const { screen } = this;\r\n    const { table } = screen;\r\n    const { fixed, cols, rows } = table;\r\n    const { rect } = selectorAttr;\r\n    let type = '';\r\n    const tlRange = new RectRange(0, 0, fixed.fxTop, fixed.fxLeft);\r\n    const tRange = new RectRange(0, fixed.fxLeft + 1, fixed.fxTop, cols.len);\r\n    const lRange = new RectRange(fixed.fxTop + 1, 0, rows.len, fixed.fxLeft);\r\n    const brRange = new RectRange(fixed.fxTop + 1, fixed.fxLeft + 1, rows.len, cols.len);\r\n    if (rect.intersects(tlRange)) type += 'lt';\r\n    if (rect.intersects(tRange)) type += 't';\r\n    if (rect.intersects(lRange)) type += 'l';\r\n    if (rect.intersects(brRange)) type += 'br';\r\n    return type;\r\n  }\r\n\r\n  setOffset(selectorAttr) {\r\n    const intersectsArea = this.getIntersectsArea(selectorAttr);\r\n    // console.log('intersectsArea', intersectsArea)\r\n\r\n    this.setLTOffset(selectorAttr);\r\n    this.setTOffset(selectorAttr);\r\n    this.setLOffset(selectorAttr);\r\n    this.setBROffset(selectorAttr);\r\n\r\n    this.setLTCorner(selectorAttr, intersectsArea);\r\n    this.setTCorner(selectorAttr, intersectsArea);\r\n    this.setLCorner(selectorAttr, intersectsArea);\r\n    this.setBrCorner(selectorAttr, intersectsArea);\r\n  }\r\n\r\n  getViewRange() {\r\n    const { screen } = this;\r\n    const { table } = screen;\r\n    const { cols, rows } = table;\r\n    const viewRange = table.getScrollView();\r\n    let { sri, sci } = viewRange;\r\n    const { eri, eci } = viewRange;\r\n\r\n    if (table.getFixedWidth() > 0) {\r\n      sri = 0;\r\n    }\r\n    if (table.getFixedHeight() > 0) {\r\n      sci = 0;\r\n    }\r\n\r\n    const width = cols.sectionSumWidth(sci, eci);\r\n    const height = rows.sectionSumHeight(sri, eri);\r\n\r\n    return new RectRange(sri, sci, eri, eci, width, height);\r\n  }\r\n\r\n  getDownXYSelectorAttr(x, y) {\r\n    const { screen } = this;\r\n    const { table } = screen;\r\n    const { rows, cols } = table;\r\n    const merges = table.getTableMerges();\r\n    const { ri, ci } = table.getRiCiByXy(x, y);\r\n    if (ri === -1 && ci === -1) {\r\n      const rect = new RectRange(0, 0, rows.len - 1, cols.len - 1);\r\n      return {\r\n        rect, edge: true, edgeType: 'left-top',\r\n      };\r\n    }\r\n    if (ri === -1) {\r\n      const rect = new RectRange(0, ci, rows.len - 1, ci);\r\n      return {\r\n        rect, edge: true, edgeType: 'top',\r\n      };\r\n    }\r\n    if (ci === -1) {\r\n      const rect = new RectRange(ri, 0, ri, cols.len - 1);\r\n      return {\r\n        rect, edge: true, edgeType: 'left',\r\n      };\r\n    }\r\n    const merge = merges.getFirstIncludes(ri, ci);\r\n    let rect = new RectRange(ri, ci, ri, ci);\r\n    if (merge) {\r\n      rect = merge;\r\n    }\r\n    return { rect };\r\n  }\r\n\r\n  getMoveXySelectorAttr(selectorAttr, x, y) {\r\n    const { screen } = this;\r\n    const { table } = screen;\r\n    const {\r\n      rows, cols,\r\n    } = table;\r\n    const merges = table.getTableMerges();\r\n    const { rect: selectRect, edgeType } = selectorAttr;\r\n    const viewRange = this.getViewRange();\r\n    let { ri, ci } = table.getRiCiByXy(x, y);\r\n    if (ri === -1) ri = viewRange.sri;\r\n    if (ci === -1) ci = viewRange.sci;\r\n    switch (edgeType) {\r\n      case 'left-top': {\r\n        let rect = selectRect.union(new RectRange(0, 0, rows.len - 1, cols.len - 1));\r\n        rect = selectRect.union(rect);\r\n        return {\r\n          rect, edge: true, edgeType: 'left-top',\r\n        };\r\n      }\r\n      case 'top': {\r\n        let rect = selectRect.union(new RectRange(0, ci, 0, ci));\r\n        rect = selectRect.union(rect);\r\n        return {\r\n          rect, edge: true, edgeType: 'top',\r\n        };\r\n      }\r\n      case 'left': {\r\n        let rect = selectRect.union(new RectRange(ri, 0, ri, 0));\r\n        rect = selectRect.union(rect);\r\n        return {\r\n          rect, edge: true, edgeType: 'left',\r\n        };\r\n      }\r\n      default: break;\r\n    }\r\n    let rect = selectRect.union(new RectRange(ri, ci, ri, ci));\r\n    rect = merges.union(rect);\r\n    return { rect };\r\n  }\r\n\r\n  getSelectRange() {\r\n    const { rect } = this.selectorAttr;\r\n    return rect;\r\n  }\r\n\r\n  on(type, cb) {\r\n    let array;\r\n    switch (type) {\r\n      case SCREEN_SELECT_EVENT.CHANGE:\r\n        array = this.onChangeStack;\r\n        break;\r\n      case SCREEN_SELECT_EVENT.SELECT_CHANGE_OVER:\r\n        array = this.onSelectChangeOver;\r\n        break;\r\n      case SCREEN_SELECT_EVENT.DOWN_SELECT:\r\n        array = this.onDownSelectStack;\r\n        break;\r\n      case SCREEN_SELECT_EVENT.SELECT_CHANGE:\r\n        array = this.onSelectChangeStack;\r\n        break;\r\n      default: break;\r\n    }\r\n    if (array) {\r\n      array.push(cb);\r\n    }\r\n  }\r\n\r\n  remove(type, cb) {\r\n    let array;\r\n    switch (type) {\r\n      case SCREEN_SELECT_EVENT.CHANGE:\r\n        array = this.onChangeStack;\r\n        break;\r\n      case SCREEN_SELECT_EVENT.SELECT_CHANGE_OVER:\r\n        array = this.onSelectChangeOver;\r\n        break;\r\n      case SCREEN_SELECT_EVENT.DOWN_SELECT:\r\n        array = this.onDownSelectStack;\r\n        break;\r\n      case SCREEN_SELECT_EVENT.SELECT_CHANGE:\r\n        array = this.onSelectChangeStack;\r\n        break;\r\n      default: break;\r\n    }\r\n    if (array) {\r\n      for (let i = 0; i < array.length; i += 1) {\r\n        const item = array[i];\r\n        if (item === cb) {\r\n          array.splice(i, 1);\r\n          return;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  SCREEN_SELECT_EVENT,\r\n  ScreenSelector,\r\n};\r\n","import { BaseFont } from '../../../canvas/font/BaseFont';\r\n\r\n/**\r\n *  CellFont\r\n *  @author jerry\r\n */\r\nclass CellFont {\r\n\r\n  /**\r\n   * CellFont\r\n   * @param align\r\n   * @param verticalAlign\r\n   * @param textWrap\r\n   * @param strikethrough\r\n   * @param underline\r\n   * @param color\r\n   * @param name\r\n   * @param size\r\n   * @param bold\r\n   * @param italic\r\n   * @param angle\r\n   * @param direction\r\n   * @param padding\r\n   */\r\n  constructor({\r\n    align = BaseFont.ALIGN.left,\r\n    verticalAlign = BaseFont.VERTICAL_ALIGN.center,\r\n    textWrap = BaseFont.TEXT_WRAP.OVER_FLOW,\r\n    strikethrough = false,\r\n    underline = false,\r\n    color = 'rgb(0,0,0)',\r\n    name = 'Arial',\r\n    size = 12,\r\n    bold = false,\r\n    italic = false,\r\n    angle = 0,\r\n    direction = BaseFont.TEXT_DIRECTION.HORIZONTAL,\r\n    padding = 5,\r\n  }) {\r\n    this.align = align;\r\n    this.verticalAlign = verticalAlign;\r\n    this.textWrap = textWrap;\r\n    this.strikethrough = strikethrough;\r\n    this.underline = underline;\r\n    this.color = color;\r\n    this.name = name;\r\n    this.size = size;\r\n    this.bold = bold;\r\n    this.italic = italic;\r\n    this.direction = direction;\r\n    this.angle = angle;\r\n    this.padding = padding;\r\n  }\r\n\r\n  toCssStyle() {\r\n    const {\r\n      align, size, color, bold, italic, name, padding, verticalAlign,\r\n    } = this;\r\n    let justifyContent = 'left';\r\n    let alignItems = 'center';\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.center: {\r\n        alignItems = 'center';\r\n        break;\r\n      }\r\n      case BaseFont.VERTICAL_ALIGN.top: {\r\n        alignItems = 'flex-start';\r\n        break;\r\n      }\r\n      case BaseFont.VERTICAL_ALIGN.bottom: {\r\n        alignItems = 'flex-end';\r\n        break;\r\n      }\r\n    }\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left:\r\n        justifyContent = 'flex-start';\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        justifyContent = 'center';\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        justifyContent = 'flex-end';\r\n        break;\r\n    }\r\n    let css = `\r\n      justify-content:${justifyContent};\r\n      font-size: ${size}px;color: ${color};font-weight: ${bold ? 'bold' : 'initial'};\r\n      font-style: ${italic ? 'italic' : 'initial'};\r\n      font-family: ${name};\r\n      align-items: ${alignItems};\r\n    `;\r\n    css = css.replace(/\\s/g, '');\r\n    return css;\r\n  }\r\n\r\n  clone() {\r\n    const {\r\n      align,\r\n      verticalAlign,\r\n      textWrap,\r\n      strikethrough,\r\n      underline,\r\n      color,\r\n      name,\r\n      size,\r\n      bold,\r\n      italic,\r\n      angle,\r\n      direction,\r\n      padding,\r\n    } = this;\r\n    return new CellFont({\r\n      align,\r\n      verticalAlign,\r\n      textWrap,\r\n      strikethrough,\r\n      underline,\r\n      color,\r\n      name,\r\n      size,\r\n      bold,\r\n      italic,\r\n      angle,\r\n      direction,\r\n      padding,\r\n    });\r\n  }\r\n}\r\n\r\nexport { CellFont };\r\n","import { LINE_TYPE } from '../../../canvas/Line';\r\nimport { Utils } from '../../../utils/Utils';\r\n\r\nlet zIndexID = 0;\r\n\r\n/**\r\n * Border\r\n * @author jerry\r\n */\r\nclass Border {\r\n\r\n  static getZIndex() {\r\n    zIndexID += 1;\r\n    return zIndexID;\r\n  }\r\n\r\n  /**\r\n   * Border\r\n   * @param zIndex\r\n   * @param time\r\n   * @param display\r\n   * @param width\r\n   * @param color\r\n   * @param type\r\n   */\r\n  constructor({\r\n    zIndex = 0,\r\n    display = false,\r\n    width = 1,\r\n    color = '#000000',\r\n    type = LINE_TYPE.SOLID_LINE,\r\n  }) {\r\n    this.$zIndex = zIndex;\r\n    this.$display = display;\r\n    this.$width = width;\r\n    this.$color = color;\r\n    this.$type = type;\r\n    if (zIndex > zIndexID) {\r\n      zIndexID = zIndex;\r\n    }\r\n  }\r\n\r\n  get zIndex() {\r\n    return this.$zIndex;\r\n  }\r\n\r\n  get display() {\r\n    return this.$display;\r\n  }\r\n\r\n  set display(value) {\r\n    this.$zIndex = Border.getZIndex();\r\n    this.$display = value;\r\n  }\r\n\r\n  get width() {\r\n    return this.$width;\r\n  }\r\n\r\n  set width(value) {\r\n    this.$zIndex = Border.getZIndex();\r\n    this.$width = value;\r\n  }\r\n\r\n  get color() {\r\n    return this.$color;\r\n  }\r\n\r\n  set color(value) {\r\n    this.$zIndex = Border.getZIndex();\r\n    this.$color = value;\r\n  }\r\n\r\n  get type() {\r\n    return this.$type;\r\n  }\r\n\r\n  set type(value) {\r\n    this.$zIndex = Border.getZIndex();\r\n    this.$type = value;\r\n  }\r\n\r\n  equal(target) {\r\n    const color = this.color === target.color;\r\n    const width = this.width === target.width;\r\n    const type = this.type === target.type;\r\n    return color && width && type;\r\n  }\r\n\r\n  toJSON() {\r\n    const zIndex = this.$zIndex;\r\n    const display = this.$display;\r\n    const width = this.$width;\r\n    const color = this.$color;\r\n    const type = this.$type;\r\n    return { zIndex, display, width, color, type };\r\n  }\r\n\r\n  priority(border) {\r\n    if (Utils.isUnDef(border)) {\r\n      return -2;\r\n    }\r\n    const origin = this.zIndex;\r\n    const target = border.zIndex;\r\n    if (origin > target) {\r\n      return 1;\r\n    }\r\n    if (target > origin) {\r\n      return -1;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n\r\nexport { Border };\r\n","import { Border } from './Border';\r\n\r\n/**\r\n * CellBorder\r\n * @author jerry\r\n */\r\nclass CellBorder {\r\n\r\n  /**\r\n   * CellBorder\r\n   * @param time\r\n   * @param left\r\n   * @param top\r\n   * @param right\r\n   * @param bottom\r\n   */\r\n  constructor({\r\n    left = {},\r\n    top = {},\r\n    right = {},\r\n    bottom = {},\r\n  }) {\r\n    this.left = new Border(left);\r\n    this.top = new Border(top);\r\n    this.right = new Border(right);\r\n    this.bottom = new Border(bottom);\r\n  }\r\n\r\n  // ======================显示/隐藏=======================\r\n\r\n  setAllDisplay(display) {\r\n    this.setLDisplay(display);\r\n    this.setTDisplay(display);\r\n    this.setRDisplay(display);\r\n    this.setBDisplay(display);\r\n  }\r\n\r\n  setLDisplay(display) {\r\n    this.left.display = display;\r\n  }\r\n\r\n  setTDisplay(display) {\r\n    this.top.display = display;\r\n  }\r\n\r\n  setRDisplay(display) {\r\n    this.right.display = display;\r\n  }\r\n\r\n  setBDisplay(display) {\r\n    this.bottom.display = display;\r\n  }\r\n\r\n  // ======================边框颜色=======================\r\n\r\n  setAllColor(color) {\r\n    this.setLColor(color);\r\n    this.setTColor(color);\r\n    this.setRColor(color);\r\n    this.setBColor(color);\r\n  }\r\n\r\n  setLColor(color) {\r\n    this.left.color = color;\r\n  }\r\n\r\n  setTColor(color) {\r\n    this.top.color = color;\r\n  }\r\n\r\n  setRColor(color) {\r\n    this.right.color = color;\r\n  }\r\n\r\n  setBColor(color) {\r\n    this.bottom.color = color;\r\n  }\r\n\r\n  // ======================边框宽度=======================\r\n\r\n  setAllWidth(width) {\r\n    this.setLWidth(width);\r\n    this.setTWidth(width);\r\n    this.setRWidth(width);\r\n    this.setBWidth(width);\r\n  }\r\n\r\n  setLWidth(width) {\r\n    this.left.width = width;\r\n  }\r\n\r\n  setTWidth(width) {\r\n    this.top.width = width;\r\n  }\r\n\r\n  setRWidth(width) {\r\n    this.right.width = width;\r\n  }\r\n\r\n  setBWidth(width) {\r\n    this.bottom.width = width;\r\n  }\r\n\r\n  // ======================边框类型=======================\r\n\r\n  setAllType(type) {\r\n    this.setLType(type);\r\n    this.setTType(type);\r\n    this.setRType(type);\r\n    this.setBType(type);\r\n  }\r\n\r\n  setLType(type) {\r\n    this.left.type = type;\r\n  }\r\n\r\n  setTType(type) {\r\n    this.top.type = type;\r\n  }\r\n\r\n  setRType(type) {\r\n    this.right.type = type;\r\n  }\r\n\r\n  setBType(type) {\r\n    this.bottom.type = type;\r\n  }\r\n\r\n  clone() {\r\n    const {\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    } = this;\r\n    return new CellBorder({\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    });\r\n  }\r\n}\r\n\r\nexport { CellBorder };\r\n","import { Utils } from '../../../utils/Utils';\r\nimport { CellFont } from './CellFont';\r\nimport { CellBorder } from './CellBorder';\r\n\r\n/**\r\n * Cell\r\n * @author jerry\r\n */\r\nclass Cell {\r\n\r\n  /**\r\n   * Cell\r\n   * @param text\r\n   * @param background\r\n   * @param format\r\n   * @param fontAttr\r\n   * @param borderAttr\r\n   * @param contentWidth\r\n   */\r\n  constructor({\r\n    text = Utils.EMPTY,\r\n    background = Utils.Nul,\r\n    format = 'default',\r\n    fontAttr = {},\r\n    borderAttr = {},\r\n    contentWidth = 0,\r\n  }) {\r\n    this.background = background;\r\n    this.format = format;\r\n    this.text = text;\r\n    this.fontAttr = new CellFont(fontAttr);\r\n    this.borderAttr = new CellBorder(borderAttr);\r\n    this.contentWidth = contentWidth;\r\n  }\r\n\r\n  setContentWidth(contentWidth) {\r\n    this.contentWidth = contentWidth;\r\n  }\r\n\r\n  toCssStyle() {\r\n    const { background, fontAttr } = this;\r\n    let css = `\r\n      background:${background};\r\n    `;\r\n    css = css.replace(/\\s/g, '');\r\n    return fontAttr.toCssStyle() + css;\r\n  }\r\n\r\n  clone() {\r\n    const {\r\n      background,\r\n      format,\r\n      text,\r\n      fontAttr,\r\n      borderAttr,\r\n      contentWidth,\r\n    } = this;\r\n    return new Cell({\r\n      background,\r\n      format,\r\n      text,\r\n      fontAttr,\r\n      borderAttr,\r\n      contentWidth,\r\n    });\r\n  }\r\n\r\n  toJSON() {\r\n    const {\r\n      background,\r\n      format,\r\n      text,\r\n      fontAttr,\r\n      borderAttr,\r\n      contentWidth,\r\n    } = this;\r\n    return { background, format, text, fontAttr, borderAttr, contentWidth };\r\n  }\r\n}\r\n\r\nexport { Cell };\r\n","import { ELContextMenuItem } from '../../../../../component/elcontextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../lib/Element';\r\n\r\nclass ScaleContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(scale) {\r\n    super(`${cssPrefix}-scale-context-menu-item`);\r\n    this.scale = scale;\r\n    this.titleElement = h('div', `${cssPrefix}-scale-context-menu-item-title`);\r\n    this.titleElement.text(`${scale}%`);\r\n    this.titleElement.css('text-align', 'center');\r\n    this.children(this.titleElement);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  ScaleContextMenuItem,\r\n};\r\n","import { ELContextMenu } from '../../../../../component/elcontextmenu/ELContextMenu';\r\nimport { Constant, cssPrefix } from '../../../../../const/Constant';\r\nimport { Utils } from '../../../../../utils/Utils';\r\nimport { ScaleContextMenuItem } from './ScaleContextMenuItem';\r\n\r\nclass ScaleContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-scale-context-menu`, Utils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new ScaleContextMenuItem(200),\r\n      new ScaleContextMenuItem(150),\r\n      new ScaleContextMenuItem(125),\r\n      new ScaleContextMenuItem(100),\r\n      new ScaleContextMenuItem(90),\r\n      new ScaleContextMenuItem(75),\r\n      new ScaleContextMenuItem(50),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      item.on(Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n        this.update(item.scale);\r\n      });\r\n      this.addItem(item);\r\n    });\r\n  }\r\n\r\n  update(scale) {\r\n    const { options } = this;\r\n    options.onUpdate(scale);\r\n    this.close();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  ScaleContextMenu,\r\n};\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Utils } from '../../../utils/Utils';\r\nimport { EL_POPUP_POSITION } from '../../../component/elpopup/ElPopUp';\r\nimport { ScaleContextMenu } from './contextmenu/scale/ScaleContextMenu';\r\n\r\nclass Scale extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-scale`);\r\n    this.options = options;\r\n    this.setTitle('100%');\r\n    this.setWidth(50);\r\n    this.setEllipsis();\r\n    this.scaleContextMenu = new ScaleContextMenu(Utils.copyProp({\r\n      el: this,\r\n      position: EL_POPUP_POSITION.BOTTOM,\r\n    }, this.options.contextMenu));\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Scale,\r\n};\r\n","import { Widget } from '../../../../lib/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenPart extends Widget {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-x-screen-part ${className}`);\r\n    this.xScreenZone = null;\r\n  }\r\n\r\n  onAttach(xScreenZone) {\r\n    this.xScreenZone = xScreenZone;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenPart,\r\n};\r\n","import { XScreenPart } from './XScreenPart';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenLTPart extends XScreenPart {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-x-screen-lt-part ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenLTPart,\r\n};\r\n","import { XScreenPart } from './XScreenPart';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenTPart extends XScreenPart {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-x-screen-br-part ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenTPart,\r\n};\r\n","import { XScreenPart } from './XScreenPart';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenBRPart extends XScreenPart {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-x-screen-br-part ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenBRPart,\r\n};\r\n","import { XScreenPart } from './XScreenPart';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenLPart extends XScreenPart {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-x-screen-l-part ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenLPart,\r\n};\r\n","import { XScreenLTPart } from '../part/XScreenLTPart';\r\nimport { XScreenTPart } from '../part/XScreenTPart';\r\nimport { XScreenBRPart } from '../part/XScreenBRPart';\r\nimport { XScreenLPart } from '../part/XScreenLPart';\r\n\r\nclass XScreenItem {\r\n\r\n  constructor({\r\n    table,\r\n  } = {}) {\r\n    this.table = table;\r\n    this.lt = new XScreenLTPart();\r\n    this.t = new XScreenTPart();\r\n    this.br = new XScreenBRPart();\r\n    this.l = new XScreenLPart();\r\n    this.xScreen = null;\r\n  }\r\n\r\n  setXScreen(xScreen) {\r\n    this.xScreen = xScreen;\r\n  }\r\n\r\n  setWidth(width) {\r\n    this.lt.offset({ width });\r\n    this.t.offset({ width });\r\n    this.br.offset({ width });\r\n    this.l.offset({ width });\r\n  }\r\n\r\n  setHeight(height) {\r\n    this.lt.offset({ height });\r\n    this.t.offset({ height });\r\n    this.br.offset({ height });\r\n    this.l.offset({ height });\r\n  }\r\n\r\n  hide() {\r\n    this.lt.hide();\r\n    this.t.hide();\r\n    this.br.hide();\r\n    this.l.hide();\r\n  }\r\n\r\n  show() {\r\n    this.lt.show();\r\n    this.t.show();\r\n    this.br.show();\r\n    this.l.show();\r\n  }\r\n\r\n  offset(rectRange) {\r\n    const { table } = this;\r\n    const {\r\n      cols, rows,\r\n    } = table;\r\n    const scrollView = table.getScrollView();\r\n    const left = cols.sectionSumWidth(scrollView.sci, rectRange.sci - 1);\r\n    const top = rows.sectionSumHeight(scrollView.sri, rectRange.sri - 1);\r\n    this.setLeft(left);\r\n    this.setTop(top);\r\n    this.setWidth(rectRange.w);\r\n    this.setHeight(rectRange.h);\r\n  }\r\n\r\n  setLeft(left) {\r\n    const { table } = this;\r\n    const { fixed } = table;\r\n    const { cols } = table;\r\n    const offsetLeft = cols.sectionSumWidth(0, fixed.fxLeft);\r\n    this.lt.offset({ left });\r\n    this.l.offset({ left });\r\n    this.t.offset({ left: left + offsetLeft });\r\n    this.br.offset({ left: left + offsetLeft });\r\n  }\r\n\r\n  setTop(top) {\r\n    const { table } = this;\r\n    const { fixed } = table;\r\n    const { rows } = table;\r\n    const offsetTop = rows.sectionSumHeight(0, fixed.fxTop);\r\n    this.lt.offset({ top });\r\n    this.l.offset({ top });\r\n    this.t.offset({ top: top + offsetTop });\r\n    this.br.offset({ top: top + offsetTop });\r\n  }\r\n\r\n  onAdd() {}\r\n\r\n}\r\n\r\nexport {\r\n  XScreenItem,\r\n};\r\n","import { Widget } from '../../../../lib/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenZone extends Widget {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-x-screen-zone ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenZone,\r\n};\r\n","import { cssPrefix } from '../../../../const/Constant';\r\nimport { XScreenZone } from './XScreenZone';\r\n\r\nclass XScreenBRZone extends XScreenZone {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-x-screen-br-zone`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenBRZone,\r\n};\r\n","import { cssPrefix } from '../../../../const/Constant';\r\nimport { XScreenZone } from './XScreenZone';\r\n\r\nclass XScreenLTZone extends XScreenZone {\r\n\r\n  constructor(xScreen) {\r\n    super(`${cssPrefix}-x-screen-lt-zone`);\r\n    this.xScreen = xScreen;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenLTZone,\r\n};\r\n","import { cssPrefix } from '../../../../const/Constant';\r\nimport { XScreenZone } from './XScreenZone';\r\n\r\nclass XScreenLZone extends XScreenZone {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-x-screen-l-zone`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenLZone,\r\n};\r\n","import { cssPrefix } from '../../../../const/Constant';\r\nimport { XScreenZone } from './XScreenZone';\r\n\r\nclass XScreenTZone extends XScreenZone {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-x-screen-t-zone`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenTZone,\r\n};\r\n","import { Widget } from '../../../lib/Widget';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { XScreenBRZone } from './zone/XScreenBRZone';\r\nimport { XScreenLTZone } from './zone/XScreenLTZone';\r\nimport { XScreenLZone } from './zone/XScreenLZone';\r\nimport { XScreenTZone } from './zone/XScreenTZone';\r\nimport { EventBind } from '../../../utils/EventBind';\r\n\r\nconst DISPLAY_AREA = {\r\n  BRT: Symbol('BRT'),\r\n  BRL: Symbol('BRL'),\r\n  BR: Symbol('br'),\r\n  ALL: Symbol('ALL'),\r\n};\r\n\r\nclass XScreen extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-x-screen`);\r\n    this.pool = [];\r\n    this.table = table;\r\n    this.displayArea = DISPLAY_AREA.BR;\r\n    this.ltZone = new XScreenLTZone();\r\n    this.tZone = new XScreenTZone();\r\n    this.brZone = new XScreenBRZone();\r\n    this.lZone = new XScreenLZone();\r\n    this.child(this.ltZone);\r\n    this.child(this.tZone);\r\n    this.child(this.brZone);\r\n    this.child(this.lZone);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.sizeHandle();\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    EventBind.bind(table, Constant.TABLE_EVENT_TYPE.SCALE_CHANGE, () => {\r\n      this.sizeHandle();\r\n    });\r\n    EventBind.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.sizeHandle();\r\n    });\r\n    EventBind.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      this.sizeHandle();\r\n    });\r\n  }\r\n\r\n  addItem(item) {\r\n    this.pool.push(item);\r\n    this.ltZone.attach(item.lt);\r\n    this.lZone.attach(item.l);\r\n    this.brZone.attach(item.br);\r\n    this.tZone.attach(item.t);\r\n    item.setXScreen(this);\r\n    item.onAdd(this);\r\n  }\r\n\r\n  sizeHandle() {\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const fixedWidth = table.getFixedWidth();\r\n    const fixedHeight = table.getFixedHeight();\r\n    const brLeft = index.getWidth() + fixedWidth;\r\n    const brTop = index.getHeight() + fixedHeight;\r\n    this.brZone.offset({ left: brLeft, top: brTop });\r\n    const ltDisplay = fixedWidth > 0 && fixedHeight > 0;\r\n    const tDisplay = fixedHeight > 0;\r\n    const lDisplay = fixedHeight > 0;\r\n    this.ltZone.hide();\r\n    this.lZone.hide();\r\n    this.tZone.hide();\r\n    if (ltDisplay) {\r\n      this.displayArea = DISPLAY_AREA.ALL;\r\n      // lt\r\n      this.ltZone.offset({\r\n        left: index.getWidth(), top: index.getHeight(), width: fixedWidth, height: fixedHeight,\r\n      }).show();\r\n      this.ltZone.css('border-width', '1px');\r\n      // l\r\n      this.lZone.offset({\r\n        left: index.getWidth(),\r\n        top: brTop,\r\n        width: fixedWidth,\r\n      }).show();\r\n      this.lZone.css('border-width', '1px');\r\n      // t\r\n      this.tZone.offset({\r\n        left: brLeft,\r\n        top: index.getHeight(),\r\n        height: fixedHeight,\r\n      }).show();\r\n      this.tZone.css('border-width', '1px');\r\n    } else if (lDisplay) {\r\n      this.displayArea = DISPLAY_AREA.BRL;\r\n      // l\r\n      this.lZone.offset({\r\n        left: index.getWidth(),\r\n        top: brTop,\r\n        width: fixedWidth,\r\n      }).show();\r\n      this.lZone.css('border-width', '1px');\r\n    } else if (tDisplay) {\r\n      this.displayArea = DISPLAY_AREA.BRL;\r\n      // t\r\n      this.tZone.offset({\r\n        left: brLeft,\r\n        top: index.getHeight(),\r\n        height: fixedHeight,\r\n      }).show();\r\n      this.tZone.css('border-width', '1px');\r\n    } else {\r\n      this.displayArea = DISPLAY_AREA.BR;\r\n    }\r\n  }\r\n\r\n  findType(type) {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const item of this.pool) {\r\n      if (item instanceof type) {\r\n        return item;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreen, DISPLAY_AREA,\r\n};\r\n","import { XScreenItem } from '../XScreenItem';\r\nimport { RectRange } from '../../../tablebase/RectRange';\r\nimport { DISPLAY_AREA } from '../../XScreen';\r\nimport { XScreenLTPart } from '../../part/XScreenLTPart';\r\nimport { XScreenTPart } from '../../part/XScreenTPart';\r\nimport { XScreenLPart } from '../../part/XScreenLPart';\r\nimport { XScreenBRPart } from '../../part/XScreenBRPart';\r\n\r\nconst RANGE_OVER_GO = {\r\n  LT: Symbol('lt'),\r\n  T: Symbol('t'),\r\n  BR: Symbol('br'),\r\n  L: Symbol('l'),\r\n  LTT: Symbol('ltt'),\r\n  LTL: Symbol('ltl'),\r\n  BRT: Symbol('brt'),\r\n  BRL: Symbol('brl'),\r\n  ALL: Symbol('all'),\r\n};\r\n\r\nclass XScreenBorderItem extends XScreenItem {\r\n\r\n  constructor({ table }, className = '') {\r\n    super({ table });\r\n    this.blt = new XScreenLTPart(className);\r\n    this.bt = new XScreenTPart(className);\r\n    this.bl = new XScreenLPart(className);\r\n    this.bbr = new XScreenBRPart(className);\r\n    this.lt.child(this.blt);\r\n    this.t.child(this.bt);\r\n    this.l.child(this.bl);\r\n    this.br.child(this.bbr);\r\n  }\r\n\r\n  rectRangeBoundOut(range) {\r\n    const { table } = this;\r\n    const scrollView = table.getScrollView();\r\n    const top = range.sri < scrollView.sri || range.sri > scrollView.eri;\r\n    const bottom = range.eri < scrollView.sri || range.eri > scrollView.eri;\r\n    const left = range.sci < scrollView.sci || range.sci > scrollView.eci;\r\n    const right = range.eci < scrollView.sci || range.eci > scrollView.eci;\r\n    return {\r\n      top, bottom, left, right,\r\n    };\r\n  }\r\n\r\n  rectRangeOverGo(range) {\r\n    const { table } = this;\r\n    const { cols, rows } = table;\r\n    const { fixed } = table;\r\n    const { fixTop, fixLeft } = fixed;\r\n    const rowsLen = rows.len - 1;\r\n    const colsLen = cols.len - 1;\r\n    if (fixTop > -1 && fixLeft > -1) {\r\n      const lt = new RectRange(0, 0, fixTop, fixLeft);\r\n      const t = new RectRange(0, fixLeft, fixTop, colsLen);\r\n      const br = new RectRange(fixTop, fixLeft, rowsLen, colsLen);\r\n      const l = new RectRange(fixTop, 0, rowsLen, fixLeft);\r\n      if (lt.contains(range)) {\r\n        return RANGE_OVER_GO.LT;\r\n      }\r\n      if (t.contains(range)) {\r\n        return RANGE_OVER_GO.T;\r\n      }\r\n      if (br.contains(range)) {\r\n        return RANGE_OVER_GO.BR;\r\n      }\r\n      if (l.contains(range)) {\r\n        return RANGE_OVER_GO.L;\r\n      }\r\n      const ltt = new RectRange(0, 0, fixTop, colsLen);\r\n      const ltl = new RectRange(0, 0, rowsLen, fixLeft);\r\n      const brt = new RectRange(0, fixLeft, rowsLen, colsLen);\r\n      const brl = new RectRange(fixTop, 0, rowsLen, colsLen);\r\n      if (ltt.contains(range)) {\r\n        return RANGE_OVER_GO.LTT;\r\n      }\r\n      if (ltl.contains(range)) {\r\n        return RANGE_OVER_GO.LTL;\r\n      }\r\n      if (brt.contains(range)) {\r\n        return RANGE_OVER_GO.BRT;\r\n      }\r\n      if (brl.contains(range)) {\r\n        return RANGE_OVER_GO.BRL;\r\n      }\r\n      return RANGE_OVER_GO.ALL;\r\n    } if (fixTop > -1) {\r\n      const t = new RectRange(0, 0, fixTop, colsLen);\r\n      const br = new RectRange(fixTop, 0, rowsLen, colsLen);\r\n      if (t.contains(range)) {\r\n        return RANGE_OVER_GO.T;\r\n      }\r\n      if (br.contains(range)) {\r\n        return RANGE_OVER_GO.BR;\r\n      }\r\n      return RANGE_OVER_GO.ALL;\r\n    } if (fixLeft > -1) {\r\n      const br = new RectRange(0, fixLeft, rowsLen, colsLen);\r\n      const l = new RectRange(0, 0, rowsLen, fixLeft);\r\n      if (br.contains(range)) {\r\n        return RANGE_OVER_GO.BR;\r\n      }\r\n      if (l.contains(range)) {\r\n        return RANGE_OVER_GO.L;\r\n      }\r\n      return RANGE_OVER_GO.ALL;\r\n    }\r\n    return RANGE_OVER_GO.BR;\r\n  }\r\n\r\n  hideAllBorder() {\r\n    const { xScreen } = this;\r\n    const update = [];\r\n    switch (xScreen.displayArea) {\r\n      case DISPLAY_AREA.ALL:\r\n        update.push(this.bbr);\r\n        update.push(this.bt);\r\n        update.push(this.bl);\r\n        update.push(this.blt);\r\n        break;\r\n      case DISPLAY_AREA.BR:\r\n        update.push(this.bbr);\r\n        break;\r\n      case DISPLAY_AREA.BRL:\r\n        update.push(this.bbr);\r\n        update.push(this.bl);\r\n        break;\r\n      case DISPLAY_AREA.BRT:\r\n        update.push(this.bbr);\r\n        update.push(this.bt);\r\n        break;\r\n    }\r\n    update.forEach((item) => {\r\n      item.removeClass('show-bottom-border');\r\n      item.removeClass('show-top-border');\r\n      item.removeClass('show-right-border');\r\n      item.removeClass('show-left-border');\r\n    });\r\n  }\r\n\r\n  showBBorder(overGo) {\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n        this.blt.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.L:\r\n        this.bl.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.T:\r\n        this.bt.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.BR:\r\n        this.bbr.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTT:\r\n        this.blt.addClass('show-bottom-border');\r\n        this.bt.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTL:\r\n        this.bl.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRT:\r\n        this.bbr.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRL:\r\n        this.bl.addClass('show-bottom-border');\r\n        this.bbr.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.ALL:\r\n        this.bl.addClass('show-bottom-border');\r\n        this.bbr.addClass('show-bottom-border');\r\n        break;\r\n    }\r\n  }\r\n\r\n  showTBorder(overGo) {\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n        this.blt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.L:\r\n        this.bl.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.T:\r\n        this.bt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.BR:\r\n        this.bbr.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTT:\r\n        this.blt.addClass('show-top-border');\r\n        this.bt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTL:\r\n        this.blt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRT:\r\n        this.bt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRL:\r\n        this.bl.addClass('show-top-border');\r\n        this.bbr.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.ALL:\r\n        this.blt.addClass('show-top-border');\r\n        this.bt.addClass('show-top-border');\r\n        break;\r\n    }\r\n  }\r\n\r\n  showLBorder(overGo) {\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n        this.blt.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.L:\r\n        this.bl.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.T:\r\n        this.bt.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.BR:\r\n        this.bbr.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTT:\r\n        this.blt.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTL:\r\n        this.blt.addClass('show-left-border');\r\n        this.bl.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRT:\r\n        this.bt.addClass('show-left-border');\r\n        this.bbr.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRL:\r\n        this.bl.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.ALL:\r\n        this.blt.addClass('show-left-border');\r\n        this.bl.addClass('show-left-border');\r\n        break;\r\n    }\r\n  }\r\n\r\n  showRBorder(overGo) {\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n        this.blt.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.L:\r\n        this.bl.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.T:\r\n        this.bt.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.BR:\r\n        this.bbr.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTT:\r\n        this.bt.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTL:\r\n        this.blt.addClass('show-right-border');\r\n        this.bl.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRT:\r\n        this.bt.addClass('show-right-border');\r\n        this.bbr.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRL:\r\n        this.br.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.ALL:\r\n        this.bt.addClass('show-right-border');\r\n        this.bbr.addClass('show-right-border');\r\n        break;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenBorderItem, RANGE_OVER_GO,\r\n};\r\n","import { XScreenBorderItem } from './XScreenBorderItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\n\r\nclass XScreenCssBorderItem extends XScreenBorderItem {\r\n\r\n  constructor({ table }) {\r\n    super({ table }, `${cssPrefix}-part-border-css`);\r\n    this.type = 'solid';\r\n    this.setBorderType(this.type);\r\n  }\r\n\r\n  setBorderType(type) {\r\n    this.type = type;\r\n    this.blt.addClass(type);\r\n    this.bl.addClass(type);\r\n    this.bt.addClass(type);\r\n    this.bbr.addClass(type);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenCssBorderItem,\r\n};\r\n","/* global document */\nimport { XScreenCssBorderItem } from '../../xscreen/item/border/XScreenCssBorderItem';\nimport { EventBind } from '../../../../utils/EventBind';\nimport {\n  Constant,\n  cssPrefix,\n} from '../../../../const/Constant';\nimport { RectRange } from '../../tablebase/RectRange';\nimport { Utils } from '../../../../utils/Utils';\nimport { Widget } from '../../../../lib/Widget';\n\nconst SELECT_LOCAL = {\n  LT: Symbol('LT'),\n  L: Symbol('L'),\n  T: Symbol('T'),\n  BR: Symbol('BR'),\n};\n\nclass XSelectItem extends XScreenCssBorderItem {\n\n  constructor(table) {\n    super({ table });\n    this.targetOffset = { top: 0, left: 0, width: 0, height: 0 };\n    this.selectLocal = SELECT_LOCAL.BR;\n    this.selectRange = null;\n    this.targetRange = null;\n    this.downRange = null;\n    this.moveRange = null;\n    this.overGo = null;\n    this.ltElem = new Widget(`${cssPrefix}-x-select-area`);\n    this.brElem = new Widget(`${cssPrefix}-x-select-area`);\n    this.lElem = new Widget(`${cssPrefix}-x-select-area`);\n    this.tElem = new Widget(`${cssPrefix}-x-select-area`);\n    this.ltCorner = new Widget(`${cssPrefix}-x-select-corner`);\n    this.lCorner = new Widget(`${cssPrefix}-x-select-corner`);\n    this.tCorner = new Widget(`${cssPrefix}-x-select-corner`);\n    this.brCorner = new Widget(`${cssPrefix}-x-select-corner`);\n    this.ltElem.child(this.ltCorner);\n    this.lElem.child(this.lCorner);\n    this.tElem.child(this.tCorner);\n    this.brElem.child(this.brCorner);\n    this.blt.child(this.ltElem);\n    this.bl.child(this.lElem);\n    this.bt.child(this.tElem);\n    this.bbr.child(this.brElem);\n    this.setBorderType('solid');\n  }\n\n  onAdd() {\n    this.bind();\n    this.hide();\n  }\n\n  bind() {\n    const { table } = this;\n    const { mousePointer, focus } = table;\n    EventBind.bind(table, Constant.SYSTEM_EVENT_TYPE.CHANGE_HEIGHT, () => {\n      this.targetRangeHandle();\n      this.targetOffsetHandle();\n      this.targetBorderHandle();\n      this.targetCornerHandle();\n    });\n    EventBind.bind(table, Constant.SYSTEM_EVENT_TYPE.CHANGE_WIDTH, () => {\n      this.targetRangeHandle();\n      this.targetOffsetHandle();\n      this.targetBorderHandle();\n      this.targetCornerHandle();\n    });\n    EventBind.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\n      if (e1.button !== 0) return;\n      const { activate } = focus;\n      const { el } = activate;\n      if (el !== table) return;\n      const { x, y } = table.computeEventXy(e1);\n      this.downSelectRange(x, y);\n      this.targetRangeHandle();\n      this.targetOffsetHandle();\n      this.targetBorderHandle();\n      this.targetCornerHandle();\n      const { selectLocal } = this;\n      let key = Constant.MOUSE_POINTER_TYPE.SELECT_CELL;\n      switch (selectLocal) {\n        case SELECT_LOCAL.L:\n          key = Constant.MOUSE_POINTER_TYPE.SELECT_ONE_ROW;\n          break;\n        case SELECT_LOCAL.T:\n          key = Constant.MOUSE_POINTER_TYPE.SELECT_ONE_COLUMN;\n          break;\n      }\n      mousePointer.on(key);\n      table.trigger(Constant.TABLE_EVENT_TYPE.SELECT_DOWN);\n      table.trigger(Constant.TABLE_EVENT_TYPE.SELECT_CHANGE);\n      EventBind.mouseMoveUp(document, (e2) => {\n        const { x, y } = table.computeEventXy(e2);\n        this.moveSelectRange(x, y);\n        this.targetRangeHandle();\n        this.targetOffsetHandle();\n        this.targetBorderHandle();\n        this.targetCornerHandle();\n        table.trigger(Constant.TABLE_EVENT_TYPE.SELECT_CHANGE);\n      }, () => {\n        table.trigger(Constant.TABLE_EVENT_TYPE.SELECT_OVER);\n        mousePointer.off(key);\n      });\n    });\n    EventBind.bind(table, Constant.SYSTEM_EVENT_TYPE.SCALE_CHANGE, () => {\n      this.targetRangeHandle();\n      this.targetOffsetHandle();\n      this.targetBorderHandle();\n      this.targetCornerHandle();\n    });\n    EventBind.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\n      this.targetRangeHandle();\n      this.targetOffsetHandle();\n      this.targetBorderHandle();\n      this.targetCornerHandle();\n    });\n  }\n\n  targetOffsetHandle() {\n    const { targetRange } = this;\n    if (targetRange.equals(RectRange.EMPTY)) {\n      return;\n    }\n    const { table } = this;\n    const { cols, rows } = table;\n    const scrollView = table.getScrollView();\n    this.targetOffset.left = cols.sectionSumWidth(scrollView.sci, targetRange.sci - 1);\n    this.targetOffset.top = rows.sectionSumHeight(scrollView.sri, targetRange.sri - 1);\n    this.targetOffset.width = targetRange.w;\n    this.targetOffset.height = targetRange.h;\n    this.setWidth(this.targetOffset.width);\n    this.setHeight(this.targetOffset.height);\n    this.setTop(this.targetOffset.top);\n    this.setLeft(this.targetOffset.left);\n  }\n\n  targetBorderHandle() {\n    const { targetRange } = this;\n    if (targetRange.equals(RectRange.EMPTY)) {\n      return;\n    }\n    const { selectRange } = this;\n    const {\n      top, bottom, left, right,\n    } = this.rectRangeBoundOut(selectRange);\n    this.hideAllBorder();\n    const overGo = this.rectRangeOverGo(selectRange);\n    if (!top) {\n      this.showTBorder(overGo);\n    }\n    if (!bottom) {\n      this.showBBorder(overGo);\n    }\n    if (!left) {\n      this.showLBorder(overGo);\n    }\n    if (!right) {\n      this.showRBorder(overGo);\n    }\n    this.overGo = overGo;\n  }\n\n  targetRangeHandle() {\n    const { selectRange } = this;\n    if (Utils.isUnDef(selectRange)) {\n      this.hide();\n      this.targetRange = RectRange.EMPTY;\n      return;\n    }\n    const { table } = this;\n    const { cols, rows } = table;\n    const scrollView = table.getScrollView();\n    const targetRange = scrollView.coincide(selectRange);\n    targetRange.w = cols.rectRangeSumWidth(targetRange);\n    targetRange.h = rows.rectRangeSumHeight(targetRange);\n    this.targetRange = targetRange;\n    if (targetRange.equals(RectRange.EMPTY)) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  targetCornerHandle() {\n    const { targetRange } = this;\n    if (targetRange.equals(RectRange.EMPTY)) {\n      return;\n    }\n    const { selectLocal } = this;\n    // remove br\n    this.brCorner.removeClass('br-pos');\n    this.lCorner.removeClass('br-pos');\n    this.tCorner.removeClass('br-pos');\n    this.ltCorner.removeClass('br-pos');\n    // remove tr\n    this.brCorner.removeClass('tr-pos');\n    this.lCorner.removeClass('tr-pos');\n    this.tCorner.removeClass('tr-pos');\n    this.ltCorner.removeClass('tr-pos');\n    // remove bl\n    this.brCorner.removeClass('bl-pos');\n    this.lCorner.removeClass('bl-pos');\n    this.tCorner.removeClass('bl-pos');\n    this.ltCorner.removeClass('bl-pos');\n    switch (selectLocal) {\n      case SELECT_LOCAL.L:\n        this.brCorner.addClass('bl-pos');\n        this.lCorner.addClass('bl-pos');\n        this.tCorner.addClass('bl-pos');\n        this.ltCorner.addClass('bl-pos');\n        break;\n      case SELECT_LOCAL.LT:\n      case SELECT_LOCAL.BR:\n        this.brCorner.addClass('br-pos');\n        this.lCorner.addClass('br-pos');\n        this.tCorner.addClass('br-pos');\n        this.ltCorner.addClass('br-pos');\n        break;\n      case SELECT_LOCAL.T:\n        this.brCorner.addClass('tr-pos');\n        this.lCorner.addClass('tr-pos');\n        this.tCorner.addClass('tr-pos');\n        this.ltCorner.addClass('tr-pos');\n        break;\n    }\n  }\n\n  downSelectRange(x, y) {\n    const { table } = this;\n    const { rows, cols } = table;\n    const merges = table.getTableMerges();\n    const { ri, ci } = table.getRiCiByXy(x, y);\n    if (ri === -1 && ci === -1) {\n      this.downRange = new RectRange(0, 0, rows.len - 1, cols.len - 1);\n      this.selectRange = this.downRange;\n      this.selectLocal = SELECT_LOCAL.LT;\n      return;\n    }\n    if (ri === -1) {\n      this.downRange = new RectRange(0, ci, rows.len - 1, ci);\n      this.selectRange = this.downRange;\n      this.selectLocal = SELECT_LOCAL.T;\n      return;\n    }\n    if (ci === -1) {\n      this.downRange = new RectRange(ri, 0, ri, cols.len - 1);\n      this.selectRange = this.downRange;\n      this.selectLocal = SELECT_LOCAL.L;\n      return;\n    }\n    this.downRange = merges.getFirstIncludes(ri, ci)\n      || new RectRange(ri, ci, ri, ci);\n    this.selectRange = this.downRange;\n    this.selectLocal = SELECT_LOCAL.BR;\n  }\n\n  moveSelectRange(x, y) {\n    const { table } = this;\n    const {\n      rows, cols,\n    } = table;\n    const { downRange, selectLocal } = this;\n    const merges = table.getTableMerges();\n    const viewRange = table.getScrollView();\n    let { ri, ci } = table.getRiCiByXy(x, y);\n    if (ri === -1) {\n      ri = viewRange.sri;\n    }\n    if (ci === -1) {\n      ci = viewRange.sci;\n    }\n    if (selectLocal === SELECT_LOCAL.LT) {\n      const rect = downRange.union(new RectRange(0, 0, rows.len - 1, cols.len - 1));\n      this.moveRange = downRange.union(rect);\n      this.selectRange = this.moveRange;\n      this.selectLocal = SELECT_LOCAL.LT;\n      return;\n    }\n    if (selectLocal === SELECT_LOCAL.L) {\n      const rect = downRange.union(new RectRange(ri, 0, ri, 0));\n      this.moveRange = downRange.union(rect);\n      this.selectRange = this.moveRange;\n      this.selectLocal = SELECT_LOCAL.L;\n      return;\n    }\n    if (selectLocal === SELECT_LOCAL.T) {\n      const rect = downRange.union(new RectRange(0, ci, 0, ci));\n      this.moveRange = downRange.union(rect);\n      this.selectRange = this.moveRange;\n      this.selectLocal = SELECT_LOCAL.T;\n      return;\n    }\n    const rect = downRange.union(new RectRange(ri, ci, ri, ci));\n    this.moveRange = merges.union(rect);\n    this.selectRange = this.moveRange;\n    this.selectLocal = SELECT_LOCAL.BR;\n  }\n\n}\n\nexport {\n  XSelectItem, SELECT_LOCAL,\n};\n","import { cssPrefix } from '../../../../../const/Constant';\r\nimport { XScreenBorderItem } from './XScreenBorderItem';\r\n\r\nconst SVG = `\r\n  <svg class=\"${cssPrefix}-copy-style-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">\r\n    <line class=\"${cssPrefix}-copy-style-stroked ${cssPrefix}-copy-style-stroked-top\" x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"0\"/>\r\n    <line class=\"${cssPrefix}-copy-style-stroked ${cssPrefix}-copy-style-stroked-left\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\"/>\r\n    <line class=\"${cssPrefix}-copy-style-stroked ${cssPrefix}-copy-style-stroked-bottom\" x1=\"0\" y1=\"100%\" x2=\"100%\" y2=\"100%\"/>\r\n    <line class=\"${cssPrefix}-copy-style-stroked ${cssPrefix}-copy-style-stroked-right\" x1=\"100%\" y1=\"0\" x2=\"100%\" y2=\"100%\"/>\r\n  </svg>\r\n`;\r\n\r\nclass XScreenSvgBorderItem extends XScreenBorderItem {\r\n\r\n  constructor({ table }) {\r\n    super({ table }, `${cssPrefix}-part-border-svg`);\r\n    this.blt.html(SVG);\r\n    this.bl.html(SVG);\r\n    this.bt.html(SVG);\r\n    this.bbr.html(SVG);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenSvgBorderItem,\r\n};\r\n","import { XScreenSvgBorderItem } from '../../xscreen/item/border/XScreenSvgBorderItem';\nimport { XSelectItem } from '../xselect/XSelectItem';\nimport { RectRange } from '../../tablebase/RectRange';\nimport { Widget } from '../../../../lib/Widget';\nimport { cssPrefix } from '../../../../const/Constant';\n\nclass XcopyStyle extends XScreenSvgBorderItem {\n\n  constructor(table) {\n    super({ table });\n    this.selectRange = null;\n    this.targetRange = null;\n    this.ltElem = new Widget(`${cssPrefix}-x-select-area`);\n    this.brElem = new Widget(`${cssPrefix}-x-select-area`);\n    this.lElem = new Widget(`${cssPrefix}-x-select-area`);\n    this.tElem = new Widget(`${cssPrefix}-x-select-area`);\n    this.blt.child(this.ltElem);\n    this.bl.child(this.lElem);\n    this.bt.child(this.tElem);\n    this.bbr.child(this.brElem);\n  }\n\n  onAdd() {\n    this.hide();\n  }\n\n  hideCopyStyle() {\n    this.hide();\n  }\n\n  showCopyStyle() {\n    this.offsetHandle();\n    this.borderHandle();\n  }\n\n  offsetHandle() {\n    const { xScreen } = this;\n    const xSelect = xScreen.findType(XSelectItem);\n    const {\n      targetRange, selectRange,\n    } = xSelect;\n    this.selectRange = selectRange;\n    this.targetRange = targetRange;\n    if (targetRange === RectRange.EMPTY) {\n      return;\n    }\n    const { targetOffset } = xSelect;\n    this.setHeight(targetOffset.height);\n    this.setWidth(targetOffset.width);\n    this.setTop(targetOffset.top);\n    this.setLeft(targetOffset.left);\n  }\n\n  borderHandle() {\n    const { xScreen } = this;\n    const xSelect = xScreen.findType(XSelectItem);\n    const { targetRange } = xSelect;\n    if (targetRange.equals(RectRange.EMPTY)) {\n      return;\n    }\n    const { selectRange } = xSelect;\n    const {\n      top, bottom, left, right,\n    } = this.rectRangeBoundOut(selectRange);\n    this.hideAllBorder();\n    const overGo = this.rectRangeOverGo(selectRange);\n    if (!top) {\n      this.showTBorder(overGo);\n    }\n    if (!bottom) {\n      this.showBBorder(overGo);\n    }\n    if (!left) {\n      this.showLBorder(overGo);\n    }\n    if (!right) {\n      this.showRBorder(overGo);\n    }\n  }\n\n}\n\nexport {\n  XcopyStyle,\n};\n","import { Widget } from '../../lib/Widget';\nimport { cssPrefix, Constant } from '../../const/Constant';\nimport { Undo } from './tools/Undo';\nimport { Redo } from './tools/Redo';\nimport { PaintFormat } from './tools/PaintFormat';\nimport { ClearFormat } from './tools/ClearFormat';\nimport { Format } from './tools/Format';\nimport { Font } from './tools/Font';\nimport { FontSize } from './tools/FontSize';\nimport { FontBold } from './tools/FontBold';\nimport { FontItalic } from './tools/FontItalic';\nimport { UnderLine } from './tools/UnderLine';\nimport { FontStrike } from './tools/FontStrike';\nimport { FontColor } from './tools/FontColor';\nimport { FillColor } from './tools/FillColor';\nimport { Border } from './tools/contextmenu/icon/border/Border';\nimport { Merge } from './tools/Merge';\nimport { HorizontalAlign } from './tools/HorizontalAlign';\nimport { VerticalAlign } from './tools/VerticalAlign';\nimport { TextWrapping } from './tools/TextWrapping';\nimport { Fixed } from './tools/Fixed';\nimport { Filter } from './tools/Filter';\nimport { Functions } from './tools/Functions';\nimport { EventBind } from '../../utils/EventBind';\nimport {\n  SCREEN_SELECT_EVENT,\n} from '../table/screenwiget/selector/ScreenSelector';\nimport { ElPopUp } from '../../component/elpopup/ElPopUp';\nimport { LINE_TYPE } from '../../canvas/Line';\nimport { Icon } from './tools/Icon';\nimport { Cell } from '../table/tablecell/Cell';\nimport { Utils } from '../../utils/Utils';\nimport { Scale } from './tools/Scale';\nimport { BaseFont } from '../../canvas/font/BaseFont';\nimport { XSelectItem } from '../table/xscreenitems/xselect/XSelectItem';\nimport { XcopyStyle } from '../table/xscreenitems/xcopystyle/XcopyStyle';\n\nclass Divider extends Widget {\n  constructor() {\n    super(`${cssPrefix}-tools-divider`);\n  }\n}\n\nclass TopMenu extends Widget {\n\n  constructor(workTop) {\n    super(`${cssPrefix}-tools-menu`);\n\n    this.workTop = workTop;\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n\n    // tools\n    this.undo = new Undo();\n    this.redo = new Redo();\n    this.scale = new Scale({\n      contextMenu: {\n        onUpdate: (value) => {\n          this.scale.setTitle(`${value}%`);\n          const { body } = this.workTop.work;\n          body.setScale(value / 100);\n        },\n      },\n    });\n    this.paintFormat = new PaintFormat();\n    this.clearFormat = new ClearFormat();\n    this.format = new Format({\n      contextMenu: {\n        onUpdate: (format, title) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const {\n            xScreen,\n          } = table;\n          const styleCellsHelper = table.getStyleCellsHelper();\n          const tableDataSnapshot = table.getTableDataSnapshot();\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          this.format.setTitle(title);\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            styleCellsHelper.getCellOrNewCellByViewRange({\n              rectRange: selectRange,\n              callback: (r, c, origin) => {\n                const cell = origin.clone();\n                cell.format = format;\n                cellDataProxy.setCell(r, c, cell);\n              },\n            });\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n      },\n    });\n    this.font = new Font({\n      contextMenu: {\n        onUpdate: (type) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const {\n            xScreen,\n          } = table;\n          const styleCellsHelper = table.getStyleCellsHelper();\n          const tableDataSnapshot = table.getTableDataSnapshot();\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          this.font.setTitle(type);\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            styleCellsHelper.getCellOrNewCellByViewRange({\n              rectRange: selectRange,\n              callback: (r, c, origin) => {\n                const cell = origin.clone();\n                cell.fontAttr.name = type;\n                cellDataProxy.setCell(r, c, cell);\n              },\n            });\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n      },\n    });\n    this.dprFontSize = new FontSize({\n      contextMenu: {\n        onUpdate: (size) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const {\n            xScreen,\n          } = table;\n          const styleCellsHelper = table.getStyleCellsHelper();\n          const tableDataSnapshot = table.getTableDataSnapshot();\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          this.dprFontSize.setTitle(size);\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            styleCellsHelper.getCellOrNewCellByViewRange({\n              rectRange: selectRange,\n              callback: (r, c, origin) => {\n                const cell = origin.clone();\n                cell.fontAttr.size = size;\n                cellDataProxy.setCell(r, c, cell);\n              },\n            });\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n      },\n    });\n    this.fontColor = new FontColor({\n      contextMenu: {\n        onUpdate: (color) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const {\n            xScreen,\n          } = table;\n          const styleCellsHelper = table.getStyleCellsHelper();\n          const tableDataSnapshot = table.getTableDataSnapshot();\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          this.fontColor.setColor(color);\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            styleCellsHelper.getCellOrNewCellByViewRange({\n              rectRange: selectRange,\n              callback: (r, c, origin) => {\n                const cell = origin.clone();\n                cell.fontAttr.color = color;\n                cellDataProxy.setCell(r, c, cell);\n              },\n            });\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n      },\n    });\n    this.fillColor = new FillColor({\n      contextMenu: {\n        onUpdate: (color) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const {\n            xScreen,\n          } = table;\n          const styleCellsHelper = table.getStyleCellsHelper();\n          const tableDataSnapshot = table.getTableDataSnapshot();\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          this.fillColor.setColor(color);\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            styleCellsHelper.getCellOrNewCellByViewRange({\n              rectRange: selectRange,\n              callback: (r, c, origin) => {\n                const cell = origin.clone();\n                cell.background = color;\n                cellDataProxy.setCell(r, c, cell);\n              },\n            });\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n      },\n    });\n    this.border = new Border({\n      contextMenu: {\n        onUpdate: (borderType, color, lineType) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const { xScreen } = table;\n          const operateCellsHelper = table.getOperateCellsHelper();\n          const tableDataSnapshot = table.getTableDataSnapshot();\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            const rect = selectRange;\n            let width = 1;\n            let type = LINE_TYPE.SOLID_LINE;\n            switch (lineType) {\n              case 'line1':\n                width = 1;\n                type = LINE_TYPE.SOLID_LINE;\n                break;\n              case 'line2':\n                width = 2;\n                type = LINE_TYPE.SOLID_LINE;\n                break;\n              case 'line3':\n                width = 3;\n                type = LINE_TYPE.SOLID_LINE;\n                break;\n              case 'line4':\n                type = LINE_TYPE.DOTTED_LINE;\n                break;\n              case 'line5':\n                type = LINE_TYPE.POINT_LINE;\n                break;\n              case 'line6':\n                type = LINE_TYPE.DOUBLE_LINE;\n                break;\n              default: break;\n            }\n            switch (borderType) {\n              case 'border1':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    const { borderAttr } = newCell;\n                    borderAttr.setAllDisplay(true);\n                    borderAttr.setAllColor(color);\n                    borderAttr.setAllWidth(width);\n                    borderAttr.setAllType(type);\n                    cellDataProxy.setCell(ri, ci, newCell);\n                  },\n                });\n                break;\n              case 'border2':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    const { borderAttr } = newCell;\n                    if (ri !== rect.sri) {\n                      borderAttr.setTDisplay(true);\n                      borderAttr.setTColor(color);\n                      borderAttr.setTWidth(width);\n                      borderAttr.setTType(type);\n                    }\n                    if (ri !== rect.eri) {\n                      borderAttr.setBDisplay(true);\n                      borderAttr.setBColor(color);\n                      borderAttr.setBWidth(width);\n                      borderAttr.setBType(type);\n                    }\n                    if (ci !== rect.sci) {\n                      borderAttr.setLDisplay(true);\n                      borderAttr.setLColor(color);\n                      borderAttr.setLWidth(width);\n                      borderAttr.setLType(type);\n                    }\n                    if (ci !== rect.eci) {\n                      borderAttr.setRDisplay(true);\n                      borderAttr.setRColor(color);\n                      borderAttr.setRWidth(width);\n                      borderAttr.setRType(type);\n                    }\n                    cellDataProxy.setCell(ri, ci, newCell);\n                  },\n                });\n                break;\n              case 'border3':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    const { borderAttr } = newCell;\n                    if (ri !== rect.sri) {\n                      borderAttr.setTDisplay(true);\n                      borderAttr.setTColor(color);\n                      borderAttr.setTWidth(width);\n                      borderAttr.setTType(type);\n                    }\n                    if (ri !== rect.eri) {\n                      borderAttr.setBDisplay(true);\n                      borderAttr.setBColor(color);\n                      borderAttr.setBWidth(width);\n                      borderAttr.setBType(type);\n                    }\n                  },\n                });\n                break;\n              case 'border4':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    const { borderAttr } = newCell;\n                    if (ci !== rect.sci) {\n                      borderAttr.setLDisplay(true);\n                      borderAttr.setLColor(color);\n                      borderAttr.setLWidth(width);\n                      borderAttr.setLType(type);\n                    }\n                    if (ci !== rect.eci) {\n                      borderAttr.setRDisplay(true);\n                      borderAttr.setRColor(color);\n                      borderAttr.setRWidth(width);\n                      borderAttr.setRType(type);\n                    }\n                    cellDataProxy.setCell(ri, ci, newCell);\n                  },\n                });\n                break;\n              case 'border5':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    const { borderAttr } = newCell;\n                    if (ri === rect.sri) {\n                      borderAttr.setTDisplay(true);\n                      borderAttr.setTColor(color);\n                      borderAttr.setTWidth(width);\n                      borderAttr.setTType(type);\n                    }\n                    if (ri === rect.eri) {\n                      borderAttr.setBDisplay(true);\n                      borderAttr.setBColor(color);\n                      borderAttr.setBWidth(width);\n                      borderAttr.setBType(type);\n                    }\n                    if (ci === rect.sci) {\n                      borderAttr.setLDisplay(true);\n                      borderAttr.setLColor(color);\n                      borderAttr.setLWidth(width);\n                      borderAttr.setLType(type);\n                    }\n                    if (ci === rect.eci) {\n                      borderAttr.setRDisplay(true);\n                      borderAttr.setRColor(color);\n                      borderAttr.setRWidth(width);\n                      borderAttr.setRType(type);\n                    }\n                    cellDataProxy.setCell(ri, ci, newCell);\n                  },\n                });\n                break;\n              case 'border6':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    const { borderAttr } = newCell;\n                    if (ci === rect.sci) {\n                      borderAttr.setLDisplay(true);\n                      borderAttr.setLColor(color);\n                      borderAttr.setLWidth(width);\n                      borderAttr.setLType(type);\n                    }\n                    cellDataProxy.setCell(ri, ci, newCell);\n                  },\n                });\n                break;\n              case 'border7':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    const { borderAttr } = newCell;\n                    if (ri === rect.sri) {\n                      borderAttr.setTDisplay(true);\n                      borderAttr.setTColor(color);\n                      borderAttr.setTWidth(width);\n                      borderAttr.setTType(type);\n                    }\n                    cellDataProxy.setCell(ri, ci, newCell);\n                  },\n                });\n                break;\n              case 'border8':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    const { borderAttr } = newCell;\n                    if (ci === rect.eci) {\n                      borderAttr.setRDisplay(true);\n                      borderAttr.setRColor(color);\n                      borderAttr.setRWidth(width);\n                      borderAttr.setRType(type);\n                    }\n                    cellDataProxy.setCell(ri, ci, newCell);\n                  },\n                });\n                break;\n              case 'border9':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    const { borderAttr } = newCell;\n                    if (ri === rect.eri) {\n                      borderAttr.setBDisplay(true);\n                      borderAttr.setBColor(color);\n                      borderAttr.setBWidth(width);\n                      borderAttr.setBType(type);\n                    }\n                    cellDataProxy.setCell(ri, ci, newCell);\n                  },\n                });\n                break;\n              case 'border10':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    const { borderAttr } = newCell;\n                    borderAttr.setAllDisplay(false);\n                    cellDataProxy.setCell(ri, ci, newCell);\n                  },\n                });\n                break;\n              default: break;\n            }\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n      },\n    });\n    this.fontBold = new FontBold();\n    this.fontItalic = new FontItalic();\n    this.underLine = new UnderLine();\n    this.fontStrike = new FontStrike();\n    this.merge = new Merge();\n    this.horizontalAlign = new HorizontalAlign({\n      contextMenu: {\n        onUpdate: (type) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const {\n            xScreen,\n          } = table;\n          const styleCellsHelper = table.getStyleCellsHelper();\n          const tableDataSnapshot = table.getTableDataSnapshot();\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          switch (type) {\n            case BaseFont.ALIGN.left:\n              this.horizontalAlign.setIcon(new Icon('align-left'));\n              break;\n            case BaseFont.ALIGN.center:\n              this.horizontalAlign.setIcon(new Icon('align-center'));\n              break;\n            case BaseFont.ALIGN.right:\n              this.horizontalAlign.setIcon(new Icon('align-right'));\n              break;\n            default: break;\n          }\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            styleCellsHelper.getCellOrNewCellByViewRange({\n              rectRange: selectRange,\n              callback: (r, c, origin) => {\n                const cell = origin.clone();\n                cell.fontAttr.align = type;\n                cellDataProxy.setCell(r, c, cell);\n              },\n            });\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n      },\n    });\n    this.verticalAlign = new VerticalAlign({\n      contextMenu: {\n        onUpdate: (type) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const {\n            xScreen,\n          } = table;\n          const styleCellsHelper = table.getStyleCellsHelper();\n          const tableDataSnapshot = table.getTableDataSnapshot();\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          switch (type) {\n            case BaseFont.VERTICAL_ALIGN.top:\n              this.verticalAlign.setIcon(new Icon('align-top'));\n              break;\n            case BaseFont.VERTICAL_ALIGN.center:\n              this.verticalAlign.setIcon(new Icon('align-middle'));\n              break;\n            case BaseFont.VERTICAL_ALIGN.bottom:\n              this.verticalAlign.setIcon(new Icon('align-bottom'));\n              break;\n            default: break;\n          }\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            styleCellsHelper.getCellOrNewCellByViewRange({\n              rectRange: selectRange,\n              callback: (r, c, origin) => {\n                const cell = origin.clone();\n                cell.fontAttr.verticalAlign = type;\n                cellDataProxy.setCell(r, c, cell);\n              },\n            });\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n      },\n    });\n    this.textWrapping = new TextWrapping({\n      contextMenu: {\n        onUpdate: (type) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const {\n            xScreen,\n          } = table;\n          const styleCellsHelper = table.getStyleCellsHelper();\n          const tableDataSnapshot = table.getTableDataSnapshot();\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          let icon;\n          switch (type) {\n            case BaseFont.TEXT_WRAP.TRUNCATE:\n              icon = new Icon('truncate');\n              break;\n            case BaseFont.TEXT_WRAP.WORD_WRAP:\n              icon = new Icon('text-wrap');\n              break;\n            case BaseFont.TEXT_WRAP.OVER_FLOW:\n              icon = new Icon('overflow');\n              break;\n          }\n          this.textWrapping.setIcon(icon);\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            styleCellsHelper.getCellOrNewCellByViewRange({\n              rectRange: selectRange,\n              callback: (r, c, origin) => {\n                const cell = origin.clone();\n                cell.fontAttr.textWrap = type;\n                cellDataProxy.setCell(r, c, cell);\n              },\n            });\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n      },\n    });\n    this.fixed = new Fixed();\n    this.filter = new Filter();\n    this.functions = new Functions();\n    this.children(this.undo);\n    this.children(this.redo);\n    this.children(new Divider());\n    this.children(this.scale);\n    this.children(this.paintFormat);\n    this.children(this.clearFormat);\n    this.children(this.format);\n    this.children(new Divider());\n    this.children(this.font);\n    this.children(this.dprFontSize);\n    this.children(new Divider());\n    this.children(this.fontBold);\n    this.children(this.fontItalic);\n    this.children(this.underLine);\n    this.children(this.fontStrike);\n    this.children(this.fontColor);\n    this.children(new Divider());\n    this.children(this.fillColor);\n    this.children(this.border);\n    this.children(this.merge);\n    this.children(this.horizontalAlign);\n    this.children(this.verticalAlign);\n    this.children(this.textWrapping);\n    this.children(this.fixed);\n    this.children(this.filter);\n    this.children(this.functions);\n  }\n\n  onAttach() {\n    this.bind();\n  }\n\n  bind() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    EventBind.bind(body, Constant.WORK_BODY_EVENT_TYPE.CHANGE_ACTIVE, () => {\n      this.setStatus();\n    });\n    EventBind.bind(body, Constant.TABLE_EVENT_TYPE.DATA_CHANGE, () => {\n      this.setStatus();\n    });\n    EventBind.bind(body, Constant.TABLE_EVENT_TYPE.SELECT_DOWN, () => {\n      // console.log('TABLE_EVENT_TYPE.SELECT_DOWN');\n      this.setFormatStatus();\n      this.setFontStatus();\n      this.setFontSizeStatus();\n      this.setFontBoldStatus();\n      this.setFontItalicStatus();\n      this.setUnderLineStatus();\n      this.setFontStrikeStatus();\n      this.setFontColorStatus();\n      this.setFillColorStatus();\n      this.setHorizontalAlignStatus();\n      this.setVerticalAlignStatus();\n      this.setTextWrappingStatus();\n    });\n    EventBind.bind(this.undo, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      const tableDataSnapshot = table.getTableDataSnapshot();\n      if (tableDataSnapshot.canBack()) tableDataSnapshot.back();\n    });\n    EventBind.bind(this.redo, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      const tableDataSnapshot = table.getTableDataSnapshot();\n      if (tableDataSnapshot.canGo()) tableDataSnapshot.go();\n    });\n    EventBind.bind(this.scale, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { scale } = this;\n      const { scaleContextMenu } = scale;\n      const { elPopUp } = scaleContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (scaleContextMenu.isOpen()) {\n        scaleContextMenu.open();\n      } else {\n        scaleContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    EventBind.bind(this.paintFormat, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      const {\n        xScreen,\n      } = table;\n      const merges = table.getTableMerges();\n      const cells = table.getTableCells();\n      const tableDataSnapshot = table.getTableDataSnapshot();\n      const xCopyStyle = xScreen.findType(XcopyStyle);\n      const xSelect = xScreen.findType(XSelectItem);\n      const { selectRange } = xSelect;\n      if (selectRange) {\n        xCopyStyle.showCopyStyle();\n        this.paintFormat.active(true);\n        this.paintFormat.addSheet(sheet);\n        table.on(SCREEN_SELECT_EVENT.SELECT_OVER, () => {\n          xCopyStyle.hideCopyStyle();\n          // 清除复制\n          this.paintFormat.active(false);\n          this.paintFormat.removeSheet(sheet);\n          // 目标区域 复制区域\n          const targetRect = xCopyStyle.selectRange;\n          const srcRect = xSelect.selectRange;\n          // 开始复制\n          tableDataSnapshot.begin();\n          const { cellDataProxy } = tableDataSnapshot;\n          for (let i = srcRect.sri, j = targetRect.sri; i <= srcRect.eri; i += 1, j += 1) {\n            for (let k = srcRect.sci, v = targetRect.sci; k <= srcRect.eci; k += 1, v += 1) {\n              const merge = merges.getFirstIncludes(i, k);\n              let src = null;\n              if (merge) {\n                // 是master单元格?\n                if (merge.sri === i && merge.sci === k) {\n                  src = cells.getCell(i, k);\n                }\n              } else {\n                src = cells.getCell(i, k);\n              }\n              if (src) {\n                const target = cells.getCellOrNew(j, v);\n                const cell = src.clone();\n                cell.text = target.text;\n                cellDataProxy.setCell(j, v, cell);\n              }\n            }\n          }\n          tableDataSnapshot.end();\n          table.render();\n        });\n      }\n    });\n    EventBind.bind(this.clearFormat, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      const {\n        xScreen,\n      } = table;\n      const styleCellsHelper = table.getStyleCellsHelper();\n      const tableDataSnapshot = table.getTableDataSnapshot();\n      const xSelect = xScreen.findType(XSelectItem);\n      const { selectRange } = xSelect;\n      if (selectRange) {\n        tableDataSnapshot.begin();\n        const { cellDataProxy } = tableDataSnapshot;\n        styleCellsHelper.getCellOrNewCellByViewRange({\n          rectRange: selectRange,\n          callback: (r, c, origin) => {\n            const { text } = origin;\n            cellDataProxy.setCell(r, c, new Cell({ text }));\n          },\n        });\n        tableDataSnapshot.end();\n        table.render();\n      }\n    });\n    EventBind.bind(this.format, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { format } = this;\n      const { formatContextMenu } = format;\n      const { elPopUp } = formatContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (formatContextMenu.isOpen()) {\n        formatContextMenu.open();\n      } else {\n        formatContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    EventBind.bind(this.font, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { font } = this;\n      const { fontContextMenu } = font;\n      const { elPopUp } = fontContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (fontContextMenu.isOpen()) {\n        fontContextMenu.open();\n      } else {\n        fontContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    EventBind.bind(this.dprFontSize, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { dprFontSize } = this;\n      const { fontSizeContextMenu } = dprFontSize;\n      const { elPopUp } = fontSizeContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (fontSizeContextMenu.isOpen()) {\n        fontSizeContextMenu.open();\n      } else {\n        fontSizeContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    EventBind.bind(this.fontBold, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      const {\n        xScreen,\n      } = table;\n      const styleCellsHelper = table.getStyleCellsHelper();\n      const cells = table.getTableCells();\n      const tableDataSnapshot = table.getTableDataSnapshot();\n      const xSelect = xScreen.findType(XSelectItem);\n      const { selectRange } = xSelect;\n      if (selectRange) {\n        const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n        const bold = !firstCell.fontAttr.bold;\n        tableDataSnapshot.begin();\n        const { cellDataProxy } = tableDataSnapshot;\n        styleCellsHelper.getCellOrNewCellByViewRange({\n          rectRange: selectRange,\n          callback: (r, c, origin) => {\n            const cell = origin.clone();\n            cell.fontAttr.bold = bold;\n            cellDataProxy.setCell(r, c, cell);\n          },\n        });\n        tableDataSnapshot.end();\n        table.render();\n      }\n    });\n    EventBind.bind(this.fontItalic, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      const {\n        xScreen,\n      } = table;\n      const styleCellsHelper = table.getStyleCellsHelper();\n      const cells = table.getTableCells();\n      const tableDataSnapshot = table.getTableDataSnapshot();\n      const xSelect = xScreen.findType(XSelectItem);\n      const { selectRange } = xSelect;\n      if (selectRange) {\n        const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n        const italic = !firstCell.fontAttr.italic;\n        tableDataSnapshot.begin();\n        const { cellDataProxy } = tableDataSnapshot;\n        styleCellsHelper.getCellOrNewCellByViewRange({\n          rectRange: selectRange,\n          callback: (r, c, origin) => {\n            const cell = origin.clone();\n            cell.fontAttr.italic = italic;\n            cellDataProxy.setCell(r, c, cell);\n          },\n        });\n        tableDataSnapshot.end();\n        table.render();\n      }\n    });\n    EventBind.bind(this.underLine, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      const {\n        xScreen,\n      } = table;\n      const styleCellsHelper = table.getStyleCellsHelper();\n      const cells = table.getTableCells();\n      const tableDataSnapshot = table.getTableDataSnapshot();\n      const xSelect = xScreen.findType(XSelectItem);\n      const { selectRange } = xSelect;\n      if (selectRange) {\n        const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n        const underline = !firstCell.fontAttr.underline;\n        tableDataSnapshot.begin();\n        const { cellDataProxy } = tableDataSnapshot;\n        styleCellsHelper.getCellOrNewCellByViewRange({\n          rectRange: selectRange,\n          callback: (r, c, origin) => {\n            const cell = origin.clone();\n            cell.fontAttr.underline = underline;\n            cellDataProxy.setCell(r, c, cell);\n          },\n        });\n        tableDataSnapshot.end();\n        table.render();\n      }\n    });\n    EventBind.bind(this.fontStrike, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      const {\n        xScreen,\n      } = table;\n      const styleCellsHelper = table.getStyleCellsHelper();\n      const cells = table.getTableCells();\n      const tableDataSnapshot = table.getTableDataSnapshot();\n      const xSelect = xScreen.findType(XSelectItem);\n      const { selectRange } = xSelect;\n      if (selectRange) {\n        const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n        const strikethrough = !firstCell.fontAttr.strikethrough;\n        tableDataSnapshot.begin();\n        const { cellDataProxy } = tableDataSnapshot;\n        styleCellsHelper.getCellOrNewCellByViewRange({\n          rectRange: selectRange,\n          callback: (r, c, origin) => {\n            const cell = origin.clone();\n            cell.fontAttr.strikethrough = strikethrough;\n            cellDataProxy.setCell(r, c, cell);\n          },\n        });\n        tableDataSnapshot.end();\n        table.render();\n      }\n    });\n    EventBind.bind(this.fontColor, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { fontColor } = this;\n      const { fontColorContextMenu } = fontColor;\n      const { elPopUp } = fontColorContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (fontColorContextMenu.isOpen()) {\n        fontColorContextMenu.open();\n      } else {\n        fontColorContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    EventBind.bind(this.fillColor, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { fillColor } = this;\n      const { fillColorContextMenu } = fillColor;\n      const { elPopUp } = fillColorContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (fillColorContextMenu.isOpen()) {\n        fillColorContextMenu.open();\n      } else {\n        fillColorContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    EventBind.bind(this.border, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { border } = this;\n      const { borderTypeContextMenu } = border;\n      const { elPopUp } = borderTypeContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (borderTypeContextMenu.isOpen()) {\n        borderTypeContextMenu.open();\n      } else {\n        borderTypeContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    EventBind.bind(this.merge, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      const {\n        xScreen,\n      } = table;\n      const merges = table.getTableMerges();\n      const tableDataSnapshot = table.getTableDataSnapshot();\n      const xSelect = xScreen.findType(XSelectItem);\n      const { selectRange } = xSelect;\n      if (selectRange) {\n        const merge = selectRange.clone();\n        const find = merges.getFirstIncludes(merge.sri, merge.sci);\n        tableDataSnapshot.begin();\n        const { mergeDataProxy } = tableDataSnapshot;\n        if (Utils.isNotUnDef(find) && merge.equals(find)) {\n          mergeDataProxy.deleteMerge(find);\n        } else {\n          mergeDataProxy.addMerge(merge);\n        }\n        tableDataSnapshot.end();\n        table.render();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    EventBind.bind(this.horizontalAlign, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { horizontalAlign } = this;\n      const { horizontalContextMenu } = horizontalAlign;\n      const { elPopUp } = horizontalContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (horizontalContextMenu.isOpen()) {\n        horizontalContextMenu.open();\n      } else {\n        horizontalContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    EventBind.bind(this.verticalAlign, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { verticalAlign } = this;\n      const { verticalContextMenu } = verticalAlign;\n      const { elPopUp } = verticalContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (verticalContextMenu.isOpen()) {\n        verticalContextMenu.open();\n      } else {\n        verticalContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    EventBind.bind(this.textWrapping, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { textWrapping } = this;\n      const { textWrappingContextMenu } = textWrapping;\n      const { elPopUp } = textWrappingContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (textWrappingContextMenu.isOpen()) {\n        textWrappingContextMenu.open();\n      } else {\n        textWrappingContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n  }\n\n  setHorizontalAlignStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let icon = new Icon('align-left');\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      switch (firstCell.fontAttr.align) {\n        case BaseFont.ALIGN.left:\n          icon = new Icon('align-left');\n          break;\n        case BaseFont.ALIGN.center:\n          icon = new Icon('align-center');\n          break;\n        case BaseFont.ALIGN.right:\n          icon = new Icon('align-right');\n          break;\n        default: break;\n      }\n    }\n    this.horizontalAlign.setIcon(icon);\n  }\n\n  setVerticalAlignStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let icon = new Icon('align-middle');\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      switch (firstCell.fontAttr.verticalAlign) {\n        case BaseFont.VERTICAL_ALIGN.top:\n          icon = new Icon('align-top');\n          break;\n        case BaseFont.VERTICAL_ALIGN.center:\n          icon = new Icon('align-middle');\n          break;\n        case BaseFont.VERTICAL_ALIGN.bottom:\n          icon = new Icon('align-bottom');\n          break;\n        default: break;\n      }\n    }\n    this.verticalAlign.setIcon(icon);\n  }\n\n  setTextWrappingStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let icon = new Icon('text-wrap');\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      switch (firstCell.fontAttr.textWrap) {\n        case BaseFont.TEXT_WRAP.TRUNCATE:\n          icon = new Icon('truncate');\n          break;\n        case BaseFont.TEXT_WRAP.WORD_WRAP:\n          icon = new Icon('text-wrap');\n          break;\n        case BaseFont.TEXT_WRAP.OVER_FLOW:\n          icon = new Icon('overflow');\n          break;\n      }\n    }\n    this.textWrapping.setIcon(icon);\n  }\n\n  setUndoStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const tableDataSnapshot = table.getTableDataSnapshot();\n    this.undo.active(tableDataSnapshot.canBack());\n  }\n\n  setRedoStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const tableDataSnapshot = table.getTableDataSnapshot();\n    this.redo.active(tableDataSnapshot.canGo());\n  }\n\n  setScaleStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { scale } = table;\n    const value = scale.goto(100);\n    this.scale.setTitle(`${value}%`);\n  }\n\n  setPaintFormatStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    this.paintFormat.active(this.paintFormat.includeSheet(sheet));\n  }\n\n  setFormatStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let text = '常规';\n    let format = 'default';\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      // eslint-disable-next-line prefer-destructuring\n      format = firstCell.format;\n      switch (format) {\n        case 'default':\n          text = '常规';\n          break;\n        case 'text':\n          text = '文本';\n          break;\n        case 'number':\n          text = '数字';\n          break;\n        case 'percentage':\n          text = '百分比';\n          break;\n        case 'fraction':\n          text = '分数';\n          break;\n        case 'ENotation':\n          text = '科学计数';\n          break;\n        case 'rmb':\n          text = '人民币';\n          break;\n        case 'hk':\n          text = '港币';\n          break;\n        case 'dollar':\n          text = '美元';\n          break;\n        case 'date1':\n        case 'date2':\n        case 'date3':\n        case 'date4':\n        case 'date5':\n          text = '日期';\n          break;\n        case 'time':\n          text = '时间';\n          break;\n        default: break;\n      }\n    }\n    this.format.setTitle(text);\n    this.format.formatContextMenu.setActiveByType(format);\n  }\n\n  setFontStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let name = 'Arial';\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      // eslint-disable-next-line prefer-destructuring\n      name = firstCell.fontAttr.name;\n    }\n    this.font.setTitle(name);\n    this.font.fontContextMenu.setActiveByType(name);\n  }\n\n  setStatus() {\n    this.setUndoStatus();\n    this.setRedoStatus();\n    this.setScaleStatus();\n    this.setPaintFormatStatus();\n    this.setFormatStatus();\n    this.setFontStatus();\n    this.setFontSizeStatus();\n    this.setFontBoldStatus();\n    this.setFontItalicStatus();\n    this.setUnderLineStatus();\n    this.setFontStrikeStatus();\n    this.setFontColorStatus();\n    this.setFillColorStatus();\n    this.setHorizontalAlignStatus();\n    this.setVerticalAlignStatus();\n    this.setTextWrappingStatus();\n  }\n\n  setUnderLineStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let underline = false;\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      // eslint-disable-next-line prefer-destructuring\n      underline = firstCell.fontAttr.underline;\n    }\n    this.underLine.active(underline);\n  }\n\n  setFontSizeStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let size = '12';\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      // eslint-disable-next-line prefer-destructuring\n      size = firstCell.fontAttr.size;\n    }\n    this.dprFontSize.setTitle(size);\n  }\n\n  setFontBoldStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let bold = false;\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      // eslint-disable-next-line prefer-destructuring\n      bold = firstCell.fontAttr.bold;\n    }\n    this.fontBold.active(bold);\n  }\n\n  setFontStrikeStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let strikethrough = false;\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      // eslint-disable-next-line prefer-destructuring\n      strikethrough = firstCell.fontAttr.strikethrough;\n    }\n    this.fontStrike.active(strikethrough);\n  }\n\n  setFontColorStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let color = 'rgb(0, 0, 0)';\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      // eslint-disable-next-line prefer-destructuring\n      color = firstCell.fontAttr.color;\n    }\n    this.fontColor.setColor(color);\n    this.fontColor.fontColorContextMenu.setActiveByColor(color);\n  }\n\n  setFontItalicStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let italic = false;\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      // eslint-disable-next-line prefer-destructuring\n      italic = firstCell.fontAttr.italic;\n    }\n    this.fontItalic.active(italic);\n  }\n\n  setFillColorStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let color = 'rgb(255, 255, 255)';\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      // eslint-disable-next-line prefer-destructuring\n      if (firstCell.background) {\n        color = firstCell.background;\n      }\n    }\n    this.fillColor.setColor(color);\n    this.fillColor.fillColorContextMenu.setActiveByColor(color);\n  }\n}\n\nexport { TopMenu };\n","import { Widget } from '../../../../lib/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass Item extends Widget {\r\n  constructor(className) {\r\n    super(`${cssPrefix}-option-item ${className}`);\r\n    this.title = '';\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title;\r\n    this.text(this.title);\r\n  }\r\n}\r\n\r\nexport { Item };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\n\r\nclass File extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-file`);\r\n    this.setTitle('文件');\r\n  }\r\n}\r\n\r\nexport { File };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\n\r\nclass ForMart extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-format`);\r\n    this.setTitle('格式');\r\n  }\r\n}\r\n\r\nexport { ForMart };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\n\r\nclass Insert extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-insert`);\r\n    this.setTitle('插入');\r\n  }\r\n}\r\n\r\nexport { Insert };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\n\r\nclass Look extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-look`);\r\n    this.setTitle('查看');\r\n  }\r\n}\r\n\r\nexport { Look };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\n\r\nclass Update extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-update`);\r\n    this.setTitle('修改');\r\n  }\r\n}\r\n\r\nexport { Update };\r\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../lib/Element';\r\nimport { File } from './options/File';\r\nimport { ForMart } from './options/ForMart';\r\nimport { Insert } from './options/Insert';\r\nimport { Look } from './options/Look';\r\nimport { Update } from './options/Update';\r\n\r\nclass TopOption extends Widget {\r\n  constructor(workTop) {\r\n    super(`${cssPrefix}-option`);\r\n\r\n    this.workTop = workTop;\r\n    this.title = ' X-Sheet 工作簿';\r\n    this.logoEle = h('div', `${cssPrefix}-option-logo`);\r\n    this.titleEle = h('div', `${cssPrefix}-option-title`);\r\n    this.optionsEle = h('div', `${cssPrefix}-option-box`);\r\n    this.leftEle = h('div', `${cssPrefix}-option-left`);\r\n    this.rightEle = h('div', `${cssPrefix}-option-right`);\r\n    this.leftEle.children(this.logoEle);\r\n    this.rightEle.children(this.titleEle, this.optionsEle);\r\n    this.children(this.leftEle);\r\n    this.children(this.rightEle);\r\n    this.setTitle(this.title);\r\n    this.file = new File();\r\n    this.format = new ForMart();\r\n    this.insert = new Insert();\r\n    this.look = new Look();\r\n    this.update = new Update();\r\n    this.optionsEle.children(this.file);\r\n    this.optionsEle.children(this.format);\r\n    this.optionsEle.children(this.insert);\r\n    this.optionsEle.children(this.look);\r\n    this.optionsEle.children(this.update);\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title;\r\n    this.titleEle.text(title);\r\n  }\r\n}\r\n\r\nexport { TopOption };\r\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { TopMenu } from './TopMenu';\r\nimport { TopOption } from './TopOption';\r\n\r\nclass WorkTop extends Widget {\r\n\r\n  constructor(work) {\r\n    super(`${cssPrefix}-work-top`);\r\n    this.work = work;\r\n  }\r\n\r\n  onAttach() {\r\n    this.toolsMenu = new TopMenu(this);\r\n    this.option = new TopOption(this);\r\n    this.attach(this.option);\r\n    this.attach(this.toolsMenu);\r\n  }\r\n}\r\n\r\nexport { WorkTop };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Utils } from '../../../utils/Utils';\r\nimport { Layer } from '../../Layer';\r\n\r\nclass VerticalCenterElement extends Layer {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-vertical-center-element`);\r\n    this.options = Utils.mergeDeep({\r\n      style: {},\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { VerticalCenterElement };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Utils } from '../../../utils/Utils';\r\nimport { Layer } from '../../Layer';\r\n\r\nclass VerticalCenter extends Layer {\r\n  constructor(options) {\r\n    super(`${cssPrefix}-vertical-center`);\r\n    this.options = Utils.mergeDeep({\r\n      style: {},\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { VerticalCenter };\r\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { EventBind } from '../../utils/EventBind';\r\n\r\n\r\nclass SheetView extends Widget {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-sheet-view`);\r\n    this.sheetList = [];\r\n    this.activeIndex = -1;\r\n  }\r\n\r\n  attach(sheet) {\r\n    this.sheetList.push(sheet);\r\n    super.attach(sheet);\r\n    sheet.hide();\r\n    EventBind.bind(sheet, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      this.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH);\r\n    });\r\n    EventBind.bind(sheet, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT);\r\n    });\r\n    EventBind.bind(sheet, Constant.TABLE_EVENT_TYPE.DATA_CHANGE, () => {\r\n      this.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    });\r\n    EventBind.bind(sheet, Constant.TABLE_EVENT_TYPE.SELECT_CHANGE, () => {\r\n      this.trigger(Constant.TABLE_EVENT_TYPE.SELECT_CHANGE);\r\n    });\r\n    EventBind.bind(sheet, Constant.TABLE_EVENT_TYPE.SELECT_DOWN, () => {\r\n      this.trigger(Constant.TABLE_EVENT_TYPE.SELECT_DOWN, this);\r\n    });\r\n  }\r\n\r\n  setActiveSheet(index) {\r\n    const { sheetList } = this;\r\n    if (sheetList[index]) {\r\n      this.activeIndex = index;\r\n      return this.setActive(sheetList[index]);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  setActive(sheet) {\r\n    sheet.show();\r\n    sheet.sibling().forEach((item) => {\r\n      item.hide();\r\n    });\r\n    return sheet;\r\n  }\r\n\r\n  getActiveSheet() {\r\n    return this.sheetList[this.activeIndex];\r\n  }\r\n\r\n  getLastIndex() {\r\n    return this.sheetList.length - 1;\r\n  }\r\n}\r\n\r\nexport { SheetView };\r\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { h } from '../../lib/Element';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { EventBind } from '../../utils/EventBind';\r\n\r\n\r\nclass TabView extends Widget {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-sheet-switch-tab`);\r\n    this.last = h('div', `${cssPrefix}-switch-tab-last-btn`);\r\n    this.next = h('div', `${cssPrefix}-switch-tab-next-btn`);\r\n    this.content = h('div', `${cssPrefix}-sheet-tab-content`);\r\n    this.tabs = h('div', `${cssPrefix}-sheet-tab-tabs`);\r\n    this.plus = h('div', `${cssPrefix}-sheet-tab-plus`);\r\n    this.content.children(this.tabs);\r\n    this.children(...[\r\n      this.last,\r\n      this.next,\r\n      this.content,\r\n      this.plus,\r\n    ]);\r\n    this.optiions = Utils.mergeDeep({\r\n      onAdd(tab) { return tab; },\r\n      onSwitch(tab) { return tab; },\r\n    }, options);\r\n    this.left = null;\r\n    this.tabList = [];\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n  }\r\n\r\n  offsetSizeLeft() {\r\n    const maxWidth = this.content.offset().width;\r\n    const current = this.tabs.offset().width;\r\n    if (current > maxWidth) {\r\n      this.left = -(current - maxWidth);\r\n      this.tabs.css('marginLeft', `${this.left}px`);\r\n    }\r\n  }\r\n\r\n  bind() {\r\n    const { next, last, plus } = this;\r\n    EventBind.bind(next, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      const maxWidth = this.content.offset().width;\r\n      const current = this.tabs.offset().width;\r\n      const min = -(current - maxWidth);\r\n      let left = this.left || 0;\r\n      left -= 30;\r\n      if (left < min) left = min;\r\n      this.left = left;\r\n      this.tabs.css('marginLeft', `${this.left}px`);\r\n    });\r\n    EventBind.bind(last, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      let left = this.left || 0;\r\n      left += 30;\r\n      if (left > 0) left = 0;\r\n      this.left = left;\r\n      this.tabs.css('marginLeft', `${this.left}px`);\r\n    });\r\n    EventBind.bind(plus, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.optiions.onAdd();\r\n      this.offsetSizeLeft();\r\n    });\r\n  }\r\n\r\n  attach(tab) {\r\n    this.tabList.push(tab);\r\n    this.tabs.children(tab);\r\n    tab.onAttach();\r\n    EventBind.bind(tab, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.setActive(tab);\r\n      this.optiions.onSwitch(tab);\r\n    });\r\n  }\r\n\r\n  setActiveTab(index) {\r\n    const { tabList } = this;\r\n    if (tabList[index]) {\r\n      this.setActive(tabList[index]);\r\n      return tabList[index];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  setActive(tab) {\r\n    tab.addClass('active');\r\n    tab.sibling().forEach((item) => {\r\n      item.removeClass('active');\r\n    });\r\n  }\r\n\r\n  getLastIndex() {\r\n    return this.tabList.length - 1;\r\n  }\r\n}\r\n\r\nexport { TabView };\r\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\n\r\nlet number = 0;\r\n\r\nclass Tab extends Widget {\r\n  constructor(name = `Sheet${number += 1}`) {\r\n    super(`${cssPrefix}-sheet-tab`);\r\n    this.setName(name);\r\n  }\r\n\r\n  setName(name) {\r\n    this.name = name;\r\n    this.text(this.name);\r\n  }\r\n}\r\n\r\nexport { Tab };\r\n","class Scale {\r\n\r\n  constructor() {\r\n    this.value = 1;\r\n  }\r\n\r\n  back(origin) {\r\n    return origin / this.value;\r\n  }\r\n\r\n  goto(origin) {\r\n    return this.value * origin;\r\n  }\r\n\r\n  setValue(value) {\r\n    this.value = value;\r\n  }\r\n\r\n}\r\n\r\nclass ScaleAdapter {\r\n\r\n  constructor({\r\n    goto = v => v,\r\n    back = v => v,\r\n  } = {}) {\r\n    this.goto = goto;\r\n    this.back = back;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Scale, ScaleAdapter,\r\n};\r\n","import { ScaleAdapter } from './Scale';\r\n\r\nclass Code {\r\n\r\n  constructor({\r\n    scaleAdapter = new ScaleAdapter(),\r\n    height = 33,\r\n    width = 50,\r\n    background = '#f6f7fa',\r\n    color = '#585757',\r\n    size = 11,\r\n    gridColor = '#e8e8e8',\r\n  }) {\r\n    this.scaleAdapter = scaleAdapter;\r\n    this.height = height;\r\n    this.width = width;\r\n    this.background = background;\r\n    this.color = color;\r\n    this.size = size;\r\n    this.gridColor = gridColor;\r\n  }\r\n\r\n  getGridColor() {\r\n    const { gridColor } = this;\r\n    return gridColor;\r\n  }\r\n\r\n  getColor() {\r\n    const { color } = this;\r\n    return color;\r\n  }\r\n\r\n  getSize() {\r\n    const { scaleAdapter } = this;\r\n    const { size } = this;\r\n    return scaleAdapter.goto(size);\r\n  }\r\n\r\n  getBackground() {\r\n    const { background } = this;\r\n    return background;\r\n  }\r\n\r\n  getHeight() {\r\n    const { scaleAdapter } = this;\r\n    const { height } = this;\r\n    return scaleAdapter.goto(height);\r\n  }\r\n\r\n  getWidth() {\r\n    const { scaleAdapter } = this;\r\n    const { width } = this;\r\n    return scaleAdapter.goto(width);\r\n  }\r\n\r\n}\r\n\r\nexport { Code };\r\n","import { Utils } from '../../../utils/Utils';\r\nimport { ScaleAdapter } from './Scale';\r\n\r\nclass Rows {\r\n\r\n  constructor({\r\n    scaleAdapter = new ScaleAdapter(),\r\n    len = 10,\r\n    data = [],\r\n    height,\r\n  }) {\r\n    this.scaleAdapter = scaleAdapter;\r\n    this.len = len;\r\n    this.data = data;\r\n    this.min = 5;\r\n    this.height = Utils.minIf(height, this.min);\r\n  }\r\n\r\n  getOrNew(ri) {\r\n    this.data[ri] = this.data[ri] || {};\r\n    return this.data[ri];\r\n  }\r\n\r\n  getHeight(ri) {\r\n    const { scaleAdapter } = this;\r\n    const row = this.get(ri);\r\n    if (row && row.height) {\r\n      return scaleAdapter.goto(row.height);\r\n    }\r\n    return scaleAdapter.goto(this.height);\r\n  }\r\n\r\n  get(ri) {\r\n    return this.data[ri];\r\n  }\r\n\r\n  eachHeight(ri, ei, cb, sy = 0) {\r\n    let y = sy;\r\n    for (let i = ri; i <= ei; i += 1) {\r\n      const rowHeight = this.getHeight(i);\r\n      cb(i, rowHeight, y);\r\n      y += rowHeight;\r\n    }\r\n  }\r\n\r\n  setHeight(ri, height) {\r\n    const row = this.getOrNew(ri);\r\n    const { scaleAdapter } = this;\r\n    row.height = scaleAdapter.back(Utils.minIf(height, this.min));\r\n  }\r\n\r\n  rectRangeSumHeight(rectRange) {\r\n    return this.sectionSumHeight(rectRange.sri, rectRange.eri);\r\n  }\r\n\r\n  sectionSumHeight(sri, eri) {\r\n    return Utils.rangeSum(sri, eri + 1, i => this.getHeight(i));\r\n  }\r\n\r\n  getData() {\r\n    return this.data;\r\n  }\r\n\r\n  setData(data) {\r\n    this.data = data;\r\n  }\r\n}\r\n\r\nexport { Rows };\r\n","import { Utils } from '../../../utils/Utils';\r\nimport { ScaleAdapter } from './Scale';\r\n\r\nclass Cols {\r\n\r\n  constructor({\r\n    scaleAdapter = new ScaleAdapter(),\r\n    len = 10,\r\n    data = [],\r\n    width = 110,\r\n  }) {\r\n    this.scaleAdapter = scaleAdapter;\r\n    this.len = len;\r\n    this.data = data;\r\n    this.min = 5;\r\n    this.width = Utils.minIf(width, this.min);\r\n  }\r\n\r\n  getOrNew(ci) {\r\n    this.data[ci] = this.data[ci] || {};\r\n    return this.data[ci];\r\n  }\r\n\r\n  getWidth(i) {\r\n    const { scaleAdapter } = this;\r\n    const col = this.data[i];\r\n    if (col && col.width) {\r\n      return scaleAdapter.goto(col.width);\r\n    }\r\n    return scaleAdapter.goto(this.width);\r\n  }\r\n\r\n  get(ci) {\r\n    return this.data[ci];\r\n  }\r\n\r\n  eachWidth(ci, ei, cb, sx = 0) {\r\n    let x = sx;\r\n    for (let i = ci; i <= ei; i += 1) {\r\n      const colWidth = this.getWidth(i);\r\n      cb(i, colWidth, x);\r\n      x += colWidth;\r\n    }\r\n  }\r\n\r\n  setWidth(i, width) {\r\n    const col = this.getOrNew(i);\r\n    const { scaleAdapter } = this;\r\n    col.width = scaleAdapter.back(Utils.minIf(width, this.min));\r\n  }\r\n\r\n  rectRangeSumWidth(rectRange) {\r\n    return this.sectionSumWidth(rectRange.sci, rectRange.eci);\r\n  }\r\n\r\n  sectionSumWidth(sci, eci) {\r\n    return Utils.rangeSum(sci, eci + 1, i => this.getWidth(i));\r\n  }\r\n\r\n  getData() {\r\n    return this.data;\r\n  }\r\n\r\n  setData(data) {\r\n    this.data = data;\r\n  }\r\n}\r\n\r\nexport { Cols };\r\n","class Fixed {\r\n\r\n  constructor({ fxTop = -1, fxLeft = -1 }) {\r\n    this.fxTop = fxTop;\r\n    this.fxLeft = fxLeft;\r\n  }\r\n}\r\n\r\nexport { Fixed };\r\n","\r\nconst SCROLL_TYPE = {\r\n  H_LEFT: Symbol('水平方向左边滚动条'),\r\n  H_RIGHT: Symbol('水平方向向右边滚动'),\r\n  V_TOP: Symbol('垂直方向向上滚动'),\r\n  V_BOTTOM: Symbol('垂直方向下滚动'),\r\n  UN: Symbol('未知'),\r\n};\r\n\r\nclass Scroll {\r\n\r\n  constructor({\r\n    fixed,\r\n  }) {\r\n    this.ri = fixed.fxTop + 1;\r\n    this.ci = fixed.fxLeft + 1;\r\n    this.x = 0;\r\n    this.y = 0;\r\n    this.type = SCROLL_TYPE.UN;\r\n  }\r\n}\r\n\r\nexport {\r\n  Scroll, SCROLL_TYPE,\r\n};\r\n","import cell from '../../../assets/svg/cell.png';\r\nimport sResize from '../../../assets/svg/s-resize.png';\r\nimport eResize from '../../../assets/svg/e-resize.png';\r\n\r\nclass XTableMousePointer {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n    this.lock = null;\r\n  }\r\n\r\n  on(lock) {\r\n    if (this.lock !== null) return;\r\n    this.lock = lock;\r\n  }\r\n\r\n  set(type, lock) {\r\n    if (this.lock) {\r\n      if (lock !== this.lock) return;\r\n    }\r\n    const { table } = this;\r\n    switch (type) {\r\n      case 'cell':\r\n        table.css('cursor', `url(${cell}) 7.5 7.5,auto`);\r\n        break;\r\n      case 's-resize':\r\n        table.css('cursor', `url(${sResize}) 2.5 7.5,auto`);\r\n        break;\r\n      case 'e-resize':\r\n        table.css('cursor', `url(${eResize}) 7.5 2.5,auto`);\r\n        break;\r\n      default:\r\n        table.css('cursor', type);\r\n        break;\r\n    }\r\n  }\r\n\r\n  off(lock) {\r\n    if (this.lock !== lock) return;\r\n    this.lock = null;\r\n  }\r\n}\r\n\r\nexport { XTableMousePointer };\r\n","import { EventBind } from '../../utils/EventBind';\r\nimport { Constant } from '../../const/Constant';\r\n\r\n/* global document */\r\n\r\nclass XTableKeyboard {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n    this.bind();\r\n  }\r\n\r\n  register({ el, attr = {}, stop = true, focus = false }) {\r\n    const { table } = this;\r\n    table.focus.register({ el, attr, stop, focus });\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    const { focus } = table;\r\n    EventBind.bind(document, Constant.SYSTEM_EVENT_TYPE.KEY_DOWN, (e) => {\r\n      const { activate } = focus;\r\n      const { keyCode } = e;\r\n      if (activate) {\r\n        const { attr } = activate;\r\n        const { key, code, callback } = attr;\r\n        if (key) {\r\n          if (e[key] && keyCode === code) {\r\n            callback(e);\r\n          }\r\n        } else if (keyCode === code) {\r\n          callback(e);\r\n        }\r\n      }\r\n      if (keyCode === 9) {\r\n        e.preventDefault();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport { XTableKeyboard };\r\n","/* global document */\r\nimport { Widget } from '../../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../../const/Constant';\r\nimport { h } from '../../../lib/Element';\r\nimport { EventBind } from '../../../utils/EventBind';\r\nimport { Utils } from '../../../utils/Utils';\r\n\r\nclass XReSizer extends Widget {\r\n\r\n  constructor(table, options = { width: 5 }) {\r\n    super(`${cssPrefix}-re-sizer-horizontal`);\r\n\r\n    this.table = table;\r\n    this.options = options;\r\n    this.width = options.width;\r\n    this.hoverEl = h('div', `${cssPrefix}-re-sizer-hover`);\r\n    this.lineEl = h('div', `${cssPrefix}-re-sizer-line`);\r\n    this.children(...[\r\n      this.hoverEl,\r\n      this.lineEl,\r\n    ]);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.table.focus.register({ el: this });\r\n  }\r\n\r\n  getEventLeft(event) {\r\n    const { table } = this;\r\n    const {\r\n      cols, fixed, scroll,\r\n    } = table;\r\n    const { index } = table;\r\n    const { x, y } = table.computeEventXy(event);\r\n    const { ri, ci } = table.getRiCiByXy(x, y);\r\n    if (ri !== -1) {\r\n      return { left: -1, x, y, ri, ci };\r\n    }\r\n    let left = index.getWidth() + cols.sectionSumWidth(0, ci);\r\n    if (ci > fixed.fxLeft) {\r\n      left -= scroll.x;\r\n    }\r\n    return {\r\n      left, x, y, ri, ci,\r\n    };\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    const {\r\n      cols, mousePointer,\r\n    } = table;\r\n    const tableDataSnapshot = table.getTableDataSnapshot();\r\n    const { colsDataProxy } = tableDataSnapshot;\r\n    const { index } = table;\r\n    const { key, type } = Constant.MOUSE_POINTER_TYPE.COL_RESIZE;\r\n    let moveOff = false;\r\n    EventBind.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, () => {\r\n      if (moveOff) return;\r\n      mousePointer.on(key);\r\n      mousePointer.set(type, key);\r\n    });\r\n    EventBind.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      if (moveOff) return;\r\n      mousePointer.off(key);\r\n    });\r\n    EventBind.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      moveOff = true;\r\n      mousePointer.on(key);\r\n      mousePointer.set(type, key);\r\n      const { left, ci } = this.getEventLeft(e);\r\n      const min = left - cols.getWidth(ci) + cols.min;\r\n      let { x: mx } = table.computeEventXy(e);\r\n      EventBind.mouseMoveUp(document, (e) => {\r\n        ({ x: mx } = table.computeEventXy(e));\r\n        mx -= this.width / 2;\r\n        mx = Math.ceil(Utils.minIf(mx, min));\r\n        this.css('left', `${mx}px`);\r\n        this.lineEl.css('height', `${table.visualHeight()}px`);\r\n        this.lineEl.show();\r\n      }, (e) => {\r\n        moveOff = false;\r\n        mousePointer.off(key);\r\n        this.lineEl.hide();\r\n        this.css('left', `${mx}px`);\r\n        const { y } = table.computeEventXy(e);\r\n        if (y <= 0) {\r\n          this.hide();\r\n        }\r\n        const newLeft = mx - (left - cols.getWidth(ci)) + this.width;\r\n        tableDataSnapshot.begin();\r\n        colsDataProxy.setWidth(ci, newLeft);\r\n        tableDataSnapshot.end();\r\n        table.resize();\r\n      });\r\n    });\r\n    EventBind.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, (e) => {\r\n      if (moveOff) return;\r\n      // eslint-disable-next-line prefer-const\r\n      let { left, ci } = this.getEventLeft(e);\r\n      const min = left - cols.getWidth(ci) + cols.min;\r\n      const visualWidth = table.visualWidth();\r\n      if (left > visualWidth) {\r\n        left = visualWidth;\r\n      }\r\n      if (left === -1 || min > visualWidth || ci === -1) {\r\n        this.hide();\r\n      } else {\r\n        this.show();\r\n        this.css('left', `${left - this.width}px`);\r\n        this.hoverEl.css('width', `${this.width}px`);\r\n        this.hoverEl.css('height', `${index.getHeight()}px`);\r\n      }\r\n    });\r\n    EventBind.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      if (moveOff) return;\r\n      this.hide();\r\n    });\r\n  }\r\n}\r\n\r\nexport { XReSizer };\r\n","/* global document */\r\nimport { Widget } from '../../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../../const/Constant';\r\nimport { h } from '../../../lib/Element';\r\nimport { EventBind } from '../../../utils/EventBind';\r\nimport { Utils } from '../../../utils/Utils';\r\n\r\nclass YReSizer extends Widget {\r\n\r\n  constructor(table, options = { height: 5 }) {\r\n    super(`${cssPrefix}-re-sizer-vertical`);\r\n\r\n    this.table = table;\r\n    this.options = options;\r\n    this.height = options.height;\r\n    this.hoverEl = h('div', `${cssPrefix}-re-sizer-hover`);\r\n    this.lineEl = h('div', `${cssPrefix}-re-sizer-line`);\r\n    this.children(...[\r\n      this.hoverEl,\r\n      this.lineEl,\r\n    ]);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.table.focus.register({ el: this });\r\n  }\r\n\r\n  getEventTop(event) {\r\n    const { table } = this;\r\n    const {\r\n      rows, fixed, scroll,\r\n    } = table;\r\n    const { index } = table;\r\n    const { x, y } = table.computeEventXy(event);\r\n    const { ri, ci } = table.getRiCiByXy(x, y);\r\n    if (ci !== -1) {\r\n      return {\r\n        top: -1, x, y, ri, ci,\r\n      };\r\n    }\r\n    let top = index.getHeight() + rows.sectionSumHeight(0, ri);\r\n    if (ri > fixed.fxTop) {\r\n      top -= scroll.y;\r\n    }\r\n    return {\r\n      top, x, y, ri, ci,\r\n    };\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    const {\r\n      rows, mousePointer,\r\n    } = table;\r\n    const tableDataSnapshot = table.getTableDataSnapshot();\r\n    const { rowsDataProxy } = tableDataSnapshot;\r\n    const { index } = table;\r\n    const { key, type } = Constant.MOUSE_POINTER_TYPE.ROW_RESIZE;\r\n    let moveOff = false;\r\n    EventBind.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, () => {\r\n      if (moveOff) return;\r\n      mousePointer.on(key);\r\n      mousePointer.set(type, key);\r\n    });\r\n    EventBind.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      if (moveOff) return;\r\n      mousePointer.off(key);\r\n    });\r\n    EventBind.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      moveOff = true;\r\n      mousePointer.on(key);\r\n      mousePointer.set(type, key);\r\n      const { top, ri } = this.getEventTop(e);\r\n      const min = top - rows.getHeight(ri) + rows.min;\r\n      let { y: my } = table.computeEventXy(e);\r\n      EventBind.mouseMoveUp(document, (e) => {\r\n        ({ y: my } = table.computeEventXy(e));\r\n        my -= this.height / 2;\r\n        my = Math.ceil(Utils.minIf(my, min));\r\n        this.css('top', `${my}px`);\r\n        this.lineEl.css('width', `${table.visualWidth()}px`);\r\n        this.lineEl.show();\r\n      }, (e) => {\r\n        moveOff = false;\r\n        mousePointer.off(key);\r\n        this.lineEl.hide();\r\n        this.css('top', `${my}px`);\r\n        const { x } = table.computeEventXy(e);\r\n        if (x <= 0) {\r\n          this.hide();\r\n        }\r\n        const newTop = my - (top - rows.getHeight(ri)) + this.height;\r\n        tableDataSnapshot.begin();\r\n        rowsDataProxy.setHeight(ri, newTop);\r\n        tableDataSnapshot.end();\r\n        table.resize();\r\n      });\r\n    });\r\n    EventBind.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, (e) => {\r\n      if (moveOff) return;\r\n      // eslint-disable-next-line prefer-const\r\n      let { top, ri } = this.getEventTop(e);\r\n      const min = top - rows.getHeight(ri) + rows.min;\r\n      const visualHeight = table.visualHeight();\r\n      if (top > visualHeight) {\r\n        top = visualHeight;\r\n      }\r\n      if (top === -1 || min > visualHeight || ri === -1) {\r\n        this.hide();\r\n      } else {\r\n        this.show();\r\n        this.css('top', `${top - this.height}px`);\r\n        this.hoverEl.css('width', `${index.getWidth()}px`);\r\n        this.hoverEl.css('height', `${this.height}px`);\r\n      }\r\n    });\r\n    EventBind.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      if (moveOff) return;\r\n      this.hide();\r\n    });\r\n  }\r\n}\r\n\r\nexport { YReSizer };\r\n","import { Widget } from '../../../lib/Widget';\nimport { RANGE_OVER_GO } from '../xscreen/item/border/XScreenBorderItem';\nimport {\n  cssPrefix,\n  Constant,\n} from '../../../const/Constant';\nimport { EventBind } from '../../../utils/EventBind';\nimport { XSelectItem } from '../xscreenitems/xselect/XSelectItem';\n\nclass XHeightLight extends Widget {\n\n  constructor(table) {\n    super(`${cssPrefix}-table-x-height-light`);\n    this.table = table;\n    this.setSize();\n  }\n\n  onAttach() {\n    this.bind();\n    this.hide();\n  }\n\n  checkOut() {\n    const { table } = this;\n    const { xScreen } = table;\n    const xSelect = xScreen.findType(XSelectItem);\n    const {\n      selectRange,\n    } = xSelect;\n    if (!selectRange) {\n      return true;\n    }\n    const scrollView = table.getScrollView();\n    return selectRange.eci < scrollView.sci || selectRange.sci > scrollView.eci;\n  }\n\n  bind() {\n    const { table } = this;\n    EventBind.bind(table, Constant.TABLE_EVENT_TYPE.SELECT_CHANGE, () => {\n      this.offsetHandle();\n    });\n    EventBind.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\n      this.offsetHandle();\n    });\n  }\n\n  offsetHandle() {\n    if (this.checkOut()) {\n      this.hide();\n      return;\n    }\n    this.show();\n    const { table } = this;\n    this.offset({\n      left: this.getLeft() + table.getIndexWidth(),\n      top: 0,\n      width: this.getWidth(),\n      height: table.getIndexHeight(),\n    });\n  }\n\n  setSize() {\n    const { table } = this;\n    this.css('height', `${table.getIndexHeight()}px`);\n  }\n\n  getLeft() {\n    const { table } = this;\n    const {\n      xScreen, cols, fixed,\n    } = table;\n    const xSelect = xScreen.findType(XSelectItem);\n    const scrollView = table.getScrollView();\n    const {\n      selectRange, overGo,\n    } = xSelect;\n    if (!selectRange) {\n      return 0;\n    }\n    // 固定位置\n    const { fixLeft } = fixed;\n    switch (overGo) {\n      case RANGE_OVER_GO.LT:\n      case RANGE_OVER_GO.L:\n      case RANGE_OVER_GO.LTT:\n      case RANGE_OVER_GO.LTL:\n      case RANGE_OVER_GO.BRL:\n      case RANGE_OVER_GO.ALL:\n        return cols.sectionSumWidth(selectRange.sci, fixLeft);\n    }\n    // 滚动位置\n    return cols.sectionSumWidth(scrollView.sci, selectRange.sci - 1);\n  }\n\n  getWidth() {\n    const { table } = this;\n    const {\n      xScreen, cols, fixed,\n    } = table;\n    const xSelect = xScreen.findType(XSelectItem);\n    const scrollView = table.getScrollView();\n    const {\n      selectRange, overGo,\n    } = xSelect;\n    // 固定宽度\n    const { fixLeft } = fixed;\n    let fixWidth = 0;\n    switch (overGo) {\n      case RANGE_OVER_GO.LT:\n      case RANGE_OVER_GO.L:\n      case RANGE_OVER_GO.LTT:\n      case RANGE_OVER_GO.LTL:\n      case RANGE_OVER_GO.BRL:\n      case RANGE_OVER_GO.ALL:\n        fixWidth = cols.sectionSumWidth(selectRange.sci, fixLeft);\n        break;\n    }\n    // 滚动宽度\n    const range = selectRange.clone();\n    range.sri = scrollView.sri;\n    range.eri = scrollView.sri;\n    return fixWidth + cols.rectRangeSumWidth(scrollView.coincide(range));\n  }\n}\n\nexport { XHeightLight };\n","import { Widget } from '../../../lib/Widget';\nimport { RANGE_OVER_GO } from '../xscreen/item/border/XScreenBorderItem';\nimport {\n  cssPrefix,\n  Constant,\n} from '../../../const/Constant';\nimport { EventBind } from '../../../utils/EventBind';\nimport { XSelectItem } from '../xscreenitems/xselect/XSelectItem';\n\nclass YHeightLight extends Widget {\n\n  constructor(table) {\n    super(`${cssPrefix}-table-y-height-light`);\n    this.table = table;\n    this.setSize();\n  }\n\n  onAttach() {\n    this.bind();\n    this.hide();\n  }\n\n  checkOut() {\n    const { table } = this;\n    const { xScreen } = table;\n    const xSelect = xScreen.findType(XSelectItem);\n    const {\n      selectRange,\n    } = xSelect;\n    if (!selectRange) {\n      return true;\n    }\n    const scrollView = table.getScrollView();\n    return selectRange.eri < scrollView.sri || selectRange.sri > scrollView.eri;\n  }\n\n  bind() {\n    const { table } = this;\n    EventBind.bind(table, Constant.TABLE_EVENT_TYPE.SELECT_CHANGE, () => {\n      this.offsetHandle();\n    });\n    EventBind.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\n      this.offsetHandle();\n    });\n  }\n\n  offsetHandle() {\n    if (this.checkOut()) {\n      this.hide();\n      return;\n    }\n    this.show();\n    const { table } = this;\n    this.offset({\n      left: 0,\n      top: this.getTop() + table.getIndexHeight(),\n      width: table.getIndexWidth(),\n      height: this.getHeight(),\n    });\n  }\n\n  setSize() {\n    const { table } = this;\n    this.css('width', `${table.getIndexWidth()}px`);\n  }\n\n  getTop() {\n    const { table } = this;\n    const {\n      xScreen, rows, fixed,\n    } = table;\n    const xSelect = xScreen.findType(XSelectItem);\n    const scrollView = table.getScrollView();\n    const {\n      selectRange, overGo,\n    } = xSelect;\n    if (!selectRange) {\n      return 0;\n    }\n    // 固定位置\n    const { fixTop } = fixed;\n    switch (overGo) {\n      case RANGE_OVER_GO.LT:\n      case RANGE_OVER_GO.T:\n      case RANGE_OVER_GO.LTT:\n      case RANGE_OVER_GO.LTL:\n      case RANGE_OVER_GO.BRL:\n      case RANGE_OVER_GO.ALL:\n        return rows.sectionSumHeight(selectRange.sri, fixTop);\n    }\n    // 滚动位置\n    return rows.sectionSumHeight(scrollView.sri, selectRange.sri - 1);\n  }\n\n  getHeight() {\n    const { table } = this;\n    const {\n      xScreen, rows, fixed,\n    } = table;\n    const xSelect = xScreen.findType(XSelectItem);\n    const scrollView = table.getScrollView();\n    const {\n      selectRange, overGo,\n    } = xSelect;\n    // 固定宽度\n    const { fixTop } = fixed;\n    let fixHeight = 0;\n    switch (overGo) {\n      case RANGE_OVER_GO.LT:\n      case RANGE_OVER_GO.T:\n      case RANGE_OVER_GO.LTT:\n      case RANGE_OVER_GO.LTL:\n      case RANGE_OVER_GO.BRL:\n      case RANGE_OVER_GO.ALL:\n        fixHeight = rows.sectionSumHeight(selectRange.sri, fixTop);\n        break;\n    }\n    // 滚动宽度\n    const range = selectRange.clone();\n    range.sci = scrollView.sci;\n    range.eci = scrollView.sci;\n    return fixHeight + rows.rectRangeSumHeight(scrollView.coincide(range));\n  }\n}\n\nexport { YHeightLight };\n","import { Constant } from '../../const/Constant';\r\nimport { EventBind } from '../../utils/EventBind';\r\n\r\nclass XTableFocus {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n    this.pool = [];\r\n    this.activate = null;\r\n  }\r\n\r\n  findByEl(el) {\r\n    for (let i = 0; i < this.pool.length; i += 1) {\r\n      const item = this.pool[i];\r\n      if (item.el === el) return item;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  register({ el, attr = {}, stop = true, focus = false }) {\r\n    const find = this.findByEl(el);\r\n    if (find) {\r\n      Object.assign(find.attr, attr);\r\n    } else {\r\n      const item = { el, attr };\r\n      this.pool.push(item);\r\n      if (focus) {\r\n        this.activate = item;\r\n      }\r\n      EventBind.bind(el, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n        this.activate = item;\r\n        if (stop) e.stopPropagation();\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { XTableFocus };\r\n","/* global window */\r\n\r\nconst DPR = window.devicePixelRatio || 1;\r\n\r\nclass Base {\r\n\r\n  static rounding(val) {\r\n    return Math.round(val);\r\n  }\r\n\r\n  static dpr() {\r\n    return DPR;\r\n  }\r\n\r\n  static cvCssPx(px) {\r\n    return this.rpx(px) / this.dpr();\r\n  }\r\n\r\n  static radian(angle) {\r\n    return -angle * (Math.PI / 180);\r\n  }\r\n\r\n  static rpx(px) {\r\n    return this.rounding(this.dpx(px));\r\n  }\r\n\r\n  static dpx(px) {\r\n    return px * this.dpr();\r\n  }\r\n\r\n  constructor(canvas) {\r\n    this.canvas = canvas;\r\n    this.ctx = canvas.getContext('2d');\r\n  }\r\n\r\n  resize(width, height) {\r\n    const { canvas } = this;\r\n    canvas.width = Base.rpx(width);\r\n    canvas.height = Base.rpx(height);\r\n    canvas.style.width = `${canvas.width / Base.dpr()}px`;\r\n    canvas.style.height = `${canvas.height / Base.dpr()}px`;\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nclass Draw extends Base {\r\n\r\n  measureText(text) {\r\n    return this.ctx.measureText(text);\r\n  }\r\n\r\n  attr(options) {\r\n    // eslint-disable-next-line guard-for-in,no-restricted-syntax\r\n    for (const key in options) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (options.hasOwnProperty(key)) {\r\n        let value = options[key];\r\n        if (typeof value === 'string' || value instanceof String) {\r\n          value = value.trim();\r\n        }\r\n        if (this.ctx[key] !== value) {\r\n          this.ctx[key] = value;\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  beginPath() {\r\n    this.ctx.beginPath();\r\n    return this;\r\n  }\r\n\r\n  save() {\r\n    const { ctx } = this;\r\n    ctx.save();\r\n    return this;\r\n  }\r\n\r\n  restore() {\r\n    const { ctx } = this;\r\n    ctx.restore();\r\n    return this;\r\n  }\r\n\r\n  clip() {\r\n    const { ctx } = this;\r\n    ctx.clip();\r\n    return this;\r\n  }\r\n\r\n  fill() {\r\n    this.ctx.fill();\r\n    return this;\r\n  }\r\n\r\n  setLineDash(dash) {\r\n    this.ctx.setLineDash(dash);\r\n    return this;\r\n  }\r\n\r\n  rotate(angle) {\r\n    const { ctx } = this;\r\n    ctx.rotate(Draw.radian(angle));\r\n    return this;\r\n  }\r\n\r\n  scale(x, y) {\r\n    this.ctx.scale(x, y);\r\n    return this;\r\n  }\r\n\r\n  translate(x, y) {\r\n    this.ctx.translate(x, y);\r\n    return this;\r\n  }\r\n\r\n  fullRect() {\r\n    const { canvas } = this;\r\n    const { width, height } = canvas;\r\n    this.ctx.fillRect(0, 0, width, height);\r\n    return this;\r\n  }\r\n\r\n  lpx(px) {\r\n    const { ctx } = this;\r\n    const lineWidth = ctx.lineWidth;\r\n    const suffix = lineWidth % 2 === 0\r\n      ? 0 : 0.5;\r\n    return px - suffix;\r\n  }\r\n\r\n}\r\n\r\nclass Pos extends Draw {\r\n\r\n  constructor(canvas) {\r\n    super(canvas);\r\n    this.offsetX = 0;\r\n    this.offsetY = 0;\r\n  }\r\n\r\n  offset(x, y) {\r\n    this.offsetX = x;\r\n    this.offsetY = y;\r\n  }\r\n\r\n  getOffsetX() {\r\n    return this.offsetX;\r\n  }\r\n\r\n  getOffsetY() {\r\n    return this.offsetY;\r\n  }\r\n\r\n  fillText() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  rect() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  fillRect() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  line() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  drawImage() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n}\r\n\r\nclass XDraw extends Pos {\r\n\r\n  fillText(text, x, y) {\r\n    x += this.getOffsetX();\r\n    y += this.getOffsetY();\r\n    this.ctx.fillText(text, XDraw.rounding(x), XDraw.rounding(y));\r\n    return this;\r\n  }\r\n\r\n  rect(x, y, w, h) {\r\n    x += this.getOffsetX();\r\n    y += this.getOffsetY();\r\n    this.ctx.rect(XDraw.rounding(x), XDraw.rounding(y),\r\n      XDraw.rounding(w), XDraw.rounding(h));\r\n    return this;\r\n  }\r\n\r\n  fillRect(x, y, w, h) {\r\n    x += this.getOffsetX();\r\n    y += this.getOffsetY();\r\n    this.ctx.fillRect(XDraw.rounding(x), XDraw.rounding(y),\r\n      XDraw.rounding(w), XDraw.rounding(h));\r\n    return this;\r\n  }\r\n\r\n  line(...xys) {\r\n    const { ctx } = this;\r\n    if (xys.length > 1) {\r\n      this.beginPath();\r\n      let [x, y] = xys[0];\r\n      x += this.getOffsetX();\r\n      y += this.getOffsetY();\r\n      ctx.moveTo(this.lpx(XDraw.rounding(x)),\r\n        this.lpx(XDraw.rounding(y)));\r\n      for (let i = 1, len = xys.length; i < len; i += 1) {\r\n        let [x, y] = xys[i];\r\n        x += this.getOffsetX();\r\n        y += this.getOffsetY();\r\n        ctx.lineTo(this.lpx(XDraw.rounding(x)),\r\n          this.lpx(XDraw.rounding(y)));\r\n      }\r\n      ctx.stroke();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  drawImage(el, sx, sy, sw, sh, tx, ty, tw, th) {\r\n    const { ctx } = this;\r\n    sx += this.getOffsetX();\r\n    sy += this.getOffsetY();\r\n    tx += this.getOffsetX();\r\n    ty += this.getOffsetY();\r\n    ctx.drawImage(el,\r\n      XDraw.rounding(sx), XDraw.rounding(sy),\r\n      XDraw.rounding(sw), XDraw.rounding(sh),\r\n      XDraw.rounding(tx), XDraw.rounding(ty),\r\n      XDraw.rounding(tw), XDraw.rounding(th));\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XDraw,\r\n};\r\n","import { Utils } from '../../utils/Utils';\r\nimport { RectRange } from './tablebase/RectRange';\r\n\r\nconst VIEW_MODE = {\r\n  CHANGE_ADD: Symbol('change_add'),\r\n  CHANGE_NOT: Symbol('change_not'),\r\n  STATIC: Symbol('static'),\r\n  BOUND_OUT: Symbol('bound_out'),\r\n};\r\n\r\n/**\r\n * XTableScrollView\r\n */\r\nclass XTableScrollView {\r\n\r\n  /**\r\n   * 视图类型\r\n   * @param lastView\r\n   * @param view\r\n   * @return {symbol}\r\n   */\r\n  static viewMode(lastView, view) {\r\n    // 视图无变化\r\n    if (Utils.isUnDef(lastView)) {\r\n      return VIEW_MODE.CHANGE_NOT;\r\n    }\r\n    if (view.equals(lastView)) {\r\n      return VIEW_MODE.STATIC;\r\n    }\r\n    // 视图不相交\r\n    if (view.coincide(lastView).equals(RectRange.EMPTY)) {\r\n      return VIEW_MODE.BOUND_OUT;\r\n    }\r\n    // 无新增加的视图区域\r\n    if (view.within(lastView)) {\r\n      return VIEW_MODE.CHANGE_NOT;\r\n    }\r\n    // 有新增的视图区域\r\n    return VIEW_MODE.CHANGE_ADD;\r\n  }\r\n\r\n  /**\r\n   * XTableScrollView\r\n   * @param scroll\r\n   * @param rows\r\n   * @param cols\r\n   * @param getHeight\r\n   * @param getWidth\r\n   */\r\n  constructor({\r\n    scroll,\r\n    rows,\r\n    cols,\r\n    getHeight = () => 0,\r\n    getWidth = () => 0,\r\n  }) {\r\n    this.scroll = scroll;\r\n    this.rows = rows;\r\n    this.cols = cols;\r\n    this.getHeight = getHeight;\r\n    this.getWidth = getWidth;\r\n  }\r\n\r\n  /**\r\n   * 当前视图滚动区域\r\n   * @returns {RectRange}\r\n   */\r\n  getScrollView() {\r\n    const {\r\n      rows, cols, scroll, getHeight, getWidth,\r\n    } = this;\r\n    const { ri, ci } = scroll;\r\n    let [width, height] = [0, 0];\r\n    let [eri, eci] = [rows.len, cols.len];\r\n    for (let i = ri; i < rows.len; i += 1) {\r\n      height += rows.getHeight(i);\r\n      eri = i;\r\n      if (height >= getHeight()) break;\r\n    }\r\n    for (let j = ci; j < cols.len; j += 1) {\r\n      width += cols.getWidth(j);\r\n      eci = j;\r\n      if (width >= getWidth()) break;\r\n    }\r\n    return new RectRange(ri, ci, eri, eci);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableScrollView,\r\n  VIEW_MODE,\r\n};\r\n","import { Utils } from '../../utils/Utils';\r\n\r\n/**\r\n * TableAreaView\r\n */\r\nclass XTableAreaView {\r\n\r\n  /**\r\n   * TableAreaView\r\n   * @param xTableScrollView\r\n   * @param rows\r\n   * @param cols\r\n   * @param scroll\r\n   */\r\n  constructor({\r\n    xTableScrollView,\r\n    rows,\r\n    cols,\r\n    scroll,\r\n  }) {\r\n    this.xTableScrollView = xTableScrollView;\r\n    this.scroll = scroll;\r\n    this.rows = rows;\r\n    this.cols = cols;\r\n    this.scrollView = null;\r\n  }\r\n\r\n  /**\r\n   * 重置变量区\r\n   */\r\n  reset() {\r\n    this.scrollView = null;\r\n  }\r\n\r\n  /**\r\n   * 当前视图滚动区域\r\n   * @returns {RectRange}\r\n   */\r\n  getScrollView() {\r\n    if (Utils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { xTableScrollView } = this;\r\n    const { cols, rows } = this;\r\n    const scrollView = xTableScrollView.getScrollView();\r\n    scrollView.w = cols.rectRangeSumWidth(scrollView);\r\n    scrollView.h = rows.rectRangeSumHeight(scrollView);\r\n    this.scrollView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableAreaView,\r\n};\r\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { h } from '../../lib/Element';\r\nimport { EventBind } from '../../utils/EventBind';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { RectRange } from './tablebase/RectRange';\r\nimport { XSelectItem } from './xscreenitems/xselect/XSelectItem';\r\n\r\nclass XTableEdit extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-edit`);\r\n    this.input = h('div', `${cssPrefix}-table-edit-input`);\r\n    this.input.attr('contenteditable', true);\r\n    this.input.html('<p>&nbsp;</p>');\r\n    this.table = table;\r\n    this.text = '';\r\n    this.select = null;\r\n    this.children(this.input);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.hide();\r\n  }\r\n\r\n  showEdit() {\r\n    const { table, input } = this;\r\n    const cells = table.getTableCells();\r\n    const { xScreen } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    this.show();\r\n    if (selectRange) {\r\n      const cell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      this.select = selectRange;\r\n      this.editOffset();\r\n      this.text = cell.text;\r\n      this.input.attr('style', cell.toCssStyle());\r\n      if (Utils.isBlank(this.text)) {\r\n        input.html('<p>&nbsp;</p>');\r\n      } else {\r\n        input.text(this.text);\r\n      }\r\n      Utils.keepLastIndex(this.input.el);\r\n    }\r\n  }\r\n\r\n  hideEdit() {\r\n    const { select } = this;\r\n    const { table } = this;\r\n    const cells = table.getTableCells();\r\n    const tableDataSnapshot = table.getTableDataSnapshot();\r\n    const { cellDataProxy } = tableDataSnapshot;\r\n    this.hide();\r\n    if (select) {\r\n      const origin = cells.getCellOrNew(select.sri, select.sci);\r\n      const cell = origin.clone();\r\n      const text = Utils.trim(this.text);\r\n      if (cell.text !== text) {\r\n        tableDataSnapshot.begin();\r\n        cell.text = text;\r\n        cellDataProxy.setCell(select.sri, select.sci, cell);\r\n        tableDataSnapshot.end();\r\n        table.render();\r\n      }\r\n      this.select = null;\r\n    }\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    const { xScreen } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    EventBind.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      e.stopPropagation();\r\n    });\r\n    EventBind.bind(this.input, Constant.SYSTEM_EVENT_TYPE.INPUT, () => {\r\n      const { input } = this;\r\n      if (Utils.isBlank(this.input.text())) {\r\n        input.html('<p>&nbsp;</p>');\r\n      }\r\n      this.text = input.text();\r\n    });\r\n    EventBind.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\r\n      this.hideEdit();\r\n    });\r\n    EventBind.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.hideEdit();\r\n    });\r\n    EventBind.dbClick([\r\n      xSelect.lt,\r\n      xSelect.t,\r\n      xSelect.l,\r\n      xSelect.br,\r\n    ], () => {\r\n      this.showEdit();\r\n    });\r\n  }\r\n\r\n  editOffset() {\r\n    const { table } = this;\r\n    const { xScreen } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      targetRange, targetOffset,\r\n    } = xSelect;\r\n    if (targetRange.equals(RectRange.EMPTY)) {\r\n      return;\r\n    }\r\n    this.offset({\r\n      left: targetOffset.left + table.getIndexWidth() + 3,\r\n      top: targetOffset.top + table.getIndexHeight() + 3,\r\n      width: targetOffset.width - 7,\r\n      height: targetOffset.height - 7,\r\n    });\r\n  }\r\n}\r\n\r\nexport {\r\n  XTableEdit,\r\n};\r\n","import { Utils } from '../utils/Utils';\r\n\r\nclass Grid {\r\n\r\n  constructor(draw, attr = {}) {\r\n    this.draw = draw;\r\n    this.color = '#000000';\r\n    Utils.mergeDeep(this, attr);\r\n  }\r\n\r\n  horizontalLine(sx, sy, ex, ey) {\r\n    if (sy !== ey) {\r\n      throw new Error('coordinate errors sy should be equal to ey !!!');\r\n    }\r\n    const { draw, color } = this;\r\n    draw.attr({\r\n      strokeStyle: color,\r\n      lineWidth: 1,\r\n    });\r\n    draw.line([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  verticalLine(sx, sy, ex, ey) {\r\n    if (sx !== ex) {\r\n      throw new Error('coordinate errors sx should be equal to ex !!!');\r\n    }\r\n    const { draw, color } = this;\r\n    draw.attr({\r\n      strokeStyle: color,\r\n      lineWidth: 1,\r\n    });\r\n    draw.line([sx, sy], [ex, ey]);\r\n  }\r\n}\r\n\r\nexport { Grid };\r\n","class Crop {\r\n  constructor({\r\n    rect, draw, offset = 0,\r\n  }) {\r\n    this.rect = rect;\r\n    this.draw = draw;\r\n    this.offset = offset;\r\n  }\r\n\r\n  open() {\r\n    const { rect, draw, offset } = this;\r\n    const {\r\n      x, y, width, height,\r\n    } = rect;\r\n    draw.save()\r\n      .beginPath()\r\n      .rect(x, y, width + offset, height + offset)\r\n      .clip();\r\n    return this;\r\n  }\r\n\r\n  close() {\r\n    const { draw } = this;\r\n    draw.restore();\r\n    return this;\r\n  }\r\n}\r\n\r\nexport { Crop };\r\n","class DateUtils {\r\n  static dateFormat(fmt, date) {\r\n    const o = {\r\n      'M+': date.getMonth() + 1,\r\n      'd+': date.getDate(),\r\n      'h+': date.getHours(),\r\n      'm+': date.getMinutes(),\r\n      's+': date.getSeconds(),\r\n      'q+': Math.floor((date.getMonth() + 3) / 3),\r\n      S: date.getMilliseconds(),\r\n    };\r\n    const reYear = /(y+)/;\r\n    const resultYear = reYear.exec(fmt);\r\n    if (resultYear) {\r\n      const yearFormatPart = resultYear[0];\r\n      const yearVal = (date.getFullYear().toString()).substr(4 - yearFormatPart.length);\r\n      // eslint-disable-next-line no-param-reassign\r\n      fmt = fmt.replace(yearFormatPart, yearVal);\r\n    }\r\n    // eslint-disable-next-line guard-for-in,no-restricted-syntax\r\n    for (const k in o) {\r\n      const re = new RegExp(`(${k})`);\r\n      const res = re.exec(fmt);\r\n      if (res) {\r\n        const Val = o[k].toString();\r\n        const formatPart = res[0];\r\n        const replaceVal = (formatPart.length === 1) ? (Val) : ((`00${Val}`).substr(Val.length));\r\n        // eslint-disable-next-line no-param-reassign\r\n        fmt = fmt.replace(formatPart, replaceVal);\r\n      }\r\n    }\r\n    return fmt;\r\n  }\r\n\r\n  static parserToDate(dateText, format) {\r\n    if (!dateText) {\r\n      return null;\r\n    }\r\n    const defaultVal = new Date('1970/01/01 00:00:00');\r\n    const o = [{\r\n      reg: 'y+',\r\n    }, {\r\n      reg: 'M+',\r\n    }, {\r\n      reg: 'd+',\r\n    }, {\r\n      reg: 'h+',\r\n    }, {\r\n      reg: 'm+',\r\n    }, {\r\n      reg: 's+',\r\n    }, {\r\n      reg: 'S',\r\n    }];\r\n    let year = defaultVal.getFullYear();\r\n    let month = defaultVal.getMonth() + 1;\r\n    let day = defaultVal.getDate();\r\n    let hours = defaultVal.getHours();\r\n    let minutes = defaultVal.getMinutes();\r\n    let seconds = defaultVal.getSeconds();\r\n    let milliseconds = defaultVal.getMilliseconds();\r\n    let index = 1;\r\n    for (let j = 0; j < format.length; j += 1) {\r\n      const oneChar = format[j];\r\n      for (let i = 0; i < o.length; i += 1) {\r\n        const onePart = o[i];\r\n        const onePartReg = onePart.reg;\r\n        if (onePartReg[0] === oneChar) {\r\n          if (!onePart.index) {\r\n            onePart.index = index;\r\n            index += 1;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    for (let i = 0; i < o.length; i += 1) {\r\n      const onePart = o[i];\r\n      const onePartReg = onePart.reg;\r\n      const re = new RegExp(`(${onePartReg})`);\r\n      const res = re.exec(format);\r\n      if (res) {\r\n        const formatPart = res[0];\r\n        const replaceVal = `([0-9]{1,${formatPart.length}})`;\r\n        // eslint-disable-next-line no-param-reassign\r\n        format = format.replace(formatPart, replaceVal);\r\n      }\r\n    }\r\n    const dataInfo = {};\r\n    const re = new RegExp(format);\r\n    const res = re.exec(dateText);\r\n    if (res) {\r\n      for (let i = 1; i < res.length; i += 1) {\r\n        dataInfo[i] = res[i];\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n    if (o[0].index) {\r\n      const { index } = o[0];\r\n      year = dataInfo[index];\r\n    }\r\n    if (o[1].index) {\r\n      const { index } = o[1];\r\n      month = dataInfo[index];\r\n    }\r\n    if (o[2].index) {\r\n      const { index } = o[2];\r\n      day = dataInfo[index];\r\n    }\r\n    if (o[3].index) {\r\n      const { index } = o[3];\r\n      hours = dataInfo[index];\r\n    }\r\n    if (o[4].index) {\r\n      const { index } = o[4];\r\n      minutes = dataInfo[index];\r\n    }\r\n    if (o[5].index) {\r\n      const { index } = o[5];\r\n      seconds = dataInfo[index];\r\n    }\r\n    if (o[6].index) {\r\n      const { index } = o[6];\r\n      milliseconds = dataInfo[index];\r\n    }\r\n    return new Date(year, month - 1, day, hours, minutes, seconds, milliseconds);\r\n  }\r\n}\r\n\r\nexport { DateUtils };\r\n","import { Utils } from '../../utils/Utils';\r\nimport { DateUtils } from '../../utils/DateUtils';\r\n\r\nfunction parserToDate(text) {\r\n  let result = DateUtils.parserToDate(text, 'yyyy/MM/dd hh:mm:ss');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'yyyy/MM/dd');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'hh:mm:ss');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'MM月dd日');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'yyyy年MM月');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'yyyy年MM月dd日');\r\n  if (result) return result;\r\n  return null;\r\n}\r\n\r\nclass Format {\r\n\r\n  default(value) {\r\n    return value;\r\n  }\r\n\r\n  text(value) {\r\n    return value;\r\n  }\r\n\r\n  number(value) {\r\n    if (Utils.isNumber(value)) {\r\n      if (value.toString().indexOf('.') !== -1) {\r\n        const lastIndex = value.toString().lastIndexOf('.') + 1;\r\n        return value.toString().substring(0, lastIndex + 2);\r\n      }\r\n      return `${value}.00`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  percentage(value) {\r\n    if (Utils.isNumber(value)) {\r\n      return `${value}%`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  fraction(value) {\r\n    if (Utils.isFraction(value)) {\r\n      const left = value.split('/')[0];\r\n      const right = value.split('/')[1];\r\n      return Utils.parseInt(left) / Utils.parseInt(right);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  ENotation(value) {\r\n    if (Utils.isNumber(value)) {\r\n      const number = Utils.parseFloat(value);\r\n      return number.toExponential(2);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  rmb(value) {\r\n    if (Utils.isNumber(value)) {\r\n      return `￥${value}`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  hk(value) {\r\n    if (Utils.isNumber(value)) {\r\n      return `HK${value}`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  dollar(value) {\r\n    if (Utils.isNumber(value)) {\r\n      return `$${value}`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  date1(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('yyyy/MM/dd', result);\r\n    return value;\r\n  }\r\n\r\n  date2(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('MM月dd日', result);\r\n    return value;\r\n  }\r\n\r\n  date3(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('yyyy年MM月', result);\r\n    return value;\r\n  }\r\n\r\n  date4(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('yyyy年MM月dd日', result);\r\n    return value;\r\n  }\r\n\r\n  date5(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('yyyy/MM/dd hh:mm:ss', result);\r\n    return value;\r\n  }\r\n\r\n  time(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('hh:mm:ss', result);\r\n    return value;\r\n  }\r\n}\r\n\r\nconst format = new Format();\r\n\r\nexport default (type, value) => format[type](value);\r\n","class Box {\r\n  constructor({ rect, draw }) {\r\n    this.draw = draw;\r\n    this.rect = rect;\r\n    this.backgroundColor = null;\r\n  }\r\n\r\n  drawBackgroundColor(color) {\r\n    if (color) {\r\n      this.backgroundColor = color;\r\n      if (color) {\r\n        const { draw, rect } = this;\r\n        draw.attr({\r\n          fillStyle: color,\r\n        });\r\n        draw.fillRect(rect.x, rect.y, rect.width, rect.height);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport { Box };\r\n","import { Cell } from './Cell';\r\nimport { Utils } from '../../../utils/Utils';\r\nimport { BaseFont } from '../../../canvas/font/BaseFont';\r\n\r\n/**\r\n * Cells\r\n * @author jerry\r\n */\r\nclass Cells {\r\n\r\n  constructor({\r\n    merges,\r\n    cols,\r\n    rows,\r\n    data = [],\r\n  }) {\r\n    this.merges = merges;\r\n    this.cols = cols;\r\n    this.rows = rows;\r\n    this.data = data;\r\n  }\r\n\r\n  setCellOrNew(ri, ci, cell) {\r\n    if (Utils.isUnDef(this.data[ri])) {\r\n      this.data[ri] = [];\r\n    }\r\n    this.data[ri][ci] = cell;\r\n  }\r\n\r\n  setCell(ri, ci, cell) {\r\n    const row = this.data[ri];\r\n    if (row && row[ci]) {\r\n      row[ci] = cell;\r\n    }\r\n  }\r\n\r\n  getCellOrNew(ri, ci) {\r\n    if (Utils.isUnDef(this.data[ri])) {\r\n      this.data[ri] = [];\r\n    }\r\n    if (Utils.isUnDef(this.data[ri][ci])) {\r\n      this.data[ri][ci] = {\r\n        text: '',\r\n      };\r\n    }\r\n    return this.getCell(ri, ci);\r\n  }\r\n\r\n  getCell(ri, ci) {\r\n    const row = this.data[ri];\r\n    if (row && row[ci]) {\r\n      let item = row[ci];\r\n      if (item instanceof Cell) {\r\n        return row[ci];\r\n      }\r\n      if (Utils.isString(item)) {\r\n        item = {\r\n          text: item,\r\n        };\r\n      }\r\n      row[ci] = new Cell(item);\r\n      return row[ci];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getCellBoundOutSize(ri, ci) {\r\n    const { cols } = this;\r\n    const cell = this.getCell(ri, ci);\r\n    if (cell) {\r\n      const colWidth = cols.getWidth(ci);\r\n      const { contentWidth, fontAttr } = cell;\r\n      const { align } = fontAttr;\r\n      switch (align) {\r\n        case BaseFont.ALIGN.right:\r\n        case BaseFont.ALIGN.left:\r\n          return contentWidth;\r\n        case BaseFont.ALIGN.center:\r\n          return colWidth + ((contentWidth - colWidth) / 2);\r\n        default:\r\n          return 0;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  getData() {\r\n    return this.data;\r\n  }\r\n\r\n  setData(data = []) {\r\n    this.data = data;\r\n    return this;\r\n  }\r\n}\r\n\r\nexport {\r\n  Cells,\r\n};\r\n","import { BaseFont } from './BaseFont';\nimport { Utils } from '../../utils/Utils';\nimport { Crop } from '../Crop';\n\nclass VerticalFont extends BaseFont {\n\n  constructor({\n    text,\n    overflow,\n    rect,\n    dw,\n    attr,\n  }) {\n    super({\n      overflow,\n      text,\n      rect,\n      dw,\n      attr,\n    });\n    this.attr = Utils.mergeDeep({\n      lineHeight: 4,\n      spacing: 2,\n    }, this.attr);\n  }\n\n  drawLine(type, tx, ty, textWidth, align, verticalAlign) {\n    const { dw, attr } = this;\n    const { size } = attr;\n    const s = [0, 0];\n    const e = [0, 0];\n    if (type === 'strike') {\n      switch (align) {\n        case BaseFont.ALIGN.center:\n        case BaseFont.ALIGN.left:\n        case BaseFont.ALIGN.right:\n          s[0] = tx;\n          e[0] = tx + textWidth;\n          break;\n      }\n      switch (verticalAlign) {\n        case BaseFont.VERTICAL_ALIGN.center:\n        case BaseFont.VERTICAL_ALIGN.top:\n        case BaseFont.VERTICAL_ALIGN.bottom:\n          s[1] = ty + size / 2;\n          e[1] = ty + size / 2;\n          break;\n      }\n    }\n    if (type === 'underline') {\n      switch (align) {\n        case BaseFont.ALIGN.center:\n        case BaseFont.ALIGN.left:\n        case BaseFont.ALIGN.right:\n          s[0] = tx;\n          e[0] = tx + textWidth;\n          break;\n      }\n      switch (verticalAlign) {\n        case BaseFont.VERTICAL_ALIGN.center:\n        case BaseFont.VERTICAL_ALIGN.top:\n        case BaseFont.VERTICAL_ALIGN.bottom:\n          s[1] = ty + size;\n          e[1] = ty + size;\n          break;\n      }\n    }\n    dw.line(s, e);\n  }\n\n  draw() {\n    const { text } = this;\n    if (this.isBlank(text)) {\n      return 0;\n    }\n    const { dw, attr } = this;\n    const { textWrap } = attr;\n    dw.attr({\n      textAlign: BaseFont.ALIGN.left,\n      textBaseline: BaseFont.VERTICAL_ALIGN.top,\n      font: `${attr.italic ? 'italic' : ''} ${attr.bold ? 'bold' : ''} ${attr.size}px ${attr.name}`,\n      fillStyle: attr.color,\n      strokeStyle: attr.color,\n    });\n    switch (textWrap) {\n      case BaseFont.TEXT_WRAP.OVER_FLOW:\n        return this.overflowFont();\n      case BaseFont.TEXT_WRAP.TRUNCATE:\n        return this.truncateFont();\n      case BaseFont.TEXT_WRAP.WORD_WRAP:\n        return this.wrapTextFont();\n    }\n    return 0;\n  }\n\n  truncateFont() {\n    const {\n      text, dw, attr, rect,\n    } = this;\n    const {\n      underline, strikethrough, align, verticalAlign, padding, size, lineHeight, spacing,\n    } = attr;\n    // 计算文本折行\n    const breakArray = this.textBreak(text);\n    const textArray = [];\n    const { width, height } = rect;\n    const breakLen = breakArray.length;\n    let bi = 0;\n    let wOffset = 0;\n    let maxLen = 0;\n    while (bi < breakLen) {\n      const text = breakArray[bi];\n      const textLen = text.length;\n      let hOffset = 0;\n      let ii = 0;\n      while (ii < textLen) {\n        const char = text.charAt(ii);\n        const width = this.textWidth(char);\n        textArray.push({\n          len: width,\n          text: char,\n          tx: wOffset + (size / 2 - width / 2),\n          ty: hOffset,\n        });\n        hOffset += size + spacing;\n        ii += 1;\n      }\n      if (hOffset > 0) {\n        hOffset -= spacing;\n      }\n      if (hOffset > maxLen) {\n        maxLen = hOffset;\n      }\n      wOffset += size + lineHeight;\n      bi += 1;\n    }\n    if (wOffset > 0) {\n      wOffset -= lineHeight;\n    }\n    // 计算文本坐标\n    let bx = rect.x;\n    let by = rect.y;\n    let pw = 0;\n    let ph = 0;\n    switch (align) {\n      case BaseFont.ALIGN.center:\n        bx += width / 2 - wOffset / 2;\n        pw = 0;\n        break;\n      case BaseFont.ALIGN.right:\n        bx += width - wOffset - padding;\n        pw = padding;\n        break;\n      case BaseFont.ALIGN.left:\n        bx += padding;\n        pw = padding;\n        break;\n    }\n    switch (verticalAlign) {\n      case BaseFont.VERTICAL_ALIGN.center:\n        by += height / 2 - maxLen / 2;\n        ph = 0;\n        break;\n      case BaseFont.VERTICAL_ALIGN.bottom:\n        by += height - maxLen - padding;\n        ph = padding;\n        break;\n      case BaseFont.VERTICAL_ALIGN.top:\n        by += padding;\n        ph = padding;\n        break;\n    }\n    // 边界检查\n    const totalWidth = (textArray.length * (size + lineHeight)) - lineHeight;\n    const outbounds = maxLen + ph > height || totalWidth + pw > width;\n    if (outbounds) {\n      const crop = new Crop({\n        draw: dw,\n        rect,\n      });\n      crop.open();\n      const textLen = textArray.length;\n      let ti = 0;\n      while (ti < textLen) {\n        const item = textArray[ti];\n        item.tx += bx;\n        item.ty += by;\n        dw.fillText(item.text, item.tx, item.ty);\n        if (underline) {\n          this.drawLine('underline', item.tx, item.ty, item.len, align, verticalAlign);\n        }\n        if (strikethrough) {\n          this.drawLine('strike', item.tx, item.ty, item.len, align, verticalAlign);\n        }\n        ti += 1;\n      }\n      crop.close();\n    } else {\n      const textLen = textArray.length;\n      let ti = 0;\n      while (ti < textLen) {\n        const item = textArray[ti];\n        item.tx += bx;\n        item.ty += by;\n        dw.fillText(item.text, item.tx, item.ty);\n        if (underline) {\n          this.drawLine('underline', item.tx, item.ty, item.len, align, verticalAlign);\n        }\n        if (strikethrough) {\n          this.drawLine('strike', item.tx, item.ty, item.len, align, verticalAlign);\n        }\n        ti += 1;\n      }\n    }\n    return 0;\n  }\n\n  overflowFont() {\n    return this.truncateFont();\n  }\n\n  wrapTextFont() {\n    const {\n      text, dw, attr, rect,\n    } = this;\n    const {\n      underline, strikethrough, align, verticalAlign, padding, size, lineHeight, spacing,\n    } = attr;\n    // 计算文本折行\n    const breakArray = this.textBreak(text);\n    const textArray = [];\n    const { width, height } = rect;\n    const maxHeight = height - (padding * 2);\n    const breakLen = breakArray.length;\n    let bi = 0;\n    let wOffset = 0;\n    let maxLen = 0;\n    while (bi < breakLen) {\n      const text = breakArray[bi];\n      const textLen = text.length;\n      let hOffset = 0;\n      let ii = 0;\n      while (ii < textLen) {\n        const char = text.charAt(ii);\n        const width = this.textWidth(char);\n        const item = {\n          len: width,\n          text: char,\n          tx: wOffset + (size / 2 - width / 2),\n          ty: hOffset,\n        };\n        if (ii === 0) {\n          textArray.push(item);\n        } else {\n          textArray.push(item);\n          if (item.ty + size > maxHeight) {\n            if (hOffset > 0) {\n              hOffset -= spacing;\n            }\n            if (hOffset > maxLen) {\n              maxLen = hOffset;\n            }\n            hOffset = 0;\n            wOffset += size + lineHeight;\n            item.tx = wOffset;\n            item.ty = hOffset;\n          }\n        }\n        hOffset += size + spacing;\n        ii += 1;\n      }\n      if (hOffset > 0) {\n        hOffset -= spacing;\n      }\n      if (hOffset > maxLen) {\n        maxLen = hOffset;\n      }\n      wOffset += size + lineHeight;\n      bi += 1;\n    }\n    if (wOffset > 0) {\n      wOffset -= lineHeight;\n    }\n    // 计算文本坐标\n    let bx = rect.x;\n    let by = rect.y;\n    let pw = 0;\n    switch (align) {\n      case BaseFont.ALIGN.center:\n        bx += width / 2 - wOffset / 2;\n        pw = 0;\n        break;\n      case BaseFont.ALIGN.right:\n        bx += width - wOffset - padding;\n        pw = padding;\n        break;\n      case BaseFont.ALIGN.left:\n        bx += padding;\n        pw = padding;\n        break;\n    }\n    switch (verticalAlign) {\n      case BaseFont.VERTICAL_ALIGN.center:\n        by += height / 2 - maxLen / 2;\n        break;\n      case BaseFont.VERTICAL_ALIGN.bottom:\n        by += height - maxLen - padding;\n        break;\n      case BaseFont.VERTICAL_ALIGN.top:\n        by += padding;\n        break;\n    }\n    // 边界检查\n    const totalWidth = (textArray.length * (size + lineHeight)) - lineHeight;\n    const outbounds = totalWidth + pw > width;\n    if (outbounds) {\n      const crop = new Crop({\n        draw: dw,\n        rect,\n      });\n      crop.open();\n      const textLen = textArray.length;\n      let ti = 0;\n      while (ti < textLen) {\n        const item = textArray[ti];\n        item.tx += bx;\n        item.ty += by;\n        dw.fillText(item.text, item.tx, item.ty);\n        if (underline) {\n          this.drawLine('underline', item.tx, item.ty, item.len, align, verticalAlign);\n        }\n        if (strikethrough) {\n          this.drawLine('strike', item.tx, item.ty, item.len, align, verticalAlign);\n        }\n        ti += 1;\n      }\n      crop.close();\n    } else {\n      const textLen = textArray.length;\n      let ti = 0;\n      while (ti < textLen) {\n        const item = textArray[ti];\n        item.tx += bx;\n        item.ty += by;\n        dw.fillText(item.text, item.tx, item.ty);\n        if (underline) {\n          this.drawLine('underline', item.tx, item.ty, item.len, align, verticalAlign);\n        }\n        if (strikethrough) {\n          this.drawLine('strike', item.tx, item.ty, item.len, align, verticalAlign);\n        }\n        ti += 1;\n      }\n    }\n    return 0;\n  }\n\n}\n\nexport {\n  VerticalFont,\n};\n","import { XDraw } from './XDraw';\r\n\r\n/**\r\n * RTSinKit\r\n */\r\nclass RTSinKit {\r\n\r\n  /**\r\n   * 计算对边\r\n   * @see http://math001.com/trigonometric_function/\r\n   * @param tilt 斜边\r\n   * @param angle 角度\r\n   */\r\n  static inverse({ tilt, angle }) {\r\n    return Math.abs(tilt * Math.sin(XDraw.radian(angle)));\r\n  }\r\n\r\n  /**\r\n   * 计算斜边\r\n   * @see http://math001.com/trigonometric_function/\r\n   * @param inverse 对边\r\n   * @param angle 角度\r\n   */\r\n  static tilt({ inverse, angle }) {\r\n    return Math.abs(inverse / Math.sin(XDraw.radian(angle)));\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * RTCosKit\r\n */\r\nclass RTCosKit {\r\n\r\n  /**\r\n   * 计算邻边\r\n   * @see http://math001.com/trigonometric_function/\r\n   * @param tilt\r\n   * @param angle\r\n   */\r\n  static nearby({ tilt, angle }) {\r\n    return Math.abs(tilt * Math.cos(XDraw.radian((angle))));\r\n  }\r\n\r\n  /**\r\n   * 计算斜边\r\n   * @see http://math001.com/trigonometric_function/\r\n   * @param nearby 领边\r\n   * @param angle 角度\r\n   */\r\n  static tilt({ nearby, angle }) {\r\n    return Math.abs(nearby / Math.cos(XDraw.radian((angle))));\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RTSinKit, RTCosKit,\r\n};\r\n","import { Rect } from './Rect';\r\n\r\nconst ANGLE_ORIGIN = {\r\n  TOP_LEFT: 'top-left',\r\n  TOP_CENTER: 'top-center',\r\n  TOP_RIGHT: 'top-right',\r\n  MIDDLE_LEFT: 'middle-left',\r\n  MIDDLE_CENTER: 'middle-center',\r\n  MIDDLE_RIGHT: 'middle-right',\r\n  BOTTOM_LEFT: 'bottom-left',\r\n  BOTTOM_CENTER: 'bottom-center',\r\n  BOTTOM_RIGHT: 'bottom-right',\r\n};\r\n\r\nclass Angle {\r\n\r\n  constructor({\r\n    angle,\r\n    dw,\r\n    origin = ANGLE_ORIGIN.MIDDLE_CENTER,\r\n    rect = new Rect({ x: 0, y: 0, width: 0, height: 0 }),\r\n  }) {\r\n    this.dw = dw;\r\n    this.origin = origin;\r\n    this.rect = rect;\r\n    this.angle = angle;\r\n  }\r\n\r\n  rotate() {\r\n    const { origin, dw, rect, angle } = this;\r\n    const { x, y, width, height } = rect;\r\n    dw.save();\r\n    let tx = 0;\r\n    let ty = 0;\r\n    switch (origin) {\r\n      case ANGLE_ORIGIN.TOP_LEFT:\r\n        tx = x;\r\n        ty = y;\r\n        break;\r\n      case ANGLE_ORIGIN.TOP_CENTER:\r\n        tx = x + width / 2;\r\n        ty = y;\r\n        break;\r\n      case ANGLE_ORIGIN.TOP_RIGHT:\r\n        tx = x + width;\r\n        ty = y;\r\n        break;\r\n      case ANGLE_ORIGIN.MIDDLE_LEFT:\r\n        tx = x;\r\n        ty = y + height / 2;\r\n        break;\r\n      case ANGLE_ORIGIN.MIDDLE_CENTER:\r\n        tx = x + width / 2;\r\n        ty = y + height / 2;\r\n        break;\r\n      case ANGLE_ORIGIN.MIDDLE_RIGHT:\r\n        tx = x + width;\r\n        ty = y + height / 2;\r\n        break;\r\n      case ANGLE_ORIGIN.BOTTOM_LEFT:\r\n        tx = x;\r\n        ty = y + height;\r\n        break;\r\n      case ANGLE_ORIGIN.BOTTOM_CENTER:\r\n        tx = x + width / 2;\r\n        ty = y + height;\r\n        break;\r\n      case ANGLE_ORIGIN.BOTTOM_RIGHT:\r\n        tx = x + width;\r\n        ty = y + height;\r\n        break;\r\n      default: break;\r\n    }\r\n    const offsetX = dw.getOffsetX();\r\n    const offsetY = dw.getOffsetY();\r\n    dw.translate(tx + offsetX, ty + offsetY)\r\n      .rotate(angle)\r\n      .translate(-(tx + offsetX), -(ty + offsetY));\r\n    return this;\r\n  }\r\n\r\n  revert() {\r\n    const { dw } = this;\r\n    dw.restore();\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Angle,\r\n  ANGLE_ORIGIN,\r\n};\r\n","import { BaseFont } from './BaseFont';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { RTCosKit, RTSinKit } from '../RTFunction';\r\nimport { Angle } from '../Angle';\r\nimport { Rect } from '../Rect';\r\nimport { Crop } from '../Crop';\r\n\r\nclass AngleFont extends BaseFont {\r\n\r\n  constructor({\r\n    overflow,\r\n    text,\r\n    rect,\r\n    dw,\r\n    attr,\r\n  }) {\r\n    super({\r\n      overflow,\r\n      text,\r\n      rect,\r\n      dw,\r\n      attr,\r\n    });\r\n    this.attr = Utils.mergeDeep({\r\n      lineHeight: 4,\r\n    }, this.attr);\r\n\r\n  }\r\n\r\n  drawLine(type, tx, ty, textWidth) {\r\n    const { dw, attr } = this;\r\n    const { size } = attr;\r\n    const s = [0, 0];\r\n    const e = [0, 0];\r\n    if (type === 'strike') {\r\n      s[0] = tx;\r\n      e[0] = tx + textWidth;\r\n      s[1] = ty + size / 2;\r\n      e[1] = ty + size / 2;\r\n    }\r\n    if (type === 'underline') {\r\n      s[0] = tx;\r\n      e[0] = tx + textWidth;\r\n      s[1] = ty + size;\r\n      e[1] = ty + size;\r\n    }\r\n    dw.line(s, e);\r\n  }\r\n\r\n  draw() {\r\n    const { text } = this;\r\n    if (this.isBlank(text)) {\r\n      return 0;\r\n    }\r\n    const { dw, attr } = this;\r\n    const { textWrap, angle } = attr;\r\n    dw.attr({\r\n      textAlign: BaseFont.ALIGN.left,\r\n      textBaseline: BaseFont.VERTICAL_ALIGN.top,\r\n      font: `${attr.italic ? 'italic' : ''} ${attr.bold ? 'bold' : ''} ${attr.size}px ${attr.name}`,\r\n      fillStyle: attr.color,\r\n      strokeStyle: attr.color,\r\n    });\r\n    if (angle === 0) {\r\n      dw.attr({\r\n        textAlign: attr.align,\r\n        textBaseline: attr.verticalAlign,\r\n      });\r\n    } else {\r\n      dw.attr({\r\n        textAlign: BaseFont.ALIGN.left,\r\n        textBaseline: BaseFont.VERTICAL_ALIGN.top,\r\n      });\r\n    }\r\n    switch (textWrap) {\r\n      case BaseFont.TEXT_WRAP.OVER_FLOW:\r\n        return this.overflowFont();\r\n      case BaseFont.TEXT_WRAP.TRUNCATE:\r\n        return this.truncateFont();\r\n      case BaseFont.TEXT_WRAP.WORD_WRAP:\r\n        return this.wrapTextFont();\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  truncateFont() {\r\n    this.overflowFont();\r\n  }\r\n\r\n  overflowFont() {\r\n    const {\r\n      text, dw, attr, rect,\r\n    } = this;\r\n    let { overflow } = this;\r\n    if (!overflow) {\r\n      overflow = rect;\r\n    }\r\n    const {\r\n      underline, strikethrough, align, verticalAlign, size, padding, lineHeight,\r\n    } = attr;\r\n    let { angle } = attr;\r\n    if (angle > 90) {\r\n      angle = 90;\r\n    }\r\n    if (angle < -90) {\r\n      angle = -90;\r\n    }\r\n    const { width, height } = rect;\r\n    if (angle > 0) {\r\n      // 折行文本计算\r\n      const breakArray = this.textBreak(text);\r\n      const textArray = [];\r\n      const breakLen = breakArray.length;\r\n      let bi = 0;\r\n      let maxLen = 0;\r\n      while (bi < breakLen) {\r\n        const text = breakArray[bi];\r\n        const textWidth = this.textWidth(text);\r\n        if (textWidth > maxLen) {\r\n          maxLen = textWidth;\r\n        }\r\n        textArray.push({\r\n          text,\r\n          len: textWidth,\r\n          tx: 0,\r\n          ty: 0,\r\n        });\r\n        bi += 1;\r\n      }\r\n      const textArrayLen = textArray.length;\r\n      // 多行文本\r\n      if (textArrayLen > 1) {\r\n        // 文本间隙\r\n        const spacing = RTSinKit.tilt({\r\n          inverse: size + lineHeight,\r\n          angle,\r\n        });\r\n        // 文本宽高\r\n        const textWidth = Math.max(RTCosKit.nearby({\r\n          tilt: maxLen,\r\n          angle,\r\n        }), size);\r\n        const textHeight = RTSinKit.inverse({\r\n          tilt: maxLen,\r\n          angle,\r\n        });\r\n        // 总宽度\r\n        const totalWidth = textWidth + ((textArrayLen - 1) * spacing);\r\n        // x坐标偏移量\r\n        let wOffset = 0;\r\n        let ii = 0;\r\n        while (ii < textArrayLen) {\r\n          const item = textArray[ii];\r\n          item.tx = wOffset;\r\n          wOffset += spacing;\r\n          ii += 1;\r\n        }\r\n        // 文本坐标\r\n        let bx = rect.x;\r\n        let by = rect.y;\r\n        let pw = 0;\r\n        let ph = 0;\r\n        switch (align) {\r\n          case BaseFont.ALIGN.center:\r\n            bx += width / 2 - totalWidth / 2;\r\n            pw = 0;\r\n            break;\r\n          case BaseFont.ALIGN.left:\r\n            bx += padding;\r\n            pw = padding;\r\n            break;\r\n          case BaseFont.ALIGN.right:\r\n            bx += width - totalWidth - padding;\r\n            pw = padding;\r\n            break;\r\n        }\r\n        switch (verticalAlign) {\r\n          case BaseFont.VERTICAL_ALIGN.center:\r\n            by += height / 2 - textHeight / 2;\r\n            ph = 0;\r\n            break;\r\n          case BaseFont.VERTICAL_ALIGN.top:\r\n            by += padding;\r\n            ph = padding;\r\n            break;\r\n          case BaseFont.VERTICAL_ALIGN.bottom:\r\n            by += height - textHeight - padding;\r\n            ph = padding;\r\n            break;\r\n        }\r\n        // 边界检查\r\n        const outbounds = totalWidth + pw > overflow.width\r\n          || textHeight + ph > overflow.height;\r\n        if (outbounds) {\r\n          // 裁剪宽度\r\n          const crop = new Crop({\r\n            draw: dw,\r\n            rect: overflow,\r\n          });\r\n          crop.open();\r\n          // 渲染文本\r\n          let jj = 0;\r\n          while (jj < textArrayLen) {\r\n            // 计算文本的 绘制位置 旋转中心\r\n            const item = textArray[jj];\r\n            const rx = item.tx + bx;\r\n            const ry = item.ty + by;\r\n            let ax = 0;\r\n            let ay = 0;\r\n            switch (align) {\r\n              case BaseFont.ALIGN.center: {\r\n                ax = rx + textWidth / 2;\r\n                ay = ry + textHeight / 2;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.left: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + tw;\r\n                ay += ry + textHeight - th;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.right: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + textWidth - tw;\r\n                ay += ry + th;\r\n                break;\r\n              }\r\n            }\r\n            const tx = ax - item.len / 2;\r\n            const ty = ay - size / 2;\r\n            // 旋转并且 绘制文本\r\n            const dwAngle = new Angle({\r\n              dw,\r\n              angle,\r\n              rect: new Rect({\r\n                x: tx,\r\n                y: ty,\r\n                width: item.len,\r\n                height: size,\r\n              }),\r\n            });\r\n            dwAngle.rotate();\r\n            dw.fillText(item.text, tx, ty);\r\n            if (underline) {\r\n              this.drawLine('underline', tx, ty, item.len);\r\n            }\r\n            if (strikethrough) {\r\n              this.drawLine('strike', tx, ty, item.len);\r\n            }\r\n            dwAngle.revert();\r\n            jj += 1;\r\n          }\r\n          crop.close();\r\n        } else {\r\n          // 渲染文本\r\n          let jj = 0;\r\n          while (jj < textArrayLen) {\r\n            // 计算文本的 绘制位置 旋转中心\r\n            const item = textArray[jj];\r\n            const rx = item.tx + bx;\r\n            const ry = item.ty + by;\r\n            let ax = 0;\r\n            let ay = 0;\r\n            switch (align) {\r\n              case BaseFont.ALIGN.center: {\r\n                ax = rx + textWidth / 2;\r\n                ay = ry + textHeight / 2;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.left: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + tw;\r\n                ay += ry + textHeight - th;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.right: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + textWidth - tw;\r\n                ay += ry + th;\r\n                break;\r\n              }\r\n            }\r\n            const tx = ax - item.len / 2;\r\n            const ty = ay - size / 2;\r\n            // 旋转并且 绘制文本\r\n            const dwAngle = new Angle({\r\n              dw,\r\n              angle,\r\n              rect: new Rect({\r\n                x: tx,\r\n                y: ty,\r\n                width: item.len,\r\n                height: size,\r\n              }),\r\n            });\r\n            dwAngle.rotate();\r\n            dw.fillText(item.text, tx, ty);\r\n            if (underline) {\r\n              this.drawLine('underline', tx, ty, item.len);\r\n            }\r\n            if (strikethrough) {\r\n              this.drawLine('strike', tx, ty, item.len);\r\n            }\r\n            dwAngle.revert();\r\n            jj += 1;\r\n          }\r\n        }\r\n        // 文本占据的宽度(padding)\r\n        let haveWidth;\r\n        switch (align) {\r\n          case BaseFont.ALIGN.center:\r\n            haveWidth = totalWidth;\r\n            break;\r\n          case BaseFont.ALIGN.right:\r\n          case BaseFont.ALIGN.left:\r\n            haveWidth = totalWidth + padding;\r\n            break;\r\n        }\r\n        return haveWidth;\r\n      }\r\n      // 文本大小\r\n      const textWidth = this.textWidth(text);\r\n      const trigonometricWidth = Math.max(RTCosKit.nearby({\r\n        tilt: textWidth,\r\n        angle,\r\n      }), size);\r\n      const trigonometricHeight = RTSinKit.inverse({\r\n        tilt: textWidth,\r\n        angle,\r\n      });\r\n      // 文本坐标\r\n      let rtx = rect.x;\r\n      let rty = rect.y;\r\n      let pw = 0;\r\n      let ph = 0;\r\n      switch (align) {\r\n        case BaseFont.ALIGN.center:\r\n          rtx += width / 2 - trigonometricWidth / 2;\r\n          pw = 0;\r\n          break;\r\n        case BaseFont.ALIGN.left:\r\n          rtx += padding;\r\n          pw = padding;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n          rtx += width - trigonometricWidth - padding;\r\n          pw = padding;\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          rty += height / 2 - trigonometricHeight / 2;\r\n          ph = 0;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          rty += padding;\r\n          ph = padding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          rty += height - trigonometricHeight - padding;\r\n          ph = padding;\r\n          break;\r\n      }\r\n      // 边界检查\r\n      const outbounds = trigonometricWidth + pw > overflow.width\r\n        || trigonometricHeight + ph > overflow.height;\r\n      if (outbounds) {\r\n        // 裁剪宽度\r\n        const crop = new Crop({\r\n          draw: dw,\r\n          rect: overflow,\r\n        });\r\n        crop.open();\r\n        // 旋转并且绘制文本\r\n        const dwAngle = new Angle({\r\n          dw,\r\n          angle,\r\n          rect: new Rect({\r\n            x: rtx,\r\n            y: rty,\r\n            width: trigonometricWidth,\r\n            height: trigonometricHeight,\r\n          }),\r\n        });\r\n        dwAngle.rotate();\r\n        const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n        const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n        dw.fillText(text, tx, ty);\r\n        if (underline) {\r\n          this.drawLine('underline', tx, ty, textWidth);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawLine('strike', tx, ty, textWidth);\r\n        }\r\n        dwAngle.revert();\r\n        crop.close();\r\n      } else {\r\n        // 旋转并且绘制文本\r\n        const dwAngle = new Angle({\r\n          dw,\r\n          angle,\r\n          rect: new Rect({\r\n            x: rtx,\r\n            y: rty,\r\n            width: trigonometricWidth,\r\n            height: trigonometricHeight,\r\n          }),\r\n        });\r\n        dwAngle.rotate();\r\n        const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n        const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n        dw.fillText(text, tx, ty);\r\n        if (underline) {\r\n          this.drawLine('underline', tx, ty, textWidth);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawLine('strike', tx, ty, textWidth);\r\n        }\r\n        dwAngle.revert();\r\n      }\r\n      // 计算文本占据的宽度(padding)\r\n      let haveWidth = 0;\r\n      switch (align) {\r\n        case BaseFont.ALIGN.center:\r\n          haveWidth = trigonometricWidth;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n        case BaseFont.ALIGN.left:\r\n          haveWidth = trigonometricWidth + padding;\r\n          break;\r\n      }\r\n      return haveWidth;\r\n    }\r\n    if (angle < 0) {\r\n      // 折行文本计算\r\n      const breakArray = this.textBreak(text);\r\n      const textArray = [];\r\n      const breakLen = breakArray.length;\r\n      let bi = 0;\r\n      let maxLen = 0;\r\n      while (bi < breakLen) {\r\n        const text = breakArray[bi];\r\n        const textWidth = this.textWidth(text);\r\n        if (textWidth > maxLen) {\r\n          maxLen = textWidth;\r\n        }\r\n        textArray.push({\r\n          text,\r\n          len: textWidth,\r\n          tx: 0,\r\n          ty: 0,\r\n        });\r\n        bi += 1;\r\n      }\r\n      const textArrayLen = textArray.length;\r\n      // 多行文本\r\n      if (textArrayLen > 1) {\r\n        // 计算文本块之间的间隙\r\n        const spacing = RTSinKit.tilt({\r\n          inverse: size + lineHeight,\r\n          angle,\r\n        });\r\n        // 计算每个文本块宽度和高度\r\n        const textWidth = Math.max(RTCosKit.nearby({\r\n          tilt: maxLen,\r\n          angle,\r\n        }), size);\r\n        const textHeight = RTSinKit.inverse({\r\n          tilt: maxLen,\r\n          angle,\r\n        });\r\n        // 文本总宽度\r\n        const totalWidth = textWidth + ((textArrayLen - 1) * spacing);\r\n        // 计算x坐标偏移量\r\n        let wOffset = 0;\r\n        let ii = textArrayLen - 1;\r\n        while (ii >= 0) {\r\n          const item = textArray[ii];\r\n          item.tx = wOffset;\r\n          wOffset += spacing;\r\n          ii -= 1;\r\n        }\r\n        // 文本坐标\r\n        let bx = rect.x;\r\n        let by = rect.y;\r\n        let pw = 0;\r\n        let ph = 0;\r\n        switch (align) {\r\n          case BaseFont.ALIGN.center:\r\n            bx += width / 2 - totalWidth / 2;\r\n            pw = 0;\r\n            break;\r\n          case BaseFont.ALIGN.left:\r\n            bx += padding;\r\n            pw = padding;\r\n            break;\r\n          case BaseFont.ALIGN.right:\r\n            bx += width - totalWidth - padding;\r\n            pw = padding;\r\n            break;\r\n        }\r\n        switch (verticalAlign) {\r\n          case BaseFont.VERTICAL_ALIGN.center:\r\n            by += height / 2 - textHeight / 2;\r\n            ph = 0;\r\n            break;\r\n          case BaseFont.VERTICAL_ALIGN.top:\r\n            by += padding;\r\n            ph = padding;\r\n            break;\r\n          case BaseFont.VERTICAL_ALIGN.bottom:\r\n            by += height - textHeight - padding;\r\n            ph = padding;\r\n            break;\r\n        }\r\n        // 边界检查\r\n        const outbounds = totalWidth + pw > overflow.width\r\n          || textHeight + ph > overflow.height;\r\n        if (outbounds) {\r\n          // 裁剪宽度\r\n          const crop = new Crop({\r\n            draw: dw,\r\n            rect: overflow,\r\n          });\r\n          crop.open();\r\n          // 渲染文本\r\n          let jj = 0;\r\n          while (jj < textArrayLen) {\r\n            // 计算文本的绘制位置旋转中心\r\n            const item = textArray[jj];\r\n            const rx = item.tx + bx;\r\n            const ry = item.ty + by;\r\n            let ax = 0;\r\n            let ay = 0;\r\n            switch (align) {\r\n              case BaseFont.ALIGN.center: {\r\n                ax = rx + textWidth / 2;\r\n                ay = ry + textHeight / 2;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.left: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + tw;\r\n                ay += ry + th;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.right: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + textWidth - tw;\r\n                ay += ry + textHeight - th;\r\n                break;\r\n              }\r\n            }\r\n            const tx = ax - item.len / 2;\r\n            const ty = ay - size / 2;\r\n            // 旋转并且绘制文本\r\n            const dwAngle = new Angle({\r\n              dw,\r\n              angle,\r\n              rect: new Rect({\r\n                x: tx,\r\n                y: ty,\r\n                width: item.len,\r\n                height: size,\r\n              }),\r\n            });\r\n            dwAngle.rotate();\r\n            dw.fillText(item.text, tx, ty);\r\n            if (underline) {\r\n              this.drawLine('underline', tx, ty, item.len);\r\n            }\r\n            if (strikethrough) {\r\n              this.drawLine('strike', tx, ty, item.len);\r\n            }\r\n            dwAngle.revert();\r\n            jj += 1;\r\n          }\r\n          crop.close();\r\n        } else {\r\n          // 渲染文本\r\n          let jj = 0;\r\n          while (jj < textArrayLen) {\r\n            // 计算文本的绘制位置旋转中心\r\n            const item = textArray[jj];\r\n            const rx = item.tx + bx;\r\n            const ry = item.ty + by;\r\n            let ax = 0;\r\n            let ay = 0;\r\n            switch (align) {\r\n              case BaseFont.ALIGN.center: {\r\n                ax = rx + textWidth / 2;\r\n                ay = ry + textHeight / 2;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.left: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + tw;\r\n                ay += ry + th;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.right: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + textWidth - tw;\r\n                ay += ry + textHeight - th;\r\n                break;\r\n              }\r\n            }\r\n            const tx = ax - item.len / 2;\r\n            const ty = ay - size / 2;\r\n            // 旋转并且绘制文本\r\n            const dwAngle = new Angle({\r\n              dw,\r\n              angle,\r\n              rect: new Rect({\r\n                x: tx,\r\n                y: ty,\r\n                width: item.len,\r\n                height: size,\r\n              }),\r\n            });\r\n            dwAngle.rotate();\r\n            dw.fillText(item.text, tx, ty);\r\n            if (underline) {\r\n              this.drawLine('underline', tx, ty, item.len);\r\n            }\r\n            if (strikethrough) {\r\n              this.drawLine('strike', tx, ty, item.len);\r\n            }\r\n            dwAngle.revert();\r\n            jj += 1;\r\n          }\r\n        }\r\n        // 计算文本占据的宽度(padding)\r\n        let haveWidth = 0;\r\n        switch (align) {\r\n          case BaseFont.ALIGN.center:\r\n            haveWidth = totalWidth;\r\n            break;\r\n          case BaseFont.ALIGN.right:\r\n          case BaseFont.ALIGN.left:\r\n            haveWidth = totalWidth + padding;\r\n            break;\r\n        }\r\n        return haveWidth;\r\n      }\r\n      // 计算文本块大小\r\n      const textWidth = this.textWidth(text);\r\n      const trigonometricWidth = Math.max(RTCosKit.nearby({\r\n        tilt: textWidth,\r\n        angle,\r\n      }), size);\r\n      const trigonometricHeight = RTSinKit.inverse({\r\n        tilt: textWidth,\r\n        angle,\r\n      });\r\n      // 计算文本绘制位置旋转中心\r\n      let rtx = rect.x;\r\n      let rty = rect.y;\r\n      let pw = 0;\r\n      let ph = 0;\r\n      switch (align) {\r\n        case BaseFont.ALIGN.center:\r\n          rtx += width / 2 - trigonometricWidth / 2;\r\n          pw = 0;\r\n          break;\r\n        case BaseFont.ALIGN.left:\r\n          rtx += padding;\r\n          pw = padding;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n          rtx += width - trigonometricWidth - padding;\r\n          pw = padding;\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          rty += height / 2 - trigonometricHeight / 2;\r\n          ph = 0;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          rty += padding;\r\n          ph = padding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          rty += height - trigonometricHeight - padding;\r\n          ph = padding;\r\n          break;\r\n      }\r\n      // 边界检查\r\n      const outbounds = trigonometricWidth + pw > overflow.width\r\n        || trigonometricHeight + ph > overflow.height;\r\n      if (outbounds) {\r\n        // 裁剪宽度\r\n        const crop = new Crop({\r\n          draw: dw,\r\n          rect: overflow,\r\n        });\r\n        crop.open();\r\n        // 旋转并且绘制文本\r\n        const dwAngle = new Angle({\r\n          dw,\r\n          angle,\r\n          rect: new Rect({\r\n            x: rtx,\r\n            y: rty,\r\n            width: trigonometricWidth,\r\n            height: trigonometricHeight,\r\n          }),\r\n        });\r\n        dwAngle.rotate();\r\n        const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n        const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n        dw.fillText(text, tx, ty);\r\n        if (underline) {\r\n          this.drawLine('underline', tx, ty, textWidth);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawLine('strike', tx, ty, textWidth);\r\n        }\r\n        dwAngle.revert();\r\n        crop.close();\r\n      } else {\r\n        // 旋转并且绘制文本\r\n        const dwAngle = new Angle({\r\n          dw,\r\n          angle,\r\n          rect: new Rect({\r\n            x: rtx,\r\n            y: rty,\r\n            width: trigonometricWidth,\r\n            height: trigonometricHeight,\r\n          }),\r\n        });\r\n        dwAngle.rotate();\r\n        const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n        const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n        dw.fillText(text, tx, ty);\r\n        if (underline) {\r\n          this.drawLine('underline', tx, ty, textWidth);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawLine('strike', tx, ty, textWidth);\r\n        }\r\n        dwAngle.revert();\r\n      }\r\n      // 计算文本占据的宽度(padding)\r\n      let haveWidth;\r\n      switch (align) {\r\n        case BaseFont.ALIGN.center:\r\n          haveWidth = trigonometricWidth;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n        case BaseFont.ALIGN.left:\r\n          haveWidth = trigonometricWidth + padding * 2;\r\n          break;\r\n      }\r\n      return haveWidth;\r\n    }\r\n    if (angle === 0) {\r\n      // 计算文本折行\r\n      const breakArray = this.textBreak(text);\r\n      const textArray = [];\r\n      const { width, height } = rect;\r\n      const breakLen = breakArray.length;\r\n      let bi = 0;\r\n      let hOffset = 0;\r\n      let maxLen = 0;\r\n      while (bi < breakLen) {\r\n        if (bi > 0) {\r\n          hOffset += size + lineHeight;\r\n        }\r\n        const text = breakArray[bi];\r\n        const item = {\r\n          tx: 0,\r\n          ty: hOffset,\r\n          text,\r\n          len: this.textWidth(text),\r\n        };\r\n        textArray.push(item);\r\n        if (item.len > maxLen) {\r\n          maxLen = item.len;\r\n        }\r\n        bi += 1;\r\n      }\r\n      if (hOffset > 0) {\r\n        hOffset -= lineHeight;\r\n      }\r\n      // 计算文本坐标\r\n      let bx = rect.x;\r\n      let by = rect.y;\r\n      let pw = 0;\r\n      let ph = 0;\r\n      switch (align) {\r\n        case BaseFont.ALIGN.center:\r\n          bx += width / 2;\r\n          pw = 0;\r\n          break;\r\n        case BaseFont.ALIGN.left:\r\n          bx += padding;\r\n          pw = padding;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n          bx += width - padding;\r\n          pw = padding;\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          by += height / 2 - hOffset / 2;\r\n          ph = 0;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          by += padding;\r\n          ph = padding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          by += height - hOffset - padding;\r\n          ph = padding;\r\n          break;\r\n      }\r\n      // 边界检查\r\n      const totalHeight = (textArray.length * (size + lineHeight)) - lineHeight;\r\n      const outbounds = maxLen + pw > overflow.width || totalHeight + ph > overflow.height;\r\n      let pointOffset = false;\r\n      if (align === BaseFont.ALIGN.center) {\r\n        const diff = maxLen / 2 - width / 2;\r\n        if (diff > 0) {\r\n          if (overflow.x > rect.x - diff) {\r\n            pointOffset = true;\r\n          }\r\n        }\r\n      }\r\n      if (outbounds || pointOffset) {\r\n        // 裁剪宽度\r\n        const crop = new Crop({\r\n          draw: dw,\r\n          rect: overflow,\r\n        });\r\n        crop.open();\r\n        // 文本绘制\r\n        const textLen = textArray.length;\r\n        let ti = 0;\r\n        while (ti < textLen) {\r\n          const item = textArray[ti];\r\n          item.tx += bx;\r\n          item.ty += by;\r\n          dw.fillText(item.text, item.tx, item.ty);\r\n          if (underline) {\r\n            this.drawLine('underline', item.tx, item.ty, item.len);\r\n          }\r\n          if (strikethrough) {\r\n            this.drawLine('strike', item.tx, item.ty, item.len);\r\n          }\r\n          ti += 1;\r\n        }\r\n        crop.close();\r\n      } else {\r\n        // 文本绘制\r\n        const textLen = textArray.length;\r\n        let ti = 0;\r\n        while (ti < textLen) {\r\n          const item = textArray[ti];\r\n          item.tx += bx;\r\n          item.ty += by;\r\n          dw.fillText(item.text, item.tx, item.ty);\r\n          if (underline) {\r\n            this.drawLine('underline', item.tx, item.ty, item.len);\r\n          }\r\n          if (strikethrough) {\r\n            this.drawLine('strike', item.tx, item.ty, item.len);\r\n          }\r\n          ti += 1;\r\n        }\r\n      }\r\n      // 计算文本占据的宽度(padding)\r\n      let haveWidth = 0;\r\n      switch (align) {\r\n        case BaseFont.ALIGN.right:\r\n        case BaseFont.ALIGN.left:\r\n          haveWidth = padding + maxLen;\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          haveWidth = maxLen;\r\n          break;\r\n      }\r\n      return haveWidth;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  wrapTextFont() {\r\n    const {\r\n      text, dw, attr, rect,\r\n    } = this;\r\n    let { overflow } = this;\r\n    if (!overflow) {\r\n      overflow = rect;\r\n    }\r\n    const {\r\n      underline, strikethrough, align, verticalAlign, size, padding, lineHeight,\r\n    } = attr;\r\n    let { angle } = attr;\r\n    if (angle > 90) {\r\n      angle = 90;\r\n    }\r\n    if (angle < -90) {\r\n      angle = -90;\r\n    }\r\n    const { width, height } = rect;\r\n    if (angle > 0) {\r\n      const textHypotenuseWidth = RTSinKit.tilt({\r\n        inverse: height - (padding * 2),\r\n        angle,\r\n      });\r\n      // 折行文本计算\r\n      const breakArray = this.textBreak(text);\r\n      const textArray = [];\r\n      const breakLen = breakArray.length;\r\n      let bi = 0;\r\n      let maxLen = 0;\r\n      while (bi < breakLen) {\r\n        const text = breakArray[bi];\r\n        const textLen = text.length;\r\n        const line = {\r\n          len: 0,\r\n          start: 0,\r\n        };\r\n        let ii = 0;\r\n        while (ii < textLen) {\r\n          const textWidth = line.len + this.textWidth(text.charAt(ii));\r\n          if (textWidth > textHypotenuseWidth) {\r\n            if (line.len === 0) {\r\n              textArray.push({\r\n                text: text.substring(ii, ii + 1),\r\n                len: textWidth,\r\n                tx: 0,\r\n                ty: 0,\r\n              });\r\n              if (textWidth > maxLen) {\r\n                maxLen = textWidth;\r\n              }\r\n              ii += 1;\r\n            } else {\r\n              textArray.push({\r\n                text: text.substring(line.start, ii),\r\n                len: line.len,\r\n                tx: 0,\r\n                ty: 0,\r\n              });\r\n              if (line.len > maxLen) {\r\n                maxLen = line.len;\r\n              }\r\n            }\r\n            line.len = 0;\r\n            line.start = ii;\r\n          } else {\r\n            line.len = textWidth;\r\n            ii += 1;\r\n          }\r\n        }\r\n        if (line.len > 0) {\r\n          textArray.push({\r\n            text: text.substring(line.start),\r\n            len: line.len,\r\n            tx: 0,\r\n            ty: 0,\r\n          });\r\n        }\r\n        if (line.len > maxLen) {\r\n          maxLen = line.len;\r\n        }\r\n        bi += 1;\r\n      }\r\n      const textArrayLen = textArray.length;\r\n      // 多行文本\r\n      if (textArrayLen > 1) {\r\n        // 文本间隙\r\n        const spacing = RTSinKit.tilt({\r\n          inverse: size + lineHeight,\r\n          angle,\r\n        });\r\n        // 文本宽高\r\n        const textWidth = Math.max(RTCosKit.nearby({\r\n          tilt: maxLen,\r\n          angle,\r\n        }), size);\r\n        const textHeight = RTSinKit.inverse({\r\n          tilt: maxLen,\r\n          angle,\r\n        });\r\n        // 总宽度\r\n        const totalWidth = textWidth + ((textArrayLen - 1) * spacing);\r\n        // x坐标偏移量\r\n        let wOffset = 0;\r\n        let ii = 0;\r\n        while (ii < textArrayLen) {\r\n          const item = textArray[ii];\r\n          item.tx = wOffset;\r\n          wOffset += spacing;\r\n          ii += 1;\r\n        }\r\n        // 文本坐标\r\n        let bx = rect.x;\r\n        let by = rect.y;\r\n        let pw = 0;\r\n        let ph = 0;\r\n        switch (align) {\r\n          case BaseFont.ALIGN.center:\r\n            bx += width / 2 - totalWidth / 2;\r\n            pw = 0;\r\n            break;\r\n          case BaseFont.ALIGN.left:\r\n            bx += padding;\r\n            pw = padding;\r\n            break;\r\n          case BaseFont.ALIGN.right:\r\n            bx += width - totalWidth - padding;\r\n            pw = padding;\r\n            break;\r\n        }\r\n        switch (verticalAlign) {\r\n          case BaseFont.VERTICAL_ALIGN.center:\r\n            by += height / 2 - textHeight / 2;\r\n            ph = 0;\r\n            break;\r\n          case BaseFont.VERTICAL_ALIGN.top:\r\n            by += padding;\r\n            ph = padding;\r\n            break;\r\n          case BaseFont.VERTICAL_ALIGN.bottom:\r\n            by += height - textHeight - padding;\r\n            ph = padding;\r\n            break;\r\n        }\r\n        // 边界检查\r\n        const outbounds = totalWidth + pw > overflow.width\r\n          || textHeight + ph > overflow.height;\r\n        if (outbounds) {\r\n          // 裁剪宽度\r\n          const crop = new Crop({\r\n            draw: dw,\r\n            rect: overflow,\r\n          });\r\n          crop.open();\r\n          // 渲染文本\r\n          let jj = 0;\r\n          while (jj < textArrayLen) {\r\n            // 计算文本的 绘制位置 旋转中心\r\n            const item = textArray[jj];\r\n            const rx = item.tx + bx;\r\n            const ry = item.ty + by;\r\n            let ax = 0;\r\n            let ay = 0;\r\n            switch (align) {\r\n              case BaseFont.ALIGN.center: {\r\n                ax = rx + textWidth / 2;\r\n                ay = ry + textHeight / 2;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.left: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + tw;\r\n                ay += ry + textHeight - th;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.right: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + textWidth - tw;\r\n                ay += ry + th;\r\n                break;\r\n              }\r\n            }\r\n            const tx = ax - item.len / 2;\r\n            const ty = ay - size / 2;\r\n            // 旋转并且 绘制文本\r\n            const dwAngle = new Angle({\r\n              dw,\r\n              angle,\r\n              rect: new Rect({\r\n                x: tx,\r\n                y: ty,\r\n                width: item.len,\r\n                height: size,\r\n              }),\r\n            });\r\n            dwAngle.rotate();\r\n            dw.fillText(item.text, tx, ty);\r\n            if (underline) {\r\n              this.drawLine('underline', tx, ty, item.len);\r\n            }\r\n            if (strikethrough) {\r\n              this.drawLine('strike', tx, ty, item.len);\r\n            }\r\n            dwAngle.revert();\r\n            jj += 1;\r\n          }\r\n          crop.close();\r\n        } else {\r\n          // 渲染文本\r\n          let jj = 0;\r\n          while (jj < textArrayLen) {\r\n            // 计算文本的 绘制位置 旋转中心\r\n            const item = textArray[jj];\r\n            const rx = item.tx + bx;\r\n            const ry = item.ty + by;\r\n            let ax = 0;\r\n            let ay = 0;\r\n            switch (align) {\r\n              case BaseFont.ALIGN.center: {\r\n                ax = rx + textWidth / 2;\r\n                ay = ry + textHeight / 2;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.left: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + tw;\r\n                ay += ry + textHeight - th;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.right: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + textWidth - tw;\r\n                ay += ry + th;\r\n                break;\r\n              }\r\n            }\r\n            const tx = ax - item.len / 2;\r\n            const ty = ay - size / 2;\r\n            // 旋转并且 绘制文本\r\n            const dwAngle = new Angle({\r\n              dw,\r\n              angle,\r\n              rect: new Rect({\r\n                x: tx,\r\n                y: ty,\r\n                width: item.len,\r\n                height: size,\r\n              }),\r\n            });\r\n            dwAngle.rotate();\r\n            dw.fillText(item.text, tx, ty);\r\n            if (underline) {\r\n              this.drawLine('underline', tx, ty, item.len);\r\n            }\r\n            if (strikethrough) {\r\n              this.drawLine('strike', tx, ty, item.len);\r\n            }\r\n            dwAngle.revert();\r\n            jj += 1;\r\n          }\r\n        }\r\n        // 文本占据的宽度(padding)\r\n        let haveWidth;\r\n        switch (align) {\r\n          case BaseFont.ALIGN.center:\r\n            haveWidth = totalWidth;\r\n            break;\r\n          case BaseFont.ALIGN.right:\r\n          case BaseFont.ALIGN.left:\r\n            haveWidth = totalWidth + padding;\r\n            break;\r\n        }\r\n        return haveWidth;\r\n      }\r\n      // 文本大小\r\n      const textWidth = this.textWidth(text);\r\n      const trigonometricWidth = Math.max(RTCosKit.nearby({\r\n        tilt: textWidth,\r\n        angle,\r\n      }), size);\r\n      const trigonometricHeight = RTSinKit.inverse({\r\n        tilt: textWidth,\r\n        angle,\r\n      });\r\n      // 文本坐标\r\n      let rtx = rect.x;\r\n      let rty = rect.y;\r\n      let pw = 0;\r\n      let ph = 0;\r\n      switch (align) {\r\n        case BaseFont.ALIGN.center:\r\n          rtx += width / 2 - trigonometricWidth / 2;\r\n          pw = 0;\r\n          break;\r\n        case BaseFont.ALIGN.left:\r\n          rtx += padding;\r\n          pw = padding;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n          rtx += width - trigonometricWidth - padding;\r\n          pw = padding;\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          rty += height / 2 - trigonometricHeight / 2;\r\n          ph = 0;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          rty += padding;\r\n          ph = padding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          rty += height - trigonometricHeight - padding;\r\n          ph = padding;\r\n          break;\r\n      }\r\n      // 边界检查\r\n      const outbounds = trigonometricWidth + pw > overflow.width\r\n        || trigonometricHeight + ph > overflow.height;\r\n      if (outbounds) {\r\n        // 裁剪宽度\r\n        const crop = new Crop({\r\n          draw: dw,\r\n          rect: overflow,\r\n        });\r\n        crop.open();\r\n        // 旋转并且绘制文本\r\n        const dwAngle = new Angle({\r\n          dw,\r\n          angle,\r\n          rect: new Rect({\r\n            x: rtx,\r\n            y: rty,\r\n            width: trigonometricWidth,\r\n            height: trigonometricHeight,\r\n          }),\r\n        });\r\n        dwAngle.rotate();\r\n        const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n        const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n        dw.fillText(text, tx, ty);\r\n        if (underline) {\r\n          this.drawLine('underline', tx, ty, textWidth);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawLine('strike', tx, ty, textWidth);\r\n        }\r\n        dwAngle.revert();\r\n        crop.close();\r\n      } else {\r\n        // 旋转并且绘制文本\r\n        const dwAngle = new Angle({\r\n          dw,\r\n          angle,\r\n          rect: new Rect({\r\n            x: rtx,\r\n            y: rty,\r\n            width: trigonometricWidth,\r\n            height: trigonometricHeight,\r\n          }),\r\n        });\r\n        dwAngle.rotate();\r\n        const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n        const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n        dw.fillText(text, tx, ty);\r\n        if (underline) {\r\n          this.drawLine('underline', tx, ty, textWidth);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawLine('strike', tx, ty, textWidth);\r\n        }\r\n        dwAngle.revert();\r\n      }\r\n      // 计算文本占据的宽度(padding)\r\n      let haveWidth = 0;\r\n      switch (align) {\r\n        case BaseFont.ALIGN.center:\r\n          haveWidth = trigonometricWidth;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n        case BaseFont.ALIGN.left:\r\n          haveWidth = trigonometricWidth + padding;\r\n          break;\r\n      }\r\n      return haveWidth;\r\n    }\r\n    if (angle < 0) {\r\n      const textHypotenuseWidth = RTSinKit.tilt({\r\n        inverse: height - (padding * 2),\r\n        angle,\r\n      });\r\n      // 折行文本计算\r\n      const breakArray = this.textBreak(text);\r\n      const textArray = [];\r\n      const breakLen = breakArray.length;\r\n      let bi = 0;\r\n      let maxLen = 0;\r\n      while (bi < breakLen) {\r\n        const text = breakArray[bi];\r\n        const textLen = text.length;\r\n        const line = {\r\n          len: 0,\r\n          start: 0,\r\n        };\r\n        let ii = 0;\r\n        while (ii < textLen) {\r\n          const textWidth = line.len + this.textWidth(text.charAt(ii));\r\n          if (textWidth > textHypotenuseWidth) {\r\n            if (line.len === 0) {\r\n              textArray.push({\r\n                text: text.substring(ii, ii + 1),\r\n                len: textWidth,\r\n                tx: 0,\r\n                ty: 0,\r\n              });\r\n              if (textWidth > maxLen) {\r\n                maxLen = textWidth;\r\n              }\r\n              ii += 1;\r\n            } else {\r\n              textArray.push({\r\n                text: text.substring(line.start, ii),\r\n                len: line.len,\r\n                tx: 0,\r\n                ty: 0,\r\n              });\r\n              if (line.len > maxLen) {\r\n                maxLen = line.len;\r\n              }\r\n            }\r\n            line.len = 0;\r\n            line.start = ii;\r\n          } else {\r\n            line.len = textWidth;\r\n            ii += 1;\r\n          }\r\n        }\r\n        if (line.len > 0) {\r\n          textArray.push({\r\n            text: text.substring(line.start),\r\n            len: line.len,\r\n            tx: 0,\r\n            ty: 0,\r\n          });\r\n        }\r\n        if (line.len > maxLen) {\r\n          maxLen = line.len;\r\n        }\r\n        bi += 1;\r\n      }\r\n      const textArrayLen = textArray.length;\r\n      // 多行文本\r\n      if (textArrayLen > 1) {\r\n        // 计算文本块之间的间隙\r\n        const spacing = RTSinKit.tilt({\r\n          inverse: size + lineHeight,\r\n          angle,\r\n        });\r\n        // 计算每个文本块宽度和高度\r\n        const textWidth = Math.max(RTCosKit.nearby({\r\n          tilt: maxLen,\r\n          angle,\r\n        }), size);\r\n        const textHeight = RTSinKit.inverse({\r\n          tilt: maxLen,\r\n          angle,\r\n        });\r\n        // 文本总宽度\r\n        const totalWidth = textWidth + ((textArrayLen - 1) * spacing);\r\n        // 计算x坐标偏移量\r\n        let wOffset = 0;\r\n        let ii = textArrayLen - 1;\r\n        while (ii >= 0) {\r\n          const item = textArray[ii];\r\n          item.tx = wOffset;\r\n          wOffset += spacing;\r\n          ii -= 1;\r\n        }\r\n        // 文本坐标\r\n        let bx = rect.x;\r\n        let by = rect.y;\r\n        let pw = 0;\r\n        let ph = 0;\r\n        switch (align) {\r\n          case BaseFont.ALIGN.center:\r\n            bx += width / 2 - totalWidth / 2;\r\n            pw = 0;\r\n            break;\r\n          case BaseFont.ALIGN.left:\r\n            bx += padding;\r\n            pw = padding;\r\n            break;\r\n          case BaseFont.ALIGN.right:\r\n            bx += width - totalWidth - padding;\r\n            pw = padding;\r\n            break;\r\n        }\r\n        switch (verticalAlign) {\r\n          case BaseFont.VERTICAL_ALIGN.center:\r\n            by += height / 2 - textHeight / 2;\r\n            ph = 0;\r\n            break;\r\n          case BaseFont.VERTICAL_ALIGN.top:\r\n            by += padding;\r\n            ph = padding;\r\n            break;\r\n          case BaseFont.VERTICAL_ALIGN.bottom:\r\n            by += height - textHeight - padding;\r\n            ph = padding;\r\n            break;\r\n        }\r\n        // 边界检查\r\n        const outbounds = totalWidth + pw > overflow.width\r\n          || textHeight + ph > overflow.height;\r\n        if (outbounds) {\r\n          // 裁剪宽度\r\n          const crop = new Crop({\r\n            draw: dw,\r\n            rect: overflow,\r\n          });\r\n          crop.open();\r\n          // 渲染文本\r\n          let jj = 0;\r\n          while (jj < textArrayLen) {\r\n            // 计算文本的绘制位置旋转中心\r\n            const item = textArray[jj];\r\n            const rx = item.tx + bx;\r\n            const ry = item.ty + by;\r\n            let ax = 0;\r\n            let ay = 0;\r\n            switch (align) {\r\n              case BaseFont.ALIGN.center: {\r\n                ax = rx + textWidth / 2;\r\n                ay = ry + textHeight / 2;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.left: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + tw;\r\n                ay += ry + th;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.right: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + textWidth - tw;\r\n                ay += ry + textHeight - th;\r\n                break;\r\n              }\r\n            }\r\n            const tx = ax - item.len / 2;\r\n            const ty = ay - size / 2;\r\n            // 旋转并且绘制文本\r\n            const dwAngle = new Angle({\r\n              dw,\r\n              angle,\r\n              rect: new Rect({\r\n                x: tx,\r\n                y: ty,\r\n                width: item.len,\r\n                height: size,\r\n              }),\r\n            });\r\n            dwAngle.rotate();\r\n            dw.fillText(item.text, tx, ty);\r\n            if (underline) {\r\n              this.drawLine('underline', tx, ty, item.len);\r\n            }\r\n            if (strikethrough) {\r\n              this.drawLine('strike', tx, ty, item.len);\r\n            }\r\n            dwAngle.revert();\r\n            jj += 1;\r\n          }\r\n          crop.close();\r\n        } else {\r\n          // 渲染文本\r\n          let jj = 0;\r\n          while (jj < textArrayLen) {\r\n            // 计算文本的绘制位置旋转中心\r\n            const item = textArray[jj];\r\n            const rx = item.tx + bx;\r\n            const ry = item.ty + by;\r\n            let ax = 0;\r\n            let ay = 0;\r\n            switch (align) {\r\n              case BaseFont.ALIGN.center: {\r\n                ax = rx + textWidth / 2;\r\n                ay = ry + textHeight / 2;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.left: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + tw;\r\n                ay += ry + th;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.right: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + textWidth - tw;\r\n                ay += ry + textHeight - th;\r\n                break;\r\n              }\r\n            }\r\n            const tx = ax - item.len / 2;\r\n            const ty = ay - size / 2;\r\n            // 旋转并且绘制文本\r\n            const dwAngle = new Angle({\r\n              dw,\r\n              angle,\r\n              rect: new Rect({\r\n                x: tx,\r\n                y: ty,\r\n                width: item.len,\r\n                height: size,\r\n              }),\r\n            });\r\n            dwAngle.rotate();\r\n            dw.fillText(item.text, tx, ty);\r\n            if (underline) {\r\n              this.drawLine('underline', tx, ty, item.len);\r\n            }\r\n            if (strikethrough) {\r\n              this.drawLine('strike', tx, ty, item.len);\r\n            }\r\n            dwAngle.revert();\r\n            jj += 1;\r\n          }\r\n        }\r\n        // 计算文本占据的宽度(padding)\r\n        let haveWidth = 0;\r\n        switch (align) {\r\n          case BaseFont.ALIGN.center:\r\n            haveWidth = totalWidth;\r\n            break;\r\n          case BaseFont.ALIGN.right:\r\n          case BaseFont.ALIGN.left:\r\n            haveWidth = totalWidth + padding;\r\n            break;\r\n        }\r\n        return haveWidth;\r\n      }\r\n      // 计算文本块大小\r\n      const textWidth = this.textWidth(text);\r\n      const trigonometricWidth = Math.max(RTCosKit.nearby({\r\n        tilt: textWidth,\r\n        angle,\r\n      }), size);\r\n      const trigonometricHeight = RTSinKit.inverse({\r\n        tilt: textWidth,\r\n        angle,\r\n      });\r\n      // 计算文本绘制位置旋转中心\r\n      let rtx = rect.x;\r\n      let rty = rect.y;\r\n      let pw = 0;\r\n      let ph = 0;\r\n      switch (align) {\r\n        case BaseFont.ALIGN.center:\r\n          rtx += width / 2 - trigonometricWidth / 2;\r\n          pw = 0;\r\n          break;\r\n        case BaseFont.ALIGN.left:\r\n          rtx += padding;\r\n          pw = padding;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n          rtx += width - trigonometricWidth - padding;\r\n          pw = padding;\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          rty += height / 2 - trigonometricHeight / 2;\r\n          ph = 0;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          rty += padding;\r\n          ph = padding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          rty += height - trigonometricHeight - padding;\r\n          ph = padding;\r\n          break;\r\n      }\r\n      // 边界检查\r\n      const outbounds = trigonometricWidth + pw > overflow.width\r\n        || trigonometricHeight + ph > overflow.height;\r\n      if (outbounds) {\r\n        // 裁剪宽度\r\n        const crop = new Crop({\r\n          draw: dw,\r\n          rect: overflow,\r\n        });\r\n        crop.open();\r\n        // 旋转并且绘制文本\r\n        const dwAngle = new Angle({\r\n          dw,\r\n          angle,\r\n          rect: new Rect({\r\n            x: rtx,\r\n            y: rty,\r\n            width: trigonometricWidth,\r\n            height: trigonometricHeight,\r\n          }),\r\n        });\r\n        dwAngle.rotate();\r\n        const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n        const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n        dw.fillText(text, tx, ty);\r\n        if (underline) {\r\n          this.drawLine('underline', tx, ty, textWidth);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawLine('strike', tx, ty, textWidth);\r\n        }\r\n        dwAngle.revert();\r\n        crop.close();\r\n      } else {\r\n        // 旋转并且绘制文本\r\n        const dwAngle = new Angle({\r\n          dw,\r\n          angle,\r\n          rect: new Rect({\r\n            x: rtx,\r\n            y: rty,\r\n            width: trigonometricWidth,\r\n            height: trigonometricHeight,\r\n          }),\r\n        });\r\n        dwAngle.rotate();\r\n        const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n        const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n        dw.fillText(text, tx, ty);\r\n        if (underline) {\r\n          this.drawLine('underline', tx, ty, textWidth);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawLine('strike', tx, ty, textWidth);\r\n        }\r\n        dwAngle.revert();\r\n      }\r\n      // 计算文本占据的宽度(padding)\r\n      let haveWidth;\r\n      switch (align) {\r\n        case BaseFont.ALIGN.center:\r\n          haveWidth = trigonometricWidth;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n        case BaseFont.ALIGN.left:\r\n          haveWidth = trigonometricWidth + padding * 2;\r\n          break;\r\n      }\r\n      return haveWidth;\r\n    }\r\n    if (angle === 0) {\r\n      // 计算文本折行\r\n      const breakArray = this.textBreak(text);\r\n      const textArray = [];\r\n      const { width, height } = rect;\r\n      const maxWidth = width - (padding * 2);\r\n      const breakLen = breakArray.length;\r\n      let bi = 0;\r\n      let hOffset = 0;\r\n      while (bi < breakLen) {\r\n        if (bi > 0) {\r\n          hOffset += size + lineHeight;\r\n        }\r\n        const text = breakArray[bi];\r\n        const textLen = text.length;\r\n        let ii = 0;\r\n        const line = {\r\n          len: 0,\r\n          start: 0,\r\n        };\r\n        while (ii < textLen) {\r\n          const textWidth = line.len + this.textWidth(text.charAt(ii));\r\n          if (textWidth > maxWidth) {\r\n            if (line.len === 0) {\r\n              textArray.push({\r\n                text: text.substring(ii, ii + 1),\r\n                len: textWidth,\r\n                tx: 0,\r\n                ty: hOffset,\r\n              });\r\n              ii += 1;\r\n            } else {\r\n              textArray.push({\r\n                text: text.substring(line.start, ii),\r\n                len: line.len,\r\n                tx: 0,\r\n                ty: hOffset,\r\n              });\r\n            }\r\n            hOffset += size + lineHeight;\r\n            line.len = 0;\r\n            line.start = ii;\r\n          } else {\r\n            line.len = textWidth;\r\n            ii += 1;\r\n          }\r\n        }\r\n        if (line.len > 0) {\r\n          textArray.push({\r\n            text: text.substring(line.start),\r\n            len: line.len,\r\n            tx: 0,\r\n            ty: hOffset,\r\n          });\r\n        }\r\n        bi += 1;\r\n      }\r\n      if (hOffset > 0) {\r\n        hOffset -= lineHeight;\r\n      }\r\n      // 计算文本坐标\r\n      let bx = rect.x;\r\n      let by = rect.y;\r\n      let ph = 0;\r\n      switch (align) {\r\n        case BaseFont.ALIGN.left:\r\n          bx += padding;\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          bx += width / 2;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n          bx += width - padding;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          by += height / 2 - hOffset / 2;\r\n          ph = 0;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          by += padding;\r\n          ph = padding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          by += height - hOffset - padding;\r\n          ph = padding;\r\n          break;\r\n      }\r\n      // 边界检查\r\n      const totalHeight = (textArray.length * (size + lineHeight)) - lineHeight;\r\n      const outbounds = totalHeight + ph > height;\r\n      if (outbounds) {\r\n        // 裁剪宽度\r\n        const crop = new Crop({\r\n          draw: dw,\r\n          rect,\r\n        });\r\n        crop.open();\r\n        const textLen = textArray.length;\r\n        let ti = 0;\r\n        while (ti < textLen) {\r\n          const item = textArray[ti];\r\n          item.tx += bx;\r\n          item.ty += by;\r\n          dw.fillText(item.text, item.tx, item.ty);\r\n          if (underline) {\r\n            this.drawLine('underline', item.tx, item.ty, item.len);\r\n          }\r\n          if (strikethrough) {\r\n            this.drawLine('strike', item.tx, item.ty, item.len);\r\n          }\r\n          ti += 1;\r\n        }\r\n        crop.close();\r\n      } else {\r\n        for (let i = 0, len = textArray.length; i < len; i += 1) {\r\n          const item = textArray[i];\r\n          item.tx += bx;\r\n          item.ty += by;\r\n          dw.fillText(item.text, item.tx, item.ty);\r\n          if (underline) {\r\n            this.drawLine('underline', item.tx, item.ty, item.len);\r\n          }\r\n          if (strikethrough) {\r\n            this.drawLine('strike', item.tx, item.ty, item.len);\r\n          }\r\n        }\r\n      }\r\n      return 0;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleFont,\r\n};\r\n","import { BaseFont } from './BaseFont';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { Crop } from '../Crop';\r\n\r\nclass HorizontalFont extends BaseFont {\r\n\r\n  constructor({\r\n    overflow,\r\n    text,\r\n    rect,\r\n    dw,\r\n    attr,\r\n  }) {\r\n    super({\r\n      overflow,\r\n      text,\r\n      rect,\r\n      dw,\r\n      attr,\r\n    });\r\n    this.attr = Utils.mergeDeep({\r\n      lineHeight: 4,\r\n    }, this.attr);\r\n  }\r\n\r\n  drawLine(type, tx, ty, textWidth) {\r\n    const { dw, attr } = this;\r\n    const { size, verticalAlign, align } = attr;\r\n    const s = [0, 0];\r\n    const e = [0, 0];\r\n    if (type === 'strike') {\r\n      switch (align) {\r\n        case BaseFont.ALIGN.right:\r\n          s[0] = tx - textWidth;\r\n          e[0] = tx;\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          s[0] = tx - textWidth / 2;\r\n          e[0] = tx + textWidth / 2;\r\n          break;\r\n        case BaseFont.ALIGN.left:\r\n          s[0] = tx;\r\n          e[0] = tx + textWidth;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          s[1] = ty + size / 2;\r\n          e[1] = ty + size / 2;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          s[1] = ty;\r\n          e[1] = ty;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          s[1] = ty - size / 2;\r\n          e[1] = ty - size / 2;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    if (type === 'underline') {\r\n      switch (align) {\r\n        case BaseFont.ALIGN.right:\r\n          s[0] = tx - textWidth;\r\n          e[0] = tx;\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          s[0] = tx - textWidth / 2;\r\n          e[0] = tx + textWidth / 2;\r\n          break;\r\n        case BaseFont.ALIGN.left:\r\n          s[0] = tx;\r\n          e[0] = tx + textWidth;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          s[1] = ty + size;\r\n          e[1] = ty + size;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          s[1] = ty + size / 2;\r\n          e[1] = ty + size / 2;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          s[1] = ty;\r\n          e[1] = ty;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    dw.line(s, e);\r\n  }\r\n\r\n  draw() {\r\n    const { text } = this;\r\n    if (this.isBlank(text)) {\r\n      return 0;\r\n    }\r\n    const { dw, attr } = this;\r\n    const { textWrap } = attr;\r\n    dw.attr({\r\n      textAlign: attr.align,\r\n      textBaseline: attr.verticalAlign,\r\n      font: `${attr.italic ? 'italic' : ''} ${attr.bold ? 'bold' : ''} ${attr.size}px ${attr.name}`,\r\n      fillStyle: attr.color,\r\n      strokeStyle: attr.color,\r\n    });\r\n    switch (textWrap) {\r\n      case BaseFont.TEXT_WRAP.OVER_FLOW:\r\n        return this.overflowFont();\r\n      case BaseFont.TEXT_WRAP.TRUNCATE:\r\n        return this.truncateFont();\r\n      case BaseFont.TEXT_WRAP.WORD_WRAP:\r\n        return this.wrapTextFont();\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  truncateFont() {\r\n    const {\r\n      text, dw, attr, rect,\r\n    } = this;\r\n    const {\r\n      underline, strikethrough, align, verticalAlign, padding, size, lineHeight,\r\n    } = attr;\r\n    // 计算文本折行\r\n    const breakArray = this.textBreak(text);\r\n    const textArray = [];\r\n    const { width, height } = rect;\r\n    const breakLen = breakArray.length;\r\n    let bi = 0;\r\n    let hOffset = 0;\r\n    let maxLen = 0;\r\n    while (bi < breakLen) {\r\n      if (bi > 0) {\r\n        hOffset += size + lineHeight;\r\n      }\r\n      const text = breakArray[bi];\r\n      const item = {\r\n        tx: 0,\r\n        ty: hOffset,\r\n        text,\r\n        len: this.textWidth(text),\r\n      };\r\n      textArray.push(item);\r\n      if (item.len > maxLen) {\r\n        maxLen = item.len;\r\n      }\r\n      bi += 1;\r\n    }\r\n    if (hOffset > 0) {\r\n      hOffset -= lineHeight;\r\n    }\r\n    // 计算文本坐标\r\n    let bx = rect.x;\r\n    let by = rect.y;\r\n    let pw = 0;\r\n    let ph = 0;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.center:\r\n        bx += width / 2;\r\n        pw = 0;\r\n        break;\r\n      case BaseFont.ALIGN.left:\r\n        bx += padding;\r\n        pw = padding;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        bx += width - padding;\r\n        pw = padding;\r\n        break;\r\n    }\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        by += height / 2 - hOffset / 2;\r\n        ph = 0;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        by += padding;\r\n        ph = padding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        by += height - hOffset - padding;\r\n        ph = padding;\r\n        break;\r\n    }\r\n    // 边界检查\r\n    const totalHeight = (textArray.length * (size + lineHeight)) - lineHeight;\r\n    const outbounds = maxLen + pw > width || totalHeight + ph > height;\r\n    if (outbounds) {\r\n      // 裁剪宽度\r\n      const crop = new Crop({\r\n        draw: dw,\r\n        rect,\r\n      });\r\n      crop.open();\r\n      // 文本绘制\r\n      const textLen = textArray.length;\r\n      let ti = 0;\r\n      while (ti < textLen) {\r\n        const item = textArray[ti];\r\n        item.tx += bx;\r\n        item.ty += by;\r\n        dw.fillText(item.text, item.tx, item.ty);\r\n        if (underline) {\r\n          this.drawLine('underline', item.tx, item.ty, item.len);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawLine('strike', item.tx, item.ty, item.len);\r\n        }\r\n        ti += 1;\r\n      }\r\n      crop.close();\r\n    } else {\r\n      // 文本绘制\r\n      const textLen = textArray.length;\r\n      let ti = 0;\r\n      while (ti < textLen) {\r\n        const item = textArray[ti];\r\n        item.tx += bx;\r\n        item.ty += by;\r\n        dw.fillText(item.text, item.tx, item.ty);\r\n        if (underline) {\r\n          this.drawLine('underline', item.tx, item.ty, item.len);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawLine('strike', item.tx, item.ty, item.len);\r\n        }\r\n        ti += 1;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  overflowFont() {\r\n    const {\r\n      text, dw, attr, rect,\r\n    } = this;\r\n    let { overflow } = this;\r\n    if (!overflow) {\r\n      overflow = rect;\r\n    }\r\n    const {\r\n      underline, strikethrough, align, verticalAlign, padding, size, lineHeight,\r\n    } = attr;\r\n    // 计算文本折行\r\n    const breakArray = this.textBreak(text);\r\n    const textArray = [];\r\n    const { width, height } = rect;\r\n    const breakLen = breakArray.length;\r\n    let bi = 0;\r\n    let hOffset = 0;\r\n    let maxLen = 0;\r\n    while (bi < breakLen) {\r\n      if (bi > 0) {\r\n        hOffset += size + lineHeight;\r\n      }\r\n      const text = breakArray[bi];\r\n      const item = {\r\n        tx: 0,\r\n        ty: hOffset,\r\n        text,\r\n        len: this.textWidth(text),\r\n      };\r\n      textArray.push(item);\r\n      if (item.len > maxLen) {\r\n        maxLen = item.len;\r\n      }\r\n      bi += 1;\r\n    }\r\n    if (hOffset > 0) {\r\n      hOffset -= lineHeight;\r\n    }\r\n    // 计算文本坐标\r\n    let bx = rect.x;\r\n    let by = rect.y;\r\n    let pw = 0;\r\n    let ph = 0;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.center:\r\n        bx += width / 2;\r\n        pw = 0;\r\n        break;\r\n      case BaseFont.ALIGN.left:\r\n        bx += padding;\r\n        pw = padding;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        bx += width - padding;\r\n        pw = padding;\r\n        break;\r\n    }\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        by += height / 2 - hOffset / 2;\r\n        ph = 0;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        by += padding;\r\n        ph = padding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        by += height - hOffset - padding;\r\n        ph = padding;\r\n        break;\r\n    }\r\n    // 边界检查\r\n    const totalHeight = (textArray.length * (size + lineHeight)) - lineHeight;\r\n    const outbounds = maxLen + pw > overflow.width || totalHeight + ph > overflow.height;\r\n    let pointOffset = false;\r\n    if (align === BaseFont.ALIGN.center) {\r\n      const diff = maxLen / 2 - width / 2;\r\n      if (diff > 0) {\r\n        if (overflow.x > rect.x - diff) {\r\n          pointOffset = true;\r\n        }\r\n      }\r\n    }\r\n    if (outbounds || pointOffset) {\r\n      // 裁剪宽度\r\n      const crop = new Crop({\r\n        draw: dw,\r\n        rect: overflow,\r\n      });\r\n      crop.open();\r\n      // 文本绘制\r\n      const textLen = textArray.length;\r\n      let ti = 0;\r\n      while (ti < textLen) {\r\n        const item = textArray[ti];\r\n        item.tx += bx;\r\n        item.ty += by;\r\n        dw.fillText(item.text, item.tx, item.ty);\r\n        if (underline) {\r\n          this.drawLine('underline', item.tx, item.ty, item.len);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawLine('strike', item.tx, item.ty, item.len);\r\n        }\r\n        ti += 1;\r\n      }\r\n      crop.close();\r\n    } else {\r\n      // 文本绘制\r\n      const textLen = textArray.length;\r\n      let ti = 0;\r\n      while (ti < textLen) {\r\n        const item = textArray[ti];\r\n        item.tx += bx;\r\n        item.ty += by;\r\n        dw.fillText(item.text, item.tx, item.ty);\r\n        if (underline) {\r\n          this.drawLine('underline', item.tx, item.ty, item.len);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawLine('strike', item.tx, item.ty, item.len);\r\n        }\r\n        ti += 1;\r\n      }\r\n    }\r\n    // 计算文本占据的宽度(padding)\r\n    let haveWidth = 0;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.right:\r\n      case BaseFont.ALIGN.left:\r\n        haveWidth = padding + maxLen;\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        haveWidth = maxLen;\r\n        break;\r\n    }\r\n    return haveWidth;\r\n  }\r\n\r\n  wrapTextFont() {\r\n    const {\r\n      text, dw, attr, rect,\r\n    } = this;\r\n    const {\r\n      underline, strikethrough, align, verticalAlign, padding, size, lineHeight,\r\n    } = attr;\r\n    // 计算文本折行\r\n    const breakArray = this.textBreak(text);\r\n    const textArray = [];\r\n    const { width, height } = rect;\r\n    const maxWidth = width - (padding * 2);\r\n    const breakLen = breakArray.length;\r\n    let bi = 0;\r\n    let hOffset = 0;\r\n    while (bi < breakLen) {\r\n      if (bi > 0) {\r\n        hOffset += size + lineHeight;\r\n      }\r\n      const text = breakArray[bi];\r\n      const textLen = text.length;\r\n      let ii = 0;\r\n      const line = {\r\n        len: 0,\r\n        start: 0,\r\n      };\r\n      while (ii < textLen) {\r\n        const textWidth = line.len + this.textWidth(text.charAt(ii));\r\n        if (textWidth > maxWidth) {\r\n          if (line.len === 0) {\r\n            textArray.push({\r\n              text: text.substring(ii, ii + 1),\r\n              len: textWidth,\r\n              tx: 0,\r\n              ty: hOffset,\r\n            });\r\n            ii += 1;\r\n          } else {\r\n            textArray.push({\r\n              text: text.substring(line.start, ii),\r\n              len: line.len,\r\n              tx: 0,\r\n              ty: hOffset,\r\n            });\r\n          }\r\n          hOffset += size + lineHeight;\r\n          line.len = 0;\r\n          line.start = ii;\r\n        } else {\r\n          line.len = textWidth;\r\n          ii += 1;\r\n        }\r\n      }\r\n      if (line.len > 0) {\r\n        textArray.push({\r\n          text: text.substring(line.start),\r\n          len: line.len,\r\n          tx: 0,\r\n          ty: hOffset,\r\n        });\r\n      }\r\n      bi += 1;\r\n    }\r\n    if (hOffset > 0) {\r\n      hOffset -= lineHeight;\r\n    }\r\n    // 计算文本坐标\r\n    let bx = rect.x;\r\n    let by = rect.y;\r\n    let ph = 0;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left:\r\n        bx += padding;\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        bx += width / 2;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        bx += width - padding;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        by += height / 2 - hOffset / 2;\r\n        ph = 0;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        by += padding;\r\n        ph = padding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        by += height - hOffset - padding;\r\n        ph = padding;\r\n        break;\r\n    }\r\n    // 边界检查\r\n    const totalHeight = (textArray.length * (size + lineHeight)) - lineHeight;\r\n    const outbounds = totalHeight + ph > height;\r\n    if (outbounds) {\r\n      // 裁剪宽度\r\n      const crop = new Crop({\r\n        draw: dw,\r\n        rect,\r\n      });\r\n      crop.open();\r\n      const textLen = textArray.length;\r\n      let ti = 0;\r\n      while (ti < textLen) {\r\n        const item = textArray[ti];\r\n        item.tx += bx;\r\n        item.ty += by;\r\n        dw.fillText(item.text, item.tx, item.ty);\r\n        if (underline) {\r\n          this.drawLine('underline', item.tx, item.ty, item.len);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawLine('strike', item.tx, item.ty, item.len);\r\n        }\r\n        ti += 1;\r\n      }\r\n      crop.close();\r\n    } else {\r\n      for (let i = 0, len = textArray.length; i < len; i += 1) {\r\n        const item = textArray[i];\r\n        item.tx += bx;\r\n        item.ty += by;\r\n        dw.fillText(item.text, item.tx, item.ty);\r\n        if (underline) {\r\n          this.drawLine('underline', item.tx, item.ty, item.len);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawLine('strike', item.tx, item.ty, item.len);\r\n        }\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  HorizontalFont,\r\n};\r\n","import { Utils } from '../../utils/Utils';\r\nimport { VerticalFont } from './VerticalFont';\r\nimport { AngleFont } from './AngleFont';\r\nimport { HorizontalFont } from './HorizontalFont';\r\nimport { BaseFont } from './BaseFont';\r\n\r\nclass XFont {\r\n\r\n  constructor({\r\n    overflow, text, dw, rect, attr,\r\n  }) {\r\n    this.attr = Utils.mergeDeep({}, {\r\n      verticalAlign: BaseFont.VERTICAL_ALIGN.center,\r\n      direction: BaseFont.TEXT_DIRECTION.HORIZONTAL,\r\n      name: 'Arial',\r\n      size: 14,\r\n      color: '#000000',\r\n      underline: false,\r\n      strikethrough: false,\r\n      bold: false,\r\n      italic: false,\r\n      textWrap: false,\r\n      align: BaseFont.ALIGN.left,\r\n      angle: 0,\r\n      padding: 8,\r\n    }, attr);\r\n    this.font = null;\r\n    switch (attr.direction) {\r\n      case BaseFont.TEXT_DIRECTION.HORIZONTAL:\r\n        this.font = new HorizontalFont({\r\n          text, rect, dw, overflow, attr: this.attr,\r\n        });\r\n        break;\r\n      case BaseFont.TEXT_DIRECTION.ANGLE:\r\n        this.font = new AngleFont({\r\n          text, rect, dw, overflow, attr: this.attr,\r\n        });\r\n        break;\r\n      case BaseFont.TEXT_DIRECTION.VERTICAL:\r\n        this.font = new VerticalFont({\r\n          text, rect, dw, overflow, attr: this.attr,\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  setTextWrap(textWrap) {\r\n    this.font.setTextWrap(textWrap);\r\n  }\r\n\r\n  setSize(size) {\r\n    this.font.setSize(size);\r\n  }\r\n\r\n  setPadding(padding) {\r\n    this.font.setPadding(padding);\r\n  }\r\n\r\n  draw() {\r\n    return this.font.draw();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XFont,\r\n};\r\n","import { ScaleAdapter } from './Scale';\r\nimport { XDraw } from '../../../canvas/XDraw';\r\nimport { XFont } from '../../../canvas/font/XFont';\r\n\r\nclass TextBuilder {\r\n\r\n  constructor({\r\n    scaleAdapter,\r\n  }) {\r\n    this.scaleAdapter = scaleAdapter;\r\n    this.text = null;\r\n    this.rect = null;\r\n    this.attr = null;\r\n    this.dw = null;\r\n    this.overflow = null;\r\n  }\r\n\r\n  setDraw(dw) {\r\n    this.dw = dw;\r\n  }\r\n\r\n  setText(text) {\r\n    this.text = text;\r\n  }\r\n\r\n  setRect(rect) {\r\n    this.rect = rect;\r\n  }\r\n\r\n  setAttr(attr) {\r\n    this.attr = attr;\r\n  }\r\n\r\n  setOverFlow(overflow) {\r\n    this.overflow = overflow;\r\n  }\r\n\r\n  build() {\r\n    const {\r\n      text, rect, attr, overflow, dw, scaleAdapter,\r\n    } = this;\r\n    const font = new XFont({\r\n      dw, text, rect, attr, overflow,\r\n    });\r\n    const size = XDraw.rpx(scaleAdapter.goto(attr.size));\r\n    const padding = XDraw.rpx(scaleAdapter.goto(attr.padding));\r\n    font.setSize(size);\r\n    font.setPadding(padding);\r\n    return font;\r\n  }\r\n\r\n}\r\n\r\nclass Text {\r\n\r\n  constructor({\r\n    scaleAdapter = new ScaleAdapter(),\r\n  }) {\r\n    this.scaleAdapter = scaleAdapter;\r\n  }\r\n\r\n  getBuilder() {\r\n    const {\r\n      scaleAdapter,\r\n    } = this;\r\n    return new TextBuilder({\r\n      scaleAdapter,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Text,\r\n};\r\n","import { Utils } from '../../../utils/Utils';\r\nimport { Rect } from '../../../canvas/Rect';\r\nimport { BaseFont } from '../../../canvas/font/BaseFont';\r\n\r\nclass BaseCellsHelper {\r\n\r\n  constructor({\r\n    cells, merges, rows, cols, xTableAreaView,\r\n  }) {\r\n    this.xTableAreaView = xTableAreaView;\r\n    this.cells = cells;\r\n    this.merges = merges;\r\n    this.rows = rows;\r\n    this.cols = cols;\r\n  }\r\n\r\n  getCellOverFlow(ri, ci, rect, cell) {\r\n    const { xTableAreaView } = this;\r\n    const { fontAttr } = cell;\r\n    const {\r\n      direction, textWrap, angle,\r\n    } = fontAttr;\r\n    const {\r\n      x, y, height,\r\n    } = rect;\r\n    if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n      if (angle === 0) {\r\n        const max = this.getCellTextMaxWidth(ri, ci);\r\n        return new Rect({\r\n          x: x + max.offset, y, width: max.width, height,\r\n        });\r\n      }\r\n      const scrollView = xTableAreaView.getScrollView();\r\n      return new Rect({\r\n        x: 0, y, width: scrollView.w, height,\r\n      });\r\n    }\r\n    if (textWrap === BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n      const max = this.getCellTextMaxWidth(ri, ci);\r\n      return new Rect({\r\n        x: x + max.offset, y, width: max.width, height,\r\n      });\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getCellTextMaxWidth(ri, ci) {\r\n    const { cells, cols, merges } = this;\r\n    const cell = cells.getCell(ri, ci);\r\n    const { fontAttr } = cell;\r\n    const { align } = fontAttr;\r\n    let width = 0;\r\n    let offset = 0;\r\n    if (align === BaseFont.ALIGN.left) {\r\n      // 计算当前单元格右边\r\n      // 空白的单元格的总宽度\r\n      for (let i = ci, { len } = cols; i <= len; i += 1) {\r\n        const cell = cells.getCell(ri, i);\r\n        const merge = merges.getFirstIncludes(ri, i);\r\n        if (i === ci) {\r\n          width += cols.getWidth(i);\r\n        } else if ((Utils.isUnDef(cell) || Utils.isBlank(cell.text)) && Utils.isUnDef(merge)) {\r\n          width += cols.getWidth(i);\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n    } else if (align === BaseFont.ALIGN.center) {\r\n      let rightWidth = 0;\r\n      let leftWidth = 0;\r\n      for (let i = ci + 1, { len } = cols; i <= len; i += 1) {\r\n        const cell = cells.getCell(ri, i);\r\n        const merge = merges.getFirstIncludes(ri, i);\r\n        if ((Utils.isUnDef(cell) || Utils.isBlank(cell.text)) && Utils.isUnDef(merge)) {\r\n          rightWidth += cols.getWidth(i);\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n      for (let i = ci - 1; i >= 0; i -= 1) {\r\n        const cell = cells.getCell(ri, i);\r\n        const merge = merges.getFirstIncludes(ri, i);\r\n        if ((Utils.isUnDef(cell) || Utils.isBlank(cell.text)) && Utils.isUnDef(merge)) {\r\n          const tmp = cols.getWidth(i);\r\n          leftWidth += tmp;\r\n          offset -= tmp;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n      width = cols.getWidth(ci) + leftWidth + rightWidth;\r\n    } else if (align === BaseFont.ALIGN.right) {\r\n      // 计算当前单元格左边\r\n      // 空白的单元格的总宽度\r\n      for (let i = ci; i >= 0; i -= 1) {\r\n        const cell = cells.getCell(ri, i);\r\n        const merge = merges.getFirstIncludes(ri, i);\r\n        if (i === ci) {\r\n          width += cols.getWidth(i);\r\n        } else if ((Utils.isUnDef(cell) || Utils.isBlank(cell.text)) && Utils.isUnDef(merge)) {\r\n          const tmp = cols.getWidth(i);\r\n          width += tmp;\r\n          offset -= tmp;\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return { width, offset };\r\n  }\r\n}\r\n\r\nexport {\r\n  BaseCellsHelper,\r\n};\r\n","import { BaseCellsHelper } from './BaseCellsHelper';\r\nimport { Rect } from '../../../canvas/Rect';\r\nimport { Utils } from '../../../utils/Utils';\r\n\r\n/**\r\n * StyleCellsHelper\r\n * @author jerry\r\n */\r\nclass StyleCellsHelper extends BaseCellsHelper {\r\n\r\n  /**\r\n   * 遍历指定区域中的单元格\r\n   * @param rectRange\r\n   * @param callback\r\n   * @param startX\r\n   * @param startY\r\n   */\r\n  getCellByViewRange({\r\n    rectRange,\r\n    callback,\r\n    startX = 0,\r\n    startY = 0,\r\n  }) {\r\n    const { rows, cols, cells } = this;\r\n    const {\r\n      sri, eri, sci, eci,\r\n    } = rectRange;\r\n    let y = startY;\r\n    for (let i = sri; i <= eri; i += 1) {\r\n      const height = rows.getHeight(i);\r\n      let x = startX;\r\n      for (let j = sci; j <= eci; j += 1) {\r\n        const width = cols.getWidth(j);\r\n        const cell = cells.getCell(i, j);\r\n        if (cell) {\r\n          const rect = new Rect({ x, y, width, height });\r\n          const result = callback(i, j, cell, rect);\r\n          if (result === false) {\r\n            return;\r\n          }\r\n        }\r\n        x += width;\r\n      }\r\n      y += height;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 遍历指定区域中的单元格\r\n   * 单元格不存在创建新的\r\n   * @param rectRange\r\n   * @param callback\r\n   * @param startX\r\n   * @param startY\r\n   */\r\n  getCellOrNewCellByViewRange({\r\n    rectRange,\r\n    callback,\r\n    startX = 0,\r\n    startY = 0,\r\n  }) {\r\n    const { rows, cols, cells } = this;\r\n    const {\r\n      sri, eri, sci, eci,\r\n    } = rectRange;\r\n    let y = startY;\r\n    for (let i = sri; i <= eri; i += 1) {\r\n      const height = rows.getHeight(i);\r\n      let x = startX;\r\n      for (let j = sci; j <= eci; j += 1) {\r\n        const width = cols.getWidth(j);\r\n        const cell = cells.getCellOrNew(i, j);\r\n        if (cell) {\r\n          const rect = new Rect({ x, y, width, height });\r\n          const result = callback(i, j, cell, rect);\r\n          if (result === false) {\r\n            return;\r\n          }\r\n        }\r\n        x += width;\r\n      }\r\n      y += height;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 遍历指定区域中的合并单元格\r\n   * @param rectRange\r\n   * @param callback\r\n   * @param startX\r\n   * @param startY\r\n   */\r\n  getMergeCellByViewRange({\r\n    rectRange,\r\n    callback,\r\n    startX = 0,\r\n    startY = 0,\r\n  }) {\r\n    const {\r\n      rows, cols, cells, merges,\r\n    } = this;\r\n    const {\r\n      sri, eri, sci, eci,\r\n    } = rectRange;\r\n    const filter = [];\r\n    for (let i = sri; i <= eri; i += 1) {\r\n      for (let j = sci; j <= eci; j += 1) {\r\n        const merge = merges.getFirstIncludes(i, j);\r\n        if (Utils.isUnDef(merge) || filter.find(item => item === merge)) {\r\n          continue;\r\n        }\r\n        // 计算坐标\r\n        const minSri = Math.min(rectRange.sri, merge.sri);\r\n        const minSci = Math.min(rectRange.sci, merge.sci);\r\n        let maxSri = Math.max(rectRange.sri, merge.sri);\r\n        let maxSci = Math.max(rectRange.sci, merge.sci);\r\n        maxSri -= 1;\r\n        maxSci -= 1;\r\n        let x = cols.sectionSumWidth(minSci, maxSci);\r\n        let y = rows.sectionSumHeight(minSri, maxSri);\r\n        x = rectRange.sci > merge.sci ? x * -1 : x;\r\n        y = rectRange.sri > merge.sri ? y * -1 : y;\r\n        x += startX;\r\n        y += startY;\r\n        // 计算尺寸\r\n        const height = rows.sectionSumHeight(merge.sri, merge.eri);\r\n        const width = cols.sectionSumWidth(merge.sci, merge.eci);\r\n        const cell = cells.getCellOrNew(merge.sri, merge.sci);\r\n        const rect = new Rect({ x, y, width, height });\r\n        callback(rect, cell, merge);\r\n        filter.push(merge);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 遍历指定区域中的非合并单元格\r\n   * 的普通单元格\r\n   * @param rectRange\r\n   * @param callback\r\n   * @param startX\r\n   * @param startY\r\n   */\r\n  getCellSkipMergeCellByViewRange({\r\n    rectRange,\r\n    callback,\r\n    startX = 0,\r\n    startY = 0,\r\n  }) {\r\n    const { merges } = this;\r\n    this.getCellByViewRange({\r\n      rectRange,\r\n      callback: (ri, ci, cell, rect, overflow) => {\r\n        const merge = merges.getFirstIncludes(ri, ci);\r\n        if (merge === null) {\r\n          callback(ri, ci, cell, rect, overflow);\r\n        }\r\n      },\r\n      startX,\r\n      startY,\r\n    });\r\n  }\r\n}\r\n\r\nexport {\r\n  StyleCellsHelper,\r\n};\r\n","import { BaseCellsHelper } from './BaseCellsHelper';\r\nimport { Rect } from '../../../canvas/Rect';\r\nimport { Utils } from '../../../utils/Utils';\r\nimport { RectRange } from '../tablebase/RectRange';\r\n\r\nconst BREAK_LOOP = {\r\n  CONTINUE: 3,\r\n  ROW: 1,\r\n  RETURN: 2,\r\n};\r\n\r\nclass TextCellsHelper extends BaseCellsHelper {\r\n\r\n  /**\r\n   * 遍历指定区域中的单元格\r\n   * @param reverseRows\r\n   * @param reverseCols\r\n   * @param rectRange\r\n   * @param newRow\r\n   * @param newCol\r\n   * @param callback\r\n   * @param startX\r\n   * @param startY\r\n   */\r\n  getCellByViewRange({\r\n    reverseRows = false,\r\n    reverseCols = false,\r\n    rectRange = new RectRange(0, 0, 0, 0, 0, 0),\r\n    newRow = () => {},\r\n    newCol = () => {},\r\n    callback = () => {},\r\n    startX = 0,\r\n    startY = 0,\r\n  }) {\r\n    const {\r\n      rows, cols, cells,\r\n    } = this;\r\n    const {\r\n      sri, eri, sci, eci,\r\n    } = rectRange;\r\n    if (reverseRows && reverseCols) {\r\n      let y = startY;\r\n      for (let i = eri; sri <= i; i -= 1) {\r\n        const height = rows.getHeight(i);\r\n        let x = startX;\r\n        newRow(i);\r\n        y -= height;\r\n        for (let j = eci; sci <= j; j -= 1) {\r\n          const width = cols.getWidth(j);\r\n          const cell = cells.getCell(i, j);\r\n          newCol(j);\r\n          x -= width;\r\n          if (cell) {\r\n            const rect = new Rect({\r\n              x, y, width, height,\r\n            });\r\n            const overFlow = this.getCellOverFlow(i, j, rect, cell);\r\n            const result = callback(i, j, cell, rect, overFlow);\r\n            if (result === BREAK_LOOP.ROW) {\r\n              break;\r\n            }\r\n            if (result === BREAK_LOOP.RETURN) {\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if (reverseRows) {\r\n      let y = startY;\r\n      for (let i = eri; sri <= i; i -= 1) {\r\n        const height = rows.getHeight(i);\r\n        let x = startX;\r\n        newRow(i);\r\n        y -= height;\r\n        for (let j = sci; j <= eci; j += 1) {\r\n          const width = cols.getWidth(j);\r\n          const cell = cells.getCell(i, j);\r\n          newCol(j);\r\n          if (cell) {\r\n            const rect = new Rect({\r\n              x, y, width, height,\r\n            });\r\n            const overFlow = this.getCellOverFlow(i, j, rect, cell);\r\n            const result = callback(i, j, cell, rect, overFlow);\r\n            if (result === BREAK_LOOP.ROW) {\r\n              break;\r\n            }\r\n            if (result === BREAK_LOOP.RETURN) {\r\n              return;\r\n            }\r\n          }\r\n          x += width;\r\n        }\r\n      }\r\n    } else if (reverseCols) {\r\n      let y = startY;\r\n      for (let i = sri; i <= eri; i += 1) {\r\n        const height = rows.getHeight(i);\r\n        let x = startX;\r\n        newRow(i);\r\n        for (let j = eci; sci <= j; j -= 1) {\r\n          const width = cols.getWidth(j);\r\n          const cell = cells.getCell(i, j);\r\n          newCol(j);\r\n          x -= width;\r\n          if (cell) {\r\n            const rect = new Rect({\r\n              x, y, width, height,\r\n            });\r\n            const overFlow = this.getCellOverFlow(i, j, rect, cell);\r\n            const result = callback(i, j, cell, rect, overFlow);\r\n            if (result === BREAK_LOOP.ROW) {\r\n              break;\r\n            }\r\n            if (result === BREAK_LOOP.RETURN) {\r\n              return;\r\n            }\r\n          }\r\n        }\r\n        y += height;\r\n      }\r\n    } else {\r\n      let y = startY;\r\n      for (let i = sri; i <= eri; i += 1) {\r\n        const height = rows.getHeight(i);\r\n        let x = startX;\r\n        newRow(i);\r\n        for (let j = sci; j <= eci; j += 1) {\r\n          const width = cols.getWidth(j);\r\n          const cell = cells.getCell(i, j);\r\n          newCol(j);\r\n          if (cell) {\r\n            const rect = new Rect({\r\n              x, y, width, height,\r\n            });\r\n            const overFlow = this.getCellOverFlow(i, j, rect, cell);\r\n            const result = callback(i, j, cell, rect, overFlow);\r\n            if (result === BREAK_LOOP.ROW) {\r\n              break;\r\n            }\r\n            if (result === BREAK_LOOP.RETURN) {\r\n              return;\r\n            }\r\n          }\r\n          x += width;\r\n        }\r\n        y += height;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 遍历指定区域中的合并单元格\r\n   * @param rectRange\r\n   * @param callback\r\n   * @param startX\r\n   * @param startY\r\n   */\r\n  getMergeCellByViewRange({\r\n    rectRange,\r\n    callback,\r\n    startX = 0,\r\n    startY = 0,\r\n  }) {\r\n    const {\r\n      rows, cols, cells, merges,\r\n    } = this;\r\n    const {\r\n      sri, eri, sci, eci,\r\n    } = rectRange;\r\n    const filter = [];\r\n    for (let i = sri; i <= eri; i += 1) {\r\n      for (let j = sci; j <= eci; j += 1) {\r\n        const merge = merges.getFirstIncludes(i, j);\r\n        if (Utils.isUnDef(merge) || filter.find(item => item === merge)) {\r\n          continue;\r\n        }\r\n        // 计算坐标\r\n        const minSri = Math.min(rectRange.sri, merge.sri);\r\n        const minSci = Math.min(rectRange.sci, merge.sci);\r\n        let maxSri = Math.max(rectRange.sri, merge.sri);\r\n        let maxSci = Math.max(rectRange.sci, merge.sci);\r\n        maxSri -= 1;\r\n        maxSci -= 1;\r\n        let x = cols.sectionSumWidth(minSci, maxSci);\r\n        let y = rows.sectionSumHeight(minSri, maxSri);\r\n        x = rectRange.sci > merge.sci ? x * -1 : x;\r\n        y = rectRange.sri > merge.sri ? y * -1 : y;\r\n        x += startX;\r\n        y += startY;\r\n        // 计算尺寸\r\n        const height = rows.sectionSumHeight(merge.sri, merge.eri);\r\n        const width = cols.sectionSumWidth(merge.sci, merge.eci);\r\n        const cell = cells.getCellOrNew(merge.sri, merge.sci);\r\n        const rect = new Rect({ x, y, width, height });\r\n        callback(rect, cell, merge);\r\n        filter.push(merge);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 遍历指定区域中的非合并单元格\r\n   * 的普通单元格\r\n   * @param reverseRows\r\n   * @param reverseCols\r\n   * @param rectRange\r\n   * @param newRow\r\n   * @param newCol\r\n   * @param callback\r\n   * @param startX\r\n   * @param startY\r\n   */\r\n  getCellSkipMergeCellByViewRange({\r\n    reverseRows,\r\n    reverseCols,\r\n    rectRange,\r\n    newRow,\r\n    newCol,\r\n    callback,\r\n    startX,\r\n    startY,\r\n  }) {\r\n    const { merges } = this;\r\n    this.getCellByViewRange({\r\n      reverseRows,\r\n      reverseCols,\r\n      rectRange,\r\n      newRow,\r\n      newCol,\r\n      callback: (ri, ci, cell, rect, overflow) => {\r\n        const merge = merges.getFirstIncludes(ri, ci);\r\n        if (merge === null) {\r\n          callback(ri, ci, cell, rect, overflow);\r\n        }\r\n      },\r\n      startX,\r\n      startY,\r\n    });\r\n  }\r\n}\r\n\r\nexport {\r\n  TextCellsHelper, BREAK_LOOP,\r\n};\r\n","import { RectRange } from './RectRange';\r\nimport { Utils } from '../../../utils/Utils';\r\n\r\n/**\r\n * Merges Class\r\n */\r\nclass Merges {\r\n\r\n  /**\r\n   * Merges\r\n   * @param merges\r\n   * @param cols\r\n   * @param rows\r\n   */\r\n  constructor({\r\n    merges = [],\r\n    cols,\r\n    rows,\r\n  }) {\r\n    this.rows = rows;\r\n    this.cols = cols;\r\n    this.data = merges.map(merge => RectRange.valueOf(merge));\r\n    this.index = new Array(rows.len * cols.len);\r\n  }\r\n\r\n  /**\r\n   * 获取包含在指定区域中的合并单元格\r\n   * @param rectRange\r\n   * @param cb\r\n   */\r\n  getIncludes(rectRange, cb) {\r\n    const { index, data } = this;\r\n    rectRange.each((ri, ci) => {\r\n      const offset = this.getOffset(ri, ci);\r\n      const no = index[offset];\r\n      if (Utils.isNotUnDef(no)) {\r\n        cb(data[no]);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 获取偏移量\r\n   * @param ri\r\n   * @param ci\r\n   * @return {*}\r\n   */\r\n  getOffset(ri, ci) {\r\n    const { cols } = this;\r\n    const { len } = cols;\r\n    return (ri * len) + ci;\r\n  }\r\n\r\n  /**\r\n   * 获取指定行列的合并单元格\r\n   * @param ri\r\n   * @param ci\r\n   * @return {null|RectRange}\r\n   */\r\n  getFirstIncludes(ri, ci) {\r\n    const { index, data } = this;\r\n    const offset = this.getOffset(ri, ci);\r\n    const no = index[offset];\r\n    if (Utils.isUnDef(no)) {\r\n      return null;\r\n    }\r\n    const item = data[no];\r\n    if (Utils.isUnDef(item)) {\r\n      return null;\r\n    }\r\n    return item;\r\n  }\r\n\r\n  /**\r\n   * 添加合并单元格\r\n   * @param rectRange\r\n   * @param checked\r\n   */\r\n  add(rectRange, checked = true) {\r\n    const { index, data } = this;\r\n    // 删除旧的关联关系\r\n    if (checked) {\r\n      this.getIncludes(rectRange, old => this.delete(old));\r\n    }\r\n    // 添加新的单元格\r\n    const len = data.length;\r\n    data.push(rectRange);\r\n    // 添加新的关联关系\r\n    rectRange.each((ri, ci) => {\r\n      const offset = this.getOffset(ri, ci);\r\n      index[offset] = len;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 删除合并单元格\r\n   * @param rectRange\r\n   */\r\n  delete(rectRange) {\r\n    const { index, data } = this;\r\n    // 删除合并单元格\r\n    const { sri, sci } = rectRange;\r\n    const offset = this.getOffset(sri, sci);\r\n    const no = index[offset];\r\n    if (Utils.isUnDef(no)) {\r\n      return;\r\n    }\r\n    data.splice(no, 1);\r\n    // 删除旧单元格索引\r\n    rectRange.each((ri, ci) => {\r\n      const offset = this.getOffset(ri, ci);\r\n      index[offset] = undefined;\r\n    });\r\n    // 同步当前合并单元格索引\r\n    this.sync(no);\r\n  }\r\n\r\n  /**\r\n   * 返回联合的合并单元格(性能差,以后优化)\r\n   * @param cellRange\r\n   * @return {RectRange}\r\n   */\r\n  union(cellRange) {\r\n    let cr = cellRange;\r\n    const filter = [];\r\n    for (let i = 0; i < this.data.length; i += 1) {\r\n      const item = this.data[i];\r\n      if (filter.find(e => e === item)) {\r\n        continue;\r\n      }\r\n      if (item.intersects(cr)) {\r\n        filter.push(item);\r\n        cr = item.union(cr);\r\n        i = -1;\r\n      }\r\n    }\r\n    return cr;\r\n  }\r\n\r\n  /**\r\n   * 同步索引\r\n   */\r\n  sync(offset = 0) {\r\n    const { index, data } = this;\r\n    for (let i = offset; i < data.length; i += 1) {\r\n      const rectRange = data[i];\r\n      rectRange.each((ri, ci) => {\r\n        const offset = this.getOffset(ri, ci);\r\n        index[offset] = i;\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取数据\r\n   * @return {RectRange[]}\r\n   */\r\n  getData() {\r\n    return this.data;\r\n  }\r\n\r\n  /**\r\n   * 设置数据\r\n   * @param data\r\n   */\r\n  setData(data) {\r\n    this.data = data;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Merges,\r\n};\r\n","class DataProxy {\r\n\r\n  constructor() {\r\n    this.change = false;\r\n  }\r\n\r\n  endNotice() {\r\n    if (this.change) {\r\n      this.change = false;\r\n    }\r\n  }\r\n\r\n  backNotice() {\r\n    if (this.change) {\r\n      this.change = false;\r\n    }\r\n  }\r\n\r\n  goNotice() {\r\n    if (this.change) {\r\n      this.change = false;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { DataProxy };\r\n","import { DataProxy } from '../DataProxy';\r\nimport { Constant } from '../../../../const/Constant';\r\n\r\nclass TableCellDataProxy extends DataProxy {\r\n\r\n  constructor(table, option = {\r\n    on: { setCell() {} },\r\n  }) {\r\n    super();\r\n    this.table = table;\r\n    this.option = option;\r\n  }\r\n\r\n  $setCell(ri, ci, newCell) {\r\n    this.change = true;\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    cells.setCellOrNew(ri, ci, newCell);\r\n  }\r\n\r\n  setCell(ri, ci, newCell) {\r\n    const { option, table } = this;\r\n    const { on } = option;\r\n    const { setCell } = on;\r\n    const { cells } = table;\r\n    const oldCell = cells.getCell(ri, ci);\r\n    this.$setCell(ri, ci, newCell);\r\n    setCell(ri, ci, oldCell, newCell);\r\n  }\r\n\r\n  endNotice() {\r\n    const { table } = this;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.endNotice();\r\n  }\r\n\r\n  goNotice() {\r\n    const { table } = this;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.goNotice();\r\n  }\r\n\r\n  backNotice() {\r\n    const { table } = this;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.backNotice();\r\n  }\r\n}\r\n\r\nexport {\r\n  TableCellDataProxy,\r\n};\r\n","class CellDataRecord {\r\n  constructor({ ri, ci, oldCell, newCell }) {\r\n    this.ri = ri;\r\n    this.ci = ci;\r\n    this.oldCell = oldCell;\r\n    this.newCell = newCell;\r\n  }\r\n}\r\n\r\nexport { CellDataRecord };\r\n","const MERGE_RECORD_TYPE = {\r\n  ADD: Symbol('添加一个合并单元格'),\r\n  DELETE: Symbol('删除一个合并单元格'),\r\n};\r\n\r\nclass MergeDataRecord {\r\n  constructor({ merge, recordType }) {\r\n    this.merge = merge;\r\n    this.recordType = recordType;\r\n  }\r\n}\r\n\r\nexport {\r\n  MergeDataRecord,\r\n  MERGE_RECORD_TYPE,\r\n};\r\n","import { DataProxy } from '../DataProxy';\r\nimport { Constant } from '../../../../const/Constant';\r\n\r\nclass TableMergeDataProxy extends DataProxy {\r\n\r\n  constructor(table, option = {\r\n    on: {\r\n      addMerge() {}, deleteMerge() {},\r\n    },\r\n  }) {\r\n    super();\r\n    this.table = table;\r\n    this.option = option;\r\n  }\r\n\r\n  $addMerge(merge) {\r\n    this.change = true;\r\n    const { table } = this;\r\n    const { merges } = table;\r\n    merges.getIncludes(merge, merge => this.deleteMerge(merge));\r\n    merges.add(merge, false);\r\n  }\r\n\r\n  $deleteMerge(merge) {\r\n    this.change = true;\r\n    const { table } = this;\r\n    const { merges } = table;\r\n    merges.delete(merge);\r\n  }\r\n\r\n  deleteMerge(merge) {\r\n    const { option } = this;\r\n    const { on } = option;\r\n    const { deleteMerge } = on;\r\n    this.$deleteMerge(merge);\r\n    deleteMerge(merge);\r\n  }\r\n\r\n  addMerge(merge) {\r\n    const { option } = this;\r\n    const { on } = option;\r\n    const { addMerge } = on;\r\n    this.$addMerge(merge);\r\n    addMerge(merge);\r\n  }\r\n\r\n  endNotice() {\r\n    const { table } = this;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.endNotice();\r\n  }\r\n\r\n  goNotice() {\r\n    const { table } = this;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.goNotice();\r\n  }\r\n\r\n  backNotice() {\r\n    const { table } = this;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.backNotice();\r\n  }\r\n}\r\n\r\nexport { TableMergeDataProxy };\r\n","import { DataProxy } from '../DataProxy';\r\nimport { Constant } from '../../../../const/Constant';\r\n\r\nclass TableColsDataProxy extends DataProxy {\r\n\r\n  constructor(table, option = {\r\n    on: { setWidth() {} },\r\n  }) {\r\n    super();\r\n    this.table = table;\r\n    this.option = option;\r\n  }\r\n\r\n  $setWidth(ci, width) {\r\n    this.change = true;\r\n    const { table } = this;\r\n    const { cols } = table;\r\n    cols.setWidth(ci, width);\r\n  }\r\n\r\n  setWidth(ci, newWidth) {\r\n    const { option, table } = this;\r\n    const { on } = option;\r\n    const { setWidth } = on;\r\n    const { cols } = table;\r\n    const oldWidth = cols.getWidth(ci);\r\n    this.$setWidth(ci, newWidth);\r\n    setWidth(ci, oldWidth, newWidth);\r\n  }\r\n\r\n  endNotice() {\r\n    const { table } = this;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH);\r\n    }\r\n    super.endNotice();\r\n  }\r\n\r\n  backNotice() {\r\n    const { table } = this;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH);\r\n    }\r\n    super.backNotice();\r\n  }\r\n\r\n  goNotice() {\r\n    const { table } = this;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH);\r\n    }\r\n    super.goNotice();\r\n  }\r\n}\r\n\r\nexport { TableColsDataProxy };\r\n","class ColsDataRecord {\r\n  constructor({ ci, oldWidth, newWidth }) {\r\n    this.ci = ci;\r\n    this.oldWidth = oldWidth;\r\n    this.newWidth = newWidth;\r\n  }\r\n}\r\n\r\nexport { ColsDataRecord };\r\n","import { DataProxy } from '../DataProxy';\r\nimport { Constant } from '../../../../const/Constant';\r\n\r\nclass TableRowsDataProxy extends DataProxy {\r\n\r\n  constructor(table, option = {\r\n    on: {\r\n      setHeight() {},\r\n    },\r\n  }) {\r\n    super();\r\n    this.table = table;\r\n    this.option = option;\r\n  }\r\n\r\n  $setHeight(ri, height) {\r\n    this.change = true;\r\n    const { table } = this;\r\n    const { rows } = table;\r\n    rows.setHeight(ri, height);\r\n  }\r\n\r\n  setHeight(ri, newHeight) {\r\n    const { option, table } = this;\r\n    const { on } = option;\r\n    const { setHeight } = on;\r\n    const { rows } = table;\r\n    const oldHeight = rows.getHeight(ri);\r\n    this.$setHeight(ri, newHeight);\r\n    setHeight(ri, oldHeight, newHeight);\r\n  }\r\n\r\n  endNotice() {\r\n    const { table } = this;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT);\r\n    }\r\n    super.endNotice();\r\n  }\r\n\r\n  backNotice() {\r\n    const { table } = this;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT);\r\n    }\r\n    super.backNotice();\r\n  }\r\n\r\n  goNotice() {\r\n    const { table } = this;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT);\r\n    }\r\n    super.goNotice();\r\n  }\r\n}\r\n\r\nexport { TableRowsDataProxy };\r\n","class RowsDataRecord {\r\n  constructor({ ri, oldHeight, newHeight }) {\r\n    this.ri = ri;\r\n    this.oldHeight = oldHeight;\r\n    this.newHeight = newHeight;\r\n  }\r\n}\r\n\r\nexport { RowsDataRecord };\r\n","import { TableCellDataProxy } from './proxy/TableCellDataProxy';\r\nimport { CellDataRecord } from './record/CellDataRecord';\r\nimport { MERGE_RECORD_TYPE, MergeDataRecord } from './record/MergeDataRecord';\r\nimport { ChartDataRecord } from './record/ChartDataRecord';\r\nimport { TableMergeDataProxy } from './proxy/TableMergeDataProxy';\r\nimport { TableColsDataProxy } from './proxy/TableColsDataProxy';\r\nimport { ColsDataRecord } from './record/ColsDataRecord';\r\nimport { TableRowsDataProxy } from './proxy/TableRowsDataProxy';\r\nimport { RowsDataRecord } from './record/RowsDataRecord';\r\n\r\nclass TableDataSnapshot {\r\n\r\n  constructor(table) {\r\n    this.record = false;\r\n    this.backLayerStack = [];\r\n    this.goLayerStack = [];\r\n    this.recordLayer = [];\r\n    this.table = table;\r\n    this.mergeDataProxy = new TableMergeDataProxy(table, {\r\n      on: {\r\n        deleteMerge: (merge) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new MergeDataRecord({ merge, recordType: MERGE_RECORD_TYPE.DELETE }));\r\n        },\r\n        addMerge: (merge) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new MergeDataRecord({ merge, recordType: MERGE_RECORD_TYPE.ADD }));\r\n        },\r\n      },\r\n    });\r\n    this.cellDataProxy = new TableCellDataProxy(table, {\r\n      on: {\r\n        setCell: (ri, ci, oldCell, newCell) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new CellDataRecord({ ri, ci, oldCell, newCell }));\r\n        },\r\n      },\r\n    });\r\n    this.colsDataProxy = new TableColsDataProxy(table, {\r\n      on: {\r\n        setWidth: (ci, oldWidth, newWidth) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new ColsDataRecord({ ci, oldWidth, newWidth }));\r\n        },\r\n      },\r\n    });\r\n    this.rowsDataProxy = new TableRowsDataProxy(table, {\r\n      on: {\r\n        setHeight: (ri, oldHeight, newHeight) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new RowsDataRecord({ ri, oldHeight, newHeight }));\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  back() {\r\n    const { backLayerStack, goLayerStack, table } = this;\r\n    const layer = backLayerStack.pop();\r\n    for (let i = layer.length - 1; i >= 0; i -= 1) {\r\n      const item = layer[i];\r\n      // 单元格元素\r\n      if (item instanceof CellDataRecord) {\r\n        const { ri, ci, oldCell } = item;\r\n        this.cellDataProxy.$setCell(ri, ci, oldCell);\r\n        continue;\r\n      }\r\n      // 合并单元格元素\r\n      if (item instanceof MergeDataRecord) {\r\n        const { recordType } = item;\r\n        switch (recordType) {\r\n          case MERGE_RECORD_TYPE.DELETE: {\r\n            const { merge } = item;\r\n            this.mergeDataProxy.$addMerge(merge);\r\n            break;\r\n          }\r\n          case MERGE_RECORD_TYPE.ADD: {\r\n            const { merge } = item;\r\n            this.mergeDataProxy.$deleteMerge(merge);\r\n            break;\r\n          }\r\n          default: break;\r\n        }\r\n        continue;\r\n      }\r\n      // 图表元素\r\n      if (item instanceof ChartDataRecord) {\r\n        // TODO...\r\n        // ...\r\n      }\r\n      //  列宽元素\r\n      if (item instanceof ColsDataRecord) {\r\n        const { ci, oldWidth } = item;\r\n        this.colsDataProxy.$setWidth(ci, oldWidth);\r\n        continue;\r\n      }\r\n      // 行高元素\r\n      if (item instanceof RowsDataRecord) {\r\n        const { ri, oldHeight } = item;\r\n        this.rowsDataProxy.$setHeight(ri, oldHeight);\r\n      }\r\n    }\r\n    goLayerStack.push(layer);\r\n    this.mergeDataProxy.backNotice();\r\n    this.cellDataProxy.backNotice();\r\n    this.colsDataProxy.backNotice();\r\n    this.rowsDataProxy.backNotice();\r\n    table.render();\r\n  }\r\n\r\n  go() {\r\n    const { backLayerStack, goLayerStack, table } = this;\r\n    const layer = goLayerStack.pop();\r\n    for (let i = 0, len = layer.length; i < len; i += 1) {\r\n      const item = layer[i];\r\n      // 单元格元素\r\n      if (item instanceof CellDataRecord) {\r\n        const { ri, ci, newCell } = item;\r\n        this.cellDataProxy.$setCell(ri, ci, newCell);\r\n        continue;\r\n      }\r\n      // 合并单元格元素\r\n      if (item instanceof MergeDataRecord) {\r\n        const { recordType } = item;\r\n        switch (recordType) {\r\n          case MERGE_RECORD_TYPE.DELETE: {\r\n            const { merge } = item;\r\n            this.mergeDataProxy.$deleteMerge(merge);\r\n            break;\r\n          }\r\n          case MERGE_RECORD_TYPE.ADD: {\r\n            const { merge } = item;\r\n            this.mergeDataProxy.$addMerge(merge);\r\n            break;\r\n          }\r\n          default: break;\r\n        }\r\n        continue;\r\n      }\r\n      // 图表元素\r\n      if (item instanceof ChartDataRecord) {\r\n        // TODO...\r\n        // ...\r\n      }\r\n      //  列宽元素\r\n      if (item instanceof ColsDataRecord) {\r\n        const { ci, newWidth } = item;\r\n        this.colsDataProxy.$setWidth(ci, newWidth);\r\n        continue;\r\n      }\r\n      // 行高元素\r\n      if (item instanceof RowsDataRecord) {\r\n        const { ri, newHeight } = item;\r\n        this.rowsDataProxy.$setHeight(ri, newHeight);\r\n      }\r\n    }\r\n    backLayerStack.push(layer);\r\n    this.mergeDataProxy.goNotice();\r\n    this.cellDataProxy.goNotice();\r\n    this.colsDataProxy.goNotice();\r\n    this.rowsDataProxy.goNotice();\r\n    table.render();\r\n  }\r\n\r\n  end() {\r\n    const { recordLayer, backLayerStack } = this;\r\n    this.record = false;\r\n    if (recordLayer.length) {\r\n      backLayerStack.push(recordLayer);\r\n    }\r\n    this.recordLayer = [];\r\n    this.mergeDataProxy.endNotice();\r\n    this.cellDataProxy.endNotice();\r\n    this.colsDataProxy.endNotice();\r\n    this.rowsDataProxy.endNotice();\r\n  }\r\n\r\n  begin() {\r\n    this.record = true;\r\n    this.goLayerStack = [];\r\n  }\r\n\r\n  canBack() {\r\n    const { backLayerStack } = this;\r\n    return backLayerStack.length !== 0;\r\n  }\r\n\r\n  canGo() {\r\n    const { goLayerStack } = this;\r\n    return goLayerStack.length !== 0;\r\n  }\r\n}\r\n\r\nexport { TableDataSnapshot };\r\n","class LineFilter {\r\n\r\n  constructor(callback) {\r\n    this.callback = callback;\r\n  }\r\n\r\n  execute() {\r\n    // eslint-disable-next-line prefer-spread,prefer-rest-params\r\n    return this.callback.apply(this, arguments);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LineFilter,\r\n};\r\n","import { LineFilter } from '../LineFilter';\r\nimport { Utils } from '../../../../../utils/Utils';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass LeftOutRangeFilter extends LineFilter {\r\n\r\n  constructor({\r\n    cells, cols, merges,\r\n  }) {\r\n    super((ci, ri) => {\r\n      const merge = merges.getFirstIncludes(ri, ci - 1);\r\n      if (merge) {\r\n        return true;\r\n      }\r\n      return this.master(ri, ci)\r\n        && this.right(ri, ci)\r\n        && this.left(ri, ci);\r\n    });\r\n    this.cells = cells;\r\n    this.cols = cols;\r\n    this.merges = merges;\r\n  }\r\n\r\n  master(ri, ci) {\r\n\r\n    const {\r\n      cells, cols,\r\n    } = this;\r\n\r\n    const last = cells.getCell(ri, ci - 1);\r\n    const master = cells.getCell(ri, ci);\r\n\r\n    if (Utils.isUnDef(master) || Utils.isBlank(master.text)) {\r\n      return true;\r\n    }\r\n\r\n    const { fontAttr } = master;\r\n    const { direction } = fontAttr;\r\n    let checked = true;\r\n\r\n    // 检查文本的绘制方向\r\n    // 区别对待旋转文本\r\n    if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n      const { angle, textWrap } = fontAttr;\r\n      if (angle === 90 || angle === -90) {\r\n        checked = false;\r\n      }\r\n      if (textWrap === BaseFont.TEXT_WRAP.TRUNCATE) {\r\n        checked = false;\r\n      }\r\n    } else {\r\n      // 跳过裁剪类型不是overflow\r\n      // 类型的单元格\r\n      const { textWrap } = fontAttr;\r\n      if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n        checked = false;\r\n      }\r\n    }\r\n\r\n    // 跳过对齐方式不是right和center\r\n    // 类型的单元格\r\n    const { align } = fontAttr;\r\n    const maxWidth = cols.getWidth(ci);\r\n    if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\r\n      checked = false;\r\n    }\r\n\r\n    // 单元格符合检查条件\r\n    // 则检查宽度是否越界\r\n    if (!checked) {\r\n      return true;\r\n    }\r\n\r\n    // 检查当前单元格的内容\r\n    // 宽度是否越界\r\n    const width = cells.getCellBoundOutSize(ri, ci);\r\n    if (width > maxWidth) {\r\n      // 只有next单元格是空时\r\n      // 才允许不绘制边框\r\n      if (Utils.isUnDef(last) || Utils.isBlank(last.text)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  right(ri, ci) {\r\n\r\n    const {\r\n      cells, cols, merges,\r\n    } = this;\r\n\r\n    const { len } = cols;\r\n    const last = cells.getCell(ri, ci - 1);\r\n    const master = cells.getCell(ri, ci);\r\n\r\n    let rightWidth = cols.getWidth(ci + 1) + cols.getWidth(ci);\r\n\r\n    // 检查右边是否越界\r\n    for (let j = ci + 1; j <= len; j += 1, rightWidth += cols.getWidth(j)) {\r\n\r\n      // 过滤掉空单元格&合并单元格\r\n      const cell = cells.getCell(ri, j);\r\n      if (Utils.isUnDef(cell)) {\r\n        continue;\r\n      }\r\n      const merge = merges.getFirstIncludes(ri, j);\r\n      if (Utils.isNotUnDef(merge)) {\r\n        continue;\r\n      }\r\n      const { text } = cell;\r\n      if (Utils.isBlank(text)) {\r\n        continue;\r\n      }\r\n\r\n      // 检查文本的绘制方向\r\n      // 区别对待旋转文本\r\n      const { fontAttr } = cell;\r\n      const { direction } = fontAttr;\r\n      if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n        const { angle, textWrap } = fontAttr;\r\n        if (angle === 90 || angle === -90) {\r\n          break;\r\n        }\r\n        if (textWrap === BaseFont.TEXT_WRAP.TRUNCATE) {\r\n          break;\r\n        }\r\n        // 跳过对齐方式不是right和center\r\n        // 类型的单元格\r\n        const { align } = fontAttr;\r\n        if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\r\n          break;\r\n        }\r\n      } else {\r\n        // 跳过裁剪类型不是overflow\r\n        // 类型的单元格\r\n        const { textWrap } = fontAttr;\r\n        if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n          break;\r\n        }\r\n        // 跳过对齐方式不是right和center\r\n        // 类型的单元格\r\n        const { align } = fontAttr;\r\n        if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // 检查当前单元格的内容\r\n      // 宽度是否越界\r\n      const width = cells.getCellBoundOutSize(ri, j);\r\n      if (width > rightWidth) {\r\n        // 只有master单元格和\r\n        // last单元格都是空时\r\n        // 才允许不绘制边框\r\n        const masterBlank = Utils.isUnDef(master) || Utils.isBlank(master.text);\r\n        const nextBlank = Utils.isUnDef(last) || Utils.isBlank(last.text);\r\n        if (masterBlank && nextBlank) {\r\n          return false;\r\n        }\r\n      }\r\n      break;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  left(ri, ci) {\r\n\r\n    const {\r\n      cells, cols, merges,\r\n    } = this;\r\n\r\n    const master = cells.getCell(ri, ci);\r\n\r\n    let leftWidth = cols.getWidth(ci - 1);\r\n\r\n    // 检查左边是否越界\r\n    for (let i = ci - 1; i >= 0; i -= 1, leftWidth += cols.getWidth(i)) {\r\n\r\n      // 过滤掉空单元格&合并单元格\r\n      const cell = cells.getCell(ri, i);\r\n      if (Utils.isUnDef(cell)) {\r\n        continue;\r\n      }\r\n      const merge = merges.getFirstIncludes(ri, i);\r\n      if (Utils.isNotUnDef(merge)) {\r\n        continue;\r\n      }\r\n      const { text } = cell;\r\n      if (Utils.isBlank(text)) {\r\n        continue;\r\n      }\r\n\r\n      // 检查文本的绘制方向\r\n      // 区别对待旋转文本\r\n      const { fontAttr } = cell;\r\n      const { direction } = fontAttr;\r\n      if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n        const { angle, textWrap } = fontAttr;\r\n        if (angle === 90 || angle === -90) {\r\n          break;\r\n        }\r\n        if (textWrap === BaseFont.TEXT_WRAP.TRUNCATE) {\r\n          break;\r\n        }\r\n        // 跳过对齐方式不是left和center\r\n        // 类型的单元格\r\n        const { align } = fontAttr;\r\n        if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\r\n          break;\r\n        }\r\n      } else {\r\n        // 跳过裁剪类型不是overflow\r\n        // 类型的单元格\r\n        const { textWrap } = fontAttr;\r\n        if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n          break;\r\n        }\r\n        // 跳过对齐方式不是left和center\r\n        // 类型的单元格\r\n        const { align } = fontAttr;\r\n        if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // 检查当前单元格的内容\r\n      // 宽度是否越界\r\n      const width = cells.getCellBoundOutSize(ri, i);\r\n      if (width > leftWidth) {\r\n        // 只有master单元格为\r\n        // 空时才允许不绘制边框\r\n        if (Utils.isUnDef(master) || Utils.isBlank(master.text)) {\r\n          return false;\r\n        }\r\n      }\r\n      break;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LeftOutRangeFilter,\r\n};\r\n","import { LineFilter } from '../LineFilter';\r\nimport { Utils } from '../../../../../utils/Utils';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass RightOutRangeFilter extends LineFilter {\r\n\r\n  constructor({\r\n    cells, cols, merges,\r\n  }) {\r\n    super((ci, ri) => {\r\n      const merge = merges.getFirstIncludes(ri, ci + 1);\r\n      if (merge) {\r\n        return true;\r\n      }\r\n      return this.master(ri, ci)\r\n        && this.right(ri, ci)\r\n        && this.left(ri, ci);\r\n    });\r\n    this.cells = cells;\r\n    this.cols = cols;\r\n    this.merges = merges;\r\n  }\r\n\r\n  master(ri, ci) {\r\n\r\n    const {\r\n      cells, cols,\r\n    } = this;\r\n\r\n    const next = cells.getCell(ri, ci + 1);\r\n    const master = cells.getCell(ri, ci);\r\n\r\n    if (Utils.isUnDef(master) || Utils.isBlank(master.text)) {\r\n      return true;\r\n    }\r\n    const { fontAttr } = master;\r\n    const { direction } = fontAttr;\r\n\r\n    let checked = true;\r\n\r\n    // 检查文本的绘制方向\r\n    // 区别对待旋转文本\r\n    if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n      const { angle, textWrap } = fontAttr;\r\n      if (angle === 90 || angle === -90) {\r\n        checked = false;\r\n      }\r\n      if (textWrap === BaseFont.TEXT_WRAP.TRUNCATE) {\r\n        checked = false;\r\n      }\r\n    } else {\r\n      // 跳过裁剪类型不是overflow\r\n      // 类型的单元格\r\n      const { textWrap } = fontAttr;\r\n      if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n        checked = false;\r\n      }\r\n    }\r\n\r\n    // 跳过对齐方式不是left和center\r\n    // 类型的单元格\r\n    const { align } = fontAttr;\r\n    const maxWidth = cols.getWidth(ci);\r\n    if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\r\n      checked = false;\r\n    }\r\n\r\n    // 单元格符合检查条件\r\n    // 则检查宽度是否越界\r\n    if (!checked) {\r\n      return true;\r\n    }\r\n\r\n    // 检查当前单元格的内容\r\n    // 宽度是否越界\r\n    const width = cells.getCellBoundOutSize(ri, ci);\r\n    if (width > maxWidth) {\r\n      // 只有next单元格是空时\r\n      // 才允许不绘制边框\r\n      if (Utils.isUnDef(next) || Utils.isBlank(next.text)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  right(ri, ci) {\r\n\r\n    const {\r\n      cells, cols, merges,\r\n    } = this;\r\n\r\n    const { len } = cols;\r\n    const master = cells.getCell(ri, ci);\r\n\r\n    let rightWidth = cols.getWidth(ci + 1);\r\n\r\n    // 检查右边是否越界\r\n    for (let j = ci + 1; j <= len; j += 1, rightWidth += cols.getWidth(j)) {\r\n\r\n      // 过滤掉空单元格&合并单元格\r\n      const cell = cells.getCell(ri, j);\r\n      if (Utils.isUnDef(cell)) {\r\n        continue;\r\n      }\r\n      const merge = merges.getFirstIncludes(ri, j);\r\n      if (Utils.isNotUnDef(merge)) {\r\n        continue;\r\n      }\r\n      const { text } = cell;\r\n      if (Utils.isBlank(text)) {\r\n        continue;\r\n      }\r\n\r\n      // 检查文本的绘制方向\r\n      // 区别对待旋转文本\r\n      const { fontAttr } = cell;\r\n      const { direction } = fontAttr;\r\n\r\n      if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n        const { angle, textWrap } = fontAttr;\r\n        if (angle === 90 || angle === -90) {\r\n          break;\r\n        }\r\n        if (textWrap === BaseFont.TEXT_WRAP.TRUNCATE) {\r\n          break;\r\n        }\r\n        // 跳过对齐方式不是right和center\r\n        // 类型的单元格\r\n        const { align } = fontAttr;\r\n        if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\r\n          break;\r\n        }\r\n      } else {\r\n        // 跳过裁剪类型不是overflow\r\n        // 类型的单元格\r\n        const { textWrap } = fontAttr;\r\n        if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n          break;\r\n        }\r\n        // 跳过对齐方式不是right和center\r\n        // 类型的单元格\r\n        const { align } = fontAttr;\r\n        if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // 检查当前单元格的内容\r\n      // 宽度是否越界\r\n      const width = cells.getCellBoundOutSize(ri, j);\r\n      if (width > rightWidth) {\r\n        // 只有master单元格为\r\n        // 空时才允许不绘制边框\r\n        if (master === null || Utils.isBlank(master.text)) {\r\n          return false;\r\n        }\r\n      }\r\n      break;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  left(ri, ci) {\r\n\r\n    const {\r\n      cells, cols, merges,\r\n    } = this;\r\n\r\n    const next = cells.getCell(ri, ci + 1);\r\n    const master = cells.getCell(ri, ci);\r\n\r\n    let leftWidth = cols.getWidth(ci - 1) + cols.getWidth(ci);\r\n\r\n    // 检查左边是否越界\r\n    for (let i = ci - 1; i >= 0; i -= 1, leftWidth += cols.getWidth(i)) {\r\n\r\n      // 过滤掉空单元格\r\n      const cell = cells.getCell(ri, i);\r\n      if (Utils.isUnDef(cell)) {\r\n        continue;\r\n      }\r\n      const merge = merges.getFirstIncludes(ri, i);\r\n      if (Utils.isNotUnDef(merge)) {\r\n        continue;\r\n      }\r\n      const { text } = cell;\r\n      if (Utils.isBlank(text)) {\r\n        continue;\r\n      }\r\n\r\n      const { fontAttr } = cell;\r\n      const { direction } = fontAttr;\r\n\r\n      // 检查文本的绘制方向\r\n      // 区别对待旋转文本\r\n      if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n        const { angle, textWrap } = fontAttr;\r\n        if (angle === 90 || angle === -90) {\r\n          break;\r\n        }\r\n        if (textWrap === BaseFont.TEXT_WRAP.TRUNCATE) {\r\n          break;\r\n        }\r\n        // 跳过对齐方式不是left和center\r\n        // 类型的单元格\r\n        const { align } = fontAttr;\r\n        if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\r\n          break;\r\n        }\r\n      } else {\r\n        const { textWrap } = fontAttr;\r\n        // 跳过裁剪类型不是overflow\r\n        // 类型的单元格\r\n        if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n          break;\r\n        }\r\n        // 跳过对齐方式不是left和center\r\n        // 类型的单元格\r\n        const { align } = fontAttr;\r\n        if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // 检查当前单元格的内容\r\n      // 宽度是否越界\r\n      const width = cells.getCellBoundOutSize(ri, i);\r\n\r\n      if (width > leftWidth) {\r\n        // 只有master单元格和\r\n        // next单元格都是空时\r\n        // 才允许不绘制边框\r\n        const masterBlank = Utils.isUnDef(master) || Utils.isBlank(master.text);\r\n        const nextBlank = Utils.isUnDef(next) || Utils.isBlank(next.text);\r\n        if (masterBlank && nextBlank) {\r\n          return false;\r\n        }\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RightOutRangeFilter,\r\n};\r\n","import { RectRange } from '../tablebase/RectRange';\r\nimport { Rect } from '../../../canvas/Rect';\r\nimport { LeftOutRangeFilter } from './filter/outrange/LeftOutRangeFilter';\r\nimport { RightOutRangeFilter } from './filter/outrange/RightOutRangeFilter';\r\nimport { LineFilter } from './filter/LineFilter';\r\nimport { Utils } from '../../../utils/Utils';\r\n\r\nclass BaseLine {\r\n\r\n  constructor({\r\n    merges,\r\n    rows,\r\n    cols,\r\n    cells,\r\n  }) {\r\n    this.merges = merges;\r\n    this.cells = cells;\r\n    this.rows = rows;\r\n    this.cols = cols;\r\n    this.rightOutRangeFilter = new RightOutRangeFilter({ cells, cols, merges });\r\n    this.leftOutRangeFilter = new LeftOutRangeFilter({ cells, cols, merges });\r\n  }\r\n\r\n  getMergeCoincideRange({\r\n    viewRange = new RectRange(0, 0, 0, 0),\r\n  }) {\r\n    const { merges, cols, rows } = this;\r\n    const filter = [];\r\n    const result = [];\r\n    this.horizontalIterate({\r\n      viewRange,\r\n      filter: new LineFilter((row, col) => {\r\n        const merge = merges.getFirstIncludes(row, col);\r\n        return Utils.isNotUnDef(merge)\r\n          && filter.indexOf(merge) === -1;\r\n      }),\r\n      handle: (row, col, x, y) => {\r\n        const merge = merges.getFirstIncludes(row, col);\r\n        filter.push(merge);\r\n        const view = viewRange.coincide(merge);\r\n        const width = cols.sectionSumWidth(view.sci, view.eci);\r\n        const height = rows.sectionSumHeight(view.sri, view.eri);\r\n        const rect = new Rect({ x, y, width, height });\r\n        result.push({ rect, view, merge });\r\n      },\r\n    });\r\n    return result;\r\n  }\r\n\r\n  getCoincideRangeBrink({\r\n    coincide = new RectRange(0, 0, 0, 0),\r\n  }) {\r\n    const { cols, rows } = this;\r\n    const result = [];\r\n    for (let i = 0; i < coincide.length; i += 1) {\r\n      const { view, rect, merge } = coincide[i];\r\n      const brink = view.brink();\r\n      const top = {\r\n        view: brink.top,\r\n        x: rect.x,\r\n        y: rect.y,\r\n      };\r\n      const left = {\r\n        view: brink.left,\r\n        x: rect.x,\r\n        y: rect.y,\r\n      };\r\n      const bottom = {\r\n        view: brink.bottom,\r\n        x: rect.x,\r\n        y: rect.y + rect.height - rows.rectRangeSumHeight(brink.bottom),\r\n      };\r\n      const right = {\r\n        view: brink.right,\r\n        x: rect.x + rect.width - cols.rectRangeSumWidth(brink.right),\r\n        y: rect.y,\r\n      };\r\n      const item = {};\r\n      if (merge.sri === view.sri) {\r\n        item.top = top;\r\n      }\r\n      if (merge.sci === view.sci) {\r\n        item.left = left;\r\n      }\r\n      if (merge.eri === view.eri) {\r\n        item.bottom = bottom;\r\n      }\r\n      if (merge.eci === view.eci) {\r\n        item.right = right;\r\n      }\r\n      result.push(item);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  horizontalIterate({\r\n    viewRange = new RectRange(0, 0, 0, 0),\r\n    newRow = () => true,\r\n    filter = new LineFilter(() => true),\r\n    jump = () => true,\r\n    handle = () => true,\r\n    endRow = () => true,\r\n    bx = 0,\r\n    by = 0,\r\n  }) {\r\n    const { cols, rows } = this;\r\n    const {\r\n      sri, eri, sci, eci,\r\n    } = viewRange;\r\n    let y = by;\r\n    for (let i = sri; i <= eri; i += 1) {\r\n      const height = rows.getHeight(i);\r\n      let x = bx;\r\n      newRow(i, y);\r\n      for (let j = sci; j <= eci; j += 1) {\r\n        const width = cols.getWidth(j);\r\n        const result = filter.execute(i, j, x, y);\r\n        if (result) {\r\n          handle(i, j, x, y);\r\n        } else {\r\n          jump(i, j, x, y);\r\n        }\r\n        x += width;\r\n      }\r\n      endRow();\r\n      y += height;\r\n    }\r\n  }\r\n\r\n  verticalIterate({\r\n    viewRange = new RectRange(0, 0, 0, 0),\r\n    newCol = () => true,\r\n    filter = new LineFilter(() => true),\r\n    jump = () => true,\r\n    handle = () => true,\r\n    endCol = () => true,\r\n    bx = 0,\r\n    by = 0,\r\n  }) {\r\n    const { cols, rows } = this;\r\n    const {\r\n      sri, eri, sci, eci,\r\n    } = viewRange;\r\n    let x = bx;\r\n    for (let i = sci; i <= eci; i += 1) {\r\n      const width = cols.getWidth(i);\r\n      let y = by;\r\n      newCol(i, x);\r\n      for (let j = sri; j <= eri; j += 1) {\r\n        const height = rows.getHeight(j);\r\n        const result = filter.execute(i, j, x, y);\r\n        if (result) {\r\n          handle(i, j, x, y);\r\n        } else {\r\n          jump(i, j, x, y);\r\n        }\r\n        y += height;\r\n      }\r\n      endCol();\r\n      x += width;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { BaseLine };\r\n","import { LineFilter } from '../LineFilter';\r\n\r\nclass HorizontalMergeFilter extends LineFilter {\r\n\r\n  constructor({\r\n    merges,\r\n  }) {\r\n    super((ri, ci) => merges.getFirstIncludes(ri, ci) === null);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  HorizontalMergeFilter,\r\n};\r\n","import { LineFilter } from '../LineFilter';\r\n\r\nclass VerticalMergeFilter extends LineFilter {\r\n\r\n  constructor({\r\n    merges,\r\n  }) {\r\n    super((ci, ri) => merges.getFirstIncludes(ri, ci) === null);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  VerticalMergeFilter,\r\n};\r\n","import { LineFilter } from '../LineFilter';\r\n\r\nclass HorizontalBorderDisplayFilter extends LineFilter {\r\n\r\n  constructor({\r\n    cells,\r\n  }) {\r\n    super((ri, ci) => {\r\n      const next = cells.getCell(ri + 1, ci);\r\n      const cell = cells.getCell(ri, ci);\r\n      let display = false;\r\n      if (cell && !display) display = cell.borderAttr.bottom.display;\r\n      if (next && !display) display = next.borderAttr.top.display;\r\n      return !display;\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  HorizontalBorderDisplayFilter,\r\n};\r\n","import { LineFilter } from '../LineFilter';\r\n\r\nclass VerticalBorderDisplayFilter extends LineFilter {\r\n\r\n  constructor({\r\n    cells,\r\n  }) {\r\n    super((ci, ri) => {\r\n      const next = cells.getCell(ri, ci + 1);\r\n      const cell = cells.getCell(ri, ci);\r\n      let display = false;\r\n      if (cell && !display) display = cell.borderAttr.right.display;\r\n      if (next && !display) display = next.borderAttr.left.display;\r\n      return !display;\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  VerticalBorderDisplayFilter,\r\n};\r\n","import { BaseLine } from '../BaseLine';\r\nimport { HorizontalMergeFilter } from '../filter/mege/HorizontalMergeFilter';\r\nimport { VerticalMergeFilter } from '../filter/mege/VerticalMergeFilter';\r\nimport { HorizontalBorderDisplayFilter } from '../filter/borderdisplay/HorizontalBorderDisplayFilter';\r\nimport { VerticalBorderDisplayFilter } from '../filter/borderdisplay/VerticalBorderDisplayFilter';\r\n\r\nclass TableGrid extends BaseLine {\r\n\r\n  constructor({\r\n    merges,\r\n    rows,\r\n    cols,\r\n    cells,\r\n    drawCheck = false,\r\n    getHeight = ri => rows.getHeight(ri),\r\n    getWidth = ci => cols.getWidth(ci),\r\n  }) {\r\n    super({\r\n      merges,\r\n      rows,\r\n      cols,\r\n      cells,\r\n    });\r\n    this.drawCheck = drawCheck;\r\n    this.getHeight = getHeight;\r\n    this.getWidth = getWidth;\r\n    this.horizontalBorderDisplayFilter = new HorizontalBorderDisplayFilter({ cells });\r\n    this.verticalBorderDisplayFilter = new VerticalBorderDisplayFilter({ cells });\r\n    this.horizontalMergeFilter = new HorizontalMergeFilter({ merges });\r\n    this.verticalMergeFilter = new VerticalMergeFilter({ merges });\r\n  }\r\n\r\n  computerHorizontalLine({\r\n    viewRange,\r\n    bx = 0,\r\n    by = 0,\r\n    filter,\r\n  }) {\r\n    const { getWidth, getHeight } = this;\r\n    const line = [];\r\n    let sx;\r\n    let sy;\r\n    let ex;\r\n    let ey;\r\n    let breakpoint;\r\n    this.horizontalIterate({\r\n      viewRange,\r\n      newRow: (row, y) => {\r\n        const height = getHeight(row);\r\n        sx = bx;\r\n        sy = by + y + height;\r\n        ex = sx;\r\n        ey = sy;\r\n        breakpoint = false;\r\n      },\r\n      filter,\r\n      jump: (row, col) => {\r\n        if (breakpoint) {\r\n          breakpoint = false;\r\n          line.push({ sx, sy, ex, ey });\r\n        }\r\n        const width = getWidth(col);\r\n        sx = ex + width;\r\n        ex = sx;\r\n      },\r\n      handle: (row, col) => {\r\n        breakpoint = true;\r\n        const width = getWidth(col);\r\n        ex += width;\r\n      },\r\n      endRow: () => {\r\n        if (breakpoint) {\r\n          line.push({ sx, sy, ex, ey });\r\n        }\r\n      },\r\n    });\r\n    return line;\r\n  }\r\n\r\n  computerVerticalLine({\r\n    viewRange,\r\n    bx = 0,\r\n    by = 0,\r\n    filter,\r\n  }) {\r\n    const { getWidth, getHeight } = this;\r\n    const line = [];\r\n    let sx;\r\n    let sy;\r\n    let ex;\r\n    let ey;\r\n    let breakpoint;\r\n    this.verticalIterate({\r\n      viewRange,\r\n      newCol: (col, x) => {\r\n        const width = getWidth(col);\r\n        sx = bx + x + width;\r\n        sy = by;\r\n        ex = sx;\r\n        ey = sy;\r\n        breakpoint = false;\r\n      },\r\n      filter,\r\n      jump: (col, row) => {\r\n        if (breakpoint) {\r\n          breakpoint = false;\r\n          line.push({ sx, sy, ex, ey });\r\n        }\r\n        const height = getHeight(row);\r\n        sy = ey + height;\r\n        ey = sy;\r\n      },\r\n      handle: (col, row) => {\r\n        breakpoint = true;\r\n        const height = getHeight(row);\r\n        ey += height;\r\n      },\r\n      endCol: () => {\r\n        if (breakpoint) {\r\n          line.push({ sx, sy, ex, ey });\r\n        }\r\n      },\r\n    });\r\n    return line;\r\n  }\r\n\r\n}\r\n\r\nexport { TableGrid };\r\n","import { LineFilter } from './LineFilter';\r\n\r\nconst ChainLogic = {\r\n  AND: Symbol('and'),\r\n  OR: Symbol('or'),\r\n};\r\n\r\nclass FilterChain extends LineFilter {\r\n\r\n  constructor(logic, chain) {\r\n    // eslint-disable-next-line func-names\r\n    super(function () {\r\n      let result;\r\n      if (logic === ChainLogic.AND) {\r\n        result = true;\r\n        // eslint-disable-next-line no-restricted-syntax\r\n        for (const item of chain) {\r\n          // eslint-disable-next-line prefer-spread,prefer-rest-params\r\n          if (item.execute.apply(item, arguments) === false) {\r\n            result = false;\r\n            break;\r\n          }\r\n        }\r\n      } else {\r\n        result = false;\r\n        // eslint-disable-next-line no-restricted-syntax\r\n        for (const item of chain) {\r\n          // eslint-disable-next-line prefer-spread,prefer-rest-params\r\n          if (item.execute.apply(item, arguments) === true) {\r\n            result = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FilterChain,\r\n  ChainLogic,\r\n};\r\n","import { TableGrid } from './TableGrid';\r\nimport { ChainLogic, FilterChain } from '../filter/FilterChain';\r\n\r\nclass TableHorizontalGrid extends TableGrid {\r\n\r\n  getHorizontalLine({\r\n    viewRange,\r\n  }) {\r\n    const {\r\n      horizontalMergeFilter,\r\n      horizontalBorderDisplayFilter,\r\n      drawCheck,\r\n    } = this;\r\n    let result;\r\n    if (drawCheck) {\r\n      result = this.computerHorizontalLine({\r\n        viewRange,\r\n        filter: new FilterChain(ChainLogic.AND, [\r\n          horizontalMergeFilter,\r\n          horizontalBorderDisplayFilter,\r\n        ]),\r\n      });\r\n    } else {\r\n      result = this.computerHorizontalLine({ viewRange });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getMergeHorizontalLine({\r\n    brink,\r\n  }) {\r\n    let result = [];\r\n    const {\r\n      horizontalBorderDisplayFilter,\r\n      drawCheck,\r\n    } = this;\r\n    if (drawCheck) {\r\n      for (let i = 0; i < brink.length; i += 1) {\r\n        const { bottom } = brink[i];\r\n        if (bottom) {\r\n          const { view, x, y } = bottom;\r\n          const item = this.computerHorizontalLine({\r\n            viewRange: view,\r\n            bx: x,\r\n            by: y,\r\n            filter: horizontalBorderDisplayFilter,\r\n          });\r\n          result = result.concat(item);\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < brink.length; i += 1) {\r\n        const { bottom } = brink[i];\r\n        if (bottom) {\r\n          const { view, x, y } = bottom;\r\n          const item = this.computerHorizontalLine({\r\n            viewRange: view,\r\n            bx: x,\r\n            by: y,\r\n          });\r\n          result = result.concat(item);\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  TableHorizontalGrid,\r\n};\r\n","import { TableGrid } from './TableGrid';\r\nimport { ChainLogic, FilterChain } from '../filter/FilterChain';\r\n\r\nclass TableVerticalGrid extends TableGrid {\r\n\r\n  getVerticalLine({\r\n    viewRange,\r\n  }) {\r\n    const {\r\n      verticalMergeFilter,\r\n      verticalBorderDisplayFilter,\r\n      rightOutRangeFilter,\r\n      drawCheck,\r\n    } = this;\r\n    let result;\r\n    if (drawCheck) {\r\n      result = this.computerVerticalLine({\r\n        viewRange,\r\n        filter: new FilterChain(ChainLogic.AND, [\r\n          verticalMergeFilter,\r\n          verticalBorderDisplayFilter,\r\n          rightOutRangeFilter,\r\n        ]),\r\n      });\r\n    } else {\r\n      result = this.computerVerticalLine({ viewRange });\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getMergeVerticalLine({\r\n    brink,\r\n  }) {\r\n    let result = [];\r\n    const {\r\n      verticalBorderDisplayFilter,\r\n      drawCheck,\r\n    } = this;\r\n    if (drawCheck) {\r\n      for (let i = 0; i < brink.length; i += 1) {\r\n        const { right } = brink[i];\r\n        if (right) {\r\n          const { view, x, y } = right;\r\n          const item = this.computerVerticalLine({\r\n            viewRange: view,\r\n            bx: x,\r\n            by: y,\r\n            filter: verticalBorderDisplayFilter,\r\n          });\r\n          result = result.concat(item);\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < brink.length; i += 1) {\r\n        const { right } = brink[i];\r\n        if (right) {\r\n          const { view, x, y } = right;\r\n          const item = this.computerVerticalLine({\r\n            viewRange: view,\r\n            bx: x,\r\n            by: y,\r\n          });\r\n          result = result.concat(item);\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  TableVerticalGrid,\r\n};\r\n","import { LineFilter } from '../LineFilter';\r\nimport { Utils } from '../../../../../utils/Utils';\r\n\r\nclass BottomBorderDiffFilter extends LineFilter {\r\n\r\n  constructor({\r\n    cells,\r\n  }) {\r\n    super((ri, ci) => {\r\n      const next = cells.getCell(ri + 1, ci);\r\n      const cell = cells.getCell(ri, ci);\r\n      // 当前单元格不存在\r\n      if (Utils.isUnDef(cell)) {\r\n        return false;\r\n      }\r\n      const { bottom } = cell.borderAttr;\r\n      // 对面的单元格不存在\r\n      if (Utils.isUnDef(next)) {\r\n        return bottom.display;\r\n      }\r\n      // 对面的单元格不需要显示\r\n      const { top } = next.borderAttr;\r\n      if (!top.display) {\r\n        return bottom.display;\r\n      }\r\n      // 比较优先级\r\n      const result = bottom.priority(top);\r\n      return result === 1 || result === 0;\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  BottomBorderDiffFilter,\r\n};\r\n","import { LineFilter } from '../LineFilter';\r\nimport { Utils } from '../../../../../utils/Utils';\r\n\r\nclass LeftBorderDiffFilter extends LineFilter {\r\n\r\n  constructor({\r\n    cells,\r\n  }) {\r\n    super((ci, ri) => {\r\n      const next = cells.getCell(ri, ci - 1);\r\n      const cell = cells.getCell(ri, ci);\r\n      // 当前单元格不存在\r\n      if (Utils.isUnDef(cell)) {\r\n        return false;\r\n      }\r\n      const { left } = cell.borderAttr;\r\n      // 对面的单元格不存在\r\n      if (Utils.isUnDef(next)) {\r\n        return left.display;\r\n      }\r\n      // 对面的单元格不需要显示\r\n      const { right } = next.borderAttr;\r\n      if (!right.display) {\r\n        return left.display;\r\n      }\r\n      // 比较优先级\r\n      return left.priority(right) === 1;\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LeftBorderDiffFilter,\r\n};\r\n","import { LineFilter } from '../LineFilter';\r\nimport { Utils } from '../../../../../utils/Utils';\r\n\r\nclass RightBorderDiffFilter extends LineFilter {\r\n\r\n  constructor({\r\n    cells,\r\n  }) {\r\n    super((ci, ri) => {\r\n      const next = cells.getCell(ri, ci + 1);\r\n      const cell = cells.getCell(ri, ci);\r\n      // 当前单元格不存在\r\n      if (Utils.isUnDef(cell)) {\r\n        return false;\r\n      }\r\n      const { right } = cell.borderAttr;\r\n      // 对面的单元格不存在\r\n      if (Utils.isUnDef(next)) {\r\n        return right.display;\r\n      }\r\n      // 对面的单元格不需要显示\r\n      const { left } = next.borderAttr;\r\n      if (!left.display) {\r\n        return right.display;\r\n      }\r\n      // 比较优先级\r\n      const result = right.priority(left);\r\n      return result === 1 || result === 0;\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RightBorderDiffFilter,\r\n};\r\n","import { LineFilter } from '../LineFilter';\r\nimport { Utils } from '../../../../../utils/Utils';\r\n\r\nclass TopBorderDiffFilter extends LineFilter {\r\n\r\n  constructor({\r\n    cells,\r\n  }) {\r\n    super((ri, ci) => {\r\n      const next = cells.getCell(ri - 1, ci);\r\n      const cell = cells.getCell(ri, ci);\r\n      // 当前单元格不存在\r\n      if (Utils.isUnDef(cell)) {\r\n        return false;\r\n      }\r\n      const { top } = cell.borderAttr;\r\n      // 对面的单元格不存在\r\n      if (Utils.isUnDef(next)) {\r\n        return top.display;\r\n      }\r\n      // 对面的单元格不需要显示\r\n      const { bottom } = next.borderAttr;\r\n      if (!bottom.display) {\r\n        return top.display;\r\n      }\r\n      // 比较优先级\r\n      return top.priority(bottom) === 1;\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  TopBorderDiffFilter,\r\n};\r\n","import { BaseLine } from '../BaseLine';\r\nimport { HorizontalMergeFilter } from '../filter/mege/HorizontalMergeFilter';\r\nimport { VerticalMergeFilter } from '../filter/mege/VerticalMergeFilter';\r\nimport { BottomBorderDiffFilter } from '../filter/borderdiff/BottomBorderDiffFilter';\r\nimport { LeftBorderDiffFilter } from '../filter/borderdiff/LeftBorderDiffFilter';\r\nimport { RightBorderDiffFilter } from '../filter/borderdiff/RightBorderDiffFilter';\r\nimport { TopBorderDiffFilter } from '../filter/borderdiff/TopBorderDiffFilter';\r\n\r\nclass TableBorder extends BaseLine {\r\n\r\n  constructor({\r\n    drawOptimization = false,\r\n    merges,\r\n    rows,\r\n    cols,\r\n    cells,\r\n  }) {\r\n    super({\r\n      merges,\r\n      rows,\r\n      cols,\r\n      cells,\r\n    });\r\n    this.drawOptimization = drawOptimization;\r\n    this.horizontalMergeFilter = new HorizontalMergeFilter({ merges });\r\n    this.verticalMergeFilter = new VerticalMergeFilter({ merges });\r\n    this.bottomBorderDiffFilter = new BottomBorderDiffFilter({ cells });\r\n    this.leftBorderDiffFilter = new LeftBorderDiffFilter({ cells });\r\n    this.rightBorderDiffFilter = new RightBorderDiffFilter({ cells });\r\n    this.topBorderDiffFilter = new TopBorderDiffFilter({ cells });\r\n  }\r\n\r\n  computerTopHorizontalLine({\r\n    viewRange = null,\r\n    bx = 0,\r\n    by = 0,\r\n    filter = null,\r\n  }) {\r\n    const { drawOptimization } = this;\r\n    const { cols, cells } = this;\r\n    const line = [];\r\n    let sx;\r\n    let sy;\r\n    let ex;\r\n    let ey;\r\n    this.horizontalIterate({\r\n      viewRange,\r\n      newRow: (row, y) => {\r\n        sx = bx;\r\n        sy = by + y;\r\n        ex = sx;\r\n        ey = sy;\r\n      },\r\n      filter,\r\n      jump: (row, col) => {\r\n        const width = cols.getWidth(col);\r\n        sx = ex + width;\r\n        ex = sx;\r\n      },\r\n      handle: (row, col) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        ex += width;\r\n        line.push({ sx, sy, ex, ey, row, col, borderAttr });\r\n        sx = ex;\r\n      },\r\n    });\r\n    if (drawOptimization) {\r\n      for (let i = 1; i < line.length;) {\r\n        const item = line[i];\r\n        const last = line[i - 1];\r\n        const ck1 = item.borderAttr.top.equal(last.borderAttr.top);\r\n        const ck2 = item.col - last.col === 1;\r\n        const ck3 = item.row === last.row;\r\n        if (ck1 && ck2 && ck3) {\r\n          last.ex = item.ex;\r\n          last.col = item.col;\r\n          line.splice(i, 1);\r\n        } else {\r\n          i += 1;\r\n        }\r\n      }\r\n    }\r\n    return line;\r\n  }\r\n\r\n  computerBottomHorizontalLine({\r\n    viewRange = null,\r\n    bx = 0,\r\n    by = 0,\r\n    filter = null,\r\n  }) {\r\n    const { drawOptimization } = this;\r\n    const { cols, rows, cells } = this;\r\n    const line = [];\r\n    let sx;\r\n    let sy;\r\n    let ex;\r\n    let ey;\r\n    this.horizontalIterate({\r\n      viewRange,\r\n      newRow: (row, y) => {\r\n        const height = rows.getHeight(row);\r\n        sx = bx;\r\n        sy = by + y + height;\r\n        ex = sx;\r\n        ey = sy;\r\n      },\r\n      filter,\r\n      jump: (row, col) => {\r\n        const width = cols.getWidth(col);\r\n        sx = ex + width;\r\n        ex = sx;\r\n      },\r\n      handle: (row, col) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        ex += width;\r\n        line.push({ sx, sy, ex, ey, row, col, borderAttr });\r\n        sx = ex;\r\n      },\r\n    });\r\n    if (drawOptimization) {\r\n      for (let i = 1; i < line.length;) {\r\n        const item = line[i];\r\n        const last = line[i - 1];\r\n        const ck1 = item.borderAttr.bottom.equal(last.borderAttr.bottom);\r\n        const ck2 = item.col - last.col === 1;\r\n        const ck3 = item.row === last.row;\r\n        if (ck1 && ck2 && ck3) {\r\n          last.ex = item.ex;\r\n          last.col = item.col;\r\n          line.splice(i, 1);\r\n        } else {\r\n          i += 1;\r\n        }\r\n      }\r\n    }\r\n    return line;\r\n  }\r\n\r\n  computerLeftVerticalLine({\r\n    viewRange = null,\r\n    bx = 0,\r\n    by = 0,\r\n    filter = null,\r\n  }) {\r\n    const { drawOptimization } = this;\r\n    const { rows, cells } = this;\r\n    const line = [];\r\n    let sx;\r\n    let sy;\r\n    let ex;\r\n    let ey;\r\n    this.verticalIterate({\r\n      viewRange,\r\n      newCol: (col, x) => {\r\n        sx = bx + x;\r\n        sy = by;\r\n        ex = sx;\r\n        ey = sy;\r\n      },\r\n      filter,\r\n      jump: (col, row) => {\r\n        const height = rows.getHeight(row);\r\n        sy = ey + height;\r\n        ey = sy;\r\n      },\r\n      handle: (col, row) => {\r\n        const height = rows.getHeight(row);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        ey += height;\r\n        line.push({ sx, sy, ex, ey, row, col, borderAttr });\r\n        sy = ey;\r\n      },\r\n    });\r\n    if (drawOptimization) {\r\n      for (let i = 1; i < line.length;) {\r\n        const item = line[i];\r\n        const last = line[i - 1];\r\n        const ck1 = item.borderAttr.left.equal(last.borderAttr.left);\r\n        const ck2 = item.row - last.row === 1;\r\n        const ck3 = item.col === last.col;\r\n        if (ck1 && ck2 && ck3) {\r\n          last.ey = item.ey;\r\n          last.row = item.row;\r\n          line.splice(i, 1);\r\n        } else {\r\n          i += 1;\r\n        }\r\n      }\r\n    }\r\n    return line;\r\n  }\r\n\r\n  computerRightVerticalLine({\r\n    viewRange = null,\r\n    bx = 0,\r\n    by = 0,\r\n    filter = null,\r\n  }) {\r\n    const { drawOptimization } = this;\r\n    const { rows, cols, cells } = this;\r\n    const line = [];\r\n    let sx;\r\n    let sy;\r\n    let ex;\r\n    let ey;\r\n    this.verticalIterate({\r\n      viewRange,\r\n      newCol: (col, x) => {\r\n        const width = cols.getWidth(col);\r\n        sx = bx + x + width;\r\n        sy = by;\r\n        ex = sx;\r\n        ey = sy;\r\n      },\r\n      filter,\r\n      jump: (col, row) => {\r\n        const height = rows.getHeight(row);\r\n        sy = ey + height;\r\n        ey = sy;\r\n      },\r\n      handle: (col, row) => {\r\n        const height = rows.getHeight(row);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        ey += height;\r\n        line.push({ sx, sy, ex, ey, row, col, borderAttr });\r\n        sy = ey;\r\n      },\r\n    });\r\n    if (drawOptimization) {\r\n      for (let i = 1; i < line.length;) {\r\n        const item = line[i];\r\n        const last = line[i - 1];\r\n        const ck1 = item.borderAttr.right.equal(last.borderAttr.right);\r\n        const ck2 = item.row - last.row === 1;\r\n        const ck3 = item.col === last.col;\r\n        if (ck1 && ck2 && ck3) {\r\n          last.ey = item.ey;\r\n          last.row = item.row;\r\n          line.splice(i, 1);\r\n        } else {\r\n          i += 1;\r\n        }\r\n      }\r\n    }\r\n    return line;\r\n  }\r\n\r\n  disableOptimization() {\r\n    this.drawOptimization = false;\r\n  }\r\n\r\n  enableOptimization() {\r\n    this.drawOptimization = true;\r\n  }\r\n\r\n}\r\n\r\nexport { TableBorder };\r\n","import { TableBorder } from './TableBorder';\r\nimport { ChainLogic, FilterChain } from '../filter/FilterChain';\r\n\r\nclass TableHorizontalBorder extends TableBorder {\r\n\r\n  getBottomHorizontalLine({\r\n    viewRange,\r\n  }) {\r\n    const {\r\n      horizontalMergeFilter,\r\n      bottomBorderDiffFilter,\r\n    } = this;\r\n    return this.computerBottomHorizontalLine({\r\n      viewRange,\r\n      filter: new FilterChain(ChainLogic.AND, [\r\n        horizontalMergeFilter,\r\n        bottomBorderDiffFilter,\r\n      ]),\r\n    });\r\n  }\r\n\r\n  getTopHorizontalLine({\r\n    viewRange,\r\n  }) {\r\n    const {\r\n      horizontalMergeFilter,\r\n      topBorderDiffFilter,\r\n    } = this;\r\n    return this.computerTopHorizontalLine({\r\n      viewRange,\r\n      filter: new FilterChain(ChainLogic.AND, [\r\n        horizontalMergeFilter,\r\n        topBorderDiffFilter,\r\n      ]),\r\n    });\r\n  }\r\n\r\n  getBottomMergeHorizontalLine({\r\n    brink,\r\n  }) {\r\n    const {\r\n      bottomBorderDiffFilter,\r\n    } = this;\r\n    let result = [];\r\n    for (let i = 0; i < brink.length; i += 1) {\r\n      const { bottom } = brink[i];\r\n      if (bottom) {\r\n        const item = this.computerBottomHorizontalLine({\r\n          viewRange: bottom.view,\r\n          bx: bottom.x,\r\n          by: bottom.y,\r\n          filter: bottomBorderDiffFilter,\r\n        });\r\n        result = result.concat(item);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getTopMergeHorizontalLine({\r\n    brink,\r\n  }) {\r\n    const {\r\n      topBorderDiffFilter,\r\n    } = this;\r\n    let result = [];\r\n    for (let i = 0; i < brink.length; i += 1) {\r\n      const { top } = brink[i];\r\n      if (top) {\r\n        const item = this.computerTopHorizontalLine({\r\n          viewRange: top.view,\r\n          bx: top.x,\r\n          by: top.y,\r\n          filter: topBorderDiffFilter,\r\n        });\r\n        result = result.concat(item);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  TableHorizontalBorder,\r\n};\r\n","import { TableBorder } from './TableBorder';\r\nimport { ChainLogic, FilterChain } from '../filter/FilterChain';\r\n\r\nclass TableVerticalBorder extends TableBorder {\r\n\r\n  getRightVerticalLine({\r\n    viewRange,\r\n  }) {\r\n    const {\r\n      verticalMergeFilter,\r\n      rightBorderDiffFilter,\r\n      rightOutRangeFilter,\r\n    } = this;\r\n    return this.computerRightVerticalLine({\r\n      viewRange,\r\n      filter: new FilterChain(ChainLogic.AND, [\r\n        verticalMergeFilter,\r\n        rightBorderDiffFilter,\r\n        rightOutRangeFilter,\r\n      ]),\r\n    });\r\n  }\r\n\r\n  getLeftVerticalLine({\r\n    viewRange,\r\n  }) {\r\n    const {\r\n      verticalMergeFilter,\r\n      leftBorderDiffFilter,\r\n      leftOutRangeFilter,\r\n    } = this;\r\n    return this.computerLeftVerticalLine({\r\n      viewRange,\r\n      filter: new FilterChain(ChainLogic.AND, [\r\n        verticalMergeFilter,\r\n        leftBorderDiffFilter,\r\n        leftOutRangeFilter,\r\n      ]),\r\n    });\r\n  }\r\n\r\n  getRightMergeVerticalLine({\r\n    brink,\r\n  }) {\r\n    const {\r\n      rightBorderDiffFilter,\r\n    } = this;\r\n    let result = [];\r\n    for (let i = 0; i < brink.length; i += 1) {\r\n      const { right } = brink[i];\r\n      if (right) {\r\n        const item = this.computerRightVerticalLine({\r\n          viewRange: right.view,\r\n          bx: right.x,\r\n          by: right.y,\r\n          filter: rightBorderDiffFilter,\r\n        });\r\n        result = result.concat(item);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getLeftMergeVerticalLine({\r\n    brink,\r\n  }) {\r\n    const {\r\n      leftBorderDiffFilter,\r\n    } = this;\r\n    let result = [];\r\n    for (let i = 0; i < brink.length; i += 1) {\r\n      const { left } = brink[i];\r\n      if (left) {\r\n        const item = this.computerLeftVerticalLine({\r\n          viewRange: left.view,\r\n          bx: left.x,\r\n          by: left.y,\r\n          filter: leftBorderDiffFilter,\r\n        });\r\n        result = result.concat(item);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  TableVerticalBorder,\r\n};\r\n","import { BaseCellsHelper } from './BaseCellsHelper';\r\nimport { RectRange } from '../tablebase/RectRange';\r\n\r\nclass OperateCellsHelper extends BaseCellsHelper {\r\n\r\n  getCellOrNewCellByViewRange({\r\n    rectRange = new RectRange(-1, -1, -1, -1),\r\n    callback = () => {},\r\n  }) {\r\n    const { cells } = this;\r\n    const {\r\n      sri, eri, sci, eci,\r\n    } = rectRange;\r\n    for (let i = sri; i <= eri; i += 1) {\r\n      for (let j = sci; j <= eci; j += 1) {\r\n        const cell = cells.getCellOrNew(i, j);\r\n        callback(i, j, cell);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  OperateCellsHelper,\r\n};\r\n","import { Utils } from '../../utils/Utils';\r\nimport { SCROLL_TYPE } from './tablebase/Scroll';\r\nimport { XTableAreaView } from './XTableAreaView';\r\n\r\n/**\r\n * XTableHistoryAreaView\r\n */\r\nclass XTableHistoryAreaView extends XTableAreaView {\r\n\r\n  /**\r\n   * XTableHistoryAreaView\r\n   * @param xTableScrollView\r\n   * @param rows\r\n   * @param cols\r\n   * @param scroll\r\n   */\r\n  constructor({\r\n    xTableScrollView,\r\n    rows,\r\n    cols,\r\n    scroll,\r\n  }) {\r\n    super({\r\n      xTableScrollView,\r\n      rows,\r\n      cols,\r\n      scroll,\r\n    });\r\n    this.lastScrollView = null;\r\n    this.enterView = null;\r\n    this.scrollEnterView = null;\r\n    this.leaveView = null;\r\n  }\r\n\r\n  /**\r\n   * 重置变量区\r\n   */\r\n  reset() {\r\n    super.reset();\r\n    this.scrollEnterView = null;\r\n    this.enterView = null;\r\n    this.leaveView = null;\r\n  }\r\n\r\n  /**\r\n   * 获取上一次滚动的视图区域\r\n   * @returns {null|RectRange}\r\n   */\r\n  getLastScrollView() {\r\n    if (Utils.isNotUnDef(this.lastScrollView)) {\r\n      return this.lastScrollView.clone();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 获取滚动离开的视图区域\r\n   * @returns {null|RectRange}\r\n   */\r\n  getLeaveView() {\r\n    if (Utils.isNotUnDef(this.leaveView)) {\r\n      return this.leaveView.clone();\r\n    }\r\n    const lastScrollView = this.getLastScrollView();\r\n    const scrollView = this.getScrollView();\r\n    const { cols, rows } = this;\r\n    if (lastScrollView) {\r\n      const [leaveView] = lastScrollView.coincideDifference(scrollView);\r\n      if (leaveView) {\r\n        leaveView.w = cols.rectRangeSumWidth(leaveView);\r\n        leaveView.h = rows.rectRangeSumHeight(leaveView);\r\n        this.leaveView = leaveView;\r\n        return leaveView.clone();\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 获取滚动进入的视图区域\r\n   * @returns {null|RectRange}\r\n   */\r\n  getEnterView() {\r\n    if (Utils.isNotUnDef(this.enterView)) {\r\n      return this.enterView.clone();\r\n    }\r\n    const lastScrollView = this.getLastScrollView();\r\n    const scrollView = this.getScrollView();\r\n    const { cols, rows } = this;\r\n    if (lastScrollView) {\r\n      const [enterView] = scrollView.coincideDifference(lastScrollView);\r\n      if (enterView) {\r\n        enterView.w = cols.rectRangeSumWidth(enterView);\r\n        enterView.h = rows.rectRangeSumHeight(enterView);\r\n        this.enterView = enterView;\r\n        return enterView.clone();\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 获取滚动进入的视图区域\r\n   * @returns {null|RectRange}\r\n   */\r\n  getScrollEnterView() {\r\n    if (Utils.isNotUnDef(this.scrollEnterView)) {\r\n      return this.scrollEnterView.clone();\r\n    }\r\n    const { cols, rows, scroll } = this;\r\n    const enterView = this.getEnterView();\r\n    if (enterView) {\r\n      switch (scroll.type) {\r\n        case SCROLL_TYPE.H_RIGHT: {\r\n          enterView.sci -= 1;\r\n          break;\r\n        }\r\n        case SCROLL_TYPE.V_BOTTOM: {\r\n          enterView.sri -= 1;\r\n          break;\r\n        }\r\n        case SCROLL_TYPE.H_LEFT: {\r\n          enterView.eci += 1;\r\n          break;\r\n        }\r\n        case SCROLL_TYPE.V_TOP: {\r\n          enterView.eri += 1;\r\n          break;\r\n        }\r\n      }\r\n      enterView.w = cols.rectRangeSumWidth(enterView);\r\n      enterView.h = rows.rectRangeSumHeight(enterView);\r\n      this.scrollEnterView = enterView;\r\n      return enterView.clone();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 清空上一次视图记录\r\n   */\r\n  undo() {\r\n    this.lastScrollView = null;\r\n  }\r\n\r\n  /**\r\n   * 记录上一次视图\r\n   */\r\n  record() {\r\n    this.lastScrollView = this.scrollView;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableHistoryAreaView,\r\n};\r\n","import { Utils } from '../../utils/Utils';\r\nimport { Rows } from './tablebase/Rows';\r\nimport { Cols } from './tablebase/Cols';\r\nimport { SCROLL_TYPE } from './tablebase/Scroll';\r\nimport { Widget } from '../../lib/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { XDraw } from '../../canvas/XDraw';\r\nimport { Line, LINE_TYPE } from '../../canvas/Line';\r\nimport { Grid } from '../../canvas/Grid';\r\nimport { Crop } from '../../canvas/Crop';\r\nimport { Rect } from '../../canvas/Rect';\r\nimport XTableFormat from './XTableFormat';\r\nimport { Box } from '../../canvas/Box';\r\nimport { RectRange } from './tablebase/RectRange';\r\nimport { Cells } from './tablecell/Cells';\r\nimport { Scale, ScaleAdapter } from './tablebase/Scale';\r\nimport { Code } from './tablebase/Code';\r\nimport { Text } from './tablebase/Text';\r\nimport { StyleCellsHelper } from './helper/StyleCellsHelper';\r\nimport { BREAK_LOOP, TextCellsHelper } from './helper/TextCellsHelper';\r\nimport { Merges } from './tablebase/Merges';\r\nimport {\r\n  TableDataSnapshot,\r\n} from './datasnapshot/TableDataSnapshot';\r\nimport { TableHorizontalGrid } from './linehandle/grid/TableHorizontalGrid';\r\nimport { TableVerticalGrid } from './linehandle/grid/TableVerticalGrid';\r\nimport { TableHorizontalBorder } from './linehandle/border/TableHorizontalBorder';\r\nimport { TableVerticalBorder } from './linehandle/border/TableVerticalBorder';\r\nimport { ChainLogic, FilterChain } from './linehandle/filter/FilterChain';\r\nimport { LineFilter } from './linehandle/filter/LineFilter';\r\nimport { LeftOutRangeFilter } from './linehandle/filter/outrange/LeftOutRangeFilter';\r\nimport { RightOutRangeFilter } from './linehandle/filter/outrange/RightOutRangeFilter';\r\nimport { OperateCellsHelper } from './helper/OperateCellsHelper';\r\nimport { BaseFont } from '../../canvas/font/BaseFont';\r\nimport { XTableHistoryAreaView } from './XTableHistoryAreaView';\r\nimport { VIEW_MODE, XTableScrollView } from './XTableScrollView';\r\n\r\nconst RENDER_MODE = {\r\n  SCROLL: Symbol('scroll'),\r\n  RENDER: Symbol('render'),\r\n  SCALE: Symbol('scale'),\r\n};\r\n\r\n// =============================== 表格绘制抽象类 ==============================\r\n\r\nclass XTableUI {\r\n\r\n  /**\r\n   * XTableUI\r\n   * @param table\r\n   */\r\n  constructor(table) {\r\n    this.table = table;\r\n    this.width = null;\r\n    this.height = null;\r\n    this.x = null;\r\n    this.y = null;\r\n    this.drawX = null;\r\n    this.drawY = null;\r\n    this.mapOriginX = null;\r\n    this.mapOriginY = null;\r\n    this.mapTargetX = null;\r\n    this.mapTargetY = null;\r\n    this.mapWidth = null;\r\n    this.mapHeight = null;\r\n    this.fullScrollView = null;\r\n    this.scrollView = null;\r\n    this.borderView = null;\r\n    this.borderX = null;\r\n    this.borderY = null;\r\n    this.viewMode = null;\r\n  }\r\n\r\n  /**\r\n   * 重置变量区\r\n   */\r\n  reset() {\r\n    this.width = null;\r\n    this.height = null;\r\n    this.x = null;\r\n    this.y = null;\r\n    this.drawX = null;\r\n    this.drawY = null;\r\n    this.mapOriginX = null;\r\n    this.mapOriginY = null;\r\n    this.mapTargetX = null;\r\n    this.mapTargetY = null;\r\n    this.mapWidth = null;\r\n    this.mapHeight = null;\r\n    this.fullScrollView = null;\r\n    this.scrollView = null;\r\n    this.borderView = null;\r\n    this.borderX = null;\r\n    this.borderY = null;\r\n    this.viewMode = null;\r\n  }\r\n\r\n  /**\r\n   * 绘制区域宽度\r\n   * @returns {number}\r\n   */\r\n  getWidth() {\r\n    throw new TypeError('getWidth child impl');\r\n  }\r\n\r\n  /**\r\n   * 绘制区域高度\r\n   * @returns {number}\r\n   */\r\n  getHeight() {\r\n    throw new TypeError('getHeight child impl');\r\n  }\r\n\r\n  /**\r\n   * 绘制区域的X坐标\r\n   * @returns {number}\r\n   */\r\n  getX() {\r\n    throw new TypeError('getX child impl');\r\n  }\r\n\r\n  /**\r\n   * 绘制区域Y坐标\r\n   * @returns {number}\r\n   */\r\n  getY() {\r\n    throw new TypeError('getY child impl');\r\n  }\r\n\r\n  /**\r\n   * 绘制内容的X坐标\r\n   */\r\n  getDrawX() {\r\n    if (Utils.isNumber(this.drawX)) {\r\n      return this.drawX;\r\n    }\r\n    const { table } = this;\r\n    const x = this.getX();\r\n    if (table.getRenderMode() === RENDER_MODE.RENDER) {\r\n      this.drawX = x;\r\n      return x;\r\n    }\r\n    if (table.getRenderMode() === RENDER_MODE.SCALE) {\r\n      this.drawX = x;\r\n      return x;\r\n    }\r\n    if (this.getViewMode() === VIEW_MODE.BOUND_OUT) {\r\n      this.drawX = x;\r\n      return x;\r\n    }\r\n    if (this.getViewMode() === VIEW_MODE.CHANGE_NOT) {\r\n      this.drawX = x;\r\n      return x;\r\n    }\r\n    const { scroll } = table;\r\n    const scrollView = this.getScrollView();\r\n    const fullScrollView = this.getFullScrollView();\r\n    let drawX = 0;\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.H_RIGHT: {\r\n        drawX = fullScrollView.w - scrollView.w;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.H_LEFT: {\r\n        drawX = 0;\r\n        break;\r\n      }\r\n    }\r\n    drawX = x + drawX;\r\n    this.drawX = drawX;\r\n    return drawX;\r\n  }\r\n\r\n  /**\r\n   * 绘制内容的Y坐标\r\n   */\r\n  getDrawY() {\r\n    if (Utils.isNumber(this.drawY)) {\r\n      return this.drawY;\r\n    }\r\n    const { table } = this;\r\n    const y = this.getY();\r\n    if (table.getRenderMode() === RENDER_MODE.RENDER) {\r\n      this.drawY = y;\r\n      return y;\r\n    }\r\n    if (table.getRenderMode() === RENDER_MODE.SCALE) {\r\n      this.drawY = y;\r\n      return y;\r\n    }\r\n    if (this.getViewMode() === VIEW_MODE.BOUND_OUT) {\r\n      this.drawY = y;\r\n      return y;\r\n    }\r\n    if (this.getViewMode() === VIEW_MODE.CHANGE_NOT) {\r\n      this.drawY = y;\r\n      return y;\r\n    }\r\n    const { scroll } = table;\r\n    const scrollView = this.getScrollView();\r\n    const fullScrollView = this.getFullScrollView();\r\n    let drawY = 0;\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.V_BOTTOM: {\r\n        drawY = fullScrollView.h - scrollView.h;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.V_TOP: {\r\n        drawY = 0;\r\n        break;\r\n      }\r\n    }\r\n    drawY = y + drawY;\r\n    this.drawY = drawY;\r\n    return drawY;\r\n  }\r\n\r\n  /**\r\n   * 绘制边框&网格的X坐标\r\n   */\r\n  getLineX() {\r\n    if (Utils.isNumber(this.borderX)) {\r\n      return this.borderX;\r\n    }\r\n    const { table } = this;\r\n    const x = this.getX();\r\n    if (table.getRenderMode() === RENDER_MODE.RENDER) {\r\n      this.borderX = x;\r\n      return x;\r\n    }\r\n    if (table.getRenderMode() === RENDER_MODE.SCALE) {\r\n      this.borderX = x;\r\n      return x;\r\n    }\r\n    if (this.getViewMode() === VIEW_MODE.BOUND_OUT) {\r\n      this.borderX = x;\r\n      return x;\r\n    }\r\n    if (this.getViewMode() === VIEW_MODE.CHANGE_NOT) {\r\n      this.borderX = x;\r\n      return x;\r\n    }\r\n    const { scroll } = table;\r\n    let borderX = 0;\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.H_RIGHT: {\r\n        const borderView = this.getLineView();\r\n        const fullScrollView = this.getFullScrollView();\r\n        borderX = fullScrollView.w - borderView.w;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.H_LEFT: {\r\n        borderX = 0;\r\n        break;\r\n      }\r\n    }\r\n    borderX = x + borderX;\r\n    this.borderX = borderX;\r\n    return borderX;\r\n  }\r\n\r\n  /**\r\n   * 绘制边框 & 网格的Y坐标\r\n   */\r\n  getLineY() {\r\n    if (Utils.isNumber(this.borderY)) {\r\n      return this.borderY;\r\n    }\r\n    const { table } = this;\r\n    const y = this.getY();\r\n    if (table.getRenderMode() === RENDER_MODE.RENDER) {\r\n      this.borderY = y;\r\n      return y;\r\n    }\r\n    if (table.getRenderMode() === RENDER_MODE.SCALE) {\r\n      this.borderY = y;\r\n      return y;\r\n    }\r\n    if (this.getViewMode() === VIEW_MODE.BOUND_OUT) {\r\n      this.borderY = y;\r\n      return y;\r\n    }\r\n    if (this.getViewMode() === VIEW_MODE.CHANGE_NOT) {\r\n      this.borderY = y;\r\n      return y;\r\n    }\r\n    const { scroll } = table;\r\n    let borderY = 0;\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.V_BOTTOM: {\r\n        const borderView = this.getLineView();\r\n        const fullScrollView = this.getFullScrollView();\r\n        borderY = fullScrollView.h - borderView.h;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.V_TOP: {\r\n        borderY = 0;\r\n        break;\r\n      }\r\n    }\r\n    borderY = y + borderY;\r\n    this.borderY = borderY;\r\n    return borderY;\r\n  }\r\n\r\n  /**\r\n   * 绘制贴图的原始X坐标\r\n   */\r\n  getMapOriginX() {\r\n    if (Utils.isNumber(this.mapOriginX)) {\r\n      return this.mapOriginX;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { scroll } = table;\r\n    const x = this.getX();\r\n    let mapOriginX = 0;\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.H_LEFT: {\r\n        mapOriginX = 0;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.H_RIGHT: {\r\n        const leaveView = xTableAreaView.getLeaveView();\r\n        mapOriginX = leaveView.w;\r\n        break;\r\n      }\r\n    }\r\n    mapOriginX = x + mapOriginX;\r\n    this.mapOriginX = mapOriginX;\r\n    return mapOriginX;\r\n  }\r\n\r\n  /**\r\n   * 绘制贴图的原始Y坐标\r\n   */\r\n  getMapOriginY() {\r\n    if (Utils.isNumber(this.mapOriginY)) {\r\n      return this.mapOriginY;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { scroll } = table;\r\n    const y = this.getY();\r\n    let mapOriginY = 0;\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.V_TOP: {\r\n        mapOriginY = 0;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.V_BOTTOM: {\r\n        const leaveView = xTableAreaView.getLeaveView();\r\n        mapOriginY = leaveView.h;\r\n        break;\r\n      }\r\n    }\r\n    mapOriginY = y + mapOriginY;\r\n    this.mapOriginY = mapOriginY;\r\n    return mapOriginY;\r\n  }\r\n\r\n  /**\r\n   * 绘制贴图的目标X坐标\r\n   */\r\n  getMapTargetX() {\r\n    if (Utils.isNumber(this.mapTargetX)) {\r\n      return this.mapTargetX;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { scroll } = table;\r\n    const x = this.getX();\r\n    let mapTargetX = 0;\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.H_LEFT: {\r\n        const enterView = xTableAreaView.getEnterView();\r\n        mapTargetX = enterView.w;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.H_RIGHT: {\r\n        mapTargetX = 0;\r\n        break;\r\n      }\r\n    }\r\n    mapTargetX = x + mapTargetX;\r\n    this.mapTargetX = mapTargetX;\r\n    return mapTargetX;\r\n  }\r\n\r\n  /**\r\n   * 绘制贴图的目标X坐标\r\n   */\r\n  getMapTargetY() {\r\n    if (Utils.isNumber(this.mapTargetY)) {\r\n      return this.mapTargetY;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { scroll } = table;\r\n    const y = this.getY();\r\n    let mapTargetY = 0;\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.V_TOP: {\r\n        const enterView = xTableAreaView.getEnterView();\r\n        mapTargetY = enterView.h;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.V_BOTTOM: {\r\n        mapTargetY = 0;\r\n        break;\r\n      }\r\n    }\r\n    mapTargetY = y + mapTargetY;\r\n    this.mapTargetY = mapTargetY;\r\n    return mapTargetY;\r\n  }\r\n\r\n  /**\r\n   * 绘制贴图的宽度\r\n   * @returns {number}\r\n   */\r\n  getMapWidth() {\r\n    if (Utils.isNumber(this.mapWidth)) {\r\n      return this.mapWidth;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { scroll } = table;\r\n    let mapWidth = this.getWidth();\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.H_RIGHT: {\r\n        const leaveView = xTableAreaView.getLeaveView();\r\n        mapWidth -= leaveView.w;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.H_LEFT: {\r\n        const enterView = xTableAreaView.getEnterView();\r\n        mapWidth -= enterView.w;\r\n        break;\r\n      }\r\n    }\r\n    this.mapWidth = mapWidth;\r\n    return mapWidth;\r\n  }\r\n\r\n  /**\r\n   * 绘制贴图的高度\r\n   * @returns {number}\r\n   */\r\n  getMapHeight() {\r\n    if (Utils.isNumber(this.mapHeight)) {\r\n      return this.mapHeight;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { scroll } = table;\r\n    let mapHeight = this.getHeight();\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.V_BOTTOM: {\r\n        const leaveView = xTableAreaView.getLeaveView();\r\n        mapHeight -= leaveView.h;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.V_TOP: {\r\n        const enterView = xTableAreaView.getEnterView();\r\n        mapHeight -= enterView.h;\r\n        break;\r\n      }\r\n    }\r\n    this.mapHeight = mapHeight;\r\n    return mapHeight;\r\n  }\r\n\r\n  /**\r\n   * 滚动区域\r\n   * 网格和背景颜色的绘制区域\r\n   * @returns {RectRange}\r\n   */\r\n  getScrollView() {\r\n    throw new TypeError('getScrollView child impl');\r\n  }\r\n\r\n  /**\r\n   * 完整的滚动区域\r\n   * @returns {RectRange}\r\n   */\r\n  getFullScrollView() {\r\n    throw new TypeError('getFullScrollView child impl');\r\n  }\r\n\r\n  /**\r\n   * 边框&网格绘制区域\r\n   * @returns {RectRange}\r\n   */\r\n  getLineView() {\r\n    if (Utils.isNotUnDef(this.borderView)) {\r\n      return this.borderView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { cols, rows } = table;\r\n    const renderMode = table.getRenderMode();\r\n    const viewMode = this.getViewMode();\r\n    const scrollView = this.getScrollView();\r\n    if (viewMode === VIEW_MODE.CHANGE_ADD && renderMode === RENDER_MODE.SCROLL) {\r\n      const { scroll } = table;\r\n      switch (scroll.type) {\r\n        case SCROLL_TYPE.V_TOP: {\r\n          scrollView.eri += 1;\r\n          scrollView.h = rows.rectRangeSumHeight(scrollView);\r\n          break;\r\n        }\r\n        case SCROLL_TYPE.V_BOTTOM: {\r\n          scrollView.sri -= 1;\r\n          scrollView.h = rows.rectRangeSumHeight(scrollView);\r\n          break;\r\n        }\r\n        case SCROLL_TYPE.H_RIGHT: {\r\n          scrollView.sci -= 1;\r\n          scrollView.w = cols.rectRangeSumWidth(scrollView);\r\n          break;\r\n        }\r\n        case SCROLL_TYPE.H_LEFT: {\r\n          scrollView.eci += 1;\r\n          scrollView.w = cols.rectRangeSumWidth(scrollView);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.borderView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n  /**\r\n   * 视图模式\r\n   * @return {symbol}\r\n   */\r\n  getViewMode() {\r\n    throw new TypeError('getViewMode child impl');\r\n  }\r\n\r\n  /**\r\n   * 绘制贴图\r\n   */\r\n  drawMap() {\r\n    const { table } = this;\r\n    const renderMode = table.getRenderMode();\r\n    const viewMode = this.getViewMode();\r\n    if (viewMode === VIEW_MODE.CHANGE_ADD && renderMode === RENDER_MODE.SCROLL) {\r\n      const {\r\n        draw, el,\r\n      } = table;\r\n      const mapWidth = this.getMapWidth();\r\n      const mapHeight = this.getMapHeight();\r\n      const ox = this.getMapOriginX();\r\n      const oy = this.getMapOriginY();\r\n      const tx = this.getMapTargetX();\r\n      const ty = this.getMapTargetY();\r\n      draw.drawImage(el, ox, oy, mapWidth, mapHeight,\r\n        tx, ty, mapWidth, mapHeight);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清空重新绘制区域\r\n   */\r\n  drawClear() {\r\n    const { table } = this;\r\n    const {\r\n      scroll, draw, settings,\r\n    } = table;\r\n    const viewMode = this.getViewMode();\r\n    const renderMode = table.getRenderMode();\r\n    const dx = this.getDrawX();\r\n    const dy = this.getDrawY();\r\n    draw.attr({\r\n      fillStyle: settings.table.background,\r\n    });\r\n    if (renderMode === RENDER_MODE.SCROLL) {\r\n      switch (viewMode) {\r\n        case VIEW_MODE.CHANGE_NOT:\r\n        case VIEW_MODE.STATIC:\r\n        case VIEW_MODE.BOUND_OUT: {\r\n          const height = this.getHeight();\r\n          const width = this.getWidth();\r\n          draw.fillRect(dx, dy, width, height);\r\n          break;\r\n        }\r\n        case VIEW_MODE.CHANGE_ADD: {\r\n          switch (scroll.type) {\r\n            case SCROLL_TYPE.V_BOTTOM: {\r\n              const fullScrollView = this.getFullScrollView();\r\n              const scrollView = this.getScrollView();\r\n              const height = table.visualHeight() - (fullScrollView.h - scrollView.h);\r\n              const width = this.getWidth();\r\n              draw.fillRect(dx, dy, width, height);\r\n              break;\r\n            }\r\n            case SCROLL_TYPE.V_TOP: {\r\n              const scrollView = this.getScrollView();\r\n              const height = scrollView.h;\r\n              const width = this.getWidth();\r\n              draw.fillRect(dx, dy, width, height);\r\n              break;\r\n            }\r\n            case SCROLL_TYPE.H_LEFT: {\r\n              const scrollView = this.getScrollView();\r\n              const height = this.getHeight();\r\n              const width = scrollView.w;\r\n              draw.fillRect(dx, dy, width, height);\r\n              break;\r\n            }\r\n            case SCROLL_TYPE.H_RIGHT: {\r\n              const fullScrollView = this.getFullScrollView();\r\n              const scrollView = this.getScrollView();\r\n              const height = this.getHeight();\r\n              const width = table.visualWidth() - (fullScrollView.w - scrollView.w);\r\n              draw.fillRect(dx, dy, width, height);\r\n              break;\r\n            }\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    } else if (RENDER_MODE.RENDER) {\r\n      const height = this.getHeight();\r\n      const width = this.getWidth();\r\n      draw.fillRect(dx, dy, width, height);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass XTableContentUI extends XTableUI {\r\n\r\n  /**\r\n   * 绘制越界文本\r\n   */\r\n  drawBoundOutFont() {\r\n    const scrollView = this.getScrollView();\r\n    const { table } = this;\r\n    const {\r\n      draw, cols, textCellsHelper, cells, textFont, merges,\r\n    } = table;\r\n    const drawX = this.getDrawX();\r\n    const drawY = this.getDrawY();\r\n    draw.offset(drawX, drawY);\r\n    // 左边区域\r\n    const lView = scrollView.clone();\r\n    lView.sci = 0;\r\n    lView.eci = scrollView.sci - 1;\r\n    if (lView.eci > -1) {\r\n      let max;\r\n      textCellsHelper.getCellByViewRange({\r\n        reverseCols: true,\r\n        rectRange: lView,\r\n        newCol: (col) => {\r\n          max += cols.getWidth(col);\r\n        },\r\n        newRow: () => {\r\n          max = 0;\r\n        },\r\n        callback: (row, col, cell, rect, overflow) => {\r\n          if (merges.getFirstIncludes(row, col)) {\r\n            return BREAK_LOOP.ROW;\r\n          }\r\n          const { text } = cell;\r\n          if (Utils.isBlank(text)) {\r\n            return BREAK_LOOP.CONTINUE;\r\n          }\r\n          const { fontAttr } = cell;\r\n          const { align, textWrap } = fontAttr;\r\n          const allowAlign = align === BaseFont.ALIGN.left\r\n            || align === BaseFont.ALIGN.center;\r\n          if (allowAlign && textWrap === BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n            const size = cells.getCellBoundOutSize(row, col);\r\n            if (size === 0 || size > max) {\r\n              const {\r\n                format, text, fontAttr,\r\n              } = cell;\r\n              const builder = textFont.getBuilder();\r\n              builder.setDraw(draw);\r\n              builder.setText(XTableFormat(format, text));\r\n              builder.setAttr(fontAttr);\r\n              builder.setRect(rect);\r\n              builder.setOverFlow(overflow);\r\n              const font = builder.build();\r\n              cell.setContentWidth(font.draw());\r\n            }\r\n          }\r\n          return BREAK_LOOP.ROW;\r\n        },\r\n      });\r\n    }\r\n    // 右边区域\r\n    const rView = scrollView.clone();\r\n    rView.sci = scrollView.eci + 1;\r\n    rView.eci = cols.len - 1;\r\n    if (rView.sci < cols.len) {\r\n      let max;\r\n      textCellsHelper.getCellSkipMergeCellByViewRange({\r\n        rectRange: rView,\r\n        startX: scrollView.w,\r\n        newCol: (col) => {\r\n          max += cols.getWidth(col);\r\n        },\r\n        newRow: () => {\r\n          max = 0;\r\n        },\r\n        callback: (row, col, cell, rect, overflow) => {\r\n          if (merges.getFirstIncludes(row, col)) {\r\n            return BREAK_LOOP.ROW;\r\n          }\r\n          const { text } = cell;\r\n          if (Utils.isBlank(text)) {\r\n            return BREAK_LOOP.CONTINUE;\r\n          }\r\n          const { fontAttr } = cell;\r\n          const { align, textWrap } = fontAttr;\r\n          const allowAlign = align === BaseFont.ALIGN.right\r\n            || align === BaseFont.ALIGN.center;\r\n          if (allowAlign && textWrap === BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n            const size = cells.getCellBoundOutSize(row, col);\r\n            if (size === 0 || size > max) {\r\n              const {\r\n                format, text, fontAttr,\r\n              } = cell;\r\n              const builder = textFont.getBuilder();\r\n              builder.setDraw(draw);\r\n              builder.setText(XTableFormat(format, text));\r\n              builder.setAttr(fontAttr);\r\n              builder.setRect(rect);\r\n              builder.setOverFlow(overflow);\r\n              const font = builder.build();\r\n              cell.setContentWidth(font.draw());\r\n            }\r\n          }\r\n          return BREAK_LOOP.ROW;\r\n        },\r\n      });\r\n    }\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n  /**\r\n   * 绘制单元格文本\r\n   */\r\n  drawFont() {\r\n    const scrollView = this.getScrollView();\r\n    const drawX = this.getDrawX();\r\n    const drawY = this.getDrawY();\r\n    const { table } = this;\r\n    const {\r\n      draw, textCellsHelper, textFont,\r\n    } = table;\r\n    draw.offset(drawX, drawY);\r\n    textCellsHelper.getCellSkipMergeCellByViewRange({\r\n      rectRange: scrollView,\r\n      callback: (row, col, cell, rect, overflow) => {\r\n        const {\r\n          format, text, fontAttr,\r\n        } = cell;\r\n        const builder = textFont.getBuilder();\r\n        builder.setDraw(draw);\r\n        builder.setText(XTableFormat(format, text));\r\n        builder.setAttr(fontAttr);\r\n        builder.setRect(rect);\r\n        builder.setOverFlow(overflow);\r\n        const font = builder.build();\r\n        cell.setContentWidth(font.draw());\r\n      },\r\n    });\r\n    textCellsHelper.getMergeCellByViewRange({\r\n      rectRange: scrollView,\r\n      callback: (rect, cell) => {\r\n        const {\r\n          format, text, fontAttr,\r\n        } = cell;\r\n        const builder = textFont.getBuilder();\r\n        builder.setDraw(draw);\r\n        builder.setText(XTableFormat(format, text));\r\n        builder.setAttr(fontAttr);\r\n        builder.setRect(rect);\r\n        const font = builder.build();\r\n        cell.setContentWidth(font.draw());\r\n      },\r\n    });\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n  /**\r\n   * 绘制边框\r\n   */\r\n  drawBorder() {\r\n    const borderView = this.getLineView();\r\n    const borderX = this.getLineX();\r\n    const borderY = this.getLineY();\r\n    const { table } = this;\r\n    const {\r\n      draw, line, cellHorizontalBorder, cellVerticalBorder,\r\n    } = table;\r\n    draw.offset(borderX, borderY);\r\n    const coincide = cellHorizontalBorder.getMergeCoincideRange({\r\n      viewRange: borderView,\r\n    });\r\n    const brink = cellHorizontalBorder.getCoincideRangeBrink({\r\n      coincide,\r\n    });\r\n    // 绘制单元格水平线段\r\n    // 和垂直线段\r\n    const bottomHorizontalLine = cellHorizontalBorder.getBottomHorizontalLine({\r\n      viewRange: borderView,\r\n    });\r\n    const topHorizontalLine = cellHorizontalBorder.getTopHorizontalLine({\r\n      viewRange: borderView,\r\n    });\r\n    const leftVerticalLine = cellVerticalBorder.getLeftVerticalLine({\r\n      viewRange: borderView,\r\n    });\r\n    const rightVerticalLine = cellVerticalBorder.getRightVerticalLine({\r\n      viewRange: borderView,\r\n    });\r\n    topHorizontalLine.forEach((item) => {\r\n      const { borderAttr, row, col } = item;\r\n      const { top } = borderAttr;\r\n      const { color, width, type } = top;\r\n      line.setType(type);\r\n      line.setColor(color);\r\n      line.setWidth(width);\r\n      line.drawLine(item.sx, item.sy, item.ex, item.ey, row, col, 'top');\r\n    });\r\n    bottomHorizontalLine.forEach((item) => {\r\n      const { borderAttr, row, col } = item;\r\n      const { bottom } = borderAttr;\r\n      const { color, width, type } = bottom;\r\n      line.setType(type);\r\n      line.setColor(color);\r\n      line.setWidth(width);\r\n      line.drawLine(item.sx, item.sy, item.ex, item.ey, row, col, 'bottom');\r\n    });\r\n    leftVerticalLine.forEach((item) => {\r\n      const { borderAttr, row, col } = item;\r\n      const { left } = borderAttr;\r\n      const { color, width, type } = left;\r\n      line.setType(type);\r\n      line.setColor(color);\r\n      line.setWidth(width);\r\n      line.drawLine(item.sx, item.sy, item.ex, item.ey, row, col, 'left');\r\n    });\r\n    rightVerticalLine.forEach((item) => {\r\n      const { borderAttr, row, col } = item;\r\n      const { right } = borderAttr;\r\n      const { color, width, type } = right;\r\n      line.setType(type);\r\n      line.setColor(color);\r\n      line.setWidth(width);\r\n      line.drawLine(item.sx, item.sy, item.ex, item.ey, row, col, 'right');\r\n    });\r\n    // 绘制合并单元格水平线段\r\n    // 和垂直线段\r\n    const topMergeHorizontalLine = cellHorizontalBorder.getTopMergeHorizontalLine({\r\n      brink,\r\n    });\r\n    const bottomMergeHorizontalLine = cellHorizontalBorder.getBottomMergeHorizontalLine({\r\n      brink,\r\n    });\r\n    const leftMergeVerticalLine = cellVerticalBorder.getLeftMergeVerticalLine({\r\n      brink,\r\n    });\r\n    const rightMergeVerticalLine = cellVerticalBorder.getRightMergeVerticalLine({\r\n      brink,\r\n    });\r\n    topMergeHorizontalLine.forEach((item) => {\r\n      const { borderAttr, row, col } = item;\r\n      const { top } = borderAttr;\r\n      const { color, width, type } = top;\r\n      line.setType(type);\r\n      line.setColor(color);\r\n      line.setWidth(width);\r\n      line.drawLine(item.sx, item.sy, item.ex, item.ey, row, col, 'top');\r\n    });\r\n    bottomMergeHorizontalLine.forEach((item) => {\r\n      const { borderAttr, row, col } = item;\r\n      const { bottom } = borderAttr;\r\n      const { color, width, type } = bottom;\r\n      line.setType(type);\r\n      line.setColor(color);\r\n      line.setWidth(width);\r\n      line.drawLine(item.sx, item.sy, item.ex, item.ey, row, col, 'bottom');\r\n    });\r\n    leftMergeVerticalLine.forEach((item) => {\r\n      const { borderAttr, row, col } = item;\r\n      const { left } = borderAttr;\r\n      const { color, width, type } = left;\r\n      line.setType(type);\r\n      line.setColor(color);\r\n      line.setWidth(width);\r\n      line.drawLine(item.sx, item.sy, item.ex, item.ey, row, col, 'left');\r\n    });\r\n    rightMergeVerticalLine.forEach((item) => {\r\n      const { borderAttr, row, col } = item;\r\n      const { right } = borderAttr;\r\n      const { color, width, type } = right;\r\n      line.setType(type);\r\n      line.setColor(color);\r\n      line.setWidth(width);\r\n      line.drawLine(item.sx, item.sy, item.ex, item.ey, row, col, 'right');\r\n    });\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n  /**\r\n   * 绘制网格\r\n   */\r\n  drawGrid() {\r\n    const borderView = this.getLineView();\r\n    const borderX = this.getLineX();\r\n    const borderY = this.getLineY();\r\n    const { table } = this;\r\n    const {\r\n      draw, grid, cellHorizontalGrid, cellVerticalGrid,\r\n    } = table;\r\n    draw.offset(borderX, borderY);\r\n    const coincide = cellHorizontalGrid.getMergeCoincideRange({\r\n      viewRange: borderView,\r\n    });\r\n    const brink = cellHorizontalGrid.getCoincideRangeBrink({\r\n      coincide,\r\n    });\r\n    // 绘制单元格水平线段\r\n    // 和垂直线段\r\n    const horizontalLine = cellHorizontalGrid.getHorizontalLine({\r\n      viewRange: borderView,\r\n    });\r\n    const verticalLine = cellVerticalGrid.getVerticalLine({\r\n      viewRange: borderView,\r\n    });\r\n    horizontalLine.forEach((item) => {\r\n      grid.horizontalLine(item.sx, item.sy, item.ex, item.ey);\r\n    });\r\n    verticalLine.forEach((item) => {\r\n      grid.verticalLine(item.sx, item.sy, item.ex, item.ey);\r\n    });\r\n    // 绘制合并单元格水平线段\r\n    // 和垂直线段\r\n    const mergeHorizontalLine = cellHorizontalGrid.getMergeHorizontalLine({\r\n      brink,\r\n    });\r\n    const mergeVerticalLine = cellVerticalGrid.getMergeVerticalLine({\r\n      brink,\r\n    });\r\n    mergeHorizontalLine.forEach((item) => {\r\n      grid.horizontalLine(item.sx, item.sy, item.ex, item.ey);\r\n    });\r\n    mergeVerticalLine.forEach((item) => {\r\n      grid.verticalLine(item.sx, item.sy, item.ex, item.ey);\r\n    });\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n  /**\r\n   * 绘制背景颜色\r\n   */\r\n  drawColor() {\r\n    const scrollView = this.getScrollView();\r\n    const { table } = this;\r\n    const drawX = this.getDrawX();\r\n    const drawY = this.getDrawY();\r\n    const {\r\n      draw, styleCellsHelper, merges,\r\n    } = table;\r\n    draw.offset(drawX, drawY);\r\n    styleCellsHelper.getMergeCellByViewRange({\r\n      rectRange: scrollView,\r\n      callback: (rect, cell) => {\r\n        const { background } = cell;\r\n        const box = new Box({ draw, rect });\r\n        box.drawBackgroundColor(background);\r\n      },\r\n    });\r\n    styleCellsHelper.getCellByViewRange({\r\n      rectRange: scrollView,\r\n      callback: (row, col, cell, rect) => {\r\n        const merge = merges.getFirstIncludes(row, col);\r\n        if (merge && (merge.sri !== row || merge.sci !== row)) {\r\n          return;\r\n        }\r\n        const { background } = cell;\r\n        const box = new Box({ draw, rect });\r\n        box.drawBackgroundColor(background);\r\n      },\r\n    });\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n  /**\r\n   * 渲染界面\r\n   */\r\n  render() {\r\n    const { table } = this;\r\n    const renderMode = table.getRenderMode();\r\n    const viewMode = this.getViewMode();\r\n    if (viewMode === VIEW_MODE.STATIC && renderMode === RENDER_MODE.SCROLL) {\r\n      return;\r\n    }\r\n    // 渲染贴图\r\n    this.drawMap();\r\n    // 清空画布\r\n    this.drawClear();\r\n    // 裁剪界面\r\n    const scrollView = this.getScrollView();\r\n    const x = this.getDrawX();\r\n    const y = this.getDrawY();\r\n    const width = scrollView.w;\r\n    const height = scrollView.h;\r\n    const {\r\n      draw,\r\n    } = table;\r\n    const crop = new Crop({\r\n      rect: new Rect({ x, y, width, height }),\r\n      draw,\r\n    });\r\n    crop.open();\r\n    // 绘制背景\r\n    this.drawColor();\r\n    // 绘制文字\r\n    this.drawFont();\r\n    this.drawBoundOutFont();\r\n    // 绘制网格\r\n    if (this.table.settings.table.showGrid) {\r\n      this.drawGrid();\r\n    }\r\n    // 绘制边框\r\n    this.drawBorder();\r\n    crop.close();\r\n  }\r\n\r\n}\r\n\r\nclass XTableIndexUI extends XTableUI {\r\n\r\n  /**\r\n   * 绘制文字\r\n   */\r\n  drawFont() {\r\n    throw new TypeError('drawFont child impl');\r\n  }\r\n\r\n  /**\r\n   * 绘制背景颜色\r\n   */\r\n  drawColor() {\r\n    throw new TypeError('drawColor child impl');\r\n  }\r\n\r\n  /**\r\n   * 绘制网格\r\n   */\r\n  drawGrid() {\r\n    throw new TypeError('drawGrid child impl');\r\n  }\r\n\r\n  /**\r\n   * 渲染界面\r\n   */\r\n  render() {\r\n    const { table } = this;\r\n    const renderMode = table.getRenderMode();\r\n    const viewMode = this.getViewMode();\r\n    if (viewMode === VIEW_MODE.STATIC && renderMode === RENDER_MODE.SCROLL) {\r\n      return;\r\n    }\r\n    this.drawMap();\r\n    this.drawClear();\r\n    this.drawColor();\r\n    this.drawGrid();\r\n    this.drawFont();\r\n  }\r\n\r\n}\r\n\r\nclass XTableLeftIndexUI extends XTableIndexUI {\r\n\r\n  /**\r\n   *  绘制文字\r\n   */\r\n  drawFont() {\r\n    const dx = this.getDrawX();\r\n    const dy = this.getDrawY();\r\n    const scrollView = this.getScrollView();\r\n    const width = this.getWidth();\r\n    const { table } = this;\r\n    const {\r\n      draw, rows, index,\r\n    } = table;\r\n    const { sri, eri } = scrollView;\r\n    draw.offset(dx, dy);\r\n    draw.attr({\r\n      textAlign: 'center',\r\n      textBaseline: 'middle',\r\n      font: `${index.getSize()}px Arial`,\r\n      fillStyle: index.getColor(),\r\n    });\r\n    rows.eachHeight(sri, eri, (i, ch, y) => {\r\n      draw.fillText(i + 1, width / 2, y + (ch / 2));\r\n    });\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n  /**\r\n   * 绘制网格\r\n   */\r\n  drawGrid() {\r\n    const borderView = this.getLineView();\r\n    const borderX = this.getLineX();\r\n    const borderY = this.getLineY();\r\n    const { table } = this;\r\n    const {\r\n      draw, indexGrid, leftIndexHorizontalGrid, leftIndexVerticalGrid,\r\n    } = table;\r\n    draw.offset(borderX, borderY);\r\n    const horizontalLine = leftIndexHorizontalGrid.getHorizontalLine({\r\n      viewRange: borderView,\r\n    });\r\n    const verticalLine = leftIndexVerticalGrid.getVerticalLine({\r\n      viewRange: borderView,\r\n    });\r\n    horizontalLine.forEach((item) => {\r\n      indexGrid.horizontalLine(item.sx, item.sy, item.ex, item.ey);\r\n    });\r\n    verticalLine.forEach((item) => {\r\n      indexGrid.verticalLine(item.sx, item.sy, item.ex, item.ey);\r\n    });\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n  /**\r\n   * 绘制背景\r\n   */\r\n  drawColor() {\r\n    const dx = this.getDrawX();\r\n    const dy = this.getDrawY();\r\n    const scrollView = this.getScrollView();\r\n    const height = scrollView.h;\r\n    const width = this.getWidth();\r\n    const { table } = this;\r\n    const {\r\n      draw, index,\r\n    } = table;\r\n    draw.offset(dx, dy);\r\n    draw.attr({\r\n      fillStyle: index.getBackground(),\r\n    });\r\n    draw.fillRect(0, 0, width, height);\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n}\r\n\r\nclass XTableTopIndexUI extends XTableIndexUI {\r\n\r\n  /**\r\n   *  绘制文字\r\n   */\r\n  drawFont() {\r\n    const dx = this.getDrawX();\r\n    const dy = this.getDrawY();\r\n    const scrollView = this.getScrollView();\r\n    const height = this.getHeight();\r\n    const { table } = this;\r\n    const {\r\n      draw, cols, index,\r\n    } = table;\r\n    const { sci, eci } = scrollView;\r\n    draw.offset(dx, dy);\r\n    draw.attr({\r\n      textAlign: 'center',\r\n      textBaseline: 'middle',\r\n      font: `${index.getSize()}px Arial`,\r\n      fillStyle: index.getColor(),\r\n    });\r\n    cols.eachWidth(sci, eci, (i, cw, x) => {\r\n      draw.fillText(Utils.stringAt(i), x + (cw / 2), height / 2);\r\n    });\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n  /**\r\n   * 绘制网格\r\n   */\r\n  drawGrid() {\r\n    const borderView = this.getLineView();\r\n    const borderX = this.getLineX();\r\n    const borderY = this.getLineY();\r\n    const { table } = this;\r\n    const {\r\n      draw, indexGrid, topIndexVerticalGrid, topIndexHorizontalGrid,\r\n    } = table;\r\n    draw.offset(borderX, borderY);\r\n    const horizontalLine = topIndexHorizontalGrid.getHorizontalLine({\r\n      viewRange: borderView,\r\n    });\r\n    const verticalLine = topIndexVerticalGrid.getVerticalLine({\r\n      viewRange: borderView,\r\n    });\r\n    horizontalLine.forEach((item) => {\r\n      indexGrid.horizontalLine(item.sx, item.sy, item.ex, item.ey);\r\n    });\r\n    verticalLine.forEach((item) => {\r\n      indexGrid.verticalLine(item.sx, item.sy, item.ex, item.ey);\r\n    });\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n  /**\r\n   * 绘制背景\r\n   */\r\n  drawColor() {\r\n    const { table } = this;\r\n    const {\r\n      draw, index,\r\n    } = table;\r\n    const scrollView = this.getScrollView();\r\n    const dx = this.getDrawX();\r\n    const dy = this.getDrawY();\r\n    const height = this.getHeight();\r\n    const width = scrollView.w;\r\n    draw.offset(dx, dy);\r\n    draw.attr({\r\n      fillStyle: index.getBackground(),\r\n    });\r\n    draw.fillRect(0, 0, width, height);\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n}\r\n\r\n// ============================ 表格冻结区域内容绘制 =============================\r\n\r\nclass XTableFrozenLeftIndex extends XTableLeftIndexUI {\r\n\r\n  getWidth() {\r\n    if (Utils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const width = index.getWidth();\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (Utils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { fixed } = table;\r\n    const { rows } = table;\r\n    const height = rows.sectionSumHeight(0, fixed.fxTop);\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (Utils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const x = 0;\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (Utils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const y = index.getHeight();\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (Utils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { rows, cols } = table;\r\n    const { fixed } = table;\r\n    const view = new RectRange(0, 0, fixed.fxTop, 0);\r\n    view.w = cols.rectRangeSumWidth(view);\r\n    view.h = rows.rectRangeSumHeight(view);\r\n    this.scrollView = view;\r\n    return view.clone();\r\n  }\r\n\r\n  getFullScrollView() {\r\n    if (Utils.isNotUnDef(this.fullScrollView)) {\r\n      return this.fullScrollView.clone();\r\n    }\r\n    const fullScrollView = this.getScrollView();\r\n    this.fullScrollView = fullScrollView;\r\n    return fullScrollView.clone();\r\n  }\r\n\r\n  getViewMode() {\r\n    this.viewMode = VIEW_MODE.STATIC;\r\n    return VIEW_MODE.STATIC;\r\n  }\r\n\r\n  render() {\r\n    const { table } = this;\r\n    const renderMode = table.getRenderMode();\r\n    if (renderMode === RENDER_MODE.RENDER || renderMode === RENDER_MODE.SCALE) {\r\n      super.render();\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass XTableFrozenContent extends XTableContentUI {\r\n\r\n  getWidth() {\r\n    if (Utils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { fixed } = table;\r\n    const { rows } = table;\r\n    const width = rows.sectionSumHeight(0, fixed.fxLeft);\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (Utils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { fixed } = table;\r\n    const { rows } = table;\r\n    const height = rows.sectionSumHeight(0, fixed.fxTop);\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (Utils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const x = index.getWidth();\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (Utils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const y = index.getHeight();\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (Utils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { rows, cols } = table;\r\n    const { fixed } = table;\r\n    const view = new RectRange(0, 0, fixed.fxTop, fixed.fxLeft);\r\n    view.w = cols.rectRangeSumWidth(view);\r\n    view.h = rows.rectRangeSumHeight(view);\r\n    this.scrollView = view;\r\n    return view.clone();\r\n  }\r\n\r\n  getFullScrollView() {\r\n    if (Utils.isNotUnDef(this.fullScrollView)) {\r\n      return this.fullScrollView.clone();\r\n    }\r\n    const fullScrollView = this.getScrollView();\r\n    this.fullScrollView = fullScrollView;\r\n    return fullScrollView.clone();\r\n  }\r\n\r\n  getViewMode() {\r\n    this.viewMode = VIEW_MODE.STATIC;\r\n    return VIEW_MODE.STATIC;\r\n  }\r\n\r\n  render() {\r\n    const { table } = this;\r\n    const renderMode = table.getRenderMode();\r\n    if (renderMode === RENDER_MODE.RENDER || renderMode === RENDER_MODE.SCALE) {\r\n      super.render();\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass XTableFrozenTopIndex extends XTableTopIndexUI {\r\n\r\n  getWidth() {\r\n    if (Utils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { fixed } = table;\r\n    const { rows } = table;\r\n    const width = rows.sectionSumHeight(0, fixed.fxLeft);\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (Utils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const height = index.getHeight();\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (Utils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const x = index.getWidth();\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (Utils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const y = 0;\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (Utils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { rows, cols } = table;\r\n    const { fixed } = table;\r\n    const view = new RectRange(0, 0, 0, fixed.fxLeft);\r\n    view.w = cols.rectRangeSumWidth(view);\r\n    view.h = rows.rectRangeSumHeight(view);\r\n    this.scrollView = view;\r\n    return view.clone();\r\n  }\r\n\r\n  getFullScrollView() {\r\n    if (Utils.isNotUnDef(this.fullScrollView)) {\r\n      return this.fullScrollView.clone();\r\n    }\r\n    const fullScrollView = this.getScrollView();\r\n    this.fullScrollView = fullScrollView;\r\n    return fullScrollView.clone();\r\n  }\r\n\r\n  getViewMode() {\r\n    this.viewMode = VIEW_MODE.STATIC;\r\n    return VIEW_MODE.STATIC;\r\n  }\r\n\r\n  render() {\r\n    const { table } = this;\r\n    const renderMode = table.getRenderMode();\r\n    if (renderMode === RENDER_MODE.RENDER || renderMode === RENDER_MODE.SCALE) {\r\n      super.render();\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass XTableFrozenFullRect {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  draw() {\r\n    const dx = 0;\r\n    const dy = 0;\r\n    const { table } = this;\r\n    const { draw } = table;\r\n    const { indexGrid } = table;\r\n    const { index } = table;\r\n    const indexHeight = index.getHeight();\r\n    const indexWidth = index.getWidth();\r\n    draw.save();\r\n    draw.offset(dx, dy);\r\n    // 绘制背景\r\n    draw.attr({\r\n      fillStyle: '#f4f5f8',\r\n    });\r\n    draw.fillRect(0, 0, index.getWidth(), indexHeight);\r\n    draw.offset(0, 0);\r\n    // 绘制边框\r\n    indexGrid.horizontalLine(0, indexHeight, indexWidth, indexHeight);\r\n    indexGrid.verticalLine(indexWidth, dy, indexWidth, indexHeight);\r\n    draw.restore();\r\n  }\r\n\r\n  render() {\r\n    const { table } = this;\r\n    const renderMode = table.getRenderMode();\r\n    if (renderMode === RENDER_MODE.RENDER || renderMode === RENDER_MODE.SCALE) {\r\n      this.draw();\r\n    }\r\n  }\r\n\r\n}\r\n\r\n// ============================ 表格动态区域内容绘制 =============================\r\n\r\nclass XTableLeftIndex extends XTableLeftIndexUI {\r\n\r\n  getWidth() {\r\n    if (Utils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const width = index.getWidth();\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (Utils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { xTop } = table;\r\n    const { index } = table;\r\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (Utils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const x = 0;\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (Utils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const { table } = this;\r\n    const { xTop } = table;\r\n    const { index } = table;\r\n    const y = index.getHeight() + xTop.getHeight();\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (Utils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { index } = table;\r\n    const renderMode = table.getRenderMode();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    const enterView = xTableAreaView.getScrollEnterView();\r\n    let view;\r\n    if (Utils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL) {\r\n      view = enterView;\r\n    } else {\r\n      view = scrollView;\r\n    }\r\n    view.sci = 0;\r\n    view.eci = 0;\r\n    view.w = index.getWidth();\r\n    this.scrollView = view;\r\n    return view.clone();\r\n  }\r\n\r\n  getFullScrollView() {\r\n    if (Utils.isNotUnDef(this.fullScrollView)) {\r\n      return this.fullScrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const { xTableAreaView } = table;\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    scrollView.sci = 0;\r\n    scrollView.eci = 0;\r\n    scrollView.w = index.getWidth();\r\n    this.fullScrollView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n  getViewMode() {\r\n    if (Utils.isNotUnDef(this.viewMode)) {\r\n      return this.viewMode;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { cols } = table;\r\n    const lastScrollView = xTableAreaView.getLastScrollView();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    if (Utils.isNotUnDef(lastScrollView)) {\r\n      lastScrollView.sci = 0;\r\n      lastScrollView.eci = 0;\r\n      lastScrollView.w = cols.sectionSumWidth(lastScrollView.sci, lastScrollView.eci);\r\n    }\r\n    scrollView.sci = 0;\r\n    scrollView.eci = 0;\r\n    scrollView.w = cols.sectionSumWidth(scrollView.sci, scrollView.eci);\r\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\r\n    this.viewMode = viewMode;\r\n    return viewMode;\r\n  }\r\n\r\n}\r\n\r\nclass XTableLeft extends XTableContentUI {\r\n\r\n  getWidth() {\r\n    if (Utils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { cols } = table;\r\n    const { fixed } = table;\r\n    const width = cols.sectionSumWidth(0, fixed.fxLeft);\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (Utils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { xTop } = table;\r\n    const { index } = table;\r\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (Utils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const x = index.getWidth();\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (Utils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const { table } = this;\r\n    const { xTop } = table;\r\n    const { index } = table;\r\n    const y = index.getHeight() + xTop.getHeight();\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (Utils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { fixed } = table;\r\n    const { cols } = table;\r\n    const { xTableAreaView } = table;\r\n    const renderMode = table.getRenderMode();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    const enterView = xTableAreaView.getScrollEnterView();\r\n    let view;\r\n    if (Utils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL) {\r\n      view = enterView;\r\n    } else {\r\n      view = scrollView;\r\n    }\r\n    view.sci = 0;\r\n    view.eci = fixed.fxLeft;\r\n    view.w = cols.sectionSumWidth(view.sci, view.eci);\r\n    this.scrollView = view;\r\n    return view.clone();\r\n  }\r\n\r\n  getFullScrollView() {\r\n    if (Utils.isNotUnDef(this.fullScrollView)) {\r\n      return this.fullScrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { fixed } = table;\r\n    const { cols } = table;\r\n    const { xTableAreaView } = table;\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    scrollView.sci = 0;\r\n    scrollView.eci = fixed.fxLeft;\r\n    scrollView.w = cols.sectionSumWidth(scrollView.sci, scrollView.eci);\r\n    this.fullScrollView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n  getViewMode() {\r\n    if (Utils.isNotUnDef(this.viewMode)) {\r\n      return this.viewMode;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { cols } = table;\r\n    const { fixed } = table;\r\n    const lastScrollView = xTableAreaView.getLastScrollView();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    if (Utils.isNotUnDef(lastScrollView)) {\r\n      lastScrollView.sci = 0;\r\n      lastScrollView.eci = fixed.fxLeft;\r\n      lastScrollView.w = cols.sectionSumWidth(lastScrollView.sci, lastScrollView.eci);\r\n    }\r\n    scrollView.sci = 0;\r\n    scrollView.eci = fixed.fxLeft;\r\n    scrollView.w = cols.sectionSumWidth(scrollView.sci, scrollView.eci);\r\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\r\n    this.viewMode = viewMode;\r\n    return viewMode;\r\n  }\r\n\r\n}\r\n\r\nclass XTableContent extends XTableContentUI {\r\n\r\n  getWidth() {\r\n    if (Utils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const { xLeft } = table;\r\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (Utils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { xTop } = table;\r\n    const { index } = table;\r\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (Utils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const { table } = this;\r\n    const { xLeft } = table;\r\n    const { index } = table;\r\n    const x = index.getWidth() + xLeft.getWidth();\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (Utils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const { table } = this;\r\n    const { xTop } = table;\r\n    const { index } = table;\r\n    const y = index.getHeight() + xTop.getHeight();\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (Utils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const renderMode = table.getRenderMode();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    const enterView = xTableAreaView.getScrollEnterView();\r\n    let view;\r\n    if (Utils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL) {\r\n      view = enterView;\r\n    } else {\r\n      view = scrollView;\r\n    }\r\n    this.scrollView = view;\r\n    return view.clone();\r\n  }\r\n\r\n  getFullScrollView() {\r\n    if (Utils.isNotUnDef(this.fullScrollView)) {\r\n      return this.fullScrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    this.fullScrollView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n  getViewMode() {\r\n    if (Utils.isNotUnDef(this.viewMode)) {\r\n      return this.viewMode;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const lastScrollView = xTableAreaView.getLastScrollView();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\r\n    this.viewMode = viewMode;\r\n    return viewMode;\r\n  }\r\n\r\n}\r\n\r\nclass XTableTop extends XTableContentUI {\r\n\r\n  getWidth() {\r\n    if (Utils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { xLeft } = table;\r\n    const { index } = table;\r\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (Utils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { fixed } = table;\r\n    const { rows } = table;\r\n    const height = rows.sectionSumHeight(0, fixed.fxTop);\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (Utils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const { table } = this;\r\n    const { xLeft } = table;\r\n    const { index } = table;\r\n    const x = index.getWidth() + xLeft.getWidth();\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (Utils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const y = index.getHeight();\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (Utils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { fixed } = table;\r\n    const { rows } = table;\r\n    const { xTableAreaView } = table;\r\n    const renderMode = table.getRenderMode();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    const enterView = xTableAreaView.getScrollEnterView();\r\n    let view;\r\n    if (Utils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL) {\r\n      view = enterView;\r\n    } else {\r\n      view = scrollView;\r\n    }\r\n    view.sri = 0;\r\n    view.eri = fixed.fxTop;\r\n    view.h = rows.sectionSumHeight(view.sci, view.eci);\r\n    this.scrollView = view;\r\n    return view.clone();\r\n  }\r\n\r\n  getFullScrollView() {\r\n    if (Utils.isNotUnDef(this.fullScrollView)) {\r\n      return this.fullScrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { fixed } = table;\r\n    const { rows } = table;\r\n    const { xTableAreaView } = table;\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    scrollView.sri = 0;\r\n    scrollView.eri = fixed.fxTop;\r\n    scrollView.h = rows.sectionSumHeight(scrollView.sci, scrollView.eci);\r\n    this.scrollView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n  getViewMode() {\r\n    if (Utils.isNotUnDef(this.viewMode)) {\r\n      return this.viewMode;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { rows } = table;\r\n    const { fixed } = table;\r\n    const lastScrollView = xTableAreaView.getLastScrollView();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    if (Utils.isNotUnDef(lastScrollView)) {\r\n      lastScrollView.sri = 0;\r\n      lastScrollView.eri = fixed.fxTop;\r\n      lastScrollView.h = rows.sectionSumHeight(lastScrollView.sci, lastScrollView.eci);\r\n    }\r\n    scrollView.sri = 0;\r\n    scrollView.eri = fixed.fxTop;\r\n    scrollView.h = rows.sectionSumHeight(scrollView.sci, scrollView.eci);\r\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\r\n    this.viewMode = viewMode;\r\n    return viewMode;\r\n  }\r\n\r\n}\r\n\r\nclass XTableTopIndex extends XTableTopIndexUI {\r\n\r\n  getWidth() {\r\n    if (Utils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { xLeft } = table;\r\n    const { index } = table;\r\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (Utils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const height = index.getHeight();\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (Utils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const { table } = this;\r\n    const { xLeft } = table;\r\n    const { index } = table;\r\n    const x = index.getWidth() + xLeft.getWidth();\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (Utils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const y = 0;\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (Utils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const { xTableAreaView } = table;\r\n    const renderMode = table.getRenderMode();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    const enterView = xTableAreaView.getScrollEnterView();\r\n    let view;\r\n    if (Utils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL) {\r\n      view = enterView;\r\n    } else {\r\n      view = scrollView;\r\n    }\r\n    view.sri = 0;\r\n    view.eri = 0;\r\n    view.h = index.getHeight();\r\n    this.scrollView = view;\r\n    return view.clone();\r\n  }\r\n\r\n  getFullScrollView() {\r\n    if (Utils.isNotUnDef(this.fullScrollView)) {\r\n      return this.fullScrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const { xTableAreaView } = table;\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    scrollView.sri = 0;\r\n    scrollView.eri = 0;\r\n    scrollView.h = index.getHeight();\r\n    this.fullScrollView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n  getViewMode() {\r\n    if (Utils.isNotUnDef(this.viewMode)) {\r\n      return this.viewMode;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { rows } = table;\r\n    const lastScrollView = xTableAreaView.getLastScrollView();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    if (Utils.isNotUnDef(lastScrollView)) {\r\n      lastScrollView.sri = 0;\r\n      lastScrollView.eri = 0;\r\n      lastScrollView.h = rows.sectionSumHeight(lastScrollView.sri, lastScrollView.eri);\r\n    }\r\n    scrollView.sri = 0;\r\n    scrollView.eri = 0;\r\n    scrollView.h = rows.sectionSumHeight(scrollView.sri, scrollView.eri);\r\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\r\n    this.viewMode = viewMode;\r\n    return viewMode;\r\n  }\r\n\r\n}\r\n\r\n// =============================== XTableStyle ==============================\r\n\r\nclass XTableStyle extends Widget {\r\n\r\n  /**\r\n   * xTableScrollView\r\n   * @param xTableScrollView\r\n   * @param settings\r\n   * @param fixed\r\n   * @param scroll\r\n   */\r\n  constructor({\r\n    xTableScrollView,\r\n    settings,\r\n    fixed,\r\n    scroll,\r\n  }) {\r\n    super(`${cssPrefix}-table-canvas`, 'canvas');\r\n    // 表格设置\r\n    this.settings = settings;\r\n    // 冻结的视图 & 滚动的坐标\r\n    this.fixed = fixed;\r\n    this.scroll = scroll;\r\n    // 渲染模式\r\n    this.renderMode = RENDER_MODE.RENDER;\r\n    // 表格数据配置\r\n    this.scale = new Scale();\r\n    this.index = new Code({\r\n      scaleAdapter: new ScaleAdapter({\r\n        goto: v => XDraw.rpx(this.scale.goto(v)),\r\n      }),\r\n      ...this.settings.index,\r\n    });\r\n    this.rows = new Rows({\r\n      scaleAdapter: new ScaleAdapter({\r\n        goto: v => XDraw.rpx(this.scale.goto(v)),\r\n      }),\r\n      ...this.settings.rows,\r\n    });\r\n    this.cols = new Cols({\r\n      scaleAdapter: new ScaleAdapter({\r\n        goto: v => XDraw.rpx(this.scale.goto(v)),\r\n        back: v => this.scale.back(v),\r\n      }),\r\n      ...this.settings.cols,\r\n    });\r\n    this.merges = new Merges({\r\n      ...this.settings.merge,\r\n      rows: this.rows,\r\n      cols: this.cols,\r\n    });\r\n    this.cells = new Cells({\r\n      rows: this.rows,\r\n      cols: this.cols,\r\n      data: this.settings.data,\r\n      merges: this.merges,\r\n    });\r\n    // 表格视图区域\r\n    this.xTableAreaView = new XTableHistoryAreaView({\r\n      xTableScrollView,\r\n      scroll: this.scroll,\r\n      rows: this.rows,\r\n      cols: this.cols,\r\n    });\r\n    // 单元格辅助类\r\n    this.operateCellsHelper = new OperateCellsHelper({\r\n      xTableAreaView: this.xTableAreaView,\r\n      cells: this.cells,\r\n      merges: this.merges,\r\n      rows: this.rows,\r\n      cols: this.cols,\r\n    });\r\n    this.styleCellsHelper = new StyleCellsHelper({\r\n      xTableAreaView: this.xTableAreaView,\r\n      cells: this.cells,\r\n      merges: this.merges,\r\n      rows: this.rows,\r\n      cols: this.cols,\r\n    });\r\n    this.textCellsHelper = new TextCellsHelper({\r\n      xTableAreaView: this.xTableAreaView,\r\n      cells: this.cells,\r\n      merges: this.merges,\r\n      rows: this.rows,\r\n      cols: this.cols,\r\n    });\r\n    // 数据快照\r\n    this.tableDataSnapshot = new TableDataSnapshot(this);\r\n    // 绘制资源\r\n    const leftOutRangeFilter = new LeftOutRangeFilter({\r\n      merges: this.merges,\r\n      cols: this.cols,\r\n      cells: this.cells,\r\n    });\r\n    const rightOutRangeFilter = new RightOutRangeFilter({\r\n      merges: this.merges,\r\n      cols: this.cols,\r\n      cells: this.cells,\r\n    });\r\n    const leftShowFilter = new FilterChain(ChainLogic.AND, [\r\n      new LineFilter((ri, ci) => {\r\n        const cell = this.cells.getCell(ri, ci);\r\n        if (Utils.isUnDef(cell)) {\r\n          return false;\r\n        }\r\n        return cell.borderAttr.left.display;\r\n      }),\r\n      new LineFilter((ri, ci) => leftOutRangeFilter.execute(ri, ci)),\r\n    ]);\r\n    const topShowFilter = new LineFilter((ri, ci) => {\r\n      const cell = this.cells.getCell(ri, ci);\r\n      if (Utils.isUnDef(cell)) {\r\n        return false;\r\n      }\r\n      return cell.borderAttr.top.display;\r\n    });\r\n    const rightShowFilter = new FilterChain(ChainLogic.AND, [\r\n      new LineFilter((ri, ci) => {\r\n        const cell = this.cells.getCell(ri, ci);\r\n        if (Utils.isUnDef(cell)) {\r\n          return false;\r\n        }\r\n        return cell.borderAttr.right.display;\r\n      }),\r\n      new LineFilter((ri, ci) => rightOutRangeFilter.execute(ri, ci)),\r\n    ]);\r\n    const bottomShowFilter = new LineFilter((ri, ci) => {\r\n      const cell = this.cells.getCell(ri, ci);\r\n      if (Utils.isUnDef(cell)) {\r\n        return false;\r\n      }\r\n      return cell.borderAttr.bottom.display;\r\n    });\r\n    this.draw = new XDraw(this.el);\r\n    this.line = new Line(this.draw, {\r\n      leftShow: (ri, ci) => leftShowFilter.execute(ri, ci),\r\n      topShow: (ri, ci) => topShowFilter.execute(ri, ci),\r\n      rightShow: (ri, ci) => rightShowFilter.execute(ri, ci),\r\n      bottomShow: (ri, ci) => bottomShowFilter.execute(ri, ci),\r\n      iFMerge: (row, col) => this.merges.getFirstIncludes(row, col) !== null,\r\n      iFMergeFirstRow: (row, col) => this.merges.getFirstIncludes(row, col).sri === row,\r\n      iFMergeLastRow: (row, col) => this.merges.getFirstIncludes(row, col).eri === row,\r\n      iFMergeFirstCol: (row, col) => this.merges.getFirstIncludes(row, col).sci === col,\r\n      iFMergeLastCol: (row, col) => this.merges.getFirstIncludes(row, col).eci === col,\r\n    });\r\n    this.indexGrid = new Grid(this.draw, {\r\n      color: this.index.getGridColor(),\r\n    });\r\n    this.grid = new Grid(this.draw, {\r\n      color: this.settings.table.gridColor,\r\n    });\r\n    this.textFont = new Text({\r\n      scaleAdapter: new ScaleAdapter({\r\n        goto: v => this.scale.goto(v),\r\n      }),\r\n    });\r\n    // 单元格网格处理\r\n    this.cellHorizontalGrid = new TableHorizontalGrid({\r\n      merges: this.merges,\r\n      rows: this.rows,\r\n      cols: this.cols,\r\n      cells: this.cells,\r\n      drawCheck: true,\r\n    });\r\n    this.cellVerticalGrid = new TableVerticalGrid({\r\n      merges: this.merges,\r\n      rows: this.rows,\r\n      cols: this.cols,\r\n      cells: this.cells,\r\n      drawCheck: true,\r\n    });\r\n    // 索引网格处理\r\n    this.topIndexHorizontalGrid = new TableHorizontalGrid({\r\n      merges: this.merges,\r\n      rows: this.rows,\r\n      cols: this.cols,\r\n      cells: this.cells,\r\n      getHeight: () => this.index.getHeight(),\r\n    });\r\n    this.topIndexVerticalGrid = new TableVerticalGrid({\r\n      merges: this.merges,\r\n      rows: this.rows,\r\n      cols: this.cols,\r\n      cells: this.cells,\r\n      getHeight: () => this.index.getHeight(),\r\n    });\r\n    this.leftIndexHorizontalGrid = new TableHorizontalGrid({\r\n      merges: this.merges,\r\n      rows: this.rows,\r\n      cols: this.cols,\r\n      cells: this.cells,\r\n      getWidth: () => this.index.getWidth(),\r\n    });\r\n    this.leftIndexVerticalGrid = new TableVerticalGrid({\r\n      merges: this.merges,\r\n      rows: this.rows,\r\n      cols: this.cols,\r\n      cells: this.cells,\r\n      getWidth: () => this.index.getWidth(),\r\n    });\r\n    // 单元格边框处理\r\n    this.cellHorizontalBorder = new TableHorizontalBorder({\r\n      merges: this.merges,\r\n      rows: this.rows,\r\n      cols: this.cols,\r\n      cells: this.cells,\r\n      drawOptimization: true,\r\n    });\r\n    this.cellVerticalBorder = new TableVerticalBorder({\r\n      merges: this.merges,\r\n      rows: this.rows,\r\n      cols: this.cols,\r\n      cells: this.cells,\r\n      drawOptimization: true,\r\n    });\r\n    // 冻结内容\r\n    this.xTableFrozenFullRect = new XTableFrozenFullRect(this);\r\n    this.xLeftFrozenIndex = new XTableFrozenLeftIndex(this);\r\n    this.xTopFrozenIndex = new XTableFrozenTopIndex(this);\r\n    this.xTableFrozenContent = new XTableFrozenContent(this);\r\n    // 动态内容\r\n    this.xLeftIndex = new XTableLeftIndex(this);\r\n    this.xTopIndex = new XTableTopIndex(this);\r\n    this.xLeft = new XTableLeft(this);\r\n    this.xTop = new XTableTop(this);\r\n    this.xContent = new XTableContent(this);\r\n    // 同步合并单元格\r\n    this.merges.sync();\r\n  }\r\n\r\n  /**\r\n   * 边框渲染优化\r\n   */\r\n  drawBorderOptimize() {\r\n    const { styleCellsHelper } = this;\r\n    const { xTableAreaView } = this;\r\n    const {\r\n      cellHorizontalBorder,\r\n      cellVerticalBorder,\r\n    } = this;\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    let enable = true;\r\n    styleCellsHelper.getCellByViewRange({\r\n      rectRange: scrollView,\r\n      callback: (row, col, cell) => {\r\n        const { borderAttr } = cell;\r\n        const { top, left, right, bottom } = borderAttr;\r\n        if (top.type === LINE_TYPE.DOUBLE_LINE) {\r\n          enable = false;\r\n          return enable;\r\n        }\r\n        if (left.type === LINE_TYPE.DOUBLE_LINE) {\r\n          enable = false;\r\n          return enable;\r\n        }\r\n        if (right.type === LINE_TYPE.DOUBLE_LINE) {\r\n          enable = false;\r\n          return enable;\r\n        }\r\n        if (bottom.type === LINE_TYPE.DOUBLE_LINE) {\r\n          enable = false;\r\n          return enable;\r\n        }\r\n        return true;\r\n      },\r\n    });\r\n    if (enable) {\r\n      cellHorizontalBorder.enableOptimization();\r\n      cellVerticalBorder.enableOptimization();\r\n    } else {\r\n      cellHorizontalBorder.disableOptimization();\r\n      cellVerticalBorder.disableOptimization();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 渲染模式\r\n   */\r\n  getRenderMode() {\r\n    const { renderMode } = this;\r\n    return renderMode;\r\n  }\r\n\r\n  /**\r\n   * 画布宽度\r\n   * @returns {null|*}\r\n   */\r\n  visualWidth() {\r\n    return this.el.width;\r\n  }\r\n\r\n  /**\r\n   * 画布高度\r\n   * @returns {null|*}\r\n   */\r\n  visualHeight() {\r\n    return this.el.height;\r\n  }\r\n\r\n  /**\r\n   * 重置界面大小\r\n   */\r\n  resize() {\r\n    const {\r\n      draw, xTableAreaView,\r\n    } = this;\r\n    const box = this.parent().box();\r\n    draw.resize(box.width, box.height);\r\n    xTableAreaView.undo();\r\n    this.reset();\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * 重置变量区\r\n   */\r\n  reset() {\r\n    const { xTableAreaView } = this;\r\n    const { xLeftFrozenIndex } = this;\r\n    const { xTopFrozenIndex } = this;\r\n    const { xTableFrozenContent } = this;\r\n    const { xLeftIndex } = this;\r\n    const { xTopIndex } = this;\r\n    const { xLeft } = this;\r\n    const { xTop } = this;\r\n    const { xContent } = this;\r\n    xTableAreaView.reset();\r\n    xLeftFrozenIndex.reset();\r\n    xTopFrozenIndex.reset();\r\n    xTableFrozenContent.reset();\r\n    xLeftIndex.reset();\r\n    xTopIndex.reset();\r\n    xLeft.reset();\r\n    xTop.reset();\r\n    xContent.reset();\r\n  }\r\n\r\n  /**\r\n   * 界面缩放\r\n   * @param val\r\n   */\r\n  setScale(val) {\r\n    // 清空画布\r\n    this.draw.attr({\r\n      fillStyle: this.settings.table.background,\r\n    });\r\n    this.draw.fullRect();\r\n    // 调整缩放级别\r\n    this.scale.setValue(val);\r\n    // 重新渲染界面\r\n    this.renderMode = RENDER_MODE.SCALE;\r\n    this.resize();\r\n    this.renderMode = RENDER_MODE.RENDER;\r\n  }\r\n\r\n  /**\r\n   * 渲染静态界面\r\n   */\r\n  render() {\r\n    const { fixed } = this;\r\n    const { xTableFrozenFullRect } = this;\r\n    const { xLeftFrozenIndex } = this;\r\n    const { xTopFrozenIndex } = this;\r\n    const { xTableFrozenContent } = this;\r\n    const { xLeftIndex } = this;\r\n    const { xTopIndex } = this;\r\n    const { xLeft } = this;\r\n    const { xTop } = this;\r\n    const { xContent } = this;\r\n    this.drawBorderOptimize();\r\n    xTableFrozenFullRect.render();\r\n    if (fixed.fxLeft > -1 && fixed.fxTop > -1) {\r\n      xTableFrozenContent.render();\r\n    }\r\n    if (fixed.fxTop > -1) {\r\n      xLeftFrozenIndex.render();\r\n      xTop.render();\r\n    }\r\n    if (fixed.fxLeft > -1) {\r\n      xTopFrozenIndex.render();\r\n      xLeft.render();\r\n    }\r\n    xContent.render();\r\n    xLeftIndex.render();\r\n    xTopIndex.render();\r\n  }\r\n\r\n  /**\r\n   * 渲染滚动界面\r\n   */\r\n  scrolling() {\r\n    const { xTableAreaView } = this;\r\n    this.reset();\r\n    this.renderMode = RENDER_MODE.SCROLL;\r\n    this.render();\r\n    xTableAreaView.record();\r\n    this.renderMode = RENDER_MODE.RENDER;\r\n    this.reset();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableStyle,\r\n};\r\n","/* global document */\r\nimport { XScreenCssBorderItem } from '../../xscreen/item/border/XScreenCssBorderItem';\r\nimport {\r\n  SELECT_LOCAL,\r\n  XSelectItem,\r\n} from '../xselect/XSelectItem';\r\nimport { Widget } from '../../../../lib/Widget';\r\nimport { Constant, cssPrefix } from '../../../../const/Constant';\r\nimport { RectRange } from '../../tablebase/RectRange';\r\nimport { Utils } from '../../../../utils/Utils';\r\nimport { EventBind } from '../../../../utils/EventBind';\r\n\r\nclass XautoFillItem extends XScreenCssBorderItem {\r\n\r\n  constructor(table, options = {}) {\r\n    super({ table });\r\n    this.options = Utils.mergeDeep({\r\n      mergeForceSplit: false,\r\n      onBeforeAutoFill: () => {},\r\n      onAfterAutoFill: () => {},\r\n    }, options);\r\n    this.targetOffset = { top: 0, left: 0, width: 0, height: 0 };\r\n    this.moveRange = null;\r\n    this.targetRange = null;\r\n    this.moveDir = null;\r\n    this.ltElem = new Widget(`${cssPrefix}-x-autofill-area`);\r\n    this.brElem = new Widget(`${cssPrefix}-x-autofill-area`);\r\n    this.lElem = new Widget(`${cssPrefix}-x-autofill-area`);\r\n    this.tElem = new Widget(`${cssPrefix}-x-autofill-area`);\r\n    this.blt.child(this.ltElem);\r\n    this.bl.child(this.lElem);\r\n    this.bt.child(this.tElem);\r\n    this.bbr.child(this.brElem);\r\n    this.setBorderType('dashed');\r\n  }\r\n\r\n  onAdd() {\r\n    this.bind();\r\n    this.hide();\r\n  }\r\n\r\n  bind() {\r\n    const { table, xScreen } = this;\r\n    const { mousePointer } = table;\r\n    const { key, type } = Constant.MOUSE_POINTER_TYPE.AUTO_FILL;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    EventBind.bind([\r\n      xSelect.ltCorner,\r\n      xSelect.tCorner,\r\n      xSelect.lCorner,\r\n      xSelect.brCorner,\r\n    ], Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      mousePointer.on(key);\r\n      mousePointer.set(type, key);\r\n      EventBind.mouseMoveUp(document, (e2) => {\r\n        const { x, y } = table.computeEventXy(e2);\r\n        this.moveRangeHandle(x, y);\r\n        this.targetRangeHandle();\r\n        this.targetOffsetHandle();\r\n        this.targetBorderHandle();\r\n      }, () => {\r\n        mousePointer.off(key);\r\n        this.hide();\r\n        this.autoFillTo();\r\n      });\r\n      e.stopPropagation();\r\n    });\r\n    EventBind.bind([\r\n      xSelect.ltCorner,\r\n      xSelect.tCorner,\r\n      xSelect.lCorner,\r\n      xSelect.brCorner,\r\n    ], Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, () => {\r\n      mousePointer.on(key);\r\n      mousePointer.set(type, key);\r\n    });\r\n    EventBind.bind([\r\n      xSelect.ltCorner,\r\n      xSelect.tCorner,\r\n      xSelect.lCorner,\r\n      xSelect.brCorner,\r\n    ], Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      mousePointer.off(key);\r\n    });\r\n  }\r\n\r\n  moveRangeHandle(x, y) {\r\n    const { table } = this;\r\n    const { xScreen } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange, selectLocal,\r\n    } = xSelect;\r\n    const {\r\n      cols, rows,\r\n    } = table;\r\n    const merges = table.getTableMerges();\r\n    const hasEdgeCheck = SELECT_LOCAL.BR !== selectLocal\r\n      || merges.getFirstIncludes(selectRange.sri, selectRange.sci) != null;\r\n    const [rSize, cSize] = selectRange.size();\r\n    let { ri, ci } = table.getRiCiByXy(x, y);\r\n    if (ri < 0) {\r\n      ri = 0;\r\n    } else if (ri > rows.len) {\r\n      ri = rows.len - 1;\r\n    }\r\n    if (ci < 0) {\r\n      ci = 0;\r\n    } else if (ci > cols.len) {\r\n      ci = cols.len - 1;\r\n    }\r\n    const {\r\n      sri: selectorSri, sci: selectorSci,\r\n    } = selectRange;\r\n    let {\r\n      eri: selectorEri, eci: selectorEci,\r\n    } = selectRange;\r\n    if (selectLocal === SELECT_LOCAL.L) {\r\n      selectorEci = cols.len - 1;\r\n    }\r\n    if (selectLocal === SELECT_LOCAL.T) {\r\n      selectorEri = rows.len - 1;\r\n    }\r\n    let moveRange = null;\r\n    let moveDir = null;\r\n    if (ri < selectorSri || ri > selectorEri) {\r\n      if (ri < selectorSri) {\r\n        moveDir = 'top';\r\n        if (hasEdgeCheck) {\r\n          let minRi = selectorSri - rSize;\r\n          if (minRi >= 0) {\r\n            const diff = (selectorSri - 1) - ri;\r\n            for (let i = 1; i <= diff; i += 1) {\r\n              if (i % rSize === 0 && minRi - rSize >= 0) minRi -= rSize;\r\n            }\r\n            moveRange = new RectRange(minRi, selectorSci, selectorSri - 1, selectorEci);\r\n          }\r\n        } else {\r\n          moveRange = new RectRange(ri, selectorSci, selectorSri - 1, selectorEci);\r\n        }\r\n      }\r\n      if (ri > selectorEri) {\r\n        moveDir = 'bottom';\r\n        if (hasEdgeCheck) {\r\n          let maxRi = selectorEri + rSize;\r\n          if (maxRi <= rows.len - 1) {\r\n            const diff = ri - (selectorEri + 1);\r\n            for (let i = 1; i <= diff; i += 1) {\r\n              if (i % rSize === 0 && maxRi + rSize <= rows.len - 1) maxRi += rSize;\r\n            }\r\n            moveRange = new RectRange(selectorEri + 1, selectorSci, maxRi, selectorEci);\r\n          }\r\n        } else {\r\n          moveRange = new RectRange(selectorEri + 1, selectorSci, ri, selectorEci);\r\n        }\r\n      }\r\n    } else if (ci < selectorSci || ci > selectorEci) {\r\n      if (ci < selectorSci) {\r\n        moveDir = 'left';\r\n        if (hasEdgeCheck) {\r\n          let minCi = selectorSci - cSize;\r\n          if (minCi >= 0) {\r\n            const diff = (selectorSci - 1) - ci;\r\n            for (let i = 1; i <= diff; i += 1) {\r\n              if (i % cSize === 0 && minCi - cSize >= 0) minCi -= cSize;\r\n            }\r\n            moveRange = new RectRange(selectorSri, minCi, selectorEri, selectorSci - 1);\r\n          }\r\n        } else {\r\n          moveRange = new RectRange(selectorSri, ci, selectorEri, selectorSci - 1);\r\n        }\r\n      }\r\n      if (ci > selectorEci) {\r\n        moveDir = 'right';\r\n        if (hasEdgeCheck) {\r\n          let maxCi = selectorEci + cSize;\r\n          if (maxCi <= cols.len - 1) {\r\n            const diff = ci - (selectorEci + 1);\r\n            for (let i = 1; i <= diff; i += 1) {\r\n              if (i % cSize === 0 && maxCi + cSize <= cols.len - 1) maxCi += cSize;\r\n            }\r\n            moveRange = new RectRange(selectorSri, selectorEci + 1, selectorEri, maxCi);\r\n          }\r\n        } else {\r\n          moveRange = new RectRange(selectorSri, selectorEci + 1, selectorEri, ci);\r\n        }\r\n      }\r\n    }\r\n    if (moveRange) {\r\n      const width = cols.sectionSumWidth(moveRange.sci, moveRange.eci);\r\n      const height = rows.sectionSumHeight(moveRange.sri, moveRange.eri);\r\n      moveRange.w = width;\r\n      moveRange.h = height;\r\n    }\r\n    this.moveRange = moveRange;\r\n    this.moveDir = moveDir;\r\n  }\r\n\r\n  targetRangeHandle() {\r\n    const { moveRange } = this;\r\n    if (Utils.isUnDef(moveRange)) {\r\n      this.hide();\r\n      this.targetRange = RectRange.EMPTY;\r\n      return;\r\n    }\r\n    const { table } = this;\r\n    const { cols, rows } = table;\r\n    const scrollView = table.getScrollView();\r\n    const targetRange = scrollView.coincide(moveRange);\r\n    targetRange.w = cols.rectRangeSumWidth(targetRange);\r\n    targetRange.h = rows.rectRangeSumHeight(targetRange);\r\n    this.targetRange = targetRange;\r\n    if (targetRange.equals(RectRange.EMPTY)) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  targetOffsetHandle() {\r\n    const { targetRange } = this;\r\n    if (targetRange.equals(RectRange.EMPTY)) {\r\n      return;\r\n    }\r\n    const { table } = this;\r\n    const { cols, rows } = table;\r\n    const scrollView = table.getScrollView();\r\n    this.targetOffset.left = cols.sectionSumWidth(scrollView.sci, this.targetRange.sci - 1);\r\n    this.targetOffset.top = rows.sectionSumHeight(scrollView.sri, this.targetRange.sri - 1);\r\n    this.targetOffset.width = targetRange.w;\r\n    this.targetOffset.height = targetRange.h;\r\n    this.setWidth(this.targetOffset.width);\r\n    this.setHeight(this.targetOffset.height);\r\n    this.setTop(this.targetOffset.top);\r\n    this.setLeft(this.targetOffset.left);\r\n  }\r\n\r\n  targetBorderHandle() {\r\n    const { targetRange } = this;\r\n    if (targetRange.equals(RectRange.EMPTY)) {\r\n      return;\r\n    }\r\n    const { moveRange } = this;\r\n    const {\r\n      top, bottom, left, right,\r\n    } = this.rectRangeBoundOut(moveRange);\r\n    this.hideAllBorder();\r\n    const overGo = this.rectRangeOverGo(moveRange);\r\n    if (!top) {\r\n      this.showTBorder(overGo);\r\n    }\r\n    if (!bottom) {\r\n      this.showBBorder(overGo);\r\n    }\r\n    if (!left) {\r\n      this.showLBorder(overGo);\r\n    }\r\n    if (!right) {\r\n      this.showRBorder(overGo);\r\n    }\r\n  }\r\n\r\n  autoFillTo() {\r\n    const { targetRange } = this;\r\n    if (targetRange.equals(RectRange.EMPTY)) {\r\n      return;\r\n    }\r\n    const { table, options } = this;\r\n    options.onBeforeAutoFill();\r\n    this.splitMerge();\r\n    this.copyContent();\r\n    this.copyMerge();\r\n    options.onAfterAutoFill();\r\n    table.render();\r\n  }\r\n\r\n  copyContent() {\r\n    const {\r\n      table, xScreen,\r\n    } = this;\r\n    const cells = table.getTableCells();\r\n    const tableDataSnapshot = table.getTableDataSnapshot();\r\n    const { cellDataProxy } = tableDataSnapshot;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    const { moveRange } = this;\r\n    let sIndexRi = selectRange.sri;\r\n    let tIndexRi = moveRange.sri;\r\n    while (tIndexRi <= moveRange.eri) {\r\n      let sIndexCi = selectRange.sci;\r\n      let tIndexCi = moveRange.sci;\r\n      while (tIndexCi <= moveRange.eci) {\r\n        const src = cells.getCell(sIndexRi, sIndexCi);\r\n        if (src) {\r\n          const target = src.clone();\r\n          cellDataProxy.setCell(tIndexRi, tIndexCi, target);\r\n        }\r\n        sIndexCi += 1;\r\n        tIndexCi += 1;\r\n        if (sIndexCi > selectRange.eci) {\r\n          sIndexCi = selectRange.sci;\r\n        }\r\n      }\r\n      sIndexRi += 1;\r\n      tIndexRi += 1;\r\n      if (sIndexRi > selectRange.eri) {\r\n        sIndexRi = selectRange.sri;\r\n      }\r\n    }\r\n  }\r\n\r\n  copyMerge() {\r\n    const {\r\n      table, xScreen,\r\n    } = this;\r\n    const merges = table.getTableMerges();\r\n    const tableDataSnapshot = table.getTableDataSnapshot();\r\n    const { mergeDataProxy } = tableDataSnapshot;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange, selectLocal,\r\n    } = xSelect;\r\n    const {\r\n      moveRange, moveDir,\r\n    } = this;\r\n    let sIndexRi = selectRange.sri;\r\n    let tIndexRi = moveRange.sri;\r\n    if (selectLocal !== SELECT_LOCAL.BR\r\n      && (moveDir === 'top' || moveDir === 'left')) {\r\n      return;\r\n    }\r\n    while (tIndexRi <= moveRange.eri) {\r\n      let sIndexCi = selectRange.sci;\r\n      let tIndexCi = moveRange.sci;\r\n      while (tIndexCi <= moveRange.eci) {\r\n        const mergeRect = merges.getFirstIncludes(sIndexRi, sIndexCi);\r\n        if (mergeRect) {\r\n          const isOrigin = mergeRect.sri === sIndexRi && mergeRect.sci === sIndexCi;\r\n          if (isOrigin) {\r\n            let [rSize, cSize] = mergeRect.size();\r\n            rSize -= 1;\r\n            cSize -= 1;\r\n            const newMerge = new RectRange(tIndexRi, tIndexCi, tIndexRi + rSize, tIndexCi + cSize);\r\n            mergeDataProxy.addMerge(newMerge);\r\n          }\r\n        }\r\n        sIndexCi += 1;\r\n        tIndexCi += 1;\r\n        if (sIndexCi > selectRange.eci) {\r\n          sIndexCi = selectRange.sci;\r\n        }\r\n      }\r\n      sIndexRi += 1;\r\n      tIndexRi += 1;\r\n      if (sIndexRi > selectRange.eri) {\r\n        sIndexRi = selectRange.sri;\r\n      }\r\n    }\r\n  }\r\n\r\n  splitMerge() {\r\n    const { table } = this;\r\n    const merges = table.getTableMerges();\r\n    const tableDataSnapshot = table.getTableDataSnapshot();\r\n    const { mergeDataProxy } = tableDataSnapshot;\r\n    const { moveRange } = this;\r\n    moveRange.each((ri, ci) => {\r\n      const merge = merges.getFirstIncludes(ri, ci);\r\n      if (merge) {\r\n        mergeDataProxy.deleteMerge(merge);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XautoFillItem,\r\n};\r\n","import { Utils } from '../../utils/Utils';\nimport { Code } from './tablebase/Code';\nimport { Rows } from './tablebase/Rows';\nimport { Cols } from './tablebase/Cols';\nimport { Fixed } from './tablebase/Fixed';\nimport { Scroll, SCROLL_TYPE } from './tablebase/Scroll';\nimport { Widget } from '../../lib/Widget';\nimport { Constant, cssPrefix } from '../../const/Constant';\nimport { EventBind } from '../../utils/EventBind';\nimport { Scale, ScaleAdapter } from './tablebase/Scale';\nimport { XTableMousePointer } from './XTableMousePointer';\nimport { XTableKeyboard } from './XTableKeyboard';\nimport { XReSizer } from './resizer/XReSizer';\nimport { YReSizer } from './resizer/YReSizer';\nimport { XHeightLight } from './highlight/XHeightLight';\nimport { YHeightLight } from './highlight/YHeightLight';\nimport { XTableFocus } from './XTableFocus';\nimport { XDraw } from '../../canvas/XDraw';\nimport { RectRange } from './tablebase/RectRange';\nimport { XTableScrollView } from './XTableScrollView';\nimport { XTableAreaView } from './XTableAreaView';\nimport { XTableEdit } from './XTableEdit';\nimport { XTableStyle } from './XTableStyle';\nimport { XScreen } from './xscreen/XScreen';\nimport { XSelectItem } from './xscreenitems/xselect/XSelectItem';\nimport { XautoFillItem } from './xscreenitems/xautofill/XautoFillItem';\nimport { XcopyStyle } from './xscreenitems/xcopystyle/XcopyStyle';\n\nclass Dimensions {\n\n  constructor(table) {\n    this.table = table;\n    this.scrollView = null;\n    this.width = null;\n    this.height = null;\n    this.x = null;\n    this.y = null;\n  }\n\n  reset() {\n    this.scrollView = null;\n    this.width = null;\n    this.height = null;\n    this.x = null;\n    this.y = null;\n  }\n\n  getX() {\n    throw new TypeError('child impl');\n  }\n\n  getY() {\n    throw new TypeError('child impl');\n  }\n\n  getHeight() {\n    throw new TypeError('child impl');\n  }\n\n  getWidth() {\n    throw new TypeError('child impl');\n  }\n\n}\n\n// ============================== 表格区域信息 ===============================\n\nclass XTableFrozenContent extends Dimensions {\n\n  getWidth() {\n    if (Utils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { fixed } = table;\n    const { rows } = table;\n    const width = rows.sectionSumHeight(0, fixed.fxLeft);\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (Utils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { fixed } = table;\n    const { rows } = table;\n    const height = rows.sectionSumHeight(0, fixed.fxTop);\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (Utils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { index } = table;\n    const x = index.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (Utils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { index } = table;\n    const y = index.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (Utils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { rows, cols } = table;\n    const { fixed } = table;\n    const view = new RectRange(0, 0, fixed.fxTop, fixed.fxLeft);\n    view.w = cols.rectRangeSumWidth(view);\n    view.h = rows.rectRangeSumHeight(view);\n    this.scrollView = view;\n    return view.clone();\n  }\n\n}\n\nclass XTableTopIndex extends Dimensions {\n\n  getWidth() {\n    if (Utils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (Utils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { index } = table;\n    const height = index.getHeight();\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (Utils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const x = index.getWidth() + xLeft.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (Utils.isNumber(this.y)) {\n      return this.y;\n    }\n    const y = 0;\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (Utils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { index } = table;\n    const { xTableAreaView } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    scrollView.sri = 0;\n    scrollView.eri = 0;\n    scrollView.h = index.getHeight();\n    this.scrollView = scrollView;\n    return scrollView.clone();\n  }\n\n}\n\nclass XTableLeftIndex extends Dimensions {\n\n  getWidth() {\n    if (Utils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { index } = table;\n    const width = index.getWidth();\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (Utils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (Utils.isNumber(this.x)) {\n      return this.x;\n    }\n    const x = 0;\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (Utils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const y = index.getHeight() + xTop.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (Utils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { index } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    scrollView.sci = 0;\n    scrollView.eci = 0;\n    scrollView.w = index.getWidth();\n    this.scrollView = scrollView;\n    return scrollView.clone();\n  }\n\n}\n\nclass XTableTop extends Dimensions {\n\n  getWidth() {\n    if (Utils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (Utils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { fixed } = table;\n    const { rows } = table;\n    const height = rows.sectionSumHeight(0, fixed.fxTop);\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (Utils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const x = index.getWidth() + xLeft.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (Utils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { index } = table;\n    const y = index.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (Utils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { fixed } = table;\n    const { rows } = table;\n    const { xTableAreaView } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    scrollView.sri = 0;\n    scrollView.eri = fixed.fxTop;\n    scrollView.h = rows.sectionSumHeight(scrollView.sci, scrollView.eci);\n    this.scrollView = scrollView;\n    return scrollView.clone();\n  }\n\n}\n\nclass XTableContent extends Dimensions {\n\n  getWidth() {\n    if (Utils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { index } = table;\n    const { xLeft } = table;\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (Utils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (Utils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const x = index.getWidth() + xLeft.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (Utils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const y = index.getHeight() + xTop.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (Utils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    this.scrollView = scrollView;\n    return scrollView.clone();\n  }\n\n}\n\nclass XTableLeft extends Dimensions {\n\n  getWidth() {\n    if (Utils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { cols } = table;\n    const { fixed } = table;\n    const width = cols.sectionSumWidth(0, fixed.fxLeft);\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (Utils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (Utils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { index } = table;\n    const x = index.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (Utils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const y = index.getHeight() + xTop.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (Utils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { fixed } = table;\n    const { cols } = table;\n    const { xTableAreaView } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    scrollView.sci = 0;\n    scrollView.eci = fixed.fxLeft;\n    scrollView.w = cols.sectionSumWidth(scrollView.sci, scrollView.eci);\n    this.scrollView = scrollView;\n    return scrollView.clone();\n  }\n\n}\n\n// ================================= 快捷键 =================================\n\nclass KeyBoardTab {\n\n  constructor(table) {\n    const { keyboard, cols, rows, edit, screenSelector } = table;\n    const merges = table.getTableMerges();\n    let tabId = 0;\n    let tabNext = null;\n    keyboard.register({\n      el: table,\n      focus: true,\n      stop: false,\n      attr: {\n        code: 9,\n        callback: () => {\n          edit.hideEdit();\n          const { selectorAttr } = screenSelector;\n          if (!selectorAttr) {\n            return;\n          }\n          const id = selectorAttr;\n          const rect = selectorAttr.rect.clone();\n          if (tabId !== id) {\n            const { sri, sci } = rect;\n            tabId = id;\n            tabNext = { sri, sci };\n          }\n          const cLen = cols.len - 1;\n          const rLen = rows.len - 1;\n          let { sri, sci } = tabNext;\n          const srcMerges = merges.getFirstIncludes(sri, sci);\n          if (srcMerges) {\n            sci = srcMerges.eci;\n          }\n          if (sci >= cLen && sri >= rLen) {\n            return;\n          }\n          if (sci >= cLen) {\n            sri += 1;\n            sci = 0;\n          } else {\n            sci += 1;\n          }\n          tabNext.sri = sri;\n          tabNext.sci = sci;\n          let eri = sri;\n          let eci = sci;\n          const targetMerges = merges.getFirstIncludes(sri, sci);\n          if (targetMerges) {\n            sri = targetMerges.sri;\n            sci = targetMerges.sci;\n            eri = targetMerges.eri;\n            eci = targetMerges.eci;\n          }\n          rect.sri = sri;\n          rect.sci = sci;\n          rect.eri = eri;\n          rect.eci = eci;\n          screenSelector.selectorAttr.rect = rect;\n          screenSelector.setOffset(screenSelector.selectorAttr);\n          screenSelector.onChangeStack.forEach(cb => cb());\n          screenSelector.onSelectChangeStack.forEach(cb => cb());\n          edit.showEdit();\n        },\n      },\n    });\n  }\n\n}\n\n// ================================= XTable ================================\n\n/**\n * XTable\n */\nclass XTableDimensions extends Widget {\n\n  /**\n   * XTable\n   * @param settings\n   */\n  constructor({\n    settings,\n  }) {\n    super(`${cssPrefix}-table`);\n    // 表格设置\n    this.settings = Utils.mergeDeep({\n      index: {\n        height: 30,\n        width: 50,\n        gridColor: '#e8e8e8',\n        size: 10,\n        color: '#000000',\n      },\n      table: {\n        showGrid: true,\n        background: '#ffffff',\n        borderColor: '#e5e5e5',\n        gridColor: '#e8e8e8',\n      },\n      fixed: {\n        fxTop: -1,\n        fxLeft: -1,\n      },\n      rows: {\n        len: 1000,\n        height: 30,\n        data: [],\n      },\n      cols: {\n        len: 36,\n        width: 90,\n        data: [],\n      },\n      data: [],\n      merge: {},\n    }, settings);\n    // 视口区域大小\n    this.visualHeightCache = null;\n    this.visualWidthCache = null;\n    // 表格数据配置\n    this.scale = new Scale();\n    this.index = new Code({\n      scaleAdapter: new ScaleAdapter({\n        goto: v => XDraw.cvCssPx(this.scale.goto(v)),\n      }),\n      ...this.settings.index,\n    });\n    this.rows = new Rows({\n      scaleAdapter: new ScaleAdapter({\n        goto: v => XDraw.cvCssPx(this.scale.goto(v)),\n      }),\n      ...this.settings.rows,\n    });\n    this.cols = new Cols({\n      scaleAdapter: new ScaleAdapter({\n        goto: v => XDraw.cvCssPx(this.scale.goto(v)),\n      }),\n      ...this.settings.cols,\n    });\n    // 冻结视图坐标\n    this.fixed = new Fixed(this.settings.fixed);\n    // 滚动视图的坐标\n    this.scroll = new Scroll({\n      fixed: this.fixed,\n    });\n    // 表格滚动视图\n    this.xTableScrollView = new XTableScrollView({\n      scroll: this.scroll,\n      rows: this.rows,\n      cols: this.cols,\n      getHeight: () => this.xContent.getHeight(),\n      getWidth: () => this.xContent.getWidth(),\n    });\n    // 表格视图区域\n    this.xTableAreaView = new XTableAreaView({\n      xTableScrollView: this.xTableScrollView,\n      rows: this.rows,\n      cols: this.cols,\n      scroll: this.scroll,\n    });\n    // 表格界面\n    this.xTableStyle = new XTableStyle({\n      xTableScrollView: this.xTableScrollView,\n      settings: this.settings,\n      scroll: this.scroll,\n      fixed: this.fixed,\n    });\n    // table区域\n    this.xTableFrozenContent = new XTableFrozenContent(this);\n    this.xLeftIndex = new XTableLeftIndex(this);\n    this.xTopIndex = new XTableTopIndex(this);\n    this.xLeft = new XTableLeft(this);\n    this.xTop = new XTableTop(this);\n    this.xContent = new XTableContent(this);\n    // table组件\n    this.focus = new XTableFocus(this);\n    this.mousePointer = new XTableMousePointer(this);\n    this.keyboard = new XTableKeyboard(this);\n    this.xScreen = new XScreen(this);\n    this.xReSizer = new XReSizer(this);\n    this.yReSizer = new YReSizer(this);\n    this.xHeightLight = new XHeightLight(this);\n    this.yHeightLight = new YHeightLight(this);\n    this.edit = new XTableEdit(this);\n  }\n\n  /**\n   * 读取快照数据\n   * @returns {TableDataSnapshot}\n   */\n  getTableDataSnapshot() {\n    const { xTableStyle } = this;\n    const { tableDataSnapshot } = xTableStyle;\n    return tableDataSnapshot;\n  }\n\n  /**\n   * 读取合并单元格\n   */\n  getTableMerges() {\n    const { xTableStyle } = this;\n    const { merges } = xTableStyle;\n    return merges;\n  }\n\n  /**\n   * 单元辅助实例\n   * @returns {StyleCellsHelper}\n   */\n  getStyleCellsHelper() {\n    const { xTableStyle } = this;\n    const { styleCellsHelper } = xTableStyle;\n    return styleCellsHelper;\n  }\n\n  /**\n   * 单元辅助实例\n   * @returns {OperateCellsHelper}\n   */\n  getOperateCellsHelper() {\n    const { xTableStyle } = this;\n    const { operateCellsHelper } = xTableStyle;\n    return operateCellsHelper;\n  }\n\n  /**\n   * 获取表格单元格\n   * @returns {Cells}\n   */\n  getTableCells() {\n    const { xTableStyle } = this;\n    const { cells } = xTableStyle;\n    return cells;\n  }\n\n  /**\n   * 滚动视图的宽度\n   * @returns {*}\n   */\n  getScrollTotalWidth() {\n    const { fixed } = this;\n    const { cols } = this;\n    let width;\n    if (fixed.fxTop > -1) {\n      width = cols.sectionSumWidth(fixed.fxLeft, cols.len - 1);\n    } else {\n      width = cols.sectionSumWidth(0, cols.len - 1);\n    }\n    return width;\n  }\n\n  /**\n   * 滚动视图的高度\n   * @returns {*}\n   */\n  getScrollTotalHeight() {\n    const { fixed } = this;\n    const { rows } = this;\n    let height;\n    if (fixed.fxTop > -1) {\n      height = rows.sectionSumHeight(fixed.fxTop, rows.len - 1);\n    } else {\n      height = rows.sectionSumHeight(0, rows.len - 1);\n    }\n    return height;\n  }\n\n  /**\n   * 索引栏宽度\n   * @returns {*}\n   */\n  getIndexWidth() {\n    const { index } = this;\n    return index.getWidth();\n  }\n\n  /**\n   * 索引栏高度\n   * @returns {*}\n   */\n  getIndexHeight() {\n    const { index } = this;\n    return index.getHeight();\n  }\n\n  /**\n   * 获取内容区域宽度\n   */\n  getContentWidth() {\n    const { xContent } = this;\n    return xContent.getWidth();\n  }\n\n  /**\n   * 获取内容区域高度\n   */\n  getContentHeight() {\n    const { xContent } = this;\n    return xContent.getHeight();\n  }\n\n  /**\n   * 固定区域宽度\n   */\n  getFixedWidth() {\n    const { xLeft } = this;\n    return xLeft.getWidth();\n  }\n\n  /**\n   * 固定区域高度\n   * @returns {*}\n   */\n  getFixedHeight() {\n    const { xTop } = this;\n    return xTop.getHeight();\n  }\n\n  /**\n   * 可视区域宽度\n   * @return {*}\n   */\n  visualWidth() {\n    if (Utils.isNumber(this.visualWidthCache)) {\n      return this.visualWidthCache;\n    }\n    const width = this.box().width;\n    this.visualWidthCache = width;\n    return width;\n  }\n\n  /**\n   * 可视区域高度\n   * @return {*}\n   */\n  visualHeight() {\n    if (Utils.isNumber(this.visualHeightCache)) {\n      return this.visualHeightCache;\n    }\n    const height = this.box().height;\n    this.visualHeightCache = height;\n    return height;\n  }\n\n  /**\n   * 获取指定单元格下的行列\n   * @param x\n   * @param y\n   * @returns {{ci: number, ri: number}}\n   */\n  getRiCiByXy(x, y) {\n    const {\n      fixed, rows, cols,\n    } = this;\n    const { index } = this;\n    const fixedHeight = this.getFixedHeight();\n    const fixedWidth = this.getFixedWidth();\n    let [left, top] = [x, y];\n    let [ci, ri] = [-1, -1];\n    left -= index.getWidth();\n    top -= index.getHeight();\n    // left\n    if (left <= fixedWidth && x > index.getWidth()) {\n      let total = 0;\n      for (let i = 0; i <= fixed.fxLeft; i += 1) {\n        const width = cols.getWidth(i);\n        total += width;\n        ci = i;\n        if (total >= left) break;\n      }\n    } else if (x > index.getWidth()) {\n      let total = fixedWidth;\n      const viewRange = this.getScrollView();\n      for (let i = viewRange.sci; i <= viewRange.eci; i += 1) {\n        const width = cols.getWidth(i);\n        total += width;\n        ci = i;\n        if (total >= left) break;\n      }\n    }\n    // top\n    if (top < fixedHeight && y > index.getHeight()) {\n      let total = 0;\n      for (let i = 0; i <= fixed.fxTop; i += 1) {\n        const height = rows.getHeight(i);\n        total += height;\n        ri = i;\n        if (total > top) break;\n      }\n    } else if (y > index.getHeight()) {\n      let total = fixedHeight;\n      const viewRange = this.getScrollView();\n      for (let i = viewRange.sri; i <= viewRange.eri; i += 1) {\n        const height = rows.getHeight(i);\n        total += height;\n        ri = i;\n        if (total > top) break;\n      }\n    }\n    return {\n      ri, ci,\n    };\n  }\n\n  /**\n   * onAttach\n   */\n  onAttach() {\n    const { xTableStyle } = this;\n    this.attach(xTableStyle);\n    this.bind();\n    this.attach(this.xScreen);\n    this.xScreen.addItem(new XSelectItem(this));\n    this.xScreen.addItem(new XautoFillItem(this));\n    this.xScreen.addItem(new XcopyStyle(this));\n    this.attach(this.xReSizer);\n    this.attach(this.yReSizer);\n    this.attach(this.xHeightLight);\n    this.attach(this.yHeightLight);\n    this.attach(this.edit);\n    // 注册快捷键\n    this.keyBoardTab = new KeyBoardTab(this);\n  }\n\n  /**\n   * 事件绑定\n   */\n  bind() {\n    const { mousePointer } = this;\n    EventBind.bind(this, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\n      this.resize();\n    });\n    EventBind.bind(this, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\n      this.resize();\n    });\n    EventBind.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, (e) => {\n      const { x, y } = this.computeEventXy(e);\n      const { ri, ci } = this.getRiCiByXy(x, y);\n      if (ri === -1) {\n        const { type, key } = Constant.MOUSE_POINTER_TYPE.SELECT_ONE_COLUMN;\n        mousePointer.set(type, key);\n        return;\n      }\n      if (ci === -1) {\n        const { type, key } = Constant.MOUSE_POINTER_TYPE.SELECT_ONE_ROW;\n        mousePointer.set(type, key);\n        return;\n      }\n      const { type, key } = Constant.MOUSE_POINTER_TYPE.SELECT_CELL;\n      mousePointer.set(type, key);\n    });\n  }\n\n  /**\n   * 获取滚动视图\n   * @returns {RectRange}\n   */\n  getScrollView() {\n    const { xTableAreaView } = this;\n    return xTableAreaView.getScrollView();\n  }\n\n  /**\n   * 水平滚动\n   * @param x\n   */\n  scrollX(x) {\n    const {\n      cols, fixed, scroll,\n    } = this;\n    let { fxLeft } = fixed;\n    fxLeft += 1;\n    const [\n      ci, left, width,\n    ] = Utils.rangeReduceIf(fxLeft, cols.len, 0, 0, x, i => cols.getWidth(i));\n    let x1 = left;\n    if (x > 0) x1 += width;\n    let type;\n    if (scroll.x > x1) {\n      type = SCROLL_TYPE.H_LEFT;\n    } else if (scroll.x < x1) {\n      type = SCROLL_TYPE.H_RIGHT;\n    }\n    scroll.type = type;\n    scroll.ci = ci;\n    scroll.x = x1;\n    this.scrolling();\n    scroll.type = SCROLL_TYPE.UN;\n  }\n\n  /**\n   * 垂直滚动\n   * @param y\n   */\n  scrollY(y) {\n    const {\n      rows, fixed, scroll,\n    } = this;\n    let { fxTop } = fixed;\n    fxTop += 1;\n    const [\n      ri, top, height,\n    ] = Utils.rangeReduceIf(fxTop, rows.len, 0, 0, y, i => rows.getHeight(i));\n    let y1 = top;\n    if (y > 0) y1 += height;\n    let type;\n    if (scroll.y > y1) {\n      type = SCROLL_TYPE.V_TOP;\n    } else if (scroll.y < y1) {\n      type = SCROLL_TYPE.V_BOTTOM;\n    }\n    scroll.type = type;\n    scroll.ri = ri;\n    scroll.y = y1;\n    this.scrolling();\n    scroll.type = SCROLL_TYPE.UN;\n  }\n\n  /**\n   * 获取向上滚动的距离\n   * @returns {*}\n   */\n  getTop() {\n    const { rows } = this;\n    const view = this.getScrollView();\n    return rows.sectionSumHeight(0, view.sri - 1);\n  }\n\n  /**\n   * 获取向左滚动的距离\n   * @returns {*}\n   */\n  getLeft() {\n    const { cols } = this;\n    const view = this.getScrollView();\n    return cols.sectionSumWidth(0, view.sci - 1);\n  }\n\n  /**\n   * 重置界面大小\n   */\n  resize() {\n    const {\n      xTableStyle,\n    } = this;\n    this.visualHeightCache = null;\n    this.visualWidthCache = null;\n    this.reset();\n    xTableStyle.resize();\n  }\n\n  /**\n   * 重置变量区\n   */\n  reset() {\n    const { xTableAreaView } = this;\n    const { xTableFrozenContent } = this;\n    const { xLeftIndex } = this;\n    const { xTopIndex } = this;\n    const { xLeft } = this;\n    const { xTop } = this;\n    const { xContent } = this;\n    xTableAreaView.reset();\n    xTableFrozenContent.reset();\n    xLeftIndex.reset();\n    xTopIndex.reset();\n    xLeft.reset();\n    xTop.reset();\n    xContent.reset();\n  }\n\n  /**\n   * 设置缩放比\n   */\n  setScale(val) {\n    const { xTableStyle } = this;\n    this.reset();\n    this.scale.setValue(val);\n    this.screen.setDivideLayer();\n    this.xHeightLight.setSize();\n    this.yHeightLight.setSize();\n    xTableStyle.setScale(val);\n    this.trigger(Constant.TABLE_EVENT_TYPE.SCALE_CHANGE);\n  }\n\n  /**\n   * 渲染静态界面\n   */\n  render() {\n    const { xTableStyle } = this;\n    xTableStyle.render();\n  }\n\n  /**\n   * 渲染滚动界面\n   */\n  scrolling() {\n    const { xTableStyle } = this;\n    this.reset();\n    xTableStyle.scrolling();\n    this.trigger(Constant.SYSTEM_EVENT_TYPE.SCROLL);\n  }\n\n}\n\nexport {\n  XTableDimensions,\n};\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { EventBind } from '../../utils/EventBind';\r\nimport { XTableDimensions } from '../table/XTableDimensions,';\r\n\r\nclass Sheet extends Widget {\r\n\r\n  constructor(options = {\r\n    tableConfig: {\r\n      data: [],\r\n    },\r\n  }) {\r\n    super(`${cssPrefix}-sheet`);\r\n    this.options = options;\r\n    this.table = new XTableDimensions({\r\n      settings: this.options.tableConfig,\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    EventBind.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, (e) => {\r\n      this.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, this);\r\n      e.stopPropagation();\r\n    });\r\n    EventBind.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, (e) => {\r\n      this.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, this);\r\n      e.stopPropagation();\r\n    });\r\n    EventBind.bind(table, Constant.TABLE_EVENT_TYPE.SELECT_CHANGE, (e) => {\r\n      this.trigger(Constant.TABLE_EVENT_TYPE.SELECT_CHANGE, this);\r\n      e.stopPropagation();\r\n    });\r\n    EventBind.bind(table, Constant.TABLE_EVENT_TYPE.SELECT_DOWN, (e) => {\r\n      this.trigger(Constant.TABLE_EVENT_TYPE.SELECT_DOWN, this);\r\n      e.stopPropagation();\r\n    });\r\n  }\r\n\r\n  onAttach() {\r\n    const { table } = this;\r\n    this.attach(table);\r\n    this.bind();\r\n  }\r\n}\r\n\r\nexport { Sheet };\r\n","/* global window */\r\nimport { Widget } from '../../lib/Widget';\r\nimport { cssPrefix, Constant, XSheetVersion } from '../../const/Constant';\r\nimport { VerticalLayer } from '../../lib/layer/VerticalLayer';\r\nimport { HorizontalLayer } from '../../lib/layer/HorizontalLayer';\r\nimport { VerticalLayerElement } from '../../lib/layer/VerticalLayerElement';\r\nimport { ScrollBarX } from '../../component/scrollbar/ScrollBarX';\r\nimport { ScrollBarY } from '../../component/scrollbar/ScrollBarY';\r\nimport { HorizontalLayerElement } from '../../lib/layer/HorizontalLayerElement';\r\nimport { VerticalCenterElement } from '../../lib/layer/center/VerticalCenterElement';\r\nimport { VerticalCenter } from '../../lib/layer/center/VerticalCenter';\r\n\r\nimport { SheetView } from './SheetView';\r\nimport { TabView } from './TabView';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { EventBind } from '../../utils/EventBind';\r\nimport { h } from '../../lib/Element';\r\nimport { Tab } from './Tab';\r\nimport { Sheet } from './Sheet';\r\n\r\nimport download from '../../lib/donwload/download';\r\n\r\nclass WorkBody extends Widget {\r\n\r\n  constructor(work, options = { sheets: [] }) {\r\n    super(`${cssPrefix}-work-body`);\r\n    this.work = work;\r\n    this.workConfig = options;\r\n    this.sheets = this.workConfig.sheets;\r\n    this.tabSheet = [];\r\n    this.activeIndex = -1;\r\n    // 版本标识\r\n    this.poweredBy = h('div', `${cssPrefix}-powered-by-tips`);\r\n    this.poweredBy.html(`<a target=\"_blank\" href=\"https://gitee.com/eigi/x-sheet\">\r\n${XSheetVersion}\r\n</a>`);\r\n    this.children(this.poweredBy);\r\n    // sheet表\r\n    this.sheetViewLayer = new HorizontalLayerElement({\r\n      style: {\r\n        flexGrow: 1,\r\n      },\r\n    });\r\n    // 垂直滚动条\r\n    this.scrollBarYLayer = new HorizontalLayerElement({\r\n      style: {\r\n        overflow: 'inherit',\r\n      },\r\n    });\r\n    // 水平滚动条\r\n    this.scrollBarXLayer = new VerticalCenterElement();\r\n    this.scrollBarXVerticalCenter = new VerticalCenter();\r\n    this.scrollBarXHorizontalLayer = new HorizontalLayerElement({\r\n      style: {\r\n        flexGrow: 2,\r\n      },\r\n    });\r\n    this.scrollBarXVerticalCenter.children(this.scrollBarXLayer);\r\n    this.scrollBarXHorizontalLayer.children(this.scrollBarXVerticalCenter);\r\n    // 选项卡\r\n    this.sheetSwitchTabLayer = new HorizontalLayerElement({\r\n      style: {\r\n        flexGrow: 3,\r\n      },\r\n    });\r\n    // 水平布局\r\n    this.horizontalLayer1 = new HorizontalLayer();\r\n    this.horizontalLayer2 = new HorizontalLayer();\r\n    this.horizontalLayer1.children(this.sheetViewLayer);\r\n    this.horizontalLayer1.children(this.scrollBarYLayer);\r\n    this.horizontalLayer2.children(this.sheetSwitchTabLayer);\r\n    this.horizontalLayer2.children(this.scrollBarXHorizontalLayer);\r\n    // 根布局\r\n    this.horizontalLayer1Layer = new VerticalLayerElement({\r\n      style: {\r\n        flexGrow: 1,\r\n      },\r\n    });\r\n    this.horizontalLayer2Layer = new VerticalLayerElement();\r\n    this.layerVerticalLayer = new VerticalLayer();\r\n    this.horizontalLayer1Layer.children(this.horizontalLayer1);\r\n    this.horizontalLayer2Layer.children(this.horizontalLayer2);\r\n    this.layerVerticalLayer.children(this.horizontalLayer1Layer);\r\n    this.layerVerticalLayer.children(this.horizontalLayer2Layer);\r\n    this.children(this.layerVerticalLayer);\r\n    // 组件\r\n    this.scrollBarY = new ScrollBarY({\r\n      scroll: (move) => {\r\n        const sheet = this.sheetView.getActiveSheet();\r\n        sheet.table.scrollY(move);\r\n      },\r\n    });\r\n    this.scrollBarX = new ScrollBarX({\r\n      scroll: (move) => {\r\n        const sheet = this.sheetView.getActiveSheet();\r\n        sheet.table.scrollX(move);\r\n      },\r\n    });\r\n    this.sheetView = new SheetView();\r\n    this.tabView = new TabView({\r\n      onAdd: () => {\r\n        const sheet = new Sheet();\r\n        const tab = new Tab();\r\n        this.addTabSheet({ tab, sheet });\r\n      },\r\n      onSwitch: (tab) => {\r\n        this.setActiveTab(tab);\r\n      },\r\n    });\r\n  }\r\n\r\n  updateScroll() {\r\n    const sheet = this.sheetView.getActiveSheet();\r\n    if (Utils.isUnDef(sheet)) return;\r\n    const { scrollBarXHorizontalLayer } = this;\r\n    const { table } = sheet;\r\n    // 更新表格大小\r\n    table.resize();\r\n    // 获取表格大小\r\n    const totalHeight = table.getScrollTotalHeight();\r\n    const totalWidth = table.getScrollTotalWidth();\r\n    // 是否显示水平滚动条\r\n    scrollBarXHorizontalLayer.display(totalWidth > table.getContentWidth());\r\n    // 调整滚动条尺寸\r\n    this.scrollBarY.setSize(table.getContentHeight(), totalHeight);\r\n    this.scrollBarX.setSize(table.getContentWidth(), totalWidth);\r\n    // 滚动到指定距离\r\n    this.scrollBarY.scrollMove(table.getTop());\r\n    this.scrollBarX.scrollMove(table.getLeft());\r\n    // 更新表格大小\r\n    table.resize();\r\n  }\r\n\r\n  createSheet() {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const item of this.sheets) {\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      const { name } = item;\r\n      const sheet = new Sheet(item);\r\n      const tab = new Tab(name);\r\n      this.addTabSheet({ tab, sheet });\r\n    }\r\n    if (this.tabSheet.length) {\r\n      this.setActiveIndex(0);\r\n    }\r\n  }\r\n\r\n  bind() {\r\n    this.on(Constant.SYSTEM_EVENT_TYPE.MOUSE_WHEEL, (evt) => {\r\n      const sheet = this.sheetView.getActiveSheet();\r\n      if (Utils.isUnDef(sheet)) return;\r\n      const { table } = sheet;\r\n      const { rows, scroll } = table;\r\n      const { scrollTo } = this.scrollBarY;\r\n      let { deltaY } = evt;\r\n      if (evt.detail) deltaY = evt.detail * 40;\r\n      if (deltaY > 0) {\r\n        // down\r\n        this.scrollBarY.scrollMove(scrollTo + rows.getHeight(scroll.ri));\r\n      } else {\r\n        // up\r\n        this.scrollBarY.scrollMove(scrollTo - rows.getHeight(scroll.ri - 1));\r\n      }\r\n      if (scroll.blockTop < scroll.maxBlockTop && scroll.blockTop > 0) {\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n      }\r\n    });\r\n    EventBind.bind(window, Constant.SYSTEM_EVENT_TYPE.RESIZE, () => {\r\n      Utils.throttle(() => {\r\n        this.updateScroll();\r\n      });\r\n    });\r\n    EventBind.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.updateScroll();\r\n    });\r\n    EventBind.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      this.updateScroll();\r\n    });\r\n    EventBind.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.DATA_CHANGE, (e) => {\r\n      this.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      e.stopPropagation();\r\n    });\r\n    EventBind.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.SELECT_CHANGE, (e) => {\r\n      this.trigger(Constant.TABLE_EVENT_TYPE.SELECT_CHANGE);\r\n      e.stopPropagation();\r\n    });\r\n    EventBind.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.SELECT_DOWN, (e) => {\r\n      this.trigger(Constant.TABLE_EVENT_TYPE.SELECT_DOWN, this);\r\n      e.stopPropagation();\r\n    });\r\n  }\r\n\r\n  onAttach() {\r\n    const {\r\n      sheetViewLayer, scrollBarYLayer, sheetSwitchTabLayer, scrollBarXLayer,\r\n    } = this;\r\n    scrollBarYLayer.attach(this.scrollBarY);\r\n    scrollBarXLayer.attach(this.scrollBarX);\r\n    sheetSwitchTabLayer.attach(this.tabView);\r\n    sheetViewLayer.attach(this.sheetView);\r\n    this.bind();\r\n    this.createSheet();\r\n    this.updateScroll();\r\n  }\r\n\r\n  addTabSheet({ tab, sheet }) {\r\n    const {\r\n      tabSheet, sheetView, tabView,\r\n    } = this;\r\n    sheetView.attach(sheet);\r\n    tabView.attach(tab);\r\n    tabSheet.push({\r\n      tab, sheet,\r\n    });\r\n  }\r\n\r\n  setActiveIndex(index) {\r\n    const { sheetView, tabView } = this;\r\n    const sheet = sheetView.setActiveSheet(index);\r\n    const tab = tabView.setActiveTab(index);\r\n    if (sheet && tab) {\r\n      this.updateScroll();\r\n      this.trigger(Constant.WORK_BODY_EVENT_TYPE.CHANGE_ACTIVE);\r\n      this.activeIndex = index;\r\n    }\r\n  }\r\n\r\n  setActiveTab(tab) {\r\n    this.tabSheet.forEach((item, index) => {\r\n      if (item.tab === tab) {\r\n        this.setActiveIndex(index);\r\n      }\r\n    });\r\n  }\r\n\r\n  toTemplate() {\r\n    const { activeIndex, sheetView, tabView } = this;\r\n    const sheet = sheetView.sheetList[activeIndex];\r\n    const tab = tabView.tabList[activeIndex];\r\n    if (sheet && tab) {\r\n      const { table } = sheet;\r\n      const {\r\n        rows, cols, settings,\r\n      } = table;\r\n      const cells = table.getTableCells();\r\n      const merges = table.getTableMerges();\r\n      const data = {\r\n        name: tab.name,\r\n        tableConfig: {\r\n          table: {\r\n            showGrid: settings.table.showGrid,\r\n            background: settings.table.background,\r\n          },\r\n          rows: {\r\n            len: rows.len,\r\n            height: rows.height,\r\n            data: rows.getData(),\r\n          },\r\n          cols: {\r\n            len: cols.len,\r\n            width: cols.width,\r\n            data: cols.getData(),\r\n          },\r\n          merge: {\r\n            merges: merges.getData().map(merge => merge.toString()),\r\n          },\r\n          data: cells.getData(),\r\n        },\r\n      };\r\n      const text = `window['${tab.name}'] = ${JSON.stringify(data)}`;\r\n      download(text, `${tab.name}.js`, 'application/x-javascript');\r\n    }\r\n  }\r\n\r\n  setScale(value) {\r\n    const { sheetView } = this;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    table.setScale(value);\r\n    this.updateScroll();\r\n  }\r\n}\r\n\r\nexport { WorkBody };\r\n","import { Widget } from '../../lib/Widget';\r\nimport { Constant, cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../lib/Element';\r\nimport { EventBind } from '../../utils/EventBind';\r\nimport { Utils } from '../../utils/Utils';\r\n\r\n/* global  document */\r\n\r\nclass BottomMenu extends Widget {\r\n  constructor(workBottom) {\r\n    super(`${cssPrefix}-bottom-menu`);\r\n    this.workBottom = workBottom;\r\n    this.sum = h('div', `${cssPrefix}-bottom-sum`);\r\n    this.avg = h('div', `${cssPrefix}-bottom-avg`);\r\n    this.number = h('div', `${cssPrefix}-bottom-number`);\r\n    this.fullScreen = h('div', `${cssPrefix}-bottom-full-screen`);\r\n    this.grid = h('div', `${cssPrefix}-bottom-grid`);\r\n    this.children(this.grid);\r\n    this.children(this.fullScreen);\r\n    this.children(this.sum);\r\n    this.children(this.avg);\r\n    this.children(this.number);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n  }\r\n\r\n  bind() {\r\n    const { workBottom } = this;\r\n    const { work } = workBottom;\r\n    const { body } = work;\r\n    const { sheetView } = body;\r\n    EventBind.bind(this.grid, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      table.settings.table.showGrid = !table.settings.table.showGrid;\r\n      table.render();\r\n    });\r\n    EventBind.bind(this.fullScreen, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      if (Utils.isFull()) {\r\n        Utils.exitFullscreen();\r\n      } else {\r\n        Utils.fullScreen(work.root);\r\n      }\r\n    });\r\n  }\r\n\r\n  setSum(val) {\r\n    this.sum.text(`求和: ${val}`);\r\n  }\r\n\r\n  setAvg(val) {\r\n    this.avg.text(`平均数: ${val}`);\r\n  }\r\n\r\n  setNumber(val) {\r\n    this.number.text(`数量: ${val}`);\r\n  }\r\n}\r\n\r\nexport { BottomMenu };\r\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { BottomMenu } from './BottomMenu';\r\n\r\nclass WorkBottom extends Widget {\r\n\r\n  constructor(work) {\r\n    super(`${cssPrefix}-work-bottom`);\r\n    this.work = work;\r\n  }\r\n\r\n  onAttach() {\r\n    this.bottomMenu = new BottomMenu(this);\r\n    this.attach(this.bottomMenu);\r\n  }\r\n}\r\n\r\nexport { WorkBottom };\r\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { VerticalLayer } from '../../lib/layer/VerticalLayer';\r\nimport { VerticalLayerElement } from '../../lib/layer/VerticalLayerElement';\r\nimport { WorkTop } from './WorkTop';\r\nimport { WorkBody } from './WorkBody';\r\nimport { WorkBottom } from './WorkBottom';\r\n\r\nclass Work extends Widget {\r\n\r\n  constructor(options = {\r\n    body: {},\r\n  }) {\r\n    super(`${cssPrefix}-work`);\r\n    this.options = options.workConfig;\r\n    this.root = null;\r\n    // 布局\r\n    this.topLayer = new VerticalLayerElement();\r\n    this.bodyLayer = new VerticalLayerElement({\r\n      style: {\r\n        flexGrow: 1,\r\n      },\r\n    });\r\n    this.bottomLayer = new VerticalLayerElement();\r\n    this.verticalLayer = new VerticalLayer();\r\n    this.verticalLayer.children(this.topLayer);\r\n    this.verticalLayer.children(this.bodyLayer);\r\n    this.verticalLayer.children(this.bottomLayer);\r\n    this.children(this.verticalLayer);\r\n    // 组件\r\n    this.top = new WorkTop(this);\r\n    this.body = new WorkBody(this, this.options.body);\r\n    this.bottom = new WorkBottom(this);\r\n  }\r\n\r\n  onAttach(element) {\r\n    this.root = element;\r\n    const {\r\n      bodyLayer, topLayer, bottomLayer,\r\n    } = this;\r\n    topLayer.attach(this.top);\r\n    bottomLayer.attach(this.bottom);\r\n    bodyLayer.attach(this.body);\r\n    this.bottom.bottomMenu.setSum(0);\r\n    this.bottom.bottomMenu.setAvg(0);\r\n    this.bottom.bottomMenu.setNumber(0);\r\n  }\r\n}\r\n\r\nexport { Work };\r\n","/* global window, document */\r\n\r\nimport {\r\n  cssPrefix, XSheetVersion,\r\n} from './const/Constant';\r\nimport { h } from './lib/Element';\r\nimport { Work } from './core/work/Work';\r\nimport { Widget } from './lib/Widget';\r\nimport './styles/base.less';\r\nimport './styles/index.less';\r\nimport { ElPopUp } from './component/elpopup/ElPopUp';\r\nimport { DragPanel } from './component/dragpanel/DragPanel';\r\nimport { Utils } from './utils/Utils';\r\n\r\nclass XSheet extends Widget {\r\n\r\n  constructor(selectors, options = {\r\n    workConfig: {\r\n      body: {\r\n        sheets: [{\r\n          tableConfig: {},\r\n        }],\r\n      },\r\n    },\r\n  }) {\r\n    super(`${cssPrefix}`);\r\n    let root = selectors;\r\n    if (typeof selectors === 'string') {\r\n      root = document.querySelector(selectors);\r\n    }\r\n    root = h(root);\r\n    root.children(this);\r\n    this.work = new Work(options);\r\n    this.attach(this.work);\r\n    ElPopUp.setRoot(this);\r\n    DragPanel.setRoot(this);\r\n  }\r\n}\r\n\r\nXSheet.version = XSheetVersion;\r\n\r\nXSheet.Utils = Utils;\r\n\r\nif (window) {\r\n  window.XSheet = XSheet;\r\n}\r\n\r\nexport { XSheet };\r\n"],"sourceRoot":""}