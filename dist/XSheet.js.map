{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/svg/cell.png","webpack:///./assets/svg/s-resize.png","webpack:///./assets/svg/e-resize.png","webpack:///./assets/svg/filter-dark.svg","webpack:///./src/libs/donwload/Download.js","webpack:///./src/const/Constant.js","webpack:///./src/utils/PlainUtils.js","webpack:///./src/libs/Element.js","webpack:///./src/libs/XEvent.js","webpack:///./src/libs/Widget.js","webpack:///./src/libs/Layer.js","webpack:///./src/libs/layer/VerticalLayer.js","webpack:///./src/libs/layer/VerticalLayerElement.js","webpack:///./src/core/work/tools/Icon.js","webpack:///./src/core/work/tools/base/Item.js","webpack:///./src/core/work/tools/Undo.js","webpack:///./src/core/work/tools/Redo.js","webpack:///./src/core/work/tools/PaintFormat.js","webpack:///./src/core/work/tools/ClearFormat.js","webpack:///./src/core/work/tools/base/DropDownItem.js","webpack:///./src/component/elpopup/ElPopUp.js","webpack:///./src/component/contextmenu/ELContextMenu.js","webpack:///./src/component/contextmenu/ELContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/format/FormatContextMenuItem.js","webpack:///./src/component/contextmenu/ELContextMenuDivider.js","webpack:///./src/core/work/tools/contextmenu/format/FormatContextMenu.js","webpack:///./src/core/work/tools/Format.js","webpack:///./src/core/work/tools/contextmenu/font/FontContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/font/FontContextMenu.js","webpack:///./src/core/work/tools/Font.js","webpack:///./src/core/work/tools/contextmenu/fontsize/FontSizeContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/fontsize/FontSizeContextMenu.js","webpack:///./src/core/work/tools/FontSize.js","webpack:///./src/core/work/tools/FontBold.js","webpack:///./src/core/work/tools/FontItalic.js","webpack:///./src/core/work/tools/UnderLine.js","webpack:///./src/core/work/tools/FontStrike.js","webpack:///./src/core/work/tools/contextmenu/fontcolor/FontColorContextMenuItem.js","webpack:///./src/component/dragpanel/DragPanel.js","webpack:///./src/component/colorpicker/ColorPicker.js","webpack:///./src/component/colorpicker/colorarray/ColorItem.js","webpack:///./src/component/colorpicker/colorarray/ColorArray.js","webpack:///./src/core/work/tools/contextmenu/fontcolor/FontColorContextMenu.js","webpack:///./src/core/work/tools/FontColor.js","webpack:///./src/core/work/tools/contextmenu/fillcolor/FillColorContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/fillcolor/FillColorContextMenu.js","webpack:///./src/core/work/tools/FillColor.js","webpack:///./src/core/work/tools/contextmenu/border/bordertype/BorderTypeContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon1.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon2.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon3.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon4.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon5.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon6.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon7.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon8.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon9.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon10.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderColor.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderType.js","webpack:///./src/core/work/tools/contextmenu/border/bordercolor/BorderColorContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/border/bordercolor/BorderColorContextMenu.js","webpack:///./src/core/work/tools/contextmenu/border/linetype/LineTypeContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/border/linetype/LineTypeContextMenu.js","webpack:///./src/canvas/XDraw.js","webpack:///./src/canvas/Line.js","webpack:///./src/core/work/tools/contextmenu/border/bordertype/BorderTypeContextMenu.js","webpack:///./src/core/work/tools/Border.js","webpack:///./src/core/work/tools/Merge.js","webpack:///./src/core/work/tools/contextmenu/icon/horizontal/HorizontalIcon1.js","webpack:///./src/core/work/tools/contextmenu/icon/horizontal/HorizontalIcon2.js","webpack:///./src/core/work/tools/contextmenu/icon/horizontal/HorizontalIcon3.js","webpack:///./src/core/work/tools/contextmenu/horizontal/HorizontalContextMenuItem.js","webpack:///./src/canvas/font/BaseFont.js","webpack:///./src/core/work/tools/contextmenu/horizontal/HorizontalContextMenu.js","webpack:///./src/core/work/tools/HorizontalAlign.js","webpack:///./src/core/work/tools/contextmenu/vertical/VerticalContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/icon/vertical/VerticalIcon1.js","webpack:///./src/core/work/tools/contextmenu/icon/vertical/VerticalIcon2.js","webpack:///./src/core/work/tools/contextmenu/icon/vertical/VerticalIcon3.js","webpack:///./src/core/work/tools/contextmenu/vertical/VerticalContextMenu.js","webpack:///./src/core/work/tools/VerticalAlign.js","webpack:///./src/core/work/tools/contextmenu/icon/textwrapping/TextWrappingIcon1.js","webpack:///./src/core/work/tools/contextmenu/icon/textwrapping/TextWrappingIcon2.js","webpack:///./src/core/work/tools/contextmenu/icon/textwrapping/TextWrappingIcon3.js","webpack:///./src/core/work/tools/contextmenu/textwrapping/TextWrappingContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/textwrapping/TextWrappingContextMenu.js","webpack:///./src/core/work/tools/TextWrapping.js","webpack:///./src/core/work/tools/contextmenu/fixed/FixedContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/fixed/FixedContextMenu.js","webpack:///./src/core/work/tools/Fixed.js","webpack:///./src/core/work/tools/Filter.js","webpack:///./src/core/work/tools/Functions.js","webpack:///./src/core/table/tablecell/CellFont.js","webpack:///./src/core/table/tablecell/Border.js","webpack:///./src/core/table/tablecell/CellBorder.js","webpack:///./src/canvas/Rect.js","webpack:///./src/core/table/xicon/XIconOffset.js","webpack:///./src/canvas/Crop.js","webpack:///./src/core/table/xicon/XIcon.js","webpack:///./src/core/table/tablecell/Cell.js","webpack:///./src/core/work/tools/contextmenu/scale/ScaleContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/scale/ScaleContextMenu.js","webpack:///./src/core/work/tools/Scale.js","webpack:///./src/core/table/tablebase/RectRange.js","webpack:///./src/core/table/xscreen/part/XScreenPart.js","webpack:///./src/core/table/xscreen/part/XScreenLTPart.js","webpack:///./src/core/table/xscreen/part/XScreenTPart.js","webpack:///./src/core/table/xscreen/part/XScreenLPart.js","webpack:///./src/core/table/xscreen/part/XScreenBRPart.js","webpack:///./src/core/table/xscreen/item/XScreenItem.js","webpack:///./src/core/table/xscreen/item/viewdisplay/XScreenViewEyes.js","webpack:///./src/core/table/xscreen/item/viewdisplay/XScreenViewLocal.js","webpack:///./src/core/table/xscreen/item/viewdisplay/XScreenViewSizer.js","webpack:///./src/core/table/xscreen/item/viewborder/XScreenStyleBorderItem.js","webpack:///./src/core/table/xscreen/item/viewborder/XScreenCssBorderItem.js","webpack:///./src/core/table/XTableMousePointer.js","webpack:///./src/core/table/xscreenitems/xselect/XSelectItem.js","webpack:///./src/component/alert/Alert.js","webpack:///./src/component/mask/Mask.js","webpack:///./src/component/filterdata/OrderAZ.js","webpack:///./src/component/filterdata/OrderZA.js","webpack:///./src/component/form/select/SelectContextMenu.js","webpack:///./src/component/form/select/SelectContextMenuItem.js","webpack:///./src/component/form/select/Select.js","webpack:///./src/component/form/input/PlainInput.js","webpack:///./src/component/filterdata/IFFilter.js","webpack:///./src/component/form/input/SearchInput.js","webpack:///./src/component/filterdata/valuefilter/ValueFilter.js","webpack:///./src/component/filterdata/FilterData.js","webpack:///./src/component/filterdata/valuefilter/ValueItem.js","webpack:///./src/core/table/xscreenitems/xfilter/XFilter.js","webpack:///./src/core/table/xscreen/item/viewborder/XScreenSvgBorderItem.js","webpack:///./src/core/table/xscreenitems/xcopystyle/XCopyStyle.js","webpack:///./src/component/confirm/Confirm.js","webpack:///./src/core/work/tools/contextmenu/fontangle/FontAngleContextMenuItem.js","webpack:///./src/core/work/tools/base/Divider.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngleDivider.js","webpack:///./src/core/work/tools/base/DropInputItem.js","webpack:///./src/core/work/tools/contextmenu/fontanglevalue/FontAngleValueContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/fontanglevalue/FontAngleValueContextMenu.js","webpack:///./src/core/work/tools/FontAngleValue.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngle1.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngle2.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngle3.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngle4.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngle5.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngle6.js","webpack:///./src/core/work/tools/contextmenu/fontangle/FontAngleContextMenu.js","webpack:///./src/core/work/tools/FontAngle.js","webpack:///./src/core/work/TopMenu.js","webpack:///./src/core/work/options/base/Item.js","webpack:///./src/core/work/options/contextmenu/file/FileContextMenuItem.js","webpack:///./src/core/work/options/contextmenu/file/FileContextMenu.js","webpack:///./src/core/work/options/File.js","webpack:///./src/core/work/options/ForMart.js","webpack:///./src/core/work/options/Insert.js","webpack:///./src/core/work/options/Look.js","webpack:///./src/core/work/options/Update.js","webpack:///./src/core/work/TopOption.js","webpack:///./src/core/work/WorkTop.js","webpack:///./src/libs/layer/HorizontalLayer.js","webpack:///./src/component/scrollbar/ScrollBarX.js","webpack:///./src/component/scrollbar/ScrollBarY.js","webpack:///./src/libs/layer/HorizontalLayerElement.js","webpack:///./src/libs/layer/center/VerticalCenterElement.js","webpack:///./src/libs/layer/center/VerticalCenter.js","webpack:///./src/core/work/SheetView.js","webpack:///./src/core/work/TabView.js","webpack:///./src/core/work/Tab.js","webpack:///./src/core/table/tablebase/Scale.js","webpack:///./src/core/table/tablebase/Code.js","webpack:///./src/core/table/tablebase/Row.js","webpack:///./src/core/table/tablebase/Rows.js","webpack:///./src/core/table/tablebase/Col.js","webpack:///./src/core/table/tablebase/Cols.js","webpack:///./src/core/table/tablebase/Scroll.js","webpack:///./src/core/table/XTableKeyboard.js","webpack:///./src/core/table/tablefixed/ColFixed.js","webpack:///./src/core/table/resizer/XReSizer.js","webpack:///./src/core/table/tablefixed/RowFixed.js","webpack:///./src/core/table/resizer/YReSizer.js","webpack:///./src/core/table/highlight/XHeightLight.js","webpack:///./src/core/table/highlight/YHeightLight.js","webpack:///./src/core/table/XTableFocus.js","webpack:///./src/core/table/XTableScrollView.js","webpack:///./src/core/table/XTableAreaView.js","webpack:///./src/libs/Throttle.js","webpack:///./src/core/table/XTableEdit.js","webpack:///./src/canvas/Grid.js","webpack:///./src/canvas/Box.js","webpack:///./src/core/table/tablecell/Cells.js","webpack:///./src/utils/DateUtils.js","webpack:///./src/core/table/XTableFormat.js","webpack:///./src/canvas/RTFunction.js","webpack:///./src/canvas/Angle.js","webpack:///./src/canvas/font/DrawResult.js","webpack:///./src/canvas/font/draw/AngleBoxDraw.js","webpack:///./src/canvas/font/draw/AngleBarDraw.js","webpack:///./src/canvas/font/draw/HorizonDraw.js","webpack:///./src/canvas/font/draw/VerticalDraw.js","webpack:///./src/canvas/font/BaseRuler.js","webpack:///./src/canvas/font/PlainRuler.js","webpack:///./src/canvas/font/ruler/AngleBoxRuler.js","webpack:///./src/canvas/font/ruler/AngleBarRuler.js","webpack:///./src/canvas/font/ruler/HorizonRuler.js","webpack:///./src/canvas/font/ruler/HorizonVisual.js","webpack:///./src/canvas/font/ruler/VerticalRuler.js","webpack:///./src/canvas/font/ruler/VerticalVisual.js","webpack:///./src/canvas/font/build/DrawFontBuilder.js","webpack:///./src/core/table/tablebase/Text.js","webpack:///./src/core/table/helper/BaseCellsHelper.js","webpack:///./src/core/table/helper/StyleCellsHelper.js","webpack:///./src/core/table/helper/TextCellsHelper.js","webpack:///./src/core/table/XTableHistoryAreaView.js","webpack:///./src/core/table/helper/OperateCellsHelper.js","webpack:///./src/core/table/tablebase/XFixedMeasure.js","webpack:///./src/core/table/cellicon/CellIcon.js","webpack:///./src/core/table/cellicon/FixedCellIcon.js","webpack:///./src/core/table/cellicon/StaticCellIcon.js","webpack:///./src/core/table/xlinehandle/XLineIteratorFilter.js","webpack:///./src/core/table/xlinehandle/XLineIteratorLoop.js","webpack:///./src/core/table/xlinehandle/XLineIteratorItem.js","webpack:///./src/core/table/xlinehandle/linefilters/borderhidden/BBorderHide.js","webpack:///./src/core/table/xlinehandle/linefilters/mergenulledge/MergeBNullEdge.js","webpack:///./src/core/table/xlinehandle/linefilters/borderhidden/RBorderHide.js","webpack:///./src/core/table/xlinehandle/linefilters/mergenulledge/MergeRNullEdge.js","webpack:///./src/core/table/xlinehandle/linefilters/celloutrange/CellOutRange.js","webpack:///./src/core/table/xlinehandle/linefilters/celloutrange/RCellOutRange.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarhidden/AngleBarHide.js","webpack:///./src/core/table/xlinehandle/linegrids/LineGrid.js","webpack:///./src/core/table/xlinehandle/XLineOptimizeJoin.js","webpack:///./src/core/table/xlinehandle/linefilters/borderdisplay/BBorderShow.js","webpack:///./src/core/table/xlinehandle/linefilters/borderpriority/BBorderPriority.js","webpack:///./src/core/table/xlinehandle/linefilters/borderdisplay/TBorderShow.js","webpack:///./src/core/table/xlinehandle/linefilters/borderpriority/TBorderPriority.js","webpack:///./src/core/table/xlinehandle/linefilters/mergenulledge/MergeTNullEdge.js","webpack:///./src/core/table/xlinehandle/linefilters/borderdisplay/RBorderShow.js","webpack:///./src/core/table/xlinehandle/linefilters/borderpriority/RBorderPriority.js","webpack:///./src/core/table/xlinehandle/linefilters/borderpriority/LBorderPriority.js","webpack:///./src/core/table/xlinehandle/linefilters/borderdisplay/LBorderShow.js","webpack:///./src/core/table/xlinehandle/linefilters/mergenulledge/MergeLNullEdge.js","webpack:///./src/core/table/xlinehandle/linefilters/celloutrange/LCellOutRange.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarhidden/LAngleBarHide.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarhidden/RAngleBarHide.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarhidden/TAngleBarHide.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarhidden/BAngleBarHide.js","webpack:///./src/core/table/xlinehandle/lineborder/LineBorder.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebardisplay/AngleBarShow.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarinrow/AngleBarInRow.js","webpack:///./src/core/table/xlinehandle/anglebar/AngleBar.js","webpack:///./src/core/table/xlinehandle/lineindex/LineIndex.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarout/LAngleBarOut.js","webpack:///./src/core/table/xlinehandle/anglebarout/AngleBarLOut.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarout/RAngleBarOut.js","webpack:///./src/core/table/xlinehandle/anglebarout/AngleBarROut.js","webpack:///./src/core/table/xlinehandle/XLinePlainGenerator.js","webpack:///./src/core/table/xmerges/XMergesIndex.js","webpack:///./src/core/table/xmerges/XMergesNo.js","webpack:///./src/core/table/xmerges/XMergesNoRow.js","webpack:///./src/core/table/xmerges/XMergesItems.js","webpack:///./src/core/table/xmerges/XMergesNoCol.js","webpack:///./src/core/table/xmerges/XMergesRange.js","webpack:///./src/core/table/xmerges/XMerges.js","webpack:///./src/core/table/XTableDataItem.js","webpack:///./src/core/table/XTableDataItems.js","webpack:///./src/canvas/Path.js","webpack:///./src/canvas/Point.js","webpack:///./src/core/table/XTableStyle.js","webpack:///./src/core/table/xscreen/zone/XScreenZone.js","webpack:///./src/core/table/xscreen/zone/XScreenBRZone.js","webpack:///./src/core/table/xscreen/zone/XScreenLTZone.js","webpack:///./src/core/table/xscreen/zone/XScreenLZone.js","webpack:///./src/core/table/xscreen/zone/XScreenTZone.js","webpack:///./src/core/table/xscreen/XScreen.js","webpack:///./src/component/autofilltype/AutoFillTypeMenuItem.js","webpack:///./src/component/autofilltype/AutoFillTypeMenu.js","webpack:///./src/component/autofilltype/AutoFillType.js","webpack:///./src/core/table/helper/CellMergeCopyHelper.js","webpack:///./src/core/table/xscreenitems/xautofill/XAutoFillItem.js","webpack:///./src/core/table/tablefixed/drop/DropRowFixed.js","webpack:///./src/core/table/tablefixed/drop/DropColFixed.js","webpack:///./src/core/table/tablebase/XFixedView.js","webpack:///./src/core/table/datasnapshot/DataProxy.js","webpack:///./src/core/table/datasnapshot/proxy/TableCellDataProxy.js","webpack:///./src/core/table/datasnapshot/record/CellDataRecord.js","webpack:///./src/core/table/datasnapshot/record/MergeDataRecord.js","webpack:///./src/core/table/datasnapshot/proxy/TableMergeDataProxy.js","webpack:///./src/core/table/datasnapshot/proxy/TableColsDataProxy.js","webpack:///./src/core/table/datasnapshot/record/ColsDataRecord.js","webpack:///./src/core/table/datasnapshot/proxy/TableRowsDataProxy.js","webpack:///./src/core/table/datasnapshot/record/RowsDataRecord.js","webpack:///./src/core/table/datasnapshot/TableDataSnapshot.js","webpack:///./src/libs/Clipboard.js","webpack:///./src/core/table/xicon/XIconFocus.js","webpack:///./src/core/table/xicon/XIconBuilder.js","webpack:///./src/core/table/iterator/BaseIterator.js","webpack:///./src/core/table/iterator/RowsIterator.js","webpack:///./src/core/table/iterator/ColsIterator.js","webpack:///./src/core/table/iterator/XIteratorBuilder.js","webpack:///./src/core/table/tablebase/RowHeightGroupIndex.js","webpack:///./src/core/table/XTableDimensions.js","webpack:///./src/core/work/Sheet.js","webpack:///./src/core/work/WorkBody.js","webpack:///./src/core/work/BottomMenu.js","webpack:///./src/core/work/WorkBottom.js","webpack:///./src/core/work/Work.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","define","download","data","strFileName","strMimeType","blob","reader","self","window","defaultMime","mimeType","payload","url","anchor","document","createElement","toString","a","String","myBlob","Blob","MozBlob","WebKitBlob","fileName","this","length","split","pop","href","indexOf","ajax","XMLHttpRequest","open","responseType","onload","e","target","response","setTimeout","send","test","navigator","msSaveBlob","dataUrlToBlob","saver","type","strUrl","parts","binData","atob","decodeURIComponent","mx","uiArr","Uint8Array","charCodeAt","winMode","setAttribute","className","innerHTML","style","display","body","appendChild","click","removeChild","URL","revokeObjectURL","userAgent","replace","confirm","location","f","src","createObjectURL","constructor","btoa","y","encodeURIComponent","FileReader","result","readAsDataURL","Constant","cssPrefix","XSheetVersion","S4","Math","random","substring","WORK_BODY_EVENT_TYPE","CHANGE_ACTIVE","SYSTEM_EVENT_TYPE","MOUSE_MOVE","MOUSE_DOWN","SCROLL","RESIZE","MOUSE_UP","KEY_UP","INPUT","KEY_DOWN","MOUSE_OVER","MOUSE_LEAVE","MOUSE_WHEEL","MOUSE_ENTER","CLICK","DRAG_START","CHANGE","VISIBILITY_CHANGE","TABLE_EVENT_TYPE","CHANGE_HEIGHT","SELECT_OVER","SCALE_CHANGE","FIXED_CHANGE","FIXED_ROW_CHANGE","SELECT_DOWN","SELECT_CHANGE","DATA_CHANGE","CHANGE_WIDTH","RESIZE_CHANGE","RENDER","FORM_EVENT_TYPE","SEARCH_INPUT_CHANGE","PLAIN_INPUT_CHANGE","FORM_SELECT_CHANGE","alphabets","DATA_TYPE","PlainUtils","isEmptyObject","isUnDef","trim","obj","getPrototypeOf","parent","str","toLowerCase","arg","sources","forEach","source","keys","v","Array","isArray","isPlainObject","copy","json","JSON","stringify","parse","objOrAry","cb","total","size","val","isNumber","parseFloat","parseInt","index","idx","ret","expoNet","x","charAt","indexAt","stringAt","xn","yn","expr2xy","xy2expr","min","getSelection","focus","range","selectAllChildren","collapseToEnd","selection","createRange","moveToElementText","collapse","select","isBlank","Date","now","width","innerWidth","height","innerHeight","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","element","el","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","explorer","version","match","EMPTY","Nul","Undef","undefined","noop","Element","tag","args","elements","item","push","arguments","wrap","childNodes","ele","append","classList","remove","add","contains","k","css","top","offsetTop","left","offsetLeft","offsetHeight","offsetWidth","parentNode","getBoundingClientRect","firstChild","lastChild","previousSibling","nextSibling","flag","cls","addClass","removeClass","text","innerText","html","removeAttribute","getAttribute","removeProperty","getComputedStyle","computedStyle","message","event","CustomEvent","detail","bubbles","cancelable","dispatchEvent","querySelectorAll","eleArray","sibling","previousElementSibling","nextElementSibling","after","before","h","pool","callback","option","removeEventListener","addEventListener","rem","eqElem","eqOpt","eqType","eqCall","eles","unbind","XEvent","fn","multipleUnbind","multipleBind","doubleFunc","last","evt","current","pageX","pageY","moveFunc","upFunc","xEvtMove","stopPropagation","xEvtUp","XEventPool","Widget","nodeType","box","widget","children","onAttach","clazz","node","is","hasClass","Layer","VerticalLayer","options","VerticalLayerElement","flexGrow","Icon","iconNameEl","Item","Undo","icon","Redo","PaintFormat","sheets","sheet","splice","ClearFormat","DropDownItem","drop","title","px","cssRemoveKeys","root","instances","ElPopUp","autoWidth","autoHeight","position","POPUP_POSTION","TB","direction","status","spaces","elPopUpDownHandle","close","instance","filter","elPopUpPosition","elPopUpAutosize","elPopUpLocation","elBox","winWidth","winHeight","LR","elLeft","leftDiff","rightDiff","elTop","topDiff","bottomDIff","ELContextMenu","menus","elPopUp","setEL","destroy","ELContextMenuItem","FormatContextMenuItem","desc","iconElement","titleElement","descElement","ELContextMenuDivider","FormatContextMenu","onUpdate","items","addItem","init","first","setTitle","setActive","format","update","Format","contextMenu","setWidth","setEllipsis","formatContextMenu","FontContextMenuItem","FontContextMenu","setActiveByType","Font","fontContextMenu","FontSizeContextMenuItem","FontSizeContextMenu","FontSize","fontSizeContextMenu","FontBold","FontItalic","UnderLine","FontStrike","FontColorContextMenuItem","DragPanel","DRAG_PANEL_POSITION","CENTER","mask","content","dragPanelLocation","evt1","button","downEventXy","eventXy","mouseMoveUp","evt2","offset","viewPort","LEFT","RIGHT","TOP","removeInstance","ColorPicker","selectCb","dragPanel","color","preViewColorPoint","colorValueTips","colorInput","selectColorPoint","selectColorArea1","selectColorArea2","selectColorArea3","center","colorHuxTips","colorBar","colorBarPoint","bottom","cancelButton","selectButton","buttons","hex","len","join","hsx","max","g","b","rgbToHsb","hexToRgb","rgb","hsb","delta","t1","t2","t3","round","nr","rgbToHex","hsbToRgb","startsWith","isHex","parseRgb","e1","hexColor","xy","colorBarBox","downHue","e2","moveHue","centerBox","downSelect","moveSelect","fixHsx","colorValue","hsbToHex","isRgb","change","colorBarPointBox","colorBarPointLeft","selectColorPointBox","selectColorPointLeft","selectColorPointTop","areaColorValue","sliderPosition","hueChange","selectChange","hexToHsb","fixHex","ColorItem","isDark","checkedIcon","hide","active","show","ColorArray","colors","activeColor","setActiveByColor","FontColorContextMenu","colorPicker","customizeColorArray","colorArray","reset","array","plus","customize","FontColor","setIcon","setColor","fontColorContextMenu","FillColorContextMenuItem","FillColorContextMenu","FillColor","fillColorContextMenu","BorderTypeContextMenuItem","BorderIcon1","BorderIcon2","BorderIcon3","BorderIcon4","BorderIcon5","BorderIcon6","BorderIcon7","BorderIcon8","BorderIcon9","BorderIcon10","BorderColor","BorderType","BorderColorContextMenuItem","BorderColorContextMenu","LineTypeContextMenuItem","typeIcon","LineTypeContextMenu","DPR","devicePixelRatio","LINE_WIDTH_LOW","LINE_WIDTH_MEDIUM","LINE_WIDTH_HIGH","LINE_PIXEL_OFFSET","Base","canvas","ctx","getContext","dpr","styleTransformCssPx","srcTransformStylePx","rounding","angle","PI","CorsLine","lineWidthType","LINE_WIDTH_TYPE","low","lineColor","medium","high","sx","sy","ex","ey","lineWidth","attr","strokeStyle","polyStroke","xys","getOffsetX","getOffsetY","TypeError","corsLine","transformLinePx","pixel","offsetX","offsetY","interpolation","beginPath","moveTo","lineTo","stroke","fill","fillRect","radian","dash","measureText","save","restore","clip","setLineDash","scale","translate","deg","rotate","XDraw","fillText","path","polyInFill","points","w","rect","sw","sh","tx","ty","tw","th","drawImage","LINE_TYPE","SOLID_LINE","DOTTED_LINE","POINT_LINE","DOUBLE_LINE","SolidLine","draw","widthType","setLineColor","setLineWidthType","horizonLine","verticalLine","DottedLine","DoubleLine","padding","spacing","leftShow","topShow","rightShow","bottomShow","iFMerge","iFMergeFirstRow","iFMergeLastRow","iFMergeFirstCol","iFMergeLastCol","row","col","pos","external","ifMerge","firstRow","lastRow","firstCol","lastCol","sTopLeftCorner","sTop","sBottom","eBottomLeftCorner","eBottom","eTop","sLeft","sRight","eTopRightCorner","eRight","eLeft","sTopRightCorner","eBottomRightCorner","sBottomLeftCorner","internal","handleExternal","handleInternal","Line","solidLine","dottedLine","pointLine","doubleLine","setWidthType","tiltingLine","BorderTypeContextMenu","borderIcon1","borderIcon2","borderIcon3","borderIcon4","borderIcon5","div1","borderIcon6","borderIcon7","borderIcon8","borderIcon9","borderIcon10","div2","borderIcons","borderColor","borderType","div3","borderColorAndType","borderColorContextMenu","lineTypeContextMenu","closeAll","isClose","preventDefault","Border","borderTypeContextMenu","Merge","HorizontalIcon1","HorizontalIcon2","HorizontalIcon3","HorizontalContextMenuItem","BaseFont","ruler","align","ALIGN","verticalAlign","VERTICAL_ALIGN","right","TEXT_WRAP","OVER_FLOW","WORD_WRAP","TRUNCATE","TEXT_DIRECTION","HORIZONTAL","VERTICAL","ANGLE","ANGLE_BAR","HorizontalContextMenu","horizontalIcon1","horizontalIcon2","horizontalIcon3","horizontalIcons","HorizontalAlign","horizontalContextMenu","VerticalContextMenuItem","VerticalIcon1","VerticalIcon2","VerticalIcon3","VerticalContextMenu","verticalIcon1","verticalIcon2","verticalIcon3","verticalIcons","VerticalAlign","verticalContextMenu","TextWrappingIcon1","TextWrappingIcon2","TextWrappingIcon3","TextWrappingContextMenuItem","TextWrappingContextMenu","textWrappingIcon1","textWrappingIcon2","textWrappingIcon3","textWrappingIcons","TextWrapping","textWrappingContextMenu","FixedContextMenuItem","FixedContextMenu","row1","row2","col1","col2","Fixed","rowStatus","colStatus","fixedContextMenu","Filter","Functions","CellFont","textWrap","strikethrough","underline","bold","italic","scaleAdapter","zIndexID","zIndex","$zIndex","$display","$color","$type","$widthType","border","origin","getZIndex","CellBorder","setBDisplay","setLDisplay","setTDisplay","setRDisplay","setBColor","setLColor","setTColor","setRColor","setBWidthType","setLWidthType","setTWidthType","setRWidthType","setBType","setLType","setTType","setRType","Rect","other","XIconOffset","Crop","XIcon","vertical","ICON_VERTICAL","horizontal","ICON_HORIZONTAL","ICON_TYPE","image","onDraw","onLeave","onMove","onDown","onEnter","icons","iconHorizontal","iconVertical","iconOffsetX","iconOffsetY","iconWidth","iconHeight","rectX","rectY","rectWidth","rectHeight","py","BOTTOM","load","sync","Image","loadImg","complete","onerror","console","error","drawCustom","positionRect","include","includeRect","crop","fillStyle","native","inRectPosition","activate","ICON_EVENT_TYPE","includePoint","setActivate","custom","Cell","background","borderAttr","fontAttr","contentWidth","leftSdistWidth","rightSdistWidth","contentType","CONTENT_TYPE","STRING","newInstances","convert","setContentWidth","setLeftSdistWidth","setRightSdistWidth","NUMBER","ScaleContextMenuItem","ScaleContextMenu","Scale","scaleContextMenu","RectRange","sri","sci","eri","eci","ref","refs","iteratorBuilder","rowFilter","getRowIterator","setBegin","setEnd","setLoop","getColIterator","j","execute","ri","ci","disjoint","coincide","equals","difference","addRet","dsr","dsc","der","dec","multiple","XScreenPart","xScreenZone","XScreenLTPart","XScreenTPart","XScreenLPart","XScreenBRPart","XScreenItem","table","lt","br","xScreen","Display","viewEyes","targetViewRange","getXScreenViewRange","part","getPart","LTDisplay","xFixedView","hasFixedTop","hasFixedLeft","getFixedView","TDisplay","fixedView","scrollView","getScrollView","BRDisplay","LDisplay","XScreenViewEyes","ltDisplay","tDisplay","brDisplay","lDisplay","setDisplay","Local","viewLocal","cols","screenView","sectionSumWidth","rows","sectionSumHeight","setTop","setLeft","LTLocal","TLocal","BRLocal","LLocal","XScreenViewLocal","tlLocal","tLocal","brLocal","lLocal","view","setLocal","Sizer","viewSizer","rectRangeSumWidth","rectRangeSumHeight","offsetToLineInside","LTSizer","TSizer","BRSizer","LSizer","XScreenViewSizer","ltSizer","tSizer","brSizer","lSizer","setSizer","RANGE_OVER_GO","LT","T","BR","L","LTT","LTL","BRT","BRL","ALL","XScreenStyleBorderItem","blt","bt","bl","bbr","overGo","getOverGo","getBorderDisplay","showBBorder","showTBorder","showLBorder","showRBorder","rowsLen","colsLen","ltt","ltl","brt","brl","XScreenCssBorderItem","setBorderType","XTableMousePointer","token","sResize","cell","eResize","KEYS","crosshair","grab","default","rowResize","colResize","pointer","SELECT_LOCAL","XSelectItem","selectLocal","activeCorner","selectRange","downRange","moveRange","ltElem","brElem","lElem","tElem","ltHighLight","lHighLight","tHighLight","brHighLight","ltCorner","lCorner","tCorner","brCorner","merges","getTableMerges","viewRange","getRiCiByXy","union","offsetHandle","borderHandle","cornerHandle","getFirstIncludes","register","mousePointer","downHandle","lock","set","trigger","moveHandle","free","hideBorder","showBorder","Alert","closeEle","titleEle","contentEle","okEle","buttonsEle","Mask","OrderAZ","OrderZA","SelectContextMenu","SelectContextMenuItem","textEle","Select","selectValue","selectText","selectIcon","setSelect","find","PlainInput","inputWrapEle","inputInnerEle","inputEle","setValue","IFFilter","IF_TYPE","NOT","titleTextEle","titleIconEle","selectEleBox","selectEle","valueInputEleBox","valueInput","addValue","addDivider","CT_EMPTY","CT_NOT_EMPTY","STR_INCLUDE","STR_NOT_INCLUDE","STR_START","STR_END","STR_EQ","DAT_EQ","DAT_BEFORE","DAT_AFTER","NUM_BEFORE","NUM_BEFORE_EQ","NUM_AFTER","NUM_AFTER_EQ","NUM_EQ","NUM_NOT_EQ","switchInput","setType","SearchInput","searchEle","ValueFilter","filterExp","filters","optionBoxEle","flagEle","clearEle","searchBoxEle","searchInput","itemsBox","selectAll","closestClass","setStatus","clearAll","RegExp","filterItems","valueItem","setIndex","empty","selectItems","FilterData","ok","no","valueFilter","ifFilter","orderAz","orderZa","noEle","okHandle","valueFilterItems","getSelectItems","valueFilterValue","getValue","ifFilterType","getType","ifFilterValue","noHandle","filterDataHandle","ValueItem","iconEle","XFilter","activeIcon","setRoot","filterFoldRow","flt","ft","fbr","fl","setBorderColor","xFilterOffset","brink","xIconBuilder","xIteratorBuilder","fixedCellIcon","getXTableStyle","each","build","darkFilter","setOnEnter","cssHeight","cssWidth","cssLeft","cssTop","setHeight","setOnDown","filterOpen","setOnMove","setOnLeave","addOrNewCell","render","findType","cells","getTableCells","targetRange","clone","rowLen","colLen","merge","getCellOrMergeCell","emptyCol","emptyRow","Set","emptyAll","getCell","clearFilterIcon","xFilterHandle","emptyRectRange","createFilterIcon","SVG","XCopyStyle","hideCopyStyle","Confirm","FontAngleContextMenuItem","Divider","FontAngleDivider","DropInputItem","input","FontAngleValueContextMenuItem","angleValue","FontAngleValueContextMenu","FontAngleValue","onChange","fontAngleValueContextMenu","FontAngle1","FontAngle2","FontAngle3","FontAngle4","FontAngle5","FontAngle6","FontAngleContextMenu","onUpdateAngle","onUpdateType","angle1","angle2","angle3","angle4","angle5","angle6","FontAngle","fontAngleContextMenu","TopMenu","workTop","sheetView","work","undo","redo","setScale","paintFormat","clearFormat","getActiveSheet","operateCellsHelper","getOperateCellsHelper","tableDataSnapshot","begin","cellDataProxy","getCellOrNewCellByViewRange","rectRange","setCell","end","font","dprFontSize","fontColor","fillColor","lineType","xTableStyle","angleCells","newCell","hasAngleCell","isAngleBarCell","setAllDisplay","setAllColor","setAllWidthType","setAllType","fontBold","fontItalic","underLine","fontStrike","horizontalAlign","textWrapping","fixed","setFixedRow","setFixedCol","functions","fontAngle","updateMaxIndex","setFormatStatus","setFontStatus","setFontSizeStatus","setFontBoldStatus","setFontItalicStatus","setUnderLineStatus","setFontStrikeStatus","setFontColorStatus","setFillColorStatus","setHorizontalAlignStatus","setVerticalAlignStatus","setTextWrappingStatus","setFontAngleStatus","setFixedStatus","canBack","back","canGo","go","xSelect","cellMergeCopyHelper","xCopyStyle","removeSheet","originViewRange","orSize","ocSize","trSize","tcSize","rSize","cSize","copyMergeContent","copyStylesContent","includeSheet","showCopyStyle","addSheet","getCellOrNew","mergeDataProxy","isNotUnDef","deleteMerge","addMerge","hideFilter","openFilter","setUndoStatus","setRedoStatus","setScaleStatus","setPaintFormatStatus","setFilterStatus","setFixedRowStatus","setFixedColStatus","firstCell","FileContextMenuItem","FileContextMenu","File","fileContextMenu","ForMart","Insert","Look","Update","TopOption","logoEle","optionsEle","leftEle","rightEle","file","insert","look","settings","WorkTop","toolsMenu","menu","attach","HorizontalLayer","ScrollBarX","scroll","to","lastBut","nextBut","block","blockLeft","maxBlockLeft","blockWidth","minBlockWidth","scrollTo","viewPortWidth","isHide","contentBox","computeScrollTo","move","maxTo","ScrollBarY","blockTop","maxBlockTop","blockHeight","minBlockHeight","contentHeight","viewPortHeight","HorizontalLayerElement","VerticalCenterElement","VerticalCenter","SheetView","sheetList","activeIndex","onAdd","tab","onSwitch","TabView","next","tabs","tabList","maxWidth","offsetSizeLeft","number","Tab","setName","ScaleAdapter","goto","Code","gridColor","Row","reCkHasAngle","hasAngelCell","Rows","minIf","getHeight","ei","rowHeight","getOrNew","Col","Cols","getWidth","colWidth","SCROLL_TYPE","H_LEFT","H_RIGHT","V_TOP","V_BOTTOM","UN","Scroll","XTableKeyboard","xTableKeyBoardDownHandle","keyCode","ColFixed","fxSci","fxEci","dropColFixed","moveOff","setSize","resize","stop","WIDTH","visualHeight","getIndexHeight","getIndexWidth","XReSizer","hoverEl","lineEl","colsDataProxy","getEventLeft","ceil","newLeft","visualWidth","xFixedMeasure","fixedWidth","indexWidth","RowFixed","fxSri","fxEri","dropRowFixed","HEIGHT","outer","YReSizer","rowsDataProxy","getEventTop","my","newTop","fixedHeight","indexHeight","XHeightLight","getLeft","YHeightLight","getTop","XTableFocus","xTableFocusDownHandle","findByNode","alike","findByChild","VIEW_MODE","CHANGE_ADD","CHANGE_NOT","STATIC","BOUND_OUT","XTableScrollView","lastView","within","XTableAreaView","xTableScrollView","Throttle","time","handle","clearTimeout","XTableEdit","throttle","xHeightLight","yHeightLight","maxHeight","realLeft","editOffset","hideEdit","mouseDoubleClick","showEdit","getCellCssStyle","action","keepLastIndex","setText","Grid","Box","fillPath","Cells","xTableData","isNotEmptyObject","wrapAll","getItems","map","DateUtils","dateText","defaultVal","reg","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","milliseconds","getMilliseconds","oneChar","onePart","onePartReg","res","exec","formatPart","replaceVal","dataInfo","fmt","date","floor","S","resultYear","yearFormatPart","yearVal","substr","Val","parserToDate","lastIndex","lastIndexOf","isFraction","toExponential","dateFormat","RTSinKit","tilt","abs","sin","inverse","RTCosKit","cos","nearby","ANGLE_ORIGIN","TOP_LEFT","TOP_CENTER","TOP_RIGHT","MIDDLE_LEFT","MIDDLE_CENTER","MIDDLE_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","Angle","DrawResult","rightSdist","leftSdist","AngleBoxDraw","overflow","lineHeight","textAlign","textBaseline","hasBreak","textWrapDraw","overflowDraw","truncateDraw","textWidth","line","verticalAlignPadding","getVerticalAlignPadding","alignPadding","getAlignPadding","overflowRuler","overflowText","overflowTextWidth","trigonometricWidth","trigonometricHeight","limitHeight","rtx","rty","outboundsHeight","outboundsWidth","dwAngle","drawingLine","revert","textHaveWidth","textWrapRuler","textArray","textWrapTextArray","maxLen","textWrapMaxLen","textArrayLen","textHeight","totalWidth","bx","by","jj","rx","ry","ax","ay","textWrapText","textWrapTextWidth","AngleBarDraw","trigonometricTilt","trigonometricTiltWidth","pointOffset","haveWidth","HorizonDraw","truncateRuler","truncateText","truncateTextWidth","diff","hOffset","textWrapHOffset","textLen","ti","VerticalDraw","truncateTextArray","truncateMaxLen","wOffset","textWrapWOffset","BaseRuler","USED","DEFAULT_INI","PlainRuler","AngleBoxRuler","notWidth","notHeight","used","textHypotenuseWidth","breakArray","textBreak","breakLen","bi","start","ii","AngleBarRuler","HorizonRuler","displayFont","lOffset","temp","over","VerticalRuler","char","DrawFontBuilder","assign","TextBuilder","builder","setPadding","setDirection","buildRuler","buildFont","setRuler","Text","BaseCellsHelper","xTableAreaView","getXTableAreaView","getMerges","getCols","getCells","getXIteratorBuilder","blank","rightWidth","leftWidth","tmp","getRows","half","styleTable","getStyleTable","getHorizontalMaxWidth","getAngleBarMaxWidth","getAngleBarWrapWidth","getAngleMaxWidth","STYLE_BREAK_LOOP","StyleCellsHelper","reverseRows","reverseCols","startX","startY","newRow","newCol","cellsINCallback","mergeCallback","loopINCallback","mergeInfo","minSri","minSci","maxSri","maxSci","TEXT_BREAK_LOOP","TextCellsHelper","cellsINInfo","getCellOverFlow","XTableHistoryAreaView","lastScrollView","enterView","scrollEnterView","leaveView","getLastScrollView","coincideDifference","getEnterView","OperateCellsHelper","XFixedMeasure","CellIcon","xIcon","xIcons","getIcon","getOffset","FixedCellIcon","StaticCellIcon","XLineIteratorFilter","logic","stack","RETURN_TYPE","EXEC","FILTER_LOGIC","AND","run","JUMP","OR","XLineIteratorLoop","foldOnOff","runNewRow","runNewCol","runFilter","runEndCol","runEndRow","runComplete","endRow","endCol","jump","XLineIteratorItem","BBorderHide","MergeBNullEdge","RBorderHide","MergeRNullEdge","CellOutRange","RCellOutRange","master","getCellContentBoundOutWidth","masterBlank","nextBlank","setNext","AngleBarHide","LineGrid","bLine","rLine","bRow","breakpoint","rCols","getBItem","getRItem","XLineOptimizeJoin","ck1","equal","ck2","ck3","nextRow","BBorderShow","BBorderPriority","priority","TBorderShow","TBorderPriority","MergeTNullEdge","RBorderShow","RBorderPriority","LBorderPriority","LBorderShow","MergeLNullEdge","LCellOutRange","LAngleBarHide","RAngleBarHide","TAngleBarHide","BAngleBarHide","LineBorder","optimize","lLine","tLine","osx","oex","optimizeJoin","hbJoin","tRow","htJoin","concat","vrJoin","lCols","vlJoin","getTItem","getLItem","AngleBarShow","AngleBarInRow","AngleBar","LineIndex","LAngleBarOut","AngleBarLOut","RAngleBarOut","AngleBarROut","XLinePlainGenerator","model","MODEL","BORDER","aLine","bResult","getResult","aResult","gLine","gResult","INDEX","iLine","iResult","GRID","OUT_ANGLE_BAR_L","alLine","alResult","OUT_ANGLE_BAR_R","arLine","arResult","XMergesIndex","point","setMergeId","getMergeId","XMergesNo","XMergesNoRow","nos","XMergesItems","recovery","XMergesNoCol","XMergesRange","XMerges","xMergesNoRow","xMergesNoCol","xMergesIndex","xMergesItems","valueOf","notify","getView","getNo","clear","XTableDataItem","mergeId","XTableDataItems","canWrapAll","isString","riLen","ciLen","Path","Point","RENDER_MODE","SCALE","XTableFrozenFullRect","indexGrid","renderMode","getRenderMode","XTableFixedBar","buttonColor","rpxHeight","rpxWidth","drawBar","drawButton","XTableUI","drawX","drawY","mapOriginX","mapOriginY","mapTargetX","mapTargetY","mapWidth","mapHeight","fullScrollView","borderView","borderX","borderY","viewMode","getViewMode","getX","getY","getLeaveView","getLineView","getFullScrollView","dx","getDrawX","dy","getDrawY","getMapWidth","getMapHeight","ox","getMapOriginX","oy","getMapOriginY","getMapTargetX","getMapTargetY","copyImage","XTableContentUI","staticCellIcon","loadImage","drawIcon","styleCellsHelper","getCellByViewRange","staticRect","cellRect","drawStaticXIcon","drawCellXIcon","fixedRect","drawFixedXIcon","textCellsHelper","textFont","lView","allowTextAlign","allowTextWrap","allowDirection","getBuilder","setDraw","setRect","setRow","setCol","setOverFlow","drawingFont","rView","getCellStyleBoundOutWidth","getSdistWidth","tl","tr","setPath","getLineX","getLineY","grid","optimizeEnable","showGrid","drawMap","drawClear","drawBackground","drawBoundOutBackground","drawXFont","drawBoundOutXFont","drawGridBorder","drawBoundOutGridBorder","drawXIcon","XTableIndexUI","drawFilter","drawColor","drawFont","XTableLeftIndexUI","getBackground","getSize","getColor","eachHeight","ch","XTableTopIndexUI","getLineWidthTypePx","eachWidth","cw","XTableFrozenLeftIndex","XTableFrozenContent","XTableFrozenTopIndex","XTableLeftIndex","xTop","getScrollEnterView","XTableLeft","XTableTopIndex","xLeft","XTableTop","XTableContent","XTableStyle","lBorderFilter","rBorderFilter","tBorderFilter","bBorderFilter","getGridColor","xLeftFrozenIndex","xTopFrozenIndex","xTableFrozenContent","xLeftIndex","xTopIndex","xContent","xTableFrozenFullRect","xTableFixedBar","xFixedBar","boundOutWidth","fullRect","enable","hasDouble","record","rowObject","setReCkHasAngle","setHasAngelCell","lessZero","moreZero","isDisplay","XScreenZone","XScreenBRZone","XScreenLTZone","XScreenLZone","XScreenTZone","DISPLAY_AREA","XScreen","displayArea","ltZone","tZone","brZone","lZone","setZone","setXScreen","getFixedHeight","getFixedWidth","brTop","brLeft","AutoFillTypeMenuItem","AutoFillTypeMenu","FILL_TYPE","SERIALIZE","FILLING","AutoFillType","autoFillTypeMenu","CopyMerge","onCopy","copyEndRow","copyStartRow","copyEndCol","copyStartCol","ori","pasteStartRow","pasteEndRow","tri","oci","pasteStartCol","pasteEndCol","tci","nextCopyCol","nextCopyRow","CopyCellIN","Serialize","getStartIndex","onSerialize","SERIALIZE_DIRECTION","serializeLeft","serializeTop","serializeRight","serializeBottom","CellMergeCopyHelper","getTableDataSnapshot","executeCopy","newMerge","hasFold","executeSerialize","XAutoFillItem","mergeForceSplit","onBeforeAutoFill","onAfterAutoFill","moveDirection","autoFillRange","autoFillType","serialize","rangeHandle","autoFill","setRange","hasFull","originSRi","originSCi","minRi","maxRi","minCi","nextCol","maxCi","unionRange","serializeContent","splitMerge","fillMerge","fillCellIN","copyCellINContent","getIncludes","DropRowFixed","DropColFixed","XFixedView","fxLeft","fxTop","DataProxy","TableCellDataProxy","snapshot","on","setCellOrNew","oldCell","$setCell","CellDataRecord","MERGE_RECORD_TYPE","ADD","DELETE","MergeDataRecord","recordType","TableMergeDataProxy","$deleteMerge","$addMerge","TableColsDataProxy","newWidth","oldWidth","$setWidth","ColsDataRecord","TableRowsDataProxy","newHeight","oldHeight","$setHeight","RowsDataRecord","TableDataSnapshot","backLayerStack","recordLayer","goLayerStack","layer","backNotice","goNotice","endNotice","Clipboard","paste","XIconFocus","XIconBuilder","fx","fy","staticIcons","fixedIcons","clearFocus","eventHandle","setFocus","BaseIterator","finishCallback","loopCallback","nextCallback","fold","RowsIterator","skipCallback","useFold","onOff","ColsIterator","XIteratorBuilder","getInstance","RowHeightGroupIndex","group","groupIndex","setSkip","limit","Dimensions","KeyBoardTabCode","keyboard","edit","$tabNext","tabNext","cLen","rLen","srcMerges","targetMerges","XTableDimensions","visualHeightCache","visualWidthCache","srcTransformCssPx","xReSizer","yReSizer","rowFixed","colFixed","clipboard","rowHeightGroupIndex","initS","initV","ifv","getV","setFinish","fontSize","info","mri","mci","staticIconArray","fixedIconArray","fixedIcon","staticIcon","xIconsEvent","pointerEvent","colsReduceIf","x1","scrolling","rowsReduceIf","y1","setFixedView","tableConfig","Sheet","WorkBody","tabSheet","sheetViewLayer","scrollBarYLayer","scrollBarXLayer","scrollBarXVerticalCenter","scrollBarXHorizontalLayer","sheetSwitchTabLayer","horizontalLayer1","horizontalLayer2","horizontalLayer1Layer","horizontalLayer2Layer","layerVerticalLayer","tabView","addTabSheet","setActiveTab","scrollBarY","scrollY","scrollBarX","scrollX","createSheet","exploreInfo","getExplorerInfo","scrollBarLocal","scrollBarSize","getActiveTable","deltaY","scrollMove","dis","dprUpdate","totalHeight","getScrollTotalHeight","getScrollTotalWidth","getContentWidth","getContentHeight","setActiveIndex","setActiveSheet","getData","Download","BottomMenu","workBottom","sum","avg","fullScreen","setSum","setAvg","setNumber","computer","isFull","WorkBottom","bottomMenu","Work","topLayer","bodyLayer","bottomLayer","verticalLayer","workConfig","XSheet","selectors","querySelector"],"mappings":"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","file":"XSheet.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = __webpack_public_path__ + \"c4ab8001e109540f7ae6a34181d695d3.png\";","module.exports = __webpack_public_path__ + \"42b436e7c64603182355d52d31ea49f1.png\";","module.exports = __webpack_public_path__ + \"9dfd8685ea7e1e5c025514eec46a4547.png\";","module.exports = __webpack_public_path__ + \"51859b5219dccb48ef2a5659717d0a1b.svg\";","// download.js v4.2, by dandavis; 2008-2016. [CCBY2] see http://danml.com/download.html for tests/usage\r\n// v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\r\n// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs\r\n// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.\r\n// v4 adds AMD/UMD, commonJS, and plain browser support\r\n// v4.1 adds url download capability via solo URL argument (same domain/CORS only)\r\n// v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors\r\n// https://github.com/rndme/download\r\n\r\n(function (root, factory) {\r\n  if (typeof define === 'function' && define.amd) {\r\n    // AMD. Register as an anonymous module.\r\n    define([], factory);\r\n  } else if (typeof exports === 'object') {\r\n    // Node. Does not work with strict CommonJS, but\r\n    // only CommonJS-like environments that support module.exports,\r\n    // like Node.\r\n    module.exports = factory();\r\n  } else {\r\n    // Browser globals (root is window)\r\n    root.download = factory();\r\n  }\r\n}(this, () => function download(data, strFileName, strMimeType) {\r\n\r\n  let self = window; // this script is only for browsers anyway...\r\n  let defaultMime = 'application/octet-stream'; // this default mime also triggers iframe downloads\r\n  let mimeType = strMimeType || defaultMime;\r\n  let payload = data;\r\n  let url = !strFileName && !strMimeType && payload;\r\n  let anchor = document.createElement('a');\r\n  let toString = function (a) { return String(a); };\r\n  let myBlob = (self.Blob || self.MozBlob || self.WebKitBlob || toString);\r\n  let fileName = strFileName || 'download';\r\n  let blob;\r\n  let reader;\r\n  myBlob = myBlob.call ? myBlob.bind(self) : Blob;\r\n\r\n  if (String(this) === 'true') { // reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\r\n    payload = [payload, mimeType];\r\n    mimeType = payload[0];\r\n    payload = payload[1];\r\n  }\r\n\r\n\r\n  if (url && url.length < 2048) { // if no filename and no mime, assume a url was passed as the only argument\r\n    fileName = url.split('/').pop().split('?')[0];\r\n    anchor.href = url; // assign href prop to temp anchor\r\n    if (anchor.href.indexOf(url) !== -1) { // if the browser determines that it's a potentially valid url path:\r\n      let ajax = new XMLHttpRequest();\r\n      ajax.open('GET', url, true);\r\n      ajax.responseType = 'blob';\r\n      ajax.onload = function (e) {\r\n        download(e.target.response, fileName, defaultMime);\r\n      };\r\n      setTimeout(() => { ajax.send(); }, 0); // allows setting custom ajax headers using the return:\r\n      return ajax;\r\n    } // end if valid url?\r\n  } // end if url?\r\n\r\n\r\n  // go ahead and download dataURLs right away\r\n  if (/^data\\:[\\w+\\-]+\\/[\\w+\\-]+[,;]/.test(payload)) {\r\n\r\n    if (payload.length > (1024 * 1024 * 1.999) && myBlob !== toString) {\r\n      payload = dataUrlToBlob(payload);\r\n      mimeType = payload.type || defaultMime;\r\n    } else {\r\n      return navigator.msSaveBlob // IE10 can't do a[download], only Blobs:\r\n        ? navigator.msSaveBlob(dataUrlToBlob(payload), fileName)\r\n        : saver(payload); // everyone else can save dataURLs un-processed\r\n    }\r\n\r\n  }// end if dataURL passed?\r\n\r\n  blob = payload instanceof myBlob\r\n    ? payload\r\n    : new myBlob([payload], { type: mimeType });\r\n\r\n\r\n  function dataUrlToBlob(strUrl) {\r\n    let parts = strUrl.split(/[:;,]/);\r\n    let type = parts[1];\r\n    let decoder = parts[2] == 'base64' ? atob : decodeURIComponent;\r\n    let binData = decoder(parts.pop());\r\n    let mx = binData.length;\r\n    let i = 0;\r\n    let uiArr = new Uint8Array(mx);\r\n\r\n    for (i; i < mx; ++i) uiArr[i] = binData.charCodeAt(i);\r\n\r\n    return new myBlob([uiArr], { type });\r\n  }\r\n\r\n  function saver(url, winMode) {\r\n\r\n    if ('download' in anchor) { // html5 A[download]\r\n      anchor.href = url;\r\n      anchor.setAttribute('download', fileName);\r\n      anchor.className = 'download-js-link';\r\n      anchor.innerHTML = 'downloading...';\r\n      anchor.style.display = 'none';\r\n      document.body.appendChild(anchor);\r\n      setTimeout(() => {\r\n        anchor.click();\r\n        document.body.removeChild(anchor);\r\n        if (winMode === true) { setTimeout(() => { self.URL.revokeObjectURL(anchor.href); }, 250); }\r\n      }, 66);\r\n      return true;\r\n    }\r\n\r\n    // handle non-a[download] safari as best we can:\r\n    if (/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\r\n      url = url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\r\n      if (!window.open(url)) { // popup blocked, offer direct download:\r\n        if (confirm('Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.')) { location.href = url; }\r\n      }\r\n      return true;\r\n    }\r\n\r\n    // do iframe dataURL download (old ch+FF):\r\n    let f = document.createElement('iframe');\r\n    document.body.appendChild(f);\r\n\r\n    if (!winMode) { // force a mime that will download:\r\n      url = `data:${url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime)}`;\r\n    }\r\n    f.src = url;\r\n    setTimeout(() => { document.body.removeChild(f); }, 333);\r\n\r\n  }// end saver\r\n\r\n\r\n  if (navigator.msSaveBlob) { // IE10+ : (has Blob, but not a[download] or URL)\r\n    return navigator.msSaveBlob(blob, fileName);\r\n  }\r\n\r\n  if (self.URL) { // simple fast and modern way using Blob and URL:\r\n    saver(self.URL.createObjectURL(blob), true);\r\n  } else {\r\n    // handle non-Blob()+non-URL browsers:\r\n    if (typeof blob === 'string' || blob.constructor === toString) {\r\n      try {\r\n        return saver(`data:${mimeType};base64,${self.btoa(blob)}`);\r\n      } catch (y) {\r\n        return saver(`data:${mimeType},${encodeURIComponent(blob)}`);\r\n      }\r\n    }\r\n\r\n    // Blob but not URL support:\r\n    reader = new FileReader();\r\n    reader.onload = function (e) {\r\n      saver(this.result);\r\n    };\r\n    reader.readAsDataURL(blob);\r\n  }\r\n  return true;\r\n}, /* end download() */\r\n));\r\n","const Constant = {};\r\nconst cssPrefix = 'x-sheet';\r\nconst XSheetVersion = `${cssPrefix} 1.0.0-develop`;\r\nConstant.WORK_BODY_EVENT_TYPE = {\r\n  CHANGE_ACTIVE: 'changeactive',\r\n};\r\nConstant.SYSTEM_EVENT_TYPE = {\r\n  MOUSE_MOVE: 'mousemove',\r\n  MOUSE_DOWN: 'mousedown',\r\n  SCROLL: 'scroll',\r\n  RESIZE: 'resize',\r\n  MOUSE_UP: 'mouseup',\r\n  KEY_UP: 'keyup',\r\n  INPUT: 'input',\r\n  KEY_DOWN: 'keydown',\r\n  MOUSE_OVER: 'mouseover',\r\n  MOUSE_LEAVE: 'mouseleave',\r\n  MOUSE_WHEEL: 'wheel',\r\n  MOUSE_ENTER: 'mouseenter',\r\n  CLICK: 'click',\r\n  DRAG_START: 'dragstart',\r\n  CHANGE: 'change',\r\n  VISIBILITY_CHANGE: 'visibilitychange',\r\n};\r\nConstant.TABLE_EVENT_TYPE = {\r\n  CHANGE_HEIGHT: 'changeheight',\r\n  SELECT_OVER: 'selectover',\r\n  SCALE_CHANGE: 'scalechange',\r\n  FIXED_CHANGE: 'fixedchange',\r\n  FIXED_ROW_CHANGE: 'fixedrowchange',\r\n  SELECT_DOWN: 'selectdown',\r\n  SELECT_CHANGE: 'selectchange',\r\n  DATA_CHANGE: 'datachange',\r\n  CHANGE_WIDTH: 'changewidth',\r\n  RESIZE_CHANGE: 'resizechange',\r\n  RENDER: 'render',\r\n};\r\nConstant.FORM_EVENT_TYPE = {\r\n  SEARCH_INPUT_CHANGE: 'searchinputchange',\r\n  PLAIN_INPUT_CHANGE: 'plaininputchange',\r\n  FORM_SELECT_CHANGE: 'formselectchange',\r\n};\r\nexport {\r\n  XSheetVersion,\r\n  cssPrefix,\r\n  Constant,\r\n};\r\n","/* global navigator document window */\r\nfunction S4() {\r\n  // eslint-disable-next-line no-bitwise\r\n  return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n}\r\n\r\nconst alphabets = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n\r\nconst DATA_TYPE = {\r\n  String: 1,\r\n  Boolean: 2,\r\n  Number: 3,\r\n  Object: 4,\r\n  Array: 5,\r\n  Function: 6,\r\n  Null: 7,\r\n  Undefined: 8,\r\n  Promise: 9,\r\n  GeneratorFunction: 10,\r\n  AsyncFunction: 11,\r\n  BigInt: 12,\r\n  Symbol: 13,\r\n  Un: 14,\r\n};\r\n\r\nclass PlainUtils {\r\n\r\n  static isWindows() {\r\n    return /windows|win32/i.test(navigator.userAgent);\r\n  }\r\n\r\n  static isMac() {\r\n    return /macintosh|mac os x/i.test(navigator.userAgent);\r\n  }\r\n\r\n  static isNotEmptyObject(object) {\r\n    return !PlainUtils.isEmptyObject(object);\r\n  }\r\n\r\n  static isEmptyObject(object) {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const key in object) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (object.hasOwnProperty(key)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  static isUnDef(e) {\r\n    return e === undefined || e === null;\r\n  }\r\n\r\n  static isNotUnDef(e) {\r\n    return !this.isUnDef(e);\r\n  }\r\n\r\n  static isNumber(e) {\r\n    return /^(-?\\d+.\\d+)$|^(-?\\d+)$/.test(e);\r\n  }\r\n\r\n  static isFraction(e) {\r\n    return /^\\d+\\/\\d+$/.test(e);\r\n  }\r\n\r\n  static isFunction(e) {\r\n    const type = PlainUtils.type(e);\r\n    return type === DATA_TYPE.Function;\r\n  }\r\n\r\n  static isArray(e) {\r\n    return PlainUtils.type(e) === DATA_TYPE.Array;\r\n  }\r\n\r\n  static isBlank(s) {\r\n    if (PlainUtils.isUnDef(s)) {\r\n      return true;\r\n    }\r\n    return s.toString().trim() === '';\r\n  }\r\n\r\n  static isPlainObject(obj) {\r\n    if (PlainUtils.isUnDef(obj)) {\r\n      return false;\r\n    }\r\n    return Object.getPrototypeOf(obj) === Object.getPrototypeOf({});\r\n  }\r\n\r\n  static isString(obj) {\r\n    return PlainUtils.type(obj) === DATA_TYPE.String;\r\n  }\r\n\r\n  static isChildType(obj, parent) {\r\n    return obj instanceof parent;\r\n  }\r\n\r\n  static toLowCase(str) {\r\n    return str.toLowerCase();\r\n  }\r\n\r\n  static type(arg) {\r\n    const type = Object.prototype.toString.call(arg);\r\n    switch (type) {\r\n      case '[object Null]':\r\n        return DATA_TYPE.Null;\r\n      case '[object Undefined]':\r\n        return DATA_TYPE.Undefined;\r\n      case '[object String]':\r\n        return DATA_TYPE.String;\r\n      case '[object Boolean]':\r\n        return DATA_TYPE.Boolean;\r\n      case '[object Number]':\r\n        return DATA_TYPE.Number;\r\n      case '[object Function]':\r\n        return DATA_TYPE.Function;\r\n      case '[object Array]':\r\n        return DATA_TYPE.Array;\r\n      case '[object Promise]':\r\n        return DATA_TYPE.Promise;\r\n      case '[object GeneratorFunction]':\r\n        return DATA_TYPE.GeneratorFunction;\r\n      case '[object AsyncFunction]':\r\n        return DATA_TYPE.AsyncFunction;\r\n      case '[object BigInt]':\r\n        return DATA_TYPE.BigInt;\r\n      case '[object Symbol]':\r\n        return DATA_TYPE.Symbol;\r\n      default:\r\n        return DATA_TYPE.Un;\r\n    }\r\n  }\r\n\r\n  static copy(object = {}, ...sources) {\r\n    if (PlainUtils.isUnDef(object)) {\r\n      return {};\r\n    }\r\n    if (PlainUtils.isUnDef(sources) || sources.length === 0) {\r\n      return object;\r\n    }\r\n    sources.forEach((source) => {\r\n      if (PlainUtils.isUnDef(source)) return;\r\n      Object.keys(source).forEach((key) => {\r\n        const v = source[key];\r\n        if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean') {\r\n          object[key] = v;\r\n        } else if (typeof v !== 'function' && !Array.isArray(v) && PlainUtils.isPlainObject(v)) {\r\n          object[key] = object[key] || {};\r\n          PlainUtils.copy(object[key], v);\r\n        } else {\r\n          object[key] = v;\r\n        }\r\n      });\r\n    });\r\n    return object;\r\n  }\r\n\r\n  static cloneDeep(object) {\r\n    const json = JSON.stringify(object);\r\n    return JSON.parse(json);\r\n  }\r\n\r\n  static sum(objOrAry, cb = value => value) {\r\n    let total = 0;\r\n    let size = 0;\r\n    Object.keys(objOrAry).forEach((key) => {\r\n      total += cb(objOrAry[key], key);\r\n      size += 1;\r\n    });\r\n    return [total, size];\r\n  }\r\n\r\n  static parseFloat(val) {\r\n    if (PlainUtils.isNumber(val)) return parseFloat(val);\r\n    return 0;\r\n  }\r\n\r\n  static parseInt(val) {\r\n    if (PlainUtils.isNumber(val)) return parseInt(val, 10);\r\n    return 0;\r\n  }\r\n\r\n  static stringAt(index) {\r\n    let str = '';\r\n    let idx = index;\r\n    while (idx >= alphabets.length) {\r\n      idx /= alphabets.length;\r\n      idx -= 1;\r\n      str += alphabets[parseInt(idx, 10) % alphabets.length];\r\n    }\r\n    const last = index % alphabets.length;\r\n    str += alphabets[last];\r\n    return str;\r\n  }\r\n\r\n  static indexAt(str) {\r\n    let ret = 0;\r\n    for (let i = 0; i < str.length - 1; i += 1) {\r\n      const idx = str.charCodeAt(i) - 65;\r\n      const expoNet = str.length - 1 - i;\r\n      ret += (alphabets.length ** expoNet) + (alphabets.length * idx);\r\n    }\r\n    ret += str.charCodeAt(str.length - 1) - 65;\r\n    return ret;\r\n  }\r\n\r\n  static expr2xy(src) {\r\n    let x = '';\r\n    let y = '';\r\n    for (let i = 0; i < src.length; i += 1) {\r\n      if (src.charAt(i) >= '0' && src.charAt(i) <= '9') {\r\n        y += src.charAt(i);\r\n      } else {\r\n        x += src.charAt(i);\r\n      }\r\n    }\r\n    return [PlainUtils.indexAt(x), parseInt(y, 10) - 1];\r\n  }\r\n\r\n  static xy2expr(x, y) {\r\n    return `${PlainUtils.stringAt(x)}${y + 1}`;\r\n  }\r\n\r\n  static expr2expr(src, xn, yn) {\r\n    const [x, y] = PlainUtils.expr2xy(src);\r\n    return PlainUtils.xy2expr(x + xn, y + yn);\r\n  }\r\n\r\n  static minIf(v, min) {\r\n    if (v < min) return min;\r\n    return v;\r\n  }\r\n\r\n  static keepLastIndex(obj) {\r\n    if (window.getSelection) {\r\n      obj.focus();\r\n      const range = window.getSelection();\r\n      range.selectAllChildren(obj);\r\n      range.collapseToEnd();\r\n    } else if (document.selection) {\r\n      const range = document.selection.createRange();\r\n      range.moveToElementText(obj);\r\n      range.collapse(false);\r\n      range.select();\r\n    }\r\n  }\r\n\r\n  static trim(s) {\r\n    if (this.isBlank(s)) return '';\r\n    return s.trim();\r\n  }\r\n\r\n  static now() {\r\n    return Date.now().toString();\r\n  }\r\n\r\n  static viewPort() {\r\n    return {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    };\r\n  }\r\n\r\n  static exitFullscreen() {\r\n    if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.msExitFullscreen) {\r\n      document.msExitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    }\r\n  }\r\n\r\n  static fullScreen(element) {\r\n    if (element.el) {\r\n      element = element.el;\r\n    }\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen();\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen();\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen();\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen();\r\n    }\r\n  }\r\n\r\n  static isFull() {\r\n    return !!(document.webkitIsFullScreen || document.mozFullScreen\r\n      || document.msFullscreenElement || document.fullscreenElement);\r\n  }\r\n\r\n  static uuid() {\r\n    return (`${S4() + S4()}${S4()}${S4()}${S4()}${S4()}${S4()}${S4()}`);\r\n  }\r\n\r\n  static getExplorerInfo() {\r\n    const explorer = window.navigator.userAgent.toLowerCase();\r\n    // firefox\r\n    if (explorer.indexOf('firefox') >= 0) {\r\n      const ver = explorer.match(/firefox\\/([\\d.]+)/)[1];\r\n      return { type: 'Firefox', version: ver };\r\n    }\r\n    // Chrome\r\n    if (explorer.indexOf('chrome') >= 0) {\r\n      const ver = explorer.match(/chrome\\/([\\d.]+)/)[1];\r\n      return { type: 'Chrome', version: ver };\r\n    }\r\n    // Opera\r\n    if (explorer.indexOf('opera') >= 0) {\r\n      const ver = explorer.match(/opera.([\\d.]+)/)[1];\r\n      return { type: 'Opera', version: ver };\r\n    }\r\n    // Safari\r\n    if (explorer.indexOf('Safari') >= 0) {\r\n      const ver = explorer.match(/version\\/([\\d.]+)/)[1];\r\n      return { type: 'Safari', version: ver };\r\n    }\r\n    // ie\r\n    if (explorer.indexOf('msie') >= 0) {\r\n      const ver = explorer.match(/msie ([\\d.]+)/)[1];\r\n      return { type: 'IE', version: ver };\r\n    }\r\n    // undefined\r\n    return undefined;\r\n  }\r\n\r\n}\r\n\r\nPlainUtils.EMPTY = '';\r\nPlainUtils.Nul = null;\r\nPlainUtils.Undef = undefined;\r\nPlainUtils.noop = () => {};\r\n\r\nexport {\r\n  PlainUtils,\r\n};\r\n","/* global document CustomEvent window */\r\nimport { PlainUtils } from '../utils/PlainUtils';\r\n\r\n/**\r\n * Element\r\n */\r\nclass Element {\r\n\r\n  /**\r\n   * 包装元素\r\n   */\r\n  static wrap(args) {\r\n    if (PlainUtils.isArray(args)) {\r\n      const elements = [];\r\n      args.forEach((item) => {\r\n        if (item instanceof Element) {\r\n          elements.push(item);\r\n        } else {\r\n          elements.push(new Element(item));\r\n        }\r\n      });\r\n      return elements;\r\n    }\r\n    return new Element(args);\r\n  }\r\n\r\n  /**\r\n   * Element\r\n   * @param tag\r\n   * @param className\r\n   */\r\n  constructor(tag, className = '') {\r\n    if (typeof tag === 'string') {\r\n      this.el = document.createElement(tag);\r\n      this.el.className = className;\r\n    } else {\r\n      this.el = tag;\r\n    }\r\n    this.el.data = [];\r\n  }\r\n\r\n  /**\r\n   * 空参数时返回子节点, 有参数时插入子节点\r\n   * @param args\r\n   * @returns {Element|NodeListOf<ChildNode>|ActiveX.IXMLDOMNodeList}\r\n   */\r\n  children(...args) {\r\n    if (arguments.length === 0) {\r\n      return Element.wrap(this.el.childNodes);\r\n    }\r\n    args.forEach(ele => this.append(ele));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 在当前元素中插入指定节点\r\n   * @param ele\r\n   */\r\n  append(ele) {\r\n    this.el.appendChild(ele.el);\r\n  }\r\n\r\n  /**\r\n   * 删除Class名称\r\n   * @param name\r\n   * @returns {Element}\r\n   */\r\n  removeClass(name) {\r\n    this.el.classList.remove(name);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 添加Class名称\r\n   * @param name\r\n   * @returns {Element}\r\n   */\r\n  addClass(name) {\r\n    this.el.classList.add(name);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 是否具有指定Class名称\r\n   * @param name\r\n   * @returns {boolean}\r\n   */\r\n  hasClass(name) {\r\n    return this.el.classList.contains(name);\r\n  }\r\n\r\n  /**\r\n   * 数据绑定\r\n   * @param key\r\n   * @param value\r\n   * @returns {Element|*}\r\n   */\r\n  data(key, value) {\r\n    if (value !== undefined) {\r\n      this.el.data[key] = value;\r\n      return this;\r\n    }\r\n    return this.el.data[key];\r\n  }\r\n\r\n  /**\r\n   * 元素定位\r\n   * @param value\r\n   * @returns {{top: *, left: *, width: *, height: *}|Element}\r\n   */\r\n  offset(value) {\r\n    if (value !== undefined) {\r\n      Object.keys(value).forEach((k) => {\r\n        this.css(k, `${value[k]}px`);\r\n      });\r\n      return this;\r\n    }\r\n    const {\r\n      offsetTop, offsetLeft, offsetHeight, offsetWidth,\r\n    } = this.el;\r\n    return {\r\n      top: offsetTop,\r\n      left: offsetLeft,\r\n      height: offsetHeight,\r\n      width: offsetWidth,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 获取当前元素的父节点\r\n   * @returns {Element}\r\n   */\r\n  parent() {\r\n    return Element.wrap(this.el.parentNode);\r\n  }\r\n\r\n  /**\r\n   * 获取元素坐标信息\r\n   * getBoundingClientRect\r\n   * @returns {DOMRect}\r\n   */\r\n  box() {\r\n    return this.el.getBoundingClientRect();\r\n  }\r\n\r\n  /**\r\n   * 获取当前第一个子元素\r\n   * @returns {*}\r\n   */\r\n  first() {\r\n    return Element.wrap(this.el.firstChild);\r\n  }\r\n\r\n  /**\r\n   * 获取最后一个子元素\r\n   * @returns {*}\r\n   */\r\n  last() {\r\n    return Element.wrap(this.el.lastChild);\r\n  }\r\n\r\n  /**\r\n   * 删除当前元素下的子元素\r\n   * @param ele\r\n   * @returns {boolean|ActiveX.IXMLDOMNode|*}\r\n   */\r\n  remove(ele) {\r\n    this.el.removeChild(ele.el || ele);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 当前元素是否包含指定节点\r\n   * @param ele\r\n   * @returns {boolean|*}\r\n   */\r\n  contains(ele) {\r\n    return this.el.contains(ele.el);\r\n  }\r\n\r\n  /**\r\n   * 获取当前元素的上一个元素\r\n   * @returns {*}\r\n   */\r\n  prev() {\r\n    return Element.wrap(this.el.previousSibling);\r\n  }\r\n\r\n  /**\r\n   * 获取当前元素的下一个元素\r\n   * @returns {*}\r\n   */\r\n  next() {\r\n    return Element.wrap(this.el.nextSibling);\r\n  }\r\n\r\n  /**\r\n   * 设置元素的激活状态\r\n   * @param flag\r\n   * @param cls\r\n   * @returns {Element}\r\n   */\r\n  active(flag = true, cls = 'active') {\r\n    if (flag) this.addClass(cls);\r\n    else this.removeClass(cls);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 设置元素文本\r\n   * @param text\r\n   * @returns {string|Element}\r\n   */\r\n  text(text) {\r\n    if (text !== undefined) {\r\n      this.el.innerText = text;\r\n      return this;\r\n    }\r\n    return this.el.innerText;\r\n  }\r\n\r\n  /**\r\n   * 设置元素html内容\r\n   * @param html\r\n   * @returns {Element|*}\r\n   */\r\n  html(html) {\r\n    if (html !== undefined) {\r\n      this.el.innerHTML = html;\r\n      return this;\r\n    }\r\n    return this.el.innerHTML;\r\n  }\r\n\r\n  /**\r\n   * 当前元素设置焦点\r\n   */\r\n  focus() {\r\n    this.el.focus();\r\n  }\r\n\r\n  /**\r\n   * 删除元素属性\r\n   * @param key\r\n   * @returns {Element}\r\n   */\r\n  removeAttr(key) {\r\n    this.el.removeAttribute(key);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 添加元素属性\r\n   * @param key\r\n   * @param value\r\n   * @returns {string|Element}\r\n   */\r\n  attr(key, value) {\r\n    if (value !== undefined) {\r\n      this.el.setAttribute(key, value);\r\n    } else {\r\n      if (typeof key === 'string') {\r\n        return this.el.getAttribute(key);\r\n      }\r\n      Object.keys(key).forEach((k) => {\r\n        this.el.setAttribute(k, key[k]);\r\n      });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 设置元素Value\r\n   * @param v\r\n   * @returns {Element|*}\r\n   */\r\n  val(v) {\r\n    if (v !== undefined) {\r\n      this.el.value = v;\r\n      return this;\r\n    }\r\n    return this.el.value;\r\n  }\r\n\r\n  /**\r\n   * 删除元素style属性\r\n   * @param keys\r\n   * @returns {Element}\r\n   */\r\n  cssRemoveKeys(...keys) {\r\n    keys.forEach(k => this.el.style.removeProperty(k));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 设置元素属性\r\n   * @param name\r\n   * @param value\r\n   * @returns {Element|*}\r\n   */\r\n  css(name, value) {\r\n    if (value === undefined && typeof name !== 'string') {\r\n      Object.keys(name).forEach((k) => {\r\n        this.el.style[k] = name[k];\r\n      });\r\n      return this;\r\n    }\r\n    if (value !== undefined) {\r\n      this.el.style[name] = value;\r\n      return this;\r\n    }\r\n    return this.el.style[name];\r\n  }\r\n\r\n  /**\r\n   * 获取元素计算完成的样式\r\n   * @returns {CSSStyleDeclaration}\r\n   */\r\n  computedStyle() {\r\n    return window.getComputedStyle(this.el, null);\r\n  }\r\n\r\n  /**\r\n   * 显示\r\n   * @returns {Element}\r\n   */\r\n  show() {\r\n    const style = this.computedStyle();\r\n    if (style && style.display !== 'block') {\r\n      this.css('display', 'block');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 隐藏\r\n   * @returns {Element}\r\n   */\r\n  hide() {\r\n    const style = this.computedStyle();\r\n    if (style && style.display !== 'none') {\r\n      this.css('display', 'none');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 事件触发\r\n   * @param type\r\n   * @param message\r\n   */\r\n  trigger(type, message) {\r\n    const event = new CustomEvent(type, {\r\n      detail: message,\r\n      bubbles: true,\r\n      cancelable: false,\r\n    });\r\n    this.el.dispatchEvent(event);\r\n  }\r\n\r\n  /**\r\n   * 查找子元素\r\n   * @param select\r\n   * @returns {[]|Element}\r\n   */\r\n  find(select) {\r\n    const result = this.el.querySelectorAll(select);\r\n    if (result && result.length === 1) {\r\n      return new Element(result[0]);\r\n    }\r\n    const eleArray = [];\r\n    if (result) {\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      for (const item of result) {\r\n        eleArray.push(new Element(item));\r\n      }\r\n    }\r\n    return eleArray;\r\n  }\r\n\r\n  /**\r\n   * 获取当前元素的兄弟节点\r\n   * @returns {[]}\r\n   */\r\n  sibling() {\r\n    let sibling = this.el;\r\n    const result = [];\r\n    // eslint-disable-next-line no-cond-assign\r\n    while ((sibling = sibling.previousElementSibling) !== null) result.push(new Element(sibling));\r\n    sibling = this.el;\r\n    // eslint-disable-next-line no-cond-assign\r\n    while ((sibling = sibling.nextElementSibling) !== null) result.push(new Element(sibling));\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * 比较dom是否相同\r\n   * @param ele\r\n   * @returns {boolean}\r\n   */\r\n  is(ele) {\r\n    return this.el === ele.el;\r\n  }\r\n\r\n  /**\r\n   * 在当前元素之后插入新元素\r\n   * @param ele\r\n   */\r\n  after(ele) {\r\n    this.el.after(ele.el);\r\n  }\r\n\r\n  /**\r\n   * 在当前元素之前插入新元素\r\n   * @param ele\r\n   */\r\n  before(ele) {\r\n    this.el.before(ele.el);\r\n  }\r\n\r\n  /**\r\n   * 清空元素中的所有内容\r\n   */\r\n  empty() {\r\n    this.html('');\r\n  }\r\n\r\n}\r\n\r\nconst h = (tag, className = '') => new Element(tag, className);\r\n\r\nexport {\r\n  Element,\r\n  h,\r\n};\r\n","import { Constant } from '../const/Constant';\r\nimport { Element } from './Element';\r\n\r\nclass BindPool {\r\n\r\n  constructor() {\r\n    this.pool = [];\r\n  }\r\n\r\n  unbind(ele, type, callback, option) {\r\n    if (ele instanceof Element) {\r\n      ele = ele.el;\r\n    }\r\n    const result = this.remove(ele, type, callback, option);\r\n    if (result.length) {\r\n      result.forEach((item) => {\r\n        ele.removeEventListener(item.type, item.callback, item.option);\r\n      });\r\n    } else {\r\n      ele.removeEventListener(type, callback, option);\r\n    }\r\n  }\r\n\r\n  bind(ele, type, callback, option) {\r\n    if (ele instanceof Element) {\r\n      ele = ele.el;\r\n    }\r\n    this.pool.push({\r\n      ele, type, callback, option,\r\n    });\r\n    ele.addEventListener(type, callback, option);\r\n  }\r\n\r\n  remove(ele, type = '*', callback = null, option = null) {\r\n    const pool = [];\r\n    const rem = [];\r\n    this.pool.forEach((item) => {\r\n      const eqElem = ele === item.ele;\r\n      const eqOpt = option === null || option === item.option;\r\n      const eqType = type === '*' || type === item.type;\r\n      const eqCall = callback === null || callback === item.callback;\r\n      if (eqElem && eqType && eqCall && eqOpt) {\r\n        rem.push(item);\r\n      } else {\r\n        pool.push(item);\r\n      }\r\n    });\r\n    this.pool = pool;\r\n    return rem;\r\n  }\r\n\r\n  multipleUnbind(eles, type, callback, option) {\r\n    eles.forEach((item) => {\r\n      this.unbind(item, type, callback, option);\r\n    });\r\n  }\r\n\r\n  multipleBind(eles, type, callback, option) {\r\n    eles.forEach((item) => {\r\n      this.bind(item, type, callback, option);\r\n    });\r\n  }\r\n\r\n}\r\nconst pool = new BindPool();\r\n\r\nclass XEvent {\r\n\r\n  static unbind(target, name, fn, option = false) {\r\n    if (Array.isArray(target)) {\r\n      pool.multipleUnbind(target, name, fn, option);\r\n    } else {\r\n      pool.unbind(target, name, fn, option);\r\n    }\r\n  }\r\n\r\n  static bind(target, name, fn, option = false) {\r\n    if (Array.isArray(target)) {\r\n      pool.multipleBind(target, name, fn, option);\r\n    } else {\r\n      pool.bind(target, name, fn, option);\r\n    }\r\n  }\r\n\r\n  static mouseDoubleClick(target, doubleFunc = () => {}) {\r\n    let last = 0;\r\n    let x = 0;\r\n    let y = 0;\r\n    XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (evt) => {\r\n      const current = Date.now();\r\n      const { pageX, pageY } = evt;\r\n      const diff = current - last <= 300;\r\n      if (diff && pageX === x && pageY === y) {\r\n        doubleFunc(evt);\r\n        last = 0;\r\n        x = 0;\r\n        y = 0;\r\n      } else {\r\n        x = pageX;\r\n        y = pageY;\r\n        last = current;\r\n      }\r\n    });\r\n  }\r\n\r\n  static mouseMoveUp(target, moveFunc = () => {}, upFunc = () => {}) {\r\n    const xEvtMove = (evt) => {\r\n      moveFunc(evt);\r\n      evt.stopPropagation();\r\n    };\r\n    const xEvtUp = (evt) => {\r\n      XEvent.unbind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, xEvtMove, true);\r\n      XEvent.unbind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp, true);\r\n      upFunc(evt);\r\n      evt.stopPropagation();\r\n    };\r\n    XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, xEvtMove, true);\r\n    XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp, true);\r\n  }\r\n\r\n}\r\nwindow.XEventPool = pool;\r\n\r\nexport {\r\n  XEvent,\r\n};\r\n","/* global document */\r\n\r\nimport { Element, h } from './Element';\r\nimport { cssPrefix } from '../const/Constant';\r\nimport { XEvent } from './XEvent';\r\n\r\n/**\r\n * Life\r\n */\r\nclass Life extends Element {\r\n\r\n  onAttach() { }\r\n\r\n}\r\n\r\n/**\r\n * Widget\r\n */\r\nclass Widget extends Life {\r\n\r\n  /**\r\n   * Widget\r\n   * @param className\r\n   * @param nodeType\r\n   */\r\n  constructor(className = '', nodeType = 'div') {\r\n    if (typeof className === 'string') {\r\n      super(nodeType, `${cssPrefix}-widget ${className}`);\r\n    } else {\r\n      super(className);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 计算鼠标在当前\r\n   * 元素中的位置\r\n   * @param event\r\n   * @param ele\r\n   * @returns {{x: number, y: number}}\r\n   */\r\n  eventXy(event, ele = this) {\r\n    const { top, left } = ele.box();\r\n    return {\r\n      x: event.pageX - left,\r\n      y: event.pageY - top,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 追加节点\r\n   * 触发onAttach事件\r\n   * @param widget\r\n   */\r\n  attach(widget) {\r\n    this.children(widget);\r\n    widget.onAttach(this);\r\n  }\r\n\r\n  /**\r\n   * 查找最邻近\r\n   * 的class元素\r\n   * @param clazz\r\n   */\r\n  closestClass(clazz) {\r\n    let node = this;\r\n    while (!h(document.body).is(node)) {\r\n      if (node.hasClass(clazz)) {\r\n        return node;\r\n      }\r\n      node = node.parent();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    XEvent.unbind(this);\r\n  }\r\n\r\n}\r\n\r\nconst w = (className = '', nodeType = 'div') => new Widget(className, nodeType);\r\n\r\nexport {\r\n  Widget,\r\n  w,\r\n};\r\n","import { Widget } from './Widget';\r\nimport { cssPrefix } from '../const/Constant';\r\n\r\nclass Layer extends Widget {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-layer ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport { Layer };\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { Layer } from '../Layer';\r\n\r\nclass VerticalLayer extends Layer {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-vertical-layer`);\r\n    this.options = PlainUtils.copy({\r\n      style: {},\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { VerticalLayer };\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { Layer } from '../Layer';\r\n\r\nclass VerticalLayerElement extends Layer {\r\n  constructor(options) {\r\n    super(`${cssPrefix}-vertical-layer-element`);\r\n    this.options = PlainUtils.copy({\r\n      style: {\r\n        flexGrow: '0',\r\n      },\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { VerticalLayerElement };\r\n","import { Widget } from '../../../libs/Widget';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { h } from '../../../libs/Element';\r\n\r\nclass Icon extends Widget {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-icon`);\r\n    this.iconNameEl = h('div', `${cssPrefix}-icon-img ${className}`);\r\n    this.children(this.iconNameEl);\r\n  }\r\n\r\n  setWidth(width) {\r\n    this.iconNameEl.css('width', `${width}px`);\r\n  }\r\n\r\n  setHeight(height) {\r\n    this.iconNameEl.css('height', `${height}px`);\r\n  }\r\n\r\n}\r\n\r\nexport { Icon };\r\n","import { Widget } from '../../../../libs/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass Item extends Widget {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-tools-item ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport { Item };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass Undo extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-undo`);\r\n    this.icon = new Icon('undo');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { Undo };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass Redo extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-redo`);\r\n    this.icon = new Icon('redo');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { Redo };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\n\r\nclass PaintFormat extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-point-format`);\r\n    this.icon = new Icon('point-format');\r\n    this.sheets = [];\r\n    this.children(this.icon);\r\n  }\r\n\r\n  addSheet(sheet) {\r\n    this.sheets.push(sheet);\r\n  }\r\n\r\n  removeSheet(sheet) {\r\n    for (let i = 0; i < this.sheets.length; i += 1) {\r\n      if (this.sheets[i] === sheet) {\r\n        this.sheets.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  includeSheet(sheet) {\r\n    for (let i = 0; i < this.sheets.length; i += 1) {\r\n      if (this.sheets[i] === sheet) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\nexport { PaintFormat };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\n\r\nclass ClearFormat extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-clear-format`);\r\n    this.icon = new Icon('clear-format');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { ClearFormat };\r\n","import { Item } from './Item';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\nimport { h } from '../../../../libs/Element';\r\nimport { Icon } from '../Icon';\r\n\r\nclass DropDownItem extends Item {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-tools-drop-down-item ${className}`);\r\n    this.drop = h('div', `${cssPrefix}-tools-drop-down-item-mark`);\r\n    this.title = h('div', `${cssPrefix}-tools-drop-down-item-title`);\r\n    this.drop.children(new Icon('arrow-down'));\r\n    this.children(this.title);\r\n    this.children(this.drop);\r\n  }\r\n\r\n  setTitle(text) {\r\n    this.title.text(text);\r\n  }\r\n\r\n  setIcon(icon) {\r\n    this.title.html('');\r\n    this.title.children(icon);\r\n  }\r\n\r\n  setWidth(px) {\r\n    this.title.css('width', `${px}px`);\r\n  }\r\n\r\n  setEllipsis() {\r\n    this.title.css('overflow', 'hidden');\r\n    this.title.css('text-overflow', 'ellipsis');\r\n    this.title.css('white-space', 'nowrap');\r\n  }\r\n\r\n  removeEllipsis() {\r\n    this.title.cssRemoveKeys('overflow');\r\n    this.title.cssRemoveKeys('text-overflow');\r\n    this.title.cssRemoveKeys('white-space');\r\n  }\r\n\r\n}\r\n\r\nexport { DropDownItem };\r\n","/* global window document */\r\nimport { Widget } from '../../libs/Widget';\r\nimport { Constant, cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { XEvent } from '../../libs/XEvent';\r\n\r\nlet root = PlainUtils.Nul;\r\nlet instances = [];\r\n\r\n/**\r\n * ElPopUp\r\n * @author jerry\r\n * @date 2020/10/19\r\n */\r\nclass ElPopUp extends Widget {\r\n\r\n  /**\r\n   * ElPopUp\r\n   * @param options\r\n   */\r\n  constructor(options) {\r\n    super(`${cssPrefix}-el-pop-up`);\r\n    this.options = PlainUtils.copy({\r\n      el: PlainUtils.Nul,\r\n      autoWidth: false,\r\n      autoHeight: false,\r\n      position: ElPopUp.POPUP_POSTION.TB,\r\n    }, options);\r\n    this.direction = PlainUtils.Undef;\r\n    this.status = false;\r\n    this.location = 0;\r\n    this.spaces = 0;\r\n    this.elPopUpDownHandle = () => {\r\n      this.close();\r\n    };\r\n    instances.push(this);\r\n    this.bind();\r\n  }\r\n\r\n  /**\r\n   * 显示弹框\r\n   */\r\n  open() {\r\n    if (this.status === false && root) {\r\n      root.children(this);\r\n      this.status = true;\r\n    }\r\n    this.elPopUpPosition();\r\n    this.elPopUpAutosize();\r\n    this.elPopUpLocation();\r\n  }\r\n\r\n  /**\r\n   * 关闭弹框\r\n   */\r\n  close() {\r\n    if (this.status === true && root) {\r\n      root.remove(this);\r\n      this.status = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 卸载事件\r\n   */\r\n  unbind() {\r\n    XEvent.unbind(this);\r\n    XEvent.unbind(document, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, this.elPopUpDownHandle);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件\r\n   */\r\n  bind() {\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      e.stopPropagation();\r\n    });\r\n    XEvent.bind(document, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, this.elPopUpDownHandle);\r\n  }\r\n\r\n  /**\r\n   * 计算显示的大小\r\n   */\r\n  elPopUpAutosize() {\r\n    const { options, direction, spaces } = this;\r\n    const { autoWidth, autoHeight } = options;\r\n    if (autoWidth) {\r\n      this.css('width', 'initial');\r\n      this.css('overflow-x', 'initial');\r\n      const box = this.box();\r\n      const { width } = box;\r\n      switch (direction) {\r\n        case 'left':\r\n        case 'right':\r\n          if (width > spaces) {\r\n            this.css('overflow-x', 'auto');\r\n            this.css('width', `${spaces}px`);\r\n          }\r\n          break;\r\n      }\r\n    }\r\n    if (autoHeight) {\r\n      this.css('height', 'initial');\r\n      this.css('overflow-y', 'initial');\r\n      const box = this.box();\r\n      const { height } = box;\r\n      switch (direction) {\r\n        case 'top':\r\n        case 'bottom':\r\n          if (height > spaces) {\r\n            this.css('overflow-y', 'auto');\r\n            this.css('height', `${spaces}px`);\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 计算显示的位置\r\n   */\r\n  elPopUpPosition() {\r\n    const { options } = this;\r\n    const { position } = options;\r\n    const { el } = options;\r\n    const elBox = el.box();\r\n    const winWidth = window.innerWidth;\r\n    const winHeight = window.innerHeight;\r\n    this.direction = PlainUtils.Undef;\r\n    this.spaces = 0;\r\n    this.location = 0;\r\n    switch (position) {\r\n      case ElPopUp.POPUP_POSTION.LR: {\r\n        const width = elBox.width;\r\n        const elLeft = elBox.left;\r\n        const leftDiff = elLeft;\r\n        const rightDiff = winWidth - (elLeft + width);\r\n        if (leftDiff > rightDiff) {\r\n          this.direction = 'left';\r\n          this.spaces = leftDiff;\r\n          this.location = elLeft;\r\n        } else {\r\n          this.direction = 'right';\r\n          this.spaces = rightDiff;\r\n          this.location = elLeft + width;\r\n        }\r\n        break;\r\n      }\r\n      case ElPopUp.POPUP_POSTION.TB: {\r\n        const height = elBox.height;\r\n        const elTop = elBox.top;\r\n        const topDiff = elTop;\r\n        const bottomDIff = winHeight - (elTop + height);\r\n        if (topDiff > bottomDIff) {\r\n          this.direction = 'top';\r\n          this.spaces = topDiff;\r\n          this.location = elTop;\r\n        } else {\r\n          this.direction = 'bottom';\r\n          this.spaces = bottomDIff;\r\n          this.location = elTop + height;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置显示位置\r\n   */\r\n  elPopUpLocation() {\r\n    const { direction, location, options } = this;\r\n    const { el } = options;\r\n    const box = this.box();\r\n    const elBox = el.box();\r\n    const elLeft = elBox.left;\r\n    const elTop = elBox.top;\r\n    const { width, height } = box;\r\n    switch (direction) {\r\n      case 'left':\r\n        this.css('top', `${elTop}px`);\r\n        this.css('left', `${location - width}px`);\r\n        break;\r\n      case 'right':\r\n        this.css('top', `${elTop}px`);\r\n        this.css('left', `${location}px`);\r\n        break;\r\n      case 'top':\r\n        this.css('left', `${elLeft}px`);\r\n        this.css('top', `${location - height}px`);\r\n        break;\r\n      case 'bottom':\r\n        this.css('left', `${elLeft}px`);\r\n        this.css('top', `${location}px`);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置环绕元素\r\n   * @param el\r\n   */\r\n  setEL(el) {\r\n    this.options.el = el;\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n  /**\r\n   * 删除实例\r\n   * @param instance\r\n   */\r\n  static removeInstance(instance) {\r\n    const filter = [];\r\n    instances.forEach((item) => {\r\n      if (item !== instance) {\r\n        filter.push(item);\r\n      }\r\n    });\r\n    instances = filter;\r\n  }\r\n\r\n  /**\r\n   * 关闭所有实例\r\n   * @param filter\r\n   */\r\n  static closeAll(filter = []) {\r\n    instances.forEach((item) => {\r\n      if (filter.indexOf(item) === -1) {\r\n        item.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 设置根节点\r\n   * @param element\r\n   */\r\n  static setRoot(element) {\r\n    if (element.el) {\r\n      element = h(element.el);\r\n    } else {\r\n      element = h(element);\r\n    }\r\n    root = element;\r\n  }\r\n\r\n}\r\nElPopUp.POPUP_POSTION = {\r\n  TB: Symbol('上下位置'),\r\n  LR: Symbol('左右位置'),\r\n};\r\n\r\nexport {\r\n  ElPopUp,\r\n};\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { Widget } from '../../libs/Widget';\r\nimport { ElPopUp } from '../elpopup/ElPopUp';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\n\r\nclass ELContextMenu extends Widget {\r\n\r\n  constructor(className = '', options = {}) {\r\n    super(`${cssPrefix}-el-context-menu ${className}`);\r\n    this.options = PlainUtils.copy({}, options);\r\n    this.menus = [];\r\n    this.elPopUp = new ElPopUp(this.options);\r\n    this.elPopUp.children(this);\r\n  }\r\n\r\n  isClose() {\r\n    return this.elPopUp.status === false;\r\n  }\r\n\r\n  addItem(item) {\r\n    const { menus } = this;\r\n    menus.push(item);\r\n    this.children(item);\r\n    return this;\r\n  }\r\n\r\n  open() {\r\n    this.elPopUp.open();\r\n    return this;\r\n  }\r\n\r\n  close() {\r\n    this.elPopUp.close();\r\n    return this;\r\n  }\r\n\r\n  setEL(el) {\r\n    this.elPopUp.setEL(el);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.elPopUp.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { ELContextMenu };\r\n","import { Widget } from '../../libs/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\n\r\nclass ELContextMenuItem extends Widget {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-el-context-menu-item hover ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport { ELContextMenuItem };\r\n","import { h } from '../../../../../libs/Element';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { Icon } from '../../Icon';\r\n\r\nconst pool = [];\r\n\r\nclass FormatContextMenuItem extends ELContextMenuItem {\r\n  constructor(title, desc) {\r\n    super(`${cssPrefix}-format-context-menu-item`);\r\n    this.title = title;\r\n    this.desc = desc;\r\n    this.icon = new Icon('checked');\r\n    this.iconElement = h('div', `${cssPrefix}-format-context-menu-item-icon`);\r\n    this.iconElement.children(this.icon);\r\n    this.titleElement = h('div', `${cssPrefix}-format-context-menu-item-title`);\r\n    this.descElement = h('div', `${cssPrefix}-format-context-menu-item-desc`);\r\n    this.titleElement.text(title);\r\n    this.descElement.text(desc);\r\n    this.children(this.iconElement);\r\n    this.children(this.titleElement);\r\n    this.children(this.descElement);\r\n    pool.push(this);\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.titleElement.text(title);\r\n  }\r\n\r\n  setDesc(desc) {\r\n    this.descElement.text(desc);\r\n  }\r\n\r\n  setActive() {\r\n    pool.forEach((item) => {\r\n      item.removeClass('active');\r\n    });\r\n    this.addClass('active');\r\n  }\r\n}\r\n\r\nexport { FormatContextMenuItem };\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { Widget } from '../../libs/Widget';\r\n\r\nclass ELContextMenuDivider extends Widget {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-el-context-menu-item-divider`);\r\n  }\r\n\r\n}\r\n\r\nexport { ELContextMenuDivider };\r\n","import { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { FormatContextMenuItem } from './FormatContextMenuItem';\r\nimport { ELContextMenuDivider } from '../../../../../component/contextmenu/ELContextMenuDivider';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\n\r\nclass FormatContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-format-context-menu`, PlainUtils.copy({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new FormatContextMenuItem('常规', '').data('type', 'default'),\r\n      new FormatContextMenuItem('文本', '').data('type', 'text'),\r\n      new ELContextMenuDivider(),\r\n      new FormatContextMenuItem('数值', '0.59').data('type', 'number'),\r\n      new FormatContextMenuItem('百分比', '90.00%').data('type', 'percentage'),\r\n      new FormatContextMenuItem('分数', '1/2').data('type', 'fraction'),\r\n      new FormatContextMenuItem('科学计数', '9.50e-01').data('type', 'ENotation'),\r\n      new ELContextMenuDivider(),\r\n      new FormatContextMenuItem('人民币', '￥5.00').data('type', 'rmb'),\r\n      new FormatContextMenuItem('港币', 'HK5.00').data('type', 'hk'),\r\n      new FormatContextMenuItem('美元', '$5.00').data('type', 'dollar'),\r\n      new ELContextMenuDivider(),\r\n      new FormatContextMenuItem('日期', '2018/4/18').data('type', 'date1'),\r\n      new FormatContextMenuItem('日期', '4月18日').data('type', 'date2'),\r\n      new FormatContextMenuItem('日期', '2018年4月').data('type', 'date3'),\r\n      new FormatContextMenuItem('日期', '2018年4月18日').data('type', 'date4'),\r\n      new FormatContextMenuItem('日期', '2018/4/18 14:30:30').data('type', 'date5'),\r\n      new FormatContextMenuItem('时间', '14:30:30').data('type', 'time'),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      this.addItem(item);\r\n    });\r\n    this.init();\r\n    this.bind();\r\n  }\r\n\r\n  init() {\r\n    const { options, items } = this;\r\n    const { el } = options;\r\n    const first = items[0];\r\n    el.setTitle(first.title);\r\n    first.setActive();\r\n  }\r\n\r\n  update(format, title) {\r\n    const { options } = this;\r\n    options.onUpdate(format, title);\r\n    this.close();\r\n  }\r\n\r\n  unbind() {\r\n    this.items.forEach((item) => {\r\n      if (item instanceof FormatContextMenuItem && item.data('type')) {\r\n        XEvent.unbind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n      }\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    this.items.forEach((item) => {\r\n      if (item instanceof FormatContextMenuItem && item.data('type')) {\r\n        XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n          this.update(item.data('type'), item.title);\r\n          item.setActive();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  setActiveByType(type) {\r\n    this.items.forEach((item) => {\r\n      if (item.data('type') === type) {\r\n        item.setActive();\r\n      }\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { FormatContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { FormatContextMenu } from './contextmenu/format/FormatContextMenu';\r\n\r\nclass Format extends DropDownItem {\r\n\r\n  constructor(options = {\r\n    contextMenu: {},\r\n  }) {\r\n    super(`${cssPrefix}-tools-format`);\r\n    this.options = options;\r\n    this.setTitle('常规');\r\n    this.setWidth(50);\r\n    this.setEllipsis();\r\n    this.formatContextMenu = new FormatContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.formatContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { Format };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../libs/Element';\r\nimport { Icon } from '../../Icon';\r\n\r\nconst pool = [];\r\n\r\nclass FontContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(title) {\r\n    super(`${cssPrefix}-font-context-menu-item`);\r\n    this.title = title;\r\n    this.icon = new Icon('checked');\r\n    this.iconElement = h('div', `${cssPrefix}-font-context-menu-item-icon`);\r\n    this.iconElement.children(this.icon);\r\n    this.titleElement = h('div', `${cssPrefix}-font-context-menu-item-title`);\r\n    this.titleElement.text(title);\r\n    this.titleElement.css('font-family', title);\r\n    this.children(this.iconElement);\r\n    this.children(this.titleElement);\r\n    pool.push(this);\r\n  }\r\n\r\n  setActive() {\r\n    pool.forEach((item) => {\r\n      item.removeClass('active');\r\n    });\r\n    this.addClass('active');\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title;\r\n    this.titleElement.text(title);\r\n  }\r\n\r\n}\r\n\r\nexport { FontContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { FontContextMenuItem } from './FontContextMenuItem';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\n\r\nclass FontContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-context-menu`, PlainUtils.copy({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new FontContextMenuItem('Arial'),\r\n      new FontContextMenuItem('Helvetica'),\r\n      new FontContextMenuItem('Source Sans Pro'),\r\n      new FontContextMenuItem('Comic Sans Ms'),\r\n      new FontContextMenuItem('Courier New'),\r\n      new FontContextMenuItem('Verdana'),\r\n      new FontContextMenuItem('Lalo'),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      this.addItem(item);\r\n    });\r\n    this.setActiveByType(this.items[0].title);\r\n    this.bind();\r\n  }\r\n\r\n  update(type) {\r\n    const { options } = this;\r\n    options.onUpdate(type);\r\n    this.close();\r\n  }\r\n\r\n  unbind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.unbind(item);\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n        this.update(item.title);\r\n        item.setActive();\r\n      });\r\n    });\r\n  }\r\n\r\n  setActiveByType(type) {\r\n    this.items.forEach((item) => {\r\n      if (item.title === type) {\r\n        item.setActive();\r\n      }\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { FontContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { FontContextMenu } from './contextmenu/font/FontContextMenu';\r\n\r\nclass Font extends DropDownItem {\r\n\r\n  constructor(options = {\r\n    contextMenu: {},\r\n  }) {\r\n    super(`${cssPrefix}-tools-font`);\r\n    this.options = options;\r\n    this.setTitle('Arial');\r\n    this.setWidth(50);\r\n    this.setEllipsis();\r\n    this.fontContextMenu = new FontContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.fontContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { Font };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../libs/Element';\r\n\r\nclass FontSizeContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(size) {\r\n    super(`${cssPrefix}-font-size-context-menu-item`);\r\n    this.size = size;\r\n    this.titleElement = h('div', `${cssPrefix}-font-size-context-menu-item-title`);\r\n    this.titleElement.text(size);\r\n    this.titleElement.css('text-align', 'center');\r\n    this.children(this.titleElement);\r\n  }\r\n\r\n}\r\n\r\nexport { FontSizeContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { FontSizeContextMenuItem } from './FontSizeContextMenuItem';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\n\r\nclass FontSizeContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-size-context-menu`, PlainUtils.copy({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new FontSizeContextMenuItem(6),\r\n      new FontSizeContextMenuItem(7),\r\n      new FontSizeContextMenuItem(8),\r\n      new FontSizeContextMenuItem(9),\r\n      new FontSizeContextMenuItem(10),\r\n      new FontSizeContextMenuItem(11),\r\n      new FontSizeContextMenuItem(12),\r\n      new FontSizeContextMenuItem(14),\r\n      new FontSizeContextMenuItem(15),\r\n      new FontSizeContextMenuItem(18),\r\n      new FontSizeContextMenuItem(24),\r\n      new FontSizeContextMenuItem(36),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      this.addItem(item);\r\n    });\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.unbind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n        this.update(item.size);\r\n      });\r\n    });\r\n  }\r\n\r\n  update(size) {\r\n    const { options } = this;\r\n    options.onUpdate(size);\r\n    this.close();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { FontSizeContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { FontSizeContextMenu } from './contextmenu/fontsize/FontSizeContextMenu';\r\n\r\nclass FontSize extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-font-size`);\r\n    this.options = options;\r\n    this.setTitle('10');\r\n    this.setWidth(30);\r\n    this.setEllipsis();\r\n    this.fontSizeContextMenu = new FontSizeContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.fontSizeContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { FontSize };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass FontBold extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-bold`);\r\n    this.icon = new Icon('font-bold');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { FontBold };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass FontItalic extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-italic`);\r\n    this.icon = new Icon('font-italic');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { FontItalic };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass UnderLine extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-under-line`);\r\n    this.icon = new Icon('under-line');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { UnderLine };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\n\r\nclass FontStrike extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-strike`);\r\n    this.icon = new Icon('font-strike');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { FontStrike };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../libs/Element';\r\n\r\nclass FontColorContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(title, icon) {\r\n    super(`${cssPrefix}-font-color-context-menu-item`);\r\n    this.title = title;\r\n    this.icon = icon;\r\n    if (icon) {\r\n      this.iconElement = h('div', `${cssPrefix}-font-color-context-menu-item-icon`);\r\n      this.iconElement.children(this.icon);\r\n      this.children(this.iconElement);\r\n    }\r\n    if (title) {\r\n      this.titleElement = h('div', `${cssPrefix}-font-color-context-menu-item-title`);\r\n      this.titleElement.text(title);\r\n      this.children(this.titleElement);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { FontColorContextMenuItem };\r\n","/* global document */\r\nimport { Widget } from '../../libs/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { XEvent } from '../../libs/XEvent';\r\n\r\nimport { h } from '../../libs/Element';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\n\r\nlet root = PlainUtils.Undef;\r\nlet instances = [];\r\n\r\n/**\r\n * DragPanel\r\n * @author jerry\r\n * @date 2020/10/19\r\n */\r\nclass DragPanel extends Widget {\r\n\r\n  /**\r\n   * DragPanel\r\n   * @param options\r\n   */\r\n  constructor(options) {\r\n    super(`${cssPrefix}-drag-panel`);\r\n    instances.push(this);\r\n    this.options = PlainUtils.copy({\r\n      position: DragPanel.DRAG_PANEL_POSITION.CENTER,\r\n    }, options);\r\n    this.status = false;\r\n    this.mask = h('div', `${cssPrefix}-drag-panel-mask`);\r\n    this.content = h('div', `${cssPrefix}-drag-panel-content`);\r\n    super.children(this.content);\r\n    this.bind();\r\n  }\r\n\r\n  /**\r\n   * 显示弹框\r\n   */\r\n  open() {\r\n    if (this.status === false && root) {\r\n      const { mask } = this;\r\n      root.children(mask);\r\n      root.children(this);\r\n      this.dragPanelLocation();\r\n      this.status = true;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 关闭弹框\r\n   */\r\n  close() {\r\n    if (this.status === true && root) {\r\n      const { mask } = this;\r\n      root.remove(this);\r\n      root.remove(mask);\r\n      this.status = false;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 卸载事件\r\n   */\r\n  unbind() {\r\n    const { mask } = this;\r\n    XEvent.unbind(mask);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件\r\n   */\r\n  bind() {\r\n    const { mask } = this;\r\n    XEvent.bind(mask, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.close();\r\n      e.stopPropagation();\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (evt1) => {\r\n      if (evt1.button !== 0) return;\r\n      const downEventXy = this.eventXy(evt1, this);\r\n      XEvent.mouseMoveUp(h(document), (evt2) => {\r\n        // 计算移动的距离\r\n        const top = evt2.pageY - downEventXy.y;\r\n        const left = evt2.pageX - downEventXy.x;\r\n        this.offset({ top, left });\r\n        evt2.stopPropagation();\r\n      });\r\n      evt1.stopPropagation();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 设置显示位置\r\n   */\r\n  dragPanelLocation() {\r\n    const { options } = this;\r\n    const { position } = options;\r\n    const { width, height } = PlainUtils.viewPort();\r\n    const box = this.box();\r\n    switch (position) {\r\n      case DragPanel.DRAG_PANEL_POSITION.LEFT:\r\n        break;\r\n      case DragPanel.DRAG_PANEL_POSITION.RIGHT:\r\n        break;\r\n      case DragPanel.DRAG_PANEL_POSITION.TOP:\r\n        break;\r\n      case DragPanel.DRAG_PANEL_POSITION.CENTER:\r\n        this.offset({\r\n          left: width / 2 - box.width / 2,\r\n          top: height / 2 - box.height / 2,\r\n        });\r\n        break;\r\n      default: break;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 添加子元素\r\n   * @param args\r\n   * @returns {DragPanel}\r\n   */\r\n  children(...args) {\r\n    this.content.children(...args);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    DragPanel.removeInstance(this);\r\n  }\r\n\r\n  /**\r\n   * 删除实例\r\n   * @param instance\r\n   */\r\n  static removeInstance(instance) {\r\n    const filter = [];\r\n    instances.forEach((item) => {\r\n      if (item !== instance) {\r\n        filter.push(item);\r\n      }\r\n    });\r\n    instances = filter;\r\n  }\r\n\r\n  /**\r\n   * 关闭所有实例\r\n   * @param filter\r\n   */\r\n  static closeAll(filter = []) {\r\n    instances.forEach((item) => {\r\n      if (filter.indexOf(item) === -1) {\r\n        item.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 设置根节点\r\n   * @param element\r\n   */\r\n  static setRoot(element) {\r\n    if (element.el) {\r\n      element = h(element.el);\r\n    } else {\r\n      element = h(element);\r\n    }\r\n    root = element;\r\n  }\r\n\r\n}\r\nDragPanel.DRAG_PANEL_POSITION = {\r\n  LEFT: 1,\r\n  TOP: 2,\r\n  RIGHT: 3,\r\n  CENTER: 4,\r\n};\r\n\r\nexport { DragPanel };\r\n","/* global document */\r\nimport { h } from '../../libs/Element';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { Widget } from '../../libs/Widget';\r\nimport { DragPanel } from '../dragpanel/DragPanel';\r\nimport { XEvent } from '../../libs/XEvent';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\n\r\nclass ColorPicker extends Widget {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-color-picker`);\r\n    this.options = PlainUtils.copy({\r\n      selectCb: () => {},\r\n    }, options);\r\n    // 拖拽组件\r\n    this.dragPanel = new DragPanel();\r\n    this.color = [360, 0, 100];\r\n    // 头部\r\n    this.preViewColorPoint = h('div', `${cssPrefix}-color-picker-pre-view-color-point`);\r\n    this.colorValueTips = h('div', `${cssPrefix}-color-picker-color-value-tips`);\r\n    this.colorValueTips.text('十六进制颜色值');\r\n    this.colorInput = h('input', `${cssPrefix}-color-picker-color-input`);\r\n    this.top = h('div', `${cssPrefix}-color-picker-top`);\r\n    this.top.children(this.preViewColorPoint);\r\n    this.top.children(this.colorValueTips);\r\n    this.top.children(this.colorInput);\r\n    // 中间部分\r\n    this.selectColorPoint = h('div', `${cssPrefix}-color-picker-select-color-point`);\r\n    this.selectColorArea1 = h('div', `${cssPrefix}-color-picker-select-color-area area1`);\r\n    this.selectColorArea2 = h('div', `${cssPrefix}-color-picker-select-color-area area2`);\r\n    this.selectColorArea3 = h('div', `${cssPrefix}-color-picker-select-color-area area3`);\r\n    this.center = h('div', `${cssPrefix}-color-picker-center`);\r\n    this.center.children(this.selectColorArea1);\r\n    this.center.children(this.selectColorArea2);\r\n    this.center.children(this.selectColorArea3);\r\n    this.center.children(this.selectColorPoint);\r\n    // 底部\r\n    this.colorHuxTips = h('div', `${cssPrefix}-color-picker-color-hux-tips`);\r\n    this.colorBar = h('div', `${cssPrefix}-color-picker-color-bar`);\r\n    this.colorBarPoint = h('div', `${cssPrefix}-color-picker-bar-point`);\r\n    this.bottom = h('div', `${cssPrefix}-color-picker-bottom`);\r\n    this.colorHuxTips.text('HUE');\r\n    this.colorBar.children(this.colorBarPoint);\r\n    this.bottom.children(this.colorHuxTips);\r\n    this.bottom.children(this.colorBar);\r\n    // 按钮\r\n    this.cancelButton = h('div', `${cssPrefix}-color-picker-button cancel`);\r\n    this.selectButton = h('div', `${cssPrefix}-color-picker-button select`);\r\n    this.buttons = h('div', `${cssPrefix}-color-picker-buttons`);\r\n    this.cancelButton.text('取消');\r\n    this.selectButton.text('确定');\r\n    this.buttons.children(this.selectButton);\r\n    this.buttons.children(this.cancelButton);\r\n    this.children(this.top);\r\n    this.children(this.center);\r\n    this.children(this.bottom);\r\n    this.children(this.buttons);\r\n    this.dragPanel.children(this);\r\n    this.dragPanel.css('background', '#ffffff');\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { selectColorPoint } = this;\r\n    const { colorBarPoint } = this;\r\n    const {\r\n      colorInput, cancelButton, selectButton,\r\n    } = this;\r\n    XEvent.unbind(colorInput);\r\n    XEvent.unbind(colorInput);\r\n    XEvent.unbind(colorBarPoint);\r\n    XEvent.unbind(selectColorPoint);\r\n    XEvent.unbind(cancelButton);\r\n    XEvent.unbind(selectButton);\r\n  }\r\n\r\n  bind() {\r\n    const { selectColorPoint, center } = this;\r\n    const { colorBarPoint, colorBar } = this;\r\n    const {\r\n      colorInput, cancelButton, selectButton,\r\n    } = this;\r\n    XEvent.bind(colorInput, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\r\n      e1.stopPropagation();\r\n    });\r\n    XEvent.bind(colorInput, Constant.SYSTEM_EVENT_TYPE.CHANGE, () => {\r\n      const value = colorInput.val();\r\n      if (value) {\r\n        this.hexColor(value);\r\n      }\r\n    });\r\n    XEvent.bind(colorBarPoint, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\r\n      const xy = this.eventXy(e1, colorBar);\r\n      const colorBarBox = colorBar.box();\r\n      if (xy.x < 0) xy.x = 0;\r\n      if (xy.x > colorBarBox.width) xy.x = colorBarBox.width;\r\n      this.downHue(xy.x, colorBarBox.width);\r\n      XEvent.mouseMoveUp(h(document), (e2) => {\r\n        const xy = this.eventXy(e2, colorBar);\r\n        const colorBarBox = colorBar.box();\r\n        if (xy.x < 0) xy.x = 0;\r\n        if (xy.x > colorBarBox.width) xy.x = colorBarBox.width;\r\n        this.moveHue(xy.x, colorBarBox.width);\r\n      });\r\n      e1.stopPropagation();\r\n    });\r\n    XEvent.bind(selectColorPoint, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\r\n      const xy = this.eventXy(e1, center);\r\n      const centerBox = center.box();\r\n      if (xy.x < 0) xy.x = 0;\r\n      if (xy.x > centerBox.width) xy.x = centerBox.width;\r\n      if (xy.y < 0) xy.y = 0;\r\n      if (xy.y > centerBox.height) xy.y = centerBox.height;\r\n      this.downSelect(xy.x, xy.y, centerBox.width, centerBox.height);\r\n      XEvent.mouseMoveUp(h(document), (e2) => {\r\n        const xy = this.eventXy(e2, center);\r\n        if (xy.x < 0) xy.x = 0;\r\n        if (xy.x > centerBox.width) xy.x = centerBox.width;\r\n        if (xy.y < 0) xy.y = 0;\r\n        if (xy.y > centerBox.height) xy.y = centerBox.height;\r\n        this.moveSelect(xy.x, xy.y, centerBox.width, centerBox.height);\r\n      });\r\n      e1.stopPropagation();\r\n    });\r\n    XEvent.bind(cancelButton, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.close();\r\n    });\r\n    XEvent.bind(selectButton, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      const { color } = this;\r\n      const hsb = ColorPicker.fixHsx({\r\n        h: parseInt(color[0], 10),\r\n        s: parseInt(color[1], 10),\r\n        x: parseInt(color[2], 10),\r\n      });\r\n      const colorValue = ColorPicker.hsbToHex(hsb);\r\n      this.options.selectCb(`#${colorValue}`);\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  open(hex) {\r\n    const { dragPanel } = this;\r\n    dragPanel.open();\r\n    if (hex) {\r\n      if (ColorPicker.isRgb(hex)) {\r\n        const rgb = ColorPicker.parseRgb(hex);\r\n        // eslint-disable-next-line no-param-reassign\r\n        hex = ColorPicker.rgbToHex(rgb);\r\n      }\r\n      this.hexColor(hex);\r\n    } else {\r\n      this.change();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  close() {\r\n    const { dragPanel } = this;\r\n    dragPanel.close();\r\n    return this;\r\n  }\r\n\r\n  sliderPosition(hsb) {\r\n    // hue 滑块位置\r\n    const { colorBar, colorBarPoint } = this;\r\n    const colorBarPointBox = colorBarPoint.box();\r\n    const colorBarBox = colorBar.box();\r\n    let colorBarPointLeft = parseInt(colorBarBox.width - colorBarBox.width * hsb.h / 360, 10);\r\n    colorBarPointLeft -= colorBarPointBox.width / 2;\r\n    colorBarPoint.offset({\r\n      left: colorBarPointLeft,\r\n    });\r\n    // select color 滑块位置\r\n    const { center, selectColorPoint } = this;\r\n    const selectColorPointBox = selectColorPoint.box();\r\n    const centerBox = center.box();\r\n    let selectColorPointLeft = parseInt(centerBox.width * hsb.s / 100, 10);\r\n    let selectColorPointTop = parseInt(centerBox.height * (100 - hsb.x) / 100, 10);\r\n    selectColorPointLeft -= selectColorPointBox.width / 2;\r\n    selectColorPointTop -= selectColorPointBox.height / 2;\r\n    selectColorPoint.offset({\r\n      left: selectColorPointLeft,\r\n      top: selectColorPointTop,\r\n    });\r\n  }\r\n\r\n  hueChange() {\r\n    const { color } = this;\r\n    const hsb = ColorPicker.fixHsx({\r\n      h: parseInt(color[0], 10),\r\n      s: parseInt(color[1], 10),\r\n      x: parseInt(color[2], 10),\r\n    });\r\n    const {\r\n      colorBarPoint, selectColorPoint, preViewColorPoint, selectColorArea1, colorInput,\r\n    } = this;\r\n    const colorValue = ColorPicker.hsbToHex(hsb);\r\n    const areaColorValue = ColorPicker.hsbToHex({ h: hsb.h, s: 100, x: 100 });\r\n    selectColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    preViewColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    colorBarPoint.css('backgroundColor', `#${areaColorValue}`);\r\n    selectColorArea1.css('backgroundColor', `#${areaColorValue}`);\r\n    colorInput.val(`#${colorValue}`);\r\n    this.sliderPosition(hsb);\r\n  }\r\n\r\n  selectChange() {\r\n    const { color } = this;\r\n    const hsb = ColorPicker.fixHsx({\r\n      h: parseInt(color[0], 10),\r\n      s: parseInt(color[1], 10),\r\n      x: parseInt(color[2], 10),\r\n    });\r\n    const {\r\n      preViewColorPoint, selectColorPoint, colorInput,\r\n    } = this;\r\n    const colorValue = ColorPicker.hsbToHex(hsb);\r\n    selectColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    preViewColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    colorInput.val(`#${colorValue}`);\r\n    this.sliderPosition(hsb);\r\n  }\r\n\r\n  change() {\r\n    this.hueChange();\r\n    this.selectChange();\r\n  }\r\n\r\n  downSelect(x, y, width, height) {\r\n    const { color } = this;\r\n    color[1] = parseInt(100 * x / width, 10);\r\n    color[2] = parseInt(100 * (height - y) / height, 10);\r\n    this.selectChange();\r\n  }\r\n\r\n  moveSelect(x, y, width, height) {\r\n    const { color } = this;\r\n    color[1] = parseInt(100 * (Math.max(0, Math.min(width, x))) / width, 10);\r\n    color[2] = parseInt(100 * (height - Math.max(0, Math.min(height, y))) / height, 10);\r\n    this.selectChange();\r\n  }\r\n\r\n  downHue(x, width) {\r\n    const { color } = this;\r\n    color[0] = parseInt(360 * (width - x) / width, 10);\r\n    this.hueChange();\r\n  }\r\n\r\n  moveHue(x, width) {\r\n    const { color } = this;\r\n    color[0] = parseInt(360 * (width - Math.max(0, Math.min(width, x))) / width, 10);\r\n    this.hueChange();\r\n  }\r\n\r\n  hexColor(hex) {\r\n    const { color } = this;\r\n    const result = ColorPicker.hexToHsb(ColorPicker.fixHex(hex));\r\n    color[0] = result.h;\r\n    color[1] = result.s;\r\n    color[2] = result.x;\r\n    this.change();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.dragPanel.destroy();\r\n  }\r\n\r\n  static fixHex(hex) {\r\n    const len = 6 - hex.length;\r\n    if (len > 0) {\r\n      const o = [];\r\n      for (let i = 0; i < len; i += 1) {\r\n        o.push('0');\r\n      }\r\n      o.push(hex);\r\n      // eslint-disable-next-line no-param-reassign\r\n      hex = o.join('');\r\n    }\r\n    return hex;\r\n  }\r\n\r\n  static fixHsx(hsx) {\r\n    return {\r\n      h: Math.min(360, Math.max(0, hsx.h)),\r\n      s: Math.min(100, Math.max(0, hsx.s)),\r\n      x: Math.min(100, Math.max(0, hsx.x)),\r\n    };\r\n  }\r\n\r\n  static hexToRgb(hex) {\r\n    // eslint-disable-next-line no-redeclare,no-param-reassign\r\n    hex = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\r\n    // eslint-disable-next-line no-bitwise\r\n    return { r: hex >> 16, g: (hex & 0x00FF00) >> 8, b: (hex & 0x0000FF) };\r\n  }\r\n\r\n  static hexToHsb(hex) {\r\n    return this.rgbToHsb(this.hexToRgb(hex));\r\n  }\r\n\r\n  static rgbToHsb(rgb) {\r\n    const hsb = { h: 0, s: 0, x: 0 };\r\n    const min = Math.min(rgb.r, rgb.g, rgb.b);\r\n    const max = Math.max(rgb.r, rgb.g, rgb.b);\r\n    const delta = max - min;\r\n    hsb.x = max;\r\n    hsb.s = max !== 0 ? 255 * delta / max : 0;\r\n    if (hsb.s !== 0) {\r\n      if (rgb.r === max) hsb.h = (rgb.g - rgb.b) / delta;\r\n      else if (rgb.g === max) hsb.h = 2 + (rgb.b - rgb.r) / delta;\r\n      else hsb.h = 4 + (rgb.r - rgb.g) / delta;\r\n    } else hsb.h = -1;\r\n    hsb.h *= 60;\r\n    if (hsb.h < 0) hsb.h += 360;\r\n    hsb.s *= 100 / 255;\r\n    hsb.x *= 100 / 255;\r\n    return hsb;\r\n  }\r\n\r\n  static hsbToRgb(hsb) {\r\n    const rgb = {};\r\n    let { h } = hsb;\r\n    const s = hsb.s * 255 / 100;\r\n    const v = hsb.x * 255 / 100;\r\n    if (s === 0) {\r\n      rgb.r = v;\r\n      rgb.g = v;\r\n      rgb.b = v;\r\n    } else {\r\n      const t1 = v;\r\n      const t2 = (255 - s) * v / 255;\r\n      const t3 = (t1 - t2) * (h % 60) / 60;\r\n      if (h === 360) h = 0;\r\n      if (h < 60) {\r\n        rgb.r = t1;\r\n        rgb.b = t2;\r\n        rgb.g = t2 + t3;\r\n      } else if (h < 120) {\r\n        rgb.g = t1;\r\n        rgb.b = t2;\r\n        rgb.r = t1 - t3;\r\n      } else if (h < 180) {\r\n        rgb.g = t1;\r\n        rgb.r = t2;\r\n        rgb.b = t2 + t3;\r\n      } else if (h < 240) {\r\n        rgb.b = t1;\r\n        rgb.r = t2;\r\n        rgb.g = t1 - t3;\r\n      } else if (h < 300) {\r\n        rgb.b = t1;\r\n        rgb.g = t2;\r\n        rgb.r = t2 + t3;\r\n      } else if (h < 360) {\r\n        rgb.r = t1;\r\n        rgb.g = t2;\r\n        rgb.b = t1 - t3;\r\n      } else {\r\n        rgb.r = 0;\r\n        rgb.g = 0;\r\n        rgb.b = 0;\r\n      }\r\n    }\r\n    return { r: Math.round(rgb.r), g: Math.round(rgb.g), b: Math.round(rgb.b) };\r\n  }\r\n\r\n  static rgbToHex(rgb) {\r\n    const hex = [\r\n      rgb.r.toString(16),\r\n      rgb.g.toString(16),\r\n      rgb.b.toString(16),\r\n    ];\r\n    hex.forEach((val, nr) => {\r\n      if (val.length === 1) {\r\n        hex[nr] = `0${val}`;\r\n      }\r\n    });\r\n    return hex.join('');\r\n  }\r\n\r\n  static hsbToHex(hsb) {\r\n    return this.rgbToHex(this.hsbToRgb(hsb));\r\n  }\r\n\r\n  static isRgb(rgb) {\r\n    return rgb.startsWith('rgb');\r\n  }\r\n\r\n  static isHex(hex) {\r\n    return hex.startsWith('#');\r\n  }\r\n\r\n  static parseRgb(rgb) {\r\n    const rxp = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/;\r\n    const result = rgb.match(rxp);\r\n    return {\r\n      r: result[1],\r\n      g: result[2],\r\n      b: result[3],\r\n    };\r\n  }\r\n\r\n  static isDark(rgb) {\r\n    if (PlainUtils.isBlank(rgb)) {\r\n      return false;\r\n    }\r\n    if (this.isHex(rgb)) {\r\n      const v = ColorPicker.hexToRgb(rgb);\r\n      rgb = `rgb(${v.r}, ${v.g}, ${v.b})`;\r\n    }\r\n    const result = ColorPicker.parseRgb(rgb);\r\n    const r = parseInt(result.r, 10);\r\n    const g = parseInt(result.g, 10);\r\n    const b = parseInt(result.b, 10);\r\n    return (r * 0.299) + (g * 0.578) + (b * 0.114) >= 192;\r\n  }\r\n\r\n}\r\n\r\nexport { ColorPicker };\r\n","import { Widget } from '../../../libs/Widget';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { Icon } from '../../../core/work/tools/Icon';\r\nimport { ColorPicker } from '../ColorPicker';\r\n\r\nclass ColorItem extends Widget {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-color-array-item`);\r\n    this.options = PlainUtils.copy({\r\n      color: null,\r\n      icon: null,\r\n    }, options);\r\n    this.color = this.options.color;\r\n    this.icon = this.options.icon;\r\n    if (this.color) {\r\n      this.css('backgroundColor', this.color);\r\n      if (ColorPicker.isDark(this.options.color)) {\r\n        this.checkedIcon = new Icon('checked-dark');\r\n        this.children(this.checkedIcon);\r\n      } else {\r\n        this.checkedIcon = new Icon('checked-light');\r\n        this.children(this.checkedIcon);\r\n      }\r\n      this.checkedIcon.hide();\r\n    }\r\n    if (this.icon) {\r\n      this.children(this.options.icon);\r\n    }\r\n  }\r\n\r\n  setActive(active) {\r\n    if (this.checkedIcon) {\r\n      if (active) {\r\n        this.checkedIcon.show();\r\n      } else {\r\n        this.checkedIcon.hide();\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { ColorItem };\r\n","import { Widget } from '../../../libs/Widget';\r\nimport { cssPrefix, Constant } from '../../../const/Constant';\r\nimport { ColorItem } from './ColorItem';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XEvent } from '../../../libs/XEvent';\r\n\r\nclass ColorArray extends Widget {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-color-array`);\r\n    this.options = PlainUtils.copy({\r\n      colors: [\r\n        new ColorItem({ color: 'rgb(0,0,0)' }),\r\n        new ColorItem({ color: 'rgb(67, 67, 67)' }),\r\n        new ColorItem({ color: 'rgb(102, 102, 102)' }),\r\n        new ColorItem({ color: 'rgb(153, 153, 153)' }),\r\n        new ColorItem({ color: 'rgb(183, 183, 183)' }),\r\n        new ColorItem({ color: 'rgb(204, 204, 204)' }),\r\n        new ColorItem({ color: 'rgb(217, 217, 217)' }),\r\n        new ColorItem({ color: 'rgb(239, 239, 239)' }),\r\n        new ColorItem({ color: 'rgb(255, 255, 255)' }),\r\n\r\n        new ColorItem({ color: 'rgb(152, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(255, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(255, 153, 0)' }),\r\n        new ColorItem({ color: 'rgb(255, 255, 0)' }),\r\n        new ColorItem({ color: 'rgb(0, 255, 0)' }),\r\n        new ColorItem({ color: 'rgb(0, 255, 255)' }),\r\n        new ColorItem({ color: 'rgb(74, 134, 232)' }),\r\n        new ColorItem({ color: 'rgb(0, 0, 255)' }),\r\n        new ColorItem({ color: 'rgb(153, 0, 255)' }),\r\n        new ColorItem({ color: 'rgb(255, 0, 255)' }),\r\n\r\n        new ColorItem({ color: 'rgb(230, 184, 175)' }),\r\n        new ColorItem({ color: 'rgb(244, 204, 204)' }),\r\n        new ColorItem({ color: 'rgb(252, 229, 205)' }),\r\n        new ColorItem({ color: 'rgb(255, 242, 204)' }),\r\n        new ColorItem({ color: 'rgb(217, 234, 211)' }),\r\n        new ColorItem({ color: 'rgb(208, 224, 227)' }),\r\n        new ColorItem({ color: 'rgb(201, 218, 248)' }),\r\n        new ColorItem({ color: 'rgb(207, 226, 243)' }),\r\n        new ColorItem({ color: 'rgb(217, 210, 233)' }),\r\n        new ColorItem({ color: 'rgb(234, 209, 220)' }),\r\n\r\n        new ColorItem({ color: 'rgb(221, 126, 107)' }),\r\n        new ColorItem({ color: 'rgb(234, 153, 153)' }),\r\n        new ColorItem({ color: 'rgb(249, 203, 156)' }),\r\n        new ColorItem({ color: 'rgb(255, 229, 153)' }),\r\n        new ColorItem({ color: 'rgb(182, 215, 168)' }),\r\n        new ColorItem({ color: 'rgb(162, 196, 201)' }),\r\n        new ColorItem({ color: 'rgb(164, 194, 244)' }),\r\n        new ColorItem({ color: 'rgb(159, 197, 232)' }),\r\n        new ColorItem({ color: 'rgb(180, 167, 214)' }),\r\n        new ColorItem({ color: 'rgb(213, 166, 189)' }),\r\n\r\n        new ColorItem({ color: 'rgb(204, 65, 37)' }),\r\n        new ColorItem({ color: 'rgb(224, 102, 102)' }),\r\n        new ColorItem({ color: 'rgb(246, 178, 107)' }),\r\n        new ColorItem({ color: 'rgb(255, 217, 102)' }),\r\n        new ColorItem({ color: 'rgb(147, 196, 125)' }),\r\n        new ColorItem({ color: 'rgb(118, 165, 175)' }),\r\n        new ColorItem({ color: 'rgb(109, 158, 235)' }),\r\n        new ColorItem({ color: 'rgb(111, 168, 220)' }),\r\n        new ColorItem({ color: 'rgb(142, 124, 195)' }),\r\n        new ColorItem({ color: 'rgb(194, 123, 160)' }),\r\n\r\n        new ColorItem({ color: 'rgb(166, 28, 0)' }),\r\n        new ColorItem({ color: 'rgb(204, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(230, 145, 56)' }),\r\n        new ColorItem({ color: 'rgb(241, 194, 50)' }),\r\n        new ColorItem({ color: 'rgb(106, 168, 79)' }),\r\n        new ColorItem({ color: 'rgb(69, 129, 142)' }),\r\n        new ColorItem({ color: 'rgb(60, 120, 216)' }),\r\n        new ColorItem({ color: 'rgb(61, 133, 198)' }),\r\n        new ColorItem({ color: 'rgb(103, 78, 167)' }),\r\n        new ColorItem({ color: 'rgb(166, 77, 121)' }),\r\n\r\n        new ColorItem({ color: 'rgb(133, 32, 12)' }),\r\n        new ColorItem({ color: 'rgb(153, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(180, 95, 6)' }),\r\n        new ColorItem({ color: 'rgb(191, 144, 0)' }),\r\n        new ColorItem({ color: 'rgb(56, 118, 29)' }),\r\n        new ColorItem({ color: 'rgb(19, 79, 92)' }),\r\n        new ColorItem({ color: 'rgb(17, 85, 204)' }),\r\n        new ColorItem({ color: 'rgb(11, 83, 148)' }),\r\n        new ColorItem({ color: 'rgb(53, 28, 117)' }),\r\n        new ColorItem({ color: 'rgb(116, 27, 71)' }),\r\n\r\n        new ColorItem({ color: 'rgb(91, 15, 0)' }),\r\n        new ColorItem({ color: 'rgb(102, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(120, 63, 4)' }),\r\n        new ColorItem({ color: 'rgb(127, 96, 0)' }),\r\n        new ColorItem({ color: 'rgb(39, 78, 19)' }),\r\n        new ColorItem({ color: 'rgb(12, 52, 61)' }),\r\n        new ColorItem({ color: 'rgb(28, 69, 135)' }),\r\n        new ColorItem({ color: 'rgb(7, 55, 99)' }),\r\n        new ColorItem({ color: 'rgb(32, 18, 77)' }),\r\n        new ColorItem({ color: 'rgb(76, 17, 48)' }),\r\n      ],\r\n      selectCb: () => {},\r\n    }, options);\r\n    this.colors = [];\r\n    this.activeColor = null;\r\n    this.options.colors.forEach((item) => {\r\n      this.add(item);\r\n    });\r\n    if (this.colors.length > 0) {\r\n      this.setActiveByColor(this.colors[0].options.color);\r\n    }\r\n  }\r\n\r\n  add(item) {\r\n    this.colors.push(item);\r\n    this.children(item);\r\n    this.bind(item);\r\n  }\r\n\r\n  unbind() {\r\n    this.colors.forEach((item) => {\r\n      XEvent.unbind(item);\r\n    });\r\n  }\r\n\r\n  bind(item) {\r\n    XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.selectCb(item);\r\n      if (item.options.color) {\r\n        this.setActiveByColor(item.options.color);\r\n      }\r\n    });\r\n  }\r\n\r\n  setActiveByColor(color) {\r\n    this.colors.forEach((item) => {\r\n      const { options } = item;\r\n      if (options.color === color) {\r\n        item.setActive(true);\r\n        this.activeColor = options.color;\r\n      } else {\r\n        item.setActive(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { ColorArray };\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { FontColorContextMenuItem } from './FontColorContextMenuItem';\r\nimport { ColorArray } from '../../../../../component/colorpicker/colorarray/ColorArray';\r\nimport { h } from '../../../../../libs/Element';\r\nimport { ColorItem } from '../../../../../component/colorpicker/colorarray/ColorItem';\r\nimport { ELContextMenuDivider } from '../../../../../component/contextmenu/ELContextMenuDivider';\r\nimport { Icon } from '../../Icon';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { ColorPicker } from '../../../../../component/colorpicker/ColorPicker';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\n\r\nclass FontColorContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-color-context-menu`, PlainUtils.copy({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.colorPicker = new ColorPicker({\r\n      selectCb: (color) => {\r\n        const item = new ColorItem({ color });\r\n        this.customizeColorArray.add(item);\r\n        this.customizeColorArray.setActiveByColor(color);\r\n        this.colorArray.setActiveByColor(null);\r\n        this.options.onUpdate(color);\r\n        this.close();\r\n      },\r\n    });\r\n    // 重置\r\n    this.reset = new FontColorContextMenuItem('重置', new Icon('clear-color'));\r\n    // 颜色筛选\r\n    this.array = new FontColorContextMenuItem();\r\n    this.array.removeClass('hover');\r\n    this.colorArray = new ColorArray({\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) this.options.onUpdate(color);\r\n        this.customizeColorArray.setActiveByColor(null);\r\n        this.close();\r\n      },\r\n    });\r\n    this.array.children(this.colorArray);\r\n    // 历史选中\r\n    this.title = h('div', `${cssPrefix}-font-color-context-menu-color-title`);\r\n    this.title.text('自定义');\r\n    this.plus = new Icon('plus');\r\n    this.customizeColorArray = new ColorArray({\r\n      colors: [\r\n        new ColorItem({ icon: this.plus }),\r\n      ],\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) {\r\n          this.options.onUpdate(color);\r\n          this.colorArray.setActiveByColor(null);\r\n          this.close();\r\n        } else {\r\n          this.colorPicker.open(this.customizeColorArray.activeColor);\r\n        }\r\n      },\r\n    });\r\n    this.customize = new FontColorContextMenuItem();\r\n    this.customize.removeClass('hover');\r\n    this.customize.children(this.title);\r\n    this.customize.children(this.customizeColorArray);\r\n    // 菜单元素追加子节点\r\n    this.addItem(this.reset);\r\n    this.addItem(this.array);\r\n    this.addItem(new ELContextMenuDivider());\r\n    this.addItem(this.customize);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.reset);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.reset, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdate('rgb(0,0,0)');\r\n      this.customizeColorArray.setActiveByColor(null);\r\n      this.colorArray.setActiveByColor(null);\r\n    });\r\n  }\r\n\r\n  setActiveByColor(color) {\r\n    this.customizeColorArray.setActiveByColor(color);\r\n    this.colorArray.setActiveByColor(color);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { FontColorContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { FontColorContextMenu } from './contextmenu/fontcolor/FontColorContextMenu';\r\n\r\nclass FontColor extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-font-color`);\r\n    this.options = options;\r\n    this.icon = new Icon('color');\r\n    this.setIcon(this.icon);\r\n    this.setColor('rgb(0,0,0)');\r\n    this.fontColorContextMenu = new FontColorContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n    this.fontColorContextMenu.setActiveByColor('rgb(0,0,0)');\r\n  }\r\n\r\n  setColor(color) {\r\n    this.icon.css('border-bottom', `3px solid ${color}`);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.fontColorContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { FontColor };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../libs/Element';\r\n\r\nclass FillColorContextMenuItem extends ELContextMenuItem {\r\n  constructor(title, icon) {\r\n    super(`${cssPrefix}-fill-color-context-menu-item`);\r\n    this.title = title;\r\n    this.icon = icon;\r\n    if (icon) {\r\n      this.iconElement = h('div', `${cssPrefix}-fill-color-context-menu-item-icon`);\r\n      this.iconElement.children(this.icon);\r\n      this.children(this.iconElement);\r\n    }\r\n    if (title) {\r\n      this.titleElement = h('div', `${cssPrefix}-fill-color-context-menu-item-title`);\r\n      this.titleElement.text(title);\r\n      this.children(this.titleElement);\r\n    }\r\n  }\r\n}\r\n\r\nexport { FillColorContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { ColorArray } from '../../../../../component/colorpicker/colorarray/ColorArray';\r\nimport { h } from '../../../../../libs/Element';\r\nimport { ColorItem } from '../../../../../component/colorpicker/colorarray/ColorItem';\r\nimport { ELContextMenuDivider } from '../../../../../component/contextmenu/ELContextMenuDivider';\r\nimport { Icon } from '../../Icon';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nimport { FillColorContextMenuItem } from './FillColorContextMenuItem';\r\nimport { ColorPicker } from '../../../../../component/colorpicker/ColorPicker';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\n\r\nclass FillColorContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-color-context-menu`, PlainUtils.copy({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.colorPicker = new ColorPicker({\r\n      selectCb: (color) => {\r\n        const item = new ColorItem({ color });\r\n        this.customizeColorArray.add(item);\r\n        this.customizeColorArray.setActiveByColor(color);\r\n        this.colorArray.setActiveByColor(null);\r\n        this.options.onUpdate(color);\r\n        this.close();\r\n      },\r\n    });\r\n    // 重置\r\n    this.reset = new FillColorContextMenuItem('重置', new Icon('clear-color'));\r\n    // 颜色筛选\r\n    this.array = new FillColorContextMenuItem();\r\n    this.array.removeClass('hover');\r\n    this.colorArray = new ColorArray({\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) this.options.onUpdate(color);\r\n        this.customizeColorArray.setActiveByColor(null);\r\n        this.close();\r\n      },\r\n    });\r\n    this.array.children(this.colorArray);\r\n    // 历史选中\r\n    this.title = h('div', `${cssPrefix}-font-color-context-menu-color-title`);\r\n    this.title.text('自定义');\r\n    this.plus = new Icon('plus');\r\n    this.customizeColorArray = new ColorArray({\r\n      colors: [\r\n        new ColorItem({ icon: this.plus }),\r\n      ],\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) {\r\n          this.options.onUpdate(color);\r\n          this.colorArray.setActiveByColor(null);\r\n          this.close();\r\n        } else {\r\n          this.colorPicker.open(this.customizeColorArray.activeColor);\r\n        }\r\n      },\r\n    });\r\n    this.customize = new FillColorContextMenuItem();\r\n    this.customize.removeClass('hover');\r\n    this.customize.children(this.title);\r\n    this.customize.children(this.customizeColorArray);\r\n    // 菜单元素追加子节点\r\n    this.addItem(this.reset);\r\n    this.addItem(this.array);\r\n    this.addItem(new ELContextMenuDivider());\r\n    this.addItem(this.customize);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.bind(this.reset);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.reset, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdate(null);\r\n      this.customizeColorArray.setActiveByColor(null);\r\n      this.colorArray.setActiveByColor(null);\r\n    });\r\n  }\r\n\r\n  setActiveByColor(color) {\r\n    this.customizeColorArray.setActiveByColor(color);\r\n    this.colorArray.setActiveByColor(color);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { FillColorContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { FillColorContextMenu } from './contextmenu/fillcolor/FillColorContextMenu';\r\n\r\nclass FillColor extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-fill-color`);\r\n    this.options = options;\r\n    this.icon = new Icon('fill-color');\r\n    this.setIcon(this.icon);\r\n    this.setColor('rgb(255, 255, 255)');\r\n    this.fillColorContextMenu = new FillColorContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n    this.fillColorContextMenu.setActiveByColor('rgb(255, 255, 255)');\r\n  }\r\n\r\n  setColor(color) {\r\n    this.icon.css('border-bottom', `3px solid ${color}`);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.fillColorContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { FillColor };\r\n","import { ELContextMenuItem } from '../../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\n\r\nclass BorderTypeContextMenuItem extends ELContextMenuItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-border-type-context-menu-item`);\r\n  }\r\n}\r\n\r\nexport { BorderTypeContextMenuItem };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon1 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border1`);\r\n    this.icon = new Icon('border1');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon1 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon2 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border2`);\r\n    this.icon = new Icon('border2');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon2 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon3 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border3`);\r\n    this.icon = new Icon('border3');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon3 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon4 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border4`);\r\n    this.icon = new Icon('border4');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon4 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon5 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border5`);\r\n    this.icon = new Icon('border5');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon5 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon6 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border6`);\r\n    this.icon = new Icon('border6');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon6 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon7 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border7`);\r\n    this.icon = new Icon('border7');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon7 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon8 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border8`);\r\n    this.icon = new Icon('border8');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon8 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon9 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border9`);\r\n    this.icon = new Icon('border9');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon9 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon10 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border10`);\r\n    this.icon = new Icon('border10');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon10 };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { DropDownItem } from '../../../base/DropDownItem';\r\n\r\nclass BorderColor extends DropDownItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border-color`);\r\n    this.icon = new Icon('border-color');\r\n    this.setIcon(this.icon);\r\n    this.setColor('#000000');\r\n  }\r\n\r\n  setColor(color) {\r\n    this.icon.css('border-bottom', `3px solid ${color}`);\r\n  }\r\n}\r\n\r\nexport { BorderColor };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { DropDownItem } from '../../../base/DropDownItem';\r\n\r\nclass BorderType extends DropDownItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border-type`);\r\n    this.icon = new Icon('border-type');\r\n    this.setIcon(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderType };\r\n","import { ELContextMenuItem } from '../../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { h } from '../../../../../../libs/Element';\r\n\r\nclass BorderColorContextMenuItem extends ELContextMenuItem {\r\n  constructor(title, icon) {\r\n    super(`${cssPrefix}-border-color-context-menu-item`);\r\n    this.title = title;\r\n    this.icon = icon;\r\n    if (icon) {\r\n      this.iconElement = h('div', `${cssPrefix}-border-color-context-menu-item-icon`);\r\n      this.iconElement.children(this.icon);\r\n      this.children(this.iconElement);\r\n    }\r\n    if (title) {\r\n      this.titleElement = h('div', `${cssPrefix}-border-color-context-menu-item-title`);\r\n      this.titleElement.text(title);\r\n      this.children(this.titleElement);\r\n    }\r\n  }\r\n}\r\n\r\nexport { BorderColorContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../../utils/PlainUtils';\r\nimport { ColorPicker } from '../../../../../../component/colorpicker/ColorPicker';\r\nimport { ColorItem } from '../../../../../../component/colorpicker/colorarray/ColorItem';\r\nimport { Icon } from '../../../Icon';\r\nimport { ColorArray } from '../../../../../../component/colorpicker/colorarray/ColorArray';\r\nimport { ELContextMenuDivider } from '../../../../../../component/contextmenu/ELContextMenuDivider';\r\nimport { BorderColorContextMenuItem } from './BorderColorContextMenuItem';\r\nimport { h } from '../../../../../../libs/Element';\r\nimport { XEvent } from '../../../../../../libs/XEvent';\r\n\r\nclass BorderColorContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-border-color-context-menu`, PlainUtils.copy({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.colorPicker = new ColorPicker({\r\n      selectCb: (color) => {\r\n        const item = new ColorItem({ color });\r\n        this.customizeColorArray.add(item);\r\n        this.customizeColorArray.setActiveByColor(color);\r\n        this.colorArray.setActiveByColor(null);\r\n        this.options.onUpdate(color);\r\n        this.close();\r\n      },\r\n    });\r\n    // 重置\r\n    this.reset = new BorderColorContextMenuItem('重置', new Icon('clear-color'));\r\n    // 颜色筛选\r\n    this.array = new BorderColorContextMenuItem();\r\n    this.array.removeClass('hover');\r\n    this.colorArray = new ColorArray({\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) this.options.onUpdate(color);\r\n        this.customizeColorArray.setActiveByColor(null);\r\n        this.close();\r\n      },\r\n    });\r\n    this.array.children(this.colorArray);\r\n    // 历史选中\r\n    this.title = h('div', `${cssPrefix}-border-color-context-menu-color-title`);\r\n    this.title.text('自定义');\r\n    this.plus = new Icon('plus');\r\n    this.customizeColorArray = new ColorArray({\r\n      colors: [\r\n        new ColorItem({ icon: this.plus }),\r\n      ],\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) {\r\n          this.options.onUpdate(color);\r\n          this.colorArray.setActiveByColor(null);\r\n          this.close();\r\n        } else {\r\n          this.colorPicker.open(this.customizeColorArray.activeColor);\r\n        }\r\n      },\r\n    });\r\n    this.customize = new BorderColorContextMenuItem();\r\n    this.customize.removeClass('hover');\r\n    this.customize.children(this.title);\r\n    this.customize.children(this.customizeColorArray);\r\n    // 菜单元素追加子节点\r\n    this.addItem(this.reset);\r\n    this.addItem(this.array);\r\n    this.addItem(new ELContextMenuDivider());\r\n    this.addItem(this.customize);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.reset);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.reset, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdate('rgb(0,0,0)');\r\n      this.customizeColorArray.setActiveByColor(null);\r\n      this.colorArray.setActiveByColor(null);\r\n    });\r\n  }\r\n\r\n  setActiveByColor(color) {\r\n    this.customizeColorArray.setActiveByColor(color);\r\n    this.colorArray.setActiveByColor(color);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { BorderColorContextMenu };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { h } from '../../../../../../libs/Element';\r\nimport { ELContextMenuItem } from '../../../../../../component/contextmenu/ELContextMenuItem';\r\n\r\nconst pool = [];\r\n\r\nclass LineTypeContextMenuItem extends ELContextMenuItem {\r\n  constructor(type) {\r\n    super(`${cssPrefix}-font-context-menu-item`);\r\n    this.type = type;\r\n    this.icon = new Icon('checked');\r\n    this.typeIcon = new Icon(type);\r\n    this.typeIcon.setWidth(50);\r\n    this.iconElement = h('div', `${cssPrefix}-font-context-menu-item-icon`);\r\n    this.titleElement = h('div', `${cssPrefix}-font-context-menu-item-title`);\r\n    this.iconElement.children(this.icon);\r\n    this.titleElement.children(this.typeIcon);\r\n    this.children(this.iconElement);\r\n    this.children(this.titleElement);\r\n    pool.push(this);\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title;\r\n    this.titleElement.text(title);\r\n  }\r\n\r\n  setActive() {\r\n    pool.forEach((item) => {\r\n      item.removeClass('active');\r\n    });\r\n    this.addClass('active');\r\n  }\r\n}\r\n\r\nexport { LineTypeContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../../component/contextmenu/ELContextMenu';\r\nimport { PlainUtils } from '../../../../../../utils/PlainUtils';\r\nimport { cssPrefix, Constant } from '../../../../../../const/Constant';\r\nimport { LineTypeContextMenuItem } from './LineTypeContextMenuItem';\r\nimport { XEvent } from '../../../../../../libs/XEvent';\r\n\r\nclass LineTypeContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-line-type-context-menu`, PlainUtils.copy({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new LineTypeContextMenuItem('line1'),\r\n      new LineTypeContextMenuItem('line2'),\r\n      new LineTypeContextMenuItem('line3'),\r\n      new LineTypeContextMenuItem('line4'),\r\n      new LineTypeContextMenuItem('line5'),\r\n      new LineTypeContextMenuItem('line6'),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      this.addItem(item);\r\n    });\r\n    this.setActiveByType(this.items[0].type);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.unbind(item);\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n        this.update(item.type);\r\n        item.setActive();\r\n      });\r\n    });\r\n  }\r\n\r\n  update(type) {\r\n    const { options } = this;\r\n    options.onUpdate(type);\r\n    this.close();\r\n  }\r\n\r\n  setActiveByType(type) {\r\n    this.items.forEach((item) => {\r\n      if (item.type === type) {\r\n        item.setActive();\r\n      }\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { LineTypeContextMenu };\r\n","/* global window */\n\nlet DPR = window.devicePixelRatio || 1;\nlet LINE_WIDTH_LOW = Math.round(DPR);\nlet LINE_WIDTH_MEDIUM = LINE_WIDTH_LOW + 2;\nlet LINE_WIDTH_HIGH = LINE_WIDTH_MEDIUM + 2;\nlet LINE_PIXEL_OFFSET = LINE_WIDTH_LOW / 2;\n\nclass Base {\n\n  static styleTransformCssPx(px) {\n    return px / this.dpr();\n  }\n\n  static srcTransformCssPx(px) {\n    return this.styleTransformCssPx(this.srcTransformStylePx(px));\n  }\n\n  static srcTransformStylePx(px) {\n    return this.rounding(px * this.dpr());\n  }\n\n  static rounding(val) {\n    return Math.round(val);\n  }\n\n  static radian(angle) {\n    return -angle * (Math.PI / 180);\n  }\n\n  static dpr() {\n    return DPR;\n  }\n\n  static dprUpdate() {\n    DPR = window.devicePixelRatio || 1;\n    LINE_WIDTH_LOW = Math.round(DPR);\n    LINE_WIDTH_MEDIUM = LINE_WIDTH_LOW + 2;\n    LINE_WIDTH_HIGH = LINE_WIDTH_MEDIUM + 2;\n    LINE_PIXEL_OFFSET = LINE_WIDTH_LOW / 2;\n  }\n\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n  }\n\n  attr(options) {\n    // eslint-disable-next-line guard-for-in,no-restricted-syntax\n    for (const key in options) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (options.hasOwnProperty(key)) {\n        let value = options[key];\n        if (typeof value === 'string' || value instanceof String) {\n          value = value.trim();\n        }\n        if (this.ctx[key] !== value) {\n          this.ctx[key] = value;\n        }\n      }\n    }\n    return this;\n  }\n\n  resize(width, height) {\n    const { canvas } = this;\n    canvas.width = Base.srcTransformStylePx(width);\n    canvas.height = Base.srcTransformStylePx(height);\n    canvas.style.width = `${canvas.width / Base.dpr()}px`;\n    canvas.style.height = `${canvas.height / Base.dpr()}px`;\n    return this;\n  }\n\n}\n\nclass Wrapping extends Base {\n\n  constructor(canvas) {\n    super(canvas);\n    this.dash = [];\n  }\n\n  beginPath() {\n    const { ctx } = this;\n    ctx.beginPath();\n    return this;\n  }\n\n  measureText(text) {\n    const { ctx } = this;\n    return ctx.measureText(text);\n  }\n\n  save() {\n    const { ctx } = this;\n    ctx.save();\n    return this;\n  }\n\n  restore() {\n    const { ctx } = this;\n    ctx.restore();\n    return this;\n  }\n\n  fill() {\n    const { ctx } = this;\n    ctx.fill();\n    return this;\n  }\n\n  clip() {\n    const { ctx } = this;\n    ctx.clip();\n    return this;\n  }\n\n  setLineDash(dash = []) {\n    const { ctx } = this;\n    this.dash = dash;\n    ctx.setLineDash(dash);\n    return this;\n  }\n\n  scale(x, y) {\n    const { ctx } = this;\n    ctx.scale(x, y);\n    return this;\n  }\n\n  translate(x, y) {\n    const { ctx } = this;\n    ctx.translate(x, y);\n    return this;\n  }\n\n  rotate(deg) {\n    const { ctx } = this;\n    ctx.rotate(deg);\n    return this;\n  }\n\n}\n\nclass Extends extends Wrapping {\n\n  polyStroke(interpolation = xys => xys, ...xys) {\n    const { ctx } = this;\n    if (xys.length > 1) {\n      this.beginPath();\n      const [x, y] = interpolation(xys[0]);\n      ctx.moveTo(x, y);\n      for (let i = 1, len = xys.length; i < len; i += 1) {\n        const [x, y] = interpolation(xys[i]);\n        ctx.lineTo(x, y);\n      }\n      ctx.stroke();\n    }\n  }\n\n  polyInFill(interpolation = xys => xys, ...xys) {\n    const { ctx } = this;\n    if (xys.length > 1) {\n      this.beginPath();\n      const [x, y] = interpolation(xys[0]);\n      ctx.moveTo(x, y);\n      for (let i = 1, len = xys.length; i < len; i += 1) {\n        const [x, y] = interpolation(xys[i]);\n        ctx.lineTo(x, y);\n      }\n      ctx.fill();\n    }\n  }\n\n  fullRect() {\n    const { canvas } = this;\n    const { width, height } = canvas;\n    this.ctx.fillRect(0, 0, width, height);\n    return this;\n  }\n\n  rotate(angle) {\n    super.rotate(Base.radian(angle));\n    return this;\n  }\n\n}\n\nclass Position extends Extends {\n\n  constructor(canvas) {\n    super(canvas);\n    this.offsetX = 0;\n    this.offsetY = 0;\n  }\n\n  offset(x, y) {\n    this.offsetX = x;\n    this.offsetY = y;\n  }\n\n  getOffsetX() {\n    return this.offsetX;\n  }\n\n  getOffsetY() {\n    return this.offsetY;\n  }\n\n  fillText() {\n    throw TypeError('child impl');\n  }\n\n  fillRect() {\n    throw TypeError('child impl');\n  }\n\n  rect() {\n    throw TypeError('child impl');\n  }\n\n  drawImage() {\n    throw TypeError('child impl');\n  }\n\n}\n\nclass BaseLine extends Position {\n\n  line(...xys) {\n    this.polyStroke((xys) => {\n      const [x, y] = xys;\n      return [this.transformLinePx(Base.rounding(x + this.getOffsetX())),\n        this.transformLinePx(Base.rounding(y + this.getOffsetY()))];\n    }, ...xys);\n    return this;\n  }\n\n  transformLinePx(pixel) {\n    const { ctx } = this;\n    const {\n      lineWidth,\n    } = ctx;\n    return lineWidth % 2 === 0\n      ? pixel : pixel - 0.5;\n  }\n\n}\n\nclass CorsLine extends BaseLine {\n\n  static offsetToLineInside(val) {\n    return LINE_WIDTH_LOW > 1\n      ? val - LINE_PIXEL_OFFSET\n      : val - LINE_WIDTH_LOW;\n  }\n\n  static getLineWidthTypePx(type) {\n    switch (type) {\n      case CorsLine.LINE_WIDTH_TYPE.medium:\n        return LINE_WIDTH_MEDIUM;\n      case CorsLine.LINE_WIDTH_TYPE.low:\n        return LINE_WIDTH_LOW;\n      case CorsLine.LINE_WIDTH_TYPE.high:\n        return LINE_WIDTH_HIGH;\n    }\n    return 0;\n  }\n\n  constructor(canvas) {\n    super(canvas);\n    this.lineWidthType = CorsLine.LINE_WIDTH_TYPE.low;\n    this.lineColor = '#000000';\n  }\n\n  corsLine([sx, sy], [ex, ey]) {\n    const {\n      lineWidthType, lineColor,\n    } = this;\n    let lineWidth = LINE_WIDTH_LOW;\n    switch (lineWidthType) {\n      case CorsLine.LINE_WIDTH_TYPE.medium:\n        lineWidth = LINE_WIDTH_MEDIUM;\n        break;\n      case CorsLine.LINE_WIDTH_TYPE.low:\n        lineWidth = LINE_WIDTH_LOW;\n        break;\n      case CorsLine.LINE_WIDTH_TYPE.high:\n        lineWidth = LINE_WIDTH_HIGH;\n        break;\n    }\n    this.attr({\n      strokeStyle: lineColor,\n      lineWidth,\n    });\n    this.polyStroke((xys) => {\n      const [x, y] = xys;\n      return [\n        Base.rounding(x + this.getOffsetX()) - LINE_PIXEL_OFFSET,\n        Base.rounding(y + this.getOffsetY()) - LINE_PIXEL_OFFSET,\n      ];\n    }, [sx, sy], [ex, ey]);\n  }\n\n  setLineColor(color) {\n    this.lineColor = color;\n  }\n\n  setLineWidthType(type) {\n    this.lineWidthType = type;\n  }\n\n  horizonLine([sx, sy], [ex, ey]) {\n    if (sy !== ey) {\n      throw new TypeError('Error Horizon Line');\n    }\n    this.corsLine([sx, sy], [ex, ey]);\n  }\n\n  verticalLine([sx, sy], [ex, ey]) {\n    if (sx !== ex) {\n      throw new TypeError('Error Vertical Line');\n    }\n    this.corsLine([sx, sy], [ex, ey]);\n  }\n\n}\nCorsLine.LINE_WIDTH_TYPE = {\n  low: 'low',\n  medium: 'medium',\n  high: 'high',\n};\n\nclass XDraw extends CorsLine {\n\n  fillText(text, x, y) {\n    x += this.getOffsetX();\n    y += this.getOffsetY();\n    this.ctx.fillText(text, XDraw.rounding(x), XDraw.rounding(y));\n    return this;\n  }\n\n  fillPath(path) {\n    this.polyInFill((xys) => {\n      const { x, y } = xys;\n      return [Base.rounding(x + this.getOffsetX()), Base.rounding(y + this.getOffsetY())];\n    }, ...path.points);\n    return this;\n  }\n\n  fillRect(x, y, w, h) {\n    x += this.getOffsetX();\n    y += this.getOffsetY();\n    this.ctx.fillRect(XDraw.rounding(x), XDraw.rounding(y),\n      XDraw.rounding(w), XDraw.rounding(h));\n    return this;\n  }\n\n  rect(x, y, w, h) {\n    x += this.getOffsetX();\n    y += this.getOffsetY();\n    this.ctx.rect(XDraw.rounding(x), XDraw.rounding(y),\n      XDraw.rounding(w), XDraw.rounding(h));\n    return this;\n  }\n\n  copyImage(sx, sy, sw, sh, tx, ty, tw, th) {\n    const { ctx } = this;\n    tx += this.getOffsetX();\n    sx += this.getOffsetX();\n    ty += this.getOffsetY();\n    sy += this.getOffsetY();\n    ctx.drawImage(this.canvas,\n      XDraw.rounding(sx), XDraw.rounding(sy),\n      XDraw.rounding(sw), XDraw.rounding(sh),\n      XDraw.rounding(tx), XDraw.rounding(ty),\n      XDraw.rounding(tw), XDraw.rounding(th));\n    return this;\n  }\n\n  drawImage(el, sx, sy, sw, sh, tx, ty, tw, th) {\n    const { ctx } = this;\n    tx += this.getOffsetX();\n    ty += this.getOffsetY();\n    ctx.drawImage(el,\n      XDraw.rounding(sx), XDraw.rounding(sy),\n      XDraw.rounding(sw), XDraw.rounding(sh),\n      XDraw.rounding(tx), XDraw.rounding(ty),\n      XDraw.rounding(tw), XDraw.rounding(th));\n    return this;\n  }\n\n}\n\nexport {\n  XDraw,\n};\n","import { PlainUtils } from '../utils/PlainUtils';\r\nimport { XDraw } from './XDraw';\r\n\r\nconst LINE_TYPE = {\r\n  SOLID_LINE: 0,\r\n  DOTTED_LINE: 1,\r\n  POINT_LINE: 2,\r\n  DOUBLE_LINE: 3,\r\n};\r\n\r\nclass SolidLine {\r\n\r\n  constructor(draw, attr) {\r\n    this.draw = draw;\r\n    PlainUtils.copy(this, {\r\n      color: '#000000',\r\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\r\n    }, attr);\r\n  }\r\n\r\n  setWidthType(widthType) {\r\n    this.widthType = widthType;\r\n  }\r\n\r\n  setColor(color) {\r\n    this.color = color;\r\n  }\r\n\r\n  horizonLine(sx, sy, ex, ey) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    draw.horizonLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  verticalLine(sx, sy, ex, ey) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    draw.verticalLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  tiltingLine(sx, sy, ex, ey) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    draw.corsLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n}\r\n\r\nclass DottedLine {\r\n\r\n  constructor(draw, attr) {\r\n    this.draw = draw;\r\n    PlainUtils.copy(this, {\r\n      color: '#000000',\r\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\r\n      dash: [5],\r\n    }, attr);\r\n  }\r\n\r\n  setWidthType(widthType) {\r\n    this.widthType = widthType;\r\n  }\r\n\r\n  setColor(color) {\r\n    this.color = color;\r\n  }\r\n\r\n  horizonLine(sx, sy, ex, ey) {\r\n    const { draw, dash } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash(dash);\r\n    draw.horizonLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  verticalLine(sx, sy, ex, ey) {\r\n    const { draw, dash } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash(dash);\r\n    draw.verticalLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  tiltingLine(sx, sy, ex, ey) {\r\n    const { draw, dash } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash(dash);\r\n    draw.corsLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n}\r\n\r\nclass DoubleLine {\r\n\r\n  constructor(draw, attr) {\r\n    this.draw = draw;\r\n    PlainUtils.copy(this, {\r\n      color: '#000000',\r\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\r\n      padding: 1,\r\n      spacing: DoubleLine.spacing,\r\n      leftShow: () => false,\r\n      topShow: () => false,\r\n      rightShow: () => false,\r\n      bottomShow: () => false,\r\n      iFMerge: () => false,\r\n      iFMergeFirstRow: () => false,\r\n      iFMergeLastRow: () => false,\r\n      iFMergeFirstCol: () => false,\r\n      iFMergeLastCol: () => false,\r\n    }, attr);\r\n  }\r\n\r\n  setWidthType(widthType) {\r\n    this.widthType = widthType;\r\n  }\r\n\r\n  setColor(color) {\r\n    this.color = color;\r\n  }\r\n\r\n  handleExternal(sx, sy, ex, ey, row, col, pos) {\r\n    const external = {};\r\n    const { leftShow, topShow, rightShow, bottomShow } = this;\r\n    const { iFMerge, iFMergeFirstRow, iFMergeLastRow, iFMergeFirstCol, iFMergeLastCol } = this;\r\n    const { spacing } = this;\r\n    let ifMerge = null;\r\n    let firstRow = null;\r\n    let lastRow = null;\r\n    let firstCol = null;\r\n    let lastCol = null;\r\n    switch (pos) {\r\n      case 'left':\r\n        ifMerge = iFMerge(row, col - 1);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row, col - 1);\r\n          lastRow = iFMergeLastRow(row, col - 1);\r\n          firstCol = iFMergeFirstCol(row, col - 1);\r\n          lastCol = iFMergeLastCol(row, col - 1);\r\n        }\r\n        break;\r\n      case 'top':\r\n        ifMerge = iFMerge(row - 1, col);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row - 1, col);\r\n          lastRow = iFMergeLastRow(row - 1, col);\r\n          firstCol = iFMergeFirstCol(row - 1, col);\r\n          lastCol = iFMergeLastCol(row - 1, col);\r\n        }\r\n        break;\r\n      case 'right':\r\n        ifMerge = iFMerge(row, col + 1);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row, col + 1);\r\n          lastRow = iFMergeLastRow(row, col + 1);\r\n          firstCol = iFMergeFirstCol(row, col + 1);\r\n          lastCol = iFMergeLastCol(row, col + 1);\r\n        }\r\n        break;\r\n      case 'bottom':\r\n        ifMerge = iFMerge(row + 1, col);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row + 1, col);\r\n          lastRow = iFMergeLastRow(row + 1, col);\r\n          firstCol = iFMergeFirstCol(row + 1, col);\r\n          lastCol = iFMergeLastCol(row + 1, col);\r\n        }\r\n        break;\r\n      default: break;\r\n    }\r\n    if (ifMerge) {\r\n      switch (pos) {\r\n        case 'left': {\r\n          external.sx = sx - spacing;\r\n          external.ex = ex - spacing;\r\n          // 检查顶边和上底边及左上角底边及左顶边\r\n          const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          external.sy = sy;\r\n          if (sTop || sBottom) external.sy = sy - spacing;\r\n          if (sTopLeftCorner && firstRow) external.sy = sy + spacing;\r\n          // 检查底边和下顶边及左下角顶边和左底边\r\n          const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          external.ey = ey;\r\n          if (eBottom || eTop) external.ey = ey + spacing;\r\n          if (eBottomLeftCorner && lastRow) external.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'top': {\r\n          external.sy = sy - spacing;\r\n          external.ey = ey - spacing;\r\n          // 检查左边和左右边及左上角右边及上左边\r\n          const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          external.sx = sx;\r\n          if (sLeft || sRight) external.sx = sx - spacing;\r\n          if (sTopLeftCorner && firstCol) external.sx = sx + spacing;\r\n          // 检查右边和右左边及右上角左边及上右边\r\n          const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          external.ex = ex;\r\n          if (eRight || eLeft) external.ex = ex + spacing;\r\n          if (eTopRightCorner && lastCol) external.ex = ex - spacing;\r\n          break;\r\n        }\r\n        case 'right': {\r\n          external.sx = sx + spacing;\r\n          external.ex = ex + spacing;\r\n          // 检查顶边和上底边及右上角底边及右顶边\r\n          const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          external.sy = sy;\r\n          if (sTop || sBottom) external.sy = sy - spacing;\r\n          if (sTopRightCorner && firstRow) external.sy = sy + spacing;\r\n          // 检查底边和下顶边及右下角顶边及右底边\r\n          const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          external.ey = ey;\r\n          if (eBottom || eTop) external.ey = ey + spacing;\r\n          if (eBottomRightCorner && lastRow) external.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'bottom': {\r\n          external.sy = sy + spacing;\r\n          external.ey = ey + spacing;\r\n          // 检查左边和左右边及左下角右边及下左边\r\n          const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          external.sx = sx;\r\n          if (sLeft || sRight) external.sx = sx - spacing;\r\n          if (sBottomLeftCorner && firstCol) external.sx = sx + spacing;\r\n          // 检查右边和右左边及右下角左边及下右边\r\n          const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          external.ex = ex;\r\n          if (eRight || eLeft) external.ex = ex + spacing;\r\n          if (eBottomRightCorner && lastCol) external.ex = ex - spacing;\r\n          break;\r\n        }\r\n        default: break;\r\n      }\r\n      return external;\r\n    }\r\n    switch (pos) {\r\n      case 'left': {\r\n        external.sx = sx - spacing;\r\n        external.ex = ex - spacing;\r\n        // 检查顶边和上底边及左上角底边及左顶边\r\n        const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        external.sy = sy;\r\n        if (sTop || sBottom) external.sy = sy - spacing;\r\n        if (sTopLeftCorner) external.sy = sy + spacing;\r\n        // 检查底边和下顶边及左下角顶边和左底边\r\n        const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        external.ey = ey;\r\n        if (eBottom || eTop) external.ey = ey + spacing;\r\n        if (eBottomLeftCorner) external.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'top': {\r\n        external.sy = sy - spacing;\r\n        external.ey = ey - spacing;\r\n        // 检查左边和左右边及左上角右边及上左边\r\n        const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        external.sx = sx;\r\n        if (sLeft || sRight) external.sx = sx - spacing;\r\n        if (sTopLeftCorner) external.sx = sx + spacing;\r\n        // 检查右边和右左边及右上角左边及上右边\r\n        const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        external.ex = ex;\r\n        if (eRight || eLeft) external.ex = ex + spacing;\r\n        if (eTopRightCorner) external.ex = ex - spacing;\r\n        break;\r\n      }\r\n      case 'right': {\r\n        external.sx = sx + spacing;\r\n        external.ex = ex + spacing;\r\n        // 检查顶边和上底边及右上角底边及右顶边\r\n        const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        external.sy = sy;\r\n        if (sTop || sBottom) external.sy = sy - spacing;\r\n        if (sTopRightCorner) external.sy = sy + spacing;\r\n        // 检查底边和下顶边及右下角顶边及右底边\r\n        const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        external.ey = ey;\r\n        if (eBottom || eTop) external.ey = ey + spacing;\r\n        if (eBottomRightCorner) external.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'bottom': {\r\n        external.sy = sy + spacing;\r\n        external.ey = ey + spacing;\r\n        // 检查左边和左右边及左下角右边及下左边\r\n        const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        external.sx = sx;\r\n        if (sLeft || sRight) external.sx = sx - spacing;\r\n        if (sBottomLeftCorner) external.sx = sx + spacing;\r\n        // 检查右边和右左边及右下角左边及下右边\r\n        const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        external.ex = ex;\r\n        if (eRight || eLeft) external.ex = ex + spacing;\r\n        if (eBottomRightCorner) external.ex = ex - spacing;\r\n        break;\r\n      }\r\n      default: break;\r\n    }\r\n    return external;\r\n  }\r\n\r\n  handleInternal(sx, sy, ex, ey, row, col, pos) {\r\n    const internal = {};\r\n    const { leftShow, topShow, rightShow, bottomShow } = this;\r\n    const { iFMerge, iFMergeFirstRow, iFMergeLastRow, iFMergeFirstCol, iFMergeLastCol } = this;\r\n    const { spacing } = this;\r\n    const ifMerge = iFMerge(row, col);\r\n    // merge\r\n    if (ifMerge) {\r\n      const firstRow = iFMergeFirstRow(row, col);\r\n      const lastRow = iFMergeLastRow(row, col);\r\n      const firstCol = iFMergeFirstCol(row, col);\r\n      const lastCol = iFMergeLastCol(row, col);\r\n      switch (pos) {\r\n        case 'left': {\r\n          internal.sx = sx + spacing;\r\n          internal.ex = ex + spacing;\r\n          // 检查顶边和上底边及左上角底边及左顶边\r\n          const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          internal.sy = sy;\r\n          if (sTopLeftCorner) internal.sy = sy - spacing;\r\n          if ((sTop || sBottom) && firstRow) internal.sy = sy + spacing;\r\n          // 检查底边和下顶边及左下角顶边和左底边\r\n          const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          internal.ey = ey;\r\n          if (eBottomLeftCorner) internal.ey = ey + spacing;\r\n          if ((eBottom || eTop) && lastRow) internal.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'top': {\r\n          internal.sy = sy + spacing;\r\n          internal.ey = ey + spacing;\r\n          // 检查左边和左右边及左上角右边及上左边\r\n          const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          internal.sx = sx;\r\n          if (sTopLeftCorner) internal.sx = sx - spacing;\r\n          if ((sLeft || sRight) && firstCol) internal.sx = sx + spacing;\r\n          // 检查右边和右左边及右上角左边及上右边\r\n          const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          internal.ex = ex;\r\n          if (eTopRightCorner) internal.ex = ex + spacing;\r\n          if ((eRight || eLeft) && lastCol) internal.ex = ex - spacing;\r\n          break;\r\n        }\r\n        case 'right': {\r\n          internal.sx = sx - spacing;\r\n          internal.ex = ex - spacing;\r\n          // 检查顶边和上底边及右上角底边及右上边\r\n          const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          internal.sy = sy;\r\n          if (sTopRightCorner) internal.sy = sy - spacing;\r\n          if ((sTop || sBottom) && firstRow) internal.sy = sy + spacing;\r\n          // 检查底边和下顶边右下角顶边及右下边\r\n          const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          internal.ey = ey;\r\n          if (eBottomRightCorner) internal.ey = ey + spacing;\r\n          if ((eBottom || eTop) && lastRow) internal.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'bottom': {\r\n          internal.sy = sy - spacing;\r\n          internal.ey = ey - spacing;\r\n          // 检查左边和左右边及左下角右边及下左边\r\n          const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          internal.sx = sx;\r\n          if (sBottomLeftCorner) internal.sx = sx - spacing;\r\n          if ((sLeft || sRight) && firstCol) internal.sx = sx + spacing;\r\n          // 检查右边和右左边及右下角左边及下右边\r\n          const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          internal.ex = ex;\r\n          if (eBottomRightCorner) internal.ex = ex + spacing;\r\n          if ((eRight || eLeft) && lastCol) internal.ex = ex - spacing;\r\n          break;\r\n        }\r\n        default: break;\r\n      }\r\n      return internal;\r\n    }\r\n    switch (pos) {\r\n      case 'left': {\r\n        internal.sx = sx + spacing;\r\n        internal.ex = ex + spacing;\r\n        // 检查顶边和上底边及左上角底边及左顶边\r\n        const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        internal.sy = sy;\r\n        if (sTopLeftCorner) internal.sy = sy - spacing;\r\n        if (sTop || sBottom) internal.sy = sy + spacing;\r\n        // 检查底边和下顶边及左下角顶边和左底边\r\n        const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        internal.ey = ey;\r\n        if (eBottomLeftCorner) internal.ey = ey + spacing;\r\n        if (eBottom || eTop) internal.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'top': {\r\n        internal.sy = sy + spacing;\r\n        internal.ey = ey + spacing;\r\n        // 检查左边和左右边及左上角右边及上左边\r\n        const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        internal.sx = sx;\r\n        if (sTopLeftCorner) internal.sx = sx - spacing;\r\n        if (sLeft || sRight) internal.sx = sx + spacing;\r\n        // 检查右边和右左边及右上角左边及上右边\r\n        const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        internal.ex = ex;\r\n        if (eTopRightCorner) internal.ex = ex + spacing;\r\n        if (eRight || eLeft) internal.ex = ex - spacing;\r\n        break;\r\n      }\r\n      case 'right': {\r\n        internal.sx = sx - spacing;\r\n        internal.ex = ex - spacing;\r\n        // 检查顶边和上底边及右上角底边及右上边\r\n        const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        internal.sy = sy;\r\n        if (sTopRightCorner) internal.sy = sy - spacing;\r\n        if (sTop || sBottom) internal.sy = sy + spacing;\r\n        // 检查底边和下顶边右下角顶边及右下边\r\n        const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        internal.ey = ey;\r\n        if (eBottomRightCorner) internal.ey = ey + spacing;\r\n        if (eBottom || eTop) internal.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'bottom': {\r\n        internal.sy = sy - spacing;\r\n        internal.ey = ey - spacing;\r\n        // 检查左边和左右边及左下角右边及下左边\r\n        const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        internal.sx = sx;\r\n        if (sBottomLeftCorner) internal.sx = sx - spacing;\r\n        if (sLeft || sRight) internal.sx = sx + spacing;\r\n        // 检查右边和右左边及右下角左边及下右边\r\n        const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        internal.ex = ex;\r\n        if (eBottomRightCorner) internal.ex = ex + spacing;\r\n        if (eRight || eLeft) internal.ex = ex - spacing;\r\n        break;\r\n      }\r\n      default: break;\r\n    }\r\n    return internal;\r\n  }\r\n\r\n  horizonLine(sx, sy, ex, ey, row, col, pos) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    const external = this.handleExternal(sx, sy, ex, ey, row, col, pos);\r\n    const internal = this.handleInternal(sx, sy, ex, ey, row, col, pos);\r\n    if (!PlainUtils.isEmptyObject(internal)) {\r\n      draw.horizonLine([internal.sx, internal.sy], [internal.ex, internal.ey]);\r\n    }\r\n    if (!PlainUtils.isEmptyObject(external)) {\r\n      draw.horizonLine([external.sx, external.sy], [external.ex, external.ey]);\r\n    }\r\n  }\r\n\r\n  verticalLine(sx, sy, ex, ey, row, col, pos) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    const external = this.handleExternal(sx, sy, ex, ey, row, col, pos);\r\n    const internal = this.handleInternal(sx, sy, ex, ey, row, col, pos);\r\n    if (!PlainUtils.isEmptyObject(internal)) {\r\n      draw.verticalLine([internal.sx, internal.sy], [internal.ex, internal.ey]);\r\n    }\r\n    if (!PlainUtils.isEmptyObject(external)) {\r\n      draw.verticalLine([external.sx, external.sy], [external.ex, external.ey]);\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  tiltingLine(sx, sy, ex, ey, row, col, pos) {\r\n    // TODO ..\r\n    // ...\r\n  }\r\n\r\n}\r\nDoubleLine.spacing = XDraw.dpr() >= 2 ? 3 : 2;\r\n\r\nclass Line {\r\n\r\n  constructor(draw, attr = {}) {\r\n    this.widthType = XDraw.LINE_WIDTH_TYPE.low;\r\n    this.type = LINE_TYPE.SOLID_LINE;\r\n    this.solidLine = new SolidLine(draw, PlainUtils.copy({}, attr));\r\n    this.dottedLine = new DottedLine(draw, PlainUtils.copy({\r\n      dash: [5],\r\n    }, attr));\r\n    this.pointLine = new DottedLine(draw, PlainUtils.copy({\r\n      dash: [2, 2],\r\n    }, attr));\r\n    this.doubleLine = new DoubleLine(draw, PlainUtils.copy({}, attr));\r\n  }\r\n\r\n  setWidthType(widthType) {\r\n    if (widthType) {\r\n      if (this.type === LINE_TYPE.SOLID_LINE) {\r\n        this.solidLine.setWidthType(widthType);\r\n      }\r\n    }\r\n  }\r\n\r\n  setColor(color) {\r\n    if (color) {\r\n      this.solidLine.setColor(color);\r\n      this.dottedLine.setColor(color);\r\n      this.pointLine.setColor(color);\r\n      this.doubleLine.setColor(color);\r\n    }\r\n  }\r\n\r\n  setType(type) {\r\n    this.type = type;\r\n  }\r\n\r\n  horizonLine(sx, sy, ex, ey, row, col, pos) {\r\n    const {\r\n      type,\r\n      solidLine,\r\n      dottedLine,\r\n      pointLine,\r\n      doubleLine,\r\n    } = this;\r\n    switch (type) {\r\n      case LINE_TYPE.SOLID_LINE:\r\n        solidLine.horizonLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOTTED_LINE:\r\n        dottedLine.horizonLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.POINT_LINE:\r\n        pointLine.horizonLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOUBLE_LINE:\r\n        doubleLine.horizonLine(sx, sy, ex, ey, row, col, pos);\r\n        break;\r\n    }\r\n  }\r\n\r\n  verticalLine(sx, sy, ex, ey, row, col, pos) {\r\n    const {\r\n      type,\r\n      solidLine,\r\n      dottedLine,\r\n      pointLine,\r\n      doubleLine,\r\n    } = this;\r\n    switch (type) {\r\n      case LINE_TYPE.SOLID_LINE:\r\n        solidLine.verticalLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOTTED_LINE:\r\n        dottedLine.verticalLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.POINT_LINE:\r\n        pointLine.verticalLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOUBLE_LINE:\r\n        doubleLine.verticalLine(sx, sy, ex, ey, row, col, pos);\r\n        break;\r\n    }\r\n  }\r\n\r\n  tiltingLine(sx, sy, ex, ey, row, col, pos) {\r\n    const {\r\n      type,\r\n      solidLine,\r\n      dottedLine,\r\n      pointLine,\r\n      doubleLine,\r\n    } = this;\r\n    switch (type) {\r\n      case LINE_TYPE.SOLID_LINE:\r\n        solidLine.tiltingLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOTTED_LINE:\r\n        dottedLine.tiltingLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.POINT_LINE:\r\n        pointLine.tiltingLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOUBLE_LINE:\r\n        doubleLine.tiltingLine(sx, sy, ex, ey, row, col, pos);\r\n        break;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Line, LINE_TYPE, SolidLine,\r\n};\r\n","import { ELContextMenu } from '../../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../../utils/PlainUtils';\r\nimport { BorderTypeContextMenuItem } from './BorderTypeContextMenuItem';\r\nimport { ELContextMenuDivider } from '../../../../../../component/contextmenu/ELContextMenuDivider';\r\nimport { h } from '../../../../../../libs/Element';\r\nimport { BorderIcon1 } from '../../icon/border/BorderIcon1';\r\nimport { BorderIcon2 } from '../../icon/border/BorderIcon2';\r\nimport { BorderIcon3 } from '../../icon/border/BorderIcon3';\r\nimport { BorderIcon4 } from '../../icon/border/BorderIcon4';\r\nimport { BorderIcon5 } from '../../icon/border/BorderIcon5';\r\nimport { BorderIcon6 } from '../../icon/border/BorderIcon6';\r\nimport { BorderIcon7 } from '../../icon/border/BorderIcon7';\r\nimport { BorderIcon8 } from '../../icon/border/BorderIcon8';\r\nimport { BorderIcon9 } from '../../icon/border/BorderIcon9';\r\nimport { BorderIcon10 } from '../../icon/border/BorderIcon10';\r\nimport { BorderColor } from '../../icon/border/BorderColor';\r\nimport { BorderType } from '../../icon/border/BorderType';\r\nimport { XEvent } from '../../../../../../libs/XEvent';\r\nimport { BorderColorContextMenu } from '../bordercolor/BorderColorContextMenu';\r\nimport { LineTypeContextMenu } from '../linetype/LineTypeContextMenu';\r\nimport { LINE_TYPE } from '../../../../../../canvas/Line';\r\nimport { ElPopUp } from '../../../../../../component/elpopup/ElPopUp';\r\n\r\nclass BorderTypeContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-border-type-context-menu`, PlainUtils.copy({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.type = LINE_TYPE.SOLID_LINE;\r\n    this.color = '#000000';\r\n    // 边框样式\r\n    this.borderIcon1 = new BorderIcon1();\r\n    this.borderIcon2 = new BorderIcon2();\r\n    this.borderIcon3 = new BorderIcon3();\r\n    this.borderIcon4 = new BorderIcon4();\r\n    this.borderIcon5 = new BorderIcon5();\r\n    const div1 = h('div', `${cssPrefix}-border-type-context-menu-type-icon-line`);\r\n    div1.children(this.borderIcon1);\r\n    div1.children(this.borderIcon2);\r\n    div1.children(this.borderIcon3);\r\n    div1.children(this.borderIcon4);\r\n    div1.children(this.borderIcon5);\r\n    this.borderIcon6 = new BorderIcon6();\r\n    this.borderIcon7 = new BorderIcon7();\r\n    this.borderIcon8 = new BorderIcon8();\r\n    this.borderIcon9 = new BorderIcon9();\r\n    this.borderIcon10 = new BorderIcon10();\r\n    const div2 = h('div', `${cssPrefix}-border-type-context-menu-type-icon-line`);\r\n    div2.children(this.borderIcon6);\r\n    div2.children(this.borderIcon7);\r\n    div2.children(this.borderIcon8);\r\n    div2.children(this.borderIcon9);\r\n    div2.children(this.borderIcon10);\r\n    this.borderIcons = new BorderTypeContextMenuItem();\r\n    this.borderIcons.removeClass('hover');\r\n    this.borderIcons.children(div1);\r\n    this.borderIcons.children(div2);\r\n    // 子菜单\r\n    this.borderColor = new BorderColor();\r\n    this.borderType = new BorderType();\r\n    const div3 = h('div', `${cssPrefix}-border-type-context-menu-type-icon-line`);\r\n    div3.children(this.borderColor);\r\n    div3.children(this.borderType);\r\n    this.borderColorAndType = new BorderTypeContextMenuItem();\r\n    this.borderColorAndType.removeClass('hover');\r\n    this.borderColorAndType.children(div3);\r\n    // 追加子菜单\r\n    this.addItem(this.borderIcons);\r\n    this.addItem(new ELContextMenuDivider());\r\n    this.addItem(this.borderColorAndType);\r\n    // 边框颜色菜单\r\n    this.borderColorContextMenu = new BorderColorContextMenu(PlainUtils.copy({\r\n      el: this.borderColor,\r\n    }, {\r\n      onUpdate: (color) => {\r\n        this.color = color;\r\n        this.borderColor.setColor(color);\r\n      },\r\n    }));\r\n    // 边框类型\r\n    this.lineTypeContextMenu = new LineTypeContextMenu(PlainUtils.copy({\r\n      el: this.borderType,\r\n    }, {\r\n      onUpdate: (type) => {\r\n        this.type = type;\r\n      },\r\n    }));\r\n    // 添加事件\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.borderColor, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderType, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon4, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon5, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon6, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon7, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon8, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon9, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon10, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.borderColor, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { borderColorContextMenu } = this;\r\n      const { elPopUp } = borderColorContextMenu;\r\n      ElPopUp.closeAll([elPopUp, this.elPopUp]);\r\n      if (borderColorContextMenu.isClose()) {\r\n        borderColorContextMenu.open();\r\n      } else {\r\n        borderColorContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderType, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { lineTypeContextMenu } = this;\r\n      const { elPopUp } = lineTypeContextMenu;\r\n      ElPopUp.closeAll([elPopUp, this.elPopUp]);\r\n      if (lineTypeContextMenu.isClose()) {\r\n        lineTypeContextMenu.open();\r\n      } else {\r\n        lineTypeContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border1', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border2', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border3', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon4, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border4', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon5, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border5', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon6, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border6', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon7, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border7', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon8, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border8', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon9, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border9', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon10, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border10', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { BorderTypeContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { BorderTypeContextMenu } from './contextmenu/border/bordertype/BorderTypeContextMenu';\r\n\r\nclass Border extends DropDownItem {\r\n\r\n  constructor(options = {\r\n    contextMenu: {},\r\n  }) {\r\n    super(`${cssPrefix}-tools-border`);\r\n    this.options = options;\r\n    this.icon = new Icon('border');\r\n    this.setIcon(this.icon);\r\n    this.borderTypeContextMenu = new BorderTypeContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport { Border };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass Merge extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-merge`);\r\n    this.icon = new Icon('merge');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { Merge };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass HorizontalIcon1 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-horizontal1`);\r\n    this.icon = new Icon('align-left');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { HorizontalIcon1 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass HorizontalIcon2 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-horizontal2`);\r\n    this.icon = new Icon('align-center');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { HorizontalIcon2 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass HorizontalIcon3 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-horizontal3`);\r\n    this.icon = new Icon('align-right');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { HorizontalIcon3 };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\n\r\nclass HorizontalContextMenuItem extends ELContextMenuItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-horizontal-type-context-menu-item`);\r\n  }\r\n}\r\n\r\nexport { HorizontalContextMenuItem };\r\n","class BaseFont {\r\n\r\n  constructor({\r\n    draw, ruler, attr,\r\n  }) {\r\n    this.draw = draw;\r\n    this.ruler = ruler;\r\n    this.attr = attr;\r\n  }\r\n\r\n  setRuler(ruler) {\r\n    this.ruler = ruler;\r\n  }\r\n\r\n  getAlignPadding() {\r\n    if (this.attr.align === BaseFont.ALIGN.center) {\r\n      return 0;\r\n    }\r\n    return this.attr.padding;\r\n  }\r\n\r\n  isBlank(text) {\r\n    return text === null || text === undefined || text.toString().trim() === '';\r\n  }\r\n\r\n  hasBreak(text) {\r\n    return text.indexOf('\\n') > -1;\r\n  }\r\n\r\n  getVerticalAlignPadding() {\r\n    if (this.attr.verticalAlign === BaseFont.VERTICAL_ALIGN.center) {\r\n      return 0;\r\n    }\r\n    return this.attr.padding;\r\n  }\r\n\r\n}\r\nBaseFont.VERTICAL_ALIGN = {\r\n  top: 'top',\r\n  center: 'middle',\r\n  bottom: 'bottom',\r\n};\r\nBaseFont.ALIGN = {\r\n  left: 'left',\r\n  center: 'center',\r\n  right: 'right',\r\n};\r\nBaseFont.TEXT_WRAP = {\r\n  OVER_FLOW: 1,\r\n  WORD_WRAP: 2,\r\n  TRUNCATE: 3,\r\n};\r\nBaseFont.TEXT_DIRECTION = {\r\n  HORIZONTAL: 'horizontal',\r\n  VERTICAL: 'vertical',\r\n  ANGLE: 'angle',\r\n  ANGLE_BAR: 'bar',\r\n};\r\nexport {\r\n  BaseFont,\r\n};\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { h } from '../../../../../libs/Element';\r\nimport { HorizontalIcon1 } from '../icon/horizontal/HorizontalIcon1';\r\nimport { HorizontalIcon2 } from '../icon/horizontal/HorizontalIcon2';\r\nimport { HorizontalIcon3 } from '../icon/horizontal/HorizontalIcon3';\r\nimport { HorizontalContextMenuItem } from './HorizontalContextMenuItem';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass HorizontalContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-horizontal-type-context-menu`, PlainUtils.copy({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.horizontalIcon1 = new HorizontalIcon1();\r\n    this.horizontalIcon2 = new HorizontalIcon2();\r\n    this.horizontalIcon3 = new HorizontalIcon3();\r\n    const div2 = h('div', `${cssPrefix}-horizontal-type-context-menu-type-icon-line`);\r\n    div2.children(this.horizontalIcon1);\r\n    div2.children(this.horizontalIcon2);\r\n    div2.children(this.horizontalIcon3);\r\n    this.horizontalIcons = new HorizontalContextMenuItem();\r\n    this.horizontalIcons.removeClass('hover');\r\n    this.horizontalIcons.children(div2);\r\n    this.addItem(this.horizontalIcons);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.horizontalIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.horizontalIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.horizontalIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.horizontalIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.ALIGN.left);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.horizontalIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.ALIGN.center);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.horizontalIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.ALIGN.right);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { HorizontalContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { HorizontalContextMenu } from './contextmenu/horizontal/HorizontalContextMenu';\r\n\r\nclass HorizontalAlign extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-horizontal-align`);\r\n    this.options = options;\r\n    this.icon = new Icon('align-left');\r\n    this.setIcon(this.icon);\r\n    this.horizontalContextMenu = new HorizontalContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.horizontalContextMenu.destroy();\r\n  }\r\n\r\n}\r\nexport { HorizontalAlign };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\n\r\nclass VerticalContextMenuItem extends ELContextMenuItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-vertical-type-context-menu-item`);\r\n  }\r\n}\r\n\r\nexport { VerticalContextMenuItem };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass VerticalIcon1 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-verticalIcon1`);\r\n    this.icon = new Icon('align-top');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { VerticalIcon1 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass VerticalIcon2 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-verticalIcon2`);\r\n    this.icon = new Icon('align-middle');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { VerticalIcon2 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass VerticalIcon3 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-verticalIcon3`);\r\n    this.icon = new Icon('align-bottom');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { VerticalIcon3 };\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { h } from '../../../../../libs/Element';\r\nimport { VerticalContextMenuItem } from './VerticalContextMenuItem';\r\nimport { VerticalIcon1 } from '../icon/vertical/VerticalIcon1';\r\nimport { VerticalIcon2 } from '../icon/vertical/VerticalIcon2';\r\nimport { VerticalIcon3 } from '../icon/vertical/VerticalIcon3';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass VerticalContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-vertical-type-context-menu`, PlainUtils.copy({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.verticalIcon1 = new VerticalIcon1();\r\n    this.verticalIcon2 = new VerticalIcon2();\r\n    this.verticalIcon3 = new VerticalIcon3();\r\n    const div2 = h('div', `${cssPrefix}-vertical-type-context-menu-type-icon-line`);\r\n    div2.children(this.verticalIcon1);\r\n    div2.children(this.verticalIcon2);\r\n    div2.children(this.verticalIcon3);\r\n    this.verticalIcons = new VerticalContextMenuItem();\r\n    this.verticalIcons.removeClass('hover');\r\n    this.verticalIcons.children(div2);\r\n    this.addItem(this.verticalIcons);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.verticalIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.verticalIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.verticalIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.verticalIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.VERTICAL_ALIGN.top);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.verticalIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.VERTICAL_ALIGN.center);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.verticalIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.VERTICAL_ALIGN.bottom);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { VerticalContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { VerticalContextMenu } from './contextmenu/vertical/VerticalContextMenu';\r\n\r\nclass VerticalAlign extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-vertical-align`);\r\n    this.options = options;\r\n    this.icon = new Icon('align-middle');\r\n    this.setIcon(this.icon);\r\n    this.verticalContextMenu = new VerticalContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.verticalContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { VerticalAlign };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass TextWrappingIcon1 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-text-wrapping1`);\r\n    this.icon = new Icon('truncate');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { TextWrappingIcon1 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass TextWrappingIcon2 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-text-wrapping2`);\r\n    this.icon = new Icon('overflow');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { TextWrappingIcon2 };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass TextWrappingIcon3 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-text-wrapping3`);\r\n    this.icon = new Icon('wrap');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { TextWrappingIcon3 };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\n\r\nclass TextWrappingContextMenuItem extends ELContextMenuItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-text-wrapping-context-menu-item`);\r\n  }\r\n}\r\n\r\nexport { TextWrappingContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { TextWrappingIcon1 } from '../icon/textwrapping/TextWrappingIcon1';\r\nimport { TextWrappingIcon2 } from '../icon/textwrapping/TextWrappingIcon2';\r\nimport { TextWrappingIcon3 } from '../icon/textwrapping/TextWrappingIcon3';\r\nimport { h } from '../../../../../libs/Element';\r\nimport { TextWrappingContextMenuItem } from './TextWrappingContextMenuItem';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass TextWrappingContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-text-wrapping-context-menu`, PlainUtils.copy({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.textWrappingIcon1 = new TextWrappingIcon1();\r\n    this.textWrappingIcon2 = new TextWrappingIcon2();\r\n    this.textWrappingIcon3 = new TextWrappingIcon3();\r\n    const div2 = h('div', `${cssPrefix}-text-wrapping-context-menu-type-icon-line`);\r\n    div2.children(this.textWrappingIcon1);\r\n    div2.children(this.textWrappingIcon2);\r\n    div2.children(this.textWrappingIcon3);\r\n    this.textWrappingIcons = new TextWrappingContextMenuItem();\r\n    this.textWrappingIcons.removeClass('hover');\r\n    this.textWrappingIcons.children(div2);\r\n    this.addItem(this.textWrappingIcons);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.textWrappingIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.textWrappingIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.textWrappingIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.textWrappingIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.TEXT_WRAP.TRUNCATE);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.textWrappingIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.TEXT_WRAP.OVER_FLOW);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.textWrappingIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.TEXT_WRAP.WORD_WRAP);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { TextWrappingContextMenu };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { DropDownItem } from './base/DropDownItem';\r\nimport { TextWrappingContextMenu } from './contextmenu/textwrapping/TextWrappingContextMenu';\r\n\r\nclass TextWrapping extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-text-wrapping`);\r\n    this.options = options;\r\n    this.icon = new Icon('text-wrap');\r\n    this.setIcon(this.icon);\r\n    this.textWrappingContextMenu = new TextWrappingContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.textWrappingContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { TextWrapping };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../libs/Element';\r\n\r\nconst pool = [];\r\n\r\nclass FixedContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(title) {\r\n    super(`${cssPrefix}-fixed-context-menu-item`);\r\n    this.title = title;\r\n    this.titleElement = h('div', `${cssPrefix}-fixed-context-menu-item-title`);\r\n    this.titleElement.text(title);\r\n    this.children(this.titleElement);\r\n    pool.push(this);\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title;\r\n    this.titleElement.text(title);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FixedContextMenuItem,\r\n};\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { Constant, cssPrefix } from '../../../../../const/Constant';\r\nimport { ELContextMenuDivider } from '../../../../../component/contextmenu/ELContextMenuDivider';\r\nimport { FixedContextMenuItem } from './FixedContextMenuItem';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass FixedContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-fixed-context-menu`, PlainUtils.copy({\r\n      onUpdate: () => {\r\n      },\r\n    }, options));\r\n    this.row = new FixedContextMenuItem('冻结至当前行');\r\n    this.row1 = new FixedContextMenuItem('冻结1行');\r\n    this.row2 = new FixedContextMenuItem('冻结2行');\r\n    this.col = new FixedContextMenuItem('冻结至当前列');\r\n    this.col1 = new FixedContextMenuItem('冻结1列');\r\n    this.col2 = new FixedContextMenuItem('冻结2列');\r\n    this.addItem(this.row);\r\n    this.addItem(this.row1);\r\n    this.addItem(this.row2);\r\n    this.addItem(new ELContextMenuDivider());\r\n    this.addItem(this.col);\r\n    this.addItem(this.col1);\r\n    this.addItem(this.col2);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.row, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.row1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.row2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.col, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.col1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.col2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.row, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { options } = this;\r\n      options.onUpdate('ROW');\r\n      this.close();\r\n    });\r\n    XEvent.bind(this.row1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { options } = this;\r\n      options.onUpdate('ROW1');\r\n      this.close();\r\n    });\r\n    XEvent.bind(this.row2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { options } = this;\r\n      options.onUpdate('ROW2');\r\n      this.close();\r\n    });\r\n    XEvent.bind(this.col, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { options } = this;\r\n      options.onUpdate('COL');\r\n      this.close();\r\n    });\r\n    XEvent.bind(this.col1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { options } = this;\r\n      options.onUpdate('COL1');\r\n      this.close();\r\n    });\r\n    XEvent.bind(this.col2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { options } = this;\r\n      options.onUpdate('COL2');\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FixedContextMenu,\r\n};\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { DropDownItem } from './base/DropDownItem';\r\nimport { FixedContextMenu } from './contextmenu/fixed/FixedContextMenu';\r\n\r\nclass Fixed extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-fixed`);\r\n    this.options = options;\r\n    this.icon = new Icon('freeze');\r\n    this.rowStatus = false;\r\n    this.colStatus = false;\r\n    this.setIcon(this.icon);\r\n    this.fixedContextMenu = new FixedContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  setFixedColStatus(status) {\r\n    const { fixedContextMenu } = this;\r\n    if (status) {\r\n      this.colStatus = true;\r\n      fixedContextMenu.col.setTitle('取消冻结列');\r\n    } else {\r\n      this.colStatus = false;\r\n      fixedContextMenu.col.setTitle('冻结至当前列');\r\n    }\r\n  }\r\n\r\n  setFixedRowStatus(status) {\r\n    const { fixedContextMenu } = this;\r\n    if (status) {\r\n      this.rowStatus = true;\r\n      fixedContextMenu.row.setTitle('取消冻结行');\r\n    } else {\r\n      this.rowStatus = false;\r\n      fixedContextMenu.row.setTitle('冻结至当前行');\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.fixedContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { Fixed };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass Filter extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-filter`);\r\n    this.icon = new Icon('filter');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { Filter };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\n\r\nclass Functions extends DropDownItem {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-format`);\r\n    this.icon = new Icon('functions');\r\n    this.setIcon(this.icon);\r\n  }\r\n\r\n}\r\nexport { Functions };\r\n","import { BaseFont } from '../../../canvas/font/BaseFont';\r\n\r\n/**\r\n *  CellFont\r\n *  @author jerry\r\n */\r\nclass CellFont {\r\n\r\n  /**\r\n   * CellFont\r\n   * @param align\r\n   * @param verticalAlign\r\n   * @param textWrap\r\n   * @param strikethrough\r\n   * @param underline\r\n   * @param color\r\n   * @param name\r\n   * @param size\r\n   * @param bold\r\n   * @param italic\r\n   * @param angle\r\n   * @param direction\r\n   * @param padding\r\n   */\r\n  constructor({\r\n    align = BaseFont.ALIGN.left,\r\n    verticalAlign = BaseFont.VERTICAL_ALIGN.center,\r\n    textWrap = BaseFont.TEXT_WRAP.TRUNCATE,\r\n    strikethrough = false,\r\n    underline = false,\r\n    color = 'rgb(0,0,0)',\r\n    name = 'Arial',\r\n    size = 14,\r\n    bold = false,\r\n    italic = false,\r\n    angle = 0,\r\n    direction = BaseFont.TEXT_DIRECTION.HORIZONTAL,\r\n    padding = 5,\r\n  }) {\r\n    this.align = align;\r\n    this.verticalAlign = verticalAlign;\r\n    this.textWrap = textWrap;\r\n    this.strikethrough = strikethrough;\r\n    this.underline = underline;\r\n    this.color = color;\r\n    this.name = name;\r\n    this.size = size;\r\n    this.bold = bold;\r\n    this.italic = italic;\r\n    this.direction = direction;\r\n    this.angle = angle;\r\n    this.padding = padding;\r\n  }\r\n\r\n  clone() {\r\n    const {\r\n      align,\r\n      verticalAlign,\r\n      textWrap,\r\n      strikethrough,\r\n      underline,\r\n      color,\r\n      name,\r\n      size,\r\n      bold,\r\n      italic,\r\n      angle,\r\n      direction,\r\n      padding,\r\n    } = this;\r\n    return new CellFont({\r\n      align,\r\n      verticalAlign,\r\n      textWrap,\r\n      strikethrough,\r\n      underline,\r\n      color,\r\n      name,\r\n      size,\r\n      bold,\r\n      italic,\r\n      angle,\r\n      direction,\r\n      padding,\r\n    });\r\n  }\r\n\r\n}\r\nCellFont.scaleAdapter = null;\r\n\r\nexport { CellFont };\r\n","import { LINE_TYPE } from '../../../canvas/Line';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XDraw } from '../../../canvas/XDraw';\r\n\r\nlet zIndexID = 0;\r\n\r\n/**\r\n * Border\r\n * @author jerry\r\n */\r\nclass Border {\r\n\r\n  static getZIndex() {\r\n    zIndexID += 1;\r\n    return zIndexID;\r\n  }\r\n\r\n  /**\r\n   * Border\r\n   * @param widthType\r\n   * @param width\r\n   * @param color\r\n   * @param zIndex\r\n   * @param display\r\n   * @param type\r\n   */\r\n  constructor({\r\n    widthType = XDraw.LINE_WIDTH_TYPE.low,\r\n    width = -1,\r\n    color = '#000000',\r\n    zIndex = 0,\r\n    display = false,\r\n    type = LINE_TYPE.SOLID_LINE,\r\n  }) {\r\n    this.$zIndex = zIndex;\r\n    this.$display = display;\r\n    this.$color = color;\r\n    this.$type = type;\r\n    if (width === 1) {\r\n      this.$widthType = XDraw.LINE_WIDTH_TYPE.low;\r\n    } else if (width === 2) {\r\n      this.$widthType = XDraw.LINE_WIDTH_TYPE.medium;\r\n    } else if (width === 3) {\r\n      this.$widthType = XDraw.LINE_WIDTH_TYPE.high;\r\n    } else {\r\n      this.$widthType = widthType;\r\n    }\r\n    if (zIndex > zIndexID) {\r\n      zIndexID = zIndex;\r\n    }\r\n  }\r\n\r\n  get display() {\r\n    return this.$display;\r\n  }\r\n\r\n  set display(value) {\r\n    this.$zIndex = Border.getZIndex();\r\n    this.$display = value;\r\n  }\r\n\r\n  get widthType() {\r\n    return this.$widthType;\r\n  }\r\n\r\n  set widthType(value) {\r\n    this.$zIndex = Border.getZIndex();\r\n    this.$widthType = value;\r\n  }\r\n\r\n  get color() {\r\n    return this.$color;\r\n  }\r\n\r\n  set color(value) {\r\n    this.$zIndex = Border.getZIndex();\r\n    this.$color = value;\r\n  }\r\n\r\n  get type() {\r\n    return this.$type;\r\n  }\r\n\r\n  set type(value) {\r\n    this.$zIndex = Border.getZIndex();\r\n    this.$type = value;\r\n  }\r\n\r\n  get zIndex() {\r\n    return this.$zIndex;\r\n  }\r\n\r\n  set zIndex(value) {\r\n    this.$zIndex = value;\r\n  }\r\n\r\n  equal(target) {\r\n    const widthType = this.widthType === target.widthType;\r\n    const color = this.color === target.color;\r\n    const type = this.type === target.type;\r\n    return color && widthType && type;\r\n  }\r\n\r\n  toJSON() {\r\n    const zIndex = this.$zIndex;\r\n    const display = this.$display;\r\n    const widthType = this.$widthType;\r\n    const color = this.$color;\r\n    const type = this.$type;\r\n    return { zIndex, display, widthType, color, type };\r\n  }\r\n\r\n  priority(border) {\r\n    if (PlainUtils.isUnDef(border)) {\r\n      return -2;\r\n    }\r\n    const origin = this.zIndex;\r\n    const target = border.zIndex;\r\n    if (origin > target) {\r\n      return 1;\r\n    }\r\n    if (target > origin) {\r\n      return -1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n}\r\n\r\nexport { Border };\r\n","import { Border } from './Border';\r\nimport { LINE_TYPE } from '../../../canvas/Line';\r\n\r\n/**\r\n * CellBorder\r\n * @author jerry\r\n */\r\nclass CellBorder {\r\n\r\n  /**\r\n   * CellBorder\r\n   * @param time\r\n   * @param left\r\n   * @param top\r\n   * @param right\r\n   * @param bottom\r\n   */\r\n  constructor({\r\n    left = {},\r\n    bottom = {},\r\n    top = {},\r\n    right = {},\r\n  }) {\r\n    this.left = new Border(left);\r\n    this.bottom = new Border(bottom);\r\n    this.top = new Border(top);\r\n    this.right = new Border(right);\r\n  }\r\n\r\n  hasDouble() {\r\n    const { top, left, right, bottom } = this;\r\n    if (top.type === LINE_TYPE.DOUBLE_LINE) {\r\n      return true;\r\n    }\r\n    if (left.type === LINE_TYPE.DOUBLE_LINE) {\r\n      return true;\r\n    }\r\n    if (right.type === LINE_TYPE.DOUBLE_LINE) {\r\n      return true;\r\n    }\r\n    return bottom.type === LINE_TYPE.DOUBLE_LINE;\r\n  }\r\n\r\n  isDisplay() {\r\n    return this.left.display || this.top.display\r\n      || this.bottom.display || this.right.display;\r\n  }\r\n\r\n  setAllDisplay(display) {\r\n    this.setBDisplay(display);\r\n    this.setLDisplay(display);\r\n    this.setTDisplay(display);\r\n    this.setRDisplay(display);\r\n  }\r\n\r\n  setLDisplay(display) {\r\n    this.left.display = display;\r\n  }\r\n\r\n  setTDisplay(display) {\r\n    this.top.display = display;\r\n  }\r\n\r\n  setRDisplay(display) {\r\n    this.right.display = display;\r\n  }\r\n\r\n  setBDisplay(display) {\r\n    this.bottom.display = display;\r\n  }\r\n\r\n  setAllColor(color) {\r\n    this.setBColor(color);\r\n    this.setLColor(color);\r\n    this.setTColor(color);\r\n    this.setRColor(color);\r\n  }\r\n\r\n  setLColor(color) {\r\n    this.left.color = color;\r\n  }\r\n\r\n  setTColor(color) {\r\n    this.top.color = color;\r\n  }\r\n\r\n  setRColor(color) {\r\n    this.right.color = color;\r\n  }\r\n\r\n  setBColor(color) {\r\n    this.bottom.color = color;\r\n  }\r\n\r\n  setAllWidthType(widthType) {\r\n    this.setBWidthType(widthType);\r\n    this.setLWidthType(widthType);\r\n    this.setTWidthType(widthType);\r\n    this.setRWidthType(widthType);\r\n  }\r\n\r\n  setLWidthType(widthType) {\r\n    this.left.widthType = widthType;\r\n  }\r\n\r\n  setTWidthType(widthType) {\r\n    this.top.widthType = widthType;\r\n  }\r\n\r\n  setRWidthType(widthType) {\r\n    this.right.widthType = widthType;\r\n  }\r\n\r\n  setBWidthType(widthType) {\r\n    this.bottom.widthType = widthType;\r\n  }\r\n\r\n  setAllType(type) {\r\n    this.setBType(type);\r\n    this.setLType(type);\r\n    this.setTType(type);\r\n    this.setRType(type);\r\n  }\r\n\r\n  setLType(type) {\r\n    this.left.type = type;\r\n  }\r\n\r\n  setTType(type) {\r\n    this.top.type = type;\r\n  }\r\n\r\n  setRType(type) {\r\n    this.right.type = type;\r\n  }\r\n\r\n  setBType(type) {\r\n    this.bottom.type = type;\r\n  }\r\n\r\n  updateMaxIndex() {\r\n    const zIndex = Border.getZIndex();\r\n    this.bottom.zIndex = zIndex;\r\n    this.left.zIndex = zIndex;\r\n    this.top.zIndex = zIndex;\r\n    this.right.zIndex = zIndex;\r\n  }\r\n\r\n  clone() {\r\n    const {\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    } = this;\r\n    return new CellBorder({\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport { CellBorder };\r\n","class Rect {\r\n\r\n  /**\r\n   * Rect\r\n   * @param x\r\n   * @param y\r\n   * @param width\r\n   * @param height\r\n   */\r\n  constructor({\r\n    x, y, width, height,\r\n  }) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  /**\r\n   * 计算当前矩形在指定矩形内部的位置\r\n   * @param rect\r\n   * @returns {Rect}\r\n   */\r\n  inRectPosition(rect) {\r\n    return new Rect({\r\n      x: this.x - rect.x,\r\n      y: this.y - rect.y,\r\n      width: this.width,\r\n      height: this.height,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 判断两个矩形是否不发生重合\r\n   * @param {Rect} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  disjoint(other) {\r\n    return this.x > other.x + other.width\r\n      || this.y > this.y + other.height\r\n      || other.x > this.x + this.width\r\n      || other.y > this.y + this.height;\r\n  }\r\n\r\n  /**\r\n   * 扩展尺寸\r\n   * @param size\r\n   * @returns {Rect}\r\n   */\r\n  expandSize(size) {\r\n    this.width += size;\r\n    this.height += size;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 是否包含点\r\n   * @param x\r\n   * @param y\r\n   * @returns {boolean}\r\n   */\r\n  includePoint(x, y) {\r\n    return x >= this.x && x <= this.x + this.width\r\n      && y >= this.y && y <= this.y + this.height;\r\n  }\r\n\r\n  /**\r\n   * 是否包含矩形\r\n   * @param rect\r\n   * @returns {boolean|boolean}\r\n   */\r\n  includeRect(rect) {\r\n    const { x, y, width, height } = rect;\r\n    return this.x <= x && this.x + this.width >= x + width\r\n      && this.y <= y && this.y + this.height >= y + height;\r\n  }\r\n\r\n  /**\r\n   * 复制\r\n   * @returns {Rect}\r\n   */\r\n  clone() {\r\n    const { x, y, width, height } = this;\r\n    return new Rect({ x, y, width, height });\r\n  }\r\n\r\n}\r\n\r\nexport { Rect };\r\n","\r\n/**\r\n * XIconOffset\r\n */\r\nclass XIconOffset {\r\n\r\n  /**\r\n   * XIconOffset\r\n   * @param x\r\n   * @param y\r\n   */\r\n  constructor({ x = 0, y = 0 } = {}) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XIconOffset,\r\n};\r\n","class Crop {\r\n\r\n  constructor({\r\n    rect, draw, offset = 0,\r\n  }) {\r\n    this.rect = rect;\r\n    this.draw = draw;\r\n    this.offset = offset;\r\n  }\r\n\r\n  open() {\r\n    const {\r\n      rect, draw, offset,\r\n    } = this;\r\n    const {\r\n      x, y, width, height,\r\n    } = rect;\r\n    draw.save()\r\n      .rect(x, y, width + offset, height + offset)\r\n      .clip()\r\n      .beginPath();\r\n    return this;\r\n  }\r\n\r\n  close() {\r\n    const { draw } = this;\r\n    draw.restore();\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport { Crop };\r\n","/* global Image console */\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XDraw } from '../../../canvas/XDraw';\r\nimport { Rect } from '../../../canvas/Rect';\r\nimport { XIconOffset } from './XIconOffset';\r\nimport { Crop } from '../../../canvas/Crop';\r\n\r\n/**\r\n * XIcon\r\n * @author jerry\r\n * @date 2020/10/20\r\n */\r\nclass XIcon {\r\n\r\n  /**\r\n   * 多图标初始化\r\n   * @param icons\r\n   * @returns {[]}\r\n   */\r\n  static newInstances(icons = []) {\r\n    const instances = [];\r\n    for (let i = 0; i < icons.length; i += 1) {\r\n      const icon = icons[i];\r\n      instances.push(new XIcon(icon));\r\n    }\r\n    return instances;\r\n  }\r\n\r\n  /**\r\n   * XIcon\r\n   * @param vertical\r\n   * @param horizontal\r\n   * @param type\r\n   * @param image\r\n   * @param focus\r\n   * @param height\r\n   * @param width\r\n   * @param color\r\n   * @param offset\r\n   * @param onDraw\r\n   * @param onLeave\r\n   * @param onMove\r\n   * @param onDown\r\n   * @param onEnter\r\n   */\r\n  constructor({\r\n    vertical = XIcon.ICON_VERTICAL.CENTER,\r\n    horizontal = XIcon.ICON_HORIZONTAL.RIGHT,\r\n    type = XIcon.ICON_TYPE.image,\r\n    image = PlainUtils.Nul,\r\n    focus = null,\r\n    height = 16,\r\n    width = 16,\r\n    color = '#ffffff',\r\n    offset = { x: 0, y: 0 },\r\n    onDraw = () => {},\r\n    onLeave = () => {},\r\n    onMove = () => {},\r\n    onDown = () => {},\r\n    onEnter = () => {},\r\n  }) {\r\n    this.vertical = vertical;\r\n    this.horizontal = horizontal;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.type = type;\r\n    this.image = image;\r\n    this.color = color;\r\n    this.focus = focus;\r\n    this.offset = new XIconOffset(offset);\r\n    this.onLeave = onLeave;\r\n    this.onMove = onMove;\r\n    this.onDraw = onDraw;\r\n    this.onDown = onDown;\r\n    this.onEnter = onEnter;\r\n    this.rect = null;\r\n  }\r\n\r\n  /**\r\n   * 计算绘制坐标\r\n   * @param rect\r\n   * @returns {{x: number, y: number}}\r\n   */\r\n  position(rect) {\r\n    // 图标信息\r\n    const iconHorizontal = this.horizontal;\r\n    const iconVertical = this.vertical;\r\n    const iconOffsetX = XDraw.srcTransformStylePx(this.offset.x);\r\n    const iconOffsetY = XDraw.srcTransformStylePx(this.offset.y);\r\n    const iconWidth = XDraw.srcTransformStylePx(this.width);\r\n    const iconHeight = XDraw.srcTransformStylePx(this.height);\r\n    // 矩形位置\r\n    const rectX = rect.x;\r\n    const rectY = rect.y;\r\n    const rectWidth = rect.width;\r\n    const rectHeight = rect.height;\r\n    // 计算位置\r\n    let px = 0;\r\n    let py = 0;\r\n    switch (iconHorizontal) {\r\n      case XIcon.ICON_HORIZONTAL.CENTER:\r\n        px = (rectX + rectWidth / 2) - (iconWidth / 2);\r\n        break;\r\n      case XIcon.ICON_HORIZONTAL.LEFT:\r\n        px = rectX;\r\n        break;\r\n      case XIcon.ICON_HORIZONTAL.RIGHT:\r\n        px = rectX + rectWidth - iconWidth;\r\n        break;\r\n    }\r\n    switch (iconVertical) {\r\n      case XIcon.ICON_VERTICAL.CENTER:\r\n        py = (rectY + rectHeight / 2) - (iconHeight / 2);\r\n        break;\r\n      case XIcon.ICON_VERTICAL.TOP:\r\n        py = rectY;\r\n        break;\r\n      case XIcon.ICON_VERTICAL.BOTTOM:\r\n        py = rectY + rectHeight - iconHeight;\r\n        break;\r\n    }\r\n    px += iconOffsetX;\r\n    py += iconOffsetY;\r\n    return new Rect({\r\n      x: px, y: py, width: iconWidth, height: iconHeight,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 加载图片信息\r\n   * @param async\r\n   * @param sync\r\n   */\r\n  loadImage({\r\n    load, sync,\r\n  }) {\r\n    const { image, type } = this;\r\n    switch (type) {\r\n      case XIcon.ICON_TYPE.image:\r\n        if (image instanceof Image) {\r\n          sync(image);\r\n        } else {\r\n          const loadImg = new Image();\r\n          loadImg.src = image;\r\n          if (loadImg.complete) {\r\n            this.image = loadImg;\r\n            sync(this.image);\r\n          } else {\r\n            loadImg.onload = () => {\r\n              this.image = loadImg;\r\n              load(loadImg);\r\n            };\r\n            loadImg.onerror = () => {\r\n              // eslint-disable-next-line no-console\r\n              console.error(`图片加载失败${image}`);\r\n            };\r\n          }\r\n        }\r\n        break;\r\n      case XIcon.ICON_TYPE.draw:\r\n        sync();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绘制小图标\r\n   * @param rect\r\n   * @param draw\r\n   */\r\n  drawIcon({\r\n    rect, draw,\r\n  }) {\r\n    const { type } = this;\r\n    this.rect = rect;\r\n    switch (type) {\r\n      case XIcon.ICON_TYPE.image:\r\n        this.drawImage({\r\n          rect, draw,\r\n        });\r\n        break;\r\n      case XIcon.ICON_TYPE.draw:\r\n        this.drawCustom({\r\n          rect, draw,\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 自定义绘制\r\n   * @param rect\r\n   * @param icon\r\n   * @param draw\r\n   */\r\n  drawCustom({\r\n    rect, draw,\r\n  }) {\r\n    this.onDraw({\r\n      rect, draw,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 绘制图片\r\n   * @param rect\r\n   * @param icon\r\n   * @param draw\r\n   */\r\n  drawImage({\r\n    rect, draw,\r\n  }) {\r\n    const image = this.image;\r\n    const color = this.color;\r\n    const positionRect = this.position(rect);\r\n    const {\r\n      x, y, width, height,\r\n    } = positionRect;\r\n    const include = rect.includeRect(positionRect);\r\n    const crop = new Crop({\r\n      rect, draw,\r\n    });\r\n    if (include === false) {\r\n      crop.open();\r\n    }\r\n    if (color) {\r\n      draw.attr({ fillStyle: color });\r\n      draw.fillRect(x, y, width, height);\r\n    }\r\n    draw.drawImage(image, 0, 0, image.width, image.height, x, y, width, height);\r\n    if (include === false) {\r\n      crop.close();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 事件处理\r\n   * @param type\r\n   * @param x\r\n   * @param y\r\n   * @param native\r\n   */\r\n  eventHandle({\r\n    type, x, y, native,\r\n  }) {\r\n    const { rect, focus } = this;\r\n    if (rect) {\r\n      const position = this.position(rect);\r\n      const location = position.inRectPosition(rect);\r\n      const { activate } = focus;\r\n      switch (type) {\r\n        case XIcon.ICON_EVENT_TYPE.MOUSE_DOWN:\r\n          if (location.includePoint(x, y)) {\r\n            focus.setActivate(this);\r\n            this.onDown({\r\n              native, position,\r\n            });\r\n          }\r\n          break;\r\n        case XIcon.ICON_EVENT_TYPE.MOUSE_MOVE:\r\n          if (location.includePoint(x, y)) {\r\n            if (activate !== this) {\r\n              this.onEnter({\r\n                native, position,\r\n              });\r\n            }\r\n            focus.setActivate(this);\r\n            this.onMove({\r\n              native, position,\r\n            });\r\n          } else if (activate) {\r\n            focus.setActivate(null);\r\n            this.onLeave({\r\n              native, position,\r\n            });\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绘制回调\r\n   * @param callback\r\n   */\r\n  setOnDraw(callback) {\r\n    this.onDraw = callback;\r\n  }\r\n\r\n  /**\r\n   * 按下回调\r\n   * @param callback\r\n   */\r\n  setOnDown(callback) {\r\n    this.onDown = callback;\r\n  }\r\n\r\n  /**\r\n   * 移动回调\r\n   * @param callback\r\n   */\r\n  setOnMove(callback) {\r\n    this.onMove = callback;\r\n  }\r\n\r\n  /**\r\n   * 进入回调\r\n   * @param callback\r\n   */\r\n  setOnEnter(callback) {\r\n    this.onEnter = callback;\r\n  }\r\n\r\n  /**\r\n   * 离开回调\r\n   * @param callback\r\n   */\r\n  setOnLeave(callback) {\r\n    this.onLeave = callback;\r\n  }\r\n\r\n  /**\r\n   * 设置焦点元素\r\n   * @param focus\r\n   */\r\n  setFocus(focus) {\r\n    this.focus = focus;\r\n  }\r\n\r\n}\r\nXIcon.ICON_HORIZONTAL = {\r\n  LEFT: 0,\r\n  RIGHT: 1,\r\n  CENTER: 2,\r\n};\r\nXIcon.ICON_VERTICAL = {\r\n  TOP: 3,\r\n  BOTTOM: 4,\r\n  CENTER: 5,\r\n};\r\nXIcon.ICON_TYPE = {\r\n  image: 1,\r\n  custom: 2,\r\n};\r\nXIcon.ICON_EVENT_TYPE = {\r\n  MOUSE_DOWN: 1,\r\n  MOUSE_MOVE: 2,\r\n};\r\n\r\nexport { XIcon };\r\n","import { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { CellFont } from './CellFont';\r\nimport { CellBorder } from './CellBorder';\r\nimport { XIcon } from '../xicon/XIcon';\r\n\r\n/**\r\n * Cell\r\n * @author jerry\r\n */\r\nclass Cell {\r\n\r\n  /**\r\n   * Cell\r\n   * @param text\r\n   * @param background\r\n   * @param format\r\n   * @param fontAttr\r\n   * @param icons\r\n   * @param borderAttr\r\n   * @param contentWidth\r\n   * @param leftSdistWidth\r\n   * @param rightSdistWidth\r\n   * @param contentType\r\n   */\r\n  constructor({\r\n    text = PlainUtils.EMPTY,\r\n    background = PlainUtils.Nul,\r\n    format = 'default',\r\n    borderAttr = {},\r\n    icons = [],\r\n    fontAttr = {},\r\n    contentWidth = 0,\r\n    leftSdistWidth = 0,\r\n    rightSdistWidth = 0,\r\n    contentType = Cell.CONTENT_TYPE.STRING,\r\n  }) {\r\n    this.ruler = null;\r\n    this.background = background;\r\n    this.format = format;\r\n    this.icons = XIcon.newInstances(icons);\r\n    this.borderAttr = new CellBorder(borderAttr);\r\n    this.fontAttr = new CellFont(fontAttr);\r\n    this.contentWidth = contentWidth;\r\n    this.leftSdistWidth = leftSdistWidth;\r\n    this.rightSdistWidth = rightSdistWidth;\r\n    this.contentType = contentType;\r\n    this.convert(text);\r\n  }\r\n\r\n  setContentWidth(contentWidth) {\r\n    this.contentWidth = contentWidth;\r\n  }\r\n\r\n  setFontAttr(fontAttr) {\r\n    this.fontAttr = fontAttr;\r\n  }\r\n\r\n  setBorderAttr(borderAttr) {\r\n    this.borderAttr = borderAttr;\r\n  }\r\n\r\n  setIcons(icons) {\r\n    this.icons = icons;\r\n  }\r\n\r\n  setText(text) {\r\n    this.convert(text);\r\n    this.setContentWidth(0);\r\n    this.setLeftSdistWidth(0);\r\n    this.setRightSdistWidth(0);\r\n  }\r\n\r\n  setRuler(ruler) {\r\n    this.ruler = ruler;\r\n  }\r\n\r\n  setLeftSdistWidth(leftSdistWidth) {\r\n    this.leftSdistWidth = leftSdistWidth;\r\n  }\r\n\r\n  setRightSdistWidth(rightSdistWidth) {\r\n    this.rightSdistWidth = rightSdistWidth;\r\n  }\r\n\r\n  clone() {\r\n    const { background, format, text, fontAttr, borderAttr, contentWidth, icons } = this;\r\n    return new Cell({\r\n      background, format, text, fontAttr, borderAttr, contentWidth, icons,\r\n    });\r\n  }\r\n\r\n  convert(text) {\r\n    const { contentType } = this;\r\n    switch (contentType) {\r\n      case Cell.CONTENT_TYPE.NUMBER:\r\n        this.text = PlainUtils.parseFloat(text);\r\n        break;\r\n      case Cell.CONTENT_TYPE.STRING:\r\n        this.text = text;\r\n        break;\r\n    }\r\n  }\r\n\r\n  toJSON() {\r\n    const { background, format, text, fontAttr, borderAttr, contentWidth, icons } = this;\r\n    return {\r\n      background, format, text, fontAttr, borderAttr, contentWidth, icons,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nCell.CONTENT_TYPE = {\r\n  NUMBER: 0,\r\n  STRING: 1,\r\n};\r\n\r\nexport {\r\n  Cell,\r\n};\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../libs/Element';\r\n\r\nclass ScaleContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(scale) {\r\n    super(`${cssPrefix}-scale-context-menu-item`);\r\n    this.scale = scale;\r\n    this.titleElement = h('div', `${cssPrefix}-scale-context-menu-item-title`);\r\n    this.titleElement.text(`${scale}%`);\r\n    this.children(this.titleElement);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  ScaleContextMenuItem,\r\n};\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { Constant, cssPrefix } from '../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { ScaleContextMenuItem } from './ScaleContextMenuItem';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\n\r\nclass ScaleContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-scale-context-menu`, PlainUtils.copy({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new ScaleContextMenuItem(200),\r\n      new ScaleContextMenuItem(150),\r\n      new ScaleContextMenuItem(125),\r\n      new ScaleContextMenuItem(100),\r\n      new ScaleContextMenuItem(90),\r\n      new ScaleContextMenuItem(75),\r\n      new ScaleContextMenuItem(50),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      this.addItem(item);\r\n    });\r\n    this.bind();\r\n  }\r\n\r\n  bind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n        this.update(item.scale);\r\n      });\r\n    });\r\n  }\r\n\r\n  unbind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.unbind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    });\r\n  }\r\n\r\n  update(scale) {\r\n    const { options } = this;\r\n    options.onUpdate(scale);\r\n    this.close();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  ScaleContextMenu,\r\n};\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { ScaleContextMenu } from './contextmenu/scale/ScaleContextMenu';\r\n\r\nclass Scale extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-scale`);\r\n    this.options = options;\r\n    this.setTitle('100%');\r\n    this.setWidth(50);\r\n    this.setEllipsis();\r\n    this.scaleContextMenu = new ScaleContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.scaleContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Scale,\r\n};\r\n","import { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\nclass RectRange {\r\n\r\n  /**\r\n   * RectRange\r\n   * @param {int} sri 起始行\r\n   * @param {int} sci 起始列\r\n   * @param {int} eri 结束行\r\n   * @param {int} eci 结束列\r\n   * @param {int} w 宽度\r\n   * @param {int} h 高度\r\n   */\r\n  constructor(sri, sci, eri, eci, w = 0, h = 0) {\r\n    this.sri = sri;\r\n    this.sci = sci;\r\n    this.eri = eri;\r\n    this.eci = eci;\r\n    this.w = w;\r\n    this.h = h;\r\n  }\r\n\r\n  /**\r\n   * 循环过滤指定的行列\r\n   * @param {XIteratorBuilder} iteratorBuilder 迭代器\r\n   * @param {Function} cb 回调函数\r\n   * @param {Function} rowFilter 过滤使用的回调函数\r\n   */\r\n  each(iteratorBuilder, cb, rowFilter = () => true) {\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this;\r\n    let ret = false;\r\n    iteratorBuilder.getRowIterator()\r\n      .setBegin(sri)\r\n      .setEnd(eri)\r\n      .setLoop((i) => {\r\n        if (rowFilter(i)) {\r\n          iteratorBuilder.getColIterator()\r\n            .setBegin(sci)\r\n            .setEnd(eci)\r\n            .setLoop((j) => {\r\n              ret = cb(i, j);\r\n              return ret;\r\n            })\r\n            .execute();\r\n        }\r\n        return ret;\r\n      })\r\n      .execute();\r\n  }\r\n\r\n  /**\r\n   * 设置区域\r\n   * @param {int} sri 起始行\r\n   * @param {int} sci 起始列\r\n   * @param {int} eri 结束行\r\n   * @param {int} eci 结束列\r\n   */\r\n  set(sri, sci, eri, eci) {\r\n    this.sri = sri;\r\n    this.sci = sci;\r\n    this.eri = eri;\r\n    this.eci = eci;\r\n  }\r\n\r\n  /**\r\n   * 判断是否跨多个单元格\r\n   * @returns {boolean}\r\n   */\r\n  multiple() {\r\n    return this.eri - this.sri > 0 || this.eci - this.sci > 0;\r\n  }\r\n\r\n  /**\r\n   * 判断当前的区域是否包含指定的行和列\r\n   * 参数支持 ri, ci 和 A10 两种形式\r\n   * @param {[int, int] | String} args 行索引,列索引 或者 字符串\r\n   * @returns {boolean}\r\n   */\r\n  includes(...args) {\r\n    let [ri, ci] = [0, 0];\r\n    if (args.length === 1) {\r\n      [ci, ri] = PlainUtils.expr2xy(args[0]);\r\n    } else if (args.length === 2) {\r\n      [ri, ci] = args;\r\n    }\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this;\r\n    return sri <= ri && ri <= eri && sci <= ci && ci <= eci;\r\n  }\r\n\r\n  /**\r\n   * 判断当前的区域是否包含指定的区域\r\n   * @param {RectRange} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  contains(other) {\r\n    return this.sri <= other.sri\r\n      && this.sci <= other.sci\r\n      && this.eri >= other.eri\r\n      && this.eci >= other.eci;\r\n  }\r\n\r\n  /**\r\n   * 判断当前的区域是否被指定的区域包含\r\n   * @param {RectRange} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  within(other) {\r\n    return this.sri >= other.sri\r\n      && this.sci >= other.sci\r\n      && this.eri <= other.eri\r\n      && this.eci <= other.eci;\r\n  }\r\n\r\n  /**\r\n   * 判断当前的区域和指定的区域不发生重合\r\n   * @param {RectRange} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  disjoint(other) {\r\n    return this.sri > other.eri\r\n      || this.sci > other.eci\r\n      || other.sri > this.eri\r\n      || other.sci > this.eci;\r\n  }\r\n\r\n  /**\r\n   * 判断当前的区域和指定的区域发生重合\r\n   * @param {RectRange} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  intersects(other) {\r\n    return this.sri <= other.eri\r\n      && this.sci <= other.eci\r\n      && other.sri <= this.eri\r\n      && other.sci <= this.eci;\r\n  }\r\n\r\n  /**\r\n   * 返回当前区域和指定区域合并后的新区域\r\n   * @param {RectRange} other 区域\r\n   * @returns {RectRange}\r\n   */\r\n  union(other) {\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this;\r\n    return new RectRange(\r\n      other.sri < sri ? other.sri : sri,\r\n      other.sci < sci ? other.sci : sci,\r\n      other.eri > eri ? other.eri : eri,\r\n      other.eci > eci ? other.eci : eci,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 返回当前区域和指定区域合重合的新区域\r\n   * @param {RectRange} other\r\n   * @returns {RectRange}\r\n   */\r\n  coincide(other) {\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this;\r\n    if (this.disjoint(other)) {\r\n      return RectRange.EMPTY;\r\n    }\r\n    return new RectRange(\r\n      other.sri > sri ? other.sri : sri,\r\n      other.sci > sci ? other.sci : sci,\r\n      other.eri < eri ? other.eri : eri,\r\n      other.eci < eci ? other.eci : eci,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 当前区域和指定区域重合\r\n   * 返回当前区域和指定区域不重合的部分\r\n   * @param {RectRange} other 区域\r\n   * @returns {Array}\r\n   */\r\n  coincideDifference(other) {\r\n    if (this.coincide(other).equals(RectRange.EMPTY)) {\r\n      return [];\r\n    }\r\n    return this.difference(other);\r\n  }\r\n\r\n  /**\r\n   * 返回当前区域和指定区域不重合的部分\r\n   * @param {RectRange} other 区域\r\n   * @returns {Array}\r\n   */\r\n  difference(other) {\r\n    const ret = [];\r\n    const addRet = (sri, sci, eri, eci) => {\r\n      ret.push(new RectRange(sri, sci, eri, eci));\r\n    };\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this;\r\n    const dsr = other.sri - sri;\r\n    const dsc = other.sci - sci;\r\n    const der = eri - other.eri;\r\n    const dec = eci - other.eci;\r\n    if (dsr > 0) {\r\n      addRet(sri, sci, other.sri - 1, eci);\r\n      if (der > 0) {\r\n        addRet(other.eri + 1, sci, eri, eci);\r\n        if (dsc > 0) {\r\n          addRet(other.sri, sci, other.eri, other.sci - 1);\r\n        }\r\n        if (dec > 0) {\r\n          addRet(other.sri, other.eci + 1, other.eri, eci);\r\n        }\r\n      } else {\r\n        if (dsc > 0) {\r\n          addRet(other.sri, sci, eri, other.sci - 1);\r\n        }\r\n        if (dec > 0) {\r\n          addRet(other.sri, other.eci + 1, eri, eci);\r\n        }\r\n      }\r\n    } else if (der > 0) {\r\n      addRet(other.eri + 1, sci, eri, eci);\r\n      if (dsc > 0) {\r\n        addRet(sri, sci, other.eri, other.sci - 1);\r\n      }\r\n      if (dec > 0) {\r\n        addRet(sri, other.eci + 1, other.eri, eci);\r\n      }\r\n    }\r\n    if (dsc > 0) {\r\n      addRet(sri, sci, eri, other.sci - 1);\r\n      if (dec > 0) {\r\n        addRet(sri, other.eri + 1, eri, eci);\r\n        if (dsr > 0) {\r\n          addRet(sri, other.sci, other.sri - 1, other.eci);\r\n        }\r\n        if (der > 0) {\r\n          addRet(other.sri + 1, other.sci, eri, other.eci);\r\n        }\r\n      } else {\r\n        if (dsr > 0) {\r\n          addRet(sri, other.sci, other.sri - 1, eci);\r\n        }\r\n        if (der > 0) {\r\n          addRet(other.sri + 1, other.sci, eri, eci);\r\n        }\r\n      }\r\n    } else if (dec > 0) {\r\n      addRet(sri, other.eci + 1, eri, eci);\r\n      if (dsr > 0) {\r\n        addRet(sri, sci, other.sri - 1, other.eci);\r\n      }\r\n      if (der > 0) {\r\n        addRet(other.eri + 1, sci, eri, other.eci);\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * 当前区域跨的行列数\r\n   * @returns {number[]}\r\n   */\r\n  size() {\r\n    return [\r\n      this.eri - this.sri + 1,\r\n      this.eci - this.sci + 1,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * 返回边缘区域\r\n   * @returns {{top: RectRange, left: RectRange, bottom: RectRange, right: RectRange}}\r\n   */\r\n  brink() {\r\n    const { sri, eri, sci, eci } = this;\r\n    const top = new RectRange(sri, sci, sri, eci);\r\n    const bottom = new RectRange(eri, sci, eri, eci);\r\n    const right = new RectRange(sri, eci, eri, eci);\r\n    const left = new RectRange(sri, sci, eri, sci);\r\n    return { top, right, bottom, left };\r\n  }\r\n\r\n  /**\r\n   * equals\r\n   * @param {RectRange} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  equals(other) {\r\n    return this.eri === other.eri\r\n      && this.eci === other.eci\r\n      && this.sri === other.sri\r\n      && this.sci === other.sci;\r\n  }\r\n\r\n  /**\r\n   * 克隆\r\n   * @returns {RectRange}\r\n   */\r\n  clone() {\r\n    const {\r\n      sri, sci, eri, eci, w, h,\r\n    } = this;\r\n    return new RectRange(sri, sci, eri, eci, w, h);\r\n  }\r\n\r\n  toString() {\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this;\r\n    let ref = PlainUtils.xy2expr(sci, sri);\r\n    if (this.multiple()) {\r\n      ref = `${ref}:${PlainUtils.xy2expr(eci, eri)}`;\r\n    }\r\n    return ref;\r\n  }\r\n\r\n  /**\r\n   * 将 B1:B8 或者 B1 参数转换成新的区域\r\n   * @param {String} ref 行列字符串\r\n   * @returns {RectRange}\r\n   */\r\n  static valueOf(ref) {\r\n    const refs = ref.split(':');\r\n    const [sci, sri] = PlainUtils.expr2xy(refs[0]);\r\n    let [eri, eci] = [sri, sci];\r\n    if (refs.length > 1) {\r\n      [eci, eri] = PlainUtils.expr2xy(refs[1]);\r\n    }\r\n    return new RectRange(sri, sci, eri, eci);\r\n  }\r\n}\r\n\r\nRectRange.EMPTY = new RectRange(-1, -1, -1, -1);\r\n\r\nexport { RectRange };\r\n","import { Widget } from '../../../../libs/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenPart extends Widget {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-x-screen-part ${className}`);\r\n    this.xScreenZone = null;\r\n  }\r\n\r\n  onAttach(xScreenZone) {\r\n    this.xScreenZone = xScreenZone;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenPart,\r\n};\r\n","import { XScreenPart } from './XScreenPart';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenLTPart extends XScreenPart {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-x-screen-lt-part ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenLTPart,\r\n};\r\n","import { XScreenPart } from './XScreenPart';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenTPart extends XScreenPart {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-x-screen-br-part ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenTPart,\r\n};\r\n","import { XScreenPart } from './XScreenPart';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenLPart extends XScreenPart {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-x-screen-l-part ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenLPart,\r\n};\r\n","import { XScreenPart } from './XScreenPart';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenBRPart extends XScreenPart {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-x-screen-br-part ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenBRPart,\r\n};\r\n","import { XScreenLTPart } from '../part/XScreenLTPart';\r\nimport { XScreenTPart } from '../part/XScreenTPart';\r\nimport { XScreenBRPart } from '../part/XScreenBRPart';\r\nimport { XScreenLPart } from '../part/XScreenLPart';\r\n\r\nclass XScreenItem {\r\n\r\n  constructor({\r\n    table,\r\n  } = {}) {\r\n    this.table = table;\r\n    this.lt = new XScreenLTPart();\r\n    this.t = new XScreenTPart();\r\n    this.br = new XScreenBRPart();\r\n    this.l = new XScreenLPart();\r\n    this.xScreen = null;\r\n  }\r\n\r\n  onAdd() {}\r\n\r\n  hide() {\r\n    this.lt.hide();\r\n    this.t.hide();\r\n    this.br.hide();\r\n    this.l.hide();\r\n  }\r\n\r\n  show() {\r\n    this.lt.show();\r\n    this.t.show();\r\n    this.br.show();\r\n    this.l.show();\r\n  }\r\n\r\n  setXScreen(xScreen) {\r\n    this.xScreen = xScreen;\r\n  }\r\n\r\n  destroy() {}\r\n\r\n}\r\n\r\nexport {\r\n  XScreenItem,\r\n};\r\n","import { RectRange } from '../../../tablebase/RectRange';\r\nimport { XScreenItem } from '../XScreenItem';\r\n\r\nclass Display {\r\n\r\n  constructor(viewEyes) {\r\n    this.viewEyes = viewEyes;\r\n  }\r\n\r\n  setDisplay(targetViewRange) {\r\n    const screenView = this.getXScreenViewRange();\r\n    const target = screenView.coincide(targetViewRange);\r\n    const part = this.getPart();\r\n    if (target !== RectRange.EMPTY) {\r\n      part.show();\r\n      return true;\r\n    }\r\n    part.hide();\r\n    return false;\r\n  }\r\n\r\n  getPart() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n}\r\n\r\nclass LTDisplay extends Display {\r\n\r\n  setDisplay(targetViewRange) {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\r\n      return super.setDisplay(targetViewRange);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getPart() {\r\n    const { viewEyes } = this;\r\n    return viewEyes.lt;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\r\n      return xFixedView.getFixedView();\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass TDisplay extends Display {\r\n\r\n  setDisplay(targetViewRange) {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop()) {\r\n      return super.setDisplay(targetViewRange);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getPart() {\r\n    const { viewEyes } = this;\r\n    return viewEyes.t;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop()) {\r\n      const fixedView = xFixedView.getFixedView();\r\n      const scrollView = table.getScrollView();\r\n      return new RectRange(fixedView.sri, scrollView.sci, fixedView.eri, scrollView.eci);\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass BRDisplay extends Display {\r\n\r\n  getPart() {\r\n    const { viewEyes } = this;\r\n    return viewEyes.br;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    return table.getScrollView();\r\n  }\r\n\r\n}\r\n\r\nclass LDisplay extends Display {\r\n\r\n  setDisplay(targetViewRange) {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedLeft()) {\r\n      super.setDisplay(targetViewRange);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getPart() {\r\n    const { viewEyes } = this;\r\n    return viewEyes.l;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedLeft()) {\r\n      const fixedView = xFixedView.getFixedView();\r\n      const scrollView = table.getScrollView();\r\n      return new RectRange(scrollView.sri, fixedView.sci, scrollView.eri, fixedView.eci);\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass XScreenViewEyes extends XScreenItem {\r\n\r\n  constructor({\r\n    table,\r\n  } = {}) {\r\n    super({ table });\r\n    this.ltDisplay = new LTDisplay(this);\r\n    this.tDisplay = new TDisplay(this);\r\n    this.brDisplay = new BRDisplay(this);\r\n    this.lDisplay = new LDisplay(this);\r\n  }\r\n\r\n  setDisplay(targetViewRange) {\r\n    const lt = this.ltDisplay.setDisplay(targetViewRange);\r\n    const t = this.tDisplay.setDisplay(targetViewRange);\r\n    const br = this.brDisplay.setDisplay(targetViewRange);\r\n    const l = this.lDisplay.setDisplay(targetViewRange);\r\n    return lt || t || br || l;\r\n  }\r\n\r\n  setLocal() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  setSizer() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenViewEyes,\r\n};\r\n","import { XScreenViewEyes } from './XScreenViewEyes';\r\nimport { RectRange } from '../../../tablebase/RectRange';\r\n\r\nclass Local {\r\n\r\n  constructor(viewLocal) {\r\n    this.viewLocal = viewLocal;\r\n  }\r\n\r\n  setLeft(targetViewRange) {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { cols } = table;\r\n    const screenView = this.getXScreenViewRange();\r\n    const target = screenView.coincide(targetViewRange);\r\n    const left = target !== RectRange.EMPTY\r\n      ? cols.sectionSumWidth(screenView.sci, target.sci - 1) : 0;\r\n    const part = this.getPart();\r\n    part.offset({ left });\r\n  }\r\n\r\n  setTop(targetViewRange) {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { rows } = table;\r\n    const screenView = this.getXScreenViewRange();\r\n    const target = screenView.coincide(targetViewRange);\r\n    const top = target !== RectRange.EMPTY\r\n      ? rows.sectionSumHeight(screenView.sri, target.sri - 1) : 0;\r\n    const part = this.getPart();\r\n    part.offset({ top });\r\n  }\r\n\r\n  setLocal(targetViewRange) {\r\n    this.setTop(targetViewRange);\r\n    this.setLeft(targetViewRange);\r\n  }\r\n\r\n  getPart() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n}\r\n\r\nclass LTLocal extends Local {\r\n\r\n  setLocal(targetViewRange) {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\r\n      super.setLocal(targetViewRange);\r\n    }\r\n  }\r\n\r\n  getPart() {\r\n    const { viewLocal } = this;\r\n    return viewLocal.lt;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\r\n      return xFixedView.getFixedView();\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass TLocal extends Local {\r\n\r\n  setLocal(targetViewRange) {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop()) {\r\n      super.setLocal(targetViewRange);\r\n    }\r\n  }\r\n\r\n  getPart() {\r\n    const { viewLocal } = this;\r\n    return viewLocal.t;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop()) {\r\n      const fixedView = xFixedView.getFixedView();\r\n      const scrollView = table.getScrollView();\r\n      return new RectRange(fixedView.sri, scrollView.sci, fixedView.eri, scrollView.eci);\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass BRLocal extends Local {\r\n\r\n  getPart() {\r\n    const { viewLocal } = this;\r\n    return viewLocal.br;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    return table.getScrollView();\r\n  }\r\n\r\n}\r\n\r\nclass LLocal extends Local {\r\n\r\n  setLocal(targetViewRange) {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedLeft()) {\r\n      super.setLocal(targetViewRange);\r\n    }\r\n  }\r\n\r\n  getPart() {\r\n    const { viewLocal } = this;\r\n    return viewLocal.l;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedLeft()) {\r\n      const fixedView = xFixedView.getFixedView();\r\n      const scrollView = table.getScrollView();\r\n      return new RectRange(scrollView.sri, fixedView.sci, scrollView.eri, fixedView.eci);\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass XScreenViewLocal extends XScreenViewEyes {\r\n\r\n  constructor({\r\n    table,\r\n  } = {}) {\r\n    super({ table });\r\n    this.tlLocal = new LTLocal(this);\r\n    this.tLocal = new TLocal(this);\r\n    this.brLocal = new BRLocal(this);\r\n    this.lLocal = new LLocal(this);\r\n  }\r\n\r\n  setLocal(view) {\r\n    this.tlLocal.setLocal(view);\r\n    this.tLocal.setLocal(view);\r\n    this.brLocal.setLocal(view);\r\n    this.lLocal.setLocal(view);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenViewLocal,\r\n};\r\n","import { XScreenViewLocal } from './XScreenViewLocal';\nimport { RectRange } from '../../../tablebase/RectRange';\nimport { XDraw } from '../../../../../canvas/XDraw';\n\nclass Sizer {\n\n  constructor(viewSizer) {\n    this.viewSizer = viewSizer;\n  }\n\n  setSizer(targetViewRange) {\n    const { viewSizer } = this;\n    const { table } = viewSizer;\n    const { cols, rows } = table;\n    const screenView = this.getXScreenViewRange();\n    const target = screenView.coincide(targetViewRange);\n    const width = cols.rectRangeSumWidth(target);\n    const height = rows.rectRangeSumHeight(target);\n    const part = this.getPart();\n    part.offset({\n      width: XDraw.offsetToLineInside(width),\n      height: XDraw.offsetToLineInside(height),\n    });\n  }\n\n  getPart() {\n    throw new TypeError('child impl');\n  }\n\n  getXScreenViewRange() {\n    throw new TypeError('child impl');\n  }\n\n}\n\nclass LTSizer extends Sizer {\n\n  setSizer(targetViewRange) {\n    const { viewSizer } = this;\n    const { table } = viewSizer;\n    const { xFixedView } = table;\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\n      super.setSizer(targetViewRange);\n    }\n  }\n\n  getPart() {\n    const { viewSizer } = this;\n    return viewSizer.lt;\n  }\n\n  getXScreenViewRange() {\n    const { viewSizer } = this;\n    const { table } = viewSizer;\n    const { xFixedView } = table;\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\n      return xFixedView.getFixedView();\n    }\n    return RectRange.EMPTY;\n  }\n\n}\n\nclass TSizer extends Sizer {\n\n  setSizer(targetViewRange) {\n    const { viewSizer } = this;\n    const { table } = viewSizer;\n    const { xFixedView } = table;\n    if (xFixedView.hasFixedTop()) {\n      super.setSizer(targetViewRange);\n    }\n  }\n\n  getPart() {\n    const { viewSizer } = this;\n    return viewSizer.t;\n  }\n\n  getXScreenViewRange() {\n    const { viewSizer } = this;\n    const { table } = viewSizer;\n    const { xFixedView } = table;\n    if (xFixedView.hasFixedTop()) {\n      const fixedView = xFixedView.getFixedView();\n      const scrollView = table.getScrollView();\n      return new RectRange(fixedView.sri, scrollView.sci, fixedView.eri, scrollView.eci);\n    }\n    return RectRange.EMPTY;\n  }\n\n}\n\nclass BRSizer extends Sizer {\n\n  getPart() {\n    const { viewSizer } = this;\n    return viewSizer.br;\n  }\n\n  getXScreenViewRange() {\n    const { viewSizer } = this;\n    const { table } = viewSizer;\n    return table.getScrollView();\n  }\n\n}\n\nclass LSizer extends Sizer {\n\n  setSizer(targetViewRange) {\n    const { viewSizer } = this;\n    const { table } = viewSizer;\n    const { xFixedView } = table;\n    if (xFixedView.hasFixedLeft()) {\n      super.setSizer(targetViewRange);\n    }\n  }\n\n  getPart() {\n    const { viewSizer } = this;\n    return viewSizer.l;\n  }\n\n  getXScreenViewRange() {\n    const { viewSizer } = this;\n    const { table } = viewSizer;\n    const { xFixedView } = table;\n    if (xFixedView.hasFixedLeft()) {\n      const fixedView = xFixedView.getFixedView();\n      const scrollView = table.getScrollView();\n      return new RectRange(scrollView.sri, fixedView.sci, scrollView.eri, fixedView.eci);\n    }\n    return RectRange.EMPTY;\n  }\n\n}\n\nclass XScreenViewSizer extends XScreenViewLocal {\n\n  constructor({\n    table,\n  } = {}) {\n    super({ table });\n    this.ltSizer = new LTSizer(this);\n    this.tSizer = new TSizer(this);\n    this.brSizer = new BRSizer(this);\n    this.lSizer = new LSizer(this);\n  }\n\n  setSizer(view) {\n    this.ltSizer.setSizer(view);\n    this.tSizer.setSizer(view);\n    this.brSizer.setSizer(view);\n    this.lSizer.setSizer(view);\n  }\n\n}\n\nexport {\n  XScreenViewSizer,\n};\n","import { RectRange } from '../../../tablebase/RectRange';\r\nimport { XScreenLTPart } from '../../part/XScreenLTPart';\r\nimport { XScreenTPart } from '../../part/XScreenTPart';\r\nimport { XScreenLPart } from '../../part/XScreenLPart';\r\nimport { XScreenBRPart } from '../../part/XScreenBRPart';\r\nimport { XScreenViewSizer } from '../viewdisplay/XScreenViewSizer';\r\n\r\nconst RANGE_OVER_GO = {\r\n  LT: Symbol('lt'),\r\n  T: Symbol('t'),\r\n  BR: Symbol('br'),\r\n  L: Symbol('l'),\r\n  LTT: Symbol('ltt'),\r\n  LTL: Symbol('ltl'),\r\n  BRT: Symbol('brt'),\r\n  BRL: Symbol('brl'),\r\n  ALL: Symbol('all'),\r\n};\r\n\r\nclass XScreenStyleBorderHandle extends XScreenViewSizer {\r\n\r\n  getBorderDisplay(range) {\r\n    const { table } = this;\r\n    const scrollView = table.getScrollView();\r\n    const overGo = this.getOverGo(range);\r\n    const display = {\r\n      bottom: false, left: false, top: false, right: false,\r\n    };\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n        display.bottom = true;\r\n        display.top = true;\r\n        display.left = true;\r\n        display.right = true;\r\n        break;\r\n      case RANGE_OVER_GO.T:\r\n        display.bottom = true;\r\n        display.top = true;\r\n        display.left = range.sci >= scrollView.sci && range.sci <= scrollView.eci;\r\n        display.right = range.eci <= scrollView.eci && range.eci >= scrollView.sci;\r\n        break;\r\n      case RANGE_OVER_GO.BR:\r\n        display.bottom = range.eri <= scrollView.eri && range.eri >= scrollView.sri;\r\n        display.top = range.sri >= scrollView.sri && range.sri <= scrollView.eri;\r\n        display.left = range.sci >= scrollView.sci && range.sci <= scrollView.eci;\r\n        display.right = range.eci <= scrollView.eci && range.eci >= scrollView.sci;\r\n        break;\r\n      case RANGE_OVER_GO.L:\r\n        display.bottom = range.eri <= scrollView.eri && range.eri >= scrollView.sri;\r\n        display.top = range.sri >= scrollView.sri && range.sri <= scrollView.eri;\r\n        display.left = true;\r\n        display.right = true;\r\n        break;\r\n      case RANGE_OVER_GO.LTT:\r\n        display.bottom = true;\r\n        display.top = true;\r\n        display.left = true;\r\n        display.right = range.eci <= scrollView.eci && range.eci >= scrollView.sci;\r\n        break;\r\n      case RANGE_OVER_GO.LTL:\r\n        display.bottom = range.eri <= scrollView.eri && range.eri >= scrollView.sri;\r\n        display.top = true;\r\n        display.left = true;\r\n        display.right = true;\r\n        break;\r\n      case RANGE_OVER_GO.BRT:\r\n        display.bottom = range.eri <= scrollView.eri && range.eri >= scrollView.sri;\r\n        display.top = true;\r\n        display.left = range.sci >= scrollView.sci && range.sci <= scrollView.eci;\r\n        display.right = range.eci <= scrollView.eci && range.eci >= scrollView.sci;\r\n        break;\r\n      case RANGE_OVER_GO.BRL:\r\n        display.bottom = range.eri <= scrollView.eri && range.eri >= scrollView.sri;\r\n        display.top = range.sri >= scrollView.sri && range.sri <= scrollView.eri;\r\n        display.left = true;\r\n        display.right = range.eci <= scrollView.eci && range.eci >= scrollView.sci;\r\n        break;\r\n      case RANGE_OVER_GO.ALL:\r\n        display.bottom = range.eri <= scrollView.eri && range.eri >= scrollView.sri;\r\n        display.top = true;\r\n        display.left = true;\r\n        display.right = range.eci <= scrollView.eci && range.eci >= scrollView.sci;\r\n        break;\r\n    }\r\n    return display;\r\n  }\r\n\r\n  getOverGo(range) {\r\n    const { table } = this;\r\n    const { cols, rows } = table;\r\n    const {\r\n      xFixedView,\r\n    } = table;\r\n    const rowsLen = rows.len - 1;\r\n    const colsLen = cols.len - 1;\r\n    const fixedView = xFixedView.getFixedView();\r\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\r\n      const lt = fixedView;\r\n      const t = new RectRange(fixedView.sri, fixedView.eci + 1, fixedView.eri, colsLen);\r\n      const l = new RectRange(fixedView.eri + 1, fixedView.sci, rowsLen, fixedView.eci);\r\n      const br = new RectRange(fixedView.eri + 1, fixedView.eci + 1, rowsLen, colsLen);\r\n      if (lt.contains(range)) {\r\n        return RANGE_OVER_GO.LT;\r\n      }\r\n      if (t.contains(range)) {\r\n        return RANGE_OVER_GO.T;\r\n      }\r\n      if (br.contains(range)) {\r\n        return RANGE_OVER_GO.BR;\r\n      }\r\n      if (l.contains(range)) {\r\n        return RANGE_OVER_GO.L;\r\n      }\r\n      const ltt = new RectRange(fixedView.sri, fixedView.sci, fixedView.eri, colsLen);\r\n      const ltl = new RectRange(fixedView.sri, fixedView.sci, rowsLen, fixedView.eci);\r\n      const brt = new RectRange(fixedView.sri, fixedView.eci + 1, rowsLen, colsLen);\r\n      const brl = new RectRange(fixedView.eri + 1, fixedView.sci, rowsLen, colsLen);\r\n      if (ltt.contains(range)) {\r\n        return RANGE_OVER_GO.LTT;\r\n      }\r\n      if (ltl.contains(range)) {\r\n        return RANGE_OVER_GO.LTL;\r\n      }\r\n      if (brt.contains(range)) {\r\n        return RANGE_OVER_GO.BRT;\r\n      }\r\n      if (brl.contains(range)) {\r\n        return RANGE_OVER_GO.BRL;\r\n      }\r\n      return RANGE_OVER_GO.ALL;\r\n    } if (xFixedView.hasFixedTop()) {\r\n      const t = new RectRange(fixedView.sri, fixedView.eci, fixedView.eri, colsLen);\r\n      const br = new RectRange(fixedView.eri + 1, fixedView.eci + 1, rowsLen, colsLen);\r\n      if (t.contains(range)) {\r\n        return RANGE_OVER_GO.T;\r\n      }\r\n      if (br.contains(range)) {\r\n        return RANGE_OVER_GO.BR;\r\n      }\r\n      return RANGE_OVER_GO.BRT;\r\n    } if (xFixedView.hasFixedLeft()) {\r\n      const l = new RectRange(fixedView.eri, fixedView.sci, rowsLen, fixedView.eci);\r\n      const br = new RectRange(fixedView.eri + 1, fixedView.eci + 1, rowsLen, colsLen);\r\n      if (l.contains(range)) {\r\n        return RANGE_OVER_GO.L;\r\n      }\r\n      if (br.contains(range)) {\r\n        return RANGE_OVER_GO.BR;\r\n      }\r\n      return RANGE_OVER_GO.BRL;\r\n    }\r\n    return RANGE_OVER_GO.BR;\r\n  }\r\n\r\n  showBBorder(overGo, display) {\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n        this.blt.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.L:\r\n        this.bl.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.T:\r\n        this.bt.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.BR:\r\n        if (display.bottom) this.bbr.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTT:\r\n        this.blt.addClass('show-bottom-border');\r\n        this.bt.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTL:\r\n        if (display.bottom) this.bl.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRT:\r\n        if (display.bottom) this.bbr.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.ALL:\r\n      case RANGE_OVER_GO.BRL:\r\n        if (display.bottom) {\r\n          this.bl.addClass('show-bottom-border');\r\n          this.bbr.addClass('show-bottom-border');\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  showTBorder(overGo, display) {\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n        this.blt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.L:\r\n        this.bl.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.T:\r\n        this.bt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.BR:\r\n        if (display.top) this.bbr.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTT:\r\n        this.blt.addClass('show-top-border');\r\n        this.bt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTL:\r\n        this.blt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRT:\r\n        this.bt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRL:\r\n        if (display.top) {\r\n          this.bl.addClass('show-top-border');\r\n          this.bbr.addClass('show-top-border');\r\n        }\r\n        break;\r\n      case RANGE_OVER_GO.ALL:\r\n        this.blt.addClass('show-top-border');\r\n        this.bt.addClass('show-top-border');\r\n        break;\r\n    }\r\n  }\r\n\r\n  showLBorder(overGo, display) {\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n        this.blt.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.L:\r\n        this.bl.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.T:\r\n        if (display.left) this.bt.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.BR:\r\n        if (display.left) this.bbr.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTT:\r\n        this.blt.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTL:\r\n        this.blt.addClass('show-left-border');\r\n        this.bl.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRT:\r\n        if (display.left) {\r\n          this.bt.addClass('show-left-border');\r\n          this.bbr.addClass('show-left-border');\r\n        }\r\n        break;\r\n      case RANGE_OVER_GO.BRL:\r\n        this.bl.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.ALL:\r\n        this.blt.addClass('show-left-border');\r\n        this.bl.addClass('show-left-border');\r\n        break;\r\n    }\r\n  }\r\n\r\n  showRBorder(overGo, display) {\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n        this.blt.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.L:\r\n        this.bl.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.T:\r\n        if (display.right) this.bt.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.BR:\r\n        if (display.right) this.bbr.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTT:\r\n        if (display.right) this.bt.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTL:\r\n        this.blt.addClass('show-right-border');\r\n        this.bl.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRT:\r\n        if (display.right) {\r\n          this.bt.addClass('show-right-border');\r\n          this.bbr.addClass('show-right-border');\r\n        }\r\n        break;\r\n      case RANGE_OVER_GO.BRL:\r\n        if (display.right) this.bbr.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.ALL:\r\n        if (display.right) {\r\n          this.bt.addClass('show-right-border');\r\n          this.bbr.addClass('show-right-border');\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass XScreenStyleBorderItem extends XScreenStyleBorderHandle {\r\n\r\n  constructor({ table }, className = '') {\r\n    super({ table });\r\n    this.blt = new XScreenLTPart(className);\r\n    this.bt = new XScreenTPart(className);\r\n    this.bl = new XScreenLPart(className);\r\n    this.bbr = new XScreenBRPart(className);\r\n    this.lt.children(this.blt);\r\n    this.t.children(this.bt);\r\n    this.l.children(this.bl);\r\n    this.br.children(this.bbr);\r\n  }\r\n\r\n  hideBorder() {\r\n    [this.bbr, this.bt, this.bl, this.blt].forEach((item) => {\r\n      item.removeClass('show-bottom-border');\r\n      item.removeClass('show-top-border');\r\n      item.removeClass('show-right-border');\r\n      item.removeClass('show-left-border');\r\n    });\r\n  }\r\n\r\n  showBorder(range) {\r\n    const overGo = this.getOverGo(range);\r\n    const display = this.getBorderDisplay(range);\r\n    this.showBBorder(overGo, display);\r\n    this.showTBorder(overGo, display);\r\n    this.showLBorder(overGo, display);\r\n    this.showRBorder(overGo, display);\r\n    return display;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenStyleBorderItem, RANGE_OVER_GO,\r\n};\r\n","import { cssPrefix } from '../../../../../const/Constant';\r\nimport { XScreenStyleBorderItem } from './XScreenStyleBorderItem';\r\n\r\nclass XScreenCssBorderItem extends XScreenStyleBorderItem {\r\n\r\n  constructor({ table }) {\r\n    super({ table }, `${cssPrefix}-part-border-css`);\r\n    this.type = 'solid';\r\n    this.color = '#42a642';\r\n    this.setBorderType(this.type);\r\n  }\r\n\r\n  setBorderType(type) {\r\n    this.type = type;\r\n    this.blt.addClass(type);\r\n    this.bl.addClass(type);\r\n    this.bt.addClass(type);\r\n    this.bbr.addClass(type);\r\n  }\r\n\r\n  setBorderColor(color) {\r\n    this.color = color;\r\n    this.blt.css('border-color', color);\r\n    this.bl.css('border-color', color);\r\n    this.bt.css('border-color', color);\r\n    this.bbr.css('border-color', color);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenCssBorderItem,\r\n};\r\n","import cell from '../../../assets/svg/cell.png';\r\nimport sResize from '../../../assets/svg/s-resize.png';\r\nimport eResize from '../../../assets/svg/e-resize.png';\r\n\r\nclass XTableMousePointer {\r\n\r\n  constructor(table) {\r\n    this.flag = null;\r\n    this.table = table;\r\n  }\r\n\r\n  lock(flag) {\r\n    if (this.flag === null) {\r\n      this.flag = flag;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  set(type, token) {\r\n    if (this.flag !== null) {\r\n      if (this.flag !== token) {\r\n        return;\r\n      }\r\n    }\r\n    const { table } = this;\r\n    switch (type) {\r\n      case 's-resize':\r\n        table.css('cursor', `url(${sResize}) 2.5 7.5,auto`);\r\n        return;\r\n      case 'cell':\r\n        table.css('cursor', `url(${cell}) 7.5 7.5,auto`);\r\n        return;\r\n      case 'e-resize':\r\n        table.css('cursor', `url(${eResize}) 7.5 2.5,auto`);\r\n        return;\r\n    }\r\n    table.css('cursor', type);\r\n  }\r\n\r\n  free(flag) {\r\n    if (this.flag === flag) {\r\n      this.flag = null;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\nXTableMousePointer.KEYS = {\r\n  cell: 'cell',\r\n  crosshair: 'crosshair',\r\n  eResize: 'e-resize',\r\n  sResize: 's-resize',\r\n  grab: '-webkit-grab',\r\n  default: 'default',\r\n  rowResize: 'row-resize',\r\n  colResize: 'col-resize',\r\n  pointer: 'pointer',\r\n};\r\n\r\nexport { XTableMousePointer };\r\n","/* global document */\nimport { XScreenCssBorderItem } from '../../xscreen/item/viewborder/XScreenCssBorderItem';\nimport { XEvent } from '../../../../libs/XEvent';\nimport { Constant, cssPrefix } from '../../../../const/Constant';\nimport { RectRange } from '../../tablebase/RectRange';\nimport { Widget } from '../../../../libs/Widget';\nimport { XTableMousePointer } from '../../XTableMousePointer';\nimport { RANGE_OVER_GO } from '../../xscreen/item/viewborder/XScreenStyleBorderItem';\n\nconst SELECT_LOCAL = {\n  LT: Symbol('LT'),\n  L: Symbol('L'),\n  T: Symbol('T'),\n  BR: Symbol('BR'),\n};\n\n/**\n * XSelectItem\n */\nclass XSelectItem extends XScreenCssBorderItem {\n\n  /**\n   * XSelectItem\n   * @param table\n   */\n  constructor(table) {\n    super({ table });\n    this.selectLocal = SELECT_LOCAL.BR;\n    this.display = false;\n    this.border = {};\n    // 当前显示的操作按钮\n    this.activeCorner = null;\n    // 用户选中的区域\n    this.selectRange = null;\n    this.downRange = null;\n    this.moveRange = null;\n    // 上下左右四个区域阴影\n    this.ltElem = new Widget(`${cssPrefix}-x-select-area`);\n    this.brElem = new Widget(`${cssPrefix}-x-select-area`);\n    this.lElem = new Widget(`${cssPrefix}-x-select-area`);\n    this.tElem = new Widget(`${cssPrefix}-x-select-area`);\n    // 上下左右高亮区域\n    this.ltHighLight = new Widget(`${cssPrefix}-x-select-high-light`);\n    this.lHighLight = new Widget(`${cssPrefix}-x-select-high-light`);\n    this.tHighLight = new Widget(`${cssPrefix}-x-select-high-light`);\n    this.brHighLight = new Widget(`${cssPrefix}-x-select-high-light`);\n    // 上下左右4个操作按钮\n    this.ltCorner = new Widget(`${cssPrefix}-x-select-corner`);\n    this.lCorner = new Widget(`${cssPrefix}-x-select-corner`);\n    this.tCorner = new Widget(`${cssPrefix}-x-select-corner`);\n    this.brCorner = new Widget(`${cssPrefix}-x-select-corner`);\n    // 添加区域阴影\n    this.blt.before(this.ltElem);\n    this.bl.before(this.lElem);\n    this.bt.before(this.tElem);\n    this.bbr.before(this.brElem);\n    // 添加上下左右高亮区域\n    this.blt.before(this.ltHighLight);\n    this.bl.before(this.lHighLight);\n    this.bt.before(this.tHighLight);\n    this.bbr.before(this.brHighLight);\n    // 添加操作按钮\n    this.blt.after(this.ltCorner);\n    this.bl.after(this.lCorner);\n    this.bt.after(this.tCorner);\n    this.bbr.after(this.brCorner);\n    // 设置边框类型\n    this.setBorderType('solid');\n  }\n\n  /**\n   * 鼠标移动的区域\n   * @param x\n   * @param y\n   */\n  moveHandle(x, y) {\n    const { table } = this;\n    const {\n      rows, cols,\n    } = table;\n    const { downRange, selectLocal } = this;\n    const merges = table.getTableMerges();\n    const viewRange = table.getScrollView();\n    let { ri, ci } = table.getRiCiByXy(x, y);\n    if (ri === -1) {\n      ri = viewRange.sri;\n    }\n    if (ci === -1) {\n      ci = viewRange.sci;\n    }\n    if (selectLocal === SELECT_LOCAL.LT) {\n      const rect = downRange.union(new RectRange(0, 0, rows.len - 1, cols.len - 1));\n      this.moveRange = downRange.union(rect);\n      this.selectRange = this.moveRange;\n      this.selectLocal = SELECT_LOCAL.LT;\n      return;\n    }\n    if (selectLocal === SELECT_LOCAL.L) {\n      const rect = downRange.union(new RectRange(ri, 0, ri, 0));\n      this.moveRange = downRange.union(rect);\n      this.selectRange = this.moveRange;\n      this.selectLocal = SELECT_LOCAL.L;\n      return;\n    }\n    if (selectLocal === SELECT_LOCAL.T) {\n      const rect = downRange.union(new RectRange(0, ci, 0, ci));\n      this.moveRange = downRange.union(rect);\n      this.selectRange = this.moveRange;\n      this.selectLocal = SELECT_LOCAL.T;\n      return;\n    }\n    const rect = downRange.union(new RectRange(ri, ci, ri, ci));\n    this.moveRange = merges.union(rect);\n    this.selectRange = this.moveRange;\n    this.selectLocal = SELECT_LOCAL.BR;\n  }\n\n  /**\n   * 更新用户选中\n   * 的区域\n   * @param range\n   */\n  setRange(range) {\n    this.selectRange = range;\n    this.selectLocal = SELECT_LOCAL.BR;\n    this.offsetHandle();\n    this.borderHandle();\n    this.cornerHandle();\n  }\n\n  /**\n   * 鼠标按下的区域\n   * @param x\n   * @param y\n   */\n  downHandle(x, y) {\n    const { table } = this;\n    const { rows, cols } = table;\n    const merges = table.getTableMerges();\n    const { ri, ci } = table.getRiCiByXy(x, y);\n    if (ri === -1 && ci === -1) {\n      this.downRange = new RectRange(0, 0, rows.len - 1, cols.len - 1);\n      this.selectRange = this.downRange;\n      this.selectLocal = SELECT_LOCAL.LT;\n      return;\n    }\n    if (ri === -1) {\n      this.downRange = new RectRange(0, ci, rows.len - 1, ci);\n      this.selectRange = this.downRange;\n      this.selectLocal = SELECT_LOCAL.T;\n      return;\n    }\n    if (ci === -1) {\n      this.downRange = new RectRange(ri, 0, ri, cols.len - 1);\n      this.selectRange = this.downRange;\n      this.selectLocal = SELECT_LOCAL.L;\n      return;\n    }\n    this.downRange = merges.getFirstIncludes(ri, ci)\n      || new RectRange(ri, ci, ri, ci);\n    this.selectRange = this.downRange;\n    this.selectLocal = SELECT_LOCAL.BR;\n  }\n\n  /**\n   * 节点已添加\n   * 到屏幕上\n   */\n  onAdd() {\n    const { table } = this;\n    this.bind();\n    this.hide();\n    table.focus.register({ target: this.ltCorner });\n    table.focus.register({ target: this.lCorner });\n    table.focus.register({ target: this.tCorner });\n    table.focus.register({ target: this.brCorner });\n  }\n\n  /**\n   * 解绑事件\n   */\n  unbind() {\n    const { table } = this;\n    XEvent.unbind(table);\n  }\n\n  /**\n   * 绑定事件\n   */\n  bind() {\n    const { table } = this;\n    const {\n      mousePointer, focus,\n    } = table;\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\n      this.offsetHandle();\n      this.borderHandle();\n      this.cornerHandle();\n    });\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\n      this.offsetHandle();\n      this.borderHandle();\n      this.cornerHandle();\n    });\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.SCALE_CHANGE, () => {\n      this.offsetHandle();\n      this.borderHandle();\n      this.cornerHandle();\n    });\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.FIXED_CHANGE, () => {\n      this.offsetHandle();\n      this.borderHandle();\n      this.cornerHandle();\n    });\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.RESIZE_CHANGE, () => {\n      this.offsetHandle();\n      this.borderHandle();\n      this.cornerHandle();\n    });\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\n      if (e1.button !== 0) {\n        return;\n      }\n      const { activate } = focus;\n      const { target } = activate;\n      if (target !== table) {\n        return;\n      }\n      const { x, y } = table.eventXy(e1);\n      this.downHandle(x, y);\n      this.offsetHandle();\n      this.borderHandle();\n      this.cornerHandle();\n      const { selectLocal } = this;\n      switch (selectLocal) {\n        case SELECT_LOCAL.L:\n          mousePointer.lock(XSelectItem);\n          mousePointer.set(XTableMousePointer.KEYS.eResize, XSelectItem);\n          break;\n        case SELECT_LOCAL.T:\n          mousePointer.lock(XSelectItem);\n          mousePointer.set(XTableMousePointer.KEYS.sResize, XSelectItem);\n          break;\n      }\n      table.trigger(Constant.TABLE_EVENT_TYPE.SELECT_DOWN);\n      table.trigger(Constant.TABLE_EVENT_TYPE.SELECT_CHANGE);\n      XEvent.mouseMoveUp(document, (e2) => {\n        const { x, y } = table.eventXy(e2);\n        this.moveHandle(x, y);\n        this.offsetHandle();\n        this.borderHandle();\n        this.cornerHandle();\n        table.trigger(Constant.TABLE_EVENT_TYPE.SELECT_CHANGE);\n      }, () => {\n        switch (selectLocal) {\n          case SELECT_LOCAL.L:\n          case SELECT_LOCAL.T:\n            mousePointer.free(XSelectItem);\n            break;\n        }\n        table.trigger(Constant.TABLE_EVENT_TYPE.SELECT_OVER);\n      });\n    });\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\n      this.offsetHandle();\n      this.borderHandle();\n      this.cornerHandle();\n    });\n  }\n\n  /**\n   * 处理边框\n   * 是否显示\n   */\n  borderHandle() {\n    const { selectRange, display } = this;\n    if (selectRange && display) {\n      this.hideBorder();\n      this.border = this.showBorder(selectRange);\n    }\n  }\n\n  /**\n   * 处理选中区域\n   * 的位置和大小\n   */\n  offsetHandle() {\n    const { selectRange } = this;\n    if (selectRange && this.setDisplay(selectRange)) {\n      this.display = true;\n      this.setSizer(selectRange);\n      this.setLocal(selectRange);\n    } else {\n      this.display = false;\n    }\n  }\n\n  /**\n   * 处理操作按钮\n   * 是否显示\n   */\n  cornerHandle() {\n    const {\n      table, selectRange, selectLocal, display, border,\n    } = this;\n    const {\n      xFixedView,\n    } = table;\n    if (selectRange && display) {\n      const overGo = this.getOverGo(selectRange);\n      this.ltCorner.hide();\n      this.tCorner.hide();\n      this.lCorner.hide();\n      this.brCorner.hide();\n      switch (selectLocal) {\n        case SELECT_LOCAL.LT:\n        case SELECT_LOCAL.L:\n        case SELECT_LOCAL.BR:\n          if (border.bottom === false) {\n            return;\n          }\n      }\n      this.brCorner.removeClass('br-pos');\n      this.lCorner.removeClass('br-pos');\n      this.tCorner.removeClass('br-pos');\n      this.ltCorner.removeClass('br-pos');\n      this.brCorner.removeClass('tr-pos');\n      this.lCorner.removeClass('tr-pos');\n      this.tCorner.removeClass('tr-pos');\n      this.ltCorner.removeClass('tr-pos');\n      this.brCorner.removeClass('bl-pos');\n      this.lCorner.removeClass('bl-pos');\n      this.tCorner.removeClass('bl-pos');\n      this.ltCorner.removeClass('bl-pos');\n      switch (selectLocal) {\n        case SELECT_LOCAL.L:\n          this.brCorner.addClass('bl-pos');\n          this.lCorner.addClass('bl-pos');\n          this.tCorner.addClass('bl-pos');\n          this.ltCorner.addClass('bl-pos');\n          break;\n        case SELECT_LOCAL.T:\n          this.brCorner.addClass('tr-pos');\n          this.lCorner.addClass('tr-pos');\n          this.tCorner.addClass('tr-pos');\n          this.ltCorner.addClass('tr-pos');\n          break;\n        case SELECT_LOCAL.LT:\n        case SELECT_LOCAL.BR:\n          this.brCorner.addClass('br-pos');\n          this.lCorner.addClass('br-pos');\n          this.tCorner.addClass('br-pos');\n          this.ltCorner.addClass('br-pos');\n          break;\n      }\n      if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\n        switch (overGo) {\n          /**\n           * 单个区域\n           */\n          case RANGE_OVER_GO.LT: {\n            this.ltCorner.show();\n            this.tCorner.hide();\n            this.brCorner.hide();\n            this.lCorner.hide();\n            this.activeCorner = this.ltCorner;\n            break;\n          }\n          case RANGE_OVER_GO.T: {\n            this.tCorner.show();\n            this.ltCorner.hide();\n            this.lCorner.hide();\n            this.brCorner.hide();\n            this.activeCorner = this.tCorner;\n            break;\n          }\n          case RANGE_OVER_GO.BR: {\n            this.brCorner.show();\n            this.lCorner.hide();\n            this.ltCorner.hide();\n            this.tCorner.hide();\n            this.activeCorner = this.brCorner;\n            break;\n          }\n          case RANGE_OVER_GO.L: {\n            this.lCorner.show();\n            this.ltCorner.hide();\n            this.tCorner.hide();\n            this.brCorner.hide();\n            this.activeCorner = this.lCorner;\n            break;\n          }\n          /**\n           * 双区域\n           */\n          case RANGE_OVER_GO.LTT: {\n            if (selectLocal === SELECT_LOCAL.L) {\n              this.ltCorner.show();\n              this.tCorner.hide();\n              this.lCorner.hide();\n              this.brCorner.hide();\n              this.activeCorner = this.ltCorner;\n            } else {\n              this.tCorner.show();\n              this.ltCorner.hide();\n              this.lCorner.hide();\n              this.brCorner.hide();\n              this.activeCorner = this.tCorner;\n            }\n            break;\n          }\n          case RANGE_OVER_GO.BRT: {\n            if (selectLocal === SELECT_LOCAL.T) {\n              this.tCorner.show();\n              this.lCorner.hide();\n              this.ltCorner.hide();\n              this.brCorner.hide();\n              this.activeCorner = this.tCorner;\n            } else {\n              this.brCorner.show();\n              this.lCorner.hide();\n              this.ltCorner.hide();\n              this.tCorner.hide();\n              this.activeCorner = this.brCorner;\n            }\n            break;\n          }\n          case RANGE_OVER_GO.BRL: {\n            if (selectLocal === SELECT_LOCAL.L) {\n              this.lCorner.show();\n              this.brCorner.hide();\n              this.ltCorner.hide();\n              this.tCorner.hide();\n              this.activeCorner = this.lCorner;\n            } else {\n              this.brCorner.show();\n              this.lCorner.hide();\n              this.ltCorner.hide();\n              this.tCorner.hide();\n              this.activeCorner = this.brCorner;\n            }\n            break;\n          }\n          case RANGE_OVER_GO.LTL: {\n            if (selectLocal === SELECT_LOCAL.T) {\n              this.ltCorner.show();\n              this.lCorner.hide();\n              this.tCorner.hide();\n              this.brCorner.hide();\n              this.activeCorner = this.ltCorner;\n            } else {\n              this.lCorner.show();\n              this.ltCorner.hide();\n              this.tCorner.hide();\n              this.brCorner.hide();\n              this.activeCorner = this.lCorner;\n            }\n            break;\n          }\n          /**\n           * 所有区域\n           */\n          case RANGE_OVER_GO.ALL: {\n            if (selectLocal === SELECT_LOCAL.T) {\n              this.tCorner.show();\n              this.lCorner.hide();\n              this.ltCorner.hide();\n              this.brCorner.hide();\n              this.activeCorner = this.tCorner;\n            } else if (selectLocal === SELECT_LOCAL.L) {\n              this.lCorner.show();\n              this.brCorner.hide();\n              this.ltCorner.hide();\n              this.tCorner.hide();\n              this.activeCorner = this.lCorner;\n            } else {\n              this.brCorner.show();\n              this.lCorner.hide();\n              this.ltCorner.hide();\n              this.tCorner.hide();\n              this.activeCorner = this.brCorner;\n            }\n            break;\n          }\n        }\n      } else if (xFixedView.hasFixedTop()) {\n        switch (overGo) {\n          /**\n           * 单个区域\n           */\n          case RANGE_OVER_GO.LT: {\n            this.ltCorner.show();\n            this.tCorner.hide();\n            this.brCorner.hide();\n            this.lCorner.hide();\n            this.activeCorner = this.ltCorner;\n            break;\n          }\n          case RANGE_OVER_GO.T: {\n            this.tCorner.show();\n            this.ltCorner.hide();\n            this.lCorner.hide();\n            this.brCorner.hide();\n            this.activeCorner = this.tCorner;\n            break;\n          }\n          case RANGE_OVER_GO.BR: {\n            this.brCorner.show();\n            this.lCorner.hide();\n            this.ltCorner.hide();\n            this.tCorner.hide();\n            this.activeCorner = this.brCorner;\n            break;\n          }\n          case RANGE_OVER_GO.L: {\n            this.lCorner.show();\n            this.ltCorner.hide();\n            this.tCorner.hide();\n            this.brCorner.hide();\n            this.activeCorner = this.lCorner;\n            break;\n          }\n          /**\n           * 双区域\n           */\n          case RANGE_OVER_GO.BRT: {\n            if (selectLocal === SELECT_LOCAL.T) {\n              this.tCorner.show();\n              this.lCorner.hide();\n              this.ltCorner.hide();\n              this.brCorner.hide();\n              this.activeCorner = this.tCorner;\n            } else {\n              this.brCorner.show();\n              this.lCorner.hide();\n              this.ltCorner.hide();\n              this.tCorner.hide();\n              this.activeCorner = this.brCorner;\n            }\n            break;\n          }\n        }\n      } else if (xFixedView.hasFixedLeft()) {\n        switch (overGo) {\n          /**\n           * 单个区域\n           */\n          case RANGE_OVER_GO.LT: {\n            this.ltCorner.show();\n            this.tCorner.hide();\n            this.brCorner.hide();\n            this.lCorner.hide();\n            this.activeCorner = this.ltCorner;\n            break;\n          }\n          case RANGE_OVER_GO.T: {\n            this.tCorner.show();\n            this.ltCorner.hide();\n            this.lCorner.hide();\n            this.brCorner.hide();\n            this.activeCorner = this.tCorner;\n            break;\n          }\n          case RANGE_OVER_GO.BR: {\n            this.brCorner.show();\n            this.lCorner.hide();\n            this.ltCorner.hide();\n            this.tCorner.hide();\n            this.activeCorner = this.brCorner;\n            break;\n          }\n          case RANGE_OVER_GO.L: {\n            this.lCorner.show();\n            this.ltCorner.hide();\n            this.tCorner.hide();\n            this.brCorner.hide();\n            this.activeCorner = this.lCorner;\n            break;\n          }\n          /**\n           * 双区域\n           */\n          case RANGE_OVER_GO.BRL: {\n            if (selectLocal === SELECT_LOCAL.L) {\n              this.lCorner.show();\n              this.brCorner.hide();\n              this.ltCorner.hide();\n              this.tCorner.hide();\n              this.activeCorner = this.lCorner;\n            } else {\n              this.brCorner.show();\n              this.lCorner.hide();\n              this.ltCorner.hide();\n              this.tCorner.hide();\n              this.activeCorner = this.brCorner;\n            }\n            break;\n          }\n        }\n      } else {\n        switch (overGo) {\n          /**\n           * 单个区域\n           */\n          case RANGE_OVER_GO.BR: {\n            this.brCorner.show();\n            this.lCorner.hide();\n            this.ltCorner.hide();\n            this.tCorner.hide();\n            this.activeCorner = this.brCorner;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * 销毁组件\n   */\n  destroy() {\n    super.destroy();\n    this.unbind();\n  }\n\n}\n\nexport {\n  XSelectItem, SELECT_LOCAL,\n};\n","import { Widget } from '../../libs/Widget';\r\nimport { Constant, cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\nimport { DragPanel } from '../dragpanel/DragPanel';\r\nimport { XEvent } from '../../libs/XEvent';\r\n\r\nclass Alert extends Widget {\r\n\r\n  constructor({\r\n    title = '提示',\r\n    message = '',\r\n  }) {\r\n    super(`${cssPrefix}-alert`);\r\n    // 创建 UI\r\n    this.closeEle = h('div', `${cssPrefix}-alert-close`);\r\n    this.titleEle = h('div', `${cssPrefix}-alert-title`);\r\n    this.contentEle = h('div', `${cssPrefix}-alert-content`);\r\n    this.okEle = h('div', `${cssPrefix}-alert-ok`);\r\n    this.buttonsEle = h('div', `${cssPrefix}-alert-buttons`);\r\n    // 显示内容消息\r\n    this.titleEle.html(title);\r\n    this.contentEle.html(message);\r\n    this.okEle.html('确定');\r\n    // 添加UI\r\n    this.buttonsEle.children(this.okEle);\r\n    this.children(this.closeEle);\r\n    this.children(this.titleEle);\r\n    this.children(this.contentEle);\r\n    this.children(this.buttonsEle);\r\n    // 拖拽组件\r\n    this.dragPanel = new DragPanel().children(this);\r\n  }\r\n\r\n  unbind() {\r\n    const { okEle } = this;\r\n    XEvent.unbind(okEle);\r\n  }\r\n\r\n  bind() {\r\n    const { okEle } = this;\r\n    XEvent.bind(okEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  open() {\r\n    const { dragPanel } = this;\r\n    dragPanel.open();\r\n    this.bind();\r\n  }\r\n\r\n  close() {\r\n    const { dragPanel } = this;\r\n    dragPanel.close();\r\n    this.destroy();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.dragPanel.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Alert,\r\n};\r\n","/* global document */\r\nimport { Widget } from '../../libs/Widget';\r\nimport { h } from '../../libs/Element';\r\nimport { cssPrefix } from '../../const/Constant';\r\n\r\nclass Mask extends Widget {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-mask`);\r\n    this.root = h(document.body);\r\n    this.status = false;\r\n    this.css('position', 'absolute');\r\n    this.css('background', 'rgba(0,0,0,0.3)');\r\n  }\r\n\r\n  setLeft(left) {\r\n    this.offset({ left });\r\n    return this;\r\n  }\r\n\r\n  setTop(top) {\r\n    this.offset({ top });\r\n    return this;\r\n  }\r\n\r\n  setHeight(height) {\r\n    this.offset({ height });\r\n    return this;\r\n  }\r\n\r\n  setWidth(width) {\r\n    this.offset({ width });\r\n    return this;\r\n  }\r\n\r\n  setOpacity(val) {\r\n    this.css('opacity', val);\r\n    return this;\r\n  }\r\n\r\n  open() {\r\n    if (this.status === false) {\r\n      this.root.children(this);\r\n      this.status = true;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  close() {\r\n    if (this.status === true) {\r\n      this.root.remove(this);\r\n      this.status = false;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  setRoot(element) {\r\n    if (element.el) {\r\n      element = h(element.el);\r\n    } else {\r\n      element = h(element);\r\n    }\r\n    this.root = element;\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Mask,\r\n};\r\n","import { ELContextMenuItem } from '../contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\n\r\nclass OrderAZ extends ELContextMenuItem {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-filter-data-menu-item ${cssPrefix}-order-az`);\r\n    this.titleElement = h('div', `${cssPrefix}-filter-data-menu-item-title`);\r\n    this.titleElement.text('以A->Z的顺序排序');\r\n    this.children(this.titleElement);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  OrderAZ,\r\n};\r\n","import { ELContextMenuItem } from '../contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\n\r\nclass OrderZA extends ELContextMenuItem {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-filter-data-menu-item ${cssPrefix}-order-za`);\r\n    this.titleElement = h('div', `${cssPrefix}-filter-data-menu-item-title`);\r\n    this.titleElement.text('以Z->A的顺序排序');\r\n    this.children(this.titleElement);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  OrderZA,\r\n};\r\n","import { ELContextMenu } from '../../contextmenu/ELContextMenu';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XEvent } from '../../../libs/XEvent';\r\n\r\nclass SelectContextMenu extends ELContextMenu {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-form-select-menu`, PlainUtils.copy({\r\n      autoHeight: true,\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [];\r\n    this.elPopUp.offset({\r\n      width: 200,\r\n    });\r\n  }\r\n\r\n  unbind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.unbind(item);\r\n    });\r\n  }\r\n\r\n  bind(item) {\r\n    XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdate(item);\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  addItem(item) {\r\n    this.bind(item);\r\n    this.items.push(item);\r\n    this.children(item);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  SelectContextMenu,\r\n};\r\n","import { ELContextMenuItem } from '../../contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { h } from '../../../libs/Element';\r\n\r\nclass SelectContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor({\r\n    text = '', value = '',\r\n  }) {\r\n    super(`${cssPrefix}-form-select-menu-item`);\r\n    this.value = value;\r\n    this.text = text;\r\n    this.textEle = h('div', `${cssPrefix}-form-select-menu-item-title`);\r\n    this.textEle.text(text);\r\n    this.children(this.textEle);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  SelectContextMenuItem,\r\n};\r\n","import { Widget } from '../../../libs/Widget';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { XEvent } from '../../../libs/XEvent';\r\nimport { h } from '../../../libs/Element';\r\nimport { ELContextMenuDivider } from '../../contextmenu/ELContextMenuDivider';\r\nimport { SelectContextMenu } from './SelectContextMenu';\r\nimport { SelectContextMenuItem } from './SelectContextMenuItem';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\n/**\r\n * Select\r\n */\r\nclass Select extends Widget {\r\n\r\n  /**\r\n   * Select\r\n   */\r\n  constructor() {\r\n    super(`${cssPrefix}-form-select`);\r\n    this.selectValue = PlainUtils.Nul;\r\n    // 文本和图标\r\n    this.selectText = h('div', `${cssPrefix}-form-select-text`);\r\n    this.selectIcon = h('div', `${cssPrefix}-form-select-icon`);\r\n    this.children(this.selectText);\r\n    this.children(this.selectIcon);\r\n    // 上下文菜单\r\n    this.contextMenu = new SelectContextMenu({\r\n      el: this,\r\n      onUpdate: (item) => {\r\n        const { value } = item;\r\n        this.setSelect(value);\r\n      },\r\n    });\r\n    this.bind();\r\n  }\r\n\r\n  /**\r\n   * 卸载事件\r\n   */\r\n  unbind() {\r\n    XEvent.unbind(this);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件\r\n   */\r\n  bind() {\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      if (this.contextMenu.isClose()) {\r\n        this.contextMenu.open();\r\n      } else {\r\n        this.contextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 获取当前选择的值\r\n   * @returns {null}\r\n   */\r\n  getValue() {\r\n    return this.selectValue;\r\n  }\r\n\r\n  /**\r\n   * 设置选择的值\r\n   * @param value\r\n   */\r\n  setSelect(value) {\r\n    const { contextMenu, selectText } = this;\r\n    const { items } = contextMenu;\r\n    const find = items.find(item => item.value && item.value === value);\r\n    if (find) {\r\n      selectText.html(`&nbsp;${find.text}`);\r\n      this.selectValue = find.value;\r\n      this.trigger(Constant.FORM_EVENT_TYPE.FORM_SELECT_CHANGE, {\r\n        item: find,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 添加新的选项\r\n   * @param text\r\n   * @param value\r\n   */\r\n  addValue({\r\n    text, value,\r\n  }) {\r\n    const item = new SelectContextMenuItem({ text, value });\r\n    this.contextMenu.addItem(item);\r\n  }\r\n\r\n  /**\r\n   * 获取分隔线\r\n   */\r\n  addDivider() {\r\n    const item = new ELContextMenuDivider();\r\n    this.contextMenu.addItem(item);\r\n  }\r\n\r\n  /**\r\n   * 组件销毁\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.contextMenu.close();\r\n    this.contextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Select,\r\n};\r\n","import { Widget } from '../../../libs/Widget';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { h } from '../../../libs/Element';\r\nimport { XEvent } from '../../../libs/XEvent';\r\n\r\nclass PlainInput extends Widget {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-form-plain-input`);\r\n    this.inputWrapEle = h('div', `${cssPrefix}-form-input-wrap`);\r\n    this.inputInnerEle = h('div', `${cssPrefix}-form-input-inner`);\r\n    this.inputEle = h('input', `${cssPrefix}-form-input-source`);\r\n    this.inputInnerEle.children(this.inputEle);\r\n    this.inputWrapEle.children(this.inputInnerEle);\r\n    this.children(this.inputWrapEle);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { inputEle } = this;\r\n    XEvent.unbind(inputEle);\r\n  }\r\n\r\n  bind() {\r\n    const { inputEle } = this;\r\n    XEvent.bind(inputEle, Constant.SYSTEM_EVENT_TYPE.INPUT, () => {\r\n      this.setValue(inputEle.val());\r\n    });\r\n  }\r\n\r\n  setValue(value) {\r\n    this.inputEle.val(value);\r\n    this.trigger(Constant.FORM_EVENT_TYPE.PLAIN_INPUT_CHANGE, {\r\n      value: this.inputEle.val(),\r\n    });\r\n  }\r\n\r\n  getValue() {\r\n    return this.inputEle.val();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  PlainInput,\r\n};\r\n","import { ELContextMenuItem } from '../contextmenu/ELContextMenuItem';\r\nimport { Constant, cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\nimport { Select } from '../form/select/Select';\r\nimport { XEvent } from '../../libs/XEvent';\r\nimport { PlainInput } from '../form/input/PlainInput';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\n\r\n/**\r\n * IFFilter\r\n */\r\nclass IFFilter extends ELContextMenuItem {\r\n\r\n  /**\r\n   * IFFilter\r\n   */\r\n  constructor() {\r\n    super(`${cssPrefix}-filter-data-menu-item ${cssPrefix}-if-filter`);\r\n    this.status = false;\r\n    this.type = IFFilter.IF_TYPE.NOT;\r\n    this.value = PlainUtils.EMPTY;\r\n    // 标题\r\n    this.titleEle = h('div', `${cssPrefix}-if-filter-title`);\r\n    this.titleTextEle = h('span', `${cssPrefix}-if-filter-title-text`);\r\n    this.titleIconEle = h('span', `${cssPrefix}-if-filter-title-icon`);\r\n    this.titleTextEle.text('条件过滤');\r\n    this.titleEle.children(this.titleIconEle);\r\n    this.titleEle.children(this.titleTextEle);\r\n    this.children(this.titleEle);\r\n    // 条件类型\r\n    this.selectEleBox = h('div', `${cssPrefix}-if-filter-select-box`);\r\n    this.selectEle = new Select();\r\n    this.selectEleBox.children(this.selectEle);\r\n    this.children(this.selectEleBox);\r\n    // 条件值\r\n    this.valueInputEleBox = h('div', `${cssPrefix}-if-filter-value-input-box`);\r\n    this.valueInput = new PlainInput();\r\n    this.valueInputEleBox.children(this.valueInput);\r\n    this.children(this.valueInputEleBox);\r\n    // 搜索类型\r\n    this.selectEle.addValue({ text: '无', value: IFFilter.IF_TYPE.NOT });\r\n    this.selectEle.addDivider();\r\n    this.selectEle.addValue({ text: '为空', value: IFFilter.IF_TYPE.CT_EMPTY });\r\n    this.selectEle.addValue({ text: '不为空', value: IFFilter.IF_TYPE.CT_NOT_EMPTY });\r\n    this.selectEle.addDivider();\r\n    this.selectEle.addValue({ text: '文本包含', value: IFFilter.IF_TYPE.STR_INCLUDE });\r\n    this.selectEle.addValue({ text: '文本不包含', value: IFFilter.IF_TYPE.STR_NOT_INCLUDE });\r\n    this.selectEle.addValue({ text: '文本开头', value: IFFilter.IF_TYPE.STR_START });\r\n    this.selectEle.addValue({ text: '文本结尾', value: IFFilter.IF_TYPE.STR_END });\r\n    this.selectEle.addValue({ text: '文本相符', value: IFFilter.IF_TYPE.STR_EQ });\r\n    this.selectEle.addDivider();\r\n    this.selectEle.addValue({ text: '日期为', value: IFFilter.IF_TYPE.DAT_EQ });\r\n    this.selectEle.addValue({ text: '日期超前', value: IFFilter.IF_TYPE.DAT_BEFORE });\r\n    this.selectEle.addValue({ text: '日期滞后', value: IFFilter.IF_TYPE.DAT_AFTER });\r\n    this.selectEle.addDivider();\r\n    this.selectEle.addValue({ text: '数字大于', value: IFFilter.IF_TYPE.NUM_BEFORE });\r\n    this.selectEle.addValue({ text: '数字大于等于', value: IFFilter.IF_TYPE.NUM_BEFORE_EQ });\r\n    this.selectEle.addValue({ text: '数字小于', value: IFFilter.IF_TYPE.NUM_AFTER });\r\n    this.selectEle.addValue({ text: '数字小于等于', value: IFFilter.IF_TYPE.NUM_AFTER_EQ });\r\n    this.selectEle.addValue({ text: '数字等于', value: IFFilter.IF_TYPE.NUM_EQ });\r\n    this.selectEle.addValue({ text: '数字不等于', value: IFFilter.IF_TYPE.NUM_NOT_EQ });\r\n    this.removeClass('hover');\r\n    this.bind();\r\n    this.hide();\r\n    this.selectEle.setSelect(IFFilter.IF_TYPE.NOT);\r\n  }\r\n\r\n  /**\r\n   * 设置筛选条件\r\n   * @param value\r\n   */\r\n  setValue(value) {\r\n    if (PlainUtils.isBlank(value)) {\r\n      value = PlainUtils.EMPTY;\r\n    }\r\n    this.valueInput.setValue(value);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件\r\n   * 处理程序\r\n   */\r\n  bind() {\r\n    const { titleEle, selectEle, valueInput } = this;\r\n    XEvent.bind(selectEle, Constant.FORM_EVENT_TYPE.FORM_SELECT_CHANGE, (e) => {\r\n      const { detail } = e;\r\n      const { item } = detail;\r\n      const { value } = item;\r\n      this.type = value;\r\n      this.switchInput();\r\n    });\r\n    XEvent.bind(valueInput, Constant.FORM_EVENT_TYPE.PLAIN_INPUT_CHANGE, (e) => {\r\n      const { detail } = e;\r\n      const { value } = detail;\r\n      this.value = value;\r\n    });\r\n    XEvent.bind(titleEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      if (this.status) {\r\n        this.hide();\r\n      } else {\r\n        this.show();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 卸载事件\r\n   * 处理程序\r\n   */\r\n  unbind() {\r\n    const { titleEle, selectEle } = this;\r\n    XEvent.unbind(titleEle);\r\n    XEvent.unbind(selectEle);\r\n  }\r\n\r\n  /**\r\n   * 设置条件类型\r\n   * @param type\r\n   */\r\n  setType(type) {\r\n    if (PlainUtils.isBlank(type)) {\r\n      type = IFFilter.IF_TYPE.NOT;\r\n    }\r\n    this.selectEle.setSelect(type);\r\n  }\r\n\r\n  /**\r\n   * 切换值输入\r\n   */\r\n  switchInput() {\r\n    const { type, valueInputEleBox } = this;\r\n    valueInputEleBox.hide();\r\n    switch (type) {\r\n      case IFFilter.IF_TYPE.STR_NOT_INCLUDE:\r\n      case IFFilter.IF_TYPE.STR_INCLUDE:\r\n      case IFFilter.IF_TYPE.STR_EQ:\r\n      case IFFilter.IF_TYPE.STR_START:\r\n      case IFFilter.IF_TYPE.STR_END:\r\n      case IFFilter.IF_TYPE.DAT_EQ:\r\n      case IFFilter.IF_TYPE.DAT_BEFORE:\r\n      case IFFilter.IF_TYPE.DAT_AFTER:\r\n      case IFFilter.IF_TYPE.NUM_BEFORE:\r\n      case IFFilter.IF_TYPE.NUM_BEFORE_EQ:\r\n      case IFFilter.IF_TYPE.NUM_AFTER:\r\n      case IFFilter.IF_TYPE.NUM_AFTER_EQ:\r\n      case IFFilter.IF_TYPE.NUM_EQ:\r\n      case IFFilter.IF_TYPE.NUM_NOT_EQ:\r\n        valueInputEleBox.show();\r\n        break;\r\n      default:\r\n        valueInputEleBox.hide();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取条件类型\r\n   */\r\n  getType() {\r\n    return this.type;\r\n  }\r\n\r\n  /**\r\n   * 获取筛选条件\r\n   */\r\n  getValue() {\r\n    return this.value;\r\n  }\r\n\r\n  /**\r\n   * 隐藏条件搜索\r\n   * @returns {IFFilter}\r\n   */\r\n  hide() {\r\n    this.titleIconEle.removeClass('active');\r\n    this.status = false;\r\n    this.selectEleBox.hide();\r\n    this.valueInputEleBox.hide();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 显示条件搜索\r\n   * @returns {IFFilter}\r\n   */\r\n  show() {\r\n    const { type } = this;\r\n    this.titleIconEle.addClass('active');\r\n    this.status = true;\r\n    this.selectEleBox.show();\r\n    this.setType(type);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 是否符合筛选条件\r\n   * @param type\r\n   * @param value\r\n   */\r\n  qualified(type, value) {\r\n    switch (type) {\r\n      case IFFilter.IF_TYPE.NOT: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.CT_NOT_EMPTY: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.CT_EMPTY: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.STR_NOT_INCLUDE: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.STR_INCLUDE: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.STR_EQ: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.STR_START: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.STR_END: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.DAT_EQ: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.DAT_BEFORE: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.DAT_AFTER: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.NUM_BEFORE: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.NUM_BEFORE_EQ: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.NUM_AFTER: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.NUM_AFTER_EQ: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.NUM_EQ: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.NUM_NOT_EQ: {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.selectEle.destroy();\r\n  }\r\n\r\n}\r\nIFFilter.IF_TYPE = {\r\n  NOT: 1,\r\n  CT_NOT_EMPTY: 2,\r\n  CT_EMPTY: 3,\r\n  STR_NOT_INCLUDE: 4,\r\n  STR_INCLUDE: 5,\r\n  STR_EQ: 6,\r\n  STR_START: 7,\r\n  STR_END: 8,\r\n  DAT_EQ: 9,\r\n  DAT_BEFORE: 10,\r\n  DAT_AFTER: 11,\r\n  NUM_BEFORE: 12,\r\n  NUM_BEFORE_EQ: 13,\r\n  NUM_AFTER: 14,\r\n  NUM_AFTER_EQ: 15,\r\n  NUM_EQ: 16,\r\n  NUM_NOT_EQ: 17,\r\n};\r\n\r\nexport {\r\n  IFFilter,\r\n};\r\n","import { h } from '../../../libs/Element';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { Widget } from '../../../libs/Widget';\r\nimport { XEvent } from '../../../libs/XEvent';\r\n\r\nclass SearchInput extends Widget {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-form-search-input`);\r\n    this.inputWrapEle = h('div', `${cssPrefix}-form-input-wrap`);\r\n    this.inputInnerEle = h('div', `${cssPrefix}-form-input-inner`);\r\n    this.inputEle = h('input', `${cssPrefix}-form-input-source`);\r\n    this.searchEle = h('div', `${cssPrefix}-form-input-search`);\r\n    this.inputInnerEle.children(this.inputEle);\r\n    this.inputWrapEle.children(this.inputInnerEle);\r\n    this.children(this.inputWrapEle);\r\n    this.children(this.searchEle);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { searchEle, inputEle } = this;\r\n    XEvent.unbind(searchEle);\r\n    XEvent.unbind(inputEle);\r\n  }\r\n\r\n  bind() {\r\n    const { searchEle, inputEle } = this;\r\n    XEvent.bind(searchEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.setValue(inputEle.val());\r\n    });\r\n    XEvent.bind(inputEle, Constant.SYSTEM_EVENT_TYPE.INPUT, () => {\r\n      this.setValue(inputEle.val());\r\n    });\r\n  }\r\n\r\n  getValue() {\r\n    const { inputEle } = this;\r\n    return inputEle.val();\r\n  }\r\n\r\n  setValue(value) {\r\n    const { inputEle } = this;\r\n    inputEle.val(value);\r\n    this.trigger(Constant.FORM_EVENT_TYPE.SEARCH_INPUT_CHANGE, {\r\n      value: inputEle.val(),\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  SearchInput,\r\n};\r\n","import { ELContextMenuItem } from '../../contextmenu/ELContextMenuItem';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { h } from '../../../libs/Element';\r\nimport { SearchInput } from '../../form/input/SearchInput';\r\nimport { w } from '../../../libs/Widget';\r\nimport { XEvent } from '../../../libs/XEvent';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\n/**\r\n * ValueFilter\r\n */\r\nclass ValueFilter extends ELContextMenuItem {\r\n\r\n  /**\r\n   * ValueFilter\r\n   */\r\n  constructor() {\r\n    super(`${cssPrefix}-filter-data-menu-item ${cssPrefix}-value-filter`);\r\n    this.filterExp = null;\r\n    this.items = [];\r\n    this.filters = [];\r\n    this.status = true;\r\n    this.value = PlainUtils.EMPTY;\r\n    // 值过滤标题\r\n    this.titleEle = h('div', `${cssPrefix}-value-filter-title`);\r\n    this.titleTextEle = h('span', `${cssPrefix}-value-filter-title-text`);\r\n    this.titleIconEle = h('span', `${cssPrefix}-value-filter-title-icon`);\r\n    this.titleTextEle.text('按值过滤');\r\n    this.titleEle.children(this.titleIconEle);\r\n    this.titleEle.children(this.titleTextEle);\r\n    this.children(this.titleEle);\r\n    // 操作按钮\r\n    this.optionBoxEle = h('div', `${cssPrefix}-value-filter-option-box`);\r\n    this.selectEle = h('div', `${cssPrefix}-value-filter-option-select`);\r\n    this.flagEle = h('div', `${cssPrefix}-value-filter-option-flag`);\r\n    this.clearEle = h('div', `${cssPrefix}-value-filter-option-clear`);\r\n    this.clearEle.text('清空');\r\n    this.flagEle.html('&nbsp;-&nbsp;');\r\n    this.selectEle.text('全选');\r\n    this.optionBoxEle.children(this.selectEle);\r\n    this.optionBoxEle.children(this.flagEle);\r\n    this.optionBoxEle.children(this.clearEle);\r\n    this.children(this.optionBoxEle);\r\n    // 搜索框\r\n    this.searchBoxEle = h('div', `${cssPrefix}-value-filter-input-box`);\r\n    this.searchInput = new SearchInput();\r\n    this.searchBoxEle.children(this.searchInput);\r\n    this.children(this.searchBoxEle);\r\n    // 条目盒子\r\n    this.itemsBox = h('div', `${cssPrefix}-value-filter-items-box`);\r\n    this.children(this.itemsBox);\r\n    // 事件处理\r\n    this.hide();\r\n    this.bind();\r\n    this.removeClass('hover');\r\n  }\r\n\r\n  /**\r\n   * 卸载事件\r\n   */\r\n  unbind() {\r\n    const { titleEle, selectEle, clearEle, searchInput } = this;\r\n    XEvent.unbind(clearEle);\r\n    XEvent.unbind(titleEle);\r\n    XEvent.unbind(selectEle);\r\n    XEvent.unbind(searchInput);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件\r\n   */\r\n  bind() {\r\n    const { titleEle, itemsBox, selectEle, clearEle, searchInput } = this;\r\n    const clazz = `${cssPrefix}-value-filter-item`;\r\n    XEvent.bind(selectEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.selectAll();\r\n    });\r\n    XEvent.bind(titleEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      if (this.status) {\r\n        this.hide();\r\n      } else {\r\n        this.show();\r\n      }\r\n    });\r\n    XEvent.bind(itemsBox, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { items } = this;\r\n      const { target } = e;\r\n      const ele = w(target).closestClass(clazz);\r\n      if (ele) {\r\n        const index = ele.attr(`${cssPrefix}-value-filter-item-index`);\r\n        const item = items[index];\r\n        item.setStatus(!item.status);\r\n      }\r\n    });\r\n    XEvent.bind(clearEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.clearAll();\r\n    });\r\n    XEvent.bind(searchInput, Constant.FORM_EVENT_TYPE.SEARCH_INPUT_CHANGE, (e) => {\r\n      const { detail } = e;\r\n      const { value } = detail;\r\n      if (!PlainUtils.isBlank(value)) {\r\n        this.filterExp = new RegExp(`.?${value}.?`);\r\n      } else {\r\n        this.filterExp = null;\r\n      }\r\n      this.value = value;\r\n      this.filterItems();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 添加单项\r\n   * @param valueItem\r\n   */\r\n  addItem(valueItem) {\r\n    valueItem.setIndex(this.items.length);\r\n    this.items.push(valueItem);\r\n    this.itemsBox.children(valueItem);\r\n  }\r\n\r\n  /**\r\n   * 过滤筛选项\r\n   */\r\n  filterItems() {\r\n    const { filterExp, items, itemsBox } = this;\r\n    const filters = [];\r\n    itemsBox.empty();\r\n    if (filterExp) {\r\n      // 筛选符合条件的元素\r\n      items.forEach((item) => {\r\n        const { text } = item;\r\n        if (filterExp.test(text)) {\r\n          filters.push(item);\r\n        }\r\n      });\r\n      // 显示筛选内容\r\n      filters.forEach((item) => {\r\n        itemsBox.children(item);\r\n      });\r\n    } else {\r\n      items.forEach((item) => {\r\n        itemsBox.children(item);\r\n      });\r\n    }\r\n    this.filters = filters;\r\n  }\r\n\r\n  /**\r\n   * 设置搜索值\r\n   * @param value\r\n   */\r\n  setValue(value) {\r\n    const { searchInput } = this;\r\n    if (PlainUtils.isBlank(value)) {\r\n      value = PlainUtils.EMPTY;\r\n    }\r\n    searchInput.setValue(value);\r\n  }\r\n\r\n  /**\r\n   * 获取搜索值\r\n   */\r\n  getValue() {\r\n    return this.value;\r\n  }\r\n\r\n  /**\r\n   * 获取选中的项目\r\n   */\r\n  getSelectItems() {\r\n    const { items, filters } = this;\r\n    const selectItems = [];\r\n    if (filters.length > 0) {\r\n      filters.forEach((item) => {\r\n        if (item.status) {\r\n          selectItems.push(item);\r\n        }\r\n      });\r\n    } else {\r\n      items.forEach((item) => {\r\n        if (item.status) {\r\n          selectItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return selectItems;\r\n  }\r\n\r\n  /**\r\n   * 显示控件\r\n   */\r\n  show() {\r\n    this.titleIconEle.addClass('active');\r\n    this.status = true;\r\n    this.optionBoxEle.show();\r\n    this.searchBoxEle.show();\r\n    this.itemsBox.show();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 隐藏控件\r\n   */\r\n  hide() {\r\n    this.titleIconEle.removeClass('active');\r\n    this.status = false;\r\n    this.optionBoxEle.hide();\r\n    this.searchBoxEle.hide();\r\n    this.itemsBox.hide();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 选中所有子项\r\n   */\r\n  selectAll() {\r\n    const { items } = this;\r\n    items.forEach((item) => {\r\n      item.setStatus(true);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 清除所有子项\r\n   */\r\n  clearAll() {\r\n    const { items } = this;\r\n    items.forEach((item) => {\r\n      item.setStatus(false);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 清空内容\r\n   */\r\n  emptyAll() {\r\n    this.itemsBox.empty();\r\n    this.items = [];\r\n  }\r\n\r\n  /**\r\n   * 是否符合筛选条件\r\n   * @param items\r\n   */\r\n  qualified(items) {\r\n\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.searchInput.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  ValueFilter,\r\n};\r\n","import { Constant, cssPrefix } from '../../const/Constant';\r\nimport { ELContextMenu } from '../contextmenu/ELContextMenu';\r\nimport { OrderAZ } from './OrderAZ';\r\nimport { OrderZA } from './OrderZA';\r\nimport { IFFilter } from './IFFilter';\r\nimport { ValueFilter } from './valuefilter/ValueFilter';\r\nimport { h } from '../../libs/Element';\r\nimport { ELContextMenuDivider } from '../contextmenu/ELContextMenuDivider';\r\nimport { XEvent } from '../../libs/XEvent';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { ElPopUp } from '../elpopup/ElPopUp';\r\n\r\nclass FilterData extends ELContextMenu {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-filter-data-menu`, PlainUtils.copy({\r\n      ok: () => {},\r\n      no: () => {},\r\n    }, options));\r\n    this.valueFilter = new ValueFilter();\r\n    this.ifFilter = new IFFilter();\r\n    this.orderAz = new OrderAZ();\r\n    this.orderZa = new OrderZA();\r\n    this.okEle = h('div', `${cssPrefix}-filter-data-menu-button ${cssPrefix}-filter-data-menu-ok`);\r\n    this.noEle = h('div', `${cssPrefix}-filter-data-menu-button ${cssPrefix}-filter-data-menu-no`);\r\n    this.children(this.orderAz);\r\n    this.children(this.orderZa);\r\n    this.children(new ELContextMenuDivider());\r\n    this.children(this.ifFilter);\r\n    this.children(this.valueFilter);\r\n    this.children(new ELContextMenuDivider());\r\n    this.children(this.noEle);\r\n    this.children(this.okEle);\r\n    this.okEle.html('确定');\r\n    this.noEle.html('取消');\r\n    this.okHandle = () => {\r\n      const { ifFilter, valueFilter } = this;\r\n      const valueFilterItems = valueFilter.getSelectItems();\r\n      const valueFilterValue = valueFilter.getValue();\r\n      const ifFilterType = ifFilter.getType();\r\n      const ifFilterValue = ifFilter.getValue();\r\n      this.options.ok({\r\n        valueFilterItems, valueFilterValue, ifFilterType, ifFilterValue,\r\n      });\r\n      this.close();\r\n    };\r\n    this.noHandle = () => {\r\n      this.options.no();\r\n      this.close();\r\n    };\r\n    this.filterDataHandle = () => {\r\n      ElPopUp.closeAll([this.elPopUp]);\r\n    };\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.okEle);\r\n    XEvent.unbind(this.noEle);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.okEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, this.okHandle);\r\n    XEvent.bind(this.noEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, this.noHandle);\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, this.filterDataHandle);\r\n  }\r\n\r\n  open() {\r\n    super.open();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.valueFilter.destroy();\r\n    this.ifFilter.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FilterData,\r\n};\r\n","import { Widget } from '../../../libs/Widget';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { h } from '../../../libs/Element';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\nclass ValueItem extends Widget {\r\n\r\n  constructor({\r\n    text = PlainUtils.EMPTY,\r\n    index = -1,\r\n    status = false,\r\n  }) {\r\n    super(`${cssPrefix}-value-filter-item`);\r\n    this.text = text;\r\n    this.status = status;\r\n    this.index = index;\r\n    this.iconEle = h('div', `${cssPrefix}-value-filter-item-icon`);\r\n    this.textEle = h('div', `${cssPrefix}-value-filter-item-text`);\r\n    this.textEle.text(text);\r\n    this.attr('title', text);\r\n    this.children(this.iconEle);\r\n    this.children(this.textEle);\r\n    this.setIndex(index);\r\n    this.setStatus(status);\r\n  }\r\n\r\n  setStatus(status) {\r\n    this.status = status;\r\n    if (this.status) {\r\n      this.iconEle.css('opacity', 1);\r\n    } else {\r\n      this.iconEle.css('opacity', 0);\r\n    }\r\n  }\r\n\r\n  setIndex(index) {\r\n    this.index = index;\r\n    this.attr(`${cssPrefix}-value-filter-item-index`, `${this.index}`);\r\n  }\r\n\r\n  equals(item) {\r\n    return this.text === item.text;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  ValueItem,\r\n};\r\n","import { XSelectItem } from '../xselect/XSelectItem';\r\nimport { PlainUtils } from '../../../../utils/PlainUtils';\r\nimport { RectRange } from '../../tablebase/RectRange';\r\nimport { Widget } from '../../../../libs/Widget';\r\nimport { Constant, cssPrefix } from '../../../../const/Constant';\r\nimport { XEvent } from '../../../../libs/XEvent';\r\nimport { Alert } from '../../../../component/alert/Alert';\r\nimport { XScreenCssBorderItem } from '../../xscreen/item/viewborder/XScreenCssBorderItem';\r\nimport darkFilter from '../../../../../assets/svg/filter-dark.svg';\r\nimport { XTableMousePointer } from '../../XTableMousePointer';\r\nimport { XIcon } from '../../xicon/XIcon';\r\nimport { Mask } from '../../../../component/mask/Mask';\r\nimport { XDraw } from '../../../../canvas/XDraw';\r\nimport { FilterData } from '../../../../component/filterdata/FilterData';\r\nimport { ElPopUp } from '../../../../component/elpopup/ElPopUp';\r\nimport { ValueItem } from '../../../../component/filterdata/valuefilter/ValueItem';\r\n\r\n/**\r\n * XFilter\r\n */\r\nclass XFilter extends XScreenCssBorderItem {\r\n\r\n  /**\r\n   * XFilter\r\n   * @param table\r\n   */\r\n  constructor(table) {\r\n    super({ table });\r\n    this.display = false;\r\n    this.icons = [];\r\n    this.selectRange = null;\r\n    this.activeIcon = null;\r\n    this.mask = new Mask().setRoot(table);\r\n    this.filter = new FilterData({\r\n      el: this.mask,\r\n      ok: ({\r\n        valueFilterItems, valueFilterValue, ifFilterType, ifFilterValue,\r\n      }) => {\r\n        const { activeIcon } = this;\r\n        activeIcon.valueFilterItems = valueFilterItems;\r\n        activeIcon.valueFilterValue = valueFilterValue;\r\n        activeIcon.ifFilterType = ifFilterType;\r\n        activeIcon.ifFilterValue = ifFilterValue;\r\n        this.filterFoldRow();\r\n      },\r\n    });\r\n    this.flt = new Widget(`${cssPrefix}-x-filter ${cssPrefix}-x-filter-lt`);\r\n    this.ft = new Widget(`${cssPrefix}-x-filter ${cssPrefix}-x-filter-t`);\r\n    this.fbr = new Widget(`${cssPrefix}-x-filter ${cssPrefix}-x-filter-br`);\r\n    this.fl = new Widget(`${cssPrefix}-x-filter ${cssPrefix}-x-filter-l`);\r\n    this.blt.children(this.flt);\r\n    this.bl.children(this.fl);\r\n    this.bt.children(this.ft);\r\n    this.bbr.children(this.fbr);\r\n    this.setBorderColor('#0071cf');\r\n    this.bind();\r\n  }\r\n\r\n  /**\r\n   * 元素添加监听\r\n   */\r\n  onAdd() {\r\n    super.onAdd();\r\n  }\r\n\r\n  /**\r\n   * 卸载绑定事件\r\n   */\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件监听\r\n   */\r\n  bind() {\r\n    const { table } = this;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.RESIZE_CHANGE, () => {\r\n      if (this.display) {\r\n        this.xFilterOffset();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\r\n      if (this.display) {\r\n        ElPopUp.closeAll();\r\n        this.xFilterOffset();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.RENDER, () => {\r\n      if (this.display) {\r\n        this.xFilterOffset();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 创建过滤小图标\r\n   */\r\n  createFilterIcon() {\r\n    const { selectRange } = this;\r\n    const { table } = this;\r\n    const { icons } = this;\r\n    if (selectRange) {\r\n      const { top } = selectRange.brink();\r\n      const { xIconBuilder, xIteratorBuilder } = table;\r\n      const style = table.getXTableStyle();\r\n      const { fixedCellIcon } = style;\r\n      const { mousePointer } = table;\r\n      top.each(xIteratorBuilder, (ri, ci) => {\r\n        const icon = xIconBuilder.build({\r\n          image: darkFilter,\r\n          offset: {\r\n            x: -2,\r\n            y: -2,\r\n          },\r\n          height: 18,\r\n          width: 18,\r\n          vertical: XIcon.ICON_VERTICAL.BOTTOM,\r\n        });\r\n        const item = { ri, ci, icon };\r\n        icon.setOnEnter((event) => {\r\n          const { position } = event;\r\n          const cssHeight = XDraw.styleTransformCssPx(position.height);\r\n          const cssWidth = XDraw.styleTransformCssPx(position.width);\r\n          const cssLeft = XDraw.styleTransformCssPx(position.x);\r\n          const cssTop = XDraw.styleTransformCssPx(position.y);\r\n          this.mask.setLeft(cssLeft)\r\n            .setTop(cssTop)\r\n            .setWidth(cssWidth)\r\n            .setHeight(cssHeight)\r\n            .open();\r\n        });\r\n        icon.setOnDown((event) => {\r\n          const { native } = event;\r\n          this.activeIcon = item;\r\n          this.filterOpen();\r\n          native.stopPropagation();\r\n        });\r\n        icon.setOnMove(() => {\r\n          mousePointer.set(XTableMousePointer.KEYS.pointer, XFilter);\r\n        });\r\n        icon.setOnLeave(() => {\r\n          this.mask.close();\r\n          mousePointer.free(XFilter);\r\n        });\r\n        fixedCellIcon.addOrNewCell(ri, ci, icon);\r\n        icons.push(item);\r\n      });\r\n      table.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清除过滤小图标\r\n   */\r\n  clearFilterIcon() {\r\n    const { table, selectRange } = this;\r\n    if (selectRange) {\r\n      const style = table.getXTableStyle();\r\n      const { fixedCellIcon } = style;\r\n      this.icons.forEach((item) => {\r\n        const { ri, ci, icon } = item;\r\n        fixedCellIcon.remove(ri, ci, icon);\r\n      });\r\n      this.icons = [];\r\n      table.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 处理元素的\r\n   * 显示,大小,位置\r\n   */\r\n  offsetHandle() {\r\n    const { selectRange } = this;\r\n    if (selectRange) {\r\n      this.setDisplay(selectRange);\r\n      this.setSizer(selectRange);\r\n      this.setLocal(selectRange);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 处理元素的边框\r\n   * 是否显示\r\n   */\r\n  borderHandle() {\r\n    const { selectRange, display } = this;\r\n    if (selectRange && display) {\r\n      this.hideBorder();\r\n      this.showBorder(selectRange);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 处理过滤器的\r\n   * 视图区域\r\n   */\r\n  xFilterHandle() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen, cols, rows, xIteratorBuilder,\r\n    } = table;\r\n\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    const cells = table.getTableCells();\r\n    const merges = table.getTableMerges();\r\n\r\n    if (selectRange) {\r\n      let targetRange = selectRange.clone();\r\n      const { sri, sci, eri, eci } = targetRange;\r\n      const rowLen = rows.len - 1;\r\n      const colLen = cols.len - 1;\r\n      const merge = merges.getFirstIncludes(sri, sci) || RectRange.EMPTY;\r\n      // 排除多选单元格\r\n      if (targetRange.multiple() && !merge.equals(targetRange)) {\r\n        this.selectRange = targetRange;\r\n        return;\r\n      }\r\n      // 向右走\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(eci + 1)\r\n        .setEnd(colLen)\r\n        .setLoop((i) => {\r\n          const cell = cells.getCellOrMergeCell(sri, i);\r\n          if (PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text)) {\r\n            return false;\r\n          }\r\n          targetRange = targetRange.union(new RectRange(sri, i, sri, i));\r\n          return true;\r\n        })\r\n        .execute();\r\n      // 向左走\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(sci - 1)\r\n        .setEnd(0)\r\n        .setLoop((i) => {\r\n          const cell = cells.getCellOrMergeCell(sri, i);\r\n          if (PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text)) {\r\n            return false;\r\n          }\r\n          targetRange = targetRange.union(new RectRange(sri, i, sri, i));\r\n          return true;\r\n        })\r\n        .execute();\r\n      // 向下走\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(eri + 1)\r\n        .setEnd(rowLen)\r\n        .setLoop((i) => {\r\n          const cell = cells.getCellOrMergeCell(i, sci);\r\n          if (PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text)) {\r\n            return false;\r\n          }\r\n          targetRange = targetRange.union(new RectRange(i, sci, i, sci));\r\n          return true;\r\n        })\r\n        .execute();\r\n      // 向上走\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(sri - 1)\r\n        .setEnd(0)\r\n        .setLoop((i) => {\r\n          const cell = cells.getCellOrMergeCell(i, sci);\r\n          if (PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text)) {\r\n            return false;\r\n          }\r\n          targetRange = targetRange.union(new RectRange(i, sci, i, sci));\r\n          return true;\r\n        })\r\n        .execute();\r\n      // 向右扫描\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(targetRange.eci + 1)\r\n        .setEnd(colLen)\r\n        .setLoop((i) => {\r\n          const { sri, eri } = targetRange;\r\n          let emptyCol = true;\r\n          xIteratorBuilder.getRowIterator()\r\n            .setBegin(sri)\r\n            .setEnd(eri)\r\n            .setLoop((j) => {\r\n              const cell = cells.getCellOrMergeCell(j, i);\r\n              if (!PlainUtils.isUnDef(cell) && !PlainUtils.isBlank(cell.text)) {\r\n                targetRange = targetRange.union(new RectRange(j, i, j, i));\r\n                emptyCol = false;\r\n              }\r\n            })\r\n            .execute();\r\n          return !emptyCol;\r\n        })\r\n        .execute();\r\n      // 向左扫描\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(targetRange.sci - 1)\r\n        .setEnd(0)\r\n        .setLoop((i) => {\r\n          const { sri, eri } = targetRange;\r\n          let emptyCol = true;\r\n          xIteratorBuilder.getRowIterator()\r\n            .setBegin(sri)\r\n            .setEnd(eri)\r\n            .setLoop((j) => {\r\n              const cell = cells.getCellOrMergeCell(j, i);\r\n              if (!PlainUtils.isUnDef(cell) && !PlainUtils.isBlank(cell.text)) {\r\n                targetRange = targetRange.union(new RectRange(j, i, j, i));\r\n                emptyCol = false;\r\n              }\r\n            })\r\n            .execute();\r\n          return !emptyCol;\r\n        })\r\n        .execute();\r\n      // 向下扫描\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(targetRange.eri + 1)\r\n        .setEnd(rowLen)\r\n        .setLoop((i) => {\r\n          const { sci, eci } = targetRange;\r\n          let emptyRow = true;\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(sci)\r\n            .setEnd(eci)\r\n            .setLoop((j) => {\r\n              const cell = cells.getCellOrMergeCell(i, j);\r\n              if (!PlainUtils.isUnDef(cell) && !PlainUtils.isBlank(cell.text)) {\r\n                targetRange = targetRange.union(new RectRange(i, j, i, j));\r\n                emptyRow = false;\r\n              }\r\n            })\r\n            .execute();\r\n          return !emptyRow;\r\n        })\r\n        .execute();\r\n      // 向上扫描\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(targetRange.sri - 1)\r\n        .setEnd(0)\r\n        .setLoop((i) => {\r\n          const { sci, eci } = targetRange;\r\n          let emptyRow = true;\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(sci)\r\n            .setEnd(eci)\r\n            .setLoop((j) => {\r\n              const cell = cells.getCellOrMergeCell(i, j);\r\n              if (!PlainUtils.isUnDef(cell) && !PlainUtils.isBlank(cell.text)) {\r\n                targetRange = targetRange.union(new RectRange(i, j, i, j));\r\n                emptyRow = false;\r\n              }\r\n            })\r\n            .execute();\r\n          return !emptyRow;\r\n        })\r\n        .execute();\r\n      this.selectRange = targetRange;\r\n\r\n    } else {\r\n      this.selectRange = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 处理元素的基本属性\r\n   * 和边框\r\n   */\r\n  xFilterOffset() {\r\n    this.offsetHandle();\r\n    this.borderHandle();\r\n  }\r\n\r\n  /**\r\n   * 打开过滤面板\r\n   */\r\n  filterOpen() {\r\n    const { selectRange, table, filter, activeIcon } = this;\r\n    const { valueFilter, ifFilter } = filter;\r\n    const { xIteratorBuilder } = table;\r\n    const cells = table.getTableCells();\r\n    // 筛选条件\r\n    const { valueFilterValue, ifFilterType, ifFilterValue, valueFilterItems } = activeIcon;\r\n    // 筛选范围\r\n    const { ri: sri, ci: sci } = activeIcon;\r\n    const { eri } = selectRange;\r\n    const eci = sci;\r\n    // 筛选数据\r\n    const items = new Set();\r\n    new RectRange(sri, sci, eri, eci).each(xIteratorBuilder, (ri, ci) => {\r\n      const cell = cells.getCellOrMergeCell(ri, ci);\r\n      if (cell && !PlainUtils.isBlank(cell.text)) {\r\n        items.add(cell.text.trim());\r\n      }\r\n    });\r\n    // 值筛选\r\n    valueFilter.emptyAll();\r\n    if (valueFilterItems) {\r\n      items.forEach((item) => {\r\n        const valueItem = new ValueItem({\r\n          text: item,\r\n        });\r\n        if (valueFilterItems.find(item => valueItem.equals(item))) {\r\n          valueItem.setStatus(true);\r\n        } else {\r\n          valueItem.setStatus(false);\r\n        }\r\n        valueFilter.addItem(valueItem);\r\n      });\r\n    } else {\r\n      items.forEach((item) => {\r\n        const valueItem = new ValueItem({\r\n          text: item,\r\n        });\r\n        valueItem.setStatus(true);\r\n        valueFilter.addItem(valueItem);\r\n      });\r\n    }\r\n    valueFilter.setValue(valueFilterValue);\r\n    // 条件筛选\r\n    ifFilter.setType(ifFilterType);\r\n    ifFilter.setValue(ifFilterValue);\r\n    // 关闭其他面板\r\n    ElPopUp.closeAll();\r\n    // 打开面板\r\n    filter.open();\r\n  }\r\n\r\n  /**\r\n   * 过滤折叠行\r\n   */\r\n  filterFoldRow() {\r\n    const { selectRange } = this;\r\n    const { table } = this;\r\n    const { icons } = this;\r\n    const { sri, sci, eri, eci } = selectRange;\r\n    const cells = table.getTableCells();\r\n    for (let ri = sri; ri <= eri; ri++) {\r\n      for (let ci = sci; ci <= eci; ci++) {\r\n        const cell = cells.getCell(ri, ci);\r\n        if (PlainUtils.isEmptyObject(cell)) {\r\n          continue;\r\n        }\r\n        const { text } = cell;\r\n        if (PlainUtils.isBlank(text)) {\r\n          continue;\r\n        }\r\n        const icon = icons[ci];\r\n        // 数值筛选\r\n        const { valueFilterItems } = icon;\r\n        const { valueFilterValue } = icon;\r\n        if (valueFilterItems) {\r\n\r\n        }\r\n        // 条件筛选\r\n        const { ifFilterType } = icon;\r\n        const { ifFilterValue } = icon;\r\n        if (ifFilterType) {\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 隐藏过滤器\r\n   */\r\n  hideFilter() {\r\n    this.display = false;\r\n    this.clearFilterIcon();\r\n    this.hide();\r\n  }\r\n\r\n  /**\r\n   * 显示过滤器\r\n   */\r\n  openFilter() {\r\n    const { table } = this;\r\n    const cells = table.getTableCells();\r\n    this.xFilterHandle();\r\n    const { selectRange } = this;\r\n    if (selectRange) {\r\n      if (cells.emptyRectRange(selectRange)) {\r\n        new Alert({\r\n          message: '不能为空数据区创建过滤器, 请选择非空区域',\r\n        }).open();\r\n      } else {\r\n        this.display = true;\r\n        this.createFilterIcon();\r\n        this.show();\r\n        this.xFilterOffset();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 销毁过滤器\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XFilter,\r\n};\r\n","import { cssPrefix } from '../../../../../const/Constant';\r\nimport { XScreenStyleBorderItem } from './XScreenStyleBorderItem';\r\n\r\nconst SVG = `\r\n  <svg class=\"${cssPrefix}-copy-style-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">\r\n    <line class=\"${cssPrefix}-copy-style-stroked ${cssPrefix}-copy-style-stroked-top\" x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"0\"/>\r\n    <line class=\"${cssPrefix}-copy-style-stroked ${cssPrefix}-copy-style-stroked-left\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\"/>\r\n    <line class=\"${cssPrefix}-copy-style-stroked ${cssPrefix}-copy-style-stroked-bottom\" x1=\"0\" y1=\"100%\" x2=\"100%\" y2=\"100%\"/>\r\n    <line class=\"${cssPrefix}-copy-style-stroked ${cssPrefix}-copy-style-stroked-right\" x1=\"100%\" y1=\"0\" x2=\"100%\" y2=\"100%\"/>\r\n  </svg>\r\n`;\r\n\r\nclass XScreenSvgBorderItem extends XScreenStyleBorderItem {\r\n\r\n  constructor({ table }) {\r\n    super({ table }, `${cssPrefix}-part-border-svg`);\r\n    this.blt.html(SVG);\r\n    this.bl.html(SVG);\r\n    this.bt.html(SVG);\r\n    this.bbr.html(SVG);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenSvgBorderItem,\r\n};\r\n","import { XSelectItem } from '../xselect/XSelectItem';\r\nimport { Widget } from '../../../../libs/Widget';\r\nimport { Constant, cssPrefix } from '../../../../const/Constant';\r\nimport { XEvent } from '../../../../libs/XEvent';\r\nimport { RectRange } from '../../tablebase/RectRange';\r\nimport { XScreenSvgBorderItem } from '../../xscreen/item/viewborder/XScreenSvgBorderItem';\r\n\r\nclass XCopyStyle extends XScreenSvgBorderItem {\r\n\r\n  constructor(table) {\r\n    super({ table });\r\n    this.display = false;\r\n    this.selectRange = RectRange.EMPTY;\r\n    this.ltElem = new Widget(`${cssPrefix}-x-copy-style-area`);\r\n    this.brElem = new Widget(`${cssPrefix}-x-copy-style-area`);\r\n    this.lElem = new Widget(`${cssPrefix}-x-copy-style-area`);\r\n    this.tElem = new Widget(`${cssPrefix}-x-copy-style-area`);\r\n    this.blt.children(this.ltElem);\r\n    this.bl.children(this.lElem);\r\n    this.bt.children(this.tElem);\r\n    this.bbr.children(this.brElem);\r\n  }\r\n\r\n  onAdd() {\r\n    this.hideCopyStyle();\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      if (this.display) {\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      if (this.display) {\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.SCALE_CHANGE, () => {\r\n      if (this.display) {\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.FIXED_CHANGE, () => {\r\n      if (this.display) {\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.RESIZE_CHANGE, () => {\r\n      if (this.display) {\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\r\n      if (this.display) {\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }\r\n    });\r\n  }\r\n\r\n  borderHandle() {\r\n    const { selectRange } = this;\r\n    if (selectRange.equals(RectRange.EMPTY)) {\r\n      return;\r\n    }\r\n    this.hideBorder();\r\n    this.showBorder(selectRange);\r\n  }\r\n\r\n  offsetHandle() {\r\n    const { selectRange } = this;\r\n    if (selectRange.equals(RectRange.EMPTY)) {\r\n      this.hide();\r\n      return;\r\n    }\r\n    this.show();\r\n    this.setDisplay(selectRange);\r\n    this.setSizer(selectRange);\r\n    this.setLocal(selectRange);\r\n  }\r\n\r\n  hideCopyStyle() {\r\n    this.display = false;\r\n    this.hide();\r\n  }\r\n\r\n  showCopyStyle() {\r\n    this.display = true;\r\n    this.show();\r\n    const { xScreen } = this;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    this.selectRange = selectRange;\r\n    this.offsetHandle();\r\n    this.borderHandle();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XCopyStyle,\r\n};\r\n","import { h } from '../../libs/Element';\r\nimport { Constant, cssPrefix } from '../../const/Constant';\r\nimport { Widget } from '../../libs/Widget';\r\nimport { DragPanel } from '../dragpanel/DragPanel';\r\nimport { XEvent } from '../../libs/XEvent';\r\n\r\nclass Confirm extends Widget {\r\n\r\n  constructor({\r\n    title = '提示',\r\n    message = '',\r\n    ok = () => {},\r\n    no = () => {},\r\n  }) {\r\n    super(`${cssPrefix}-confirm`);\r\n    this.title = title;\r\n    this.message = message;\r\n    this.ok = ok;\r\n    this.no = no;\r\n    // 创建 UI\r\n    this.closeEle = h('div', `${cssPrefix}-confirm-close`);\r\n    this.titleEle = h('div', `${cssPrefix}-confirm-title`);\r\n    this.contentEle = h('div', `${cssPrefix}-confirm-content`);\r\n    this.okEle = h('div', `${cssPrefix}-confirm-button ${cssPrefix}-confirm-ok`);\r\n    this.noEle = h('div', `${cssPrefix}-confirm-button ${cssPrefix}-confirm-no`);\r\n    this.buttonsEle = h('div', `${cssPrefix}-confirm-buttons`);\r\n    // 显示内容消息\r\n    this.titleEle.html(title);\r\n    this.contentEle.html(message);\r\n    this.okEle.html('确定');\r\n    this.noEle.html('取消');\r\n    // 添加UI\r\n    this.buttonsEle.children(this.noEle);\r\n    this.buttonsEle.children(this.okEle);\r\n    this.children(this.closeEle);\r\n    this.children(this.titleEle);\r\n    this.children(this.contentEle);\r\n    this.children(this.buttonsEle);\r\n    // 拖拽组件\r\n    this.dragPanel = new DragPanel().children(this);\r\n  }\r\n\r\n  unbind() {\r\n    const { okEle, noEle } = this;\r\n    XEvent.unbind(okEle);\r\n    XEvent.unbind(noEle);\r\n  }\r\n\r\n  bind() {\r\n    const { okEle, noEle } = this;\r\n    XEvent.bind(okEle, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.ok();\r\n      this.close();\r\n    });\r\n    XEvent.bind(noEle, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.no();\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  open() {\r\n    const { dragPanel } = this;\r\n    dragPanel.open();\r\n    this.bind();\r\n  }\r\n\r\n  close() {\r\n    const { dragPanel } = this;\r\n    dragPanel.close();\r\n    this.destroy();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.dragPanel.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Confirm,\r\n};\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\n\r\nclass FontAngleContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-font-angle-context-menu-item`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FontAngleContextMenuItem,\r\n};\r\n","import { Widget } from '../../../../libs/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass Divider extends Widget {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-divider`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Divider,\r\n};\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Divider } from '../../../base/Divider';\r\n\r\nclass FontAngleDivider extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle-divider`);\r\n    this.children(new Divider());\r\n    this.css('padding-left', '0');\r\n    this.css('padding-right', '0');\r\n    this.css('margin-left', '0');\r\n    this.css('margin-right', '0');\r\n  }\r\n}\r\n\r\nexport {\r\n  FontAngleDivider,\r\n};\r\n","import { Item } from './Item';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\nimport { Icon } from '../Icon';\r\nimport { h } from '../../../../libs/Element';\r\n\r\nclass DropInputItem extends Item {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-tools-drop-input-item ${className}`);\r\n    this.drop = h('div', `${cssPrefix}-tools-drop-input-item-mark`);\r\n    this.title = h('div', `${cssPrefix}-tools-drop-input-item-title`);\r\n    this.icon = new Icon('arrow-down');\r\n    this.input = h('input', `${cssPrefix}-tools-drop-input`);\r\n    this.drop.children(this.icon);\r\n    this.title.children(this.input);\r\n    this.children(this.title);\r\n    this.children(this.drop);\r\n  }\r\n\r\n  setValue(value) {\r\n    this.input.val(value);\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport { DropInputItem };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../libs/Element';\r\n\r\nclass FontAngleValueContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(angleValue) {\r\n    super(`${cssPrefix}-font-angle-value-context-menu-item`);\r\n    this.angleValue = angleValue;\r\n    this.titleElement = h('div', `${cssPrefix}-font-angle-value-context-menu-item-title`);\r\n    this.titleElement.text(angleValue);\r\n    this.titleElement.css('text-align', 'center');\r\n    this.children(this.titleElement);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FontAngleValueContextMenuItem,\r\n};\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { FontAngleValueContextMenuItem } from './FontAngleValueContextMenuItem';\r\nimport { Constant, cssPrefix } from '../../../../../const/Constant';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass FontAngleValueContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-angle-value-context-menu`, PlainUtils.copy({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new FontAngleValueContextMenuItem(-90),\r\n      new FontAngleValueContextMenuItem(-75),\r\n      new FontAngleValueContextMenuItem(-60),\r\n      new FontAngleValueContextMenuItem(-45),\r\n      new FontAngleValueContextMenuItem(-30),\r\n      new FontAngleValueContextMenuItem(-15),\r\n      new FontAngleValueContextMenuItem(0),\r\n      new FontAngleValueContextMenuItem(15),\r\n      new FontAngleValueContextMenuItem(30),\r\n      new FontAngleValueContextMenuItem(45),\r\n      new FontAngleValueContextMenuItem(60),\r\n      new FontAngleValueContextMenuItem(75),\r\n      new FontAngleValueContextMenuItem(90),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      this.addItem(item);\r\n    });\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { items } = this;\r\n    items.forEach((item) => {\r\n      XEvent.unbind(item);\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    const { items } = this;\r\n    items.forEach((item) => {\r\n      XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n        this.options.onUpdate(item);\r\n        this.close();\r\n      });\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FontAngleValueContextMenu,\r\n};\r\n","import { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { DropInputItem } from './base/DropInputItem';\r\nimport { XEvent } from '../../../libs/XEvent';\r\nimport { FontAngleValueContextMenu } from './contextmenu/fontanglevalue/FontAngleValueContextMenu';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\nclass FontAngleValue extends DropInputItem {\r\n\r\n  constructor({\r\n    onChange = () => {},\r\n  }) {\r\n    super(`${cssPrefix}-tools-angle-value`);\r\n    this.onChange = onChange;\r\n    this.value = 0;\r\n    this.fontAngleValueContextMenu = new FontAngleValueContextMenu({\r\n      onUpdate: (item) => {\r\n        const { angleValue } = item;\r\n        this.setValue(angleValue);\r\n        this.onChange(angleValue);\r\n      },\r\n      el: this,\r\n    });\r\n    this.input.val(this.value);\r\n    this.input.attr('type', 'number');\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { icon } = this;\r\n    XEvent.unbind(icon);\r\n  }\r\n\r\n  bind() {\r\n    const { fontAngleValueContextMenu, icon, input } = this;\r\n    XEvent.bind(icon, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      if (fontAngleValueContextMenu.isClose()) {\r\n        fontAngleValueContextMenu.open();\r\n      } else {\r\n        fontAngleValueContextMenu.close();\r\n      }\r\n    });\r\n    XEvent.bind(input, Constant.SYSTEM_EVENT_TYPE.CHANGE, () => {\r\n      const target = PlainUtils.parseInt(input.val());\r\n      this.value = target;\r\n      this.onChange(target);\r\n    });\r\n  }\r\n\r\n  setValue(value) {\r\n    this.value = value;\r\n    return super.setValue(value);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.fontAngleValueContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FontAngleValue,\r\n};\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass FontAngle1 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle1`);\r\n    this.icon = new Icon('font-angle1');\r\n    this.children(this.icon);\r\n  }\r\n}\r\nexport {\r\n  FontAngle1,\r\n};\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass FontAngle2 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle2`);\r\n    this.icon = new Icon('font-angle2');\r\n    this.children(this.icon);\r\n  }\r\n}\r\nexport {\r\n  FontAngle2,\r\n};\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass FontAngle3 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle3`);\r\n    this.icon = new Icon('font-angle3');\r\n    this.children(this.icon);\r\n  }\r\n}\r\nexport {\r\n  FontAngle3,\r\n};\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass FontAngle4 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle4`);\r\n    this.icon = new Icon('font-angle4');\r\n    this.children(this.icon);\r\n  }\r\n}\r\nexport {\r\n  FontAngle4,\r\n};\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass FontAngle5 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle5`);\r\n    this.icon = new Icon('font-angle5');\r\n    this.children(this.icon);\r\n  }\r\n}\r\nexport {\r\n  FontAngle5,\r\n};\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass FontAngle6 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle6`);\r\n    this.icon = new Icon('font-angle6');\r\n    this.children(this.icon);\r\n  }\r\n}\r\nexport {\r\n  FontAngle6,\r\n};\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { FontAngleContextMenuItem } from './FontAngleContextMenuItem';\r\nimport { FontAngleDivider } from '../icon/fontangle/FontAngleDivider';\r\nimport { h } from '../../../../../libs/Element';\r\nimport { FontAngleValue } from '../../FontAngleValue';\r\nimport { Constant, cssPrefix } from '../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { FontAngle1 } from '../icon/fontangle/FontAngle1';\r\nimport { FontAngle2 } from '../icon/fontangle/FontAngle2';\r\nimport { FontAngle3 } from '../icon/fontangle/FontAngle3';\r\nimport { FontAngle4 } from '../icon/fontangle/FontAngle4';\r\nimport { FontAngle5 } from '../icon/fontangle/FontAngle5';\r\nimport { FontAngle6 } from '../icon/fontangle/FontAngle6';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass FontAngleContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-angle-context-menu`, PlainUtils.copy({\r\n      onUpdateAngle: () => {},\r\n      onUpdateType: () => {},\r\n    }, options));\r\n    const div1 = h('div', `${cssPrefix}-font-angle-context-menu-type-icon-line`);\r\n    this.angle1 = new FontAngle1();\r\n    this.angle2 = new FontAngle2();\r\n    this.angle3 = new FontAngle3();\r\n    this.angle4 = new FontAngle4();\r\n    this.angle5 = new FontAngle5();\r\n    this.angle6 = new FontAngle6();\r\n    this.input = new FontAngleValue({\r\n      onChange: (angle) => {\r\n        this.options.onUpdateAngle(angle);\r\n      },\r\n    });\r\n    div1.children(this.angle1);\r\n    div1.children(this.angle2);\r\n    div1.children(new FontAngleDivider());\r\n    div1.children(this.angle4);\r\n    div1.children(this.angle3);\r\n    div1.children(this.angle6);\r\n    div1.children(this.angle5);\r\n    div1.children(new FontAngleDivider());\r\n    div1.children(this.input);\r\n    this.item = new FontAngleContextMenuItem();\r\n    this.item.children(div1);\r\n    this.item.removeClass('hover');\r\n    this.addItem(this.item);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { angle1, angle2, angle3, angle4, angle5, angle6 } = this;\r\n    XEvent.unbind(angle1);\r\n    XEvent.unbind(angle2);\r\n    XEvent.unbind(angle3);\r\n    XEvent.unbind(angle4);\r\n    XEvent.unbind(angle5);\r\n    XEvent.unbind(angle6);\r\n  }\r\n\r\n  bind() {\r\n    const { angle1, angle2, angle3, angle4, angle5, angle6 } = this;\r\n    XEvent.bind(angle1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdateType(BaseFont.TEXT_DIRECTION.HORIZONTAL);\r\n    });\r\n    XEvent.bind(angle2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdateType(BaseFont.TEXT_DIRECTION.VERTICAL);\r\n    });\r\n    XEvent.bind(angle3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdateAngle(-45);\r\n    });\r\n    XEvent.bind(angle4, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdateAngle(45);\r\n    });\r\n    XEvent.bind(angle5, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdateAngle(-90);\r\n    });\r\n    XEvent.bind(angle6, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdateAngle(90);\r\n    });\r\n  }\r\n\r\n  setValue(value) {\r\n    if (!PlainUtils.isNumber(value)) {\r\n      value = 0;\r\n    }\r\n    this.input.setValue(value);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.input.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FontAngleContextMenu,\r\n};\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { FontAngleContextMenu } from './contextmenu/fontangle/FontAngleContextMenu';\r\n\r\nclass FontAngle extends DropDownItem {\r\n\r\n  constructor(options = {\r\n    contextMenu: {},\r\n  }) {\r\n    super(`${cssPrefix}-tools-angle`);\r\n    this.options = options;\r\n    this.icon = new Icon('angle');\r\n    this.setIcon(this.icon);\r\n    this.fontAngleContextMenu = new FontAngleContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  setValue(value) {\r\n    this.fontAngleContextMenu.setValue(value);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.fontAngleContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FontAngle,\r\n};\r\n","import { Widget } from '../../libs/Widget';\nimport { cssPrefix, Constant } from '../../const/Constant';\nimport { Undo } from './tools/Undo';\nimport { Redo } from './tools/Redo';\nimport { PaintFormat } from './tools/PaintFormat';\nimport { ClearFormat } from './tools/ClearFormat';\nimport { Format } from './tools/Format';\nimport { Font } from './tools/Font';\nimport { FontSize } from './tools/FontSize';\nimport { FontBold } from './tools/FontBold';\nimport { FontItalic } from './tools/FontItalic';\nimport { UnderLine } from './tools/UnderLine';\nimport { FontStrike } from './tools/FontStrike';\nimport { FontColor } from './tools/FontColor';\nimport { FillColor } from './tools/FillColor';\nimport { Border } from './tools/Border';\nimport { Merge } from './tools/Merge';\nimport { HorizontalAlign } from './tools/HorizontalAlign';\nimport { VerticalAlign } from './tools/VerticalAlign';\nimport { TextWrapping } from './tools/TextWrapping';\nimport { Fixed } from './tools/Fixed';\nimport { Filter } from './tools/Filter';\nimport { Functions } from './tools/Functions';\nimport { XEvent } from '../../libs/XEvent';\nimport { ElPopUp } from '../../component/elpopup/ElPopUp';\nimport { LINE_TYPE } from '../../canvas/Line';\nimport { Icon } from './tools/Icon';\nimport { Cell } from '../table/tablecell/Cell';\nimport { PlainUtils } from '../../utils/PlainUtils';\nimport { Scale } from './tools/Scale';\nimport { BaseFont } from '../../canvas/font/BaseFont';\nimport { XSelectItem } from '../table/xscreenitems/xselect/XSelectItem';\nimport { XDraw } from '../../canvas/XDraw';\nimport { Alert } from '../../component/alert/Alert';\nimport { XFilter } from '../table/xscreenitems/xfilter/XFilter';\nimport { XCopyStyle } from '../table/xscreenitems/xcopystyle/XCopyStyle';\nimport { Confirm } from '../../component/confirm/Confirm';\nimport { FontAngle } from './tools/FontAngle';\nimport { Divider } from './tools/base/Divider';\n\nclass TopMenu extends Widget {\n\n  constructor(workTop) {\n    super(`${cssPrefix}-tools-menu`);\n\n    this.workTop = workTop;\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n\n    // tools\n    this.undo = new Undo();\n    this.redo = new Redo();\n    this.scale = new Scale({\n      contextMenu: {\n        onUpdate: (value) => {\n          this.scale.setTitle(`${value}%`);\n          const { body } = this.workTop.work;\n          body.setScale(value / 100);\n        },\n      },\n    });\n    this.paintFormat = new PaintFormat();\n    this.clearFormat = new ClearFormat();\n    this.format = new Format({\n      contextMenu: {\n        onUpdate: (format, title) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const {\n            xScreen,\n          } = table;\n          const operateCellsHelper = table.getOperateCellsHelper();\n          const { tableDataSnapshot } = table;\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          this.format.setTitle(title);\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            operateCellsHelper.getCellOrNewCellByViewRange({\n              rectRange: selectRange,\n              callback: (r, c, origin) => {\n                const cell = origin.clone();\n                cell.format = format;\n                cellDataProxy.setCell(r, c, cell);\n              },\n            });\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n      },\n    });\n    this.font = new Font({\n      contextMenu: {\n        onUpdate: (type) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const {\n            xScreen,\n          } = table;\n          const operateCellsHelper = table.getOperateCellsHelper();\n          const { tableDataSnapshot } = table;\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          this.font.setTitle(type);\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            operateCellsHelper.getCellOrNewCellByViewRange({\n              rectRange: selectRange,\n              callback: (r, c, origin) => {\n                const cell = origin.clone();\n                cell.fontAttr.name = type;\n                cellDataProxy.setCell(r, c, cell);\n              },\n            });\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n      },\n    });\n    this.dprFontSize = new FontSize({\n      contextMenu: {\n        onUpdate: (size) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const { xScreen } = table;\n          const operateCellsHelper = table.getOperateCellsHelper();\n          const { tableDataSnapshot } = table;\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          this.dprFontSize.setTitle(size);\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            operateCellsHelper.getCellOrNewCellByViewRange({\n              rectRange: selectRange,\n              callback: (r, c, origin) => {\n                const cell = origin.clone();\n                cell.fontAttr.size = size;\n                cellDataProxy.setCell(r, c, cell);\n              },\n            });\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n      },\n    });\n    this.fontColor = new FontColor({\n      contextMenu: {\n        onUpdate: (color) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const {\n            xScreen,\n          } = table;\n          const operateCellsHelper = table.getOperateCellsHelper();\n          const { tableDataSnapshot } = table;\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          this.fontColor.setColor(color);\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            operateCellsHelper.getCellOrNewCellByViewRange({\n              rectRange: selectRange,\n              callback: (r, c, origin) => {\n                const cell = origin.clone();\n                cell.fontAttr.color = color;\n                cellDataProxy.setCell(r, c, cell);\n              },\n            });\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n      },\n    });\n    this.fillColor = new FillColor({\n      contextMenu: {\n        onUpdate: (color) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const {\n            xScreen,\n          } = table;\n          const operateCellsHelper = table.getOperateCellsHelper();\n          const { tableDataSnapshot } = table;\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          this.fillColor.setColor(color);\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            operateCellsHelper.getCellOrNewCellByViewRange({\n              rectRange: selectRange,\n              callback: (r, c, origin) => {\n                const cell = origin.clone();\n                cell.background = color;\n                cellDataProxy.setCell(r, c, cell);\n              },\n            });\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n      },\n    });\n    this.border = new Border({\n      contextMenu: {\n        onUpdate: (borderType, color, lineType) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const { xScreen } = table;\n          const operateCellsHelper = table.getOperateCellsHelper();\n          const xTableStyle = table.getXTableStyle();\n          const { tableDataSnapshot } = table;\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            const rect = selectRange;\n            let widthType = XDraw.LINE_WIDTH_TYPE.low;\n            let type = LINE_TYPE.SOLID_LINE;\n            switch (lineType) {\n              case 'line1':\n                widthType = XDraw.LINE_WIDTH_TYPE.low;\n                type = LINE_TYPE.SOLID_LINE;\n                break;\n              case 'line2':\n                widthType = XDraw.LINE_WIDTH_TYPE.medium;\n                type = LINE_TYPE.SOLID_LINE;\n                break;\n              case 'line3':\n                widthType = XDraw.LINE_WIDTH_TYPE.high;\n                type = LINE_TYPE.SOLID_LINE;\n                break;\n              case 'line4':\n                type = LINE_TYPE.DOTTED_LINE;\n                break;\n              case 'line5':\n                type = LINE_TYPE.POINT_LINE;\n                break;\n              case 'line6':\n                type = LINE_TYPE.DOUBLE_LINE;\n                break;\n            }\n            const angleCells = [];\n            switch (borderType) {\n              case 'border1':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    if (xTableStyle.hasAngleCell(ri)) {\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\n                        angleCells.push({ ri, ci, newCell });\n                        return;\n                      }\n                    }\n                    const { borderAttr } = newCell;\n                    borderAttr.setAllDisplay(true);\n                    borderAttr.setAllColor(color);\n                    borderAttr.setAllWidthType(widthType);\n                    borderAttr.setAllType(type);\n                    cellDataProxy.setCell(ri, ci, newCell);\n                  },\n                });\n                angleCells.forEach((options) => {\n                  const { ri, ci, newCell } = options;\n                  const { borderAttr } = newCell;\n                  borderAttr.setAllDisplay(true);\n                  borderAttr.setAllColor(color);\n                  borderAttr.setAllWidthType(widthType);\n                  borderAttr.setAllType(type);\n                  cellDataProxy.setCell(ri, ci, newCell);\n                });\n                break;\n              case 'border2':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    if (xTableStyle.hasAngleCell(ri)) {\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\n                        angleCells.push({ ri, ci, newCell });\n                        return;\n                      }\n                    }\n                    const { borderAttr } = newCell;\n                    if (ri !== rect.sri) {\n                      borderAttr.setTDisplay(true);\n                      borderAttr.setTColor(color);\n                      borderAttr.setTWidthType(widthType);\n                      borderAttr.setTType(type);\n                    }\n                    if (ri !== rect.eri) {\n                      borderAttr.setBDisplay(true);\n                      borderAttr.setBColor(color);\n                      borderAttr.setBWidthType(widthType);\n                      borderAttr.setBType(type);\n                    }\n                    if (ci !== rect.sci) {\n                      borderAttr.setLDisplay(true);\n                      borderAttr.setLColor(color);\n                      borderAttr.setLWidthType(widthType);\n                      borderAttr.setLType(type);\n                    }\n                    if (ci !== rect.eci) {\n                      borderAttr.setRDisplay(true);\n                      borderAttr.setRColor(color);\n                      borderAttr.setRWidthType(widthType);\n                      borderAttr.setRType(type);\n                    }\n                    cellDataProxy.setCell(ri, ci, newCell);\n                  },\n                });\n                angleCells.forEach((options) => {\n                  const { ri, ci, newCell } = options;\n                  const { borderAttr } = newCell;\n                  if (ri !== rect.sri) {\n                    borderAttr.setTDisplay(true);\n                    borderAttr.setTColor(color);\n                    borderAttr.setTWidthType(widthType);\n                    borderAttr.setTType(type);\n                  }\n                  if (ri !== rect.eri) {\n                    borderAttr.setBDisplay(true);\n                    borderAttr.setBColor(color);\n                    borderAttr.setBWidthType(widthType);\n                    borderAttr.setBType(type);\n                  }\n                  if (ci !== rect.sci) {\n                    borderAttr.setLDisplay(true);\n                    borderAttr.setLColor(color);\n                    borderAttr.setLWidthType(widthType);\n                    borderAttr.setLType(type);\n                  }\n                  if (ci !== rect.eci) {\n                    borderAttr.setRDisplay(true);\n                    borderAttr.setRColor(color);\n                    borderAttr.setRWidthType(widthType);\n                    borderAttr.setRType(type);\n                  }\n                  cellDataProxy.setCell(ri, ci, newCell);\n                });\n                break;\n              case 'border3':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    if (xTableStyle.hasAngleCell(ri)) {\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\n                        angleCells.push({ ri, ci, newCell });\n                        return;\n                      }\n                    }\n                    const { borderAttr } = newCell;\n                    if (ri !== rect.sri) {\n                      borderAttr.setTDisplay(true);\n                      borderAttr.setTColor(color);\n                      borderAttr.setTWidthType(widthType);\n                      borderAttr.setTType(type);\n                    }\n                    if (ri !== rect.eri) {\n                      borderAttr.setBDisplay(true);\n                      borderAttr.setBColor(color);\n                      borderAttr.setBWidthType(widthType);\n                      borderAttr.setBType(type);\n                    }\n                  },\n                });\n                angleCells.forEach((options) => {\n                  const { ri, newCell } = options;\n                  const { borderAttr } = newCell;\n                  if (ri !== rect.sri) {\n                    borderAttr.setTDisplay(true);\n                    borderAttr.setTColor(color);\n                    borderAttr.setTWidthType(widthType);\n                    borderAttr.setTType(type);\n                  }\n                  if (ri !== rect.eri) {\n                    borderAttr.setBDisplay(true);\n                    borderAttr.setBColor(color);\n                    borderAttr.setBWidthType(widthType);\n                    borderAttr.setBType(type);\n                  }\n                });\n                break;\n              case 'border4':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    if (xTableStyle.hasAngleCell(ri)) {\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\n                        angleCells.push({ ri, ci, newCell });\n                        return;\n                      }\n                    }\n                    const { borderAttr } = newCell;\n                    if (ci !== rect.sci) {\n                      borderAttr.setLDisplay(true);\n                      borderAttr.setLColor(color);\n                      borderAttr.setLWidthType(widthType);\n                      borderAttr.setLType(type);\n                    }\n                    if (ci !== rect.eci) {\n                      borderAttr.setRDisplay(true);\n                      borderAttr.setRColor(color);\n                      borderAttr.setRWidthType(widthType);\n                      borderAttr.setRType(type);\n                    }\n                    cellDataProxy.setCell(ri, ci, newCell);\n                  },\n                });\n                angleCells.forEach((options) => {\n                  const { ri, ci, newCell } = options;\n                  const { borderAttr } = newCell;\n                  if (ci !== rect.sci) {\n                    borderAttr.setLDisplay(true);\n                    borderAttr.setLColor(color);\n                    borderAttr.setLWidthType(widthType);\n                    borderAttr.setLType(type);\n                  }\n                  if (ci !== rect.eci) {\n                    borderAttr.setRDisplay(true);\n                    borderAttr.setRColor(color);\n                    borderAttr.setRWidthType(widthType);\n                    borderAttr.setRType(type);\n                  }\n                  cellDataProxy.setCell(ri, ci, newCell);\n                });\n                break;\n              case 'border5':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    if (xTableStyle.hasAngleCell(ri)) {\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\n                        angleCells.push({ ri, ci, newCell });\n                        return;\n                      }\n                    }\n                    const { borderAttr } = newCell;\n                    if (ri === rect.sri) {\n                      borderAttr.setTDisplay(true);\n                      borderAttr.setTColor(color);\n                      borderAttr.setTWidthType(widthType);\n                      borderAttr.setTType(type);\n                    }\n                    if (ri === rect.eri) {\n                      borderAttr.setBDisplay(true);\n                      borderAttr.setBColor(color);\n                      borderAttr.setBWidthType(widthType);\n                      borderAttr.setBType(type);\n                    }\n                    if (ci === rect.sci) {\n                      borderAttr.setLDisplay(true);\n                      borderAttr.setLColor(color);\n                      borderAttr.setLWidthType(widthType);\n                      borderAttr.setLType(type);\n                    }\n                    if (ci === rect.eci) {\n                      borderAttr.setRDisplay(true);\n                      borderAttr.setRColor(color);\n                      borderAttr.setRWidthType(widthType);\n                      borderAttr.setRType(type);\n                    }\n                    cellDataProxy.setCell(ri, ci, newCell);\n                  },\n                });\n                angleCells.forEach((options) => {\n                  const { ri, ci, newCell } = options;\n                  const { borderAttr } = newCell;\n                  if (ri === rect.sri) {\n                    borderAttr.setTDisplay(true);\n                    borderAttr.setTColor(color);\n                    borderAttr.setTWidthType(widthType);\n                    borderAttr.setTType(type);\n                  }\n                  if (ri === rect.eri) {\n                    borderAttr.setBDisplay(true);\n                    borderAttr.setBColor(color);\n                    borderAttr.setBWidthType(widthType);\n                    borderAttr.setBType(type);\n                  }\n                  if (ci === rect.sci) {\n                    borderAttr.setLDisplay(true);\n                    borderAttr.setLColor(color);\n                    borderAttr.setLWidthType(widthType);\n                    borderAttr.setLType(type);\n                  }\n                  if (ci === rect.eci) {\n                    borderAttr.setRDisplay(true);\n                    borderAttr.setRColor(color);\n                    borderAttr.setRWidthType(widthType);\n                    borderAttr.setRType(type);\n                  }\n                  cellDataProxy.setCell(ri, ci, newCell);\n                });\n                break;\n              case 'border6':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    if (xTableStyle.hasAngleCell(ri)) {\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\n                        angleCells.push({ ri, ci, newCell });\n                        return;\n                      }\n                    }\n                    const { borderAttr } = newCell;\n                    if (ci === rect.sci) {\n                      borderAttr.setLDisplay(true);\n                      borderAttr.setLColor(color);\n                      borderAttr.setLWidthType(widthType);\n                      borderAttr.setLType(type);\n                    }\n                    cellDataProxy.setCell(ri, ci, newCell);\n                  },\n                });\n                angleCells.forEach((options) => {\n                  const { ri, ci, newCell } = options;\n                  const { borderAttr } = newCell;\n                  if (ci === rect.sci) {\n                    borderAttr.setLDisplay(true);\n                    borderAttr.setLColor(color);\n                    borderAttr.setLWidthType(widthType);\n                    borderAttr.setLType(type);\n                  }\n                  cellDataProxy.setCell(ri, ci, newCell);\n                });\n                break;\n              case 'border7':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    if (xTableStyle.hasAngleCell(ri)) {\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\n                        angleCells.push({ ri, ci, newCell });\n                        return;\n                      }\n                    }\n                    const { borderAttr } = newCell;\n                    if (ri === rect.sri) {\n                      borderAttr.setTDisplay(true);\n                      borderAttr.setTColor(color);\n                      borderAttr.setTWidthType(widthType);\n                      borderAttr.setTType(type);\n                    }\n                    cellDataProxy.setCell(ri, ci, newCell);\n                  },\n                });\n                angleCells.forEach((options) => {\n                  const { ri, ci, newCell } = options;\n                  const { borderAttr } = newCell;\n                  if (ri === rect.sri) {\n                    borderAttr.setTDisplay(true);\n                    borderAttr.setTColor(color);\n                    borderAttr.setTWidthType(widthType);\n                    borderAttr.setTType(type);\n                  }\n                  cellDataProxy.setCell(ri, ci, newCell);\n                });\n                break;\n              case 'border8':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    if (xTableStyle.hasAngleCell(ri)) {\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\n                        angleCells.push({ ri, ci, newCell });\n                        return;\n                      }\n                    }\n                    const { borderAttr } = newCell;\n                    if (ci === rect.eci) {\n                      borderAttr.setRDisplay(true);\n                      borderAttr.setRColor(color);\n                      borderAttr.setRWidthType(widthType);\n                      borderAttr.setRType(type);\n                    }\n                    cellDataProxy.setCell(ri, ci, newCell);\n                  },\n                });\n                angleCells.forEach((options) => {\n                  const { ri, ci, newCell } = options;\n                  const { borderAttr } = newCell;\n                  if (ci === rect.eci) {\n                    borderAttr.setRDisplay(true);\n                    borderAttr.setRColor(color);\n                    borderAttr.setRWidthType(widthType);\n                    borderAttr.setRType(type);\n                  }\n                  cellDataProxy.setCell(ri, ci, newCell);\n                });\n                break;\n              case 'border9':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    if (xTableStyle.hasAngleCell(ri)) {\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\n                        angleCells.push({ ri, ci, newCell });\n                        return;\n                      }\n                    }\n                    const { borderAttr } = newCell;\n                    if (ri === rect.eri) {\n                      borderAttr.setBDisplay(true);\n                      borderAttr.setBColor(color);\n                      borderAttr.setBWidthType(widthType);\n                      borderAttr.setBType(type);\n                    }\n                    cellDataProxy.setCell(ri, ci, newCell);\n                  },\n                });\n                angleCells.forEach((options) => {\n                  const { ri, ci, newCell } = options;\n                  const { borderAttr } = newCell;\n                  if (ri === rect.eri) {\n                    borderAttr.setBDisplay(true);\n                    borderAttr.setBColor(color);\n                    borderAttr.setBWidthType(widthType);\n                    borderAttr.setBType(type);\n                  }\n                  cellDataProxy.setCell(ri, ci, newCell);\n                });\n                break;\n              case 'border10':\n                operateCellsHelper.getCellOrNewCellByViewRange({\n                  rectRange: rect,\n                  callback: (ri, ci, cell) => {\n                    const newCell = cell.clone();\n                    if (xTableStyle.hasAngleCell(ri)) {\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\n                        angleCells.push({ ri, ci, newCell });\n                        return;\n                      }\n                    }\n                    const { borderAttr } = newCell;\n                    borderAttr.setAllDisplay(false);\n                    cellDataProxy.setCell(ri, ci, newCell);\n                  },\n                });\n                angleCells.forEach((options) => {\n                  const { ri, ci, newCell } = options;\n                  const { borderAttr } = newCell;\n                  borderAttr.setAllDisplay(false);\n                  cellDataProxy.setCell(ri, ci, newCell);\n                });\n                break;\n            }\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n      },\n    });\n    this.fontBold = new FontBold();\n    this.fontItalic = new FontItalic();\n    this.underLine = new UnderLine();\n    this.fontStrike = new FontStrike();\n    this.merge = new Merge();\n    this.horizontalAlign = new HorizontalAlign({\n      contextMenu: {\n        onUpdate: (type) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const {\n            xScreen,\n          } = table;\n          const operateCellsHelper = table.getOperateCellsHelper();\n          const { tableDataSnapshot } = table;\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          switch (type) {\n            case BaseFont.ALIGN.left:\n              this.horizontalAlign.setIcon(new Icon('align-left'));\n              break;\n            case BaseFont.ALIGN.center:\n              this.horizontalAlign.setIcon(new Icon('align-center'));\n              break;\n            case BaseFont.ALIGN.right:\n              this.horizontalAlign.setIcon(new Icon('align-right'));\n              break;\n            default: break;\n          }\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            operateCellsHelper.getCellOrNewCellByViewRange({\n              rectRange: selectRange,\n              callback: (r, c, origin) => {\n                const cell = origin.clone();\n                cell.fontAttr.align = type;\n                cellDataProxy.setCell(r, c, cell);\n              },\n            });\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n      },\n    });\n    this.verticalAlign = new VerticalAlign({\n      contextMenu: {\n        onUpdate: (type) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const {\n            xScreen,\n          } = table;\n          const operateCellsHelper = table.getOperateCellsHelper();\n          const { tableDataSnapshot } = table;\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          switch (type) {\n            case BaseFont.VERTICAL_ALIGN.top:\n              this.verticalAlign.setIcon(new Icon('align-top'));\n              break;\n            case BaseFont.VERTICAL_ALIGN.center:\n              this.verticalAlign.setIcon(new Icon('align-middle'));\n              break;\n            case BaseFont.VERTICAL_ALIGN.bottom:\n              this.verticalAlign.setIcon(new Icon('align-bottom'));\n              break;\n            default: break;\n          }\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            operateCellsHelper.getCellOrNewCellByViewRange({\n              rectRange: selectRange,\n              callback: (r, c, origin) => {\n                const cell = origin.clone();\n                cell.fontAttr.verticalAlign = type;\n                cellDataProxy.setCell(r, c, cell);\n              },\n            });\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n      },\n    });\n    this.textWrapping = new TextWrapping({\n      contextMenu: {\n        onUpdate: (type) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const {\n            xScreen,\n          } = table;\n          const operateCellsHelper = table.getOperateCellsHelper();\n          const { tableDataSnapshot } = table;\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          let icon;\n          switch (type) {\n            case BaseFont.TEXT_WRAP.TRUNCATE:\n              icon = new Icon('truncate');\n              break;\n            case BaseFont.TEXT_WRAP.WORD_WRAP:\n              icon = new Icon('text-wrap');\n              break;\n            case BaseFont.TEXT_WRAP.OVER_FLOW:\n              icon = new Icon('overflow');\n              break;\n          }\n          this.textWrapping.setIcon(icon);\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            operateCellsHelper.getCellOrNewCellByViewRange({\n              rectRange: selectRange,\n              callback: (r, c, origin) => {\n                const cell = origin.clone();\n                cell.fontAttr.textWrap = type;\n                cellDataProxy.setCell(r, c, cell);\n              },\n            });\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n      },\n    });\n    this.fixed = new Fixed({\n      contextMenu: {\n        onUpdate: (type) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const { xScreen } = table;\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          switch (type) {\n            case 'ROW': {\n              if (this.fixed.rowStatus) {\n                table.setFixedRow(-1);\n              } else if (selectRange) {\n                const scrollView = table.getScrollView();\n                const { sri } = selectRange;\n                if (sri < scrollView.eri - 2 && sri >= scrollView.sri) {\n                  table.setFixedRow(sri);\n                } else {\n                  new Alert({ message: '无法在当前区域内冻结单元格, 请重新选择冻结区域' }).open();\n                }\n              }\n              break;\n            }\n            case 'COL': {\n              if (this.fixed.colStatus) {\n                table.setFixedCol(-1);\n              } else if (selectRange) {\n                const scrollView = table.getScrollView();\n                const { sci } = selectRange;\n                if (sci < scrollView.eci - 2 && sci >= scrollView.sci) {\n                  table.setFixedCol(sci);\n                } else {\n                  new Alert({ message: '无法在当前区域内冻结单元格, 请重新选择冻结区域' }).open();\n                }\n              }\n              break;\n            }\n            case 'ROW1': {\n              table.setFixedRow(0, 0);\n              break;\n            }\n            case 'ROW2': {\n              table.setFixedRow(1, 0);\n              break;\n            }\n            case 'COL1': {\n              table.setFixedCol(0, 0);\n              break;\n            }\n            case 'COL2': {\n              table.setFixedCol(1, 0);\n            }\n          }\n        },\n      },\n    });\n    this.filter = new Filter();\n    this.functions = new Functions();\n    this.fontAngle = new FontAngle({\n      contextMenu: {\n        onUpdateAngle: (angle) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const { xScreen } = table;\n          const operateCellsHelper = table.getOperateCellsHelper();\n          const { tableDataSnapshot } = table;\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            operateCellsHelper.getCellOrNewCellByViewRange({\n              rectRange: selectRange,\n              callback: (r, c, origin) => {\n                const cell = origin.clone();\n                if (angle === 0) {\n                  cell.fontAttr.angle = angle;\n                  cell.fontAttr.direction = BaseFont.TEXT_DIRECTION.HORIZONTAL;\n                } else {\n                  cell.borderAttr.updateMaxIndex();\n                  cell.fontAttr.angle = angle;\n                  cell.fontAttr.direction = BaseFont.TEXT_DIRECTION.ANGLE;\n                }\n                cellDataProxy.setCell(r, c, cell);\n              },\n            });\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n        onUpdateType: (type) => {\n          const sheet = sheetView.getActiveSheet();\n          const { table } = sheet;\n          const { xScreen } = table;\n          const operateCellsHelper = table.getOperateCellsHelper();\n          const { tableDataSnapshot } = table;\n          const xSelect = xScreen.findType(XSelectItem);\n          const { selectRange } = xSelect;\n          if (selectRange) {\n            tableDataSnapshot.begin();\n            const { cellDataProxy } = tableDataSnapshot;\n            operateCellsHelper.getCellOrNewCellByViewRange({\n              rectRange: selectRange,\n              callback: (r, c, origin) => {\n                const cell = origin.clone();\n                cell.fontAttr.angle = 0;\n                cell.fontAttr.direction = type;\n                cellDataProxy.setCell(r, c, cell);\n              },\n            });\n            tableDataSnapshot.end();\n            table.render();\n          }\n        },\n      },\n    });\n    this.children(this.undo);\n    this.children(this.redo);\n    this.children(new Divider());\n    this.children(this.scale);\n    this.children(this.paintFormat);\n    this.children(this.clearFormat);\n    this.children(this.format);\n    this.children(new Divider());\n    this.children(this.font);\n    this.children(this.dprFontSize);\n    this.children(new Divider());\n    this.children(this.fontBold);\n    this.children(this.fontItalic);\n    this.children(this.underLine);\n    this.children(this.fontStrike);\n    this.children(this.fontColor);\n    this.children(new Divider());\n    this.children(this.fillColor);\n    this.children(this.border);\n    this.children(this.merge);\n    this.children(new Divider());\n    this.children(this.horizontalAlign);\n    this.children(this.verticalAlign);\n    this.children(this.textWrapping);\n    this.children(this.fontAngle);\n    this.children(new Divider());\n    this.children(this.fixed);\n    this.children(this.filter);\n    this.children(this.functions);\n  }\n\n  onAttach() {\n    this.bind();\n  }\n\n  unbind() {\n    const { body } = this.workTop.work;\n    XEvent.bind(body);\n    XEvent.bind(this.scale);\n    XEvent.bind(this.undo);\n    XEvent.bind(this.redo);\n    XEvent.bind(this.paintFormat);\n    XEvent.bind(this.clearFormat);\n    XEvent.bind(this.format);\n    XEvent.bind(this.font);\n    XEvent.bind(this.dprFontSize);\n    XEvent.bind(this.fontBold);\n    XEvent.bind(this.fontItalic);\n    XEvent.bind(this.underLine);\n    XEvent.bind(this.fontStrike);\n    XEvent.bind(this.fontColor);\n    XEvent.bind(this.fillColor);\n    XEvent.bind(this.border);\n    XEvent.bind(this.merge);\n    XEvent.bind(this.horizontalAlign);\n    XEvent.bind(this.verticalAlign);\n    XEvent.bind(this.textWrapping);\n    XEvent.bind(this.fixed);\n    XEvent.bind(this.filter);\n  }\n\n  bind() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    XEvent.bind(body, Constant.WORK_BODY_EVENT_TYPE.CHANGE_ACTIVE, () => {\n      this.setStatus();\n    });\n    XEvent.bind(body, Constant.TABLE_EVENT_TYPE.SELECT_DOWN, () => {\n      this.setFormatStatus();\n      this.setFontStatus();\n      this.setFontSizeStatus();\n      this.setFontBoldStatus();\n      this.setFontItalicStatus();\n      this.setUnderLineStatus();\n      this.setFontStrikeStatus();\n      this.setFontColorStatus();\n      this.setFillColorStatus();\n      this.setHorizontalAlignStatus();\n      this.setVerticalAlignStatus();\n      this.setTextWrappingStatus();\n      this.setFontAngleStatus();\n    });\n    XEvent.bind(body, Constant.TABLE_EVENT_TYPE.DATA_CHANGE, () => {\n      this.setStatus();\n    });\n    XEvent.bind(body, Constant.TABLE_EVENT_TYPE.FIXED_CHANGE, () => {\n      this.setFixedStatus();\n    });\n    XEvent.bind(this.scale, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { scale } = this;\n      const { scaleContextMenu } = scale;\n      const { elPopUp } = scaleContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (scaleContextMenu.isClose()) {\n        scaleContextMenu.open();\n      } else {\n        scaleContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    XEvent.bind(this.undo, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      const { tableDataSnapshot } = table;\n      if (tableDataSnapshot.canBack()) tableDataSnapshot.back();\n    });\n    XEvent.bind(this.redo, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      const { tableDataSnapshot } = table;\n      if (tableDataSnapshot.canGo()) tableDataSnapshot.go();\n    });\n    XEvent.bind(this.paintFormat, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      const { xScreen } = table;\n      const xSelect = xScreen.findType(XSelectItem);\n      const { selectRange } = xSelect;\n      if (PlainUtils.isUnDef(selectRange)) {\n        return;\n      }\n      const { cellMergeCopyHelper } = table;\n      const { tableDataSnapshot } = table;\n      const xCopyStyle = xScreen.findType(XCopyStyle);\n      const callback = () => {\n        xCopyStyle.hideCopyStyle();\n        // 清除复制\n        this.paintFormat.active(false);\n        this.paintFormat.removeSheet(sheet);\n        // 复制区域\n        const originViewRange = xCopyStyle.selectRange.clone();\n        const targetViewRange = xSelect.selectRange.clone();\n        const [orSize, ocSize] = originViewRange.size();\n        const [trSize, tcSize] = targetViewRange.size();\n        const rSize = orSize > trSize ? orSize : trSize;\n        const cSize = ocSize > tcSize ? ocSize : tcSize;\n        targetViewRange.eri = targetViewRange.sri + (rSize - 1);\n        targetViewRange.eci = targetViewRange.sci + (cSize - 1);\n        // 开始复制\n        tableDataSnapshot.begin();\n        cellMergeCopyHelper.copyMergeContent({\n          originViewRange,\n          targetViewRange,\n        });\n        cellMergeCopyHelper.copyStylesContent({\n          originViewRange,\n          targetViewRange,\n        });\n        tableDataSnapshot.end();\n        table.render();\n        // 删除事件监听\n        XEvent.unbind(table, Constant.TABLE_EVENT_TYPE.SELECT_OVER, callback);\n      };\n      if (this.paintFormat.includeSheet(sheet)) {\n        xCopyStyle.hideCopyStyle();\n        this.paintFormat.active(false);\n        this.paintFormat.removeSheet(sheet);\n        XEvent.unbind(table, Constant.TABLE_EVENT_TYPE.SELECT_OVER, callback);\n      } else {\n        xCopyStyle.showCopyStyle();\n        this.paintFormat.active(true);\n        this.paintFormat.addSheet(sheet);\n        XEvent.bind(table, Constant.TABLE_EVENT_TYPE.SELECT_OVER, callback);\n      }\n    });\n    XEvent.bind(this.clearFormat, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      const {\n        xScreen,\n      } = table;\n      const operateCellsHelper = table.getOperateCellsHelper();\n      const { tableDataSnapshot } = table;\n      const xSelect = xScreen.findType(XSelectItem);\n      const { selectRange } = xSelect;\n      if (selectRange) {\n        tableDataSnapshot.begin();\n        const { cellDataProxy } = tableDataSnapshot;\n        operateCellsHelper.getCellOrNewCellByViewRange({\n          rectRange: selectRange,\n          callback: (r, c, origin) => {\n            const { text } = origin;\n            cellDataProxy.setCell(r, c, new Cell({ text }));\n          },\n        });\n        tableDataSnapshot.end();\n        table.render();\n      }\n    });\n    XEvent.bind(this.format, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { format } = this;\n      const { formatContextMenu } = format;\n      const { elPopUp } = formatContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (formatContextMenu.isClose()) {\n        formatContextMenu.open();\n      } else {\n        formatContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    XEvent.bind(this.font, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { font } = this;\n      const { fontContextMenu } = font;\n      const { elPopUp } = fontContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (fontContextMenu.isClose()) {\n        fontContextMenu.open();\n      } else {\n        fontContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    XEvent.bind(this.dprFontSize, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { dprFontSize } = this;\n      const { fontSizeContextMenu } = dprFontSize;\n      const { elPopUp } = fontSizeContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (fontSizeContextMenu.isClose()) {\n        fontSizeContextMenu.open();\n      } else {\n        fontSizeContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    XEvent.bind(this.fontBold, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      const {\n        xScreen,\n      } = table;\n      const operateCellsHelper = table.getOperateCellsHelper();\n      const cells = table.getTableCells();\n      const { tableDataSnapshot } = table;\n      const xSelect = xScreen.findType(XSelectItem);\n      const { selectRange } = xSelect;\n      if (selectRange) {\n        const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n        const bold = !firstCell.fontAttr.bold;\n        tableDataSnapshot.begin();\n        const { cellDataProxy } = tableDataSnapshot;\n        operateCellsHelper.getCellOrNewCellByViewRange({\n          rectRange: selectRange,\n          callback: (r, c, origin) => {\n            const cell = origin.clone();\n            cell.fontAttr.bold = bold;\n            cellDataProxy.setCell(r, c, cell);\n          },\n        });\n        tableDataSnapshot.end();\n        table.render();\n      }\n    });\n    XEvent.bind(this.fontItalic, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      const {\n        xScreen,\n      } = table;\n      const operateCellsHelper = table.getOperateCellsHelper();\n      const cells = table.getTableCells();\n      const { tableDataSnapshot } = table;\n      const xSelect = xScreen.findType(XSelectItem);\n      const { selectRange } = xSelect;\n      if (selectRange) {\n        const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n        const italic = !firstCell.fontAttr.italic;\n        tableDataSnapshot.begin();\n        const { cellDataProxy } = tableDataSnapshot;\n        operateCellsHelper.getCellOrNewCellByViewRange({\n          rectRange: selectRange,\n          callback: (r, c, origin) => {\n            const cell = origin.clone();\n            cell.fontAttr.italic = italic;\n            cellDataProxy.setCell(r, c, cell);\n          },\n        });\n        tableDataSnapshot.end();\n        table.render();\n      }\n    });\n    XEvent.bind(this.underLine, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      const {\n        xScreen,\n      } = table;\n      const operateCellsHelper = table.getOperateCellsHelper();\n      const cells = table.getTableCells();\n      const { tableDataSnapshot } = table;\n      const xSelect = xScreen.findType(XSelectItem);\n      const { selectRange } = xSelect;\n      if (selectRange) {\n        const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n        const underline = !firstCell.fontAttr.underline;\n        tableDataSnapshot.begin();\n        const { cellDataProxy } = tableDataSnapshot;\n        operateCellsHelper.getCellOrNewCellByViewRange({\n          rectRange: selectRange,\n          callback: (r, c, origin) => {\n            const cell = origin.clone();\n            cell.fontAttr.underline = underline;\n            cellDataProxy.setCell(r, c, cell);\n          },\n        });\n        tableDataSnapshot.end();\n        table.render();\n      }\n    });\n    XEvent.bind(this.fontStrike, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      const {\n        xScreen,\n      } = table;\n      const operateCellsHelper = table.getOperateCellsHelper();\n      const cells = table.getTableCells();\n      const { tableDataSnapshot } = table;\n      const xSelect = xScreen.findType(XSelectItem);\n      const { selectRange } = xSelect;\n      if (selectRange) {\n        const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n        const strikethrough = !firstCell.fontAttr.strikethrough;\n        tableDataSnapshot.begin();\n        const { cellDataProxy } = tableDataSnapshot;\n        operateCellsHelper.getCellOrNewCellByViewRange({\n          rectRange: selectRange,\n          callback: (r, c, origin) => {\n            const cell = origin.clone();\n            cell.fontAttr.strikethrough = strikethrough;\n            cellDataProxy.setCell(r, c, cell);\n          },\n        });\n        tableDataSnapshot.end();\n        table.render();\n      }\n    });\n    XEvent.bind(this.fontColor, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { fontColor } = this;\n      const { fontColorContextMenu } = fontColor;\n      const { elPopUp } = fontColorContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (fontColorContextMenu.isClose()) {\n        fontColorContextMenu.open();\n      } else {\n        fontColorContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    XEvent.bind(this.fillColor, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { fillColor } = this;\n      const { fillColorContextMenu } = fillColor;\n      const { elPopUp } = fillColorContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (fillColorContextMenu.isClose()) {\n        fillColorContextMenu.open();\n      } else {\n        fillColorContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    XEvent.bind(this.border, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { border } = this;\n      const { borderTypeContextMenu } = border;\n      const { elPopUp } = borderTypeContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (borderTypeContextMenu.isClose()) {\n        borderTypeContextMenu.open();\n      } else {\n        borderTypeContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    XEvent.bind(this.merge, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      const {\n        xScreen,\n      } = table;\n      const merges = table.getTableMerges();\n      const cells = table.getTableCells();\n      const { tableDataSnapshot } = table;\n      const xSelect = xScreen.findType(XSelectItem);\n      const { selectRange } = xSelect;\n      if (selectRange) {\n        const merge = selectRange.clone();\n        const find = merges.getFirstIncludes(merge.sri, merge.sci);\n        const { mergeDataProxy } = tableDataSnapshot;\n        if (PlainUtils.isNotUnDef(find) && merge.equals(find)) {\n          tableDataSnapshot.begin();\n          mergeDataProxy.deleteMerge(find);\n          tableDataSnapshot.end();\n          table.render();\n        } else if (merge.multiple()) {\n          if (cells.emptyRectRange(merge)) {\n            tableDataSnapshot.begin();\n            mergeDataProxy.addMerge(merge);\n            tableDataSnapshot.end();\n            table.render();\n          } else {\n            new Confirm({\n              message: '非空单元格合并将使用左上角单元格内容',\n              ok: () => {\n                tableDataSnapshot.begin();\n                mergeDataProxy.addMerge(merge);\n                tableDataSnapshot.end();\n                table.render();\n              },\n            }).open();\n          }\n        }\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    XEvent.bind(this.horizontalAlign, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { horizontalAlign } = this;\n      const { horizontalContextMenu } = horizontalAlign;\n      const { elPopUp } = horizontalContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (horizontalContextMenu.isClose()) {\n        horizontalContextMenu.open();\n      } else {\n        horizontalContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    XEvent.bind(this.verticalAlign, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { verticalAlign } = this;\n      const { verticalContextMenu } = verticalAlign;\n      const { elPopUp } = verticalContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (verticalContextMenu.isClose()) {\n        verticalContextMenu.open();\n      } else {\n        verticalContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    XEvent.bind(this.textWrapping, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { textWrapping } = this;\n      const { textWrappingContextMenu } = textWrapping;\n      const { elPopUp } = textWrappingContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (textWrappingContextMenu.isClose()) {\n        textWrappingContextMenu.open();\n      } else {\n        textWrappingContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    XEvent.bind(this.fixed, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { fixed } = this;\n      const { fixedContextMenu } = fixed;\n      const { elPopUp } = fixedContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (fixedContextMenu.isClose()) {\n        fixedContextMenu.open();\n      } else {\n        fixedContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n    XEvent.bind(this.filter, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      const { xScreen } = table;\n      const filter = xScreen.findType(XFilter);\n      if (filter.display) {\n        filter.hideFilter();\n        this.filter.active(filter.display);\n      } else {\n        filter.openFilter();\n        this.filter.active(filter.display);\n      }\n    });\n    XEvent.bind(this.fontAngle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { fontAngle } = this;\n      const { fontAngleContextMenu } = fontAngle;\n      const { elPopUp } = fontAngleContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (fontAngleContextMenu.isClose()) {\n        fontAngleContextMenu.open();\n      } else {\n        fontAngleContextMenu.close();\n      }\n      e.stopPropagation();\n      e.preventDefault();\n    });\n  }\n\n  setHorizontalAlignStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let icon = new Icon('align-left');\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      switch (firstCell.fontAttr.align) {\n        case BaseFont.ALIGN.left:\n          icon = new Icon('align-left');\n          break;\n        case BaseFont.ALIGN.center:\n          icon = new Icon('align-center');\n          break;\n        case BaseFont.ALIGN.right:\n          icon = new Icon('align-right');\n          break;\n        default: break;\n      }\n    }\n    this.horizontalAlign.setIcon(icon);\n  }\n\n  setVerticalAlignStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let icon = new Icon('align-middle');\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      switch (firstCell.fontAttr.verticalAlign) {\n        case BaseFont.VERTICAL_ALIGN.top:\n          icon = new Icon('align-top');\n          break;\n        case BaseFont.VERTICAL_ALIGN.center:\n          icon = new Icon('align-middle');\n          break;\n        case BaseFont.VERTICAL_ALIGN.bottom:\n          icon = new Icon('align-bottom');\n          break;\n        default: break;\n      }\n    }\n    this.verticalAlign.setIcon(icon);\n  }\n\n  setTextWrappingStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let icon = new Icon('text-wrap');\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      switch (firstCell.fontAttr.textWrap) {\n        case BaseFont.TEXT_WRAP.TRUNCATE:\n          icon = new Icon('truncate');\n          break;\n        case BaseFont.TEXT_WRAP.WORD_WRAP:\n          icon = new Icon('text-wrap');\n          break;\n        case BaseFont.TEXT_WRAP.OVER_FLOW:\n          icon = new Icon('overflow');\n          break;\n      }\n    }\n    this.textWrapping.setIcon(icon);\n  }\n\n  setUndoStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { tableDataSnapshot } = table;\n    this.undo.active(tableDataSnapshot.canBack());\n  }\n\n  setRedoStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { tableDataSnapshot } = table;\n    this.redo.active(tableDataSnapshot.canGo());\n  }\n\n  setScaleStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { scale } = table;\n    const value = scale.goto(100);\n    this.scale.setTitle(`${value}%`);\n  }\n\n  setPaintFormatStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    this.paintFormat.active(this.paintFormat.includeSheet(sheet));\n  }\n\n  setFormatStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let text = '常规';\n    let format = 'default';\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      // eslint-disable-next-line prefer-destructuring\n      format = firstCell.format;\n      switch (format) {\n        case 'default':\n          text = '常规';\n          break;\n        case 'text':\n          text = '文本';\n          break;\n        case 'number':\n          text = '数字';\n          break;\n        case 'percentage':\n          text = '百分比';\n          break;\n        case 'fraction':\n          text = '分数';\n          break;\n        case 'ENotation':\n          text = '科学计数';\n          break;\n        case 'rmb':\n          text = '人民币';\n          break;\n        case 'hk':\n          text = '港币';\n          break;\n        case 'dollar':\n          text = '美元';\n          break;\n        case 'date1':\n        case 'date2':\n        case 'date3':\n        case 'date4':\n        case 'date5':\n          text = '日期';\n          break;\n        case 'time':\n          text = '时间';\n          break;\n        default: break;\n      }\n    }\n    this.format.setTitle(text);\n    this.format.formatContextMenu.setActiveByType(format);\n  }\n\n  setFontStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let name = 'Arial';\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      // eslint-disable-next-line prefer-destructuring\n      name = firstCell.fontAttr.name;\n    }\n    this.font.setTitle(name);\n    this.font.fontContextMenu.setActiveByType(name);\n  }\n\n  setStatus() {\n    this.setUndoStatus();\n    this.setRedoStatus();\n    this.setScaleStatus();\n    this.setPaintFormatStatus();\n    this.setFormatStatus();\n    this.setFontStatus();\n    this.setFontSizeStatus();\n    this.setFontBoldStatus();\n    this.setFontItalicStatus();\n    this.setUnderLineStatus();\n    this.setFontStrikeStatus();\n    this.setFontColorStatus();\n    this.setFillColorStatus();\n    this.setHorizontalAlignStatus();\n    this.setVerticalAlignStatus();\n    this.setTextWrappingStatus();\n    this.setFixedStatus();\n    this.setFilterStatus();\n    this.setFontAngleStatus();\n  }\n\n  setFixedStatus() {\n    const { body } = this.workTop.work;\n    const { fixed } = this;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    fixed.setFixedRowStatus(table.xFixedView.hasFixedTop());\n    fixed.setFixedColStatus(table.xFixedView.hasFixedLeft());\n  }\n\n  setFilterStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const filter = xScreen.findType(XFilter);\n    this.filter.active(filter.display);\n  }\n\n  setUnderLineStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let underline = false;\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      // eslint-disable-next-line prefer-destructuring\n      underline = firstCell.fontAttr.underline;\n    }\n    this.underLine.active(underline);\n  }\n\n  setFontSizeStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let size = '12';\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      // eslint-disable-next-line prefer-destructuring\n      size = firstCell.fontAttr.size;\n    }\n    this.dprFontSize.setTitle(size);\n  }\n\n  setFontBoldStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let bold = false;\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      // eslint-disable-next-line prefer-destructuring\n      bold = firstCell.fontAttr.bold;\n    }\n    this.fontBold.active(bold);\n  }\n\n  setFontStrikeStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let strikethrough = false;\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      // eslint-disable-next-line prefer-destructuring\n      strikethrough = firstCell.fontAttr.strikethrough;\n    }\n    this.fontStrike.active(strikethrough);\n  }\n\n  setFontColorStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let color = 'rgb(0, 0, 0)';\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      // eslint-disable-next-line prefer-destructuring\n      color = firstCell.fontAttr.color;\n    }\n    this.fontColor.setColor(color);\n    this.fontColor.fontColorContextMenu.setActiveByColor(color);\n  }\n\n  setFillColorStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let color = 'rgb(255, 255, 255)';\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      // eslint-disable-next-line prefer-destructuring\n      if (firstCell.background) {\n        color = firstCell.background;\n      }\n    }\n    this.fillColor.setColor(color);\n    this.fillColor.fillColorContextMenu.setActiveByColor(color);\n  }\n\n  setFontItalicStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let italic = false;\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      // eslint-disable-next-line prefer-destructuring\n      italic = firstCell.fontAttr.italic;\n    }\n    this.fontItalic.active(italic);\n  }\n\n  setFontAngleStatus() {\n    const { body } = this.workTop.work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen } = table;\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    let angle = 0;\n    if (selectRange) {\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\n      // eslint-disable-next-line prefer-destructuring\n      angle = firstCell.fontAttr.angle;\n    }\n    this.fontAngle.setValue(angle);\n  }\n\n  destroy() {\n    super.destroy();\n    this.unbind();\n  }\n\n}\n\nexport { TopMenu };\n","import { Widget } from '../../../../libs/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass Item extends Widget {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-option-item ${className}`);\r\n    this.title = '';\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title;\r\n    this.text(this.title);\r\n  }\r\n\r\n}\r\n\r\nexport { Item };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../libs/Element';\r\n\r\nclass FileContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(text) {\r\n    super(`${cssPrefix}-file-context-menu-item`);\r\n    this.scale = text;\r\n    this.titleElement = h('div', `${cssPrefix}-file-context-menu-item-title`);\r\n    this.titleElement.text(`${text}`);\r\n    this.children(this.titleElement);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FileContextMenuItem,\r\n};\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { Constant, cssPrefix } from '../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { FileContextMenuItem } from './FileContextMenuItem';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\n\r\nclass FileContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-scale-context-menu`, PlainUtils.copy({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new FileContextMenuItem('导入xlsx文件'),\r\n      new FileContextMenuItem('导出xlsx文件'),\r\n      new FileContextMenuItem('导入cvs文件'),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      this.addItem(item);\r\n    });\r\n    this.bind();\r\n  }\r\n\r\n  update(item) {\r\n    const { options } = this;\r\n    options.onUpdate(item);\r\n    this.close();\r\n  }\r\n\r\n  bind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n        this.update(item);\r\n      });\r\n    });\r\n  }\r\n\r\n  unbind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.unbind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FileContextMenu,\r\n};\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { FileContextMenu } from './contextmenu/file/FileContextMenu';\r\n\r\nclass File extends Item {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-file`);\r\n    this.options = options;\r\n    this.setTitle('文件');\r\n    this.fileContextMenu = new FileContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.fileContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { File };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\n\r\nclass ForMart extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-format`);\r\n    this.setTitle('格式');\r\n  }\r\n\r\n}\r\n\r\nexport { ForMart };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\n\r\nclass Insert extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-insert`);\r\n    this.setTitle('插入');\r\n  }\r\n\r\n}\r\n\r\nexport { Insert };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\n\r\nclass Look extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-look`);\r\n    this.setTitle('查看');\r\n  }\r\n\r\n}\r\n\r\nexport { Look };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\n\r\nclass Update extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-update`);\r\n    this.setTitle('修改');\r\n  }\r\n\r\n}\r\n\r\nexport { Update };\r\n","import { Widget } from '../../libs/Widget';\nimport { Constant, cssPrefix } from '../../const/Constant';\nimport { h } from '../../libs/Element';\nimport { File } from './options/File';\nimport { ForMart } from './options/ForMart';\nimport { Insert } from './options/Insert';\nimport { Look } from './options/Look';\nimport { Update } from './options/Update';\nimport { XEvent } from '../../libs/XEvent';\nimport { ElPopUp } from '../../component/elpopup/ElPopUp';\nimport { Alert } from '../../component/alert/Alert';\n\nclass TopOption extends Widget {\n\n  constructor(workTop) {\n    super(`${cssPrefix}-option`);\n    this.workTop = workTop;\n    this.title = `${cssPrefix} 工作簿`;\n    this.logoEle = h('div', `${cssPrefix}-option-logo`);\n    this.titleEle = h('div', `${cssPrefix}-option-title`);\n    this.optionsEle = h('div', `${cssPrefix}-option-box`);\n    this.leftEle = h('div', `${cssPrefix}-option-left`);\n    this.rightEle = h('div', `${cssPrefix}-option-right`);\n    this.leftEle.children(this.logoEle);\n    this.rightEle.children(this.titleEle, this.optionsEle);\n    this.children(this.leftEle);\n    this.children(this.rightEle);\n    this.setTitle(this.title);\n    this.file = new File({\n      contextMenu: {\n        onUpdate() {\n          new Alert({ message: '开发人员正在努力施工中....' }).open();\n        },\n      },\n    });\n    this.format = new ForMart();\n    this.insert = new Insert();\n    this.look = new Look();\n    this.update = new Update();\n    this.optionsEle.children(this.file);\n    this.optionsEle.children(this.format);\n    this.optionsEle.children(this.insert);\n    this.optionsEle.children(this.look);\n    this.optionsEle.children(this.update);\n  }\n\n  onAttach() {\n    this.bind();\n  }\n\n  bind() {\n    XEvent.bind(this.file, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { file } = this;\n      const { fileContextMenu } = file;\n      const { elPopUp } = fileContextMenu;\n      ElPopUp.closeAll([elPopUp]);\n      if (fileContextMenu.isClose()) {\n        fileContextMenu.open();\n      } else {\n        fileContextMenu.close();\n      }\n      e.preventDefault();\n      e.stopPropagation();\n    });\n  }\n\n  unbind() {}\n\n  setTitle(title) {\n    this.title = title;\n    this.titleEle.text(title);\n  }\n\n}\n\nexport { TopOption };\n","import { Widget } from '../../libs/Widget';\nimport { cssPrefix } from '../../const/Constant';\nimport { TopMenu } from './TopMenu';\nimport { TopOption } from './TopOption';\nimport { PlainUtils } from '../../utils/PlainUtils';\n\nconst settings = {\n  option: {\n    show: true,\n  },\n};\n\nclass WorkTop extends Widget {\n\n  constructor(work, options) {\n    super(`${cssPrefix}-work-top`);\n    this.options = PlainUtils.copy({}, settings, options);\n    this.work = work;\n  }\n\n  onAttach() {\n    this.option = new TopOption(this, this.options.option);\n    this.toolsMenu = new TopMenu(this, this.options.menu);\n    if (this.options.option.show) {\n      this.attach(this.option);\n    }\n    if (this.options.menu.show) {\n      this.attach(this.toolsMenu);\n    }\n  }\n\n}\n\nexport { WorkTop };\n","import { cssPrefix } from '../../const/Constant';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { Layer } from '../Layer';\r\n\r\nclass HorizontalLayer extends Layer {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-horizontal-layer`);\r\n    this.options = PlainUtils.copy({\r\n      style: {},\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { HorizontalLayer };\r\n","/* global document */\r\nimport { Widget } from '../../libs/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\n\r\nimport { XEvent } from '../../libs/XEvent';\r\n\r\nclass ScrollBarX extends Widget {\r\n\r\n  constructor(option) {\r\n    super(`${cssPrefix}-scroll-bar-x`);\r\n    this.option = PlainUtils.copy({\r\n      style: {},\r\n      scroll: to => to,\r\n    }, option);\r\n    this.lastBut = h('div', `${cssPrefix}-scroll-bar-x-last-but`);\r\n    this.nextBut = h('div', `${cssPrefix}-scroll-bar-x-next-but`);\r\n    this.content = h('div', `${cssPrefix}-scroll-bar-x-content`);\r\n    this.block = h('div', `${cssPrefix}-scroll-bar-x-block`);\r\n    this.content.children(this.block);\r\n    this.children(...[\r\n      this.lastBut,\r\n      this.nextBut,\r\n      this.content,\r\n    ]);\r\n    this.blockLeft = 0;\r\n    this.maxBlockLeft = 0;\r\n    this.blockWidth = 0;\r\n    this.minBlockWidth = 20;\r\n    this.scrollTo = 0;\r\n    this.contentWidth = 0;\r\n    this.viewPortWidth = 0;\r\n    this.isHide = true;\r\n    this.css(this.option.style);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n  }\r\n\r\n  setSize(viewPortWidth, contentWidth) {\r\n    if (viewPortWidth < contentWidth) {\r\n      this.isHide = false;\r\n      this.show();\r\n      // 计算滑块宽度\r\n      const contentBox = this.content.box();\r\n      const blockWidth = viewPortWidth / contentWidth * contentBox.width;\r\n      this.blockWidth = blockWidth < this.minBlockWidth ? this.minBlockWidth : blockWidth;\r\n      this.viewPortWidth = viewPortWidth;\r\n      this.contentWidth = contentWidth;\r\n      this.maxBlockLeft = contentBox.width - this.blockWidth;\r\n      this.block.css('width', `${this.blockWidth}px`);\r\n      // 计算滑块位置\r\n      const blockLeft = (this.scrollTo / (contentWidth - viewPortWidth)) * this.maxBlockLeft;\r\n      this.blockLeft = blockLeft > this.maxBlockLeft ? this.maxBlockLeft : blockLeft;\r\n      this.scrollTo = this.computeScrollTo(this.blockLeft);\r\n      this.block.css('left', `${this.blockLeft}px`);\r\n    } else {\r\n      this.isHide = true;\r\n      this.hide();\r\n      this.option.scroll(0);\r\n    }\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.block);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.block, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (evt1) => {\r\n      if (evt1.button !== 0) return;\r\n      const downEventXy = this.eventXy(evt1, this.block);\r\n      XEvent.mouseMoveUp(h(document), (evt2) => {\r\n        // 计算移动的距离\r\n        const moveEventXy = this.eventXy(evt2, this.content);\r\n        let left = moveEventXy.x - downEventXy.x;\r\n        if (left < 0) left = 0;\r\n        if (left > this.maxBlockLeft) left = this.maxBlockLeft;\r\n        // 计算滑动的距离\r\n        this.blockLeft = left;\r\n        this.scrollTo = this.computeScrollTo(this.blockLeft);\r\n        this.block.css('left', `${left}px`);\r\n        this.option.scroll(this.scrollTo);\r\n        evt2.stopPropagation();\r\n        evt2.preventDefault();\r\n      });\r\n      evt1.stopPropagation();\r\n      evt1.preventDefault();\r\n    });\r\n  }\r\n\r\n  scrollMove(move) {\r\n    this.setLocal(move);\r\n    this.option.scroll(this.scrollTo);\r\n  }\r\n\r\n  setLocal(move) {\r\n    let to = move;\r\n    const maxTo = this.contentWidth - this.viewPortWidth;\r\n    if (to > maxTo) to = maxTo; else if (to < 0) to = 0;\r\n    const blockLeft = (to / (this.contentWidth - this.viewPortWidth)) * this.maxBlockLeft;\r\n    this.blockLeft = blockLeft > this.maxBlockLeft ? this.maxBlockLeft : blockLeft;\r\n    if (this.isHide === false) {\r\n      this.scrollTo = to;\r\n      this.block.css('left', `${this.blockLeft}px`);\r\n    }\r\n  }\r\n\r\n  computeScrollTo(move) {\r\n    return (move / this.maxBlockLeft) * (this.contentWidth - this.viewPortWidth);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { ScrollBarX };\r\n","/* global document */\r\nimport { Widget } from '../../libs/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\n\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { XEvent } from '../../libs/XEvent';\r\n\r\nclass ScrollBarY extends Widget {\r\n\r\n  constructor(option) {\r\n    super(`${cssPrefix}-scroll-bar-y`);\r\n    this.option = PlainUtils.copy({\r\n      style: {},\r\n      scroll: to => to,\r\n    }, option);\r\n    this.lastBut = h('div', `${cssPrefix}-scroll-bar-y-last-but`);\r\n    this.nextBut = h('div', `${cssPrefix}-scroll-bar-y-next-but`);\r\n    this.content = h('div', `${cssPrefix}-scroll-bar-y-content`);\r\n    this.block = h('div', `${cssPrefix}-scroll-bar-y-block`);\r\n    this.content.children(this.block);\r\n    this.children(...[\r\n      this.lastBut,\r\n      this.nextBut,\r\n      this.content,\r\n    ]);\r\n    this.blockTop = 0;\r\n    this.maxBlockTop = 0;\r\n    this.blockHeight = 0;\r\n    this.minBlockHeight = 20;\r\n    this.scrollTo = 0;\r\n    this.contentHeight = 0;\r\n    this.viewPortHeight = 0;\r\n    this.isHide = true;\r\n    this.css(this.option.style);\r\n  }\r\n\r\n  setSize(viewPortHeight, contentHeight) {\r\n    if (viewPortHeight < contentHeight) {\r\n      this.isHide = false;\r\n      this.show();\r\n      // 计算滑块高度\r\n      const contentBox = this.content.box();\r\n      const blockHeight = viewPortHeight / contentHeight * contentBox.height;\r\n      this.blockHeight = blockHeight < this.minBlockHeight ? this.minBlockHeight : blockHeight;\r\n      this.viewPortHeight = viewPortHeight;\r\n      this.contentHeight = contentHeight;\r\n      this.maxBlockTop = contentBox.height - this.blockHeight;\r\n      this.block.css('height', `${this.blockHeight}px`);\r\n      // 计算滑块位置\r\n      const blockTop = (this.scrollTo / (contentHeight - viewPortHeight)) * this.maxBlockTop;\r\n      this.blockTop = blockTop > this.maxBlockTop ? this.maxBlockTop : blockTop;\r\n      this.scrollTo = this.computeScrollTo(this.blockTop);\r\n      this.block.css('top', `${this.blockTop}px`);\r\n    } else {\r\n      this.isHide = true;\r\n      this.hide();\r\n      this.option.scroll(0);\r\n    }\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.block);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.block, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (evt1) => {\r\n      if (evt1.button !== 0) return;\r\n      const downEventXy = this.eventXy(evt1, this.block);\r\n      XEvent.mouseMoveUp(h(document), (evt2) => {\r\n        // 计算移动的距离\r\n        const moveEventXy = this.eventXy(evt2, this.content);\r\n        let top = moveEventXy.y - downEventXy.y;\r\n        if (top < 0) top = 0;\r\n        if (top > this.maxBlockTop) top = this.maxBlockTop;\r\n        // 计算滑动的距离\r\n        this.blockTop = top;\r\n        this.scrollTo = this.computeScrollTo(this.blockTop);\r\n        this.block.css('top', `${top}px`);\r\n        this.option.scroll(this.scrollTo);\r\n        evt2.stopPropagation();\r\n        evt2.preventDefault();\r\n      });\r\n    });\r\n  }\r\n\r\n  setLocal(move) {\r\n    let to = move;\r\n    const maxTo = this.contentHeight - this.viewPortHeight;\r\n    if (to > maxTo) to = maxTo; else if (to < 0) to = 0;\r\n    const blockTop = (to / (this.contentHeight - this.viewPortHeight)) * this.maxBlockTop;\r\n    this.blockTop = blockTop > this.maxBlockTop ? this.maxBlockTop : blockTop;\r\n    if (this.isHide === false) {\r\n      this.scrollTo = to;\r\n      this.block.css('top', `${this.blockTop}px`);\r\n    }\r\n  }\r\n\r\n  scrollMove(move) {\r\n    this.setLocal(move);\r\n    this.option.scroll(this.scrollTo);\r\n  }\r\n\r\n  computeScrollTo(move) {\r\n    return (move / this.maxBlockTop) * (this.contentHeight - this.viewPortHeight);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { ScrollBarY };\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { Layer } from '../Layer';\r\n\r\nclass HorizontalLayerElement extends Layer {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-horizontal-layer-element`);\r\n    this.options = PlainUtils.copy({\r\n      style: {\r\n        flexGrow: '0',\r\n      },\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { HorizontalLayerElement };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { Layer } from '../../Layer';\r\n\r\nclass VerticalCenterElement extends Layer {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-vertical-center-element`);\r\n    this.options = PlainUtils.copy({\r\n      style: {},\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { VerticalCenterElement };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { Layer } from '../../Layer';\r\n\r\nclass VerticalCenter extends Layer {\r\n  constructor(options) {\r\n    super(`${cssPrefix}-vertical-center`);\r\n    this.options = PlainUtils.copy({\r\n      style: {},\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { VerticalCenter };\r\n","import { Widget } from '../../libs/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\n\r\nclass SheetView extends Widget {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-sheet-view`);\r\n    this.sheetList = [];\r\n    this.activeIndex = -1;\r\n  }\r\n\r\n  setActiveSheet(index) {\r\n    const { sheetList } = this;\r\n    if (sheetList[index]) {\r\n      this.activeIndex = index;\r\n      return this.setActive(sheetList[index]);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  attach(sheet) {\r\n    this.sheetList.push(sheet);\r\n    super.attach(sheet);\r\n    sheet.hide();\r\n  }\r\n\r\n  getActiveSheet() {\r\n    return this.sheetList[this.activeIndex];\r\n  }\r\n\r\n  setActive(sheet) {\r\n    sheet.show();\r\n    sheet.sibling().forEach((item) => {\r\n      item.hide();\r\n    });\r\n    return sheet;\r\n  }\r\n\r\n  getLastIndex() {\r\n    return this.sheetList.length - 1;\r\n  }\r\n\r\n}\r\n\r\nexport { SheetView };\r\n","import { Widget } from '../../libs/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { XEvent } from '../../libs/XEvent';\r\n\r\nconst settings = {\r\n  onAdd(tab) { return tab; },\r\n  onSwitch(tab) { return tab; },\r\n};\r\n\r\nclass TabView extends Widget {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-sheet-switch-tab`);\r\n    this.last = h('div', `${cssPrefix}-switch-tab-last-btn`);\r\n    this.next = h('div', `${cssPrefix}-switch-tab-next-btn`);\r\n    this.content = h('div', `${cssPrefix}-sheet-tab-content`);\r\n    this.tabs = h('div', `${cssPrefix}-sheet-tab-tabs`);\r\n    this.plus = h('div', `${cssPrefix}-sheet-tab-plus`);\r\n    this.content.children(this.tabs);\r\n    this.children(...[\r\n      this.last,\r\n      this.next,\r\n      this.content,\r\n      this.plus,\r\n    ]);\r\n    this.options = PlainUtils.copy({}, settings, options);\r\n    this.left = null;\r\n    this.tabList = [];\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n  }\r\n\r\n  offsetSizeLeft() {\r\n    const maxWidth = this.content.offset().width;\r\n    const current = this.tabs.offset().width;\r\n    if (current > maxWidth) {\r\n      this.left = -(current - maxWidth);\r\n      this.tabs.css('marginLeft', `${this.left}px`);\r\n    }\r\n  }\r\n\r\n  unbind() {\r\n    const { next, last, plus } = this;\r\n    XEvent.unbind(next);\r\n    XEvent.unbind(last);\r\n    XEvent.unbind(plus);\r\n  }\r\n\r\n  bind() {\r\n    const { next, last, plus } = this;\r\n    XEvent.bind(next, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      const maxWidth = this.content.offset().width;\r\n      const current = this.tabs.offset().width;\r\n      const min = -(current - maxWidth);\r\n      let left = this.left || 0;\r\n      left -= 30;\r\n      if (left < min) left = min;\r\n      this.left = left;\r\n      this.tabs.css('marginLeft', `${this.left}px`);\r\n    });\r\n    XEvent.bind(last, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      let left = this.left || 0;\r\n      left += 30;\r\n      if (left > 0) left = 0;\r\n      this.left = left;\r\n      this.tabs.css('marginLeft', `${this.left}px`);\r\n    });\r\n    XEvent.bind(plus, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.options.onAdd();\r\n      this.offsetSizeLeft();\r\n    });\r\n  }\r\n\r\n  attach(tab) {\r\n    this.tabList.push(tab);\r\n    this.tabs.children(tab);\r\n    tab.onAttach();\r\n    XEvent.bind(tab, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.setActive(tab);\r\n      this.options.onSwitch(tab);\r\n    });\r\n  }\r\n\r\n  setActiveTab(index) {\r\n    const { tabList } = this;\r\n    if (tabList[index]) {\r\n      this.setActive(tabList[index]);\r\n      return tabList[index];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  setActive(tab) {\r\n    tab.addClass('active');\r\n    tab.sibling().forEach((item) => {\r\n      item.removeClass('active');\r\n    });\r\n  }\r\n\r\n  getLastIndex() {\r\n    return this.tabList.length - 1;\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { TabView };\r\n","import { Widget } from '../../libs/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\n\r\nlet number = 1;\r\n\r\nclass Tab extends Widget {\r\n\r\n  constructor(name = `Sheet${number}`) {\r\n    super(`${cssPrefix}-sheet-tab`);\r\n    number += 1;\r\n    this.setName(name);\r\n  }\r\n\r\n  setName(name) {\r\n    this.name = name;\r\n    this.text(this.name);\r\n  }\r\n\r\n}\r\n\r\nexport { Tab };\r\n","class Scale {\r\n\r\n  constructor() {\r\n    this.value = 1;\r\n  }\r\n\r\n  back(origin) {\r\n    return origin / this.value;\r\n  }\r\n\r\n  goto(origin) {\r\n    return this.value * origin;\r\n  }\r\n\r\n  setValue(value) {\r\n    this.value = value;\r\n  }\r\n\r\n}\r\n\r\nclass ScaleAdapter {\r\n\r\n  constructor({\r\n    goto = v => v,\r\n    back = v => v,\r\n  } = {}) {\r\n    this.goto = goto;\r\n    this.back = back;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Scale, ScaleAdapter,\r\n};\r\n","import { ScaleAdapter } from './Scale';\r\n\r\nclass Code {\r\n\r\n  constructor({\r\n    scaleAdapter = new ScaleAdapter(),\r\n    height = 33,\r\n    width = 50,\r\n    background = '#f6f7fa',\r\n    color = '#585757',\r\n    size = 11,\r\n    gridColor = '#e8e8e8',\r\n  }) {\r\n    this.scaleAdapter = scaleAdapter;\r\n    this.height = height;\r\n    this.width = width;\r\n    this.background = background;\r\n    this.color = color;\r\n    this.size = size;\r\n    this.gridColor = gridColor;\r\n  }\r\n\r\n  getGridColor() {\r\n    const { gridColor } = this;\r\n    return gridColor;\r\n  }\r\n\r\n  getColor() {\r\n    const { color } = this;\r\n    return color;\r\n  }\r\n\r\n  getSize() {\r\n    const { scaleAdapter } = this;\r\n    const { size } = this;\r\n    return scaleAdapter.goto(size);\r\n  }\r\n\r\n  getBackground() {\r\n    const { background } = this;\r\n    return background;\r\n  }\r\n\r\n  getHeight() {\r\n    const { scaleAdapter } = this;\r\n    const { height } = this;\r\n    return scaleAdapter.goto(height);\r\n  }\r\n\r\n  getWidth() {\r\n    const { scaleAdapter } = this;\r\n    const { width } = this;\r\n    return scaleAdapter.goto(width);\r\n  }\r\n\r\n}\r\n\r\nexport { Code };\r\n","class Row {\r\n\r\n  constructor(row, {\r\n    height = 30,\r\n  } = {}) {\r\n    this.height = height;\r\n    this.row = row;\r\n    this.reCkHasAngle = true;\r\n    this.hasAngelCell = false;\r\n  }\r\n\r\n  setHasAngelCell(value) {\r\n    this.hasAngelCell = value;\r\n  }\r\n\r\n  setReCkHasAngle(value) {\r\n    this.reCkHasAngle = value;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Row,\r\n};\r\n","import { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { ScaleAdapter } from './Scale';\r\nimport { RectRange } from './RectRange';\r\nimport { Row } from './Row';\r\n\r\nclass Rows {\r\n\r\n  constructor({\r\n    scaleAdapter = new ScaleAdapter(),\r\n    len = 10,\r\n    height = 30,\r\n    xIteratorBuilder,\r\n    data = [],\r\n  }) {\r\n    this.scaleAdapter = scaleAdapter;\r\n    this.len = len;\r\n    this.data = data;\r\n    this.min = 5;\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n    this.height = PlainUtils.minIf(height, this.min);\r\n  }\r\n\r\n  sectionSumHeight(sri, eri) {\r\n    let total = 0;\r\n    if (sri > eri) {\r\n      return total;\r\n    }\r\n    this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(sri)\r\n      .setEnd(eri)\r\n      .setLoop((i) => {\r\n        total += this.getHeight(i);\r\n      })\r\n      .execute();\r\n    return total;\r\n  }\r\n\r\n  rectRangeSumHeight(rectRange) {\r\n    if (!rectRange.equals(RectRange.EMPTY)) {\r\n      return this.sectionSumHeight(rectRange.sri, rectRange.eri);\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  get(ri) {\r\n    let row = this.data[ri];\r\n    if (row) {\r\n      if (row instanceof Row) {\r\n        return row;\r\n      }\r\n      row = new Row(ri, row);\r\n      this.data[ri] = row;\r\n    }\r\n    return row;\r\n  }\r\n\r\n  getOrNew(ri) {\r\n    const row = this.get(ri);\r\n    if (row) {\r\n      return row;\r\n    }\r\n    this.data[ri] = new Row(ri, {\r\n      height: this.height,\r\n    });\r\n    return this.data[ri];\r\n  }\r\n\r\n  getHeight(ri) {\r\n    const { scaleAdapter } = this;\r\n    const row = this.get(ri);\r\n    if (row) {\r\n      return scaleAdapter.goto(row.height);\r\n    }\r\n    return scaleAdapter.goto(this.height);\r\n  }\r\n\r\n  eachHeight(ri, ei, cb, sy = 0) {\r\n    let y = sy;\r\n    this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(ri)\r\n      .setEnd(ei)\r\n      .setLoop((i) => {\r\n        const rowHeight = this.getHeight(i);\r\n        cb(i, rowHeight, y);\r\n        y += rowHeight;\r\n      })\r\n      .execute();\r\n  }\r\n\r\n  setHeight(ri, height) {\r\n    const row = this.getOrNew(ri);\r\n    const { scaleAdapter } = this;\r\n    row.height = scaleAdapter.back(PlainUtils.minIf(height, this.min));\r\n  }\r\n\r\n  getData() {\r\n    return this.data;\r\n  }\r\n\r\n  setData(data) {\r\n    this.data = data;\r\n  }\r\n\r\n}\r\n\r\nexport { Rows };\r\n","class Col {\r\n\r\n  constructor(col, {\r\n    width = 130,\r\n  } = {}) {\r\n    this.col = col;\r\n    this.width = width;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Col,\r\n};\r\n","import { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { ScaleAdapter } from './Scale';\r\nimport { RectRange } from './RectRange';\r\nimport { Col } from './Col';\r\n\r\nclass Cols {\r\n\r\n  constructor({\r\n    scaleAdapter = new ScaleAdapter(),\r\n    len = 10,\r\n    data = [],\r\n    width = 110,\r\n    xIteratorBuilder,\r\n  }) {\r\n    this.scaleAdapter = scaleAdapter;\r\n    this.len = len;\r\n    this.data = data;\r\n    this.min = 5;\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n    this.width = PlainUtils.minIf(width, this.min);\r\n  }\r\n\r\n  sectionSumWidth(sci, eci) {\r\n    let total = 0;\r\n    if (sci > eci) {\r\n      return total;\r\n    }\r\n    this.xIteratorBuilder.getColIterator()\r\n      .setBegin(sci)\r\n      .setEnd(eci)\r\n      .setLoop((i) => {\r\n        total += this.getWidth(i);\r\n      })\r\n      .execute();\r\n    return total;\r\n  }\r\n\r\n  rectRangeSumWidth(rectRange) {\r\n    if (!rectRange.equals(RectRange.EMPTY)) {\r\n      return this.sectionSumWidth(rectRange.sci, rectRange.eci);\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  get(ci) {\r\n    let col = this.data[ci];\r\n    if (col) {\r\n      if (col instanceof Col) {\r\n        return col;\r\n      }\r\n      col = new Col(ci, col);\r\n      this.data[ci] = col;\r\n    }\r\n    return col;\r\n  }\r\n\r\n  getOrNew(ci) {\r\n    const col = this.get(ci);\r\n    if (col) {\r\n      return col;\r\n    }\r\n    this.data[ci] = new Col(ci, {\r\n      width: this.width,\r\n    });\r\n    return this.data[ci];\r\n  }\r\n\r\n  getWidth(i) {\r\n    const { scaleAdapter } = this;\r\n    const col = this.data[i];\r\n    if (col && col.width) {\r\n      return scaleAdapter.goto(col.width);\r\n    }\r\n    return scaleAdapter.goto(this.width);\r\n  }\r\n\r\n  eachWidth(ci, ei, cb, sx = 0) {\r\n    let x = sx;\r\n    this.xIteratorBuilder.getColIterator()\r\n      .setBegin(ci)\r\n      .setEnd(ei)\r\n      .setLoop((i) => {\r\n        const colWidth = this.getWidth(i);\r\n        cb(i, colWidth, x);\r\n        x += colWidth;\r\n      })\r\n      .execute();\r\n  }\r\n\r\n  setWidth(i, width) {\r\n    const col = this.getOrNew(i);\r\n    const { scaleAdapter } = this;\r\n    col.width = scaleAdapter.back(PlainUtils.minIf(width, this.min));\r\n  }\r\n\r\n  getData() {\r\n    return this.data;\r\n  }\r\n\r\n  setData(data) {\r\n    this.data = data;\r\n  }\r\n\r\n}\r\n\r\nexport { Cols };\r\n","\r\nconst SCROLL_TYPE = {\r\n  H_LEFT: Symbol('水平方向左边滚动条'),\r\n  H_RIGHT: Symbol('水平方向向右边滚动'),\r\n  V_TOP: Symbol('垂直方向向上滚动'),\r\n  V_BOTTOM: Symbol('垂直方向下滚动'),\r\n  UN: Symbol('未知'),\r\n};\r\n\r\nclass Scroll {\r\n\r\n  constructor({\r\n    xFixedView,\r\n  }) {\r\n    const fixedView = xFixedView.getFixedView();\r\n    this.ri = fixedView.eri + 1;\r\n    this.ci = fixedView.eci + 1;\r\n    this.x = 0;\r\n    this.y = 0;\r\n    this.type = SCROLL_TYPE.UN;\r\n  }\r\n}\r\n\r\nexport {\r\n  Scroll, SCROLL_TYPE,\r\n};\r\n","/* global document */\r\nimport { XEvent } from '../../libs/XEvent';\r\nimport { Constant } from '../../const/Constant';\r\n\r\nclass XTableKeyboard {\r\n\r\n  constructor(table) {\r\n    const { focus } = table;\r\n    this.table = table;\r\n    this.pool = [];\r\n    this.xTableKeyBoardDownHandle = (e) => {\r\n      const { activate } = focus;\r\n      const { keyCode } = e;\r\n      if (activate) {\r\n        const { target } = activate;\r\n        const find = this.find(target);\r\n        if (find && find.keyCode === keyCode) {\r\n          find.callback();\r\n        }\r\n      }\r\n      if (keyCode === 9) {\r\n        e.preventDefault();\r\n      }\r\n    };\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(document, Constant.SYSTEM_EVENT_TYPE.KEY_DOWN, this.xTableKeyBoardDownHandle);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(document, Constant.SYSTEM_EVENT_TYPE.KEY_DOWN, this.xTableKeyBoardDownHandle);\r\n  }\r\n\r\n  find(el) {\r\n    const { pool } = this;\r\n    for (let i = 0; i < pool.length; i += 1) {\r\n      const item = pool[i];\r\n      const { target } = item;\r\n      if (target === el) {\r\n        return item;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  register({\r\n    target, keyCode, callback,\r\n  }) {\r\n    this.pool.push({ target, keyCode, callback });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableKeyboard,\r\n};\r\n","/* global document */\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { Widget } from '../../../libs/Widget';\r\nimport { h } from '../../../libs/Element';\r\nimport { XEvent } from '../../../libs/XEvent';\r\nimport { XTableMousePointer } from '../XTableMousePointer';\r\n\r\nclass ColFixed extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-col-fixed-bar`);\r\n    const { xFixedView } = table;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const block = h('div', `${cssPrefix}-table-col-fixed-block`);\r\n    this.table = table;\r\n    this.fxSci = fixedView.sci;\r\n    this.fxEci = fixedView.eci;\r\n    this.block = block;\r\n    this.children(block);\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    const {\r\n      mousePointer, dropColFixed, xFixedView,\r\n    } = table;\r\n    let moveOff = true;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.setSize();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.setSize();\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, () => {\r\n      this.setActive(true);\r\n      mousePointer.lock(ColFixed);\r\n      mousePointer.set(XTableMousePointer.KEYS.grab, ColFixed);\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      if (!moveOff) {\r\n        return;\r\n      }\r\n      this.setActive(false);\r\n      mousePointer.free(ColFixed);\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      dropColFixed.show();\r\n      this.setActive(true);\r\n      // 滚动视图\r\n      const scrollView = table.getScrollView();\r\n      // 获取固定区域\r\n      const fixedView = xFixedView.getFixedView();\r\n      this.fxSci = fixedView.sci;\r\n      this.fxEci = fixedView.eci;\r\n      // 锁定鼠标指针\r\n      mousePointer.lock(ColFixed);\r\n      mousePointer.set(XTableMousePointer.KEYS.grab, ColFixed);\r\n      // 推拽条移动位置\r\n      const { x } = table.eventXy(e, table);\r\n      dropColFixed.offset({ left: x });\r\n      moveOff = false;\r\n      // 如果存在固定位置 定位到起始处\r\n      if (xFixedView.hasFixedLeft()) {\r\n        table.scroll.x = 0;\r\n        table.scroll.ci = this.fxEci + 1;\r\n        table.resize();\r\n      }\r\n      XEvent.mouseMoveUp(document, (e) => {\r\n        // 推拽条移动位置\r\n        const { x, y } = table.eventXy(e, table);\r\n        dropColFixed.offset({ left: x });\r\n        // 更新行号\r\n        const { ci } = table.getRiCiByXy(x, y);\r\n        // 是否越界最大列数\r\n        if (ci < scrollView.eci - 2) {\r\n          this.fxEci = ci;\r\n          this.setSize();\r\n        }\r\n      }, () => {\r\n        this.setActive(false);\r\n        // 释放指针\r\n        mousePointer.free(ColFixed);\r\n        dropColFixed.hide();\r\n        // 更新固定区域\r\n        table.setFixedCol(this.fxEci);\r\n        moveOff = true;\r\n      });\r\n    });\r\n  }\r\n\r\n  setActive(status) {\r\n    if (status) {\r\n      this.block.addClass('active');\r\n      this.addClass('active');\r\n    } else {\r\n      this.block.removeClass('active');\r\n      this.removeClass('active');\r\n    }\r\n  }\r\n\r\n  onAttach() {\r\n    const { table } = this;\r\n    // 初始化固定条大小\r\n    this.setSize();\r\n    // 绑定处理函数\r\n    this.bind();\r\n    // 注册焦点元素\r\n    table.focus.register({ target: this, stop: false });\r\n  }\r\n\r\n  setSize() {\r\n    const {\r\n      table, block,\r\n    } = this;\r\n    const { fxSci, fxEci } = this;\r\n    const { cols } = table;\r\n    const width = ColFixed.WIDTH;\r\n    const height = fxEci > -1 ? table.visualHeight() : table.getIndexHeight();\r\n    const offset = fxEci > -1 ? width / 2 : width;\r\n    const left = cols.sectionSumWidth(fxSci, fxEci) + table.getIndexWidth() - offset;\r\n    block.offset({\r\n      height: table.getIndexHeight(), width,\r\n    });\r\n    this.offset({\r\n      width, height, left, top: 0,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\nColFixed.WIDTH = 6;\r\n\r\nexport {\r\n  ColFixed,\r\n};\r\n","/* global document */\r\nimport { Widget } from '../../../libs/Widget';\r\nimport { cssPrefix, Constant } from '../../../const/Constant';\r\nimport { h } from '../../../libs/Element';\r\nimport { XEvent } from '../../../libs/XEvent';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XTableMousePointer } from '../XTableMousePointer';\r\nimport { ColFixed } from '../tablefixed/ColFixed';\r\n\r\nclass XReSizer extends Widget {\r\n\r\n  constructor(table, options = { width: 5 }) {\r\n    super(`${cssPrefix}-re-sizer-horizontal`);\r\n    this.table = table;\r\n    this.options = options;\r\n    this.width = options.width;\r\n    this.hoverEl = h('div', `${cssPrefix}-re-sizer-hover`);\r\n    this.lineEl = h('div', `${cssPrefix}-re-sizer-line`);\r\n    this.children(...[\r\n      this.hoverEl,\r\n      this.lineEl,\r\n    ]);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.table.focus.register({ target: this });\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    const {\r\n      cols, mousePointer, focus, xFixedView,\r\n    } = table;\r\n    const { tableDataSnapshot } = table;\r\n    const { colsDataProxy } = tableDataSnapshot;\r\n    const { index } = table;\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      mousePointer.lock(XReSizer);\r\n      mousePointer.set(XTableMousePointer.KEYS.colResize, XReSizer);\r\n      const { left, ci } = this.getEventLeft(e);\r\n      const min = left - cols.getWidth(ci) + cols.min;\r\n      let { x: mx } = table.eventXy(e);\r\n      XEvent.mouseMoveUp(document, (e) => {\r\n        ({ x: mx } = table.eventXy(e));\r\n        mx -= this.width / 2;\r\n        mx = Math.ceil(PlainUtils.minIf(mx, min));\r\n        this.css('left', `${mx}px`);\r\n        this.lineEl.css('height', `${table.visualHeight()}px`);\r\n        this.lineEl.show();\r\n      }, (e) => {\r\n        mousePointer.free(XReSizer);\r\n        this.lineEl.hide();\r\n        this.css('left', `${mx}px`);\r\n        const { y } = table.eventXy(e);\r\n        if (y <= 0) {\r\n          this.hide();\r\n        }\r\n        const newLeft = mx - (left - cols.getWidth(ci)) + this.width;\r\n        tableDataSnapshot.begin();\r\n        colsDataProxy.setWidth(ci, newLeft);\r\n        tableDataSnapshot.end();\r\n        table.resize();\r\n      });\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      mousePointer.free(XReSizer);\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, () => {\r\n      mousePointer.lock(XReSizer);\r\n      mousePointer.set(XTableMousePointer.KEYS.colResize, XReSizer);\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, (e) => {\r\n      // eslint-disable-next-line prefer-const\r\n      let { left, ci } = this.getEventLeft(e);\r\n      const min = left - cols.getWidth(ci) + cols.min;\r\n      const visualWidth = table.visualWidth();\r\n      const fixedView = xFixedView.getFixedView();\r\n      if (left > visualWidth) {\r\n        left = visualWidth;\r\n      }\r\n      if (left === -1 || min > visualWidth || ci === -1) {\r\n        this.hide();\r\n      } else {\r\n        this.show();\r\n        if (ci === fixedView.eci) {\r\n          this.css('left', `${left - this.width - ColFixed.WIDTH / 2}px`);\r\n        } else {\r\n          this.css('left', `${left - this.width}px`);\r\n        }\r\n        this.hoverEl.css('width', `${this.width}px`);\r\n        this.hoverEl.css('height', `${index.getHeight()}px`);\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      this.hide();\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { activate } = focus;\r\n      const { target } = activate;\r\n      if (target !== table && target !== this) {\r\n        this.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  getEventLeft(event) {\r\n    const { table } = this;\r\n    const {\r\n      cols, xFixedView, xFixedMeasure,\r\n    } = table;\r\n    const { index } = table;\r\n    const { x, y } = table.eventXy(event);\r\n    const { ri, ci } = table.getRiCiByXy(x, y);\r\n    const result = {\r\n      ci, left: -1,\r\n    };\r\n    // 无效区域\r\n    if (ri !== -1) {\r\n      return result;\r\n    }\r\n    const fixedWidth = xFixedMeasure.getWidth();\r\n    const indexWidth = index.getWidth();\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = table.getScrollView();\r\n    // 冻结区域\r\n    if (xFixedView.hasFixedLeft()) {\r\n      if (ci > fixedView.eci) {\r\n        result.left = indexWidth + fixedWidth + cols.sectionSumWidth(scrollView.sci, ci);\r\n      } else {\r\n        result.left = indexWidth + cols.sectionSumWidth(fixedView.sci, ci);\r\n      }\r\n    } else {\r\n      result.left = indexWidth + cols.sectionSumWidth(scrollView.sci, ci);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { XReSizer };\r\n","/* global document */\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { Widget } from '../../../libs/Widget';\r\nimport { h } from '../../../libs/Element';\r\nimport { XEvent } from '../../../libs/XEvent';\r\nimport { XTableMousePointer } from '../XTableMousePointer';\r\n\r\nclass RowFixed extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-row-fixed-bar`);\r\n    const { xFixedView } = table;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const block = h('div', `${cssPrefix}-table-row-fixed-block`);\r\n    this.table = table;\r\n    this.fxSri = fixedView.sri;\r\n    this.fxEri = fixedView.eri;\r\n    this.block = block;\r\n    this.children(this.block);\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    const {\r\n      mousePointer, dropRowFixed, xFixedView,\r\n    } = table;\r\n    let moveOff = true;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.setSize();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.setSize();\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, () => {\r\n      this.setActive(true);\r\n      mousePointer.lock(RowFixed);\r\n      mousePointer.set(XTableMousePointer.KEYS.grab, RowFixed);\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      if (!moveOff) {\r\n        return;\r\n      }\r\n      this.setActive(false);\r\n      mousePointer.free(RowFixed);\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      dropRowFixed.show();\r\n      this.setActive(true);\r\n      // 滚动视图\r\n      const scrollView = table.getScrollView();\r\n      // 获取固定区域\r\n      const fixedView = xFixedView.getFixedView();\r\n      this.fxSri = fixedView.sri;\r\n      this.fxEri = fixedView.eri;\r\n      // 锁定鼠标指针\r\n      mousePointer.lock(RowFixed);\r\n      mousePointer.set(XTableMousePointer.KEYS.grab, RowFixed);\r\n      // 推拽条移动位置\r\n      const { y } = table.eventXy(e, table);\r\n      dropRowFixed.offset({ top: y });\r\n      moveOff = false;\r\n      // 如果存在固定位置 定位到起始处\r\n      if (xFixedView.hasFixedTop()) {\r\n        table.scroll.y = 0;\r\n        table.scroll.ri = this.fxEri + 1;\r\n        table.resize();\r\n      }\r\n      XEvent.mouseMoveUp(document, (e) => {\r\n        // 推拽条移动位置 + 行号\r\n        const { x, y } = table.eventXy(e, table);\r\n        dropRowFixed.offset({ top: y });\r\n        // 更新行号\r\n        const { ri } = table.getRiCiByXy(x, y);\r\n        // 是否越界最大行数\r\n        if (ri < scrollView.eri - 2) {\r\n          this.fxEri = ri;\r\n          this.setSize();\r\n        }\r\n      }, () => {\r\n        this.setActive(false);\r\n        // 释放指针\r\n        mousePointer.free(RowFixed);\r\n        dropRowFixed.hide();\r\n        // 更新固定区域\r\n        table.setFixedRow(this.fxEri);\r\n        moveOff = true;\r\n      });\r\n    });\r\n  }\r\n\r\n  setActive(status) {\r\n    if (status) {\r\n      this.addClass('active');\r\n      this.block.addClass('active');\r\n    } else {\r\n      this.removeClass('active');\r\n      this.block.removeClass('active');\r\n    }\r\n  }\r\n\r\n  onAttach() {\r\n    const { table } = this;\r\n    // 初始化固定条大小\r\n    this.setSize();\r\n    // 绑定处理函数\r\n    this.bind();\r\n    // 注册焦点元素\r\n    table.focus.register({ target: this, stop: false });\r\n  }\r\n\r\n  setSize() {\r\n    const { table, block } = this;\r\n    const { fxSri, fxEri } = this;\r\n    const { rows } = table;\r\n    const height = RowFixed.HEIGHT;\r\n    const width = fxEri > -1 ? table.visualWidth() : table.getIndexWidth();\r\n    const outer = fxEri > -1 ? height / 2 : height;\r\n    const top = rows.sectionSumHeight(fxSri, fxEri) + table.getIndexHeight() - outer;\r\n    block.offset({\r\n      width: table.getIndexWidth(), height,\r\n    });\r\n    this.offset({\r\n      height, width, left: 0, top,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\nRowFixed.HEIGHT = 6;\r\n\r\nexport {\r\n  RowFixed,\r\n};\r\n","/* global document */\r\nimport { Widget } from '../../../libs/Widget';\r\nimport { cssPrefix, Constant } from '../../../const/Constant';\r\nimport { h } from '../../../libs/Element';\r\nimport { XEvent } from '../../../libs/XEvent';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XTableMousePointer } from '../XTableMousePointer';\r\nimport { RowFixed } from '../tablefixed/RowFixed';\r\n\r\nclass YReSizer extends Widget {\r\n\r\n  constructor(table, options = { height: 5 }) {\r\n    super(`${cssPrefix}-re-sizer-vertical`);\r\n    this.table = table;\r\n    this.options = options;\r\n    this.height = options.height;\r\n    this.hoverEl = h('div', `${cssPrefix}-re-sizer-hover`);\r\n    this.lineEl = h('div', `${cssPrefix}-re-sizer-line`);\r\n    this.children(...[\r\n      this.hoverEl,\r\n      this.lineEl,\r\n    ]);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.table.focus.register({ target: this });\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    const {\r\n      rows, mousePointer, focus, xFixedView,\r\n    } = table;\r\n    const { tableDataSnapshot } = table;\r\n    const { rowsDataProxy } = tableDataSnapshot;\r\n    const { index } = table;\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      mousePointer.lock(YReSizer);\r\n      mousePointer.set(XTableMousePointer.KEYS.rowResize, YReSizer);\r\n      const { top, ri } = this.getEventTop(e);\r\n      const min = top - rows.getHeight(ri) + rows.min;\r\n      let { y: my } = table.eventXy(e);\r\n      XEvent.mouseMoveUp(document, (e) => {\r\n        ({ y: my } = table.eventXy(e));\r\n        my -= this.height / 2;\r\n        my = Math.ceil(PlainUtils.minIf(my, min));\r\n        this.css('top', `${my}px`);\r\n        this.lineEl.css('width', `${table.visualWidth()}px`);\r\n        this.lineEl.show();\r\n      }, (e) => {\r\n        mousePointer.free(YReSizer);\r\n        this.lineEl.hide();\r\n        this.css('top', `${my}px`);\r\n        const { x } = table.eventXy(e);\r\n        if (x <= 0) {\r\n          this.hide();\r\n        }\r\n        const newTop = my - (top - rows.getHeight(ri)) + this.height;\r\n        tableDataSnapshot.begin();\r\n        rowsDataProxy.setHeight(ri, newTop);\r\n        tableDataSnapshot.end();\r\n        table.resize();\r\n      });\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      mousePointer.free(YReSizer);\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, () => {\r\n      mousePointer.lock(YReSizer);\r\n      mousePointer.set(XTableMousePointer.KEYS.rowResize, YReSizer);\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, (e) => {\r\n      // eslint-disable-next-line prefer-const\r\n      let { top, ri } = this.getEventTop(e);\r\n      const min = top - rows.getHeight(ri) + rows.min;\r\n      const visualHeight = table.visualHeight();\r\n      const fixedView = xFixedView.getFixedView();\r\n      if (top > visualHeight) {\r\n        top = visualHeight;\r\n      }\r\n      if (top === -1 || min > visualHeight || ri === -1) {\r\n        this.hide();\r\n      } else {\r\n        this.show();\r\n        if (ri === fixedView.eri) {\r\n          this.css('top', `${top - this.height - RowFixed.HEIGHT / 2}px`);\r\n        } else {\r\n          this.css('top', `${top - this.height}px`);\r\n        }\r\n        this.hoverEl.css('width', `${index.getWidth()}px`);\r\n        this.hoverEl.css('height', `${this.height}px`);\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      this.hide();\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { activate } = focus;\r\n      const { target } = activate;\r\n      if (target !== table && target !== this) {\r\n        this.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  getEventTop(event) {\r\n    const { table } = this;\r\n    const {\r\n      rows, xFixedView, xFixedMeasure,\r\n    } = table;\r\n    const { index } = table;\r\n    const { x, y } = table.eventXy(event);\r\n    const { ri, ci } = table.getRiCiByXy(x, y);\r\n    const result = {\r\n      ri, top: -1,\r\n    };\r\n    // 无效区域\r\n    if (ci !== -1) {\r\n      return result;\r\n    }\r\n    const fixedHeight = xFixedMeasure.getHeight();\r\n    const indexHeight = index.getHeight();\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = table.getScrollView();\r\n    // 冻结区域\r\n    if (xFixedView.hasFixedTop()) {\r\n      if (ri > fixedView.eri) {\r\n        result.top = indexHeight + fixedHeight + rows.sectionSumHeight(scrollView.sri, ri);\r\n      } else {\r\n        result.top = indexHeight + rows.sectionSumHeight(fixedView.sri, ri);\r\n      }\r\n    } else {\r\n      result.top = indexHeight + rows.sectionSumHeight(scrollView.sri, ri);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { YReSizer };\r\n","import { Widget } from '../../../libs/Widget';\r\nimport { RANGE_OVER_GO } from '../xscreen/item/viewborder/XScreenStyleBorderItem';\r\nimport { cssPrefix, Constant } from '../../../const/Constant';\r\nimport { XEvent } from '../../../libs/XEvent';\r\nimport { XSelectItem } from '../xscreenitems/xselect/XSelectItem';\r\n\r\nclass XHeightLight extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-x-height-light`);\r\n    this.table = table;\r\n    this.width = -1;\r\n    this.left = -1;\r\n    this.setSize();\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.hide();\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.SELECT_CHANGE, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.FIXED_CHANGE, () => {\r\n      this.offsetHandle();\r\n    });\r\n  }\r\n\r\n  offsetHandle() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen,\r\n    } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    if (selectRange) {\r\n      const left = this.getLeft() + table.getIndexWidth();\r\n      const width = this.getWidth();\r\n      if (left !== this.left || width !== this.width) {\r\n        this.show();\r\n        this.offset({\r\n          top: 0,\r\n          left,\r\n          width,\r\n          height: table.getIndexHeight(),\r\n        });\r\n      }\r\n      this.left = left;\r\n      this.width = width;\r\n    }\r\n  }\r\n\r\n  setSize() {\r\n    const { table } = this;\r\n    this.css('height', `${table.getIndexHeight()}px`);\r\n  }\r\n\r\n  getLeft() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen, rows, xFixedView, cols,\r\n    } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    const overGo = xSelect.getOverGo(selectRange);\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = table.getScrollView();\r\n    scrollView.sri = 0;\r\n    scrollView.eri = rows.length - 1;\r\n    fixedView.sri = 0;\r\n    fixedView.eri = rows.length - 1;\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.BRL:\r\n      case RANGE_OVER_GO.LTL:\r\n      case RANGE_OVER_GO.ALL:\r\n      case RANGE_OVER_GO.LT:\r\n      case RANGE_OVER_GO.LTT:\r\n      case RANGE_OVER_GO.L: {\r\n        return cols.sectionSumWidth(fixedView.sci, selectRange.sci - 1);\r\n      }\r\n      case RANGE_OVER_GO.BR:\r\n      case RANGE_OVER_GO.T:\r\n      case RANGE_OVER_GO.BRT: {\r\n        const coincide = scrollView.coincide(selectRange);\r\n        const scroll = cols.sectionSumWidth(scrollView.sci, coincide.sci - 1);\r\n        const fixed = cols.sectionSumWidth(fixedView.sci, fixedView.eci);\r\n        return fixed + scroll;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  getWidth() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen, rows, xFixedView, cols,\r\n    } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = table.getScrollView();\r\n    const overGo = xSelect.getOverGo(selectRange);\r\n    scrollView.sri = 0;\r\n    scrollView.eri = rows.length - 1;\r\n    fixedView.sri = 0;\r\n    fixedView.eri = rows.length - 1;\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n      case RANGE_OVER_GO.L:\r\n      case RANGE_OVER_GO.LTL: {\r\n        return cols.rectRangeSumWidth(selectRange);\r\n      }\r\n      case RANGE_OVER_GO.BR:\r\n      case RANGE_OVER_GO.T:\r\n      case RANGE_OVER_GO.BRT: {\r\n        return cols.rectRangeSumWidth(scrollView.coincide(selectRange));\r\n      }\r\n      case RANGE_OVER_GO.BRL:\r\n      case RANGE_OVER_GO.LTT:\r\n      case RANGE_OVER_GO.ALL: {\r\n        const scroll = cols.rectRangeSumWidth(scrollView.coincide(selectRange));\r\n        const fixed = cols.rectRangeSumWidth(fixedView.coincide(selectRange));\r\n        return scroll + fixed;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { XHeightLight };\r\n","import { Widget } from '../../../libs/Widget';\r\nimport { RANGE_OVER_GO } from '../xscreen/item/viewborder/XScreenStyleBorderItem';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { XEvent } from '../../../libs/XEvent';\r\nimport { XSelectItem } from '../xscreenitems/xselect/XSelectItem';\r\n\r\nclass YHeightLight extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-y-height-light`);\r\n    this.table = table;\r\n    this.height = -1;\r\n    this.top = -1;\r\n    this.setSize();\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.hide();\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.SELECT_CHANGE, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.FIXED_CHANGE, () => {\r\n      this.offsetHandle();\r\n    });\r\n  }\r\n\r\n  offsetHandle() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen,\r\n    } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    if (selectRange) {\r\n      const top = this.getTop() + table.getIndexHeight();\r\n      const height = this.getHeight();\r\n      if (top !== this.top || height !== this.height) {\r\n        this.show();\r\n        this.offset({\r\n          left: 0,\r\n          top,\r\n          height,\r\n          width: table.getIndexWidth(),\r\n        });\r\n      }\r\n      this.top = top;\r\n      this.height = height;\r\n    }\r\n  }\r\n\r\n  setSize() {\r\n    const { table } = this;\r\n    this.css('width', `${table.getIndexWidth()}px`);\r\n  }\r\n\r\n  getTop() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen, rows, xFixedView, cols,\r\n    } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    const overGo = xSelect.getOverGo(selectRange);\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = table.getScrollView();\r\n    scrollView.sci = 0;\r\n    scrollView.eci = cols.length - 1;\r\n    fixedView.sci = 0;\r\n    fixedView.eci = cols.length - 1;\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.BRT:\r\n      case RANGE_OVER_GO.LTL:\r\n      case RANGE_OVER_GO.ALL:\r\n      case RANGE_OVER_GO.LT:\r\n      case RANGE_OVER_GO.LTT:\r\n      case RANGE_OVER_GO.T: {\r\n        return rows.sectionSumHeight(fixedView.sri, selectRange.sri - 1);\r\n      }\r\n      case RANGE_OVER_GO.BR:\r\n      case RANGE_OVER_GO.L:\r\n      case RANGE_OVER_GO.BRL: {\r\n        const coincide = scrollView.coincide(selectRange);\r\n        const scroll = rows.sectionSumHeight(scrollView.sri, coincide.sri - 1);\r\n        const fixed = rows.sectionSumHeight(fixedView.sri, fixedView.eri);\r\n        return fixed + scroll;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  getHeight() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen, rows, xFixedView, cols,\r\n    } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = table.getScrollView();\r\n    const overGo = xSelect.getOverGo(selectRange);\r\n    scrollView.sci = 0;\r\n    scrollView.eci = cols.length - 1;\r\n    fixedView.sci = 0;\r\n    fixedView.eci = cols.length - 1;\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n      case RANGE_OVER_GO.T:\r\n      case RANGE_OVER_GO.LTT: {\r\n        return rows.rectRangeSumHeight(selectRange);\r\n      }\r\n      case RANGE_OVER_GO.BR:\r\n      case RANGE_OVER_GO.L:\r\n      case RANGE_OVER_GO.BRL: {\r\n        return rows.rectRangeSumHeight(scrollView.coincide(selectRange));\r\n      }\r\n      case RANGE_OVER_GO.BRT:\r\n      case RANGE_OVER_GO.LTL:\r\n      case RANGE_OVER_GO.ALL: {\r\n        const scroll = rows.rectRangeSumHeight(scrollView.coincide(selectRange));\r\n        const fixed = rows.rectRangeSumHeight(fixedView.coincide(selectRange));\r\n        return scroll + fixed;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { YHeightLight };\r\n","/* global document */\r\nimport { Constant } from '../../const/Constant';\r\nimport { XEvent } from '../../libs/XEvent';\r\nimport { Element } from '../../libs/Element';\r\n\r\nclass XTableFocus {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n    this.pool = [];\r\n    this.activate = {};\r\n    this.xTableFocusDownHandle = () => {\r\n      this.activate = {};\r\n    };\r\n    this.bind();\r\n  }\r\n\r\n  remove(target) {\r\n    if (!(target instanceof Element)) {\r\n      throw new TypeError(' error type not Element ');\r\n    }\r\n    const pool = [];\r\n    for (let i = 0; i < this.pool.length; i += 1) {\r\n      const item = this.pool[i];\r\n      if (item.target.el !== target.el) {\r\n        pool.push(item);\r\n      }\r\n    }\r\n    this.pool = pool;\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(document, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN,\r\n      this.xTableFocusDownHandle, true);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(document, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN,\r\n      this.xTableFocusDownHandle, true);\r\n  }\r\n\r\n  add(item) {\r\n    // 是否是Element\r\n    if (!(item.target instanceof Element)) {\r\n      return false;\r\n    }\r\n    // 是否已经注册\r\n    const find = this.findByNode(item.target);\r\n    if (find) {\r\n      return false;\r\n    }\r\n    // 记录注册的元素\r\n    this.pool.push(item);\r\n    if (item.focus) {\r\n      this.activate = this.pool[this.pool.length - 1];\r\n    }\r\n    return true;\r\n  }\r\n\r\n  register({\r\n    attr = {},\r\n    target,\r\n    stop = false,\r\n    focus = false,\r\n  }) {\r\n    if (this.add({\r\n      attr, target, focus, stop,\r\n    })) {\r\n      XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n        const alike = this.findByChild(e.target);\r\n        if (alike) {\r\n          this.activate = alike;\r\n          if (stop) {\r\n            e.stopPropagation();\r\n          }\r\n        } else {\r\n          this.activate = null;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  findByNode(el) {\r\n    for (let i = 0; i < this.pool.length; i += 1) {\r\n      const item = this.pool[i];\r\n      if (item.target.el === el) {\r\n        return item;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  findByChild(el) {\r\n    const { table } = this;\r\n    const root = table.el.parentNode;\r\n    while (el !== root) {\r\n      const find = this.findByNode(el);\r\n      if (find) {\r\n        return find;\r\n      }\r\n      el = el.parentNode;\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\nexport { XTableFocus };\r\n","import { PlainUtils } from '../../utils/PlainUtils';\r\nimport { RectRange } from './tablebase/RectRange';\r\n\r\nconst VIEW_MODE = {\r\n  CHANGE_ADD: Symbol('change_add'),\r\n  CHANGE_NOT: Symbol('change_not'),\r\n  STATIC: Symbol('static'),\r\n  BOUND_OUT: Symbol('bound_out'),\r\n};\r\n\r\n/**\r\n * XTableScrollView\r\n */\r\nclass XTableScrollView {\r\n\r\n  /**\r\n   * 视图类型\r\n   * @param lastView\r\n   * @param view\r\n   * @return {symbol}\r\n   */\r\n  static viewMode(lastView, view) {\r\n    if (PlainUtils.isUnDef(lastView)) {\r\n      return VIEW_MODE.CHANGE_NOT;\r\n    }\r\n    // 视图无变化\r\n    if (view.equals(lastView)) {\r\n      return VIEW_MODE.STATIC;\r\n    }\r\n    // 视图不相交\r\n    if (view.coincide(lastView).equals(RectRange.EMPTY)) {\r\n      return VIEW_MODE.BOUND_OUT;\r\n    }\r\n    // 无新增加的视图区域\r\n    if (view.within(lastView)) {\r\n      return VIEW_MODE.CHANGE_NOT;\r\n    }\r\n    // 有新增的视图区域\r\n    return VIEW_MODE.CHANGE_ADD;\r\n  }\r\n\r\n  /**\r\n   * XTableScrollView\r\n   * @param scroll\r\n   * @param rows\r\n   * @param cols\r\n   * @param xIteratorBuilder\r\n   * @param getHeight\r\n   * @param getWidth\r\n   */\r\n  constructor({\r\n    scroll,\r\n    rows,\r\n    cols,\r\n    xIteratorBuilder,\r\n    getHeight = () => 0,\r\n    getWidth = () => 0,\r\n  }) {\r\n    this.scroll = scroll;\r\n    this.rows = rows;\r\n    this.cols = cols;\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n    this.getHeight = getHeight;\r\n    this.getWidth = getWidth;\r\n  }\r\n\r\n  /**\r\n   * 当前视图滚动区域\r\n   * @returns {RectRange}\r\n   */\r\n  getScrollView() {\r\n    const {\r\n      rows, cols, xIteratorBuilder, scroll, getHeight, getWidth,\r\n    } = this;\r\n    const { ri, ci } = scroll;\r\n    let [width, height] = [0, 0];\r\n    let [eri, eci] = [rows.len, cols.len];\r\n    // 行\r\n    xIteratorBuilder.getRowIterator()\r\n      .setBegin(ri)\r\n      .setEnd(rows.len - 1)\r\n      .setLoop((i) => {\r\n        height += rows.getHeight(i);\r\n        eri = i;\r\n        return height < getHeight();\r\n      })\r\n      .execute();\r\n    // 列\r\n    xIteratorBuilder.getColIterator()\r\n      .setBegin(ci)\r\n      .setEnd(cols.len - 1)\r\n      .setLoop((j) => {\r\n        width += cols.getWidth(j);\r\n        eci = j;\r\n        return width < getWidth();\r\n      })\r\n      .execute();\r\n    // 滚动视图\r\n    return new RectRange(ri, ci, eri, eci);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableScrollView,\r\n  VIEW_MODE,\r\n};\r\n","import { PlainUtils } from '../../utils/PlainUtils';\r\n\r\n/**\r\n * TableAreaView\r\n */\r\nclass XTableAreaView {\r\n\r\n  /**\r\n   * TableAreaView\r\n   * @param xTableScrollView\r\n   * @param rows\r\n   * @param cols\r\n   * @param scroll\r\n   */\r\n  constructor({\r\n    xTableScrollView,\r\n    rows,\r\n    cols,\r\n    scroll,\r\n  }) {\r\n    this.xTableScrollView = xTableScrollView;\r\n    this.scroll = scroll;\r\n    this.rows = rows;\r\n    this.cols = cols;\r\n    this.scrollView = null;\r\n  }\r\n\r\n  /**\r\n   * 重置变量区\r\n   */\r\n  reset() {\r\n    this.scrollView = null;\r\n  }\r\n\r\n  /**\r\n   * 当前视图滚动区域\r\n   * @returns {RectRange}\r\n   */\r\n  getScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { xTableScrollView } = this;\r\n    const { cols, rows } = this;\r\n    const scrollView = xTableScrollView.getScrollView();\r\n    scrollView.w = cols.rectRangeSumWidth(scrollView);\r\n    scrollView.h = rows.rectRangeSumHeight(scrollView);\r\n    this.scrollView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableAreaView,\r\n};\r\n","class Throttle {\r\n\r\n  constructor({\r\n    time = 500,\r\n  } = {}) {\r\n    this.handle = null;\r\n    this.time = time;\r\n  }\r\n\r\n  setTime(time) {\r\n    this.time = time;\r\n  }\r\n\r\n  action(cb) {\r\n    clearTimeout(this.handle);\r\n    this.handle = setTimeout(() => {\r\n      cb();\r\n    }, this.time);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Throttle,\r\n};\r\n","import { Widget } from '../../libs/Widget';\nimport { cssPrefix, Constant } from '../../const/Constant';\nimport { XEvent } from '../../libs/XEvent';\nimport { PlainUtils } from '../../utils/PlainUtils';\nimport { XSelectItem } from './xscreenitems/xselect/XSelectItem';\nimport { XDraw } from '../../canvas/XDraw';\nimport { Throttle } from '../../libs/Throttle';\nimport { BaseFont } from '../../canvas/font/BaseFont';\n\nclass XTableEdit extends Widget {\n\n  constructor(table) {\n    super(`${cssPrefix}-table-edit`);\n    this.table = table;\n    this.cell = null;\n    this.merge = null;\n    this.select = null;\n    this.throttle = new Throttle({ time: 100 });\n    this.attr('contenteditable', true);\n    this.html(PlainUtils.EMPTY);\n  }\n\n  onAttach() {\n    this.bind();\n    this.hide();\n  }\n\n  editOffset() {\n    const { table, cell } = this;\n    const {\n      xHeightLight, yHeightLight,\n    } = table;\n    const { fontAttr } = cell;\n    const { align } = fontAttr;\n    const left = xHeightLight.getLeft() + table.getIndexWidth();\n    const top = yHeightLight.getTop() + table.getIndexHeight();\n    const height = yHeightLight.getHeight();\n    const width = xHeightLight.getWidth();\n    switch (align) {\n      case BaseFont.ALIGN.left: {\n        this.cssRemoveKeys('right');\n        const maxHeight = table.visualHeight() - top;\n        const maxWidth = table.visualWidth() - left;\n        this.css({\n          left: `${left}px`,\n          top: `${top}px`,\n          'min-width': `${XDraw.offsetToLineInside(Math.min(width, maxWidth))}px`,\n          'min-height': `${XDraw.offsetToLineInside(Math.min(height, maxHeight))}px`,\n          'max-width': `${XDraw.offsetToLineInside(maxWidth)}px`,\n          'max-height': `${XDraw.offsetToLineInside(maxHeight)}px`,\n        });\n        break;\n      }\n      case BaseFont.ALIGN.center: {\n        this.cssRemoveKeys('right');\n        const box = this.box();\n        const maxHeight = table.visualHeight() - top;\n        if (box.width > width) {\n          const maxWidth = (table.visualWidth() - (left + width)) * 2 + width;\n          const realWidth = Math.min(box.width, maxWidth);\n          const realLeft = left - (realWidth / 2 - width / 2);\n          this.css({\n            left: `${realLeft}px`,\n            top: `${top}px`,\n            'min-width': `${XDraw.offsetToLineInside(Math.min(width, maxWidth))}px`,\n            'min-height': `${XDraw.offsetToLineInside(Math.min(height, maxHeight))}px`,\n            'max-width': `${XDraw.offsetToLineInside(maxWidth)}px`,\n            'max-height': `${XDraw.offsetToLineInside(maxHeight)}px`,\n          });\n        } else {\n          const maxWidth = table.visualWidth() - left;\n          this.css({\n            left: `${left}px`,\n            top: `${top}px`,\n            'min-width': `${XDraw.offsetToLineInside(Math.min(width, maxWidth))}px`,\n            'min-height': `${XDraw.offsetToLineInside(Math.min(height, maxHeight))}px`,\n            'max-width': `${XDraw.offsetToLineInside(maxWidth)}px`,\n            'max-height': `${XDraw.offsetToLineInside(maxHeight)}px`,\n          });\n        }\n        break;\n      }\n      case BaseFont.ALIGN.right: {\n        this.cssRemoveKeys('left');\n        const maxWidth = (left + width) - table.getIndexWidth();\n        const right = table.visualWidth() - (left + width);\n        const maxHeight = table.visualHeight() - top;\n        this.css({\n          right: `${right}px`,\n          top: `${top}px`,\n          'min-width': `${XDraw.offsetToLineInside(Math.min(width, maxWidth))}px`,\n          'min-height': `${XDraw.offsetToLineInside(Math.min(height, maxHeight))}px`,\n          'max-width': `${XDraw.offsetToLineInside(maxWidth)}px`,\n          'max-height': `${XDraw.offsetToLineInside(maxHeight)}px`,\n        });\n        break;\n      }\n    }\n  }\n\n  unbind() {\n    const { table } = this;\n    const { xScreen } = table;\n    const xSelect = xScreen.findType(XSelectItem);\n    XEvent.bind(table);\n    XEvent.unbind([\n      xSelect.lt,\n      xSelect.t,\n      xSelect.l,\n      xSelect.br,\n    ]);\n  }\n\n  bind() {\n    const { table } = this;\n    const { xScreen } = table;\n    const xSelect = xScreen.findType(XSelectItem);\n    const merges = table.getTableMerges();\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_WHEEL, (e) => {\n      e.stopPropagation();\n    });\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      e.stopPropagation();\n    });\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.INPUT, () => {\n      const { cell } = this;\n      const { fontAttr } = cell;\n      const { align } = fontAttr;\n      if (align === BaseFont.ALIGN.center) {\n        this.editOffset();\n      }\n    });\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      this.hideEdit();\n    });\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\n      this.hideEdit();\n    });\n    XEvent.mouseDoubleClick(table, () => {\n      const { selectRange } = xSelect;\n      const { sri, sci } = selectRange;\n      if (!selectRange.multiple() || merges.getFirstIncludes(sri, sci)) {\n        this.showEdit();\n      }\n    });\n  }\n\n  showEdit() {\n    const { table } = this;\n    const merges = table.getTableMerges();\n    const cells = table.getTableCells();\n    const { xScreen } = table;\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    if (selectRange) {\n      const { sri, sci } = selectRange;\n      const merge = merges.getFirstIncludes(sri, sci);\n      const cell = cells.getCellOrNew(sri, sci);\n      this.merge = merge;\n      this.cell = cell;\n      this.select = selectRange;\n      this.show();\n      if (PlainUtils.isBlank(cell.text)) {\n        this.html(PlainUtils.EMPTY);\n      } else {\n        this.html(cell.text);\n      }\n      this.attr('style', table.getCellCssStyle(sri, sci));\n      this.editOffset();\n      this.throttle.action(() => {\n        PlainUtils.keepLastIndex(this.el);\n      });\n    }\n  }\n\n  hideEdit() {\n    const { select } = this;\n    const { table } = this;\n    const cells = table.getTableCells();\n    const { tableDataSnapshot } = table;\n    const { cellDataProxy } = tableDataSnapshot;\n    if (select) {\n      const origin = cells.getCellOrNew(select.sri, select.sci);\n      const cell = origin.clone();\n      const text = PlainUtils.trim(this.text());\n      this.hide();\n      if (cell.text !== text) {\n        tableDataSnapshot.begin();\n        cell.setText(text);\n        cellDataProxy.setCell(select.sri, select.sci, cell);\n        tableDataSnapshot.end();\n        table.render();\n      }\n      this.select = null;\n    }\n  }\n\n  show() {\n    this.css({\n      'min-width': '0px',\n      'min-height': '0px',\n      'max-width': '0px',\n      'max-height': '0px',\n    });\n    return super.show();\n  }\n\n  destroy() {\n    super.destroy();\n    this.unbind();\n  }\n\n}\n\nexport {\n  XTableEdit,\n};\n","import { SolidLine } from './Line';\n\nclass Grid {\n\n  constructor(draw, attr = {}) {\n    this.solidLine = new SolidLine(draw, attr);\n  }\n\n  horizonLine(sx, sy, ex, ey) {\n    const { solidLine } = this;\n    solidLine.horizonLine(sx, sy, ex, ey);\n  }\n\n  verticalLine(sx, sy, ex, ey) {\n    const { solidLine } = this;\n    solidLine.verticalLine(sx, sy, ex, ey);\n  }\n}\n\nexport { Grid };\n","class Box {\r\n\r\n  constructor({\r\n    rect, draw, path, background,\r\n  }) {\r\n    this.draw = draw;\r\n    this.path = path;\r\n    this.rect = rect;\r\n    this.background = background;\r\n  }\r\n\r\n  setPath({\r\n    path,\r\n  }) {\r\n    this.path = path;\r\n  }\r\n\r\n  setRect({\r\n    rect,\r\n  }) {\r\n    this.rect = rect;\r\n  }\r\n\r\n  setBackground({\r\n    color,\r\n  }) {\r\n    this.background = color;\r\n  }\r\n\r\n  render() {\r\n    const { draw, rect, path, background } = this;\r\n    if (rect && background) {\r\n      draw.attr({\r\n        fillStyle: background,\r\n      });\r\n      draw.fillRect(rect.x, rect.y, rect.width, rect.height);\r\n      return;\r\n    }\r\n    if (path && background) {\r\n      draw.attr({\r\n        fillStyle: background,\r\n      });\r\n      draw.fillPath(path);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { Box };\r\n","import { Cell } from './Cell';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\n/**\r\n * Cells\r\n * @author jerry\r\n */\r\nclass Cells {\r\n\r\n  constructor({\r\n    onChange = () => {},\r\n    table,\r\n    xTableData,\r\n    xIteratorBuilder,\r\n  }) {\r\n    this.table = table;\r\n    this.xTableData = xTableData;\r\n    this.onChange = onChange;\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n  }\r\n\r\n  emptyRectRange(rectRange) {\r\n    let empty = true;\r\n    rectRange.each(this.xIteratorBuilder, (ri, ci) => {\r\n      const cell = this.getCell(ri, ci);\r\n      if (PlainUtils.isNotEmptyObject(cell) && !PlainUtils.isBlank(cell.text)) {\r\n        empty = false;\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n    return empty;\r\n  }\r\n\r\n  setCell(ri, ci, cell) {\r\n    const item = this.xTableData.get(ri, ci);\r\n    if (item) {\r\n      item.setCell(cell);\r\n      this.onChange(ri, ci);\r\n    }\r\n  }\r\n\r\n  setCellOrNew(ri, ci, cell) {\r\n    const item = this.xTableData.getOrNew(ri, ci);\r\n    item.setCell(cell);\r\n    this.onChange(ri, ci);\r\n  }\r\n\r\n  getCellOrNew(ri, ci) {\r\n    const item = this.xTableData.getOrNew(ri, ci);\r\n    const find = item.getCell();\r\n    if (find) {\r\n      return find;\r\n    }\r\n    const cell = new Cell({ text: PlainUtils.EMPTY });\r\n    item.setCell(cell);\r\n    return cell;\r\n  }\r\n\r\n  getCellOrMergeCell(ri, ci) {\r\n    const { table } = this;\r\n    const { merges } = table;\r\n    const merge = merges.getFirstIncludes(ri, ci);\r\n    if (merge) {\r\n      return this.getCell(merge.sri, merge.sci);\r\n    }\r\n    return this.getCell(ri, ci);\r\n  }\r\n\r\n  getCell(ri, ci) {\r\n    const item = this.xTableData.get(ri, ci);\r\n    if (item) {\r\n      return item.getCell();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getData() {\r\n    this.xTableData.wrapAll();\r\n    return this.xTableData.getItems().map(rows => rows.map((item) => {\r\n      if (item) {\r\n        return item.getCell();\r\n      }\r\n      return null;\r\n    }));\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Cells,\r\n};\r\n","class DateUtils {\r\n\r\n  static parserToDate(dateText, format) {\r\n    if (!dateText) {\r\n      return null;\r\n    }\r\n    const defaultVal = new Date('1970/01/01 00:00:00');\r\n    const o = [{\r\n      reg: 'y+',\r\n    }, {\r\n      reg: 'M+',\r\n    }, {\r\n      reg: 'd+',\r\n    }, {\r\n      reg: 'h+',\r\n    }, {\r\n      reg: 'm+',\r\n    }, {\r\n      reg: 's+',\r\n    }, {\r\n      reg: 'S',\r\n    }];\r\n    let year = defaultVal.getFullYear();\r\n    let month = defaultVal.getMonth() + 1;\r\n    let day = defaultVal.getDate();\r\n    let hours = defaultVal.getHours();\r\n    let minutes = defaultVal.getMinutes();\r\n    let seconds = defaultVal.getSeconds();\r\n    let milliseconds = defaultVal.getMilliseconds();\r\n    let index = 1;\r\n    for (let j = 0; j < format.length; j += 1) {\r\n      const oneChar = format[j];\r\n      for (let i = 0; i < o.length; i += 1) {\r\n        const onePart = o[i];\r\n        const onePartReg = onePart.reg;\r\n        if (onePartReg[0] === oneChar) {\r\n          if (!onePart.index) {\r\n            onePart.index = index;\r\n            index += 1;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    for (let i = 0; i < o.length; i += 1) {\r\n      const onePart = o[i];\r\n      const onePartReg = onePart.reg;\r\n      const re = new RegExp(`(${onePartReg})`);\r\n      const res = re.exec(format);\r\n      if (res) {\r\n        const formatPart = res[0];\r\n        const replaceVal = `([0-9]{1,${formatPart.length}})`;\r\n        // eslint-disable-next-line no-param-reassign\r\n        format = format.replace(formatPart, replaceVal);\r\n      }\r\n    }\r\n    const dataInfo = {};\r\n    const re = new RegExp(format);\r\n    const res = re.exec(dateText);\r\n    if (res) {\r\n      for (let i = 1; i < res.length; i += 1) {\r\n        dataInfo[i] = res[i];\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n    if (o[0].index) {\r\n      const { index } = o[0];\r\n      year = dataInfo[index];\r\n    }\r\n    if (o[1].index) {\r\n      const { index } = o[1];\r\n      month = dataInfo[index];\r\n    }\r\n    if (o[2].index) {\r\n      const { index } = o[2];\r\n      day = dataInfo[index];\r\n    }\r\n    if (o[3].index) {\r\n      const { index } = o[3];\r\n      hours = dataInfo[index];\r\n    }\r\n    if (o[4].index) {\r\n      const { index } = o[4];\r\n      minutes = dataInfo[index];\r\n    }\r\n    if (o[5].index) {\r\n      const { index } = o[5];\r\n      seconds = dataInfo[index];\r\n    }\r\n    if (o[6].index) {\r\n      const { index } = o[6];\r\n      milliseconds = dataInfo[index];\r\n    }\r\n    return new Date(year, month - 1, day, hours, minutes, seconds, milliseconds);\r\n  }\r\n\r\n  static dateFormat(fmt, date) {\r\n    const o = {\r\n      'M+': date.getMonth() + 1,\r\n      'd+': date.getDate(),\r\n      'h+': date.getHours(),\r\n      'm+': date.getMinutes(),\r\n      's+': date.getSeconds(),\r\n      'q+': Math.floor((date.getMonth() + 3) / 3),\r\n      S: date.getMilliseconds(),\r\n    };\r\n    const reYear = /(y+)/;\r\n    const resultYear = reYear.exec(fmt);\r\n    if (resultYear) {\r\n      const yearFormatPart = resultYear[0];\r\n      const yearVal = (date.getFullYear().toString()).substr(4 - yearFormatPart.length);\r\n      // eslint-disable-next-line no-param-reassign\r\n      fmt = fmt.replace(yearFormatPart, yearVal);\r\n    }\r\n    // eslint-disable-next-line guard-for-in,no-restricted-syntax\r\n    for (const k in o) {\r\n      const re = new RegExp(`(${k})`);\r\n      const res = re.exec(fmt);\r\n      if (res) {\r\n        const Val = o[k].toString();\r\n        const formatPart = res[0];\r\n        const replaceVal = (formatPart.length === 1) ? (Val) : ((`00${Val}`).substr(Val.length));\r\n        // eslint-disable-next-line no-param-reassign\r\n        fmt = fmt.replace(formatPart, replaceVal);\r\n      }\r\n    }\r\n    return fmt;\r\n  }\r\n\r\n}\r\n\r\nexport { DateUtils };\r\n","import { PlainUtils } from '../../utils/PlainUtils';\r\nimport { DateUtils } from '../../utils/DateUtils';\r\n\r\nfunction parserToDate(text) {\r\n  let result = DateUtils.parserToDate(text, 'yyyy/MM/dd hh:mm:ss');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'yyyy/MM/dd');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'hh:mm:ss');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'MM月dd日');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'yyyy年MM月');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'yyyy年MM月dd日');\r\n  if (result) return result;\r\n  return null;\r\n}\r\n\r\nclass Format {\r\n\r\n  default(value) {\r\n    return value;\r\n  }\r\n\r\n  text(value) {\r\n    return value;\r\n  }\r\n\r\n  number(value) {\r\n    if (PlainUtils.isNumber(value)) {\r\n      if (value.toString().indexOf('.') !== -1) {\r\n        const lastIndex = value.toString().lastIndexOf('.') + 1;\r\n        return value.toString().substring(0, lastIndex + 2);\r\n      }\r\n      return `${value}.00`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  percentage(value) {\r\n    if (PlainUtils.isNumber(value)) {\r\n      return `${value}%`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  fraction(value) {\r\n    if (PlainUtils.isFraction(value)) {\r\n      const left = value.split('/')[0];\r\n      const right = value.split('/')[1];\r\n      return PlainUtils.parseInt(left) / PlainUtils.parseInt(right);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  ENotation(value) {\r\n    if (PlainUtils.isNumber(value)) {\r\n      const number = PlainUtils.parseFloat(value);\r\n      return number.toExponential(2);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  rmb(value) {\r\n    if (PlainUtils.isNumber(value)) {\r\n      return `￥${value}`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  hk(value) {\r\n    if (PlainUtils.isNumber(value)) {\r\n      return `HK${value}`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  dollar(value) {\r\n    if (PlainUtils.isNumber(value)) {\r\n      return `$${value}`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  date1(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('yyyy/MM/dd', result);\r\n    return value;\r\n  }\r\n\r\n  date2(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('MM月dd日', result);\r\n    return value;\r\n  }\r\n\r\n  date3(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('yyyy年MM月', result);\r\n    return value;\r\n  }\r\n\r\n  date4(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('yyyy年MM月dd日', result);\r\n    return value;\r\n  }\r\n\r\n  date5(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('yyyy/MM/dd hh:mm:ss', result);\r\n    return value;\r\n  }\r\n\r\n  time(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('hh:mm:ss', result);\r\n    return value;\r\n  }\r\n}\r\n\r\nconst format = new Format();\r\n\r\nexport default (type, value) => format[type](value);\r\n","import { XDraw } from './XDraw';\r\n\r\n/**\r\n * RTSinKit\r\n */\r\nclass RTSinKit {\r\n\r\n  /**\r\n   * 计算对边\r\n   * @see http://math001.com/trigonometric_function/\r\n   * @param tilt 斜边\r\n   * @param angle 角度\r\n   */\r\n  static inverse({ tilt, angle }) {\r\n    return Math.abs(tilt * Math.sin(XDraw.radian(angle)));\r\n  }\r\n\r\n  /**\r\n   * 计算斜边\r\n   * @see http://math001.com/trigonometric_function/\r\n   * @param inverse 对边\r\n   * @param angle 角度\r\n   */\r\n  static tilt({ inverse, angle }) {\r\n    return Math.abs(inverse / Math.sin(XDraw.radian(angle)));\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * RTCosKit\r\n */\r\nclass RTCosKit {\r\n\r\n  /**\r\n   * 计算邻边\r\n   * @see http://math001.com/trigonometric_function/\r\n   * @param tilt\r\n   * @param angle\r\n   */\r\n  static nearby({ tilt, angle }) {\r\n    return Math.abs(tilt * Math.cos(XDraw.radian((angle))));\r\n  }\r\n\r\n  /**\r\n   * 计算斜边\r\n   * @see http://math001.com/trigonometric_function/\r\n   * @param nearby 领边\r\n   * @param angle 角度\r\n   */\r\n  static tilt({ nearby, angle }) {\r\n    return Math.abs(nearby / Math.cos(XDraw.radian((angle))));\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RTSinKit, RTCosKit,\r\n};\r\n","import { Rect } from './Rect';\r\n\r\nconst ANGLE_ORIGIN = {\r\n  TOP_LEFT: 'top-left',\r\n  TOP_CENTER: 'top-center',\r\n  TOP_RIGHT: 'top-right',\r\n  MIDDLE_LEFT: 'middle-left',\r\n  MIDDLE_CENTER: 'middle-center',\r\n  MIDDLE_RIGHT: 'middle-right',\r\n  BOTTOM_LEFT: 'bottom-left',\r\n  BOTTOM_CENTER: 'bottom-center',\r\n  BOTTOM_RIGHT: 'bottom-right',\r\n};\r\n\r\nclass Angle {\r\n\r\n  constructor({\r\n    angle,\r\n    draw,\r\n    origin = ANGLE_ORIGIN.MIDDLE_CENTER,\r\n    rect = new Rect({ x: 0, y: 0, width: 0, height: 0 }),\r\n  }) {\r\n    this.draw = draw;\r\n    this.origin = origin;\r\n    this.rect = rect;\r\n    this.angle = angle;\r\n  }\r\n\r\n  rotate() {\r\n    const { origin, draw, rect, angle } = this;\r\n    const { x, y, width, height } = rect;\r\n    draw.save();\r\n    let tx = 0;\r\n    let ty = 0;\r\n    switch (origin) {\r\n      case ANGLE_ORIGIN.TOP_LEFT:\r\n        tx = x;\r\n        ty = y;\r\n        break;\r\n      case ANGLE_ORIGIN.TOP_CENTER:\r\n        tx = x + width / 2;\r\n        ty = y;\r\n        break;\r\n      case ANGLE_ORIGIN.TOP_RIGHT:\r\n        tx = x + width;\r\n        ty = y;\r\n        break;\r\n      case ANGLE_ORIGIN.MIDDLE_LEFT:\r\n        tx = x;\r\n        ty = y + height / 2;\r\n        break;\r\n      case ANGLE_ORIGIN.MIDDLE_CENTER:\r\n        tx = x + width / 2;\r\n        ty = y + height / 2;\r\n        break;\r\n      case ANGLE_ORIGIN.MIDDLE_RIGHT:\r\n        tx = x + width;\r\n        ty = y + height / 2;\r\n        break;\r\n      case ANGLE_ORIGIN.BOTTOM_LEFT:\r\n        tx = x;\r\n        ty = y + height;\r\n        break;\r\n      case ANGLE_ORIGIN.BOTTOM_CENTER:\r\n        tx = x + width / 2;\r\n        ty = y + height;\r\n        break;\r\n      case ANGLE_ORIGIN.BOTTOM_RIGHT:\r\n        tx = x + width;\r\n        ty = y + height;\r\n        break;\r\n      default: break;\r\n    }\r\n    const offsetX = draw.getOffsetX();\r\n    const offsetY = draw.getOffsetY();\r\n    draw.translate(tx + offsetX, ty + offsetY)\r\n      .rotate(angle)\r\n      .translate(-(tx + offsetX), -(ty + offsetY));\r\n    return this;\r\n  }\r\n\r\n  revert() {\r\n    const { draw } = this;\r\n    draw.restore();\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Angle,\r\n  ANGLE_ORIGIN,\r\n};\r\n","class DrawResult {\r\n\r\n  constructor({\r\n    width = 0,\r\n    rightSdist = 0,\r\n    leftSdist = 0,\r\n  } = {}) {\r\n    this.width = width;\r\n    this.rightSdist = rightSdist;\r\n    this.leftSdist = leftSdist;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  DrawResult,\r\n};\r\n","import { BaseFont } from '../BaseFont';\r\nimport { RTCosKit, RTSinKit } from '../../RTFunction';\r\nimport { Crop } from '../../Crop';\r\nimport { Angle } from '../../Angle';\r\nimport { Rect } from '../../Rect';\r\nimport { DrawResult } from '../DrawResult';\r\n\r\nclass AngleBoxDraw extends BaseFont {\r\n\r\n  constructor({\r\n    draw, ruler, rect, overflow, lineHeight = 4, attr,\r\n  }) {\r\n    super({\r\n      draw, ruler, attr,\r\n    });\r\n    this.rect = rect;\r\n    this.overflow = overflow;\r\n    this.lineHeight = lineHeight;\r\n  }\r\n\r\n  drawingFont() {\r\n    const { ruler } = this;\r\n    if (ruler.isBlank()) {\r\n      return new DrawResult();\r\n    }\r\n    const { draw, attr } = this;\r\n    const { textWrap } = attr;\r\n    draw.attr({\r\n      textAlign: BaseFont.ALIGN.left,\r\n      textBaseline: BaseFont.VERTICAL_ALIGN.top,\r\n      font: `${attr.italic ? 'italic' : ''} ${attr.bold ? 'bold' : ''} ${attr.size}px ${attr.name}`,\r\n      fillStyle: attr.color,\r\n      strokeStyle: attr.color,\r\n    });\r\n    if (ruler.hasBreak()) {\r\n      return this.textWrapDraw();\r\n    }\r\n    switch (textWrap) {\r\n      case BaseFont.TEXT_WRAP.OVER_FLOW:\r\n        return this.overflowDraw();\r\n      case BaseFont.TEXT_WRAP.TRUNCATE:\r\n        return this.truncateDraw();\r\n      case BaseFont.TEXT_WRAP.WORD_WRAP:\r\n        return this.textWrapDraw();\r\n    }\r\n    return new DrawResult();\r\n  }\r\n\r\n  drawingLine(type, tx, ty, textWidth) {\r\n    const { draw, attr } = this;\r\n    const { size } = attr;\r\n    const s = [0, 0];\r\n    const e = [0, 0];\r\n    if (type === 'strike') {\r\n      s[0] = tx;\r\n      e[0] = tx + textWidth;\r\n      s[1] = ty + size / 2;\r\n      e[1] = ty + size / 2;\r\n    }\r\n    if (type === 'underline') {\r\n      s[0] = tx;\r\n      e[0] = tx + textWidth;\r\n      s[1] = ty + size;\r\n      e[1] = ty + size;\r\n    }\r\n    draw.line(s, e);\r\n  }\r\n\r\n  truncateDraw() {\r\n    return this.overflowDraw();\r\n  }\r\n\r\n  overflowDraw() {\r\n    const { draw, ruler, attr } = this;\r\n    const { rect, overflow } = this;\r\n    const { x, y, width, height } = rect;\r\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\r\n    // 填充宽度\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const alignPadding = this.getAlignPadding();\r\n    // 角度边界\r\n    let { angle } = attr;\r\n    if (angle < -90) {\r\n      angle = -90;\r\n    }\r\n    if (angle > 90) {\r\n      angle = 90;\r\n    }\r\n    if (angle === 0) {\r\n      throw new TypeError('文字的角度必须是在90<0或者0>90之间!');\r\n    }\r\n    // 文本长度\r\n    ruler.overflowRuler();\r\n    const {\r\n      overflowText: text,\r\n      overflowTextWidth: textWidth,\r\n    } = ruler;\r\n    // 文本块大小\r\n    const trigonometricWidth = Math.max(RTCosKit.nearby({\r\n      tilt: textWidth,\r\n      angle,\r\n    }), size);\r\n    const trigonometricHeight = RTSinKit.inverse({\r\n      tilt: textWidth,\r\n      angle,\r\n    });\r\n    const limitHeight = trigonometricHeight - height;\r\n    // 计算文本绘制位置旋转中心\r\n    let rtx = x;\r\n    let rty = y;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left:\r\n        rtx += alignPadding;\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        rtx += width / 2 - trigonometricWidth / 2;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        rtx += width - trigonometricWidth - alignPadding;\r\n        break;\r\n    }\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        rty += verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        rty += height / 2 - trigonometricHeight / 2;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        rty += height - trigonometricHeight - verticalAlignPadding;\r\n        break;\r\n    }\r\n    // 边界检查\r\n    const outboundsHeight = trigonometricHeight + verticalAlignPadding > overflow.height;\r\n    const outboundsWidth = trigonometricWidth + alignPadding > overflow.width;\r\n    if (outboundsHeight || outboundsWidth) {\r\n      const crop = new Crop({\r\n        draw,\r\n        rect: overflow,\r\n      });\r\n      const dwAngle = new Angle({\r\n        draw,\r\n        angle,\r\n        rect: new Rect({\r\n          x: rtx,\r\n          y: rty,\r\n          width: trigonometricWidth,\r\n          height: trigonometricHeight,\r\n        }),\r\n      });\r\n      crop.open();\r\n      dwAngle.rotate();\r\n      const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n      const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n      draw.fillText(text, tx, ty);\r\n      if (underline) {\r\n        this.drawingLine('underline', tx, ty, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', tx, ty, textWidth);\r\n      }\r\n      dwAngle.revert();\r\n      crop.close();\r\n    } else {\r\n      const dwAngle = new Angle({\r\n        draw,\r\n        angle,\r\n        rect: new Rect({\r\n          x: rtx,\r\n          y: rty,\r\n          width: trigonometricWidth,\r\n          height: trigonometricHeight,\r\n        }),\r\n      });\r\n      dwAngle.rotate();\r\n      const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n      const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n      draw.fillText(text, tx, ty);\r\n      if (underline) {\r\n        this.drawingLine('underline', tx, ty, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', tx, ty, textWidth);\r\n      }\r\n      dwAngle.revert();\r\n    }\r\n    // 文本宽度\r\n    let textHaveWidth = trigonometricWidth;\r\n    if (limitHeight > 0) {\r\n      const tilt = RTSinKit.tilt({\r\n        inverse: height,\r\n        angle,\r\n      });\r\n      textHaveWidth = RTCosKit.nearby({\r\n        tilt, angle,\r\n      });\r\n    }\r\n    return new DrawResult({\r\n      width: textHaveWidth + alignPadding,\r\n    });\r\n  }\r\n\r\n  textWrapDraw() {\r\n    const { draw, ruler, attr } = this;\r\n    const { rect, lineHeight } = this;\r\n    const { width, height } = rect;\r\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\r\n    // 填充宽度\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const alignPadding = this.getAlignPadding();\r\n    // 角度边界\r\n    let { angle } = attr;\r\n    if (angle < -90) {\r\n      angle = -90;\r\n    }\r\n    if (angle > 90) {\r\n      angle = 90;\r\n    }\r\n    if (angle === 0) {\r\n      throw new TypeError('文字的角度必须是在90<0或者0>90之间!');\r\n    }\r\n    // 绘制文本\r\n    if (angle > 0) {\r\n      // 折行文本计算\r\n      ruler.textWrapRuler();\r\n      const {\r\n        textWrapTextArray: textArray,\r\n        textWrapMaxLen: maxLen,\r\n      } = ruler;\r\n      const textArrayLen = textArray.length;\r\n      // 多行文本\r\n      if (textArrayLen > 1) {\r\n        // 文本间隙\r\n        const spacing = RTSinKit.tilt({\r\n          inverse: size + lineHeight,\r\n          angle,\r\n        });\r\n        // 文本宽高\r\n        const textWidth = Math.max(RTCosKit.nearby({\r\n          tilt: maxLen,\r\n          angle,\r\n        }), size);\r\n        const textHeight = RTSinKit.inverse({\r\n          tilt: maxLen,\r\n          angle,\r\n        });\r\n        // 总宽度\r\n        const totalWidth = textWidth + ((textArrayLen - 1) * spacing);\r\n        // 文本坐标\r\n        let bx = rect.x;\r\n        let by = rect.y;\r\n        switch (align) {\r\n          case BaseFont.ALIGN.left:\r\n            bx += alignPadding;\r\n            break;\r\n          case BaseFont.ALIGN.center:\r\n            bx += width / 2 - totalWidth / 2;\r\n            break;\r\n          case BaseFont.ALIGN.right:\r\n            bx += width - totalWidth - alignPadding;\r\n            break;\r\n        }\r\n        switch (verticalAlign) {\r\n          case BaseFont.VERTICAL_ALIGN.top:\r\n            by += verticalAlignPadding;\r\n            break;\r\n          case BaseFont.VERTICAL_ALIGN.center:\r\n            by += height / 2 - textHeight / 2;\r\n            break;\r\n          case BaseFont.VERTICAL_ALIGN.bottom:\r\n            by += height - textHeight - verticalAlignPadding;\r\n            break;\r\n        }\r\n        // 渲染文本\r\n        let jj = 0;\r\n        while (jj < textArrayLen) {\r\n          // 计算文本的绘制位置旋转中心\r\n          const item = textArray[jj];\r\n          const rx = item.tx + bx;\r\n          const ry = item.ty + by;\r\n          let ax = 0;\r\n          let ay = 0;\r\n          switch (align) {\r\n            case BaseFont.ALIGN.left: {\r\n              const tilt = item.len / 2;\r\n              const tw = Math.max(RTCosKit.nearby({\r\n                tilt,\r\n                angle,\r\n              }), size);\r\n              const th = RTSinKit.inverse({\r\n                tilt,\r\n                angle,\r\n              });\r\n              ax += rx + tw;\r\n              ay += ry + textHeight - th;\r\n              break;\r\n            }\r\n            case BaseFont.ALIGN.center: {\r\n              ax = rx + textWidth / 2;\r\n              ay = ry + textHeight / 2;\r\n              break;\r\n            }\r\n            case BaseFont.ALIGN.right: {\r\n              const tilt = item.len / 2;\r\n              const tw = Math.max(RTCosKit.nearby({\r\n                tilt,\r\n                angle,\r\n              }), size);\r\n              const th = RTSinKit.inverse({\r\n                tilt,\r\n                angle,\r\n              });\r\n              ax += rx + textWidth - tw;\r\n              ay += ry + th;\r\n              break;\r\n            }\r\n          }\r\n          const tx = ax - item.len / 2;\r\n          const ty = ay - size / 2;\r\n          // 旋转并且绘制文本\r\n          const dwAngle = new Angle({\r\n            draw,\r\n            angle,\r\n            rect: new Rect({\r\n              x: tx,\r\n              y: ty,\r\n              width: item.len,\r\n              height: size,\r\n            }),\r\n          });\r\n          dwAngle.rotate();\r\n          draw.fillText(item.text, tx, ty);\r\n          if (underline) {\r\n            this.drawingLine('underline', tx, ty, item.len);\r\n          }\r\n          if (strikethrough) {\r\n            this.drawingLine('strike', tx, ty, item.len);\r\n          }\r\n          dwAngle.revert();\r\n          jj += 1;\r\n        }\r\n        return new DrawResult({\r\n          width: totalWidth + alignPadding,\r\n        });\r\n      }\r\n      // 文本大小\r\n      const {\r\n        textWrapText: text,\r\n        textWrapTextWidth: textWidth,\r\n      } = ruler;\r\n      const trigonometricWidth = Math.max(RTCosKit.nearby({\r\n        tilt: textWidth,\r\n        angle,\r\n      }), size);\r\n      const trigonometricHeight = RTSinKit.inverse({\r\n        tilt: textWidth,\r\n        angle,\r\n      });\r\n      // 文本坐标\r\n      let rtx = rect.x;\r\n      let rty = rect.y;\r\n      switch (align) {\r\n        case BaseFont.ALIGN.left:\r\n          rtx += alignPadding;\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          rtx += width / 2 - trigonometricWidth / 2;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n          rtx += width - trigonometricWidth - alignPadding;\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          rty += verticalAlignPadding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          rty += height / 2 - trigonometricHeight / 2;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          rty += height - trigonometricHeight - verticalAlignPadding;\r\n          break;\r\n      }\r\n      // 渲染文本\r\n      const dwAngle = new Angle({\r\n        draw,\r\n        angle,\r\n        rect: new Rect({\r\n          x: rtx,\r\n          y: rty,\r\n          width: trigonometricWidth,\r\n          height: trigonometricHeight,\r\n        }),\r\n      });\r\n      dwAngle.rotate();\r\n      const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n      const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n      draw.fillText(text, tx, ty);\r\n      if (underline) {\r\n        this.drawingLine('underline', tx, ty, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', tx, ty, textWidth);\r\n      }\r\n      dwAngle.revert();\r\n      return new DrawResult({\r\n        width: trigonometricWidth + alignPadding,\r\n      });\r\n    }\r\n    // 折行文本计算\r\n    ruler.textWrapRuler();\r\n    const {\r\n      textWrapTextArray: textArray,\r\n      textWrapMaxLen: maxLen,\r\n    } = ruler;\r\n    const textArrayLen = textArray.length;\r\n    // 多行文本\r\n    if (textArrayLen > 1) {\r\n      // 计算文本块之间的间隙\r\n      const spacing = RTSinKit.tilt({\r\n        inverse: size + lineHeight,\r\n        angle,\r\n      });\r\n      // 计算每个文本块宽度和高度\r\n      const textWidth = Math.max(RTCosKit.nearby({\r\n        tilt: maxLen,\r\n        angle,\r\n      }), size);\r\n      const textHeight = RTSinKit.inverse({\r\n        tilt: maxLen,\r\n        angle,\r\n      });\r\n      // 文本总宽度\r\n      const totalWidth = textWidth + ((textArrayLen - 1) * spacing);\r\n      // 文本坐标\r\n      let bx = rect.x;\r\n      let by = rect.y;\r\n      switch (align) {\r\n        case BaseFont.ALIGN.left:\r\n          bx += alignPadding;\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          bx += width / 2 - totalWidth / 2;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n          bx += width - totalWidth - alignPadding;\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          by += verticalAlignPadding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          by += height / 2 - textHeight / 2;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          by += height - textHeight - verticalAlignPadding;\r\n          break;\r\n      }\r\n      // 渲染文本\r\n      let jj = 0;\r\n      while (jj < textArrayLen) {\r\n        // 计算文本的绘制位置旋转中心\r\n        const item = textArray[jj];\r\n        const rx = item.tx + bx;\r\n        const ry = item.ty + by;\r\n        let ax = 0;\r\n        let ay = 0;\r\n        switch (align) {\r\n          case BaseFont.ALIGN.left: {\r\n            const tilt = item.len / 2;\r\n            const tw = Math.max(RTCosKit.nearby({\r\n              tilt,\r\n              angle,\r\n            }), size);\r\n            const th = RTSinKit.inverse({\r\n              tilt,\r\n              angle,\r\n            });\r\n            ax += rx + tw;\r\n            ay += ry + th;\r\n            break;\r\n          }\r\n          case BaseFont.ALIGN.center: {\r\n            ax = rx + textWidth / 2;\r\n            ay = ry + textHeight / 2;\r\n            break;\r\n          }\r\n          case BaseFont.ALIGN.right: {\r\n            const tilt = item.len / 2;\r\n            const tw = Math.max(RTCosKit.nearby({\r\n              tilt,\r\n              angle,\r\n            }), size);\r\n            const th = RTSinKit.inverse({\r\n              tilt,\r\n              angle,\r\n            });\r\n            ax += rx + textWidth - tw;\r\n            ay += ry + textHeight - th;\r\n            break;\r\n          }\r\n        }\r\n        const tx = ax - item.len / 2;\r\n        const ty = ay - size / 2;\r\n        // 旋转并且绘制文本\r\n        const dwAngle = new Angle({\r\n          draw,\r\n          angle,\r\n          rect: new Rect({\r\n            x: tx,\r\n            y: ty,\r\n            width: item.len,\r\n            height: size,\r\n          }),\r\n        });\r\n        dwAngle.rotate();\r\n        draw.fillText(item.text, tx, ty);\r\n        if (underline) {\r\n          this.drawingLine('underline', tx, ty, item.len);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawingLine('strike', tx, ty, item.len);\r\n        }\r\n        dwAngle.revert();\r\n        jj += 1;\r\n      }\r\n      return new DrawResult({\r\n        width: totalWidth + alignPadding,\r\n      });\r\n    }\r\n    // 计算文本块大小\r\n    const {\r\n      textWrapText: text,\r\n      textWrapTextWidth: textWidth,\r\n    } = ruler;\r\n    const trigonometricWidth = Math.max(RTCosKit.nearby({\r\n      tilt: textWidth,\r\n      angle,\r\n    }), size);\r\n    const trigonometricHeight = RTSinKit.inverse({\r\n      tilt: textWidth,\r\n      angle,\r\n    });\r\n    // 计算文本绘制位置旋转中心\r\n    let rtx = rect.x;\r\n    let rty = rect.y;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left:\r\n        rtx += alignPadding;\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        rtx += width / 2 - trigonometricWidth / 2;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        rtx += width - trigonometricWidth - alignPadding;\r\n        break;\r\n    }\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        rty += verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        rty += height / 2 - trigonometricHeight / 2;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        rty += height - trigonometricHeight - verticalAlignPadding;\r\n        break;\r\n    }\r\n    // 渲染文本\r\n    const dwAngle = new Angle({\r\n      draw,\r\n      angle,\r\n      rect: new Rect({\r\n        x: rtx,\r\n        y: rty,\r\n        width: trigonometricWidth,\r\n        height: trigonometricHeight,\r\n      }),\r\n    });\r\n    dwAngle.rotate();\r\n    const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n    const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n    draw.fillText(text, tx, ty);\r\n    if (underline) {\r\n      this.drawingLine('underline', tx, ty, textWidth);\r\n    }\r\n    if (strikethrough) {\r\n      this.drawingLine('strike', tx, ty, textWidth);\r\n    }\r\n    dwAngle.revert();\r\n    return new DrawResult({\r\n      width: trigonometricWidth + alignPadding,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBoxDraw,\r\n};\r\n","import { BaseFont } from '../BaseFont';\r\nimport { RTCosKit, RTSinKit } from '../../RTFunction';\r\nimport { Rect } from '../../Rect';\r\nimport { Crop } from '../../Crop';\r\nimport { Angle } from '../../Angle';\r\nimport { DrawResult } from '../DrawResult';\r\n\r\nclass AngleBarDraw extends BaseFont {\r\n\r\n  constructor({\r\n    draw, ruler, rect, overflow, lineHeight = 4, attr,\r\n  }) {\r\n    super({\r\n      draw, ruler, attr,\r\n    });\r\n    this.rect = rect;\r\n    this.overflow = overflow;\r\n    this.lineHeight = lineHeight;\r\n  }\r\n\r\n  drawingFont() {\r\n    const { ruler } = this;\r\n    if (ruler.isBlank()) {\r\n      return new DrawResult();\r\n    }\r\n    const { draw, attr } = this;\r\n    const { textWrap } = attr;\r\n    draw.attr({\r\n      textAlign: BaseFont.ALIGN.left,\r\n      textBaseline: BaseFont.VERTICAL_ALIGN.top,\r\n      font: `${attr.italic ? 'italic' : ''} ${attr.bold ? 'bold' : ''} ${attr.size}px ${attr.name}`,\r\n      fillStyle: attr.color,\r\n      strokeStyle: attr.color,\r\n    });\r\n    if (ruler.hasBreak()) {\r\n      return this.textWrapDraw();\r\n    }\r\n    switch (textWrap) {\r\n      case BaseFont.TEXT_WRAP.OVER_FLOW:\r\n        return this.overflowDraw();\r\n      case BaseFont.TEXT_WRAP.TRUNCATE:\r\n        return this.truncateDraw();\r\n      case BaseFont.TEXT_WRAP.WORD_WRAP:\r\n        return this.textWrapDraw();\r\n    }\r\n    return new DrawResult();\r\n  }\r\n\r\n  drawingLine(type, tx, ty, textWidth) {\r\n    const { draw, attr } = this;\r\n    const { size } = attr;\r\n    const s = [0, 0];\r\n    const e = [0, 0];\r\n    if (type === 'strike') {\r\n      s[0] = tx;\r\n      e[0] = tx + textWidth;\r\n      s[1] = ty + size / 2;\r\n      e[1] = ty + size / 2;\r\n    }\r\n    if (type === 'underline') {\r\n      s[0] = tx;\r\n      e[0] = tx + textWidth;\r\n      s[1] = ty + size;\r\n      e[1] = ty + size;\r\n    }\r\n    draw.line(s, e);\r\n  }\r\n\r\n  truncateDraw() {\r\n    return this.overflowDraw();\r\n  }\r\n\r\n  overflowDraw() {\r\n    const { draw, ruler, attr } = this;\r\n    const { rect } = this;\r\n    const { x, y, width, height } = rect;\r\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\r\n    // 填充宽度\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const alignPadding = this.getAlignPadding();\r\n    // 角度边界\r\n    let { angle } = attr;\r\n    if (angle < -90) {\r\n      angle = -90;\r\n    }\r\n    if (angle > 90) {\r\n      angle = 90;\r\n    }\r\n    if (angle === 0) {\r\n      throw new TypeError('文字的角度必须是在90<0或者0>90之间!');\r\n    }\r\n    // 斜边的大小\r\n    const trigonometricTilt = RTSinKit.tilt({\r\n      inverse: height,\r\n      angle,\r\n    });\r\n    const trigonometricTiltWidth = RTCosKit.nearby({\r\n      tilt: trigonometricTilt,\r\n      angle,\r\n    });\r\n    // 文本长度\r\n    ruler.overflowRuler();\r\n    const {\r\n      overflowText: text,\r\n      overflowTextWidth: textWidth,\r\n    } = ruler;\r\n    // 文本块大小\r\n    const trigonometricWidth = Math.max(RTCosKit.nearby({\r\n      tilt: textWidth,\r\n      angle,\r\n    }), size);\r\n    const trigonometricHeight = RTSinKit.inverse({\r\n      tilt: textWidth,\r\n      angle,\r\n    });\r\n    if (angle > 0) {\r\n      // 可溢出区域\r\n      const overflow = new Rect({\r\n        x, y, width: trigonometricTiltWidth + width, height,\r\n      });\r\n      // 计算文本绘制位置\r\n      let rtx = 0;\r\n      let rty = 0;\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          rtx = x + (trigonometricTiltWidth - trigonometricWidth) - verticalAlignPadding;\r\n          rty = y + verticalAlignPadding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          rtx = x + (trigonometricTiltWidth / 2 - trigonometricWidth / 2) - verticalAlignPadding;\r\n          rty = y + (height / 2 - trigonometricHeight / 2) + verticalAlignPadding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          rtx = x + verticalAlignPadding;\r\n          rty = y + (height - trigonometricHeight) - verticalAlignPadding;\r\n          break;\r\n      }\r\n      switch (align) {\r\n        case BaseFont.ALIGN.left:\r\n          rtx += size / 2 + alignPadding;\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          rtx += width / 2;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n          rtx += width - size / 2 - alignPadding;\r\n          break;\r\n      }\r\n      // 边界检查\r\n      const outboundsHeight = trigonometricHeight + verticalAlignPadding > overflow.height;\r\n      const outboundsWidth = trigonometricWidth + alignPadding > overflow.width;\r\n      if (outboundsHeight || outboundsWidth) {\r\n        const crop = new Crop({\r\n          draw,\r\n          rect: overflow,\r\n        });\r\n        const dwAngle = new Angle({\r\n          draw,\r\n          angle,\r\n          rect: new Rect({\r\n            x: rtx,\r\n            y: rty,\r\n            width: trigonometricWidth,\r\n            height: trigonometricHeight,\r\n          }),\r\n        });\r\n        crop.open();\r\n        dwAngle.rotate();\r\n        const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n        const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n        draw.fillText(text, tx, ty);\r\n        if (underline) {\r\n          this.drawingLine('underline', tx, ty, textWidth);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawingLine('strike', tx, ty, textWidth);\r\n        }\r\n        dwAngle.revert();\r\n        crop.close();\r\n      } else {\r\n        const dwAngle = new Angle({\r\n          draw,\r\n          angle,\r\n          rect: new Rect({\r\n            x: rtx,\r\n            y: rty,\r\n            width: trigonometricWidth,\r\n            height: trigonometricHeight,\r\n          }),\r\n        });\r\n        dwAngle.rotate();\r\n        const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n        const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n        draw.fillText(text, tx, ty);\r\n        if (underline) {\r\n          this.drawingLine('underline', tx, ty, textWidth);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawingLine('strike', tx, ty, textWidth);\r\n        }\r\n        dwAngle.revert();\r\n      }\r\n      // 文本宽度\r\n      const haveWidth = trigonometricTiltWidth + width;\r\n      return new DrawResult({\r\n        width: haveWidth, leftSdist: trigonometricTiltWidth, rightSdist: 0,\r\n      });\r\n    }\r\n    // 可溢出区域\r\n    const overflow = new Rect({\r\n      x: x - trigonometricTiltWidth, y, width: trigonometricTiltWidth + width, height,\r\n    });\r\n    // 计算文本绘制位置\r\n    let rtx = 0;\r\n    let rty = 0;\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        rtx = x - trigonometricTiltWidth + verticalAlignPadding;\r\n        rty = y + verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        rtx = x - (trigonometricTiltWidth / 2 + trigonometricWidth / 2) + verticalAlignPadding;\r\n        rty = y + (height / 2 - trigonometricHeight / 2) + verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        rtx = x - trigonometricWidth - verticalAlignPadding;\r\n        rty = y + (height - trigonometricHeight) - verticalAlignPadding;\r\n        break;\r\n    }\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left:\r\n        rtx += size / 2 + alignPadding;\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        rtx += width / 2;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        rtx += width - size / 2 - alignPadding;\r\n        break;\r\n    }\r\n    // 边界检查\r\n    const outboundsHeight = trigonometricHeight + verticalAlignPadding > overflow.height;\r\n    const outboundsWidth = trigonometricWidth + alignPadding > overflow.width;\r\n    if (outboundsHeight || outboundsWidth) {\r\n      const crop = new Crop({\r\n        draw,\r\n        rect: overflow,\r\n      });\r\n      const dwAngle = new Angle({\r\n        draw,\r\n        angle,\r\n        rect: new Rect({\r\n          x: rtx,\r\n          y: rty,\r\n          width: trigonometricWidth,\r\n          height: trigonometricHeight,\r\n        }),\r\n      });\r\n      crop.open();\r\n      dwAngle.rotate();\r\n      const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n      const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n      draw.fillText(text, tx, ty);\r\n      if (underline) {\r\n        this.drawingLine('underline', tx, ty, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', tx, ty, textWidth);\r\n      }\r\n      dwAngle.revert();\r\n      crop.close();\r\n    } else {\r\n      const dwAngle = new Angle({\r\n        draw,\r\n        angle,\r\n        rect: new Rect({\r\n          x: rtx,\r\n          y: rty,\r\n          width: trigonometricWidth,\r\n          height: trigonometricHeight,\r\n        }),\r\n      });\r\n      dwAngle.rotate();\r\n      const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n      const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n      draw.fillText(text, tx, ty);\r\n      if (underline) {\r\n        this.drawingLine('underline', tx, ty, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', tx, ty, textWidth);\r\n      }\r\n      dwAngle.revert();\r\n    }\r\n    // 文本宽度\r\n    const haveWidth = trigonometricTiltWidth + width;\r\n    return new DrawResult({\r\n      width: haveWidth, leftSdist: 0, rightSdist: trigonometricTiltWidth,\r\n    });\r\n  }\r\n\r\n  textWrapDraw() {\r\n    const { draw, ruler, attr } = this;\r\n    const { rect, overflow, lineHeight } = this;\r\n    const { x, y, width, height } = rect;\r\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\r\n    // 填充宽度\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const alignPadding = this.getAlignPadding();\r\n    // 角度边界\r\n    let { angle } = attr;\r\n    if (angle < -90) {\r\n      angle = -90;\r\n    }\r\n    if (angle > 90) {\r\n      angle = 90;\r\n    }\r\n    if (angle === 0) {\r\n      throw new TypeError('文字的角度必须是在90<0或者0>90之间!');\r\n    }\r\n    // 斜边的大小\r\n    const trigonometricTilt = RTSinKit.tilt({\r\n      inverse: height,\r\n      angle,\r\n    });\r\n    const trigonometricTiltWidth = RTCosKit.nearby({\r\n      tilt: trigonometricTilt,\r\n      angle,\r\n    });\r\n    // 绘制文本\r\n    if (angle > 0) {\r\n      // 折行文本计算\r\n      ruler.textWrapRuler();\r\n      const {\r\n        textWrapTextArray: textArray,\r\n        textWrapMaxLen: maxLen,\r\n      } = ruler;\r\n      const textArrayLen = textArray.length;\r\n      // 多行文本\r\n      if (textArrayLen > 1) {\r\n        // 文本间隙\r\n        const spacing = RTSinKit.tilt({\r\n          inverse: size + lineHeight,\r\n          angle,\r\n        });\r\n        // 文本宽高\r\n        const textWidth = Math.max(RTCosKit.nearby({\r\n          tilt: maxLen,\r\n          angle,\r\n        }), size);\r\n        const textHeight = RTSinKit.inverse({\r\n          tilt: maxLen,\r\n          angle,\r\n        });\r\n        // 总宽度\r\n        const totalWidth = textWidth + ((textArrayLen - 1) * spacing);\r\n        // 计算文本绘制位置\r\n        let bx = 0;\r\n        let by = 0;\r\n        switch (verticalAlign) {\r\n          case BaseFont.VERTICAL_ALIGN.top:\r\n            bx = x + (trigonometricTiltWidth - textWidth) - verticalAlignPadding;\r\n            by = y + verticalAlignPadding;\r\n            break;\r\n          case BaseFont.VERTICAL_ALIGN.center:\r\n            bx = x + (trigonometricTiltWidth / 2 - textWidth / 2) - verticalAlignPadding;\r\n            by = y + (height / 2 - textHeight / 2) + verticalAlignPadding;\r\n            break;\r\n          case BaseFont.VERTICAL_ALIGN.bottom:\r\n            bx = x + verticalAlignPadding;\r\n            by = y + (height - textHeight) - verticalAlignPadding;\r\n            break;\r\n        }\r\n        switch (align) {\r\n          case BaseFont.ALIGN.left:\r\n            bx += size / 2 + alignPadding;\r\n            break;\r\n          case BaseFont.ALIGN.center:\r\n            bx += (textWidth / 2 + width / 2) - totalWidth / 2;\r\n            break;\r\n          case BaseFont.ALIGN.right:\r\n            bx += (textWidth / 2 + width) - (totalWidth - textWidth / 2) - size / 2 - alignPadding;\r\n            break;\r\n        }\r\n        // 边界检查\r\n        let pointOffset = false;\r\n        if (align === BaseFont.ALIGN.center) {\r\n          if (overflow.x > bx) {\r\n            pointOffset = true;\r\n          }\r\n        }\r\n        const outboundsHeight = totalWidth + verticalAlignPadding > overflow.height;\r\n        const outboundsWidth = totalWidth + alignPadding > overflow.width;\r\n        if (outboundsHeight || outboundsWidth || pointOffset) {\r\n          const crop = new Crop({\r\n            draw,\r\n            rect: overflow,\r\n          });\r\n          crop.open();\r\n          // 渲染文本\r\n          let jj = 0;\r\n          while (jj < textArrayLen) {\r\n            // 计算文本的绘制位置旋转中心\r\n            const item = textArray[jj];\r\n            const rx = item.tx + bx;\r\n            const ry = item.ty + by;\r\n            let ax = 0;\r\n            let ay = 0;\r\n            switch (align) {\r\n              case BaseFont.ALIGN.left: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + tw;\r\n                ay += ry + textHeight - th;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.center: {\r\n                ax = rx + textWidth / 2;\r\n                ay = ry + textHeight / 2;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.right: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + textWidth - tw;\r\n                ay += ry + th;\r\n                break;\r\n              }\r\n            }\r\n            const tx = ax - item.len / 2;\r\n            const ty = ay - size / 2;\r\n            // 旋转并且绘制文本\r\n            const dwAngle = new Angle({\r\n              draw,\r\n              angle,\r\n              rect: new Rect({\r\n                x: tx,\r\n                y: ty,\r\n                width: item.len,\r\n                height: size,\r\n              }),\r\n            });\r\n            dwAngle.rotate();\r\n            draw.fillText(item.text, tx, ty);\r\n            if (underline) {\r\n              this.drawingLine('underline', tx, ty, item.len);\r\n            }\r\n            if (strikethrough) {\r\n              this.drawingLine('strike', tx, ty, item.len);\r\n            }\r\n            dwAngle.revert();\r\n            jj += 1;\r\n          }\r\n          crop.close();\r\n        } else {\r\n          // 渲染文本\r\n          let jj = 0;\r\n          while (jj < textArrayLen) {\r\n            // 计算文本的绘制位置旋转中心\r\n            const item = textArray[jj];\r\n            const rx = item.tx + bx;\r\n            const ry = item.ty + by;\r\n            let ax = 0;\r\n            let ay = 0;\r\n            switch (align) {\r\n              case BaseFont.ALIGN.left: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + tw;\r\n                ay += ry + textHeight - th;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.center: {\r\n                ax = rx + textWidth / 2;\r\n                ay = ry + textHeight / 2;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.right: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + textWidth - tw;\r\n                ay += ry + th;\r\n                break;\r\n              }\r\n            }\r\n            const tx = ax - item.len / 2;\r\n            const ty = ay - size / 2;\r\n            // 旋转并且绘制文本\r\n            const dwAngle = new Angle({\r\n              draw,\r\n              angle,\r\n              rect: new Rect({\r\n                x: tx,\r\n                y: ty,\r\n                width: item.len,\r\n                height: size,\r\n              }),\r\n            });\r\n            dwAngle.rotate();\r\n            draw.fillText(item.text, tx, ty);\r\n            if (underline) {\r\n              this.drawingLine('underline', tx, ty, item.len);\r\n            }\r\n            if (strikethrough) {\r\n              this.drawingLine('strike', tx, ty, item.len);\r\n            }\r\n            dwAngle.revert();\r\n            jj += 1;\r\n          }\r\n        }\r\n        // 文本宽度\r\n        let haveWidth = 0;\r\n        switch (align) {\r\n          case BaseFont.ALIGN.left: {\r\n            haveWidth = totalWidth + trigonometricTiltWidth / 2 + alignPadding;\r\n            break;\r\n          }\r\n          case BaseFont.ALIGN.center: {\r\n            haveWidth = totalWidth / 2 + trigonometricTiltWidth / 2 + width / 2;\r\n            break;\r\n          }\r\n          case BaseFont.ALIGN.right: {\r\n            haveWidth = trigonometricTiltWidth + width;\r\n            break;\r\n          }\r\n        }\r\n        haveWidth = Math.max(haveWidth, trigonometricTiltWidth + width);\r\n        return new DrawResult({\r\n          width: haveWidth, leftSdist: trigonometricTiltWidth, rightSdist: 0,\r\n        });\r\n      }\r\n      // 文本长度\r\n      const {\r\n        textWrapText: text,\r\n        textWrapTextWidth: textWidth,\r\n      } = ruler;\r\n      // 文本块大小\r\n      const trigonometricWidth = Math.max(RTCosKit.nearby({\r\n        tilt: textWidth,\r\n        angle,\r\n      }), size);\r\n      const trigonometricHeight = RTSinKit.inverse({\r\n        tilt: textWidth,\r\n        angle,\r\n      });\r\n      // 计算文本绘制位置\r\n      let rtx = 0;\r\n      let rty = 0;\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          rtx = x + (trigonometricTiltWidth - trigonometricWidth) - verticalAlignPadding;\r\n          rty = y + verticalAlignPadding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          rtx = x + (trigonometricTiltWidth / 2 - trigonometricWidth / 2) - verticalAlignPadding;\r\n          rty = y + (height / 2 - trigonometricHeight / 2) + verticalAlignPadding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          rtx = x + verticalAlignPadding;\r\n          rty = y + (height - trigonometricHeight) - verticalAlignPadding;\r\n          break;\r\n      }\r\n      switch (align) {\r\n        case BaseFont.ALIGN.left:\r\n          rtx += size / 2 + alignPadding;\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          rtx += width / 2;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n          rtx += width - size / 2 - alignPadding;\r\n          break;\r\n      }\r\n      // 绘制文本\r\n      const dwAngle = new Angle({\r\n        draw,\r\n        angle,\r\n        rect: new Rect({\r\n          x: rtx,\r\n          y: rty,\r\n          width: trigonometricWidth,\r\n          height: trigonometricHeight,\r\n        }),\r\n      });\r\n      dwAngle.rotate();\r\n      const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n      const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n      draw.fillText(text, tx, ty);\r\n      if (underline) {\r\n        this.drawingLine('underline', tx, ty, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', tx, ty, textWidth);\r\n      }\r\n      dwAngle.revert();\r\n      // 文本宽度\r\n      const haveWidth = trigonometricTiltWidth + width;\r\n      return new DrawResult({\r\n        width: haveWidth, leftSdist: trigonometricTiltWidth, rightSdist: 0,\r\n      });\r\n    }\r\n    // 折行文本计算\r\n    ruler.textWrapRuler();\r\n    const {\r\n      textWrapTextArray: textArray,\r\n      textWrapMaxLen: maxLen,\r\n    } = ruler;\r\n    const textArrayLen = textArray.length;\r\n    // 多行文本\r\n    if (textArrayLen > 1) {\r\n      // 文本间隙\r\n      const spacing = RTSinKit.tilt({\r\n        inverse: size + lineHeight,\r\n        angle,\r\n      });\r\n      // 文本宽高\r\n      const textWidth = Math.max(RTCosKit.nearby({\r\n        tilt: maxLen,\r\n        angle,\r\n      }), size);\r\n      const textHeight = RTSinKit.inverse({\r\n        tilt: maxLen,\r\n        angle,\r\n      });\r\n      // 总宽度\r\n      const totalWidth = textWidth + ((textArrayLen - 1) * spacing);\r\n      // 文本坐标\r\n      let bx = rect.x;\r\n      let by = rect.y;\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          bx = x - trigonometricTiltWidth + verticalAlignPadding;\r\n          by = y + verticalAlignPadding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          bx = x - (trigonometricTiltWidth / 2 + textWidth / 2) + verticalAlignPadding;\r\n          by = y + (height / 2 - textHeight / 2) + verticalAlignPadding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          bx = x - textWidth - verticalAlignPadding;\r\n          by = y + (height - textHeight) - verticalAlignPadding;\r\n          break;\r\n      }\r\n      switch (align) {\r\n        case BaseFont.ALIGN.left:\r\n          bx += size / 2 + alignPadding;\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          bx += (textWidth / 2 + width / 2) - totalWidth / 2;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n          bx += (textWidth / 2 + width) - (totalWidth - textWidth / 2) - size / 2 - alignPadding;\r\n          break;\r\n      }\r\n      // 边界检查\r\n      let pointOffset = false;\r\n      if (align === BaseFont.ALIGN.center) {\r\n        if (overflow.x + overflow.width > bx + totalWidth) {\r\n          pointOffset = true;\r\n        }\r\n      }\r\n      const outboundsHeight = totalWidth + verticalAlignPadding > overflow.height;\r\n      const outboundsWidth = totalWidth + alignPadding > overflow.width;\r\n      if (outboundsHeight || outboundsWidth || pointOffset) {\r\n        const crop = new Crop({\r\n          draw,\r\n          rect: overflow,\r\n        });\r\n        crop.open();\r\n        // 渲染文本\r\n        let jj = 0;\r\n        while (jj < textArrayLen) {\r\n          // 计算文本的绘制位置旋转中心\r\n          const item = textArray[jj];\r\n          const rx = item.tx + bx;\r\n          const ry = item.ty + by;\r\n          let ax = 0;\r\n          let ay = 0;\r\n          switch (align) {\r\n            case BaseFont.ALIGN.left: {\r\n              const tilt = item.len / 2;\r\n              const tw = Math.max(RTCosKit.nearby({\r\n                tilt,\r\n                angle,\r\n              }), size);\r\n              const th = RTSinKit.inverse({\r\n                tilt,\r\n                angle,\r\n              });\r\n              ax += rx + tw;\r\n              ay += ry + th;\r\n              break;\r\n            }\r\n            case BaseFont.ALIGN.center: {\r\n              ax = rx + textWidth / 2;\r\n              ay = ry + textHeight / 2;\r\n              break;\r\n            }\r\n            case BaseFont.ALIGN.right: {\r\n              const tilt = item.len / 2;\r\n              const tw = Math.max(RTCosKit.nearby({\r\n                tilt,\r\n                angle,\r\n              }), size);\r\n              const th = RTSinKit.inverse({\r\n                tilt,\r\n                angle,\r\n              });\r\n              ax += rx + textWidth - tw;\r\n              ay += ry + textHeight - th;\r\n              break;\r\n            }\r\n          }\r\n          const tx = ax - item.len / 2;\r\n          const ty = ay - size / 2;\r\n          // 旋转并且绘制文本\r\n          const dwAngle = new Angle({\r\n            draw,\r\n            angle,\r\n            rect: new Rect({\r\n              x: tx,\r\n              y: ty,\r\n              width: item.len,\r\n              height: size,\r\n            }),\r\n          });\r\n          dwAngle.rotate();\r\n          draw.fillText(item.text, tx, ty);\r\n          if (underline) {\r\n            this.drawingLine('underline', tx, ty, item.len);\r\n          }\r\n          if (strikethrough) {\r\n            this.drawingLine('strike', tx, ty, item.len);\r\n          }\r\n          dwAngle.revert();\r\n          jj += 1;\r\n        }\r\n        crop.close();\r\n      } else {\r\n        // 渲染文本\r\n        let jj = 0;\r\n        while (jj < textArrayLen) {\r\n          // 计算文本的绘制位置旋转中心\r\n          const item = textArray[jj];\r\n          const rx = item.tx + bx;\r\n          const ry = item.ty + by;\r\n          let ax = 0;\r\n          let ay = 0;\r\n          switch (align) {\r\n            case BaseFont.ALIGN.left: {\r\n              const tilt = item.len / 2;\r\n              const tw = Math.max(RTCosKit.nearby({\r\n                tilt,\r\n                angle,\r\n              }), size);\r\n              const th = RTSinKit.inverse({\r\n                tilt,\r\n                angle,\r\n              });\r\n              ax += rx + tw;\r\n              ay += ry + th;\r\n              break;\r\n            }\r\n            case BaseFont.ALIGN.center: {\r\n              ax = rx + textWidth / 2;\r\n              ay = ry + textHeight / 2;\r\n              break;\r\n            }\r\n            case BaseFont.ALIGN.right: {\r\n              const tilt = item.len / 2;\r\n              const tw = Math.max(RTCosKit.nearby({\r\n                tilt,\r\n                angle,\r\n              }), size);\r\n              const th = RTSinKit.inverse({\r\n                tilt,\r\n                angle,\r\n              });\r\n              ax += rx + textWidth - tw;\r\n              ay += ry + textHeight - th;\r\n              break;\r\n            }\r\n          }\r\n          const tx = ax - item.len / 2;\r\n          const ty = ay - size / 2;\r\n          // 旋转并且绘制文本\r\n          const dwAngle = new Angle({\r\n            draw,\r\n            angle,\r\n            rect: new Rect({\r\n              x: tx,\r\n              y: ty,\r\n              width: item.len,\r\n              height: size,\r\n            }),\r\n          });\r\n          dwAngle.rotate();\r\n          draw.fillText(item.text, tx, ty);\r\n          if (underline) {\r\n            this.drawingLine('underline', tx, ty, item.len);\r\n          }\r\n          if (strikethrough) {\r\n            this.drawingLine('strike', tx, ty, item.len);\r\n          }\r\n          dwAngle.revert();\r\n          jj += 1;\r\n        }\r\n      }\r\n      // 文本宽度\r\n      let haveWidth = 0;\r\n      switch (align) {\r\n        case BaseFont.ALIGN.left: {\r\n          haveWidth = trigonometricTiltWidth + width;\r\n          break;\r\n        }\r\n        case BaseFont.ALIGN.center: {\r\n          haveWidth = totalWidth / 2 + trigonometricTiltWidth / 2 + width / 2;\r\n          break;\r\n        }\r\n        case BaseFont.ALIGN.right: {\r\n          haveWidth = totalWidth + trigonometricTiltWidth / 2 + alignPadding;\r\n          break;\r\n        }\r\n      }\r\n      haveWidth = Math.max(haveWidth, trigonometricTiltWidth + width);\r\n      return new DrawResult({\r\n        width: haveWidth, leftSdist: 0, rightSdist: trigonometricTiltWidth,\r\n      });\r\n    }\r\n    // 文本长度\r\n    const {\r\n      textWrapText: text,\r\n      textWrapTextWidth: textWidth,\r\n    } = ruler;\r\n    // 文本块大小\r\n    const trigonometricWidth = Math.max(RTCosKit.nearby({\r\n      tilt: textWidth,\r\n      angle,\r\n    }), size);\r\n    const trigonometricHeight = RTSinKit.inverse({\r\n      tilt: textWidth,\r\n      angle,\r\n    });\r\n    // 计算文本绘制位置\r\n    let rtx = 0;\r\n    let rty = 0;\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        rtx = x - trigonometricTiltWidth + verticalAlignPadding;\r\n        rty = y + verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        rtx = x - (trigonometricTiltWidth / 2 + trigonometricWidth / 2) + verticalAlignPadding;\r\n        rty = y + (height / 2 - trigonometricHeight / 2) + verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        rtx = x - trigonometricWidth - verticalAlignPadding;\r\n        rty = y + (height - trigonometricHeight) - verticalAlignPadding;\r\n        break;\r\n    }\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left:\r\n        rtx += size / 2 + alignPadding;\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        rtx += width / 2;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        rtx += width - size / 2 - alignPadding;\r\n        break;\r\n    }\r\n    // 绘制文本\r\n    const dwAngle = new Angle({\r\n      draw,\r\n      angle,\r\n      rect: new Rect({\r\n        x: rtx,\r\n        y: rty,\r\n        width: trigonometricWidth,\r\n        height: trigonometricHeight,\r\n      }),\r\n    });\r\n    dwAngle.rotate();\r\n    const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n    const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n    draw.fillText(text, tx, ty);\r\n    if (underline) {\r\n      this.drawingLine('underline', tx, ty, textWidth);\r\n    }\r\n    if (strikethrough) {\r\n      this.drawingLine('strike', tx, ty, textWidth);\r\n    }\r\n    dwAngle.revert();\r\n    // 文本宽度\r\n    const haveWidth = trigonometricTiltWidth + width;\r\n    return new DrawResult({\r\n      width: haveWidth, leftSdist: 0, rightSdist: trigonometricTiltWidth,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBarDraw,\r\n};\r\n","import { BaseFont } from '../BaseFont';\r\nimport { Crop } from '../../Crop';\r\nimport { DrawResult } from '../DrawResult';\r\n\r\nclass HorizonDraw extends BaseFont {\r\n\r\n  constructor({\r\n    draw, ruler, rect, overflow, lineHeight = 4, attr,\r\n  }) {\r\n    super({ draw, ruler, attr });\r\n    this.rect = rect;\r\n    this.overflow = overflow;\r\n    this.lineHeight = lineHeight;\r\n  }\r\n\r\n  drawingFont() {\r\n    const { ruler } = this;\r\n    if (ruler.isBlank()) {\r\n      return new DrawResult();\r\n    }\r\n    const { draw, attr } = this;\r\n    const { textWrap } = attr;\r\n    const font = `${attr.italic ? 'italic' : ''} ${attr.bold ? 'bold' : ''} ${attr.size}px ${attr.name}`.trim();\r\n    draw.attr({\r\n      textAlign: attr.align,\r\n      textBaseline: attr.verticalAlign,\r\n      font,\r\n      fillStyle: attr.color,\r\n      strokeStyle: attr.color,\r\n    });\r\n    if (ruler.hasBreak()) {\r\n      return this.textWrapDraw();\r\n    }\r\n    switch (textWrap) {\r\n      case BaseFont.TEXT_WRAP.OVER_FLOW:\r\n        return this.overflowDraw();\r\n      case BaseFont.TEXT_WRAP.TRUNCATE:\r\n        return this.truncateDraw();\r\n      case BaseFont.TEXT_WRAP.WORD_WRAP:\r\n        return this.textWrapDraw();\r\n    }\r\n    return new DrawResult();\r\n  }\r\n\r\n  drawingLine(type, tx, ty, textWidth) {\r\n    const { draw, attr } = this;\r\n    const { size, verticalAlign, align } = attr;\r\n    const s = [0, 0];\r\n    const e = [0, 0];\r\n    if (type === 'strike') {\r\n      switch (align) {\r\n        case BaseFont.ALIGN.right:\r\n          s[0] = tx - textWidth;\r\n          e[0] = tx;\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          s[0] = tx - textWidth / 2;\r\n          e[0] = tx + textWidth / 2;\r\n          break;\r\n        case BaseFont.ALIGN.left:\r\n          s[0] = tx;\r\n          e[0] = tx + textWidth;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          s[1] = ty + size / 2;\r\n          e[1] = ty + size / 2;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          s[1] = ty;\r\n          e[1] = ty;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          s[1] = ty - size / 2;\r\n          e[1] = ty - size / 2;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    if (type === 'underline') {\r\n      switch (align) {\r\n        case BaseFont.ALIGN.right:\r\n          s[0] = tx - textWidth;\r\n          e[0] = tx;\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          s[0] = tx - textWidth / 2;\r\n          e[0] = tx + textWidth / 2;\r\n          break;\r\n        case BaseFont.ALIGN.left:\r\n          s[0] = tx;\r\n          e[0] = tx + textWidth;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          s[1] = ty + size;\r\n          e[1] = ty + size;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          s[1] = ty + size / 2;\r\n          e[1] = ty + size / 2;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          s[1] = ty;\r\n          e[1] = ty;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    draw.line(s, e);\r\n  }\r\n\r\n  truncateDraw() {\r\n    const { draw, ruler, attr } = this;\r\n    const { rect } = this;\r\n    const { width, height } = rect;\r\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\r\n    // 文字宽度\r\n    ruler.truncateRuler();\r\n    const {\r\n      truncateText: text,\r\n      truncateTextWidth: textWidth,\r\n    } = ruler;\r\n    // 填充宽度\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const alignPadding = this.getAlignPadding();\r\n    // 计算文本坐标\r\n    let bx = rect.x;\r\n    let by = rect.y;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.center:\r\n        bx += width / 2;\r\n        break;\r\n      case BaseFont.ALIGN.left:\r\n        bx += alignPadding;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        bx += width - alignPadding;\r\n        break;\r\n    }\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        by += verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        by += height / 2;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        by += height - verticalAlignPadding;\r\n        break;\r\n    }\r\n    // 边界检查\r\n    const outboundsHeight = size + verticalAlignPadding > height;\r\n    const outboundsWidth = textWidth + alignPadding > width;\r\n    if (outboundsHeight || outboundsWidth) {\r\n      const crop = new Crop({\r\n        draw,\r\n        rect,\r\n      });\r\n      crop.open();\r\n      draw.fillText(text, bx, by);\r\n      if (underline) {\r\n        this.drawingLine('underline', bx, by, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', bx, by, textWidth);\r\n      }\r\n      crop.close();\r\n    } else {\r\n      draw.fillText(text, bx, by);\r\n      if (underline) {\r\n        this.drawingLine('underline', bx, by, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', bx, by, textWidth);\r\n      }\r\n    }\r\n    return new DrawResult();\r\n  }\r\n\r\n  overflowDraw() {\r\n    const { draw, ruler, attr } = this;\r\n    const { rect, overflow } = this;\r\n    const { width, height } = rect;\r\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\r\n    // 文字宽度\r\n    ruler.overflowRuler();\r\n    const {\r\n      overflowText: text,\r\n      overflowTextWidth: textWidth,\r\n    } = ruler;\r\n    // 填充宽度\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const alignPadding = this.getAlignPadding();\r\n    // 计算文本坐标\r\n    let bx = rect.x;\r\n    let by = rect.y;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left:\r\n        bx += alignPadding;\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        bx += width / 2;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        bx += width - alignPadding;\r\n        break;\r\n    }\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        by += verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        by += height / 2;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        by += height - verticalAlignPadding;\r\n        break;\r\n    }\r\n    // 边界检查\r\n    const outboundsHeight = size + verticalAlignPadding > overflow.height;\r\n    const outboundsWidth = textWidth + alignPadding > overflow.width;\r\n    let pointOffset = false;\r\n    if (align === BaseFont.ALIGN.center) {\r\n      const diff = textWidth / 2 - width / 2;\r\n      if (diff > 0) {\r\n        if (overflow.x > rect.x - diff) {\r\n          pointOffset = true;\r\n        } else if (overflow.x + overflow.width < rect.x + rect.width + diff) {\r\n          pointOffset = true;\r\n        }\r\n      }\r\n    }\r\n    if (outboundsHeight || outboundsWidth || pointOffset) {\r\n      const crop = new Crop({\r\n        draw,\r\n        rect: overflow,\r\n      });\r\n      crop.open();\r\n      draw.fillText(text, bx, by);\r\n      if (underline) {\r\n        this.drawingLine('underline', bx, by, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', bx, by, textWidth);\r\n      }\r\n      crop.close();\r\n    } else {\r\n      draw.fillText(text, bx, by);\r\n      if (underline) {\r\n        this.drawingLine('underline', bx, by, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', bx, by, textWidth);\r\n      }\r\n    }\r\n    return new DrawResult({\r\n      width: textWidth + alignPadding,\r\n    });\r\n  }\r\n\r\n  textWrapDraw() {\r\n    const { draw, ruler, attr } = this;\r\n    const { rect, lineHeight } = this;\r\n    const { width, height } = rect;\r\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\r\n    // 填充宽度\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const alignPadding = this.getAlignPadding();\r\n    // 计算文本折行\r\n    ruler.textWrapRuler();\r\n    const {\r\n      textWrapTextArray: textArray,\r\n      textWrapHOffset: hOffset,\r\n    } = ruler;\r\n    // 计算文本坐标\r\n    let bx = rect.x;\r\n    let by = rect.y;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left:\r\n        bx += alignPadding;\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        bx += width / 2;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        bx += width - alignPadding;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        by += height / 2 - hOffset / 2;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        by += verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        by += height - hOffset - verticalAlignPadding;\r\n        break;\r\n    }\r\n    // 边界检查\r\n    const totalHeight = (textArray.length * (size + lineHeight)) - lineHeight;\r\n    const outboundsHeight = totalHeight + verticalAlignPadding > height;\r\n    if (outboundsHeight) {\r\n      const crop = new Crop({\r\n        draw,\r\n        rect,\r\n      });\r\n      crop.open();\r\n      const textLen = textArray.length;\r\n      let ti = 0;\r\n      while (ti < textLen) {\r\n        const item = textArray[ti];\r\n        const tx = item.tx + bx;\r\n        const ty = item.ty + by;\r\n        draw.fillText(item.text, tx, ty);\r\n        if (underline) {\r\n          this.drawingLine('underline', tx, ty, item.len);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawingLine('strike', tx, ty, item.len);\r\n        }\r\n        ti += 1;\r\n      }\r\n      crop.close();\r\n    } else {\r\n      for (let i = 0, len = textArray.length; i < len; i += 1) {\r\n        const item = textArray[i];\r\n        const tx = item.tx + bx;\r\n        const ty = item.ty + by;\r\n        draw.fillText(item.text, tx, ty);\r\n        if (underline) {\r\n          this.drawingLine('underline', tx, ty, item.len);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawingLine('strike', tx, ty, item.len);\r\n        }\r\n      }\r\n    }\r\n    return new DrawResult();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  HorizonDraw,\r\n};\r\n","import { BaseFont } from '../BaseFont';\r\nimport { Crop } from '../../Crop';\r\nimport { DrawResult } from '../DrawResult';\r\n\r\nclass VerticalDraw extends BaseFont {\r\n\r\n  constructor({\r\n    draw, ruler, rect, attr,\r\n  }) {\r\n    super({ draw, ruler, attr });\r\n    this.rect = rect;\r\n  }\r\n\r\n  drawingFont() {\r\n    const { ruler } = this;\r\n    if (ruler.isBlank()) {\r\n      return new DrawResult();\r\n    }\r\n    const { draw, attr } = this;\r\n    const { textWrap } = attr;\r\n    draw.attr({\r\n      textAlign: BaseFont.ALIGN.left,\r\n      textBaseline: BaseFont.VERTICAL_ALIGN.top,\r\n      font: `${attr.italic ? 'italic' : ''} ${attr.bold ? 'bold' : ''} ${attr.size}px ${attr.name}`,\r\n      fillStyle: attr.color,\r\n      strokeStyle: attr.color,\r\n    });\r\n    if (ruler.hasBreak()) {\r\n      return this.textWrapDraw();\r\n    }\r\n    switch (textWrap) {\r\n      case BaseFont.TEXT_WRAP.OVER_FLOW:\r\n        return this.overflowDraw();\r\n      case BaseFont.TEXT_WRAP.TRUNCATE:\r\n        return this.truncateDraw();\r\n      case BaseFont.TEXT_WRAP.WORD_WRAP:\r\n        return this.textWrapDraw();\r\n    }\r\n    return new DrawResult();\r\n  }\r\n\r\n  drawingLine(type, tx, ty, textWidth, align, verticalAlign) {\r\n    const { draw, attr } = this;\r\n    const { size } = attr;\r\n    const s = [0, 0];\r\n    const e = [0, 0];\r\n    if (type === 'strike') {\r\n      switch (align) {\r\n        case BaseFont.ALIGN.center:\r\n        case BaseFont.ALIGN.left:\r\n        case BaseFont.ALIGN.right:\r\n          s[0] = tx;\r\n          e[0] = tx + textWidth;\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          s[1] = ty + size / 2;\r\n          e[1] = ty + size / 2;\r\n          break;\r\n      }\r\n    }\r\n    if (type === 'underline') {\r\n      switch (align) {\r\n        case BaseFont.ALIGN.center:\r\n        case BaseFont.ALIGN.left:\r\n        case BaseFont.ALIGN.right:\r\n          s[0] = tx;\r\n          e[0] = tx + textWidth;\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          s[1] = ty + size;\r\n          e[1] = ty + size;\r\n          break;\r\n      }\r\n    }\r\n    draw.line(s, e);\r\n  }\r\n\r\n  truncateDraw() {\r\n    const { draw, ruler, attr } = this;\r\n    const { rect } = this;\r\n    const { width, height } = rect;\r\n    const { underline, strikethrough, align, verticalAlign } = attr;\r\n    const { size } = attr;\r\n    // 填充宽度\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const alignPadding = this.getAlignPadding();\r\n    // 文本位置计算\r\n    ruler.truncateRuler();\r\n    const {\r\n      truncateTextArray: textArray,\r\n      truncateMaxLen: maxLen,\r\n    } = ruler;\r\n    // 计算文本坐标\r\n    let bx = rect.x;\r\n    let by = rect.y;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left:\r\n        bx += alignPadding;\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        bx += width / 2 - size / 2;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        bx += width - size - alignPadding;\r\n        break;\r\n    }\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        by += verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        by += height / 2 - maxLen / 2;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        by += height - maxLen - verticalAlignPadding;\r\n        break;\r\n    }\r\n    // 边界检查\r\n    const outboundsHeight = maxLen + verticalAlignPadding > height;\r\n    const outboundsWidth = size + alignPadding > width;\r\n    if (outboundsHeight || outboundsWidth) {\r\n      const crop = new Crop({\r\n        draw,\r\n        rect,\r\n      });\r\n      crop.open();\r\n      const textLen = textArray.length;\r\n      let ti = 0;\r\n      while (ti < textLen) {\r\n        const item = textArray[ti];\r\n        const tx = item.tx + bx;\r\n        const ty = item.ty + by;\r\n        draw.fillText(item.text, tx, ty);\r\n        if (underline) {\r\n          this.drawingLine('underline', tx, ty, item.len, align, verticalAlign);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawingLine('strike', tx, ty, item.len, align, verticalAlign);\r\n        }\r\n        ti += 1;\r\n      }\r\n      crop.close();\r\n    } else {\r\n      const textLen = textArray.length;\r\n      let ti = 0;\r\n      while (ti < textLen) {\r\n        const item = textArray[ti];\r\n        const tx = item.tx + bx;\r\n        const ty = item.ty + by;\r\n        draw.fillText(item.text, tx, ty);\r\n        if (underline) {\r\n          this.drawingLine('underline', tx, ty, item.len, align, verticalAlign);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawingLine('strike', tx, ty, item.len, align, verticalAlign);\r\n        }\r\n        ti += 1;\r\n      }\r\n    }\r\n    return new DrawResult();\r\n  }\r\n\r\n  overflowDraw() {\r\n    return this.truncateDraw();\r\n  }\r\n\r\n  textWrapDraw() {\r\n    const { draw, ruler, attr } = this;\r\n    const { rect } = this;\r\n    const { width, height } = rect;\r\n    const { size, verticalAlign, underline } = attr;\r\n    const { strikethrough, align } = attr;\r\n    // 填充宽度\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const alignPadding = this.getAlignPadding();\r\n    // 计算文本折行\r\n    ruler.textWrapRuler();\r\n    const {\r\n      textWrapTextArray: textArray,\r\n      textWrapMaxLen: maxLen,\r\n      textWrapWOffset: wOffset,\r\n    } = ruler;\r\n    // 计算文本坐标\r\n    let bx = rect.x;\r\n    let by = rect.y;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left:\r\n        bx += alignPadding;\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        bx += width / 2 - wOffset / 2;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        bx += width - wOffset - alignPadding;\r\n        break;\r\n    }\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        by += verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        by += height / 2 - maxLen / 2;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        by += height - maxLen - verticalAlignPadding;\r\n        break;\r\n    }\r\n    // 边界检查\r\n    const totalWidth = textArray.length * size;\r\n    const outboundsWidth = totalWidth + alignPadding > width;\r\n    if (outboundsWidth) {\r\n      const textLen = textArray.length;\r\n      const crop = new Crop({\r\n        draw,\r\n        rect,\r\n      });\r\n      crop.open();\r\n      let ti = 0;\r\n      while (ti < textLen) {\r\n        const item = textArray[ti];\r\n        const tx = item.tx + bx;\r\n        const ty = item.ty + by;\r\n        draw.fillText(item.text, tx, ty);\r\n        if (underline) {\r\n          this.drawingLine('underline', tx, ty, item.len, align, verticalAlign);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawingLine('strike', tx, ty, item.len, align, verticalAlign);\r\n        }\r\n        ti += 1;\r\n      }\r\n      crop.close();\r\n    } else {\r\n      const textLen = textArray.length;\r\n      let ti = 0;\r\n      while (ti < textLen) {\r\n        const item = textArray[ti];\r\n        const tx = item.tx + bx;\r\n        const ty = item.ty + by;\r\n        draw.fillText(item.text, tx, ty);\r\n        if (underline) {\r\n          this.drawingLine('underline', tx, ty, item.len, align, verticalAlign);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawingLine('strike', tx, ty, item.len, align, verticalAlign);\r\n        }\r\n        ti += 1;\r\n      }\r\n    }\r\n    return new DrawResult();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  VerticalDraw,\r\n};\r\n","class BaseRuler {\r\n\r\n  constructor({ draw }) {\r\n    this.draw = draw;\r\n  }\r\n\r\n  // 文本测量性能杀手谨慎使用\r\n  textWidth(text) {\r\n    const { draw } = this;\r\n    return draw.measureText(text).width;\r\n  }\r\n\r\n}\r\nBaseRuler.USED = {\r\n  DEFAULT_INI: 0,\r\n  TRUNCATE: 1,\r\n  OVER_FLOW: 2,\r\n  TEXT_WRAP: 3,\r\n};\r\nexport {\r\n  BaseRuler,\r\n};\r\n","import { BaseRuler } from './BaseRuler';\r\n\r\nclass PlainRuler extends BaseRuler {\r\n\r\n  constructor({\r\n    draw, text,\r\n  }) {\r\n    super({ draw });\r\n    this.text = text;\r\n  }\r\n\r\n  textBreak() {\r\n    const { text } = this;\r\n    return text.split(/\\n/);\r\n  }\r\n\r\n  isBlank() {\r\n    const { text } = this;\r\n    return text === null || text === undefined || text.toString().trim() === '';\r\n  }\r\n\r\n  hasBreak() {\r\n    const { text } = this;\r\n    return text.indexOf('\\n') > -1;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  PlainRuler,\r\n};\r\n","import { BaseRuler } from '../BaseRuler';\r\nimport { RTSinKit } from '../../RTFunction';\r\nimport { PlainRuler } from '../PlainRuler';\r\nimport { BaseFont } from '../BaseFont';\r\n\r\nclass AngleBoxRuler extends PlainRuler {\r\n\r\n  constructor({\r\n    draw,\r\n    text,\r\n    size,\r\n    angle,\r\n    rect,\r\n    overflow,\r\n    align,\r\n    verticalAlign,\r\n    textWrap,\r\n    lineHeight = 4,\r\n    padding,\r\n  }) {\r\n    super({\r\n      draw, text,\r\n    });\r\n\r\n    this.size = size;\r\n    this.angle = angle;\r\n    this.rect = rect;\r\n    this.overflow = overflow;\r\n    this.align = align;\r\n    this.verticalAlign = verticalAlign;\r\n    this.textWrap = textWrap;\r\n    this.lineHeight = lineHeight;\r\n    this.padding = padding;\r\n\r\n    this.overflowText = '';\r\n    this.overflowTextWidth = 0;\r\n\r\n    this.textWrapText = '';\r\n    this.textWrapTextWidth = 0;\r\n    this.textWrapTextArray = [];\r\n    this.textWrapMaxLen = 0;\r\n  }\r\n\r\n  equals(other) {\r\n    if (other === null) {\r\n      return false;\r\n    }\r\n    if (other.constructor !== AngleBoxRuler) {\r\n      return false;\r\n    }\r\n    if (other.text !== this.text) {\r\n      return false;\r\n    }\r\n    if (other.size !== this.size) {\r\n      return false;\r\n    }\r\n    if (other.angle !== this.angle) {\r\n      return false;\r\n    }\r\n    if (other.align !== this.align) {\r\n      return false;\r\n    }\r\n    if (other.verticalAlign !== this.verticalAlign) {\r\n      return false;\r\n    }\r\n    if (other.textWrap !== this.textWrap) {\r\n      return false;\r\n    }\r\n    if (other.padding !== this.padding) {\r\n      return false;\r\n    }\r\n    switch (this.textWrap) {\r\n      case BaseFont.TEXT_WRAP.TRUNCATE: {\r\n        const notWidth = other.rect.width !== this.rect.width;\r\n        const notHeight = other.rect.height !== this.rect.height;\r\n        if (notWidth || notHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n      case BaseFont.TEXT_WRAP.OVER_FLOW: {\r\n        const notWidth = other.overflow.width !== this.overflow.width;\r\n        const notHeight = other.overflow.height !== this.overflow.height;\r\n        if (notWidth || notHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n      case BaseFont.TEXT_WRAP.WORD_WRAP: {\r\n        if (other.lineHeight !== this.lineHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  truncateRuler() {\r\n    this.overflowRuler();\r\n  }\r\n\r\n  overflowRuler() {\r\n    if (this.used) { return; }\r\n    const { text } = this;\r\n    const textWidth = this.textWidth(text);\r\n    this.overflowText = text;\r\n    this.overflowTextWidth = textWidth;\r\n    this.used = BaseRuler.USED.OVER_FLOW;\r\n  }\r\n\r\n  textWrapRuler() {\r\n    if (this.used) { return; }\r\n    const { text, size, angle, rect, lineHeight, padding } = this;\r\n    const { height } = rect;\r\n    if (angle > 0) {\r\n      const textHypotenuseWidth = RTSinKit.tilt({\r\n        inverse: height - (padding * 2),\r\n        angle,\r\n      });\r\n      // 折行文本计算\r\n      const breakArray = this.textBreak();\r\n      const textArray = [];\r\n      const breakLen = breakArray.length;\r\n      let bi = 0;\r\n      let maxLen = 0;\r\n      while (bi < breakLen) {\r\n        const text = breakArray[bi];\r\n        const textLen = text.length;\r\n        const line = {\r\n          str: '',\r\n          len: 0,\r\n          start: 0,\r\n        };\r\n        let ii = 0;\r\n        while (ii < textLen) {\r\n          const str = line.str + text.charAt(ii);\r\n          const len = this.textWidth(str);\r\n          if (len > textHypotenuseWidth) {\r\n            if (line.len === 0) {\r\n              textArray.push({\r\n                text: str,\r\n                len,\r\n                tx: 0,\r\n                ty: 0,\r\n              });\r\n              if (len > maxLen) {\r\n                maxLen = len;\r\n              }\r\n              ii += 1;\r\n            } else {\r\n              textArray.push({\r\n                text: line.str,\r\n                len: line.len,\r\n                tx: 0,\r\n                ty: 0,\r\n              });\r\n              if (line.len > maxLen) {\r\n                maxLen = line.len;\r\n              }\r\n            }\r\n            line.str = '';\r\n            line.len = 0;\r\n            line.start = ii;\r\n          } else {\r\n            line.str = str;\r\n            line.len = len;\r\n            ii += 1;\r\n          }\r\n        }\r\n        if (line.len > 0) {\r\n          textArray.push({\r\n            text: line.str,\r\n            len: line.len,\r\n            tx: 0,\r\n            ty: 0,\r\n          });\r\n        }\r\n        if (line.len > maxLen) {\r\n          maxLen = line.len;\r\n        }\r\n        bi += 1;\r\n      }\r\n      // x坐标偏移量\r\n      const spacing = RTSinKit.tilt({\r\n        inverse: size + lineHeight,\r\n        angle,\r\n      });\r\n      const textArrayLen = textArray.length;\r\n      let wOffset = 0;\r\n      let ii = 0;\r\n      while (ii < textArrayLen) {\r\n        const item = textArray[ii];\r\n        item.tx = wOffset;\r\n        wOffset += spacing;\r\n        ii += 1;\r\n      }\r\n      this.textWrapTextArray = textArray;\r\n      this.textWrapMaxLen = maxLen;\r\n    } else {\r\n      const textHypotenuseWidth = RTSinKit.tilt({\r\n        inverse: height - (padding * 2),\r\n        angle,\r\n      });\r\n      // 折行文本计算\r\n      const breakArray = this.textBreak();\r\n      const textArray = [];\r\n      const breakLen = breakArray.length;\r\n      let bi = 0;\r\n      let maxLen = 0;\r\n      while (bi < breakLen) {\r\n        const text = breakArray[bi];\r\n        const textLen = text.length;\r\n        const line = {\r\n          str: '',\r\n          len: 0,\r\n          start: 0,\r\n        };\r\n        let ii = 0;\r\n        while (ii < textLen) {\r\n          const str = line.str + text.charAt(ii);\r\n          const len = this.textWidth(str);\r\n          if (len > textHypotenuseWidth) {\r\n            if (line.len === 0) {\r\n              textArray.push({\r\n                text: str,\r\n                len,\r\n                tx: 0,\r\n                ty: 0,\r\n              });\r\n              if (len > maxLen) {\r\n                maxLen = len;\r\n              }\r\n              ii += 1;\r\n            } else {\r\n              textArray.push({\r\n                text: line.str,\r\n                len: line.len,\r\n                tx: 0,\r\n                ty: 0,\r\n              });\r\n              if (line.len > maxLen) {\r\n                maxLen = line.len;\r\n              }\r\n            }\r\n            line.str = '';\r\n            line.len = 0;\r\n            line.start = ii;\r\n          } else {\r\n            line.str = str;\r\n            line.len = len;\r\n            ii += 1;\r\n          }\r\n        }\r\n        if (line.len > 0) {\r\n          textArray.push({\r\n            text: line.str,\r\n            len: line.len,\r\n            tx: 0,\r\n            ty: 0,\r\n          });\r\n        }\r\n        if (line.len > maxLen) {\r\n          maxLen = line.len;\r\n        }\r\n        bi += 1;\r\n      }\r\n      // 计算x坐标偏移量\r\n      const spacing = RTSinKit.tilt({\r\n        inverse: size + lineHeight,\r\n        angle,\r\n      });\r\n      const textArrayLen = textArray.length;\r\n      let wOffset = 0;\r\n      let ii = textArrayLen - 1;\r\n      while (ii >= 0) {\r\n        const item = textArray[ii];\r\n        item.tx = wOffset;\r\n        wOffset += spacing;\r\n        ii -= 1;\r\n      }\r\n      this.textWrapTextArray = textArray;\r\n      this.textWrapMaxLen = maxLen;\r\n    }\r\n    const { textWrapTextArray } = this;\r\n    if (textWrapTextArray.length === 0) {\r\n      this.textWrapText = text;\r\n      this.textWrapTextWidth = this.textWidth(text);\r\n    }\r\n    this.used = BaseRuler.USED.TEXT_WRAP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBoxRuler,\r\n};\r\n","import { AngleBoxRuler } from './AngleBoxRuler';\r\nimport { BaseFont } from '../BaseFont';\r\n\r\nclass AngleBarRuler extends AngleBoxRuler {\r\n\r\n  equals(other) {\r\n    if (other === null) {\r\n      return false;\r\n    }\r\n    if (other.constructor !== AngleBarRuler) {\r\n      return false;\r\n    }\r\n    if (other.text !== this.text) {\r\n      return false;\r\n    }\r\n    if (other.size !== this.size) {\r\n      return false;\r\n    }\r\n    if (other.angle !== this.angle) {\r\n      return false;\r\n    }\r\n    if (other.align !== this.align) {\r\n      return false;\r\n    }\r\n    if (other.verticalAlign !== this.verticalAlign) {\r\n      return false;\r\n    }\r\n    if (other.textWrap !== this.textWrap) {\r\n      return false;\r\n    }\r\n    if (other.padding !== this.padding) {\r\n      return false;\r\n    }\r\n    switch (this.textWrap) {\r\n      case BaseFont.TEXT_WRAP.TRUNCATE: {\r\n        const notWidth = other.rect.width !== this.rect.width;\r\n        const notHeight = other.rect.height !== this.rect.height;\r\n        if (notWidth || notHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n      case BaseFont.TEXT_WRAP.OVER_FLOW: {\r\n        const notWidth = other.overflow.width !== this.overflow.width;\r\n        const notHeight = other.overflow.height !== this.overflow.height;\r\n        if (notWidth || notHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n      case BaseFont.TEXT_WRAP.WORD_WRAP: {\r\n        if (other.lineHeight !== this.lineHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBarRuler,\r\n};\r\n","import { HorizonVisual } from './HorizonVisual';\r\nimport { BaseRuler } from '../BaseRuler';\r\nimport { BaseFont } from '../BaseFont';\r\n\r\nclass HorizonRuler extends HorizonVisual {\r\n\r\n  constructor({\r\n    draw,\r\n    text,\r\n    size,\r\n    rect,\r\n    overflow,\r\n    align,\r\n    textWrap,\r\n    lineHeight = 4,\r\n    padding,\r\n  }) {\r\n    super({\r\n      text, draw, align, padding,\r\n    });\r\n\r\n    this.size = size;\r\n    this.rect = rect;\r\n    this.overflow = overflow;\r\n    this.textWrap = textWrap;\r\n    this.lineHeight = lineHeight;\r\n    this.used = BaseRuler.USED.DEFAULT_INI;\r\n\r\n    this.truncateText = '';\r\n    this.truncateTextWidth = 0;\r\n\r\n    this.overflowText = '';\r\n    this.overflowTextWidth = 0;\r\n\r\n    this.textWrapTextArray = [];\r\n    this.textWrapHOffset = 0;\r\n  }\r\n\r\n  equals(other) {\r\n    if (other === null) {\r\n      return false;\r\n    }\r\n    if (other.constructor !== HorizonRuler) {\r\n      return false;\r\n    }\r\n    if (other.text !== this.text) {\r\n      return false;\r\n    }\r\n    if (other.align !== this.align) {\r\n      return false;\r\n    }\r\n    if (other.size !== this.size) {\r\n      return false;\r\n    }\r\n    if (other.padding !== this.padding) {\r\n      return false;\r\n    }\r\n    if (other.textWrap !== this.textWrap) {\r\n      return false;\r\n    }\r\n    switch (this.textWrap) {\r\n      case BaseFont.TEXT_WRAP.TRUNCATE: {\r\n        const notWidth = other.rect.width !== this.rect.width;\r\n        const notHeight = other.rect.height !== this.rect.height;\r\n        if (notWidth || notHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n      case BaseFont.TEXT_WRAP.OVER_FLOW: {\r\n        const notWidth = other.overflow.width !== this.overflow.width;\r\n        const notHeight = other.overflow.height !== this.overflow.height;\r\n        if (notWidth || notHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n      case BaseFont.TEXT_WRAP.WORD_WRAP: {\r\n        if (other.lineHeight !== this.lineHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  truncateRuler() {\r\n    if (this.used) { return; }\r\n    const { rect } = this;\r\n    const { text, textWidth } = this.displayFont(rect);\r\n    this.truncateText = text;\r\n    this.truncateTextWidth = textWidth;\r\n    this.used = BaseRuler.USED.TRUNCATE;\r\n  }\r\n\r\n  overflowRuler() {\r\n    if (this.used) { return; }\r\n    const { overflow } = this;\r\n    const { text, textWidth } = this.displayFont(overflow);\r\n    this.overflowText = text;\r\n    this.overflowTextWidth = textWidth;\r\n    this.used = BaseRuler.USED.OVER_FLOW;\r\n  }\r\n\r\n  textWrapRuler() {\r\n    if (this.used) { return; }\r\n    const { size, rect, lineHeight } = this;\r\n    const { width } = rect;\r\n    const alignPadding = this.getAlignPadding();\r\n    const breakArray = this.textBreak();\r\n    const textArray = [];\r\n    const maxWidth = width - (alignPadding * 2);\r\n    const breakLen = breakArray.length;\r\n    let bi = 0;\r\n    let hOffset = 0;\r\n    while (bi < breakLen) {\r\n      if (bi > 0) {\r\n        hOffset += size + lineHeight;\r\n      }\r\n      const text = breakArray[bi];\r\n      const textLen = text.length;\r\n      let ii = 0;\r\n      const line = {\r\n        str: '',\r\n        len: 0,\r\n        start: 0,\r\n      };\r\n      while (ii < textLen) {\r\n        const str = line.str + text.charAt(ii);\r\n        const len = this.textWidth(str);\r\n        if (len > maxWidth) {\r\n          if (line.len === 0) {\r\n            textArray.push({\r\n              text: str,\r\n              len,\r\n              tx: 0,\r\n              ty: hOffset,\r\n            });\r\n            ii += 1;\r\n          } else {\r\n            textArray.push({\r\n              text: line.str,\r\n              len: line.len,\r\n              tx: 0,\r\n              ty: hOffset,\r\n            });\r\n          }\r\n          hOffset += size + lineHeight;\r\n          line.str = '';\r\n          line.len = 0;\r\n          line.start = ii;\r\n        } else {\r\n          line.str = str;\r\n          line.len = len;\r\n          ii += 1;\r\n        }\r\n      }\r\n      if (line.len > 0) {\r\n        textArray.push({\r\n          text: line.str,\r\n          len: line.len,\r\n          tx: 0,\r\n          ty: hOffset,\r\n        });\r\n      }\r\n      bi += 1;\r\n    }\r\n    if (hOffset > 0) {\r\n      hOffset -= lineHeight;\r\n    }\r\n    this.textWrapTextArray = textArray;\r\n    this.textWrapHOffset = hOffset;\r\n    this.used = BaseRuler.USED.TEXT_WRAP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  HorizonRuler,\r\n};\r\n","import { PlainRuler } from '../PlainRuler';\r\nimport { BaseFont } from '../BaseFont';\r\n\r\nclass HorizonVisual extends PlainRuler {\r\n\r\n  constructor({\r\n    draw, text, align, padding,\r\n  }) {\r\n    super({ draw, text });\r\n    this.align = align;\r\n    this.padding = padding;\r\n  }\r\n\r\n  displayFont(rect) {\r\n    const { align } = this;\r\n    const { width } = rect;\r\n    const origin = this.text;\r\n    const length = origin.length;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left: {\r\n        let text = '';\r\n        let textWidth = 0;\r\n        let start = 0;\r\n        while (start < length) {\r\n          const str = text + origin.charAt(start);\r\n          const len = this.textWidth(str);\r\n          if (len >= width) {\r\n            break;\r\n          }\r\n          text = str;\r\n          textWidth = len;\r\n          start += 1;\r\n        }\r\n        return {\r\n          text, textWidth,\r\n        };\r\n      }\r\n      case BaseFont.ALIGN.center: {\r\n        const textWidth = this.textWidth(origin);\r\n        const lOffset = width / 2 - textWidth / 2;\r\n        if (lOffset < 0) {\r\n          let start = 0;\r\n          let temp = '';\r\n          while (start < length) {\r\n            const str = temp + origin.charAt(start);\r\n            if (lOffset + this.textWidth(str) >= 0) {\r\n              break;\r\n            }\r\n            temp = str;\r\n            start += 1;\r\n          }\r\n          let over = start;\r\n          let text = '';\r\n          let textWidth = 0;\r\n          while (over < length) {\r\n            const str = text + origin.charAt(over);\r\n            const len = this.textWidth(str);\r\n            if (len >= width) {\r\n              break;\r\n            }\r\n            text = str;\r\n            textWidth = len;\r\n            over += 1;\r\n          }\r\n          return {\r\n            text, textWidth,\r\n          };\r\n        }\r\n        return {\r\n          text: origin, textWidth,\r\n        };\r\n      }\r\n      case BaseFont.ALIGN.right: {\r\n        let start = length - 1;\r\n        let text = '';\r\n        let textWidth = 0;\r\n        while (start >= 0) {\r\n          const str = origin.charAt(start) + text;\r\n          const len = this.textWidth(str);\r\n          if (len >= width) {\r\n            break;\r\n          }\r\n          text = str;\r\n          textWidth = len;\r\n          start -= 1;\r\n        }\r\n        return {\r\n          text, textWidth,\r\n        };\r\n      }\r\n    }\r\n    return {\r\n      text: '',\r\n      textWidth: 0,\r\n    };\r\n  }\r\n\r\n  getAlignPadding() {\r\n    if (this.align === BaseFont.ALIGN.center) {\r\n      return 0;\r\n    }\r\n    return this.padding;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  HorizonVisual,\r\n};\r\n","import { VerticalVisual } from './VerticalVisual';\r\nimport { BaseRuler } from '../BaseRuler';\r\nimport { BaseFont } from '../BaseFont';\r\n\r\nclass VerticalRuler extends VerticalVisual {\r\n\r\n  constructor({\r\n    draw,\r\n    text,\r\n    size,\r\n    rect,\r\n    verticalAlign,\r\n    textWrap,\r\n    spacing = 2,\r\n    lineHeight = 8,\r\n    padding,\r\n  }) {\r\n    super({\r\n      draw,\r\n      text,\r\n      verticalAlign,\r\n      padding,\r\n    });\r\n\r\n    this.size = size;\r\n    this.rect = rect;\r\n    this.textWrap = textWrap;\r\n    this.spacing = spacing;\r\n    this.lineHeight = lineHeight;\r\n    this.used = BaseRuler.USED.DEFAULT_INI;\r\n\r\n    this.truncateTextArray = [];\r\n    this.truncateMaxLen = 0;\r\n\r\n    this.textWrapTextArray = [];\r\n    this.textWrapMaxLen = 0;\r\n    this.textWrapWOffset = 0;\r\n  }\r\n\r\n  equals(other) {\r\n    if (other === null) {\r\n      return false;\r\n    }\r\n    if (other.constructor !== VerticalRuler) {\r\n      return false;\r\n    }\r\n    if (other.text !== this.text) {\r\n      return false;\r\n    }\r\n    if (other.size !== this.size) {\r\n      return false;\r\n    }\r\n    if (other.spacing !== this.spacing) {\r\n      return false;\r\n    }\r\n    if (other.padding !== this.padding) {\r\n      return false;\r\n    }\r\n    if (other.verticalAlign !== this.verticalAlign) {\r\n      return false;\r\n    }\r\n    if (other.textWrap !== this.textWrap) {\r\n      return false;\r\n    }\r\n    switch (this.textWrap) {\r\n      case BaseFont.TEXT_WRAP.TRUNCATE:\r\n      case BaseFont.TEXT_WRAP.OVER_FLOW: {\r\n        const notWidth = other.rect.width !== this.rect.width;\r\n        const notHeight = other.rect.height !== this.rect.height;\r\n        if (notWidth || notHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n      case BaseFont.TEXT_WRAP.WORD_WRAP: {\r\n        if (other.lineHeight !== this.lineHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  truncateRuler() {\r\n    if (this.used) {\r\n      return;\r\n    }\r\n    const { text, size, spacing } = this;\r\n    const textArray = [];\r\n    const textLen = text.length;\r\n    let maxLen = 0;\r\n    let hOffset = 0;\r\n    let ii = 0;\r\n    while (ii < textLen) {\r\n      const char = text.charAt(ii);\r\n      const width = this.textWidth(char);\r\n      textArray.push({\r\n        len: width,\r\n        text: char,\r\n        tx: size / 2 - width / 2,\r\n        ty: hOffset,\r\n      });\r\n      hOffset += size + spacing;\r\n      ii += 1;\r\n    }\r\n    if (hOffset > 0) {\r\n      hOffset -= spacing;\r\n    }\r\n    if (hOffset > maxLen) {\r\n      maxLen = hOffset;\r\n    }\r\n    this.truncateTextArray = textArray;\r\n    this.truncateMaxLen = maxLen;\r\n    this.used = BaseRuler.USED.TRUNCATE;\r\n  }\r\n\r\n  overflowRuler() {\r\n    this.truncateRuler();\r\n  }\r\n\r\n  textWrapRuler() {\r\n    const { rect, size, spacing, lineHeight } = this;\r\n    const { height } = rect;\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const breakArray = this.textBreak();\r\n    const textArray = [];\r\n    const maxHeight = height - (verticalAlignPadding * 2);\r\n    const breakLen = breakArray.length;\r\n    let maxLen = 0;\r\n    let wOffset = 0;\r\n    let bi = 0;\r\n    while (bi < breakLen) {\r\n      const text = breakArray[bi];\r\n      const textLen = text.length;\r\n      let hOffset = 0;\r\n      let ii = 0;\r\n      while (ii < textLen) {\r\n        const char = text.charAt(ii);\r\n        const width = this.textWidth(char);\r\n        const item = {\r\n          len: width,\r\n          text: char,\r\n          tx: wOffset + (size / 2 - width / 2),\r\n          ty: hOffset,\r\n        };\r\n        textArray.push(item);\r\n        if (hOffset + size > maxHeight) {\r\n          if (hOffset > maxLen) {\r\n            maxLen = hOffset - spacing;\r\n          }\r\n          wOffset += size + lineHeight;\r\n          hOffset = 0;\r\n          item.tx = wOffset + (size / 2 - width / 2);\r\n          item.ty = hOffset;\r\n        }\r\n        hOffset += size + spacing;\r\n        ii += 1;\r\n      }\r\n      if (hOffset > maxLen) {\r\n        maxLen = hOffset - spacing;\r\n      }\r\n      wOffset += size;\r\n      bi += 1;\r\n    }\r\n    this.textWrapTextArray = textArray;\r\n    this.textWrapMaxLen = maxLen;\r\n    this.textWrapWOffset = wOffset;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  VerticalRuler,\r\n};\r\n","import { PlainRuler } from '../PlainRuler';\r\nimport { BaseFont } from '../BaseFont';\r\n\r\nclass VerticalVisual extends PlainRuler {\r\n\r\n  constructor({\r\n    draw, text, verticalAlign, padding,\r\n  }) {\r\n    super({ draw, text });\r\n    this.verticalAlign = verticalAlign;\r\n    this.padding = padding;\r\n  }\r\n\r\n  getVerticalAlignPadding() {\r\n    if (this.verticalAlign === BaseFont.VERTICAL_ALIGN.center) {\r\n      return 0;\r\n    }\r\n    return this.padding;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  VerticalVisual,\r\n};\r\n","import { BaseFont } from '../BaseFont';\r\nimport { AngleBoxDraw } from '../draw/AngleBoxDraw';\r\nimport { AngleBarDraw } from '../draw/AngleBarDraw';\r\nimport { HorizonDraw } from '../draw/HorizonDraw';\r\nimport { VerticalDraw } from '../draw/VerticalDraw';\r\nimport { AngleBoxRuler } from '../ruler/AngleBoxRuler';\r\nimport { AngleBarRuler } from '../ruler/AngleBarRuler';\r\nimport { HorizonRuler } from '../ruler/HorizonRuler';\r\nimport { VerticalRuler } from '../ruler/VerticalRuler';\r\n\r\nclass DrawFontBuilder {\r\n\r\n  constructor({\r\n    draw, text, rect, overflow, attr,\r\n  }) {\r\n    this.attr = Object.assign({}, {\r\n      verticalAlign: BaseFont.VERTICAL_ALIGN.center,\r\n      direction: BaseFont.TEXT_DIRECTION.HORIZONTAL,\r\n      name: 'Arial',\r\n      size: 14,\r\n      color: '#000000',\r\n      underline: false,\r\n      strikethrough: false,\r\n      bold: false,\r\n      italic: false,\r\n      textWrap: BaseFont.TEXT_WRAP.TRUNCATE,\r\n      align: BaseFont.ALIGN.left,\r\n      angle: 0,\r\n      padding: 8,\r\n    }, attr);\r\n    this.draw = draw;\r\n    this.text = text;\r\n    this.rect = rect;\r\n    this.overflow = overflow;\r\n  }\r\n\r\n  setPadding(padding) {\r\n    this.attr.padding = padding;\r\n  }\r\n\r\n  setSize(size) {\r\n    this.attr.size = size;\r\n  }\r\n\r\n  setDirection(direction) {\r\n    this.attr.direction = direction;\r\n  }\r\n\r\n  buildFont() {\r\n    const { text, draw, rect, attr, overflow } = this;\r\n    switch (attr.direction) {\r\n      case BaseFont.TEXT_DIRECTION.ANGLE:\r\n        return new AngleBoxDraw({\r\n          draw, text, rect, overflow, attr,\r\n        });\r\n      case BaseFont.TEXT_DIRECTION.ANGLE_BAR:\r\n        return new AngleBarDraw({\r\n          draw, text, rect, overflow, attr,\r\n        });\r\n      case BaseFont.TEXT_DIRECTION.HORIZONTAL:\r\n        return new HorizonDraw({\r\n          draw, text, rect, overflow, attr,\r\n        });\r\n      case BaseFont.TEXT_DIRECTION.VERTICAL:\r\n        return new VerticalDraw({\r\n          draw, text, rect, overflow, attr,\r\n        });\r\n    }\r\n    return null;\r\n  }\r\n\r\n  buildRuler() {\r\n    const { attr } = this;\r\n    const { text, draw, rect, overflow } = this;\r\n    const { size, align, angle, padding, textWrap } = attr;\r\n    switch (attr.direction) {\r\n      case BaseFont.TEXT_DIRECTION.ANGLE:\r\n        return new AngleBoxRuler({\r\n          draw, text, size, angle, rect, overflow, align, textWrap, padding\r\n        });\r\n      case BaseFont.TEXT_DIRECTION.ANGLE_BAR:\r\n        return new AngleBarRuler({\r\n          draw, text, size, angle, rect, overflow, align, textWrap, padding\r\n        });\r\n      case BaseFont.TEXT_DIRECTION.HORIZONTAL:\r\n        return new HorizonRuler({\r\n          draw, text, size, rect, overflow, align, textWrap, padding\r\n        });\r\n      case BaseFont.TEXT_DIRECTION.VERTICAL:\r\n        return new VerticalRuler({\r\n          draw, text, size, rect, overflow, align, textWrap, padding\r\n        });\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  DrawFontBuilder,\r\n};\r\n","import { ScaleAdapter } from './Scale';\r\nimport { XDraw } from '../../../canvas/XDraw';\r\nimport { BaseFont } from '../../../canvas/font/BaseFont';\r\nimport XTableFormat from '../XTableFormat';\r\nimport { DrawFontBuilder } from '../../../canvas/font/build/DrawFontBuilder';\r\n\r\nclass TextBuilder {\r\n\r\n  constructor({\r\n    scaleAdapter, table,\r\n  }) {\r\n    this.scaleAdapter = scaleAdapter;\r\n    this.rect = null;\r\n    this.draw = null;\r\n    this.cell = null;\r\n    this.row = -1;\r\n    this.col = -1;\r\n    this.table = table;\r\n    this.overflow = null;\r\n  }\r\n\r\n  setRect(rect) {\r\n    this.rect = rect;\r\n  }\r\n\r\n  setDraw(draw) {\r\n    this.draw = draw;\r\n  }\r\n\r\n  setCell(cell) {\r\n    this.cell = cell;\r\n  }\r\n\r\n  setCol(col) {\r\n    this.col = col;\r\n  }\r\n\r\n  setRow(row) {\r\n    this.row = row;\r\n  }\r\n\r\n  setOverFlow(overflow) {\r\n    this.overflow = overflow;\r\n  }\r\n\r\n  build() {\r\n    const { rect, overflow, row, col, cell, draw, scaleAdapter, table } = this;\r\n    const { format, text, fontAttr, ruler } = cell;\r\n    const size = XDraw.srcTransformStylePx(scaleAdapter.goto(fontAttr.size));\r\n    const padding = XDraw.srcTransformStylePx(scaleAdapter.goto(fontAttr.padding));\r\n    const builder = new DrawFontBuilder({\r\n      text: XTableFormat(format, text), draw, overflow, rect, attr: fontAttr,\r\n    });\r\n    builder.setSize(size);\r\n    builder.setPadding(padding);\r\n    if (table.isAngleBarCell(row, col)) {\r\n      builder.setDirection(BaseFont.TEXT_DIRECTION.ANGLE_BAR);\r\n    }\r\n    const buildRuler = builder.buildRuler();\r\n    const buildFont = builder.buildFont();\r\n    buildFont.setRuler(buildRuler.equals(ruler) ? ruler : buildRuler);\r\n    cell.setRuler(buildFont.ruler);\r\n    return buildFont;\r\n  }\r\n\r\n}\r\n\r\nclass Text {\r\n\r\n  constructor({\r\n    scaleAdapter = new ScaleAdapter(),\r\n    table,\r\n  }) {\r\n    this.scaleAdapter = scaleAdapter;\r\n    this.table = table;\r\n  }\r\n\r\n  getBuilder() {\r\n    const { scaleAdapter, table } = this;\r\n    return new TextBuilder({\r\n      scaleAdapter, table,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport { Text };\r\n","import { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { Rect } from '../../../canvas/Rect';\r\nimport { RTCosKit, RTSinKit } from '../../../canvas/RTFunction';\r\nimport { BaseFont } from '../../../canvas/font/BaseFont';\r\n\r\nclass BaseCellsHelper {\r\n\r\n  getXTableAreaView() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getRows() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getStyleTable() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getCols() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getMerges() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getCells() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getXIteratorBuilder() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getAngleBarWrapWidth(ri, ci, cell, rect) {\r\n    const xTableAreaView = this.getXTableAreaView();\r\n    const merges = this.getMerges();\r\n    const cols = this.getCols();\r\n    const merge = merges.getFirstIncludes(ri, ci);\r\n    if (merge) {\r\n      return merge;\r\n    }\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    const { eci } = scrollView;\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    let width = 0;\r\n    let offset = 0;\r\n    if (angle > 0) {\r\n      width = cols.sectionSumWidth(ci, eci);\r\n    } else {\r\n      width = cols.sectionSumWidth(0, ci - 1) + rect.width;\r\n      offset = -(width - rect.width);\r\n    }\r\n    return { width, offset };\r\n  }\r\n\r\n  getHorizontalMaxWidth(ri, ci, cell) {\r\n    const merges = this.getMerges();\r\n    const cols = this.getCols();\r\n    const cells = this.getCells();\r\n    const { fontAttr } = cell;\r\n    const { align } = fontAttr;\r\n    const xIteratorBuilder = this.getXIteratorBuilder();\r\n    let width = 0;\r\n    let offset = 0;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left: {\r\n        // 计算当前单元格右边\r\n        // 空白的单元格的总宽度\r\n        xIteratorBuilder.getColIterator()\r\n          .setBegin(ci)\r\n          .setEnd(cols.len)\r\n          .setLoop((i) => {\r\n            const merge = merges.getFirstIncludes(ri, i);\r\n            const cell = cells.getCell(ri, i);\r\n            const blank = PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text);\r\n            if (i === ci) {\r\n              width += cols.getWidth(i);\r\n              return true;\r\n            }\r\n            if (blank && PlainUtils.isUnDef(merge)) {\r\n              width += cols.getWidth(i);\r\n              return true;\r\n            }\r\n            return false;\r\n          })\r\n          .execute();\r\n        break;\r\n      }\r\n      case BaseFont.ALIGN.center: {\r\n        let rightWidth = 0;\r\n        let leftWidth = 0;\r\n        // 右边\r\n        xIteratorBuilder.getColIterator()\r\n          .setBegin(ci + 1)\r\n          .setEnd(cols.len)\r\n          .setLoop((i) => {\r\n            const merge = merges.getFirstIncludes(ri, i);\r\n            const cell = cells.getCell(ri, i);\r\n            const blank = PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text);\r\n            if (blank && PlainUtils.isUnDef(merge)) {\r\n              rightWidth += cols.getWidth(i);\r\n              return true;\r\n            }\r\n            return false;\r\n          })\r\n          .execute();\r\n        // 左边\r\n        xIteratorBuilder.getColIterator()\r\n          .setBegin(ci - 1)\r\n          .setEnd(0)\r\n          .setLoop((i) => {\r\n            const merge = merges.getFirstIncludes(ri, i);\r\n            const cell = cells.getCell(ri, i);\r\n            const blank = PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text);\r\n            if (blank && PlainUtils.isUnDef(merge)) {\r\n              const tmp = cols.getWidth(i);\r\n              leftWidth += tmp;\r\n              offset -= tmp;\r\n              return true;\r\n            }\r\n            return false;\r\n          })\r\n          .execute();\r\n        // 统计\r\n        width = cols.getWidth(ci) + leftWidth + rightWidth;\r\n        break;\r\n      }\r\n      case BaseFont.ALIGN.right: {\r\n        // 计算当前单元格左边\r\n        // 空白的单元格的总宽度\r\n        xIteratorBuilder.getColIterator()\r\n          .setBegin(ci)\r\n          .setEnd(0)\r\n          .setLoop((i) => {\r\n            const merge = merges.getFirstIncludes(ri, i);\r\n            const cell = cells.getCell(ri, i);\r\n            const blank = PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text);\r\n            if (i === ci) {\r\n              width += cols.getWidth(i);\r\n              return true;\r\n            }\r\n            if (blank && PlainUtils.isUnDef(merge)) {\r\n              const tmp = cols.getWidth(i);\r\n              width += tmp;\r\n              offset -= tmp;\r\n              return true;\r\n            }\r\n            return false;\r\n          })\r\n          .execute();\r\n        break;\r\n      }\r\n    }\r\n    return { width, offset };\r\n  }\r\n\r\n  getAngleMaxWidth(ri, ci, cell, rect) {\r\n    const merges = this.getMerges();\r\n    const cols = this.getCols();\r\n    const rows = this.getRows();\r\n    const merge = merges.getFirstIncludes(ri, ci);\r\n    if (merge) {\r\n      return merge;\r\n    }\r\n    const xIteratorBuilder = this.getXIteratorBuilder();\r\n    const { fontAttr } = cell;\r\n    const { angle, align, padding } = fontAttr;\r\n    const rowHeight = rows.getHeight(ri);\r\n    const tilt = RTSinKit.tilt({\r\n      inverse: rowHeight,\r\n      angle,\r\n    });\r\n    let haveWidth = RTCosKit.nearby({ tilt, angle });\r\n    let width = 0;\r\n    let offset = 0;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left: {\r\n        haveWidth += padding;\r\n        xIteratorBuilder.getColIterator()\r\n          .setBegin(ci)\r\n          .setEnd(cols.len)\r\n          .setLoop((i) => {\r\n            const colWidth = cols.getWidth(i);\r\n            width += colWidth;\r\n            return haveWidth > width;\r\n          })\r\n          .execute();\r\n        break;\r\n      }\r\n      case BaseFont.ALIGN.center: {\r\n        const target = haveWidth - rect.width;\r\n        const half = target / 2;\r\n        let leftWidth = 0;\r\n        xIteratorBuilder.getColIterator()\r\n          .setBegin(ci)\r\n          .setEnd(cols.len)\r\n          .setLoop((i) => {\r\n            const colWidth = cols.getWidth(i);\r\n            leftWidth += colWidth;\r\n            return half + rect.width > leftWidth;\r\n          })\r\n          .execute();\r\n        let rightWidth = 0;\r\n        xIteratorBuilder.getColIterator()\r\n          .setBegin(ci)\r\n          .setEnd(0)\r\n          .setLoop((i) => {\r\n            const colWidth = cols.getWidth(i);\r\n            rightWidth += colWidth;\r\n            return half + rect.width > rightWidth;\r\n          })\r\n          .execute();\r\n        width = leftWidth + rightWidth - rect.width;\r\n        offset = -(width / 2 - rect.width / 2);\r\n        break;\r\n      }\r\n      case BaseFont.ALIGN.right: {\r\n        haveWidth += padding;\r\n        xIteratorBuilder.getColIterator()\r\n          .setBegin(ci)\r\n          .setEnd(0)\r\n          .setLoop((i) => {\r\n            const colWidth = cols.getWidth(i);\r\n            width += colWidth;\r\n            return haveWidth > width;\r\n          })\r\n          .execute();\r\n        offset = -(width - rect.width);\r\n        break;\r\n      }\r\n    }\r\n    return {\r\n      width, offset,\r\n    };\r\n  }\r\n\r\n  getAngleBarMaxWidth(ri, ci, cell, rect) {\r\n    const merges = this.getMerges();\r\n    const rows = this.getRows();\r\n    const merge = merges.getFirstIncludes(ri, ci);\r\n    if (merge) {\r\n      return merge;\r\n    }\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    const rowHeight = rows.getHeight(ri);\r\n    const tilt = RTSinKit.tilt({\r\n      inverse: rowHeight,\r\n      angle,\r\n    });\r\n    let width = RTCosKit.nearby({ tilt, angle });\r\n    let offset = 0;\r\n    if (angle < 0) {\r\n      width = RTCosKit.nearby({ tilt, angle }) + rect.width;\r\n      offset = -width;\r\n    }\r\n    return { width, offset };\r\n  }\r\n\r\n  getCellOverFlow(ri, ci, rect, cell) {\r\n    const styleTable = this.getStyleTable();\r\n    const { x, y, height, width } = rect;\r\n    const { fontAttr, contentWidth } = cell;\r\n    const { direction } = fontAttr;\r\n    const blank = PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text);\r\n    switch (direction) {\r\n      case BaseFont.TEXT_DIRECTION.HORIZONTAL: {\r\n        if (blank === false) {\r\n          const { textWrap } = fontAttr;\r\n          if (textWrap === BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n            if (contentWidth === 0 || contentWidth > width) {\r\n              const max = this.getHorizontalMaxWidth(ri, ci, cell);\r\n              return new Rect({\r\n                x: x + max.offset, y, width: max.width, height,\r\n              });\r\n            }\r\n          }\r\n        }\r\n        return rect;\r\n      }\r\n      case BaseFont.TEXT_DIRECTION.ANGLE: {\r\n        if (blank === false) {\r\n          const { textWrap } = fontAttr;\r\n          if (styleTable.isAngleBarCell(ri, ci)) {\r\n            switch (textWrap) {\r\n              case BaseFont.TEXT_WRAP.OVER_FLOW:\r\n              case BaseFont.TEXT_WRAP.TRUNCATE: {\r\n                const max = this.getAngleBarMaxWidth(ri, ci, cell, rect);\r\n                return new Rect({\r\n                  x: x + max.offset, y, width: max.width, height,\r\n                });\r\n              }\r\n              case BaseFont.TEXT_WRAP.WORD_WRAP: {\r\n                const max = this.getAngleBarWrapWidth(ri, ci, cell, rect);\r\n                return new Rect({\r\n                  x: x + max.offset, y, width: max.width, height,\r\n                });\r\n              }\r\n            }\r\n          } else {\r\n            switch (textWrap) {\r\n              case BaseFont.TEXT_WRAP.OVER_FLOW:\r\n              case BaseFont.TEXT_WRAP.TRUNCATE: {\r\n                const max = this.getAngleMaxWidth(ri, ci, cell, rect);\r\n                return new Rect({\r\n                  x: x + max.offset, y, width: max.width, height,\r\n                });\r\n              }\r\n            }\r\n          }\r\n        }\r\n        return rect;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  BaseCellsHelper,\r\n};\r\n","import { BaseCellsHelper } from './BaseCellsHelper';\r\nimport { Rect } from '../../../canvas/Rect';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\nconst STYLE_BREAK_LOOP = {\r\n  CONTINUE: 3,\r\n  ROW: 1,\r\n  RETURN: 2,\r\n};\r\n\r\nclass StyleCellsHelper extends BaseCellsHelper {\r\n\r\n  constructor(table) {\r\n    super();\r\n    this.table = table;\r\n  }\r\n\r\n  getXTableAreaView() {\r\n    return this.table.xTableAreaView;\r\n  }\r\n\r\n  getRows() {\r\n    return this.table.rows;\r\n  }\r\n\r\n  getStyleTable() {\r\n    return this.table;\r\n  }\r\n\r\n  getCols() {\r\n    return this.table.cols;\r\n  }\r\n\r\n  getMerges() {\r\n    return this.table.merges;\r\n  }\r\n\r\n  getCells() {\r\n    return this.table.cells;\r\n  }\r\n\r\n  getXIteratorBuilder() {\r\n    return this.table.xIteratorBuilder;\r\n  }\r\n\r\n  getCellByViewRange({\r\n    reverseRows = false,\r\n    reverseCols = false,\r\n    startX = 0,\r\n    startY = 0,\r\n    view,\r\n    newRow = () => {},\r\n    newCol = () => {},\r\n    cellsINCallback = () => {},\r\n    mergeCallback = () => {},\r\n    loopINCallback = () => {},\r\n  }) {\r\n    const { table } = this;\r\n    const { xIteratorBuilder } = table;\r\n    const rows = this.getRows();\r\n    const cols = this.getCols();\r\n    const cells = this.getCells();\r\n    const merges = this.getMerges();\r\n    const { sri, eri, sci, eci } = view;\r\n    const filter = [];\r\n    let y = startY;\r\n    if (reverseRows && reverseCols) {\r\n      let y = startY;\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(eri)\r\n        .setEnd(sri)\r\n        .setLoop((row) => {\r\n          const height = rows.getHeight(row);\r\n          let result = null;\r\n          let x = startX;\r\n          y -= height;\r\n          newRow(row);\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(eci)\r\n            .setEnd(sci)\r\n            .setLoop((col) => {\r\n              const merge = merges.getFirstIncludes(row, col);\r\n              const width = cols.getWidth(col);\r\n              x -= width;\r\n              const rect = new Rect({ x, y, width, height });\r\n              newCol(col);\r\n              loopINCallback(row, col, rect);\r\n              if (merge) {\r\n                const find = filter.find(i => i === merge);\r\n                if (PlainUtils.isUnDef(find)) {\r\n                  filter.push(merge);\r\n                  const mergeInfo = this.mergeInfo({\r\n                    view, merge,\r\n                  });\r\n                  const { rect, cell } = mergeInfo;\r\n                  result = mergeCallback(row, col, cell, rect, merge);\r\n                }\r\n              } else {\r\n                const cell = cells.getCell(row, col);\r\n                if (cell) {\r\n                  result = cellsINCallback(row, col, cell, rect);\r\n                }\r\n              }\r\n              switch (result) {\r\n                case STYLE_BREAK_LOOP.RETURN:\r\n                case STYLE_BREAK_LOOP.ROW:\r\n                  return false;\r\n                default: return true;\r\n              }\r\n            })\r\n            .execute();\r\n          switch (result) {\r\n            case STYLE_BREAK_LOOP.RETURN:\r\n              return false;\r\n            default: return true;\r\n          }\r\n        })\r\n        .execute();\r\n    } else if (reverseRows) {\r\n      let y = startY;\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(eri)\r\n        .setEnd(sri)\r\n        .setLoop((row) => {\r\n          const height = rows.getHeight(row);\r\n          let result = null;\r\n          let x = startX;\r\n          newRow(row);\r\n          y -= height;\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(sci)\r\n            .setEnd(eci)\r\n            .setLoop((col) => {\r\n              const merge = merges.getFirstIncludes(row, col);\r\n              const width = cols.getWidth(col);\r\n              const rect = new Rect({ x, y, width, height });\r\n              newCol(col);\r\n              loopINCallback(row, col, rect);\r\n              if (merge) {\r\n                const find = filter.find(i => i === merge);\r\n                if (PlainUtils.isUnDef(find)) {\r\n                  filter.push(merge);\r\n                  const mergeInfo = this.mergeInfo({\r\n                    view, merge,\r\n                  });\r\n                  const { rect, cell } = mergeInfo;\r\n                  result = mergeCallback(row, col, cell, rect, merge);\r\n                }\r\n              } else {\r\n                const cell = cells.getCell(row, col);\r\n                if (cell) {\r\n                  result = cellsINCallback(row, col, cell, rect);\r\n                }\r\n              }\r\n              x += width;\r\n              switch (result) {\r\n                case STYLE_BREAK_LOOP.RETURN:\r\n                case STYLE_BREAK_LOOP.ROW:\r\n                  return false;\r\n                default: return true;\r\n              }\r\n            })\r\n            .execute();\r\n          switch (result) {\r\n            case STYLE_BREAK_LOOP.RETURN:\r\n              return false;\r\n            default: return true;\r\n          }\r\n        })\r\n        .execute();\r\n    } else if (reverseCols) {\r\n      let y = startY;\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(sri)\r\n        .setEnd(eri)\r\n        .setLoop((row) => {\r\n          const height = rows.getHeight(row);\r\n          let result = null;\r\n          let x = startX;\r\n          newRow(row);\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(eci)\r\n            .setEnd(sci)\r\n            .setLoop((col) => {\r\n              const merge = merges.getFirstIncludes(row, col);\r\n              const width = cols.getWidth(col);\r\n              x -= width;\r\n              const rect = new Rect({ x, y, width, height });\r\n              newCol(col);\r\n              loopINCallback(row, col, rect);\r\n              if (merge) {\r\n                const find = filter.find(i => i === merge);\r\n                if (PlainUtils.isUnDef(find)) {\r\n                  filter.push(merge);\r\n                  const mergeInfo = this.mergeInfo({\r\n                    view, merge,\r\n                  });\r\n                  const { rect, cell } = mergeInfo;\r\n                  result = mergeCallback(row, col, cell, rect, merge);\r\n                }\r\n              } else {\r\n                const cell = cells.getCell(row, col);\r\n                if (cell) {\r\n                  result = cellsINCallback(row, col, cell, rect);\r\n                }\r\n              }\r\n              switch (result) {\r\n                case STYLE_BREAK_LOOP.RETURN:\r\n                case STYLE_BREAK_LOOP.ROW:\r\n                  return false;\r\n                default: return true;\r\n              }\r\n            })\r\n            .execute();\r\n          y += height;\r\n          switch (result) {\r\n            case STYLE_BREAK_LOOP.RETURN:\r\n              return false;\r\n            default: return true;\r\n          }\r\n        })\r\n        .execute();\r\n    } else {\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(sri)\r\n        .setEnd(eri)\r\n        .setLoop((row) => {\r\n          const height = rows.getHeight(row);\r\n          let result = null;\r\n          let x = startX;\r\n          newRow(row);\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(sci)\r\n            .setEnd(eci)\r\n            .setLoop((col) => {\r\n              const merge = merges.getFirstIncludes(row, col);\r\n              const width = cols.getWidth(col);\r\n              const rect = new Rect({ x, y, width, height });\r\n              newCol(col);\r\n              loopINCallback(row, col, rect);\r\n              if (merge) {\r\n                const find = filter.find(i => i === merge);\r\n                if (PlainUtils.isUnDef(find)) {\r\n                  filter.push(merge);\r\n                  const mergeInfo = this.mergeInfo({\r\n                    view, merge,\r\n                  });\r\n                  const { rect, cell } = mergeInfo;\r\n                  result = mergeCallback(row, col, cell, rect, merge);\r\n                }\r\n              } else {\r\n                const cell = cells.getCell(row, col);\r\n                if (cell) {\r\n                  result = cellsINCallback(row, col, cell, rect);\r\n                }\r\n              }\r\n              x += width;\r\n              switch (result) {\r\n                case STYLE_BREAK_LOOP.RETURN:\r\n                case STYLE_BREAK_LOOP.ROW:\r\n                  return false;\r\n                default: return true;\r\n              }\r\n            })\r\n            .execute();\r\n          y += height;\r\n          switch (result) {\r\n            case STYLE_BREAK_LOOP.RETURN:\r\n              return false;\r\n            default: return true;\r\n          }\r\n        })\r\n        .execute();\r\n    }\r\n  }\r\n\r\n  mergeInfo({\r\n    view, merge,\r\n  }) {\r\n    const rows = this.getRows();\r\n    const cols = this.getCols();\r\n    const cells = this.getCells();\r\n    // 计算坐标\r\n    const minSri = Math.min(view.sri, merge.sri);\r\n    const minSci = Math.min(view.sci, merge.sci);\r\n    let maxSri = Math.max(view.sri, merge.sri);\r\n    let maxSci = Math.max(view.sci, merge.sci);\r\n    maxSri -= 1;\r\n    maxSci -= 1;\r\n    let x = cols.sectionSumWidth(minSci, maxSci);\r\n    let y = rows.sectionSumHeight(minSri, maxSri);\r\n    x = view.sci > merge.sci ? x * -1 : x;\r\n    y = view.sri > merge.sri ? y * -1 : y;\r\n    // 计算尺寸\r\n    const height = rows.sectionSumHeight(merge.sri, merge.eri);\r\n    const width = cols.sectionSumWidth(merge.sci, merge.eci);\r\n    const cell = cells.getCellOrNew(merge.sri, merge.sci);\r\n    const rect = new Rect({ x, y, width, height });\r\n    return { rect, cell };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  StyleCellsHelper, STYLE_BREAK_LOOP,\r\n};\r\n","import { BaseCellsHelper } from './BaseCellsHelper';\r\nimport { Rect } from '../../../canvas/Rect';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { RectRange } from '../tablebase/RectRange';\r\n\r\nconst TEXT_BREAK_LOOP = {\r\n  CONTINUE: 3,\r\n  ROW: 1,\r\n  RETURN: 2,\r\n};\r\n\r\nclass TextCellsHelper extends BaseCellsHelper {\r\n\r\n  constructor(table) {\r\n    super();\r\n    this.table = table;\r\n  }\r\n\r\n  getXTableAreaView() {\r\n    return this.table.xTableAreaView;\r\n  }\r\n\r\n  getRows() {\r\n    return this.table.rows;\r\n  }\r\n\r\n  getStyleTable() {\r\n    return this.table;\r\n  }\r\n\r\n  getCols() {\r\n    return this.table.cols;\r\n  }\r\n\r\n  getMerges() {\r\n    return this.table.merges;\r\n  }\r\n\r\n  getCells() {\r\n    return this.table.cells;\r\n  }\r\n\r\n  getXIteratorBuilder() {\r\n    return this.table.xIteratorBuilder;\r\n  }\r\n\r\n  getCellByViewRange({\r\n    reverseRows = false,\r\n    reverseCols = false,\r\n    startX = 0,\r\n    startY = 0,\r\n    newRow = () => {},\r\n    newCol = () => {},\r\n    view = new RectRange(0, 0, 0, 0, 0, 0),\r\n    cellsINCallback = () => {},\r\n    mergeCallback = () => {},\r\n  }) {\r\n    const rows = this.getRows();\r\n    const cols = this.getCols();\r\n    const cells = this.getCells();\r\n    const merges = this.getMerges();\r\n    const { table } = this;\r\n    const { xIteratorBuilder } = table;\r\n    const { sri, eri, sci, eci } = view;\r\n    const filter = [];\r\n    if (reverseRows && reverseCols) {\r\n      let y = startY;\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(eri)\r\n        .setEnd(sri)\r\n        .setLoop((row) => {\r\n          const height = rows.getHeight(row);\r\n          let result = null;\r\n          let x = startX;\r\n          y -= height;\r\n          newRow(row);\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(eci)\r\n            .setEnd(sci)\r\n            .setLoop((col) => {\r\n              const merge = merges.getFirstIncludes(row, col);\r\n              const width = cols.getWidth(col);\r\n              newCol(col);\r\n              x -= width;\r\n              if (merge) {\r\n                const find = filter.find(i => i === merge);\r\n                if (PlainUtils.isUnDef(find)) {\r\n                  filter.push(merge);\r\n                  const mergeInfo = this.mergeInfo({\r\n                    view, merge,\r\n                  });\r\n                  const { rect, cell } = mergeInfo;\r\n                  result = mergeCallback(row, col, cell, rect, merge);\r\n                }\r\n              } else {\r\n                const cell = cells.getCell(row, col);\r\n                if (cell) {\r\n                  const cellsINInfo = this.cellsINInfo({\r\n                    x, y, width, height, row, col, cell,\r\n                  });\r\n                  const { rect, overflow } = cellsINInfo;\r\n                  result = cellsINCallback(row, col, cell, rect, overflow);\r\n                }\r\n              }\r\n              switch (result) {\r\n                case TEXT_BREAK_LOOP.RETURN:\r\n                case TEXT_BREAK_LOOP.ROW:\r\n                  return false;\r\n                default: return true;\r\n              }\r\n            })\r\n            .execute();\r\n          switch (result) {\r\n            case TEXT_BREAK_LOOP.RETURN:\r\n              return false;\r\n            default: return true;\r\n          }\r\n        })\r\n        .execute();\r\n    } else if (reverseRows) {\r\n      let y = startY;\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(eri)\r\n        .setEnd(sri)\r\n        .setLoop((row) => {\r\n          const height = rows.getHeight(row);\r\n          let result = null;\r\n          let x = startX;\r\n          newRow(row);\r\n          y -= height;\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(sci)\r\n            .setEnd(eci)\r\n            .setLoop((col) => {\r\n              const merge = merges.getFirstIncludes(row, col);\r\n              const width = cols.getWidth(col);\r\n              newCol(col);\r\n              if (merge) {\r\n                const find = filter.find(i => i === merge);\r\n                if (PlainUtils.isUnDef(find)) {\r\n                  filter.push(merge);\r\n                  const mergeInfo = this.mergeInfo({\r\n                    view, merge,\r\n                  });\r\n                  const { rect, cell } = mergeInfo;\r\n                  result = mergeCallback(row, col, cell, rect, merge);\r\n                }\r\n              } else {\r\n                const cell = cells.getCell(row, col);\r\n                if (cell) {\r\n                  const cellsINInfo = this.cellsINInfo({\r\n                    x, y, width, height, row, col, cell,\r\n                  });\r\n                  const { rect, overflow } = cellsINInfo;\r\n                  result = cellsINCallback(row, col, cell, rect, overflow);\r\n                }\r\n              }\r\n              x += width;\r\n              switch (result) {\r\n                case TEXT_BREAK_LOOP.RETURN:\r\n                case TEXT_BREAK_LOOP.ROW:\r\n                  return false;\r\n                default: return true;\r\n              }\r\n            })\r\n            .execute();\r\n          switch (result) {\r\n            case TEXT_BREAK_LOOP.RETURN:\r\n              return false;\r\n            default: return true;\r\n          }\r\n        })\r\n        .execute();\r\n    } else if (reverseCols) {\r\n      let y = startY;\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(sri)\r\n        .setEnd(eri)\r\n        .setLoop((row) => {\r\n          const height = rows.getHeight(row);\r\n          let result = null;\r\n          let x = startX;\r\n          newRow(row);\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(eci)\r\n            .setEnd(sci)\r\n            .setLoop((col) => {\r\n              const merge = merges.getFirstIncludes(row, col);\r\n              const width = cols.getWidth(col);\r\n              newCol(col);\r\n              x -= width;\r\n              if (merge) {\r\n                const find = filter.find(i => i === merge);\r\n                if (PlainUtils.isUnDef(find)) {\r\n                  filter.push(merge);\r\n                  const mergeInfo = this.mergeInfo({\r\n                    view, merge,\r\n                  });\r\n                  const { rect, cell } = mergeInfo;\r\n                  result = mergeCallback(row, col, cell, rect, merge);\r\n                }\r\n              } else {\r\n                const cell = cells.getCell(row, col);\r\n                if (cell) {\r\n                  const cellsINInfo = this.cellsINInfo({\r\n                    x, y, width, height, row, col, cell,\r\n                  });\r\n                  const { rect, overflow } = cellsINInfo;\r\n                  result = cellsINCallback(row, col, cell, rect, overflow);\r\n                }\r\n              }\r\n              switch (result) {\r\n                case TEXT_BREAK_LOOP.RETURN:\r\n                case TEXT_BREAK_LOOP.ROW:\r\n                  return false;\r\n                default: return true;\r\n              }\r\n            })\r\n            .execute();\r\n          y += height;\r\n          switch (result) {\r\n            case TEXT_BREAK_LOOP.RETURN:\r\n              return false;\r\n            default: return true;\r\n          }\r\n        })\r\n        .execute();\r\n    } else {\r\n      let y = startY;\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(sri)\r\n        .setEnd(eri)\r\n        .setLoop((row) => {\r\n          const height = rows.getHeight(row);\r\n          let result = null;\r\n          let x = startX;\r\n          newRow(row);\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(sci)\r\n            .setEnd(eci)\r\n            .setLoop((col) => {\r\n              const merge = merges.getFirstIncludes(row, col);\r\n              const width = cols.getWidth(col);\r\n              newCol(col);\r\n              if (merge) {\r\n                const find = filter.find(i => i === merge);\r\n                if (PlainUtils.isUnDef(find)) {\r\n                  filter.push(merge);\r\n                  const mergeInfo = this.mergeInfo({\r\n                    view, merge,\r\n                  });\r\n                  const { rect, cell } = mergeInfo;\r\n                  result = mergeCallback(row, col, cell, rect, merge);\r\n                }\r\n              } else {\r\n                const cell = cells.getCell(row, col);\r\n                if (cell) {\r\n                  const cellsINInfo = this.cellsINInfo({\r\n                    x, y, width, height, row, col, cell,\r\n                  });\r\n                  const { rect, overflow } = cellsINInfo;\r\n                  result = cellsINCallback(row, col, cell, rect, overflow);\r\n                }\r\n              }\r\n              x += width;\r\n              switch (result) {\r\n                case TEXT_BREAK_LOOP.RETURN:\r\n                case TEXT_BREAK_LOOP.ROW:\r\n                  return false;\r\n                default: return true;\r\n              }\r\n            })\r\n            .execute();\r\n          y += height;\r\n          switch (result) {\r\n            case TEXT_BREAK_LOOP.RETURN:\r\n              return false;\r\n            default: return true;\r\n          }\r\n        })\r\n        .execute();\r\n    }\r\n  }\r\n\r\n  mergeInfo({\r\n    view, merge,\r\n  }) {\r\n    const rows = this.getRows();\r\n    const cols = this.getCols();\r\n    const cells = this.getCells();\r\n    // 计算坐标\r\n    const minSri = Math.min(view.sri, merge.sri);\r\n    const minSci = Math.min(view.sci, merge.sci);\r\n    let maxSri = Math.max(view.sri, merge.sri);\r\n    let maxSci = Math.max(view.sci, merge.sci);\r\n    maxSri -= 1;\r\n    maxSci -= 1;\r\n    let x = cols.sectionSumWidth(minSci, maxSci);\r\n    let y = rows.sectionSumHeight(minSri, maxSri);\r\n    x = view.sci > merge.sci ? x * -1 : x;\r\n    y = view.sri > merge.sri ? y * -1 : y;\r\n    // 计算尺寸\r\n    const height = rows.sectionSumHeight(merge.sri, merge.eri);\r\n    const width = cols.sectionSumWidth(merge.sci, merge.eci);\r\n    const cell = cells.getCell(merge.sri, merge.sci);\r\n    const rect = new Rect({ x, y, width, height });\r\n    return { rect, cell, merge };\r\n  }\r\n\r\n  cellsINInfo({\r\n    width, height, col, row, x, y, cell,\r\n  }) {\r\n    const rect = new Rect({ x, y, width, height });\r\n    const overflow = this.getCellOverFlow(row, col, rect, cell);\r\n    return { rect, overflow };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  TextCellsHelper, TEXT_BREAK_LOOP,\r\n};\r\n","import { PlainUtils } from '../../utils/PlainUtils';\r\nimport { SCROLL_TYPE } from './tablebase/Scroll';\r\nimport { XTableAreaView } from './XTableAreaView';\r\n\r\n/**\r\n * XTableHistoryAreaView\r\n */\r\nclass XTableHistoryAreaView extends XTableAreaView {\r\n\r\n  /**\r\n   * XTableHistoryAreaView\r\n   * @param xTableScrollView\r\n   * @param rows\r\n   * @param cols\r\n   * @param scroll\r\n   */\r\n  constructor({\r\n    xTableScrollView,\r\n    rows,\r\n    cols,\r\n    scroll,\r\n  }) {\r\n    super({\r\n      xTableScrollView,\r\n      rows,\r\n      cols,\r\n      scroll,\r\n    });\r\n    this.lastScrollView = null;\r\n    this.enterView = null;\r\n    this.scrollEnterView = null;\r\n    this.leaveView = null;\r\n  }\r\n\r\n  /**\r\n   * 重置变量区\r\n   */\r\n  reset() {\r\n    super.reset();\r\n    this.scrollEnterView = null;\r\n    this.enterView = null;\r\n    this.leaveView = null;\r\n  }\r\n\r\n  /**\r\n   * 获取上一次滚动的视图区域\r\n   * @returns {null|RectRange}\r\n   */\r\n  getLastScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.lastScrollView)) {\r\n      return this.lastScrollView.clone();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 获取滚动离开的视图区域\r\n   * @returns {null|RectRange}\r\n   */\r\n  getLeaveView() {\r\n    if (PlainUtils.isNotUnDef(this.leaveView)) {\r\n      return this.leaveView.clone();\r\n    }\r\n    const lastScrollView = this.getLastScrollView();\r\n    const scrollView = this.getScrollView();\r\n    const { cols, rows } = this;\r\n    if (lastScrollView) {\r\n      const [leaveView] = lastScrollView.coincideDifference(scrollView);\r\n      if (leaveView) {\r\n        leaveView.w = cols.rectRangeSumWidth(leaveView);\r\n        leaveView.h = rows.rectRangeSumHeight(leaveView);\r\n        this.leaveView = leaveView;\r\n        return leaveView.clone();\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 获取滚动进入的视图区域\r\n   * @returns {null|RectRange}\r\n   */\r\n  getEnterView() {\r\n    if (PlainUtils.isNotUnDef(this.enterView)) {\r\n      return this.enterView.clone();\r\n    }\r\n    const lastScrollView = this.getLastScrollView();\r\n    const scrollView = this.getScrollView();\r\n    const { cols, rows } = this;\r\n    if (lastScrollView) {\r\n      const [enterView] = scrollView.coincideDifference(lastScrollView);\r\n      if (enterView) {\r\n        enterView.w = cols.rectRangeSumWidth(enterView);\r\n        enterView.h = rows.rectRangeSumHeight(enterView);\r\n        this.enterView = enterView;\r\n        return enterView.clone();\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 获取滚动进入的视图区域\r\n   * @returns {null|RectRange}\r\n   */\r\n  getScrollEnterView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollEnterView)) {\r\n      return this.scrollEnterView.clone();\r\n    }\r\n    const { cols, rows, scroll } = this;\r\n    const enterView = this.getEnterView();\r\n    if (enterView) {\r\n      switch (scroll.type) {\r\n        case SCROLL_TYPE.H_RIGHT: {\r\n          enterView.sci -= 1;\r\n          break;\r\n        }\r\n        case SCROLL_TYPE.V_BOTTOM: {\r\n          enterView.sri -= 1;\r\n          break;\r\n        }\r\n        case SCROLL_TYPE.H_LEFT: {\r\n          enterView.eci += 1;\r\n          break;\r\n        }\r\n        case SCROLL_TYPE.V_TOP: {\r\n          enterView.eri += 1;\r\n          break;\r\n        }\r\n      }\r\n      enterView.w = cols.rectRangeSumWidth(enterView);\r\n      enterView.h = rows.rectRangeSumHeight(enterView);\r\n      this.scrollEnterView = enterView;\r\n      return enterView.clone();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 清空上一次视图记录\r\n   */\r\n  undo() {\r\n    this.lastScrollView = null;\r\n  }\r\n\r\n  /**\r\n   * 记录上一次视图\r\n   */\r\n  record() {\r\n    this.lastScrollView = this.scrollView;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableHistoryAreaView,\r\n};\r\n","import { BaseCellsHelper } from './BaseCellsHelper';\r\nimport { RectRange } from '../tablebase/RectRange';\r\n\r\nclass OperateCellsHelper extends BaseCellsHelper {\r\n\r\n  constructor(table) {\r\n    super();\r\n    this.table = table;\r\n  }\r\n\r\n  getCellOrNewCellByViewRange({\r\n    rectRange = new RectRange(-1, -1, -1, -1),\r\n    callback = () => {},\r\n  }) {\r\n    const { table } = this;\r\n    const { xIteratorBuilder } = table;\r\n    const cells = this.getCells();\r\n    const { sri, eri, sci, eci } = rectRange;\r\n    xIteratorBuilder.getRowIterator()\r\n      .setBegin(sri)\r\n      .setEnd(eri)\r\n      .setLoop((i) => {\r\n        xIteratorBuilder.getColIterator()\r\n          .setBegin(sci)\r\n          .setEnd(eci)\r\n          .setLoop((j) => {\r\n            const cell = cells.getCellOrNew(i, j);\r\n            callback(i, j, cell);\r\n          })\r\n          .execute();\r\n      })\r\n      .execute();\r\n  }\r\n\r\n  getXTableAreaView() {\r\n    return this.table.xTableAreaView;\r\n  }\r\n\r\n  getRows() {\r\n    return this.table.rows;\r\n  }\r\n\r\n  getCells() {\r\n    return this.table.cells;\r\n  }\r\n\r\n  getCols() {\r\n    return this.table.cols;\r\n  }\r\n\r\n  getMerges() {\r\n    return this.table.merges;\r\n  }\r\n\r\n  getStyleTable() {\r\n    return this.table;\r\n  }\r\n\r\n  getXIteratorBuilder() {\r\n    return this.table.xIteratorBuilder;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  OperateCellsHelper,\r\n};\r\n","class XFixedMeasure {\r\n\r\n  constructor({\r\n    rows,\r\n    cols,\r\n    fixedView,\r\n  }) {\r\n    this.fixedView = fixedView;\r\n    this.cols = cols;\r\n    this.rows = rows;\r\n  }\r\n\r\n  getHeight() {\r\n    return this.rows.rectRangeSumHeight(this.fixedView.getFixedView());\r\n  }\r\n\r\n  getWidth() {\r\n    return this.cols.rectRangeSumWidth(this.fixedView.getFixedView());\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XFixedMeasure,\r\n};\r\n","import { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\nclass CellIcon {\r\n\r\n  constructor({\r\n    rows,\r\n    cols,\r\n    cells,\r\n  } = {}) {\r\n    this.cells = cells;\r\n    this.cols = cols;\r\n    this.data = new Array(rows.len * cols.len);\r\n  }\r\n\r\n  addOrNewCell(ri, ci, xIcon) {\r\n    const { cells } = this;\r\n    cells.getCellOrNew(ri, ci);\r\n    this.add(ri, ci, xIcon);\r\n  }\r\n\r\n  add(ri, ci, xIcon) {\r\n    const { data, cells } = this;\r\n    const cell = cells.getCell(ri, ci);\r\n    if (cell) {\r\n      const xIcons = this.getIcon(ri, ci);\r\n      if (xIcons) {\r\n        xIcons.push(xIcon);\r\n      } else {\r\n        const offset = this.getOffset(ri, ci);\r\n        data[offset] = [xIcon];\r\n      }\r\n    }\r\n  }\r\n\r\n  getIcon(ri, ci) {\r\n    const { data } = this;\r\n    const offset = this.getOffset(ri, ci);\r\n    return data[offset];\r\n  }\r\n\r\n  getOffset(ri, ci) {\r\n    const { cols } = this;\r\n    const { len } = cols;\r\n    return (ri * len) + ci;\r\n  }\r\n\r\n  remove(ri, ci, xIcon = null) {\r\n    const { data } = this;\r\n    let xIcons = this.getIcon(ri, ci);\r\n    if (xIcons) {\r\n      const offset = this.getOffset(ri, ci);\r\n      if (xIcon) {\r\n        xIcons = xIcons.filter(item => item !== xIcon);\r\n        data[offset] = xIcons;\r\n      } else {\r\n        data[offset] = PlainUtils.Undef;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  CellIcon,\r\n};\r\n","import { CellIcon } from './CellIcon';\r\n\r\nclass FixedCellIcon extends CellIcon {\r\n\r\n}\r\n\r\nexport {\r\n  FixedCellIcon,\r\n};\r\n","import { CellIcon } from './CellIcon';\r\n\r\nclass StaticCellIcon extends CellIcon {\r\n\r\n}\r\n\r\nexport {\r\n  StaticCellIcon,\r\n};\r\n","class XLineIteratorFilter {\r\n\r\n  constructor({\r\n    logic, stack,\r\n  }) {\r\n    this.stack = stack;\r\n    this.logic = logic;\r\n    this.active = null;\r\n  }\r\n\r\n  getActive() {\r\n    return this.active;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { logic, stack } = this;\r\n    let result = XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    let active = null;\r\n    switch (logic) {\r\n      case XLineIteratorFilter.FILTER_LOGIC.AND: {\r\n        result = XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n        for (let i = 0; i < stack.length; i += 1) {\r\n          const filter = stack[i];\r\n          const returnValue = filter.run({ row, col });\r\n          if (returnValue !== XLineIteratorFilter.RETURN_TYPE.EXEC) {\r\n            result = XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n            active = filter;\r\n            break;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case XLineIteratorFilter.FILTER_LOGIC.OR: {\r\n        result = XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n        for (let i = 0; i < stack.length; i += 1) {\r\n          const filter = stack[i];\r\n          const returnValue = filter.run({ row, col });\r\n          if (returnValue === XLineIteratorFilter.RETURN_TYPE.EXEC) {\r\n            result = XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n            active = filter;\r\n            break;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    this.active = active;\r\n    return result;\r\n  }\r\n\r\n}\r\nXLineIteratorFilter.RETURN_TYPE = {\r\n  EXEC: 1,\r\n  JUMP: 2,\r\n};\r\nXLineIteratorFilter.FILTER_LOGIC = {\r\n  AND: 1,\r\n  OR: 2,\r\n};\r\nXLineIteratorFilter.EMPTY = new XLineIteratorFilter({\r\n  logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n  stack: [],\r\n});\r\n\r\nexport {\r\n  XLineIteratorFilter,\r\n};\r\n","import { XLineIteratorFilter } from './XLineIteratorFilter';\r\nimport { RectRange } from '../tablebase/RectRange';\r\n\r\nclass XLineIteratorLoop {\r\n\r\n  constructor({\r\n    foldOnOff = true,\r\n    items = [],\r\n    bx = 0,\r\n    by = 0,\r\n    table,\r\n    filter = XLineIteratorFilter.EMPTY,\r\n    view = RectRange.EMPTY,\r\n  }) {\r\n    this.foldOnOff = foldOnOff;\r\n    this.bx = bx;\r\n    this.by = by;\r\n    this.items = items;\r\n    this.table = table;\r\n    this.filter = filter;\r\n    this.view = view;\r\n  }\r\n\r\n  run() {\r\n    const { view, table } = this;\r\n    const { rows, cols, xIteratorBuilder } = table;\r\n    const { filter, foldOnOff } = this;\r\n    const { bx, by } = this;\r\n    const { sri, eri, sci, eci } = view;\r\n    let y = by;\r\n    let firstRow = true;\r\n    let lastRow = false;\r\n    xIteratorBuilder.getRowIterator()\r\n      .setBegin(sri)\r\n      .setEnd(eri)\r\n      .setLoop((row) => {\r\n        const height = rows.getHeight(row);\r\n        const result = filter.run({ row });\r\n        switch (result) {\r\n          case XLineIteratorFilter.RETURN_TYPE.EXEC: {\r\n            this.runNewRow(row, y);\r\n            lastRow = row === eri;\r\n            let x = bx;\r\n            xIteratorBuilder.getColIterator()\r\n              .setBegin(sci)\r\n              .setEnd(eci)\r\n              .setLoop((col) => {\r\n                const width = cols.getWidth(col);\r\n                if (firstRow) {\r\n                  this.runNewCol(col, x);\r\n                }\r\n                this.runFilter(row, col, x, y);\r\n                if (lastRow) {\r\n                  this.runEndCol(col);\r\n                }\r\n                x += width;\r\n              })\r\n              .execute();\r\n            firstRow = false;\r\n            this.runEndRow(row);\r\n            break;\r\n          }\r\n          case XLineIteratorFilter.RETURN_TYPE.JUMP: {\r\n            break;\r\n          }\r\n        }\r\n        y += height;\r\n      })\r\n      .foldOnOff(foldOnOff)\r\n      .execute();\r\n    this.runComplete();\r\n  }\r\n\r\n  runNewRow(row, y) {\r\n    const { items } = this;\r\n    for (let idx = 0; idx < items.length; idx++) {\r\n      const item = items[idx];\r\n      item.newRow({ row, y });\r\n    }\r\n  }\r\n\r\n  runNewCol(col, x) {\r\n    const { items } = this;\r\n    for (let idx = 0; idx < items.length; idx++) {\r\n      const item = items[idx];\r\n      item.newCol({ col, x });\r\n    }\r\n  }\r\n\r\n  runEndRow(row) {\r\n    const { items } = this;\r\n    for (let idx = 0; idx < items.length; idx++) {\r\n      const item = items[idx];\r\n      item.endRow({ row });\r\n    }\r\n  }\r\n\r\n  runEndCol(col) {\r\n    const { items } = this;\r\n    for (let idx = 0; idx < items.length; idx++) {\r\n      const item = items[idx];\r\n      item.endCol({ col });\r\n    }\r\n  }\r\n\r\n  runFilter(row, col, x, y) {\r\n    const { items } = this;\r\n    for (let idx = 0; idx < items.length; idx++) {\r\n      const item = items[idx];\r\n      const result = item.filter.run({ row, col });\r\n      switch (result) {\r\n        case XLineIteratorFilter.RETURN_TYPE.EXEC:\r\n          item.exec({ row, col, x, y });\r\n          break;\r\n        case XLineIteratorFilter.RETURN_TYPE.JUMP:\r\n          item.jump({ row, col, x, y });\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  runComplete() {\r\n    const { items } = this;\r\n    for (let idx = 0; idx < items.length; idx++) {\r\n      const item = items[idx];\r\n      item.complete();\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XLineIteratorLoop,\r\n};\r\n","import { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XLineIteratorFilter } from './XLineIteratorFilter';\r\n\r\nclass XLineIteratorItem {\r\n\r\n  constructor({\r\n    newRow = PlainUtils.noop,\r\n    endRow = PlainUtils.noop,\r\n    filter = XLineIteratorFilter.EMPTY,\r\n    newCol = PlainUtils.noop,\r\n    endCol = PlainUtils.noop,\r\n    jump = PlainUtils.noop,\r\n    exec = PlainUtils.noop,\r\n    complete = PlainUtils.noop,\r\n  } = {}) {\r\n    this.newRow = newRow;\r\n    this.endRow = endRow;\r\n    this.filter = filter;\r\n    this.newCol = newCol;\r\n    this.endCol = endCol;\r\n    this.jump = jump;\r\n    this.exec = exec;\r\n    this.complete = complete;\r\n  }\r\n\r\n  getFilter() {\r\n    return this.filter;\r\n  }\r\n\r\n}\r\n\r\nXLineIteratorItem.EMPTY = new XLineIteratorItem();\r\n\r\nexport {\r\n  XLineIteratorItem,\r\n};\r\n","import { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass BBorderHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    const { bottom } = cell.borderAttr;\r\n    return bottom.display\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  BBorderHide,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass MergeBNullEdge {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { merges } = table;\r\n    const merge = merges.getFirstIncludes(row, col);\r\n    if (merge) {\r\n      return merge.eri === row\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  MergeBNullEdge,\r\n};\r\n","import { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass RBorderHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    const { right } = cell.borderAttr;\r\n    return right.display\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RBorderHide,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass MergeRNullEdge {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { merges } = table;\r\n    const merge = merges.getFirstIncludes(row, col);\r\n    if (merge) {\r\n      return merge.eci === col\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  MergeRNullEdge,\r\n};\r\n","\r\nclass CellOutRange {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  CellOutRange,\r\n};\r\n","import { CellOutRange } from './CellOutRange';\r\nimport { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass RCellOutRange extends CellOutRange {\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    return this.master({ row, col }) && this.right({ row, col }) && this.left({ row, col })\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n  master({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells, cols } = table;\r\n    const next = cells.getCell(row, col + 1);\r\n    const master = cells.getCell(row, col);\r\n\r\n    // 是否是空单元格\r\n    if (PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text)) {\r\n      return true;\r\n    }\r\n    // 文字属性检查\r\n    const { fontAttr } = master;\r\n    const { direction } = fontAttr;\r\n    // 是否旋转文本\r\n    if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n      const { angle } = fontAttr;\r\n      if (table.isAngleBarCell(row, col)) {\r\n        return angle < 0;\r\n      }\r\n      if (angle === 90 || angle === -90) {\r\n        return true;\r\n      }\r\n    } else {\r\n      const { textWrap } = fontAttr;\r\n      if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n        return true;\r\n      }\r\n    }\r\n    // 对其方式检查\r\n    const { align } = fontAttr;\r\n    if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\r\n      return true;\r\n    }\r\n    // 文本是否越界\r\n    const width = table.getCellContentBoundOutWidth(row, col);\r\n    const maxWidth = cols.getWidth(col);\r\n    if (width > maxWidth) {\r\n      // 只有next单元格是空时\r\n      // 才允许不绘制边框\r\n      if (direction === BaseFont.TEXT_DIRECTION.ANGLE\r\n        || PlainUtils.isUnDef(next) || PlainUtils.isBlank(next.text)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  left({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells, cols, merges, xIteratorBuilder } = table;\r\n    const next = cells.getCell(row, col + 1);\r\n    const master = cells.getCell(row, col);\r\n    let find = true;\r\n    let leftWidth = cols.getWidth(col - 1) + cols.getWidth(col);\r\n\r\n    // 左方向越界检查\r\n    if (table.hasAngleCell(row)) {\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(col - 1)\r\n        .setEnd(0)\r\n        .setLoop((i) => {\r\n          // 检查空单元格\r\n          const cell = cells.getCell(row, i);\r\n          if (PlainUtils.isUnDef(cell)) {\r\n            return true;\r\n          }\r\n          // 检查合并单元格\r\n          const merge = merges.getFirstIncludes(row, i);\r\n          if (PlainUtils.isNotUnDef(merge)) {\r\n            return true;\r\n          }\r\n          // 检查空文本单元格\r\n          const { text } = cell;\r\n          if (PlainUtils.isBlank(text)) {\r\n            return true;\r\n          }\r\n          // 检查文本类型\r\n          const { fontAttr } = cell;\r\n          const { direction } = fontAttr;\r\n          // 是否旋转文本\r\n          if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n            const { angle } = fontAttr;\r\n            // 忽略反方向旋转的angleBar单元格\r\n            if (table.isAngleBarCell(row, i)) {\r\n              if (angle < 0) {\r\n                return true;\r\n              }\r\n            } else {\r\n              // 旋转方向忽略正负90度\r\n              if (angle === 90 || angle === -90) {\r\n                return true;\r\n              }\r\n              // 检查对其方式\r\n              const { align } = fontAttr;\r\n              if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\r\n                return true;\r\n              }\r\n            }\r\n          } else {\r\n            // 检查裁剪类型\r\n            const { textWrap } = fontAttr;\r\n            if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n              return true;\r\n            }\r\n            // 检查对其方式\r\n            const { align } = fontAttr;\r\n            if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\r\n              return true;\r\n            }\r\n          }\r\n          // 文本是否越界\r\n          const width = table.getCellContentBoundOutWidth(row, i);\r\n          if (width > leftWidth) {\r\n            // 只有master单元格和\r\n            // next单元格都是空时\r\n            // 才允许不绘制边框\r\n            const masterBlank = PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text);\r\n            const nextBlank = PlainUtils.isUnDef(next) || PlainUtils.isBlank(next.text);\r\n            if (direction === BaseFont.TEXT_DIRECTION.ANGLE\r\n              || (masterBlank && nextBlank)) {\r\n              find = false;\r\n            }\r\n          }\r\n          return false;\r\n        })\r\n        .setNext((i) => {\r\n          leftWidth += cols.getWidth(i);\r\n        })\r\n        .execute();\r\n    } else {\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(col - 1)\r\n        .setEnd(0)\r\n        .setLoop((i) => {\r\n          // 检查空单元格\r\n          const cell = cells.getCell(row, i);\r\n          if (PlainUtils.isUnDef(cell)) {\r\n            return true;\r\n          }\r\n          // 检查合并单元格\r\n          const merge = merges.getFirstIncludes(row, i);\r\n          if (PlainUtils.isNotUnDef(merge)) {\r\n            return true;\r\n          }\r\n          // 检查空文本单元格\r\n          const { text } = cell;\r\n          if (PlainUtils.isBlank(text)) {\r\n            return true;\r\n          }\r\n          // 检查文本类型\r\n          const { fontAttr } = cell;\r\n          const { textWrap } = fontAttr;\r\n          // 检查裁剪类型\r\n          if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n            return false;\r\n          }\r\n          // 检查对其方式\r\n          const { align } = fontAttr;\r\n          if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\r\n            return false;\r\n          }\r\n          // 文本是否越界\r\n          const width = table.getCellContentBoundOutWidth(row, i);\r\n          // 文本是否越界\r\n          if (width > leftWidth) {\r\n            // 只有master单元格和\r\n            // next单元格都是空时\r\n            // 才允许不绘制边框\r\n            const masterBlank = PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text);\r\n            const nextBlank = PlainUtils.isUnDef(next) || PlainUtils.isBlank(next.text);\r\n            if (masterBlank && nextBlank) {\r\n              find = false;\r\n            }\r\n          }\r\n          return false;\r\n        })\r\n        .setNext((i) => {\r\n          leftWidth += cols.getWidth(i);\r\n        })\r\n        .execute();\r\n    }\r\n    return find;\r\n  }\r\n\r\n  right({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells, cols, merges, xIteratorBuilder } = table;\r\n    const { len } = cols;\r\n    const master = cells.getCell(row, col);\r\n    let find = true;\r\n    let rightWidth = cols.getWidth(col + 1);\r\n\r\n    // 右方向越界检查\r\n    if (table.hasAngleCell(row)) {\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(col + 1)\r\n        .setEnd(len)\r\n        .setLoop((j) => {\r\n          // 空单元格检查\r\n          const cell = cells.getCell(row, j);\r\n          if (PlainUtils.isUnDef(cell)) {\r\n            return true;\r\n          }\r\n          // 合并单元格检查\r\n          const merge = merges.getFirstIncludes(row, j);\r\n          if (PlainUtils.isNotUnDef(merge)) {\r\n            return true;\r\n          }\r\n          // 空文本单检查\r\n          const { text } = cell;\r\n          if (PlainUtils.isBlank(text)) {\r\n            return true;\r\n          }\r\n          // 文本属性检查\r\n          const { fontAttr } = cell;\r\n          const { direction } = fontAttr;\r\n          // 文本旋转方向\r\n          if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n            const { angle } = fontAttr;\r\n            // 忽略反方向旋转的angleBar单元格\r\n            if (table.isAngleBarCell(row, j)) {\r\n              if (angle > 0) {\r\n                return true;\r\n              }\r\n            } else {\r\n              // 旋转方向忽略正负90度\r\n              if (angle === 90 || angle === -90) {\r\n                return true;\r\n              }\r\n              // 检查对其方式\r\n              const { align } = fontAttr;\r\n              if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\r\n                return true;\r\n              }\r\n            }\r\n          } else {\r\n            // 检查文本裁剪类型\r\n            const { textWrap } = fontAttr;\r\n            if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n              return true;\r\n            }\r\n            // 检查文本对齐方式\r\n            const { align } = fontAttr;\r\n            if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\r\n              return true;\r\n            }\r\n          }\r\n          // 检查文本是否越界\r\n          const width = table.getCellContentBoundOutWidth(row, j);\r\n          if (width > rightWidth) {\r\n            // 只有master单元格为\r\n            // 空时才允许不绘制边框\r\n            if (PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text)) {\r\n              find = false;\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        })\r\n        .setNext((j) => {\r\n          rightWidth += cols.getWidth(j);\r\n        })\r\n        .execute();\r\n    } else {\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(col + 1)\r\n        .setEnd(len)\r\n        .setLoop((j) => {\r\n          // 空单元格检查\r\n          const cell = cells.getCell(row, j);\r\n          if (PlainUtils.isUnDef(cell)) {\r\n            return true;\r\n          }\r\n          // 合并单元格检查\r\n          const merge = merges.getFirstIncludes(row, j);\r\n          if (PlainUtils.isNotUnDef(merge)) {\r\n            return true;\r\n          }\r\n          // 空文本单检查\r\n          const { text } = cell;\r\n          if (PlainUtils.isBlank(text)) {\r\n            return true;\r\n          }\r\n          // 文本属性检查\r\n          const { fontAttr } = cell;\r\n          const { textWrap } = fontAttr;\r\n          // 裁剪类型检查\r\n          if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n            return false;\r\n          }\r\n          // 文本对齐方式检查\r\n          const { align } = fontAttr;\r\n          if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\r\n            return false;\r\n          }\r\n          // 文本越界检查\r\n          const width = table.getCellContentBoundOutWidth(row, j);\r\n          if (width > rightWidth) {\r\n            // 只有master单元格为\r\n            // 空时才允许不绘制边框\r\n            if (PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text)) {\r\n              find = false;\r\n            }\r\n          }\r\n          return false;\r\n        })\r\n        .setNext((j) => {\r\n          rightWidth += cols.getWidth(j);\r\n        })\r\n        .execute();\r\n    }\r\n    return find;\r\n  }\r\n\r\n\r\n}\r\n\r\nexport {\r\n  RCellOutRange,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass AngleBarHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    return table.isAngleBarCell(row, col)\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBarHide,\r\n};\r\n","import { XLineIteratorFilter } from '../XLineIteratorFilter';\r\nimport { XLineIteratorItem } from '../XLineIteratorItem';\r\nimport { BBorderHide } from '../linefilters/borderhidden/BBorderHide';\r\nimport { MergeBNullEdge } from '../linefilters/mergenulledge/MergeBNullEdge';\r\nimport { RBorderHide } from '../linefilters/borderhidden/RBorderHide';\r\nimport { MergeRNullEdge } from '../linefilters/mergenulledge/MergeRNullEdge';\r\nimport { RCellOutRange } from '../linefilters/celloutrange/RCellOutRange';\r\nimport { AngleBarHide } from '../linefilters/anglebarhidden/AngleBarHide';\r\n\r\nclass LineGrid {\r\n\r\n  constructor({\r\n    table, getWidth, getHeight, bx = 0, by = 0,\r\n  }) {\r\n    this.table = table;\r\n    this.getHeight = getHeight;\r\n    this.getWidth = getWidth;\r\n    this.bx = bx;\r\n    this.by = by;\r\n    this.bLine = [];\r\n    this.rLine = [];\r\n  }\r\n\r\n  getBItem() {\r\n    const { table, bx, by, getWidth, getHeight } = this;\r\n    const bRow = {};\r\n    const bLine = [];\r\n    return new XLineIteratorItem({\r\n      newRow: ({ row, y }) => {\r\n        const height = getHeight(row);\r\n        bRow.sx = bx;\r\n        bRow.sy = by + y + height;\r\n        bRow.ex = bRow.sx;\r\n        bRow.ey = bRow.sy;\r\n        bRow.breakpoint = false;\r\n      },\r\n      endRow: () => {\r\n        if (bRow.breakpoint) {\r\n          const { sx, sy, ex, ey } = bRow;\r\n          bLine.push({ sx, sy, ex, ey });\r\n        }\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new BBorderHide(table),\r\n          new MergeBNullEdge(table),\r\n          new AngleBarHide(table),\r\n        ],\r\n      }),\r\n      exec: ({ col }) => {\r\n        const width = getWidth(col);\r\n        bRow.breakpoint = true;\r\n        bRow.ex += width;\r\n      },\r\n      jump: ({ col }) => {\r\n        if (bRow.breakpoint) {\r\n          const { sx, sy, ex, ey } = bRow;\r\n          bRow.breakpoint = false;\r\n          bLine.push({ sx, sy, ex, ey });\r\n        }\r\n        const width = getWidth(col);\r\n        bRow.sx = bRow.ex + width;\r\n        bRow.ex = bRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.bLine = bLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getRItem() {\r\n    const { table, bx, by, getWidth, getHeight } = this;\r\n    const rCols = [];\r\n    const rLine = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const width = getWidth(col);\r\n        const sx = bx + x + width;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const breakpoint = false;\r\n        rCols[col] = { sx, sy, ex, ey, breakpoint };\r\n      },\r\n      endCol: ({ col }) => {\r\n        const item = rCols[col];\r\n        if (item.breakpoint) {\r\n          const { sx, sy, ex, ey } = item;\r\n          rLine.push({ sx, sy, ex, ey });\r\n        }\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new RBorderHide(table),\r\n          new MergeRNullEdge(table),\r\n          new AngleBarHide(table),\r\n          new RCellOutRange(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const item = rCols[col];\r\n        const height = getHeight(row);\r\n        item.breakpoint = true;\r\n        item.ey += height;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const item = rCols[col];\r\n        const height = getHeight(row);\r\n        if (item.breakpoint) {\r\n          const { sx, sy, ex, ey } = item;\r\n          item.breakpoint = false;\r\n          rLine.push({ sx, sy, ex, ey });\r\n        }\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        this.rLine = rLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    return [\r\n      this.getBItem(),\r\n      this.getRItem(),\r\n    ];\r\n  }\r\n\r\n  getResult() {\r\n    const { bLine, rLine } = this;\r\n    return {\r\n      bLine, rLine,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LineGrid,\r\n};\r\n","class XLineOptimizeJoin {\r\n\r\n  constructor(xIteratorBuilder) {\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n  }\r\n\r\n  htJoin(line) {\r\n    for (let i = 1; i < line.length;) {\r\n      const item = line[i];\r\n      const last = line[i - 1];\r\n      const ck1 = item.borderAttr.top.equal(last.borderAttr.top);\r\n      const ck2 = item.col - last.col === 1;\r\n      const ck3 = item.row === last.row;\r\n      if (ck1 && ck2 && ck3) {\r\n        last.ex = item.ex;\r\n        last.col = item.col;\r\n        line.splice(i, 1);\r\n      } else {\r\n        i += 1;\r\n      }\r\n    }\r\n    return line;\r\n  }\r\n\r\n  hbJoin(line) {\r\n    for (let i = 1; i < line.length;) {\r\n      const item = line[i];\r\n      const last = line[i - 1];\r\n      const ck1 = item.borderAttr.bottom.equal(last.borderAttr.bottom);\r\n      const ck2 = item.col - last.col === 1;\r\n      const ck3 = item.row === last.row;\r\n      if (ck1 && ck2 && ck3) {\r\n        last.ex = item.ex;\r\n        last.col = item.col;\r\n        line.splice(i, 1);\r\n      } else {\r\n        i += 1;\r\n      }\r\n    }\r\n    return line;\r\n  }\r\n\r\n  vlJoin(line) {\r\n    const { xIteratorBuilder } = this;\r\n    for (let i = 1; i < line.length;) {\r\n      const item = line[i];\r\n      const last = line[i - 1];\r\n      const nextRow = xIteratorBuilder.getRowIterator()\r\n        .setBegin(last.row)\r\n        .setEnd(item.row)\r\n        .nextRow();\r\n      const ck1 = item.borderAttr.left.equal(last.borderAttr.left);\r\n      const ck2 = item.row === nextRow;\r\n      const ck3 = item.col === last.col;\r\n      if (ck1 && ck2 && ck3) {\r\n        last.ey = item.ey;\r\n        last.row = item.row;\r\n        line.splice(i, 1);\r\n      } else {\r\n        i += 1;\r\n      }\r\n    }\r\n    return line;\r\n  }\r\n\r\n  vrJoin(line) {\r\n    const { xIteratorBuilder } = this;\r\n    for (let i = 1; i < line.length;) {\r\n      const item = line[i];\r\n      const last = line[i - 1];\r\n      const nextRow = xIteratorBuilder.getRowIterator()\r\n        .setBegin(last.row)\r\n        .setEnd(item.row)\r\n        .nextRow();\r\n      const ck1 = item.borderAttr.right.equal(last.borderAttr.right);\r\n      const ck2 = item.row === nextRow;\r\n      const ck3 = item.col === last.col;\r\n      if (ck1 && ck2 && ck3) {\r\n        last.ey = item.ey;\r\n        last.row = item.row;\r\n        line.splice(i, 1);\r\n      } else {\r\n        i += 1;\r\n      }\r\n    }\r\n    return line;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XLineOptimizeJoin,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass BBorderShow {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const { bottom } = cell.borderAttr;\r\n    return bottom.display\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  BBorderShow,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass BBorderPriority {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const next = cells.getCell(row + 1, col);\r\n    const cell = cells.getCell(row, col);\r\n    // 对面的单元格不存在\r\n    if (PlainUtils.isUnDef(next)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    // 对面的单元格不需要显示\r\n    const { top } = next.borderAttr;\r\n    if (top.display) {\r\n      const { bottom } = cell.borderAttr;\r\n      const result = bottom.priority(top);\r\n      return result === 1\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    // 对面单元格不存在则显示\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  BBorderPriority,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass TBorderShow {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const { top } = cell.borderAttr;\r\n    return top.display\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  TBorderShow,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass TBorderPriority {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const next = cells.getCell(row - 1, col);\r\n    const cell = cells.getCell(row, col);\r\n    // 对面的单元格不存在\r\n    if (PlainUtils.isUnDef(next)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    // 对面的单元格不需要显示\r\n    const { bottom } = next.borderAttr;\r\n    if (bottom.display) {\r\n      const { top } = cell.borderAttr;\r\n      const result = top.priority(bottom);\r\n      return result === 1 || result === 0\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    // 对面单元格不存在则显示\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  TBorderPriority,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass MergeTNullEdge {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { merges } = table;\r\n    const merge = merges.getFirstIncludes(row, col);\r\n    if (merge) {\r\n      return merge.sri === row\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  MergeTNullEdge,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass RBorderShow {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const { right } = cell.borderAttr;\r\n    return right.display\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RBorderShow,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass RBorderPriority {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const next = cells.getCell(row, col + 1);\r\n    const cell = cells.getCell(row, col);\r\n    // 对面的单元格不存在\r\n    if (PlainUtils.isUnDef(next)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    // 对面的单元格不需要显示\r\n    const { left } = next.borderAttr;\r\n    if (left.display) {\r\n      const { right } = cell.borderAttr;\r\n      const result = right.priority(left);\r\n      return result === 1\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    // 对面单元格不存在则显示\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RBorderPriority,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass LBorderPriority {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const next = cells.getCell(row, col - 1);\r\n    const cell = cells.getCell(row, col);\r\n    // 对面的单元格不存在\r\n    if (PlainUtils.isUnDef(next)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    // 对面的单元格不需要显示\r\n    const { right } = next.borderAttr;\r\n    if (right.display) {\r\n      const { left } = cell.borderAttr;\r\n      const result = left.priority(right);\r\n      return result === 1 || result === 0\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    // 对面单元格不存在则显示\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LBorderPriority,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass LBorderShow {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const { left } = cell.borderAttr;\r\n    return left.display\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LBorderShow,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass MergeLNullEdge {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { merges } = table;\r\n    const merge = merges.getFirstIncludes(row, col);\r\n    if (merge) {\r\n      return merge.sci === col\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  MergeLNullEdge,\r\n};\r\n","import { CellOutRange } from './CellOutRange';\r\nimport { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass LCellOutRange extends CellOutRange {\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    return this.master({ row, col }) && this.right({ row, col }) && this.left({ row, col })\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n  master({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells, cols } = table;\r\n    const last = cells.getCell(row, col - 1);\r\n    const master = cells.getCell(row, col);\r\n\r\n    // 是否是空单元格\r\n    if (PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text)) {\r\n      return true;\r\n    }\r\n    // 文字属性检查\r\n    const { fontAttr } = master;\r\n    const { direction } = fontAttr;\r\n    // 是否旋转文本\r\n    if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n      const { angle } = fontAttr;\r\n      if (table.isAngleBarCell(row, col)) {\r\n        return angle > 0;\r\n      }\r\n      if (angle === 90 || angle === -90) {\r\n        return true;\r\n      }\r\n    } else {\r\n      const { textWrap } = fontAttr;\r\n      if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n        return true;\r\n      }\r\n    }\r\n    // 对其方式检查\r\n    const { align } = fontAttr;\r\n    if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\r\n      return true;\r\n    }\r\n    // 文本是否越界\r\n    const width = table.getCellContentBoundOutWidth(row, col);\r\n    const maxWidth = cols.getWidth(col);\r\n    if (width > maxWidth) {\r\n      // 只有next单元格是空时\r\n      // 才允许不绘制边框\r\n      if (PlainUtils.isUnDef(last) || PlainUtils.isBlank(last.text)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  left({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells, cols, merges, xIteratorBuilder } = table;\r\n    const master = cells.getCell(row, col);\r\n    let find = true;\r\n    let leftWidth = cols.getWidth(col - 1);\r\n\r\n    // 左方向越界检查\r\n    if (table.hasAngleCell(row)) {\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(col - 1)\r\n        .setEnd(0)\r\n        .setLoop((i) => {\r\n          // 是否是空单元格\r\n          const cell = cells.getCell(row, i);\r\n          if (PlainUtils.isUnDef(cell)) {\r\n            return true;\r\n          }\r\n          // 是否是合并单元格\r\n          const merge = merges.getFirstIncludes(row, i);\r\n          if (PlainUtils.isNotUnDef(merge)) {\r\n            return true;\r\n          }\r\n          // 是否是空文本\r\n          const { text } = cell;\r\n          if (PlainUtils.isBlank(text)) {\r\n            return true;\r\n          }\r\n          // 检查文本属性\r\n          const { fontAttr } = cell;\r\n          const { direction } = fontAttr;\r\n          // 是否旋转文本\r\n          if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n            const { angle } = fontAttr;\r\n            // 忽略反方向旋转的angleBar单元格\r\n            if (table.isAngleBarCell(row, i)) {\r\n              if (angle < 0) {\r\n                return true;\r\n              }\r\n            } else {\r\n              // 旋转方向忽略正负90度\r\n              if (angle === 90 || angle === -90) {\r\n                return true;\r\n              }\r\n              // 检查对其方式\r\n              const { align } = fontAttr;\r\n              if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\r\n                return true;\r\n              }\r\n            }\r\n          } else {\r\n            // 检查裁剪类型\r\n            const { textWrap } = fontAttr;\r\n            if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n              return true;\r\n            }\r\n            // 检查对其方式\r\n            const { align } = fontAttr;\r\n            if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\r\n              return true;\r\n            }\r\n          }\r\n          // 文本是否越界\r\n          const width = table.getCellContentBoundOutWidth(row, i);\r\n          if (width > leftWidth) {\r\n            // 只有master单元格为\r\n            // 空时才允许不绘制边框\r\n            if (PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text)) {\r\n              find = false;\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        })\r\n        .setNext((i) => {\r\n          leftWidth += cols.getWidth(i);\r\n        })\r\n        .execute();\r\n    } else {\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(col - 1)\r\n        .setEnd(0)\r\n        .setLoop((i) => {\r\n          // 是否是空单元格\r\n          const cell = cells.getCell(row, i);\r\n          if (PlainUtils.isUnDef(cell)) {\r\n            return true;\r\n          }\r\n          // 是否是合并单元格\r\n          const merge = merges.getFirstIncludes(row, i);\r\n          if (PlainUtils.isNotUnDef(merge)) {\r\n            return true;\r\n          }\r\n          // 是否是空文本\r\n          const { text } = cell;\r\n          if (PlainUtils.isBlank(text)) {\r\n            return true;\r\n          }\r\n          // 检查文本类型\r\n          const { fontAttr } = cell;\r\n          const { textWrap } = fontAttr;\r\n          // 检查裁剪类型\r\n          if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n            return false;\r\n          }\r\n          // 检查对其方式\r\n          const { align } = fontAttr;\r\n          if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\r\n            return false;\r\n          }\r\n          // 文本是否越界\r\n          const width = table.getCellContentBoundOutWidth(row, i);\r\n          if (width > leftWidth) {\r\n            // 只有master单元格为\r\n            // 空时才允许不绘制边框\r\n            if (PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text)) {\r\n              find = false;\r\n            }\r\n          }\r\n          return false;\r\n        })\r\n        .setNext((i) => {\r\n          leftWidth += cols.getWidth(i);\r\n        })\r\n        .execute();\r\n    }\r\n    return find;\r\n  }\r\n\r\n  right({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells, cols, merges, xIteratorBuilder } = table;\r\n    const { len } = cols;\r\n    const last = cells.getCell(row, col - 1);\r\n    const master = cells.getCell(row, col);\r\n    let find = true;\r\n    let rightWidth = cols.getWidth(col + 1) + cols.getWidth(col);\r\n\r\n    // 右方向越界检查\r\n    if (table.hasAngleCell(row)) {\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(col + 1)\r\n        .setEnd(len)\r\n        .setLoop((j) => {\r\n          // 空单元格检查\r\n          const cell = cells.getCell(row, j);\r\n          if (PlainUtils.isUnDef(cell)) {\r\n            return true;\r\n          }\r\n          // 合并单元格检查\r\n          const merge = merges.getFirstIncludes(row, j);\r\n          if (PlainUtils.isNotUnDef(merge)) {\r\n            return true;\r\n          }\r\n          // 空文本单检查\r\n          const { text } = cell;\r\n          if (PlainUtils.isBlank(text)) {\r\n            return true;\r\n          }\r\n          // 文本属性检查\r\n          const { fontAttr } = cell;\r\n          const { direction } = fontAttr;\r\n          // 文本旋转方向\r\n          if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n            const { angle } = fontAttr;\r\n            // 忽略反方向旋转的angleBar单元格\r\n            if (table.isAngleBarCell(row, j)) {\r\n              if (angle > 0) {\r\n                return true;\r\n              }\r\n            } else {\r\n              // 旋转方向忽略正负90度\r\n              if (angle === 90 || angle === -90) {\r\n                return true;\r\n              }\r\n              // 检查对其方式\r\n              const { align } = fontAttr;\r\n              if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\r\n                return true;\r\n              }\r\n            }\r\n          } else {\r\n            // 检查文本裁剪类型\r\n            const { textWrap } = fontAttr;\r\n            if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n              return true;\r\n            }\r\n            // 检查文本对齐方式\r\n            const { align } = fontAttr;\r\n            if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\r\n              return true;\r\n            }\r\n          }\r\n          // 检查文本是否越界\r\n          const width = table.getCellContentBoundOutWidth(row, j);\r\n          if (width > rightWidth) {\r\n            // 只有master单元格和\r\n            // last单元格都是空时\r\n            // 才允许不绘制边框\r\n            const masterBlank = PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text);\r\n            const nextBlank = PlainUtils.isUnDef(last) || PlainUtils.isBlank(last.text);\r\n            if (masterBlank && nextBlank) {\r\n              find = false;\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        })\r\n        .setNext((j) => {\r\n          rightWidth += cols.getWidth(j);\r\n        })\r\n        .execute();\r\n    } else {\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(col + 1)\r\n        .setEnd(len)\r\n        .setLoop((j) => {\r\n          // 空单元格检查\r\n          const cell = cells.getCell(row, j);\r\n          if (PlainUtils.isUnDef(cell)) {\r\n            return true;\r\n          }\r\n          // 合并单元格检查\r\n          const merge = merges.getFirstIncludes(row, j);\r\n          if (PlainUtils.isNotUnDef(merge)) {\r\n            return true;\r\n          }\r\n          // 空文本单检查\r\n          const { text } = cell;\r\n          if (PlainUtils.isBlank(text)) {\r\n            return true;\r\n          }\r\n          // 文本属性检查\r\n          const { fontAttr } = cell;\r\n          const { textWrap } = fontAttr;\r\n          // 裁剪类型检查\r\n          if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n            return false;\r\n          }\r\n          // 文本对齐方式检查\r\n          const { align } = fontAttr;\r\n          if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\r\n            return false;\r\n          }\r\n          // 文本越界检查\r\n          const width = table.getCellContentBoundOutWidth(row, j);\r\n          if (width > rightWidth) {\r\n            // 只有master单元格和\r\n            // last单元格都是空时\r\n            // 才允许不绘制边框\r\n            const masterBlank = PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text);\r\n            const nextBlank = PlainUtils.isUnDef(last) || PlainUtils.isBlank(last.text);\r\n            if (masterBlank && nextBlank) {\r\n              find = false;\r\n            }\r\n          }\r\n          return false;\r\n        })\r\n        .setNext((j) => {\r\n          rightWidth += cols.getWidth(j);\r\n        })\r\n        .execute();\r\n    }\r\n    return find;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LCellOutRange,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass LAngleBarHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    return table.isAngleBarCell(row, col) || table.isAngleBarCell(row, col - 1)\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LAngleBarHide,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass RAngleBarHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    return table.isAngleBarCell(row, col) || table.isAngleBarCell(row, col + 1)\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RAngleBarHide,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass TAngleBarHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    return table.isAngleBarCell(row, col) || table.isAngleBarCell(row - 1, col)\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  TAngleBarHide,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass BAngleBarHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    return table.isAngleBarCell(row, col) || table.isAngleBarCell(row + 1, col)\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  BAngleBarHide,\r\n};\r\n","import { XLineIteratorFilter } from '../XLineIteratorFilter';\r\nimport { XLineIteratorItem } from '../XLineIteratorItem';\r\nimport { XLineOptimizeJoin } from '../XLineOptimizeJoin';\r\nimport { BBorderShow } from '../linefilters/borderdisplay/BBorderShow';\r\nimport { BBorderPriority } from '../linefilters/borderpriority/BBorderPriority';\r\nimport { MergeBNullEdge } from '../linefilters/mergenulledge/MergeBNullEdge';\r\nimport { TBorderShow } from '../linefilters/borderdisplay/TBorderShow';\r\nimport { TBorderPriority } from '../linefilters/borderpriority/TBorderPriority';\r\nimport { MergeTNullEdge } from '../linefilters/mergenulledge/MergeTNullEdge';\r\nimport { RCellOutRange } from '../linefilters/celloutrange/RCellOutRange';\r\nimport { RBorderShow } from '../linefilters/borderdisplay/RBorderShow';\r\nimport { RBorderPriority } from '../linefilters/borderpriority/RBorderPriority';\r\nimport { MergeRNullEdge } from '../linefilters/mergenulledge/MergeRNullEdge';\r\nimport { LBorderPriority } from '../linefilters/borderpriority/LBorderPriority';\r\nimport { LBorderShow } from '../linefilters/borderdisplay/LBorderShow';\r\nimport { MergeLNullEdge } from '../linefilters/mergenulledge/MergeLNullEdge';\r\nimport { LCellOutRange } from '../linefilters/celloutrange/LCellOutRange';\r\nimport { LAngleBarHide } from '../linefilters/anglebarhidden/LAngleBarHide';\r\nimport { RAngleBarHide } from '../linefilters/anglebarhidden/RAngleBarHide';\r\nimport { TAngleBarHide } from '../linefilters/anglebarhidden/TAngleBarHide';\r\nimport { BAngleBarHide } from '../linefilters/anglebarhidden/BAngleBarHide';\r\n\r\nclass LineBorder {\r\n\r\n  constructor({\r\n    table, bx = 0, by = 0, optimize = true,\r\n  }) {\r\n    this.optimize = optimize;\r\n    this.table = table;\r\n    this.lLine = [];\r\n    this.tLine = [];\r\n    this.rLine = [];\r\n    this.bLine = [];\r\n    this.bx = bx;\r\n    this.by = by;\r\n  }\r\n\r\n  offsetX({\r\n    sx, ex, row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const last = cells.getCell(row, col - 1);\r\n    const next = cells.getCell(row, col + 1);\r\n    let osx = sx;\r\n    let oex = ex;\r\n    if (last) {\r\n      if (last.borderAttr.top.display) {\r\n        osx -= last.rightSdistWidth;\r\n      }\r\n    }\r\n    if (next) {\r\n      if (next.borderAttr.top.display) {\r\n        oex += next.leftSdistWidth;\r\n      }\r\n    }\r\n    return { osx, oex };\r\n  }\r\n\r\n  getBItem() {\r\n    const { table, bx, by, optimize } = this;\r\n    const { cols, rows, cells } = table;\r\n    const bLine = [];\r\n    const bRow = {};\r\n    const optimizeJoin = new XLineOptimizeJoin();\r\n    return new XLineIteratorItem({\r\n      newRow: ({ row, y }) => {\r\n        const height = rows.getHeight(row);\r\n        bRow.sx = bx;\r\n        bRow.sy = by + y + height;\r\n        bRow.ex = bRow.sx;\r\n        bRow.ey = bRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new BBorderShow(table),\r\n          new BBorderPriority(table),\r\n          new MergeBNullEdge(table),\r\n          new BAngleBarHide(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        bRow.ex += width;\r\n        const { sx, sy, ex, ey } = bRow;\r\n        bLine.push({ sx, sy, ex, ey, row, col, borderAttr });\r\n        bRow.sx = bRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        bRow.sx = bRow.ex + width;\r\n        bRow.ex = bRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.bLine = optimize\r\n          ? optimizeJoin.hbJoin(bLine)\r\n          : bLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getTItem() {\r\n    const { table, bx, by, optimize } = this;\r\n    const { cols, cells } = table;\r\n    const tLine = [];\r\n    const tRow = {};\r\n    const optimizeJoin = new XLineOptimizeJoin();\r\n    return new XLineIteratorItem({\r\n      newRow: ({ y }) => {\r\n        tRow.sx = bx;\r\n        tRow.sy = by + y;\r\n        tRow.ex = tRow.sx;\r\n        tRow.ey = tRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new TBorderShow(table),\r\n          new TBorderPriority(table),\r\n          new MergeTNullEdge(table),\r\n          new TAngleBarHide(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        tRow.ex += width;\r\n        const { sx, sy, ex, ey } = tRow;\r\n        const { osx, oex } = this.offsetX({ sx, ex, row, col });\r\n        tLine.push({ sx: osx, sy, ex: oex, ey, row, col, borderAttr });\r\n        tRow.sx = tRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        tRow.sx = tRow.ex + width;\r\n        tRow.ex = tRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.tLine = optimize\r\n          ? optimizeJoin.htJoin(tLine)\r\n          : tLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getRItem() {\r\n    const { table, bx, by, optimize } = this;\r\n    const { cols, rows, cells, xIteratorBuilder } = table;\r\n    const rCols = [];\r\n    const optimizeJoin = new XLineOptimizeJoin(xIteratorBuilder);\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const width = cols.getWidth(col);\r\n        const sx = bx + x + width;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const rLine = [];\r\n        rCols[col] = { sx, sy, ex, ey, rLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new RBorderShow(table),\r\n          new RBorderPriority(table),\r\n          new MergeRNullEdge(table),\r\n          new RAngleBarHide(table),\r\n          new RCellOutRange(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const cell = cells.getCell(row, col);\r\n        const item = rCols[col];\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, rLine } = item;\r\n        rLine.push({ sx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = rCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let rLine = [];\r\n        for (let idx = 0; idx < rCols.length; idx++) {\r\n          const item = rCols[idx];\r\n          if (item) {\r\n            if (optimize) {\r\n              rLine = rLine.concat(optimizeJoin.vrJoin(item.rLine));\r\n            } else {\r\n              rLine = rLine.concat(item.rLine);\r\n            }\r\n          }\r\n        }\r\n        this.rLine = rLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getLItem() {\r\n    const { table, bx, by, optimize } = this;\r\n    const { rows, cells, xIteratorBuilder } = table;\r\n    const lCols = [];\r\n    const optimizeJoin = new XLineOptimizeJoin(xIteratorBuilder);\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const sx = bx + x;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const lLine = [];\r\n        lCols[col] = { sx, sy, ex, ey, lLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new LBorderShow(table),\r\n          new LBorderPriority(table),\r\n          new MergeLNullEdge(table),\r\n          new LAngleBarHide(table),\r\n          new LCellOutRange(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const item = lCols[col];\r\n        const cell = cells.getCell(row, col);\r\n        const height = rows.getHeight(row);\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, lLine } = item;\r\n        lLine.push({ sx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = lCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let lLine = [];\r\n        for (let idx = 0; idx < lCols.length; idx++) {\r\n          const item = lCols[idx];\r\n          if (item) {\r\n            if (optimize) {\r\n              lLine = lLine.concat(optimizeJoin.vlJoin(item.lLine));\r\n            } else {\r\n              lLine = lLine.concat(item.lLine);\r\n            }\r\n          }\r\n        }\r\n        this.lLine = lLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    return [\r\n      this.getBItem(),\r\n      this.getTItem(),\r\n      this.getRItem(),\r\n      this.getLItem(),\r\n    ];\r\n  }\r\n\r\n  getResult() {\r\n    const { rLine, bLine, lLine, tLine } = this;\r\n    return {\r\n      rLine, bLine, lLine, tLine,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LineBorder,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass AngleBarShow {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    return table.isAngleBarCell(row, col)\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBarShow,\r\n};\r\n","import { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass AngleBarInRow {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row,\r\n  }) {\r\n    const { table } = this;\r\n    return table.hasAngleCell(row)\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBarInRow,\r\n};\r\n","import { XLineIteratorItem } from '../XLineIteratorItem';\r\nimport { XLineIteratorFilter } from '../XLineIteratorFilter';\r\nimport { BBorderShow } from '../linefilters/borderdisplay/BBorderShow';\r\nimport { BBorderPriority } from '../linefilters/borderpriority/BBorderPriority';\r\nimport { MergeBNullEdge } from '../linefilters/mergenulledge/MergeBNullEdge';\r\nimport { TBorderShow } from '../linefilters/borderdisplay/TBorderShow';\r\nimport { TBorderPriority } from '../linefilters/borderpriority/TBorderPriority';\r\nimport { MergeTNullEdge } from '../linefilters/mergenulledge/MergeTNullEdge';\r\nimport { RBorderShow } from '../linefilters/borderdisplay/RBorderShow';\r\nimport { RBorderPriority } from '../linefilters/borderpriority/RBorderPriority';\r\nimport { MergeRNullEdge } from '../linefilters/mergenulledge/MergeRNullEdge';\r\nimport { LBorderShow } from '../linefilters/borderdisplay/LBorderShow';\r\nimport { LBorderPriority } from '../linefilters/borderpriority/LBorderPriority';\r\nimport { MergeLNullEdge } from '../linefilters/mergenulledge/MergeLNullEdge';\r\nimport { AngleBarShow } from '../linefilters/anglebardisplay/AngleBarShow';\r\nimport { AngleBarInRow } from '../linefilters/anglebarinrow/AngleBarInRow';\r\n\r\nclass AngleBar {\r\n\r\n  constructor({\r\n    table, bx = 0, by = 0,\r\n  }) {\r\n    this.table = table;\r\n    this.lLine = [];\r\n    this.tLine = [];\r\n    this.rLine = [];\r\n    this.bLine = [];\r\n    this.bx = bx;\r\n    this.by = by;\r\n  }\r\n\r\n  offsetX({\r\n    sx, ex, row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    if (angle > 0) {\r\n      sx += cell.leftSdistWidth;\r\n      ex += cell.leftSdistWidth;\r\n    } else {\r\n      sx -= cell.rightSdistWidth;\r\n      ex -= cell.rightSdistWidth;\r\n    }\r\n    return {\r\n      osx: sx,\r\n      oex: ex,\r\n    };\r\n  }\r\n\r\n  getBItem() {\r\n    const { bx, by, table } = this;\r\n    const { cols, rows, cells } = table;\r\n    const bLine = [];\r\n    const bRow = {};\r\n    return new XLineIteratorItem({\r\n      newRow: ({ row, y }) => {\r\n        const height = rows.getHeight(row);\r\n        bRow.sx = bx;\r\n        bRow.sy = by + y + height;\r\n        bRow.ex = bRow.sx;\r\n        bRow.ey = bRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new BBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new BBorderPriority(table),\r\n          new MergeBNullEdge(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        bRow.ex += width;\r\n        const { sx, sy, ex, ey } = bRow;\r\n        bLine.push({ sx, sy, ex, ey, row, col, borderAttr });\r\n        bRow.sx = bRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        bRow.sx = bRow.ex + width;\r\n        bRow.ex = bRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.bLine = bLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getTItem() {\r\n    const { table, bx, by } = this;\r\n    const { cols, cells } = table;\r\n    const tLine = [];\r\n    const tRow = {};\r\n    return new XLineIteratorItem({\r\n      newRow: ({ y }) => {\r\n        tRow.sx = bx;\r\n        tRow.sy = by + y;\r\n        tRow.ex = tRow.sx;\r\n        tRow.ey = tRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new TBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new TBorderPriority(table),\r\n          new MergeTNullEdge(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        tRow.ex += width;\r\n        const { sx, sy, ex, ey } = tRow;\r\n        const { osx, oex } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        tLine.push({ sx: osx, sy, ex: oex, ey, row, col, borderAttr });\r\n        tRow.sx = tRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        tRow.sx = tRow.ex + width;\r\n        tRow.ex = tRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.tLine = tLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getRItem() {\r\n    const { bx, by, table } = this;\r\n    const { cols, rows, cells } = table;\r\n    const rCols = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const width = cols.getWidth(col);\r\n        const sx = bx + x + width;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const rLine = [];\r\n        rCols[col] = { sx, sy, ex, ey, rLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new RBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new RBorderPriority(table),\r\n          new MergeRNullEdge(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const cell = cells.getCell(row, col);\r\n        const item = rCols[col];\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, rLine } = item;\r\n        const { osx } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        rLine.push({ sx: osx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = rCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let rLine = [];\r\n        for (let idx = 0; idx < rCols.length; idx++) {\r\n          const item = rCols[idx];\r\n          if (item) {\r\n            rLine = rLine.concat(item.rLine);\r\n          }\r\n        }\r\n        this.rLine = rLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getLItem() {\r\n    const { bx, by, table } = this;\r\n    const { rows, cells } = table;\r\n    const lCols = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const sx = bx + x;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const lLine = [];\r\n        lCols[col] = { sx, sy, ex, ey, lLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new LBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new LBorderPriority(table),\r\n          new MergeLNullEdge(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const item = lCols[col];\r\n        const cell = cells.getCell(row, col);\r\n        const height = rows.getHeight(row);\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, lLine } = item;\r\n        const { osx } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        lLine.push({ sx: osx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = lCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let lLine = [];\r\n        for (let idx = 0; idx < lCols.length; idx++) {\r\n          const item = lCols[idx];\r\n          if (item) {\r\n            lLine = lLine.concat(item.lLine);\r\n          }\r\n        }\r\n        this.lLine = lLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    return [\r\n      this.getBItem(),\r\n      this.getTItem(),\r\n      this.getRItem(),\r\n      this.getLItem(),\r\n    ];\r\n  }\r\n\r\n  getResult() {\r\n    const { rLine, bLine, lLine, tLine } = this;\r\n    return {\r\n      rLine, bLine, lLine, tLine,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBar,\r\n};\r\n","import { XLineIteratorItem } from '../XLineIteratorItem';\r\nimport { XLineIteratorFilter } from '../XLineIteratorFilter';\r\n\r\nclass LineIndex {\r\n\r\n  constructor({\r\n    getWidth, getHeight, bx = 0, by = 0,\r\n  }) {\r\n    this.getHeight = getHeight;\r\n    this.getWidth = getWidth;\r\n    this.bx = bx;\r\n    this.by = by;\r\n    this.bLine = [];\r\n    this.rLine = [];\r\n  }\r\n\r\n  getBItem() {\r\n    const { bx, by, getWidth, getHeight } = this;\r\n    const bRow = {};\r\n    const bLine = [];\r\n    return new XLineIteratorItem({\r\n      newRow: ({ row, y }) => {\r\n        const height = getHeight(row);\r\n        bRow.sx = bx;\r\n        bRow.sy = by + y + height;\r\n        bRow.ex = bRow.sx;\r\n        bRow.ey = bRow.sy;\r\n        bRow.breakpoint = false;\r\n      },\r\n      endRow: () => {\r\n        if (bRow.breakpoint) {\r\n          const { sx, sy, ex, ey } = bRow;\r\n          bLine.push({ sx, sy, ex, ey });\r\n        }\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [],\r\n      }),\r\n      exec: ({ col }) => {\r\n        const width = getWidth(col);\r\n        bRow.breakpoint = true;\r\n        bRow.ex += width;\r\n      },\r\n      jump: ({ col }) => {\r\n        if (bRow.breakpoint) {\r\n          const { sx, sy, ex, ey } = bRow;\r\n          bRow.breakpoint = false;\r\n          bLine.push({ sx, sy, ex, ey });\r\n        }\r\n        const width = getWidth(col);\r\n        bRow.sx = bRow.ex + width;\r\n        bRow.ex = bRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.bLine = bLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getRItem() {\r\n    const { bx, by, getWidth, getHeight } = this;\r\n    const rCols = [];\r\n    const rLine = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const width = getWidth(col);\r\n        const sx = bx + x + width;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const breakpoint = false;\r\n        rCols[col] = { sx, sy, ex, ey, breakpoint };\r\n      },\r\n      endCol: ({ col }) => {\r\n        const item = rCols[col];\r\n        if (item.breakpoint) {\r\n          const { sx, sy, ex, ey } = item;\r\n          rLine.push({ sx, sy, ex, ey });\r\n        }\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const item = rCols[col];\r\n        const height = getHeight(row);\r\n        item.breakpoint = true;\r\n        item.ey += height;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const item = rCols[col];\r\n        const height = getHeight(row);\r\n        if (item.breakpoint) {\r\n          const { sx, sy, ex, ey } = item;\r\n          item.breakpoint = false;\r\n          rLine.push({ sx, sy, ex, ey });\r\n        }\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        this.rLine = rLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    return [\r\n      this.getBItem(),\r\n      this.getRItem(),\r\n    ];\r\n  }\r\n\r\n  getResult() {\r\n    const { bLine, rLine } = this;\r\n    return {\r\n      bLine, rLine,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LineIndex,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass LAngleBarOut {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n    this.maxWidth = 0;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cols } = table;\r\n    const width = cols.getWidth(col);\r\n    this.maxWidth += width;\r\n    if (!table.isAngleBarCell(row, col)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    if (angle < 0) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const size = table.getCellContentBoundOutWidth(row, col);\r\n    if (size === 0 || size > this.maxWidth) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LAngleBarOut,\r\n};\r\n","import { XLineIteratorItem } from '../XLineIteratorItem';\r\nimport { XLineIteratorFilter } from '../XLineIteratorFilter';\r\nimport { AngleBarInRow } from '../linefilters/anglebarinrow/AngleBarInRow';\r\nimport { BBorderShow } from '../linefilters/borderdisplay/BBorderShow';\r\nimport { AngleBarShow } from '../linefilters/anglebardisplay/AngleBarShow';\r\nimport { BBorderPriority } from '../linefilters/borderpriority/BBorderPriority';\r\nimport { MergeBNullEdge } from '../linefilters/mergenulledge/MergeBNullEdge';\r\nimport { TBorderShow } from '../linefilters/borderdisplay/TBorderShow';\r\nimport { TBorderPriority } from '../linefilters/borderpriority/TBorderPriority';\r\nimport { MergeTNullEdge } from '../linefilters/mergenulledge/MergeTNullEdge';\r\nimport { RBorderShow } from '../linefilters/borderdisplay/RBorderShow';\r\nimport { RBorderPriority } from '../linefilters/borderpriority/RBorderPriority';\r\nimport { MergeRNullEdge } from '../linefilters/mergenulledge/MergeRNullEdge';\r\nimport { LBorderShow } from '../linefilters/borderdisplay/LBorderShow';\r\nimport { LBorderPriority } from '../linefilters/borderpriority/LBorderPriority';\r\nimport { MergeLNullEdge } from '../linefilters/mergenulledge/MergeLNullEdge';\r\nimport { LAngleBarOut } from '../linefilters/anglebarout/LAngleBarOut';\r\n\r\nclass AngleBarLOut {\r\n\r\n  constructor({\r\n    table, bx = 0, by = 0,\r\n  }) {\r\n    this.table = table;\r\n    this.lLine = [];\r\n    this.tLine = [];\r\n    this.rLine = [];\r\n    this.bLine = [];\r\n    this.bx = bx;\r\n    this.by = by;\r\n  }\r\n\r\n  offsetX({\r\n    sx, ex, row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    if (angle > 0) {\r\n      sx += cell.leftSdistWidth;\r\n      ex += cell.leftSdistWidth;\r\n    } else {\r\n      sx -= cell.rightSdistWidth;\r\n      ex -= cell.rightSdistWidth;\r\n    }\r\n    return {\r\n      osx: sx,\r\n      oex: ex,\r\n    };\r\n  }\r\n\r\n  getBItem() {\r\n    const { bx, by, table } = this;\r\n    const { cols, rows, cells } = table;\r\n    const bLine = [];\r\n    const bRow = {};\r\n    return new XLineIteratorItem({\r\n      newRow: ({ row, y }) => {\r\n        const height = rows.getHeight(row);\r\n        bRow.sx = bx;\r\n        bRow.sy = by + y + height;\r\n        bRow.ex = bRow.sx;\r\n        bRow.ey = bRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new BBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new BBorderPriority(table),\r\n          new MergeBNullEdge(table),\r\n          new LAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        bRow.ex += width;\r\n        const { sx, sy, ex, ey } = bRow;\r\n        bLine.push({ sx, sy, ex, ey, row, col, borderAttr });\r\n        bRow.sx = bRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        bRow.sx = bRow.ex + width;\r\n        bRow.ex = bRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.bLine = bLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getTItem() {\r\n    const { table, bx, by } = this;\r\n    const { cols, cells } = table;\r\n    const tLine = [];\r\n    const tRow = {};\r\n    return new XLineIteratorItem({\r\n      newRow: ({ y }) => {\r\n        tRow.sx = bx;\r\n        tRow.sy = by + y;\r\n        tRow.ex = tRow.sx;\r\n        tRow.ey = tRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new TBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new TBorderPriority(table),\r\n          new MergeTNullEdge(table),\r\n          new LAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        tRow.ex += width;\r\n        const { sx, sy, ex, ey } = tRow;\r\n        const { osx, oex } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        tLine.push({ sx: osx, sy, ex: oex, ey, row, col, borderAttr });\r\n        tRow.sx = tRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        tRow.sx = tRow.ex + width;\r\n        tRow.ex = tRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.tLine = tLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getRItem() {\r\n    const { bx, by, table } = this;\r\n    const { cols, rows, cells } = table;\r\n    const rCols = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const width = cols.getWidth(col);\r\n        const sx = bx + x + width;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const rLine = [];\r\n        rCols[col] = { sx, sy, ex, ey, rLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new RBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new RBorderPriority(table),\r\n          new MergeRNullEdge(table),\r\n          new LAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const cell = cells.getCell(row, col);\r\n        const item = rCols[col];\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, rLine } = item;\r\n        const { osx } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        rLine.push({ sx: osx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = rCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let rLine = [];\r\n        for (let idx = 0; idx < rCols.length; idx++) {\r\n          const item = rCols[idx];\r\n          if (item) {\r\n            rLine = rLine.concat(item.rLine);\r\n          }\r\n        }\r\n        this.rLine = rLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getLItem() {\r\n    const { bx, by, table } = this;\r\n    const { rows, cells } = table;\r\n    const lCols = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const sx = bx + x;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const lLine = [];\r\n        lCols[col] = { sx, sy, ex, ey, lLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new LBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new LBorderPriority(table),\r\n          new MergeLNullEdge(table),\r\n          new LAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const item = lCols[col];\r\n        const cell = cells.getCell(row, col);\r\n        const height = rows.getHeight(row);\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, lLine } = item;\r\n        const { osx } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        lLine.push({ sx: osx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = lCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let lLine = [];\r\n        for (let idx = 0; idx < lCols.length; idx++) {\r\n          const item = lCols[idx];\r\n          if (item) {\r\n            lLine = lLine.concat(item.lLine);\r\n          }\r\n        }\r\n        this.lLine = lLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    return [\r\n      this.getBItem(),\r\n      this.getTItem(),\r\n      this.getRItem(),\r\n      this.getLItem(),\r\n    ];\r\n  }\r\n\r\n  getResult() {\r\n    const { rLine, bLine, lLine, tLine } = this;\r\n    return {\r\n      rLine, bLine, lLine, tLine,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBarLOut,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass RAngleBarOut {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n    this.maxWidth = 0;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cols } = table;\r\n    const width = cols.getWidth(col);\r\n    this.maxWidth += width;\r\n    if (!table.isAngleBarCell(row, col)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    if (angle > 0) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const size = table.getCellContentBoundOutWidth(row, col);\r\n    if (size === 0 || size > this.maxWidth) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RAngleBarOut,\r\n};\r\n","import { XLineIteratorItem } from '../XLineIteratorItem';\r\nimport { XLineIteratorFilter } from '../XLineIteratorFilter';\r\nimport { AngleBarInRow } from '../linefilters/anglebarinrow/AngleBarInRow';\r\nimport { BBorderShow } from '../linefilters/borderdisplay/BBorderShow';\r\nimport { AngleBarShow } from '../linefilters/anglebardisplay/AngleBarShow';\r\nimport { BBorderPriority } from '../linefilters/borderpriority/BBorderPriority';\r\nimport { MergeBNullEdge } from '../linefilters/mergenulledge/MergeBNullEdge';\r\nimport { TBorderShow } from '../linefilters/borderdisplay/TBorderShow';\r\nimport { TBorderPriority } from '../linefilters/borderpriority/TBorderPriority';\r\nimport { MergeTNullEdge } from '../linefilters/mergenulledge/MergeTNullEdge';\r\nimport { RBorderShow } from '../linefilters/borderdisplay/RBorderShow';\r\nimport { RBorderPriority } from '../linefilters/borderpriority/RBorderPriority';\r\nimport { MergeRNullEdge } from '../linefilters/mergenulledge/MergeRNullEdge';\r\nimport { LBorderShow } from '../linefilters/borderdisplay/LBorderShow';\r\nimport { LBorderPriority } from '../linefilters/borderpriority/LBorderPriority';\r\nimport { MergeLNullEdge } from '../linefilters/mergenulledge/MergeLNullEdge';\r\nimport { RAngleBarOut } from '../linefilters/anglebarout/RAngleBarOut';\r\n\r\nclass AngleBarROut {\r\n\r\n  constructor({\r\n    table, bx = 0, by = 0,\r\n  }) {\r\n    this.table = table;\r\n    this.lLine = [];\r\n    this.tLine = [];\r\n    this.rLine = [];\r\n    this.bLine = [];\r\n    this.bx = bx;\r\n    this.by = by;\r\n  }\r\n\r\n  offsetX({\r\n    sx, ex, row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    if (angle > 0) {\r\n      sx += cell.leftSdistWidth;\r\n      ex += cell.leftSdistWidth;\r\n    } else {\r\n      sx -= cell.rightSdistWidth;\r\n      ex -= cell.rightSdistWidth;\r\n    }\r\n    return {\r\n      osx: sx,\r\n      oex: ex,\r\n    };\r\n  }\r\n\r\n  getBItem() {\r\n    const { bx, by, table } = this;\r\n    const { cols, rows, cells } = table;\r\n    const bLine = [];\r\n    const bRow = {};\r\n    return new XLineIteratorItem({\r\n      newRow: ({ row, y }) => {\r\n        const height = rows.getHeight(row);\r\n        bRow.sx = bx;\r\n        bRow.sy = by + y + height;\r\n        bRow.ex = bRow.sx;\r\n        bRow.ey = bRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new BBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new BBorderPriority(table),\r\n          new MergeBNullEdge(table),\r\n          new RAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        bRow.ex += width;\r\n        const { sx, sy, ex, ey } = bRow;\r\n        bLine.push({ sx, sy, ex, ey, row, col, borderAttr });\r\n        bRow.sx = bRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        bRow.sx = bRow.ex + width;\r\n        bRow.ex = bRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.bLine = bLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getTItem() {\r\n    const { table, bx, by } = this;\r\n    const { cols, cells } = table;\r\n    const tLine = [];\r\n    const tRow = {};\r\n    return new XLineIteratorItem({\r\n      newRow: ({ y }) => {\r\n        tRow.sx = bx;\r\n        tRow.sy = by + y;\r\n        tRow.ex = tRow.sx;\r\n        tRow.ey = tRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new TBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new TBorderPriority(table),\r\n          new MergeTNullEdge(table),\r\n          new RAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        tRow.ex += width;\r\n        const { sx, sy, ex, ey } = tRow;\r\n        const { osx, oex } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        tLine.push({ sx: osx, sy, ex: oex, ey, row, col, borderAttr });\r\n        tRow.sx = tRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        tRow.sx = tRow.ex + width;\r\n        tRow.ex = tRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.tLine = tLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getRItem() {\r\n    const { bx, by, table } = this;\r\n    const { cols, rows, cells } = table;\r\n    const rCols = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const width = cols.getWidth(col);\r\n        const sx = bx + x + width;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const rLine = [];\r\n        rCols[col] = { sx, sy, ex, ey, rLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new RBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new RBorderPriority(table),\r\n          new MergeRNullEdge(table),\r\n          new RAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const cell = cells.getCell(row, col);\r\n        const item = rCols[col];\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, rLine } = item;\r\n        const { osx } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        rLine.push({ sx: osx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = rCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let rLine = [];\r\n        for (let idx = 0; idx < rCols.length; idx++) {\r\n          const item = rCols[idx];\r\n          if (item) {\r\n            rLine = rLine.concat(item.rLine);\r\n          }\r\n        }\r\n        this.rLine = rLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getLItem() {\r\n    const { bx, by, table } = this;\r\n    const { rows, cells } = table;\r\n    const lCols = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const sx = bx + x;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const lLine = [];\r\n        lCols[col] = { sx, sy, ex, ey, lLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new LBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new LBorderPriority(table),\r\n          new MergeLNullEdge(table),\r\n          new RAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const item = lCols[col];\r\n        const cell = cells.getCell(row, col);\r\n        const height = rows.getHeight(row);\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, lLine } = item;\r\n        const { osx } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        lLine.push({ sx: osx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = lCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let lLine = [];\r\n        for (let idx = 0; idx < lCols.length; idx++) {\r\n          const item = lCols[idx];\r\n          if (item) {\r\n            lLine = lLine.concat(item.lLine);\r\n          }\r\n        }\r\n        this.lLine = lLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    return [\r\n      this.getBItem(),\r\n      this.getTItem(),\r\n      this.getRItem(),\r\n      this.getLItem(),\r\n    ];\r\n  }\r\n\r\n  getResult() {\r\n    const { rLine, bLine, lLine, tLine } = this;\r\n    return {\r\n      rLine, bLine, lLine, tLine,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBarROut,\r\n};\r\n","import { XLineIteratorLoop } from './XLineIteratorLoop';\r\nimport { LineGrid } from './linegrids/LineGrid';\r\nimport { LineBorder } from './lineborder/LineBorder';\r\nimport { AngleBar } from './anglebar/AngleBar';\r\nimport { LineIndex } from './lineindex/LineIndex';\r\nimport { AngleBarLOut } from './anglebarout/AngleBarLOut';\r\nimport { AngleBarROut } from './anglebarout/AngleBarROut';\r\n\r\nclass XLinePlainGenerator {\r\n\r\n  static run({\r\n    optimize = true,\r\n    scrollView,\r\n    foldOnOff,\r\n    table,\r\n    by = 0,\r\n    bx = 0,\r\n    getHeight = ri => table.rows.getHeight(ri),\r\n    getWidth = ci => table.cols.getWidth(ci),\r\n    model = XLinePlainGenerator.MODEL.ALL,\r\n  }) {\r\n    switch (model) {\r\n      case XLinePlainGenerator.MODEL.BORDER: {\r\n        const bLine = new LineBorder({\r\n          table, bx, by, optimize,\r\n        });\r\n        const aLine = new AngleBar({\r\n          table, bx, by,\r\n        });\r\n        const xIterator = new XLineIteratorLoop({\r\n          items: bLine.getItems().concat(aLine.getItems()),\r\n          view: scrollView,\r\n          table,\r\n          foldOnOff,\r\n        });\r\n        xIterator.run();\r\n        const bResult = bLine.getResult();\r\n        const aResult = aLine.getResult();\r\n        return {\r\n          bResult, aResult,\r\n        };\r\n      }\r\n      case XLinePlainGenerator.MODEL.ALL: {\r\n        const bLine = new LineBorder({\r\n          table, bx, by, optimize,\r\n        });\r\n        const gLine = new LineGrid({\r\n          table, bx, by, getWidth, getHeight,\r\n        });\r\n        const aLine = new AngleBar({\r\n          table, bx, by,\r\n        });\r\n        const xIterator = new XLineIteratorLoop({\r\n          items: bLine.getItems().concat(gLine.getItems()).concat(aLine.getItems()),\r\n          foldOnOff,\r\n          table,\r\n          view: scrollView,\r\n        });\r\n        xIterator.run();\r\n        const gResult = gLine.getResult();\r\n        const bResult = bLine.getResult();\r\n        const aResult = aLine.getResult();\r\n        return {\r\n          gResult, bResult, aResult,\r\n        };\r\n      }\r\n      case XLinePlainGenerator.MODEL.INDEX: {\r\n        const iLine = new LineIndex({\r\n          bx, by, getWidth, getHeight,\r\n        });\r\n        const xIterator = new XLineIteratorLoop({\r\n          items: iLine.getItems(),\r\n          foldOnOff,\r\n          table,\r\n          view: scrollView,\r\n        });\r\n        xIterator.run();\r\n        const iResult = iLine.getResult();\r\n        return {\r\n          iResult,\r\n        };\r\n      }\r\n      case XLinePlainGenerator.MODEL.GRID: {\r\n        const gLine = new LineGrid({\r\n          table, bx, by, getWidth, getHeight,\r\n        });\r\n        const xIterator = new XLineIteratorLoop({\r\n          items: gLine.getItems(),\r\n          foldOnOff,\r\n          table,\r\n          view: scrollView,\r\n        });\r\n        xIterator.run();\r\n        const gResult = gLine.getResult();\r\n        return {\r\n          gResult,\r\n        };\r\n      }\r\n      case XLinePlainGenerator.MODEL.OUT_ANGLE_BAR_L: {\r\n        const alLine = new AngleBarLOut({\r\n          table, bx, by,\r\n        });\r\n        const xIterator = new XLineIteratorLoop({\r\n          items: alLine.getItems(),\r\n          foldOnOff,\r\n          table,\r\n          view: scrollView,\r\n        });\r\n        xIterator.run();\r\n        const alResult = alLine.getResult();\r\n        return {\r\n          alResult,\r\n        };\r\n      }\r\n      case XLinePlainGenerator.MODEL.OUT_ANGLE_BAR_R: {\r\n        const arLine = new AngleBarROut({\r\n          table, bx, by,\r\n        });\r\n        const xIterator = new XLineIteratorLoop({\r\n          items: arLine.getItems(),\r\n          foldOnOff,\r\n          table,\r\n          view: scrollView,\r\n        });\r\n        xIterator.run();\r\n        const arResult = arLine.getResult();\r\n        return {\r\n          arResult,\r\n        };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\nXLinePlainGenerator.MODEL = {\r\n  BORDER: 1,\r\n  ALL: 3,\r\n  GRID: 2,\r\n  INDEX: 4,\r\n  OUT_ANGLE_BAR_L: 5,\r\n  OUT_ANGLE_BAR_R: 6,\r\n};\r\n\r\nexport {\r\n  XLinePlainGenerator,\r\n};\r\n","class XMergesIndex {\r\n\r\n  constructor(xTableData) {\r\n    this.xTableData = xTableData;\r\n  }\r\n\r\n  set(ri, ci, point) {\r\n    const item = this.xTableData.getOrNew(ri, ci);\r\n    item.setMergeId(point);\r\n  }\r\n\r\n  get(ri, ci) {\r\n    const item = this.xTableData.get(ri, ci);\r\n    return item ? item.getMergeId() : undefined;\r\n  }\r\n\r\n  clear(ri, ci) {\r\n    const item = this.xTableData.get(ri, ci);\r\n    if (item) {\r\n      item.setMergeId(null);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMergesIndex,\r\n};\r\n","class XMergesNo {\r\n\r\n  constructor(no) {\r\n    this.no = no;\r\n  }\r\n\r\n  setNo(no) {\r\n    this.no = no;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMergesNo,\r\n};\r\n","import { XMergesNo } from './XMergesNo';\r\n\r\nclass XMergesNoRow {\r\n\r\n  constructor() {\r\n    this.nos = [];\r\n  }\r\n\r\n  getNo(no) {\r\n    if (this.nos[no]) { return this.nos[no]; }\r\n    this.nos[no] = new XMergesNo(no);\r\n    return this.nos[no];\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMergesNoRow,\r\n};\r\n","class XMergesItems {\r\n\r\n  constructor() {\r\n    this.recovery = [];\r\n    this.items = [];\r\n  }\r\n\r\n  get(point) {\r\n    return this.items[point];\r\n  }\r\n\r\n  add(item) {\r\n    const point = this.recovery.pop();\r\n    if (point) {\r\n      this.items[point] = item;\r\n      return point;\r\n    }\r\n    this.items.push(item);\r\n    return this.items.length - 1;\r\n  }\r\n\r\n  clear(point) {\r\n    this.items[point] = null;\r\n    this.recovery.push(point);\r\n  }\r\n\r\n  getItems() {\r\n    return this.items;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMergesItems,\r\n};\r\n","import { XMergesNo } from './XMergesNo';\r\n\r\nclass XMergesNoCol {\r\n\r\n  constructor() {\r\n    this.nos = [];\r\n  }\r\n\r\n  getNo(no) {\r\n    if (this.nos[no]) { return this.nos[no]; }\r\n    this.nos[no] = new XMergesNo(no);\r\n    return this.nos[no];\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMergesNoCol,\r\n};\r\n","class XMergesRange {\r\n\r\n  constructor(sri, sci, eri, eci, view) {\r\n    this.sri = sri;\r\n    this.sci = sci;\r\n    this.eri = eri;\r\n    this.eci = eci;\r\n    this.view = view;\r\n  }\r\n\r\n  getView() {\r\n    this.view.set(this.sri.no, this.sci.no, this.eri.no, this.eci.no);\r\n    return this.view;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMergesRange,\r\n};\r\n","import { XMergesIndex } from './XMergesIndex';\r\nimport { XMergesNoRow } from './XMergesNoRow';\r\nimport { XMergesItems } from './XMergesItems';\r\nimport { XMergesNoCol } from './XMergesNoCol';\r\nimport { XMergesRange } from './XMergesRange';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { RectRange } from '../tablebase/RectRange';\r\n\r\nclass XMerges {\r\n\r\n  constructor({\r\n    merges = [],\r\n    xTableData,\r\n    xIteratorBuilder,\r\n  }) {\r\n    this.xMergesNoRow = new XMergesNoRow();\r\n    this.xMergesNoCol = new XMergesNoCol();\r\n    this.xMergesIndex = new XMergesIndex(xTableData);\r\n    this.xMergesItems = new XMergesItems();\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n    merges.map(merge => RectRange.valueOf(merge)).forEach(view => this.add(view));\r\n  }\r\n\r\n  getIncludes(view, notify) {\r\n    view.each(this.xIteratorBuilder, (ri, ci) => {\r\n      const view = this.getFirstIncludes(ri, ci);\r\n      if (view) {\r\n        notify(view);\r\n      }\r\n    });\r\n  }\r\n\r\n  getFirstIncludes(ri, ci) {\r\n    const point = this.xMergesIndex.get(ri, ci);\r\n    if (PlainUtils.isUnDef(point)) {\r\n      return PlainUtils.Undef;\r\n    }\r\n    const view = this.xMergesItems.get(point);\r\n    if (PlainUtils.isUnDef(view)) {\r\n      return PlainUtils.Undef;\r\n    }\r\n    return this.xMergesItems.get(point).getView();\r\n  }\r\n\r\n  add(view) {\r\n    const sri = this.xMergesNoRow.getNo(view.sri);\r\n    const sci = this.xMergesNoCol.getNo(view.sci);\r\n    const eri = this.xMergesNoRow.getNo(view.eri);\r\n    const eci = this.xMergesNoCol.getNo(view.eci);\r\n    const point = this.xMergesItems.add(new XMergesRange(sri, sci, eri, eci, view));\r\n    view.each(this.xIteratorBuilder, (ri, ci) => {\r\n      this.xMergesIndex.set(ri, ci, point);\r\n    });\r\n  }\r\n\r\n  union(view) {\r\n    const { top, right, left, bottom } = view.brink();\r\n    let find = null;\r\n    // 上边扫描\r\n    top.each(this.xIteratorBuilder, (ri, ci) => {\r\n      const item = this.getFirstIncludes(ri, ci);\r\n      if (PlainUtils.isUnDef(item)) {\r\n        return true;\r\n      }\r\n      if (view.contains(item)) {\r\n        return true;\r\n      }\r\n      find = item;\r\n      return false;\r\n    });\r\n    if (find) {\r\n      return this.union(find.union(view));\r\n    }\r\n    // 右边扫描\r\n    right.each(this.xIteratorBuilder, (ri, ci) => {\r\n      const item = this.getFirstIncludes(ri, ci);\r\n      if (PlainUtils.isUnDef(item)) {\r\n        return true;\r\n      }\r\n      if (view.contains(item)) {\r\n        return true;\r\n      }\r\n      find = item;\r\n      return false;\r\n    });\r\n    if (find) {\r\n      return this.union(find.union(view));\r\n    }\r\n    // 左边扫描\r\n    left.each(this.xIteratorBuilder, (ri, ci) => {\r\n      const item = this.getFirstIncludes(ri, ci);\r\n      if (PlainUtils.isUnDef(item)) {\r\n        return true;\r\n      }\r\n      if (view.contains(item)) {\r\n        return true;\r\n      }\r\n      find = item;\r\n      return false;\r\n    });\r\n    if (find) {\r\n      return this.union(find.union(view));\r\n    }\r\n    // 底边扫描\r\n    bottom.each(this.xIteratorBuilder, (ri, ci) => {\r\n      const item = this.getFirstIncludes(ri, ci);\r\n      if (PlainUtils.isUnDef(item)) {\r\n        return true;\r\n      }\r\n      if (view.contains(item)) {\r\n        return true;\r\n      }\r\n      find = item;\r\n      return false;\r\n    });\r\n    if (find) {\r\n      return this.union(find.union(view));\r\n    }\r\n    return view;\r\n  }\r\n\r\n  delete(view) {\r\n    const point = this.xMergesIndex.get(view.sri, view.sci);\r\n    view.each(this.xIteratorBuilder, (ri, ci) => {\r\n      this.xMergesIndex.clear(ri, ci);\r\n    });\r\n    this.xMergesItems.clear(point);\r\n  }\r\n\r\n  getData() {\r\n    const data = [];\r\n    this.xMergesItems.getItems().forEach((item) => {\r\n      if (item) {\r\n        data.push(item.getView().toString());\r\n      }\r\n    });\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMerges,\r\n};\r\n","class XTableDataItem {\r\n\r\n  constructor(cell = null, mergeId = null) {\r\n    this.cell = cell;\r\n    this.mergeId = mergeId;\r\n  }\r\n\r\n  setCell(cell) {\r\n    this.cell = cell;\r\n  }\r\n\r\n  setMergeId(mergeId) {\r\n    this.mergeId = mergeId;\r\n  }\r\n\r\n  getCell() {\r\n    return this.cell;\r\n  }\r\n\r\n  getMergeId() {\r\n    return this.mergeId;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableDataItem,\r\n};\r\n","import { XTableDataItem } from './XTableDataItem';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { Cell } from './tablecell/Cell';\r\n\r\nclass XTableDataItems {\r\n\r\n  constructor(items = []) {\r\n    this.items = items;\r\n    this.canWrapAll = true;\r\n  }\r\n\r\n  wrap(line, ci) {\r\n    const ele = line[ci];\r\n    if (ele instanceof XTableDataItem) {\r\n      return ele;\r\n    }\r\n    const item = new XTableDataItem();\r\n    if (PlainUtils.isString(ele)) {\r\n      item.setCell(new Cell({ text: ele }));\r\n    } else {\r\n      item.setCell(new Cell(ele));\r\n    }\r\n    line[ci] = item;\r\n    return item;\r\n  }\r\n\r\n  wrapAll() {\r\n    const { canWrapAll } = this;\r\n    if (canWrapAll) {\r\n      const { items } = this;\r\n      this.canWrapAll = false;\r\n      for (let ri = 0, riLen = items.length; ri < riLen; ri++) {\r\n        const line = items[ri];\r\n        if (line) {\r\n          for (let ci = 0, ciLen = line.length; ci < ciLen; ci++) {\r\n            const item = line[ci];\r\n            if (item) {\r\n              this.wrap(line, ci);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  set(ri, ci, item) {\r\n    const line = this.items[ri] || [];\r\n    line[ci] = item;\r\n    this.items[ri] = line;\r\n  }\r\n\r\n  getItems() {\r\n    return this.items;\r\n  }\r\n\r\n  get(ri, ci) {\r\n    const line = this.items[ri];\r\n    return line && line[ci]\r\n      ? this.wrap(line, ci)\r\n      : undefined;\r\n  }\r\n\r\n  setOrNew(ri, ci, item) {\r\n    const line = this.items[ri];\r\n    if (line) {\r\n      line[ci] = item;\r\n    }\r\n  }\r\n\r\n  getOrNew(ri, ci) {\r\n    const find = this.get(ri, ci);\r\n    if (find) {\r\n      return find;\r\n    }\r\n    const item = new XTableDataItem();\r\n    this.set(ri, ci, item);\r\n    return item;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableDataItems,\r\n};\r\n","class Path {\r\n\r\n  constructor({\r\n    points = [],\r\n  }) {\r\n    this.points = points;\r\n  }\r\n\r\n  set({\r\n    points = [],\r\n  }) {\r\n    this.points = points;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Path,\r\n};\r\n","class Point {\r\n\r\n  constructor(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  setX(x) {\r\n    this.x = x;\r\n  }\r\n\r\n  setY(y) {\r\n    this.y = y;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Point,\r\n};\r\n","import { PlainUtils } from '../../utils/PlainUtils';\nimport { Rows } from './tablebase/Rows';\nimport { Cols } from './tablebase/Cols';\nimport { SCROLL_TYPE } from './tablebase/Scroll';\nimport { Widget } from '../../libs/Widget';\nimport { cssPrefix } from '../../const/Constant';\nimport { XDraw } from '../../canvas/XDraw';\nimport { Line } from '../../canvas/Line';\nimport { Grid } from '../../canvas/Grid';\nimport { Crop } from '../../canvas/Crop';\nimport { Rect } from '../../canvas/Rect';\nimport { Box } from '../../canvas/Box';\nimport { RectRange } from './tablebase/RectRange';\nimport { Cells } from './tablecell/Cells';\nimport { Scale, ScaleAdapter } from './tablebase/Scale';\nimport { Code } from './tablebase/Code';\nimport { Text } from './tablebase/Text';\nimport { STYLE_BREAK_LOOP, StyleCellsHelper } from './helper/StyleCellsHelper';\nimport { TEXT_BREAK_LOOP, TextCellsHelper } from './helper/TextCellsHelper';\nimport { XTableHistoryAreaView } from './XTableHistoryAreaView';\nimport { OperateCellsHelper } from './helper/OperateCellsHelper';\nimport { BaseFont } from '../../canvas/font/BaseFont';\nimport { VIEW_MODE, XTableScrollView } from './XTableScrollView';\nimport { XFixedMeasure } from './tablebase/XFixedMeasure';\nimport { FixedCellIcon } from './cellicon/FixedCellIcon';\nimport { StaticCellIcon } from './cellicon/StaticCellIcon';\nimport { XLinePlainGenerator } from './xlinehandle/XLinePlainGenerator';\nimport { LBorderShow } from './xlinehandle/linefilters/borderdisplay/LBorderShow';\nimport { XLineIteratorFilter } from './xlinehandle/XLineIteratorFilter';\nimport { RBorderShow } from './xlinehandle/linefilters/borderdisplay/RBorderShow';\nimport { TBorderShow } from './xlinehandle/linefilters/borderdisplay/TBorderShow';\nimport { BBorderShow } from './xlinehandle/linefilters/borderdisplay/BBorderShow';\nimport { XMerges } from './xmerges/XMerges';\nimport { XTableDataItems } from './XTableDataItems';\nimport { Path } from '../../canvas/Path';\nimport { Point } from '../../canvas/Point';\nimport { RTCosKit, RTSinKit } from '../../canvas/RTFunction';\n\nconst RENDER_MODE = {\n  SCROLL: Symbol('scroll'),\n  RENDER: Symbol('render'),\n  SCALE: Symbol('scale'),\n};\n\n//  ============================== 表格细节元素绘制 =============================\n\nclass XTableFrozenFullRect {\n\n  constructor(table) {\n    this.table = table;\n  }\n\n  draw() {\n    const dx = 0;\n    const dy = 0;\n    const { table } = this;\n    const { draw } = table;\n    const { indexGrid } = table;\n    const { index } = table;\n    const indexHeight = index.getHeight();\n    const indexWidth = index.getWidth();\n    draw.save();\n    draw.offset(dx, dy);\n    // 绘制背景\n    draw.attr({\n      fillStyle: '#f4f5f8',\n    });\n    draw.fillRect(0, 0, index.getWidth(), indexHeight);\n    draw.offset(0, 0);\n    // 绘制边框\n    indexGrid.horizonLine(0, indexHeight, indexWidth, indexHeight);\n    indexGrid.verticalLine(indexWidth, dy, indexWidth, indexHeight);\n    draw.restore();\n  }\n\n  render() {\n    const { table } = this;\n    const renderMode = table.getRenderMode();\n    if (renderMode === RENDER_MODE.RENDER || renderMode === RENDER_MODE.SCALE) {\n      this.draw();\n    }\n  }\n\n}\n\nclass XTableFixedBar {\n\n  constructor(table, {\n    width, height, background, buttonColor,\n  }) {\n    this.table = table;\n    this.height = height;\n    this.width = width;\n    this.background = background;\n    this.buttonColor = buttonColor;\n  }\n\n  drawBar() {\n    const {\n      table, height, width, background,\n    } = this;\n    const {\n      xFixedView, draw, index, xFixedMeasure,\n    } = table;\n    if (xFixedView.hasFixedTop()) {\n      const rpxHeight = XDraw.srcTransformStylePx(height);\n      const width = table.visualWidth();\n      const x = index.getWidth();\n      const y = xFixedMeasure.getHeight() + index.getHeight() - rpxHeight / 2;\n      draw.attr({ fillStyle: background });\n      draw.fillRect(x, y, width, rpxHeight);\n    }\n    if (xFixedView.hasFixedLeft()) {\n      const height = table.visualHeight();\n      const rpxWidth = XDraw.srcTransformStylePx(width);\n      const x = xFixedMeasure.getWidth() + index.getWidth() - rpxWidth / 2;\n      const y = index.getHeight();\n      draw.attr({ fillStyle: background });\n      draw.fillRect(x, y, rpxWidth, height);\n    }\n  }\n\n  drawButton() {\n    const {\n      table, height, width, buttonColor,\n    } = this;\n    const {\n      xFixedView, draw, index, xFixedMeasure,\n    } = table;\n    if (xFixedView.hasFixedTop()) {\n      const rpxHeight = XDraw.srcTransformStylePx(height);\n      const width = index.getWidth();\n      const x = 0;\n      const y = xFixedMeasure.getHeight() + index.getHeight() - rpxHeight / 2;\n      draw.attr({ fillStyle: buttonColor });\n      draw.fillRect(x, y, width, rpxHeight);\n    }\n    if (xFixedView.hasFixedLeft()) {\n      const height = index.getHeight();\n      const rpxWidth = XDraw.srcTransformStylePx(width);\n      const x = xFixedMeasure.getWidth() + index.getWidth() - rpxWidth / 2;\n      const y = 0;\n      draw.attr({ fillStyle: buttonColor });\n      draw.fillRect(x, y, rpxWidth, height);\n    }\n  }\n\n  render() {\n    this.drawBar();\n    this.drawButton();\n  }\n\n}\n\n// =============================== 表格绘制抽象类 ==============================\n\nclass XTableUI {\n\n  /**\n   * XTableUI\n   * @param table\n   */\n  constructor(table) {\n    this.table = table;\n    this.width = null;\n    this.height = null;\n    this.x = null;\n    this.y = null;\n    this.drawX = null;\n    this.drawY = null;\n    this.mapOriginX = null;\n    this.mapOriginY = null;\n    this.mapTargetX = null;\n    this.mapTargetY = null;\n    this.mapWidth = null;\n    this.mapHeight = null;\n    this.fullScrollView = null;\n    this.scrollView = null;\n    this.borderView = null;\n    this.borderX = null;\n    this.borderY = null;\n    this.viewMode = null;\n  }\n\n  /**\n   * 完整的滚动区域\n   * @returns {RectRange}\n   */\n  getFullScrollView() {\n    throw new TypeError('getFullScrollView child impl');\n  }\n\n  /**\n   * 滚动区域\n   * 网格和背景颜色的绘制区域\n   * @returns {RectRange}\n   */\n  getScrollView() {\n    throw new TypeError('getScrollView child impl');\n  }\n\n  /**\n   * 边框&网格绘制区域\n   * @returns {RectRange}\n   */\n  getLineView() {\n    if (PlainUtils.isNotUnDef(this.borderView)) {\n      return this.borderView.clone();\n    }\n    const { table } = this;\n    const { cols, rows } = table;\n    const renderMode = table.getRenderMode();\n    const viewMode = this.getViewMode();\n    const scrollView = this.getScrollView();\n    if (viewMode === VIEW_MODE.CHANGE_ADD && renderMode === RENDER_MODE.SCROLL) {\n      const { scroll } = table;\n      switch (scroll.type) {\n        case SCROLL_TYPE.V_TOP: {\n          scrollView.eri += 1;\n          scrollView.h = rows.rectRangeSumHeight(scrollView);\n          break;\n        }\n        case SCROLL_TYPE.V_BOTTOM: {\n          scrollView.sri -= 1;\n          scrollView.h = rows.rectRangeSumHeight(scrollView);\n          break;\n        }\n        case SCROLL_TYPE.H_RIGHT: {\n          scrollView.sci -= 1;\n          scrollView.w = cols.rectRangeSumWidth(scrollView);\n          break;\n        }\n        case SCROLL_TYPE.H_LEFT: {\n          scrollView.eci += 1;\n          scrollView.w = cols.rectRangeSumWidth(scrollView);\n          break;\n        }\n      }\n    }\n    this.borderView = scrollView;\n    return scrollView.clone();\n  }\n\n  /**\n   * 绘制贴图的目标X坐标\n   */\n  getMapTargetX() {\n    if (PlainUtils.isNumber(this.mapTargetX)) {\n      return this.mapTargetX;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { scroll } = table;\n    const x = this.getX();\n    let mapTargetX = 0;\n    switch (scroll.type) {\n      case SCROLL_TYPE.H_LEFT: {\n        const enterView = xTableAreaView.getEnterView();\n        mapTargetX = enterView.w;\n        break;\n      }\n      case SCROLL_TYPE.H_RIGHT: {\n        mapTargetX = 0;\n        break;\n      }\n    }\n    mapTargetX = x + mapTargetX;\n    this.mapTargetX = mapTargetX;\n    return mapTargetX;\n  }\n\n  /**\n   * 绘制贴图的目标X坐标\n   */\n  getMapTargetY() {\n    if (PlainUtils.isNumber(this.mapTargetY)) {\n      return this.mapTargetY;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { scroll } = table;\n    const y = this.getY();\n    let mapTargetY = 0;\n    switch (scroll.type) {\n      case SCROLL_TYPE.V_TOP: {\n        const enterView = xTableAreaView.getEnterView();\n        mapTargetY = enterView.h;\n        break;\n      }\n      case SCROLL_TYPE.V_BOTTOM: {\n        mapTargetY = 0;\n        break;\n      }\n    }\n    mapTargetY = y + mapTargetY;\n    this.mapTargetY = mapTargetY;\n    return mapTargetY;\n  }\n\n  /**\n   * 绘制贴图的原始X坐标\n   */\n  getMapOriginX() {\n    if (PlainUtils.isNumber(this.mapOriginX)) {\n      return this.mapOriginX;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { scroll } = table;\n    const x = this.getX();\n    let mapOriginX = 0;\n    switch (scroll.type) {\n      case SCROLL_TYPE.H_LEFT: {\n        mapOriginX = 0;\n        break;\n      }\n      case SCROLL_TYPE.H_RIGHT: {\n        const leaveView = xTableAreaView.getLeaveView();\n        mapOriginX = leaveView.w;\n        break;\n      }\n    }\n    mapOriginX = x + mapOriginX;\n    this.mapOriginX = mapOriginX;\n    return mapOriginX;\n  }\n\n  /**\n   * 绘制贴图的原始Y坐标\n   */\n  getMapOriginY() {\n    if (PlainUtils.isNumber(this.mapOriginY)) {\n      return this.mapOriginY;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { scroll } = table;\n    const y = this.getY();\n    let mapOriginY = 0;\n    switch (scroll.type) {\n      case SCROLL_TYPE.V_TOP: {\n        mapOriginY = 0;\n        break;\n      }\n      case SCROLL_TYPE.V_BOTTOM: {\n        const leaveView = xTableAreaView.getLeaveView();\n        mapOriginY = leaveView.h;\n        break;\n      }\n    }\n    mapOriginY = y + mapOriginY;\n    this.mapOriginY = mapOriginY;\n    return mapOriginY;\n  }\n\n  /**\n   * 绘制边框&网格的X坐标\n   */\n  getLineX() {\n    if (PlainUtils.isNumber(this.borderX)) {\n      return this.borderX;\n    }\n    const { table } = this;\n    const x = this.getX();\n    if (table.getRenderMode() === RENDER_MODE.RENDER) {\n      this.borderX = x;\n      return x;\n    }\n    if (table.getRenderMode() === RENDER_MODE.SCALE) {\n      this.borderX = x;\n      return x;\n    }\n    if (this.getViewMode() === VIEW_MODE.BOUND_OUT) {\n      this.borderX = x;\n      return x;\n    }\n    if (this.getViewMode() === VIEW_MODE.CHANGE_NOT) {\n      this.borderX = x;\n      return x;\n    }\n    const { scroll } = table;\n    let borderX = 0;\n    switch (scroll.type) {\n      case SCROLL_TYPE.H_RIGHT: {\n        const borderView = this.getLineView();\n        const fullScrollView = this.getFullScrollView();\n        borderX = fullScrollView.w - borderView.w;\n        break;\n      }\n      case SCROLL_TYPE.H_LEFT: {\n        borderX = 0;\n        break;\n      }\n    }\n    borderX = x + borderX;\n    this.borderX = borderX;\n    return borderX;\n  }\n\n  /**\n   * 绘制边框 & 网格的Y坐标\n   */\n  getLineY() {\n    if (PlainUtils.isNumber(this.borderY)) {\n      return this.borderY;\n    }\n    const { table } = this;\n    const y = this.getY();\n    if (table.getRenderMode() === RENDER_MODE.RENDER) {\n      this.borderY = y;\n      return y;\n    }\n    if (table.getRenderMode() === RENDER_MODE.SCALE) {\n      this.borderY = y;\n      return y;\n    }\n    if (this.getViewMode() === VIEW_MODE.BOUND_OUT) {\n      this.borderY = y;\n      return y;\n    }\n    if (this.getViewMode() === VIEW_MODE.CHANGE_NOT) {\n      this.borderY = y;\n      return y;\n    }\n    const { scroll } = table;\n    let borderY = 0;\n    switch (scroll.type) {\n      case SCROLL_TYPE.V_BOTTOM: {\n        const borderView = this.getLineView();\n        const fullScrollView = this.getFullScrollView();\n        borderY = fullScrollView.h - borderView.h;\n        break;\n      }\n      case SCROLL_TYPE.V_TOP: {\n        borderY = 0;\n        break;\n      }\n    }\n    borderY = y + borderY;\n    this.borderY = borderY;\n    return borderY;\n  }\n\n  /**\n   * 绘制区域高度\n   * @returns {number}\n   */\n  getHeight() {\n    throw new TypeError('getHeight child impl');\n  }\n\n  /**\n   * 绘制区域宽度\n   * @returns {number}\n   */\n  getWidth() {\n    throw new TypeError('getWidth child impl');\n  }\n\n  /**\n   * 绘制内容的X坐标\n   */\n  getDrawX() {\n    if (PlainUtils.isNumber(this.drawX)) {\n      return this.drawX;\n    }\n    const { table } = this;\n    const x = this.getX();\n    if (table.getRenderMode() === RENDER_MODE.RENDER) {\n      this.drawX = x;\n      return x;\n    }\n    if (table.getRenderMode() === RENDER_MODE.SCALE) {\n      this.drawX = x;\n      return x;\n    }\n    if (this.getViewMode() === VIEW_MODE.BOUND_OUT) {\n      this.drawX = x;\n      return x;\n    }\n    if (this.getViewMode() === VIEW_MODE.CHANGE_NOT) {\n      this.drawX = x;\n      return x;\n    }\n    const { scroll } = table;\n    const scrollView = this.getScrollView();\n    const fullScrollView = this.getFullScrollView();\n    let drawX = 0;\n    switch (scroll.type) {\n      case SCROLL_TYPE.H_RIGHT: {\n        drawX = fullScrollView.w - scrollView.w;\n        break;\n      }\n      case SCROLL_TYPE.H_LEFT: {\n        drawX = 0;\n        break;\n      }\n    }\n    drawX = x + drawX;\n    this.drawX = drawX;\n    return drawX;\n  }\n\n  /**\n   * 绘制内容的Y坐标\n   */\n  getDrawY() {\n    if (PlainUtils.isNumber(this.drawY)) {\n      return this.drawY;\n    }\n    const { table } = this;\n    const y = this.getY();\n    if (table.getRenderMode() === RENDER_MODE.RENDER) {\n      this.drawY = y;\n      return y;\n    }\n    if (table.getRenderMode() === RENDER_MODE.SCALE) {\n      this.drawY = y;\n      return y;\n    }\n    if (this.getViewMode() === VIEW_MODE.BOUND_OUT) {\n      this.drawY = y;\n      return y;\n    }\n    if (this.getViewMode() === VIEW_MODE.CHANGE_NOT) {\n      this.drawY = y;\n      return y;\n    }\n    const { scroll } = table;\n    const scrollView = this.getScrollView();\n    const fullScrollView = this.getFullScrollView();\n    let drawY = 0;\n    switch (scroll.type) {\n      case SCROLL_TYPE.V_BOTTOM: {\n        drawY = fullScrollView.h - scrollView.h;\n        break;\n      }\n      case SCROLL_TYPE.V_TOP: {\n        drawY = 0;\n        break;\n      }\n    }\n    drawY = y + drawY;\n    this.drawY = drawY;\n    return drawY;\n  }\n\n  /**\n   * 绘制区域的X坐标\n   * @returns {number}\n   */\n  getX() {\n    throw new TypeError('getX child impl');\n  }\n\n  /**\n   * 绘制区域Y坐标\n   * @returns {number}\n   */\n  getY() {\n    throw new TypeError('getY child impl');\n  }\n\n  /**\n   * 视图模式\n   * @return {symbol}\n   */\n  getViewMode() {\n    throw new TypeError('getViewMode child impl');\n  }\n\n  /**\n   * 重置变量区\n   */\n  reset() {\n    this.width = null;\n    this.height = null;\n    this.x = null;\n    this.y = null;\n    this.drawX = null;\n    this.drawY = null;\n    this.mapOriginX = null;\n    this.mapOriginY = null;\n    this.mapTargetX = null;\n    this.mapTargetY = null;\n    this.mapWidth = null;\n    this.mapHeight = null;\n    this.fullScrollView = null;\n    this.scrollView = null;\n    this.borderView = null;\n    this.borderX = null;\n    this.borderY = null;\n    this.viewMode = null;\n  }\n\n  /**\n   * 绘制贴图的高度\n   * @returns {number}\n   */\n  getMapHeight() {\n    if (PlainUtils.isNumber(this.mapHeight)) {\n      return this.mapHeight;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { scroll } = table;\n    let mapHeight = this.getHeight();\n    switch (scroll.type) {\n      case SCROLL_TYPE.V_BOTTOM: {\n        const leaveView = xTableAreaView.getLeaveView();\n        mapHeight -= leaveView.h;\n        break;\n      }\n      case SCROLL_TYPE.V_TOP: {\n        const enterView = xTableAreaView.getEnterView();\n        mapHeight -= enterView.h;\n        break;\n      }\n    }\n    this.mapHeight = mapHeight;\n    return mapHeight;\n  }\n\n  /**\n   * 绘制贴图的宽度\n   * @returns {number}\n   */\n  getMapWidth() {\n    if (PlainUtils.isNumber(this.mapWidth)) {\n      return this.mapWidth;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { scroll } = table;\n    let mapWidth = this.getWidth();\n    switch (scroll.type) {\n      case SCROLL_TYPE.H_RIGHT: {\n        const leaveView = xTableAreaView.getLeaveView();\n        mapWidth -= leaveView.w;\n        break;\n      }\n      case SCROLL_TYPE.H_LEFT: {\n        const enterView = xTableAreaView.getEnterView();\n        mapWidth -= enterView.w;\n        break;\n      }\n    }\n    this.mapWidth = mapWidth;\n    return mapWidth;\n  }\n\n  /**\n   * 清空重新绘制区域\n   */\n  drawClear() {\n    const { table } = this;\n    const {\n      scroll, draw, settings,\n    } = table;\n    const viewMode = this.getViewMode();\n    const renderMode = table.getRenderMode();\n    const dx = this.getDrawX();\n    const dy = this.getDrawY();\n    draw.attr({\n      fillStyle: settings.table.background,\n    });\n    if (renderMode === RENDER_MODE.SCROLL) {\n      switch (viewMode) {\n        case VIEW_MODE.CHANGE_NOT:\n        case VIEW_MODE.STATIC:\n        case VIEW_MODE.BOUND_OUT: {\n          const height = this.getHeight();\n          const width = this.getWidth();\n          draw.fillRect(dx, dy, width, height);\n          break;\n        }\n        case VIEW_MODE.CHANGE_ADD: {\n          switch (scroll.type) {\n            case SCROLL_TYPE.V_BOTTOM: {\n              const fullScrollView = this.getFullScrollView();\n              const scrollView = this.getScrollView();\n              const height = table.visualHeight() - (fullScrollView.h - scrollView.h);\n              const width = this.getWidth();\n              draw.fillRect(dx, dy, width, height);\n              break;\n            }\n            case SCROLL_TYPE.V_TOP: {\n              const scrollView = this.getScrollView();\n              const height = scrollView.h;\n              const width = this.getWidth();\n              draw.fillRect(dx, dy, width, height);\n              break;\n            }\n            case SCROLL_TYPE.H_LEFT: {\n              const scrollView = this.getScrollView();\n              const height = this.getHeight();\n              const width = scrollView.w;\n              draw.fillRect(dx, dy, width, height);\n              break;\n            }\n            case SCROLL_TYPE.H_RIGHT: {\n              const fullScrollView = this.getFullScrollView();\n              const scrollView = this.getScrollView();\n              const height = this.getHeight();\n              const width = table.visualWidth() - (fullScrollView.w - scrollView.w);\n              draw.fillRect(dx, dy, width, height);\n              break;\n            }\n          }\n          break;\n        }\n      }\n    } else if (RENDER_MODE.RENDER) {\n      const height = this.getHeight();\n      const width = this.getWidth();\n      draw.fillRect(dx, dy, width, height);\n    }\n  }\n\n  /**\n   * 绘制贴图\n   */\n  drawMap() {\n    const { table } = this;\n    const renderMode = table.getRenderMode();\n    const viewMode = this.getViewMode();\n    if (viewMode === VIEW_MODE.CHANGE_ADD && renderMode === RENDER_MODE.SCROLL) {\n      const { draw } = table;\n      const mapWidth = this.getMapWidth();\n      const mapHeight = this.getMapHeight();\n      const ox = this.getMapOriginX();\n      const oy = this.getMapOriginY();\n      const tx = this.getMapTargetX();\n      const ty = this.getMapTargetY();\n      draw.copyImage(ox, oy, mapWidth, mapHeight,\n        tx, ty, mapWidth, mapHeight);\n    }\n  }\n\n}\n\nclass XTableContentUI extends XTableUI {\n\n  /**\n   * 加载绘制静态小图标\n   * @param rect\n   * @param ri\n   * @param ci\n   * @param view\n   */\n  drawStaticXIcon(rect, ri, ci, view) {\n    const { table } = this;\n    const { draw, staticCellIcon } = table;\n    const icons = staticCellIcon.getIcon(ri, ci);\n    if (icons) {\n      const x = this.getX();\n      const y = this.getY();\n      rect.x += x;\n      rect.y += y;\n      for (let i = 0; i < icons.length; i += 1) {\n        const icon = icons[i];\n        icon.loadImage({\n          load: () => {\n            if (view.equals(this.getFullScrollView())) {\n              icon.drawIcon({\n                rect,\n                draw,\n              });\n            }\n          },\n          sync: () => {\n            icon.drawIcon({\n              rect,\n              draw,\n            });\n          },\n        });\n      }\n    }\n  }\n\n  /**\n   * 加载绘制固定小图标\n   * @param rect\n   * @param ri\n   * @param ci\n   * @param view\n   */\n  drawFixedXIcon(rect, ri, ci, view) {\n    const { table } = this;\n    const { draw, fixedCellIcon } = table;\n    const icons = fixedCellIcon.getIcon(ri, ci);\n    if (icons) {\n      const x = this.getX();\n      const y = this.getY();\n      rect.x += x;\n      rect.y += y;\n      for (let i = 0; i < icons.length; i += 1) {\n        const icon = icons[i];\n        icon.loadImage({\n          load: () => {\n            if (view.equals(this.getFullScrollView())) {\n              icon.drawIcon({\n                rect,\n                draw,\n              });\n            }\n          },\n          sync: () => {\n            icon.drawIcon({\n              rect,\n              draw,\n            });\n          },\n        });\n      }\n    }\n  }\n\n  /**\n   * 加载绘制单元格小图标\n   * @param rect\n   * @param cell\n   * @param view\n   */\n  drawCellXIcon(rect, cell, view) {\n    const { table } = this;\n    const { icons } = cell;\n    const { draw } = table;\n    const x = this.getX();\n    const y = this.getY();\n    rect.x += x;\n    rect.y += y;\n    for (let i = 0; i < icons.length; i += 1) {\n      const icon = icons[i];\n      icon.loadImage({\n        load: () => {\n          if (view.equals(this.getFullScrollView())) {\n            icon.drawIcon({\n              rect,\n              draw,\n            });\n          }\n        },\n        sync: () => {\n          icon.drawIcon({\n            rect,\n            draw,\n          });\n        },\n      });\n    }\n  }\n\n  /**\n   * 绘制单元格图标\n   */\n  drawXIcon() {\n    const { table } = this;\n    const { styleCellsHelper } = table;\n    const scrollView = this.getFullScrollView();\n    styleCellsHelper.getCellByViewRange({\n      view: scrollView,\n      cellsINCallback: (row, col, cell, rect) => {\n        const staticRect = rect.clone();\n        const cellRect = rect.clone();\n        this.drawStaticXIcon(staticRect, row, col, scrollView);\n        this.drawCellXIcon(cellRect, cell, scrollView);\n      },\n      loopINCallback: (row, col, rect) => {\n        const fixedRect = rect.clone();\n        this.drawFixedXIcon(fixedRect, row, col, scrollView);\n      },\n      mergeCallback: (row, col, cell, rect, merge) => {\n        const { sri, sci } = merge;\n        const staticRect = rect.clone();\n        const cellRect = rect.clone();\n        this.drawStaticXIcon(staticRect, sri, sci, scrollView);\n        this.drawCellXIcon(cellRect, cell, scrollView);\n      },\n    });\n  }\n\n  /**\n   * 绘制越界文本\n   */\n  drawBoundOutXFont() {\n    const scrollView = this.getScrollView();\n    const drawX = this.getDrawX();\n    const drawY = this.getDrawY();\n    const { table } = this;\n    const { draw, cols, textCellsHelper, textFont } = table;\n    // 左边区域\n    const lView = scrollView.clone();\n    lView.sci = 0;\n    lView.eci = scrollView.sci - 1;\n    if (lView.eci > -1) {\n      let max;\n      draw.offset(drawX, drawY);\n      textCellsHelper.getCellByViewRange({\n        reverseCols: true,\n        view: lView,\n        newCol: (col) => {\n          max += cols.getWidth(col);\n        },\n        newRow: () => {\n          max = 0;\n        },\n        cellsINCallback: (row, col, cell, rect, overflow) => {\n          const { text } = cell;\n          if (PlainUtils.isBlank(text)) {\n            return TEXT_BREAK_LOOP.CONTINUE;\n          }\n          const { fontAttr } = cell;\n          const { align, textWrap, direction } = fontAttr;\n          const allowTextAlign = align === BaseFont.ALIGN.left || align === BaseFont.ALIGN.center;\n          const allowTextWrap = textWrap === BaseFont.TEXT_WRAP.OVER_FLOW;\n          const allowDirection = direction === BaseFont.TEXT_DIRECTION.ANGLE;\n          if (allowTextAlign && (allowTextWrap || allowDirection)) {\n            const size = table.getCellContentBoundOutWidth(row, col);\n            if (size === 0 || size > max) {\n              const builder = textFont.getBuilder();\n              builder.setDraw(draw);\n              builder.setRect(rect);\n              builder.setCell(cell);\n              builder.setRow(row);\n              builder.setCol(col);\n              builder.setOverFlow(overflow);\n              const font = builder.build();\n              const result = font.drawingFont();\n              cell.setContentWidth(result.width);\n              cell.setLeftSdistWidth(result.leftSdist);\n              cell.setRightSdistWidth(result.rightSdist);\n            }\n          }\n          return table.hasAngleCell(row)\n            ? TEXT_BREAK_LOOP.CONTINUE\n            : TEXT_BREAK_LOOP.ROW;\n        },\n        mergeCallback: row => (table.hasAngleCell(row)\n          ? TEXT_BREAK_LOOP.CONTINUE\n          : TEXT_BREAK_LOOP.ROW),\n      });\n      draw.offset(0, 0);\n    }\n    // 右边区域\n    const rView = scrollView.clone();\n    rView.sci = scrollView.eci + 1;\n    rView.eci = cols.len - 1;\n    if (rView.sci < cols.len) {\n      let max;\n      draw.offset(drawX + scrollView.w, drawY);\n      textCellsHelper.getCellByViewRange({\n        startX: scrollView.w,\n        view: rView,\n        newCol: (col) => {\n          max += cols.getWidth(col);\n        },\n        newRow: () => {\n          max = 0;\n        },\n        cellsINCallback: (row, col, cell, rect, overflow) => {\n          const { text } = cell;\n          if (PlainUtils.isBlank(text)) {\n            return TEXT_BREAK_LOOP.CONTINUE;\n          }\n          const { fontAttr } = cell;\n          const { align, textWrap, direction } = fontAttr;\n          const allowTextAlign = align === BaseFont.ALIGN.right || align === BaseFont.ALIGN.center;\n          const allowDirection = direction === BaseFont.TEXT_DIRECTION.ANGLE;\n          const allowTextWrap = textWrap === BaseFont.TEXT_WRAP.OVER_FLOW;\n          if (allowTextAlign && (allowTextWrap || allowDirection)) {\n            const size = table.getCellContentBoundOutWidth(row, col);\n            if (size === 0 || size > max) {\n              const builder = textFont.getBuilder();\n              builder.setDraw(draw);\n              builder.setRect(rect);\n              builder.setCell(cell);\n              builder.setRow(row);\n              builder.setCol(col);\n              builder.setOverFlow(overflow);\n              const font = builder.build();\n              const result = font.drawingFont();\n              cell.setContentWidth(result.width);\n              cell.setLeftSdistWidth(result.leftSdist);\n              cell.setRightSdistWidth(result.rightSdist);\n            }\n          }\n          return table.hasAngleCell(row)\n            ? TEXT_BREAK_LOOP.CONTINUE\n            : TEXT_BREAK_LOOP.ROW;\n        },\n        mergeCallback: row => (table.hasAngleCell(row)\n          ? TEXT_BREAK_LOOP.CONTINUE\n          : TEXT_BREAK_LOOP.ROW),\n      });\n      draw.offset(0, 0);\n    }\n  }\n\n  /**\n   * 绘制越界边框\n   */\n  drawBoundOutGridBorder() {\n    const scrollView = this.getScrollView();\n    const drawX = this.getDrawX();\n    const drawY = this.getDrawY();\n    const { table } = this;\n    const { draw, cols, line } = table;\n    // 左边区域\n    const lView = scrollView.clone();\n    lView.sci = 0;\n    lView.eci = scrollView.sci - 1;\n    if (lView.eci > -1) {\n      const offset = cols.rectRangeSumWidth(lView);\n      const { alResult } = XLinePlainGenerator.run({\n        scrollView: lView,\n        foldOnOff: true,\n        table,\n        model: XLinePlainGenerator.MODEL.OUT_ANGLE_BAR_L,\n      });\n      draw.offset(drawX - offset, drawY);\n      alResult.tLine.forEach((item) => {\n        const { borderAttr, row, col } = item;\n        const { top } = borderAttr;\n        const { color, widthType, type } = top;\n        line.setType(type);\n        line.setWidthType(widthType);\n        line.setColor(color);\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'top');\n      });\n      alResult.lLine.forEach((item) => {\n        const { borderAttr, row, col } = item;\n        const { left } = borderAttr;\n        const { color, widthType, type } = left;\n        line.setType(type);\n        line.setWidthType(widthType);\n        line.setColor(color);\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'left');\n      });\n      alResult.rLine.forEach((item) => {\n        const { borderAttr, row, col } = item;\n        const { right } = borderAttr;\n        const { color, widthType, type } = right;\n        line.setType(type);\n        line.setWidthType(widthType);\n        line.setColor(color);\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'right');\n      });\n      alResult.bLine.forEach((item) => {\n        const { borderAttr, row, col } = item;\n        const { bottom } = borderAttr;\n        const { color, widthType, type } = bottom;\n        line.setType(type);\n        line.setWidthType(widthType);\n        line.setColor(color);\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'bottom');\n      });\n      draw.offset(0, 0);\n    }\n    // 右边区域\n    const rView = scrollView.clone();\n    rView.sci = scrollView.eci + 1;\n    rView.eci = cols.len - 1;\n    if (rView.sci < cols.len) {\n      const offset = scrollView.w;\n      const { arResult } = XLinePlainGenerator.run({\n        scrollView: rView,\n        foldOnOff: true,\n        table,\n        model: XLinePlainGenerator.MODEL.OUT_ANGLE_BAR_R,\n      });\n      draw.offset(drawX + offset, drawY);\n      arResult.tLine.forEach((item) => {\n        const { borderAttr, row, col } = item;\n        const { top } = borderAttr;\n        const { color, widthType, type } = top;\n        line.setType(type);\n        line.setWidthType(widthType);\n        line.setColor(color);\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'top');\n      });\n      arResult.lLine.forEach((item) => {\n        const { borderAttr, row, col } = item;\n        const { left } = borderAttr;\n        const { color, widthType, type } = left;\n        line.setType(type);\n        line.setWidthType(widthType);\n        line.setColor(color);\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'left');\n      });\n      arResult.rLine.forEach((item) => {\n        const { borderAttr, row, col } = item;\n        const { right } = borderAttr;\n        const { color, widthType, type } = right;\n        line.setType(type);\n        line.setWidthType(widthType);\n        line.setColor(color);\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'right');\n      });\n      arResult.bLine.forEach((item) => {\n        const { borderAttr, row, col } = item;\n        const { bottom } = borderAttr;\n        const { color, widthType, type } = bottom;\n        line.setType(type);\n        line.setWidthType(widthType);\n        line.setColor(color);\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'bottom');\n      });\n      draw.offset(0, 0);\n    }\n  }\n\n  /**\n   * 绘制越界背景\n   */\n  drawBoundOutBackground() {\n    const scrollView = this.getScrollView();\n    const drawX = this.getDrawX();\n    const drawY = this.getDrawY();\n    const { table } = this;\n    const { draw, cols, styleCellsHelper } = table;\n    // 左边区域\n    const lView = scrollView.clone();\n    lView.sci = 0;\n    lView.eci = scrollView.sci - 1;\n    if (lView.eci > -1) {\n      let max = 0;\n      draw.offset(drawX, drawY);\n      styleCellsHelper.getCellByViewRange({\n        reverseCols: true,\n        view: lView,\n        newCol: (col) => {\n          max += cols.getWidth(col);\n        },\n        newRow: () => {\n          max = 0;\n        },\n        cellsINCallback: (row, col, cell, rect) => {\n          if (table.hasAngleCell(row)) {\n            if (table.isAngleBarCell(row, col)) {\n              const size = table.getCellStyleBoundOutWidth(row, col);\n              const { fontAttr } = cell;\n              const { angle } = fontAttr;\n              if (size > max && angle > 0) {\n                const { background } = cell;\n                const box = new Box({\n                  draw, background,\n                });\n                const offset = table.getSdistWidth(row, col);\n                const { x, y, width, height } = rect;\n                const tl = new Point(x + offset, y);\n                const tr = new Point(x + width + offset, y);\n                const br = new Point(x + width, y + height);\n                const bl = new Point(x, y + height);\n                const path = new Path({\n                  points: [tl, tr, br, bl],\n                });\n                box.setPath({ path });\n                box.render();\n              }\n            }\n            return STYLE_BREAK_LOOP.CONTINUE;\n          }\n          return STYLE_BREAK_LOOP.ROW;\n        },\n        mergeCallback: row => (table.hasAngleCell(row)\n          ? STYLE_BREAK_LOOP.CONTINUE\n          : STYLE_BREAK_LOOP.ROW),\n      });\n      draw.offset(0, 0);\n    }\n    // 右边区域\n    const rView = scrollView.clone();\n    rView.sci = scrollView.eci + 1;\n    rView.eci = cols.len - 1;\n    if (rView.sci < cols.len) {\n      let max = 0;\n      draw.offset(drawX + scrollView.w, drawY);\n      styleCellsHelper.getCellByViewRange({\n        view: rView,\n        newCol: (col) => {\n          max += cols.getWidth(col);\n        },\n        newRow: () => {\n          max = 0;\n        },\n        cellsINCallback: (row, col, cell, rect) => {\n          if (table.hasAngleCell(row)) {\n            if (table.isAngleBarCell(row, col)) {\n              const size = table.getCellStyleBoundOutWidth(row, col);\n              const { fontAttr } = cell;\n              const { angle } = fontAttr;\n              if (size > max && angle < 0) {\n                const { background } = cell;\n                const box = new Box({\n                  draw, background,\n                });\n                const offset = -table.getSdistWidth(row, col);\n                const { x, y, width, height } = rect;\n                const tl = new Point(x + offset, y);\n                const tr = new Point(x + width + offset, y);\n                const br = new Point(x + width, y + height);\n                const bl = new Point(x, y + height);\n                const path = new Path({\n                  points: [tl, tr, br, bl],\n                });\n                box.setPath({ path });\n                box.render();\n              }\n            }\n            return STYLE_BREAK_LOOP.CONTINUE;\n          }\n          return STYLE_BREAK_LOOP.ROW;\n        },\n        mergeCallback: row => (table.hasAngleCell(row)\n          ? STYLE_BREAK_LOOP.CONTINUE\n          : STYLE_BREAK_LOOP.ROW),\n      });\n      draw.offset(0, 0);\n    }\n  }\n\n  /**\n   * 绘制单元格文本\n   */\n  drawXFont() {\n    const scrollView = this.getScrollView();\n    const drawX = this.getDrawX();\n    const drawY = this.getDrawY();\n    const { table } = this;\n    const {\n      draw, textCellsHelper, textFont,\n    } = table;\n    draw.offset(drawX, drawY);\n    textCellsHelper.getCellByViewRange({\n      view: scrollView,\n      cellsINCallback: (row, col, cell, rect, overflow) => {\n        const builder = textFont.getBuilder();\n        builder.setDraw(draw);\n        builder.setCell(cell);\n        builder.setRect(rect);\n        builder.setRow(row);\n        builder.setCol(col);\n        builder.setOverFlow(overflow);\n        const font = builder.build();\n        const result = font.drawingFont();\n        cell.setContentWidth(result.width);\n        cell.setLeftSdistWidth(result.leftSdist);\n        cell.setRightSdistWidth(result.rightSdist);\n      },\n      mergeCallback: (row, col, cell, rect) => {\n        const builder = textFont.getBuilder();\n        builder.setDraw(draw);\n        builder.setRect(rect);\n        builder.setCell(cell);\n        builder.setRow(row);\n        builder.setCol(col);\n        builder.setOverFlow(rect);\n        const font = builder.build();\n        const result = font.drawingFont();\n        cell.setContentWidth(result.width);\n        cell.setLeftSdistWidth(result.leftSdist);\n        cell.setRightSdistWidth(result.rightSdist);\n      },\n    });\n    draw.offset(0, 0);\n  }\n\n  /**\n   * 绘制边框\n   */\n  drawGridBorder() {\n    const borderView = this.getLineView();\n    const borderX = this.getLineX();\n    const borderY = this.getLineY();\n    const { table } = this;\n    const { settings, draw, grid, line, optimizeEnable } = table;\n    draw.offset(borderX, borderY);\n    const { gResult, bResult, aResult } = XLinePlainGenerator.run({\n      scrollView: borderView,\n      foldOnOff: true,\n      optimize: optimizeEnable,\n      table,\n      model: settings.table.showGrid\n        ? XLinePlainGenerator.MODEL.ALL\n        : XLinePlainGenerator.MODEL.BORDER,\n    });\n    // 网格\n    if (gResult) {\n      gResult.bLine.forEach((item) => {\n        grid.horizonLine(item.sx, item.sy, item.ex, item.ey);\n      });\n      gResult.rLine.forEach((item) => {\n        grid.verticalLine(item.sx, item.sy, item.ex, item.ey);\n      });\n    }\n    // 边框\n    bResult.tLine.forEach((item) => {\n      const { borderAttr, row, col } = item;\n      const { top } = borderAttr;\n      const { color, widthType, type } = top;\n      line.setType(type);\n      line.setWidthType(widthType);\n      line.setColor(color);\n      line.horizonLine(item.sx, item.sy, item.ex, item.ey, row, col, 'top');\n    });\n    bResult.lLine.forEach((item) => {\n      const { borderAttr, row, col } = item;\n      const { left } = borderAttr;\n      const { color, widthType, type } = left;\n      line.setType(type);\n      line.setWidthType(widthType);\n      line.setColor(color);\n      line.verticalLine(item.sx, item.sy, item.ex, item.ey, row, col, 'left');\n    });\n    bResult.rLine.forEach((item) => {\n      const { borderAttr, row, col } = item;\n      const { right } = borderAttr;\n      const { color, widthType, type } = right;\n      line.setType(type);\n      line.setWidthType(widthType);\n      line.setColor(color);\n      line.verticalLine(item.sx, item.sy, item.ex, item.ey, row, col, 'right');\n    });\n    bResult.bLine.forEach((item) => {\n      const { borderAttr, row, col } = item;\n      const { bottom } = borderAttr;\n      const { color, widthType, type } = bottom;\n      line.setType(type);\n      line.setWidthType(widthType);\n      line.setColor(color);\n      line.horizonLine(item.sx, item.sy, item.ex, item.ey, row, col, 'bottom');\n    });\n    // 旋转\n    aResult.tLine.forEach((item) => {\n      const { borderAttr, row, col } = item;\n      const { top } = borderAttr;\n      const { color, widthType, type } = top;\n      line.setType(type);\n      line.setWidthType(widthType);\n      line.setColor(color);\n      line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'top');\n    });\n    aResult.lLine.forEach((item) => {\n      const { borderAttr, row, col } = item;\n      const { left } = borderAttr;\n      const { color, widthType, type } = left;\n      line.setType(type);\n      line.setWidthType(widthType);\n      line.setColor(color);\n      line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'left');\n    });\n    aResult.rLine.forEach((item) => {\n      const { borderAttr, row, col } = item;\n      const { right } = borderAttr;\n      const { color, widthType, type } = right;\n      line.setType(type);\n      line.setWidthType(widthType);\n      line.setColor(color);\n      line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'right');\n    });\n    aResult.bLine.forEach((item) => {\n      const { borderAttr, row, col } = item;\n      const { bottom } = borderAttr;\n      const { color, widthType, type } = bottom;\n      line.setType(type);\n      line.setWidthType(widthType);\n      line.setColor(color);\n      line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'bottom');\n    });\n    draw.offset(0, 0);\n  }\n\n  /**\n   * 绘制背景\n   */\n  drawBackground() {\n    const scrollView = this.getScrollView();\n    const { table } = this;\n    const drawX = this.getDrawX();\n    const drawY = this.getDrawY();\n    const {\n      draw, styleCellsHelper,\n    } = table;\n    draw.offset(drawX, drawY);\n    styleCellsHelper.getCellByViewRange({\n      view: scrollView,\n      cellsINCallback: (row, col, cell, rect) => {\n        if (table.hasAngleCell(row)) {\n          if (table.isAngleBarCell(row, col)) {\n            return;\n          }\n        }\n        const { background } = cell;\n        const box = new Box({\n          draw, background, rect,\n        });\n        box.render();\n      },\n      mergeCallback: (row, col, cell, rect) => {\n        const { background } = cell;\n        const box = new Box({\n          draw, rect, background,\n        });\n        box.render();\n      },\n    });\n    styleCellsHelper.getCellByViewRange({\n      view: scrollView,\n      cellsINCallback: (row, col, cell, rect) => {\n        if (table.hasAngleCell(row)) {\n          if (table.isAngleBarCell(row, col)) {\n            const { background } = cell;\n            const box = new Box({\n              draw, background,\n            });\n            const { fontAttr } = cell;\n            const { angle } = fontAttr;\n            const offset = angle > 0\n              ? table.getSdistWidth(row, col)\n              : -table.getSdistWidth(row, col);\n            const { x, y, width, height } = rect;\n            const tl = new Point(x + offset, y);\n            const tr = new Point(x + width + offset, y);\n            const br = new Point(x + width, y + height);\n            const bl = new Point(x, y + height);\n            const path = new Path({\n              points: [tl, tr, br, bl],\n            });\n            box.setPath({ path });\n            box.render();\n          }\n        }\n      },\n    });\n    draw.offset(0, 0);\n  }\n\n  /**\n   * 渲染界面\n   */\n  render() {\n    const { table } = this;\n    const renderMode = table.getRenderMode();\n    const viewMode = this.getViewMode();\n    if (viewMode === VIEW_MODE.STATIC && renderMode === RENDER_MODE.SCROLL) {\n      return;\n    }\n    // 渲染贴图\n    this.drawMap();\n    // 清空画布\n    this.drawClear();\n    // 裁剪界面\n    const scrollView = this.getScrollView();\n    const x = this.getDrawX();\n    const y = this.getDrawY();\n    const width = scrollView.w;\n    const height = scrollView.h;\n    const { draw } = table;\n    const crop = new Crop({\n      rect: new Rect({\n        x,\n        y,\n        width,\n        height,\n      }),\n      draw,\n    });\n    crop.open();\n    // 绘制背景\n    this.drawBackground();\n    this.drawBoundOutBackground();\n    // 绘制文字\n    this.drawXFont();\n    this.drawBoundOutXFont();\n    // 绘制边框\n    this.drawGridBorder();\n    this.drawBoundOutGridBorder();\n    // 绘制小图标\n    this.drawXIcon();\n    crop.close();\n  }\n\n}\n\nclass XTableIndexUI extends XTableUI {\n\n  /**\n   * 绘制网格\n   */\n  drawGridBorder() {\n    throw new TypeError('drawGrid child impl');\n  }\n\n  /**\n   * 绘制背景颜色\n   */\n  drawColor() {\n    throw new TypeError('drawColor child impl');\n  }\n\n  /**\n   * 绘制文字\n   */\n  drawFont() {\n    throw new TypeError('drawFont child impl');\n  }\n\n  /**\n   * 绘制条件\n   */\n  drawFilter() {\n    throw new TypeError('drawFilter child impl');\n  }\n\n  /**\n   * 渲染界面\n   */\n  render() {\n    if (this.drawFilter()) {\n      this.drawMap();\n      this.drawClear();\n      this.drawColor();\n      this.drawFont();\n      this.drawGridBorder();\n    }\n  }\n\n}\n\nclass XTableLeftIndexUI extends XTableIndexUI {\n\n  /**\n   * 绘制网格\n   */\n  drawGridBorder() {\n    const borderView = this.getLineView();\n    const borderX = this.getLineX();\n    const borderY = this.getLineY();\n    const { table } = this;\n    const { draw, indexGrid } = table;\n    const { iResult } = XLinePlainGenerator.run({\n      scrollView: borderView,\n      foldOnOff: false,\n      model: XLinePlainGenerator.MODEL.INDEX,\n      table,\n      getWidth: () => table.index.getWidth(),\n    });\n    draw.offset(borderX, borderY);\n    iResult.bLine.forEach((item) => {\n      indexGrid.horizonLine(item.sx, item.sy, item.ex, item.ey);\n    });\n    iResult.rLine.forEach((item) => {\n      indexGrid.verticalLine(item.sx, item.sy, item.ex, item.ey);\n    });\n    draw.offset(0, 0);\n  }\n\n  /**\n   * 绘制背景\n   */\n  drawColor() {\n    const dx = this.getDrawX();\n    const dy = this.getDrawY();\n    const scrollView = this.getScrollView();\n    const height = scrollView.h;\n    const width = this.getWidth();\n    const { table } = this;\n    const {\n      draw, index,\n    } = table;\n    draw.offset(dx, dy);\n    draw.attr({\n      fillStyle: index.getBackground(),\n    });\n    draw.fillRect(0, 0, width, height);\n    draw.offset(0, 0);\n  }\n\n  /**\n   *  绘制文字\n   */\n  drawFont() {\n    const dx = this.getDrawX();\n    const dy = this.getDrawY();\n    const scrollView = this.getScrollView();\n    const width = this.getWidth();\n    const { table } = this;\n    const {\n      draw, rows, index,\n    } = table;\n    const { sri, eri } = scrollView;\n    draw.offset(dx, dy);\n    draw.attr({\n      textAlign: 'center',\n      textBaseline: 'middle',\n      font: `${index.getSize()}px Arial`,\n      fillStyle: index.getColor(),\n    });\n    rows.eachHeight(sri, eri, (i, ch, y) => {\n      draw.fillText(i + 1, width / 2, y + (ch / 2));\n    });\n    draw.offset(0, 0);\n  }\n\n  /**\n   * 绘制条件\n   */\n  drawFilter() {\n    const { table } = this;\n    const { scroll } = table;\n    const renderMode = table.getRenderMode();\n    const viewMode = this.getViewMode();\n    if (renderMode === RENDER_MODE.RENDER) {\n      return true;\n    }\n    if (renderMode === RENDER_MODE.SCROLL) {\n      if (viewMode === VIEW_MODE.STATIC) {\n        return false;\n      }\n      switch (scroll.type) {\n        case SCROLL_TYPE.V_TOP:\n        case SCROLL_TYPE.V_BOTTOM:\n          return true;\n      }\n    }\n    return false;\n  }\n\n}\n\nclass XTableTopIndexUI extends XTableIndexUI {\n\n  /**\n   * 绘制网格\n   */\n  drawGridBorder() {\n    const borderView = this.getLineView();\n    const borderX = this.getLineX();\n    const borderY = this.getLineY();\n    const { table } = this;\n    const { draw, indexGrid } = table;\n    // 边缘线条\n    const lineWidth = XDraw.getLineWidthTypePx(XDraw.LINE_WIDTH_TYPE.low);\n    const width = table.visualWidth();\n    indexGrid.horizonLine(0, lineWidth, width, lineWidth);\n    // 索引边框\n    const { iResult } = XLinePlainGenerator.run({\n      scrollView: borderView,\n      foldOnOff: false,\n      model: XLinePlainGenerator.MODEL.INDEX,\n      table,\n      getHeight: () => table.index.getHeight(),\n    });\n    draw.offset(borderX, borderY);\n    iResult.bLine.forEach((item) => {\n      indexGrid.horizonLine(item.sx, item.sy, item.ex, item.ey);\n    });\n    iResult.rLine.forEach((item) => {\n      indexGrid.verticalLine(item.sx, item.sy, item.ex, item.ey);\n    });\n    draw.offset(0, 0);\n  }\n\n  /**\n   * 绘制背景\n   */\n  drawColor() {\n    const { table } = this;\n    const {\n      draw, index,\n    } = table;\n    const scrollView = this.getScrollView();\n    const dx = this.getDrawX();\n    const dy = this.getDrawY();\n    const height = this.getHeight();\n    const width = scrollView.w;\n    draw.offset(dx, dy);\n    draw.attr({\n      fillStyle: index.getBackground(),\n    });\n    draw.fillRect(0, 0, width, height);\n    draw.offset(0, 0);\n  }\n\n  /**\n   *  绘制文字\n   */\n  drawFont() {\n    const dx = this.getDrawX();\n    const dy = this.getDrawY();\n    const scrollView = this.getScrollView();\n    const height = this.getHeight();\n    const { table } = this;\n    const {\n      draw, cols, index,\n    } = table;\n    const { sci, eci } = scrollView;\n    draw.offset(dx, dy);\n    draw.attr({\n      textAlign: 'center',\n      textBaseline: 'middle',\n      font: `${index.getSize()}px Arial`,\n      fillStyle: index.getColor(),\n    });\n    cols.eachWidth(sci, eci, (i, cw, x) => {\n      draw.fillText(PlainUtils.stringAt(i), x + (cw / 2), height / 2);\n    });\n    draw.offset(0, 0);\n  }\n\n  /**\n   * 绘制条件\n   */\n  drawFilter() {\n    const { table } = this;\n    const { scroll } = table;\n    const renderMode = table.getRenderMode();\n    const viewMode = this.getViewMode();\n    if (renderMode === RENDER_MODE.RENDER) {\n      return true;\n    }\n    if (renderMode === RENDER_MODE.SCROLL) {\n      if (viewMode === VIEW_MODE.STATIC) {\n        return false;\n      }\n      switch (scroll.type) {\n        case SCROLL_TYPE.H_LEFT:\n        case SCROLL_TYPE.H_RIGHT:\n          return true;\n      }\n    }\n    return false;\n  }\n\n}\n\n// ============================ 表格冻结区域内容绘制 =============================\n\nclass XTableFrozenLeftIndex extends XTableLeftIndexUI {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { index } = table;\n    const width = index.getWidth();\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const height = xFixedMeasure.getHeight();\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const x = 0;\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { index } = table;\n    const y = index.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const {\n      rows, cols, xFixedView,\n    } = table;\n    const fixedView = xFixedView.getFixedView();\n    const view = new RectRange(fixedView.sri, 0, fixedView.eri, 0);\n    view.w = cols.rectRangeSumWidth(view);\n    view.h = rows.rectRangeSumHeight(view);\n    this.scrollView = view;\n    return view.clone();\n  }\n\n  getFullScrollView() {\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\n      return this.fullScrollView.clone();\n    }\n    const fullScrollView = this.getScrollView();\n    this.fullScrollView = fullScrollView;\n    return fullScrollView.clone();\n  }\n\n  getViewMode() {\n    this.viewMode = VIEW_MODE.STATIC;\n    return VIEW_MODE.STATIC;\n  }\n\n  render() {\n    const { table } = this;\n    const renderMode = table.getRenderMode();\n    if (renderMode === RENDER_MODE.RENDER || renderMode === RENDER_MODE.SCALE) {\n      super.render();\n    }\n  }\n\n}\n\nclass XTableFrozenContent extends XTableContentUI {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const width = xFixedMeasure.getWidth();\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const height = xFixedMeasure.getHeight();\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { index } = table;\n    const x = index.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { index } = table;\n    const y = index.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const {\n      rows, cols, xFixedView,\n    } = table;\n    const view = xFixedView.getFixedView();\n    view.w = cols.rectRangeSumWidth(view);\n    view.h = rows.rectRangeSumHeight(view);\n    this.scrollView = view;\n    return view.clone();\n  }\n\n  getFullScrollView() {\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\n      return this.fullScrollView.clone();\n    }\n    const fullScrollView = this.getScrollView();\n    this.fullScrollView = fullScrollView;\n    return fullScrollView.clone();\n  }\n\n  getViewMode() {\n    this.viewMode = VIEW_MODE.STATIC;\n    return VIEW_MODE.STATIC;\n  }\n\n  render() {\n    const { table } = this;\n    const renderMode = table.getRenderMode();\n    if (renderMode === RENDER_MODE.RENDER || renderMode === RENDER_MODE.SCALE) {\n      super.render();\n    }\n  }\n\n}\n\nclass XTableFrozenTopIndex extends XTableTopIndexUI {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const width = xFixedMeasure.getWidth();\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { index } = table;\n    const height = index.getHeight();\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { index } = table;\n    const x = index.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const y = 0;\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const {\n      rows, cols, xFixedView,\n    } = table;\n    const fixedView = xFixedView.getFixedView();\n    const view = new RectRange(0, fixedView.sci, 0, fixedView.eci);\n    view.w = cols.rectRangeSumWidth(view);\n    view.h = rows.rectRangeSumHeight(view);\n    this.scrollView = view;\n    return view.clone();\n  }\n\n  getFullScrollView() {\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\n      return this.fullScrollView.clone();\n    }\n    const fullScrollView = this.getScrollView();\n    this.fullScrollView = fullScrollView;\n    return fullScrollView.clone();\n  }\n\n  getViewMode() {\n    this.viewMode = VIEW_MODE.STATIC;\n    return VIEW_MODE.STATIC;\n  }\n\n  render() {\n    const { table } = this;\n    const renderMode = table.getRenderMode();\n    if (renderMode === RENDER_MODE.RENDER || renderMode === RENDER_MODE.SCALE) {\n      super.render();\n    }\n  }\n\n}\n\n// ============================ 表格动态区域内容绘制 =============================\n\nclass XTableLeftIndex extends XTableLeftIndexUI {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { index } = table;\n    const width = index.getWidth();\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const x = 0;\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const y = index.getHeight() + xTop.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { index } = table;\n    const renderMode = table.getRenderMode();\n    const scrollView = xTableAreaView.getScrollView();\n    const enterView = xTableAreaView.getScrollEnterView();\n    const view = PlainUtils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL\n      ? enterView\n      : scrollView;\n    view.sci = 0;\n    view.eci = 0;\n    view.w = index.getWidth();\n    this.scrollView = view;\n    return view.clone();\n  }\n\n  getFullScrollView() {\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\n      return this.fullScrollView.clone();\n    }\n    const { table } = this;\n    const { index } = table;\n    const { xTableAreaView } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    scrollView.sci = 0;\n    scrollView.eci = 0;\n    scrollView.w = index.getWidth();\n    this.fullScrollView = scrollView;\n    return scrollView.clone();\n  }\n\n  getViewMode() {\n    if (PlainUtils.isNotUnDef(this.viewMode)) {\n      return this.viewMode;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { cols } = table;\n    const lastScrollView = xTableAreaView.getLastScrollView();\n    const scrollView = xTableAreaView.getScrollView();\n    if (PlainUtils.isNotUnDef(lastScrollView)) {\n      lastScrollView.sci = 0;\n      lastScrollView.eci = 0;\n      lastScrollView.w = cols.sectionSumWidth(lastScrollView.sci, lastScrollView.eci);\n    }\n    scrollView.sci = 0;\n    scrollView.eci = 0;\n    scrollView.w = cols.sectionSumWidth(scrollView.sci, scrollView.eci);\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\n    this.viewMode = viewMode;\n    return viewMode;\n  }\n\n}\n\nclass XTableLeft extends XTableContentUI {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const width = xFixedMeasure.getWidth();\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { index } = table;\n    const x = index.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const y = index.getHeight() + xTop.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { xFixedView } = table;\n    const { cols } = table;\n    const { xTableAreaView } = table;\n    const renderMode = table.getRenderMode();\n    const fixedView = xFixedView.getFixedView();\n    const scrollView = xTableAreaView.getScrollView();\n    const enterView = xTableAreaView.getScrollEnterView();\n    const view = PlainUtils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL\n      ? enterView\n      : scrollView;\n    view.sci = fixedView.sci;\n    view.eci = fixedView.eci;\n    view.w = cols.sectionSumWidth(view.sci, view.eci);\n    this.scrollView = view;\n    return view.clone();\n  }\n\n  getFullScrollView() {\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\n      return this.fullScrollView.clone();\n    }\n    const { table } = this;\n    const { xFixedView } = table;\n    const { cols } = table;\n    const { xTableAreaView } = table;\n    const fixedView = xFixedView.getFixedView();\n    const scrollView = xTableAreaView.getScrollView();\n    scrollView.sci = fixedView.sci;\n    scrollView.eci = fixedView.eci;\n    scrollView.w = cols.sectionSumWidth(scrollView.sci, scrollView.eci);\n    this.fullScrollView = scrollView;\n    return scrollView.clone();\n  }\n\n  getViewMode() {\n    if (PlainUtils.isNotUnDef(this.viewMode)) {\n      return this.viewMode;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { cols } = table;\n    const { xFixedView } = table;\n    const fixedView = xFixedView.getFixedView();\n    const lastScrollView = xTableAreaView.getLastScrollView();\n    const scrollView = xTableAreaView.getScrollView();\n    if (PlainUtils.isNotUnDef(lastScrollView)) {\n      lastScrollView.sci = fixedView.sci;\n      lastScrollView.eci = fixedView.eci;\n      lastScrollView.w = cols.sectionSumWidth(lastScrollView.sci, lastScrollView.eci);\n    }\n    scrollView.sci = fixedView.sci;\n    scrollView.eci = fixedView.eci;\n    scrollView.w = cols.sectionSumWidth(scrollView.sci, scrollView.eci);\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\n    this.viewMode = viewMode;\n    return viewMode;\n  }\n\n}\n\nclass XTableTopIndex extends XTableTopIndexUI {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { index } = table;\n    const height = index.getHeight();\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const x = index.getWidth() + xLeft.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const y = 0;\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { index } = table;\n    const { xTableAreaView } = table;\n    const renderMode = table.getRenderMode();\n    const scrollView = xTableAreaView.getScrollView();\n    const enterView = xTableAreaView.getScrollEnterView();\n    const view = PlainUtils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL\n      ? enterView\n      : scrollView;\n    view.sri = 0;\n    view.eri = 0;\n    view.h = index.getHeight();\n    this.scrollView = view;\n    return view.clone();\n  }\n\n  getFullScrollView() {\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\n      return this.fullScrollView.clone();\n    }\n    const { table } = this;\n    const { index } = table;\n    const { xTableAreaView } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    scrollView.sri = 0;\n    scrollView.eri = 0;\n    scrollView.h = index.getHeight();\n    this.fullScrollView = scrollView;\n    return scrollView.clone();\n  }\n\n  getViewMode() {\n    if (PlainUtils.isNotUnDef(this.viewMode)) {\n      return this.viewMode;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { rows } = table;\n    const lastScrollView = xTableAreaView.getLastScrollView();\n    const scrollView = xTableAreaView.getScrollView();\n    if (PlainUtils.isNotUnDef(lastScrollView)) {\n      lastScrollView.sri = 0;\n      lastScrollView.eri = 0;\n      lastScrollView.h = rows.sectionSumHeight(lastScrollView.sri, lastScrollView.eri);\n    }\n    scrollView.sri = 0;\n    scrollView.eri = 0;\n    scrollView.h = rows.sectionSumHeight(scrollView.sri, scrollView.eri);\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\n    this.viewMode = viewMode;\n    return viewMode;\n  }\n\n}\n\nclass XTableTop extends XTableContentUI {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const height = xFixedMeasure.getHeight();\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const x = index.getWidth() + xLeft.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { index } = table;\n    const y = index.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { xFixedView } = table;\n    const { rows } = table;\n    const { xTableAreaView } = table;\n    const renderMode = table.getRenderMode();\n    const fixedView = xFixedView.getFixedView();\n    const scrollView = xTableAreaView.getScrollView();\n    const enterView = xTableAreaView.getScrollEnterView();\n    const view = PlainUtils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL\n      ? enterView\n      : scrollView;\n    view.sri = fixedView.sri;\n    view.eri = fixedView.eri;\n    view.h = rows.sectionSumHeight(view.sri, view.eri);\n    this.scrollView = view;\n    return view.clone();\n  }\n\n  getFullScrollView() {\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\n      return this.fullScrollView.clone();\n    }\n    const { table } = this;\n    const { xFixedView } = table;\n    const { rows } = table;\n    const { xTableAreaView } = table;\n    const fixedView = xFixedView.getFixedView();\n    const scrollView = xTableAreaView.getScrollView();\n    scrollView.sri = fixedView.sri;\n    scrollView.eri = fixedView.eri;\n    scrollView.h = rows.sectionSumHeight(scrollView.sri, scrollView.eri);\n    this.fullScrollView = scrollView;\n    return scrollView.clone();\n  }\n\n  getViewMode() {\n    if (PlainUtils.isNotUnDef(this.viewMode)) {\n      return this.viewMode;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { rows } = table;\n    const { xFixedView } = table;\n    const fixedView = xFixedView.getFixedView();\n    const lastScrollView = xTableAreaView.getLastScrollView();\n    const scrollView = xTableAreaView.getScrollView();\n    if (PlainUtils.isNotUnDef(lastScrollView)) {\n      lastScrollView.sri = fixedView.sri;\n      lastScrollView.eri = fixedView.eri;\n      lastScrollView.h = rows.sectionSumHeight(lastScrollView.sci, lastScrollView.eci);\n    }\n    scrollView.sri = fixedView.sri;\n    scrollView.eri = fixedView.eri;\n    scrollView.h = rows.sectionSumHeight(scrollView.sci, scrollView.eci);\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\n    this.viewMode = viewMode;\n    return viewMode;\n  }\n\n}\n\nclass XTableContent extends XTableContentUI {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { index } = table;\n    const { xLeft } = table;\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const x = index.getWidth() + xLeft.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const y = index.getHeight() + xTop.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const renderMode = table.getRenderMode();\n    const scrollView = xTableAreaView.getScrollView();\n    const enterView = xTableAreaView.getScrollEnterView();\n    const view = PlainUtils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL\n      ? enterView\n      : scrollView;\n    this.scrollView = view;\n    return view.clone();\n  }\n\n  getFullScrollView() {\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\n      return this.fullScrollView.clone();\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    this.fullScrollView = scrollView;\n    return scrollView.clone();\n  }\n\n  getViewMode() {\n    if (PlainUtils.isNotUnDef(this.viewMode)) {\n      return this.viewMode;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const lastScrollView = xTableAreaView.getLastScrollView();\n    const scrollView = xTableAreaView.getScrollView();\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\n    this.viewMode = viewMode;\n    return viewMode;\n  }\n\n}\n\n// =============================== XTableStyle ==============================\n\nclass XTableStyle extends Widget {\n\n  /**\n   * xTableScrollView\n   * @param xTableScrollView\n   * @param settings\n   * @param xFixedView\n   * @param xIteratorBuilder\n   * @param scroll\n   */\n  constructor({\n    xTableScrollView,\n    settings,\n    xFixedView,\n    xIteratorBuilder,\n    scroll,\n  }) {\n    super(`${cssPrefix}-table-canvas`, 'canvas');\n    // 表格设置\n    this.settings = settings;\n    // 冻结的视图\n    this.xFixedView = xFixedView;\n    // 滚动的坐标\n    this.scroll = scroll;\n    // 渲染模式\n    this.renderMode = RENDER_MODE.RENDER;\n    // 线段优化\n    this.optimizeEnable = true;\n    // 迭代器\n    this.xIteratorBuilder = xIteratorBuilder;\n    // 表格数据配置\n    this.xTableData = new XTableDataItems(this.settings.data);\n    this.scale = new Scale();\n    this.index = new Code({\n      scaleAdapter: new ScaleAdapter({\n        goto: v => XDraw.srcTransformStylePx(this.scale.goto(v)),\n      }),\n      ...this.settings.index,\n    });\n    this.rows = new Rows({\n      scaleAdapter: new ScaleAdapter({\n        goto: v => XDraw.srcTransformStylePx(this.scale.goto(v)),\n      }),\n      xIteratorBuilder: this.xIteratorBuilder,\n      ...this.settings.rows,\n    });\n    this.cols = new Cols({\n      scaleAdapter: new ScaleAdapter({\n        goto: v => XDraw.srcTransformStylePx(this.scale.goto(v)),\n        back: v => this.scale.back(v),\n      }),\n      xIteratorBuilder: this.xIteratorBuilder,\n      ...this.settings.cols,\n    });\n    this.cells = new Cells({\n      onChange: (ri) => {\n        const row = this.rows.getOrNew(ri);\n        row.reCkHasAngle = true;\n      },\n      table: this,\n      xTableData: this.xTableData,\n      xIteratorBuilder: this.xIteratorBuilder,\n    });\n    this.merges = new XMerges({\n      ...settings.merge,\n      xIteratorBuilder: this.xIteratorBuilder,\n      xTableData: this.xTableData,\n    });\n    // 固定区域测量\n    this.xFixedMeasure = new XFixedMeasure({\n      fixedView: this.xFixedView,\n      cols: this.cols,\n      rows: this.rows,\n    });\n    // 静态单元格图标\n    this.staticCellIcon = new StaticCellIcon({\n      data: [],\n      cells: this.cells,\n      rows: this.rows,\n      cols: this.cols,\n    });\n    // 固定单元格图标\n    this.fixedCellIcon = new FixedCellIcon({\n      data: [],\n      cells: this.cells,\n      rows: this.rows,\n      cols: this.cols,\n    });\n    // 表格视图区域\n    this.xTableAreaView = new XTableHistoryAreaView({\n      xTableScrollView,\n      scroll: this.scroll,\n      rows: this.rows,\n      cols: this.cols,\n    });\n    // 单元格辅助类\n    this.operateCellsHelper = new OperateCellsHelper(this);\n    this.textCellsHelper = new TextCellsHelper(this);\n    this.styleCellsHelper = new StyleCellsHelper(this);\n    // 边框过滤器\n    const lBorderFilter = new XLineIteratorFilter({\n      logic: XLineIteratorFilter.FILTER_LOGIC.AND,\n      stack: [\n        new LBorderShow({ cells: this.cells }),\n      ],\n    });\n    const rBorderFilter = new XLineIteratorFilter({\n      logic: XLineIteratorFilter.FILTER_LOGIC.AND,\n      stack: [\n        new RBorderShow({ cells: this.cells }),\n      ],\n    });\n    const tBorderFilter = new XLineIteratorFilter({\n      logic: XLineIteratorFilter.FILTER_LOGIC.AND,\n      stack: [\n        new TBorderShow({ cells: this.cells }),\n      ],\n    });\n    const bBorderFilter = new XLineIteratorFilter({\n      logic: XLineIteratorFilter.FILTER_LOGIC.AND,\n      stack: [\n        new BBorderShow({ cells: this.cells }),\n      ],\n    });\n    // 绘制资源\n    this.draw = new XDraw(this.el);\n    this.line = new Line(this.draw, {\n      bottomShow: (row, col) => {\n        const result = bBorderFilter.run({\n          row,\n          col,\n        });\n        return result === XLineIteratorFilter.RETURN_TYPE.EXEC;\n      },\n      topShow: (row, col) => {\n        const result = tBorderFilter.run({\n          row,\n          col,\n        });\n        return result === XLineIteratorFilter.RETURN_TYPE.EXEC;\n      },\n      leftShow: (row, col) => {\n        const result = lBorderFilter.run({\n          row,\n          col,\n        });\n        return result === XLineIteratorFilter.RETURN_TYPE.EXEC;\n      },\n      rightShow: (row, col) => {\n        const result = rBorderFilter.run({\n          row,\n          col,\n        });\n        return result === XLineIteratorFilter.RETURN_TYPE.EXEC;\n      },\n      iFMerge: (row, col) => PlainUtils.isNotEmptyObject(this.merges.getFirstIncludes(row, col)),\n      iFMergeFirstRow: (row, col) => this.merges.getFirstIncludes(row, col).sri === row,\n      iFMergeLastRow: (row, col) => this.merges.getFirstIncludes(row, col).eri === row,\n      iFMergeFirstCol: (row, col) => this.merges.getFirstIncludes(row, col).sci === col,\n      iFMergeLastCol: (row, col) => this.merges.getFirstIncludes(row, col).eci === col,\n    });\n    this.indexGrid = new Grid(this.draw, {\n      color: this.index.getGridColor(),\n    });\n    this.grid = new Grid(this.draw, {\n      color: this.settings.table.gridColor,\n    });\n    this.textFont = new Text({\n      scaleAdapter: new ScaleAdapter({\n        goto: v => this.scale.goto(v),\n      }),\n      table: this,\n    });\n    // 冻结内容\n    this.xLeftFrozenIndex = new XTableFrozenLeftIndex(this);\n    this.xTopFrozenIndex = new XTableFrozenTopIndex(this);\n    this.xTableFrozenContent = new XTableFrozenContent(this);\n    // 动态内容\n    this.xLeftIndex = new XTableLeftIndex(this);\n    this.xTopIndex = new XTableTopIndex(this);\n    this.xLeft = new XTableLeft(this);\n    this.xTop = new XTableTop(this);\n    this.xContent = new XTableContent(this);\n    // 细节内容\n    this.xTableFrozenFullRect = new XTableFrozenFullRect(this);\n    this.xTableFixedBar = new XTableFixedBar(this, settings.xFixedBar);\n  }\n\n  /**\n   * 获取单元格越界的宽度\n   * @param ri\n   * @param ci\n   * @returns {number}\n   */\n  getCellContentBoundOutWidth(ri, ci) {\n    const { cells } = this;\n    const cell = cells.getCell(ri, ci);\n    if (!cell) {\n      return 0;\n    }\n    const { cols } = this;\n    const { contentWidth, fontAttr } = cell;\n    const { align } = fontAttr;\n    let boundOutWidth = 0;\n    const colWidth = cols.getWidth(ci);\n    switch (align) {\n      case BaseFont.ALIGN.right:\n      case BaseFont.ALIGN.left: {\n        boundOutWidth = contentWidth;\n        break;\n      }\n      case BaseFont.ALIGN.center: {\n        if (this.isAngleBarCell(ri, ci)) {\n          boundOutWidth = contentWidth;\n        } else {\n          boundOutWidth = colWidth + ((contentWidth - colWidth) / 2);\n        }\n        break;\n      }\n    }\n    return boundOutWidth;\n  }\n\n  /**\n   * 获取单元格越界的宽度\n   * @param ri\n   * @param ci\n   * @returns {number}\n   */\n  getCellStyleBoundOutWidth(ri, ci) {\n    const { cells } = this;\n    const cell = cells.getCell(ri, ci);\n    if (!cell) {\n      return 0;\n    }\n    const { cols } = this;\n    let boundOutWidth = 0;\n    const colWidth = cols.getWidth(ci);\n    if (this.hasAngleCell(ri)) {\n      if (this.isAngleBarCell(ri, ci)) {\n        const offset = this.getSdistWidth(ri, ci);\n        boundOutWidth = colWidth + offset;\n      }\n    } else {\n      boundOutWidth = colWidth;\n    }\n    return boundOutWidth;\n  }\n\n  /**\n   * 获取单元格斜率宽度\n   * @param row\n   * @param col\n   */\n  getSdistWidth(row, col) {\n    const { cells } = this;\n    const cell = cells.getCell(row, col);\n    if (PlainUtils.isUnDef(cell)) {\n      return 0;\n    }\n    if (cell.leftSdistWidth > 0) {\n      return cell.leftSdistWidth;\n    }\n    if (cell.rightSdistWidth > 0) {\n      return cell.rightSdistWidth;\n    }\n    const { rows } = this;\n    const { fontAttr } = cell;\n    const { angle } = fontAttr;\n    const tilt = RTSinKit.tilt({\n      inverse: rows.getHeight(row),\n      angle,\n    });\n    return RTCosKit.nearby({\n      tilt,\n      angle,\n    });\n  }\n\n  /**\n   * 渲染模式\n   */\n  getRenderMode() {\n    const { renderMode } = this;\n    return renderMode;\n  }\n\n  /**\n   * 画布宽度\n   * @returns {null|*}\n   */\n  visualWidth() {\n    return this.el.width;\n  }\n\n  /**\n   * 画布高度\n   * @returns {null|*}\n   */\n  visualHeight() {\n    return this.el.height;\n  }\n\n  /**\n   * 重置变量区\n   */\n  reset() {\n    const { xTableAreaView } = this;\n    const { xLeftFrozenIndex } = this;\n    const { xTopFrozenIndex } = this;\n    const { xTableFrozenContent } = this;\n    const { xLeftIndex } = this;\n    const { xTopIndex } = this;\n    const { xLeft } = this;\n    const { xTop } = this;\n    const { xContent } = this;\n    xTableAreaView.reset();\n    xLeftFrozenIndex.reset();\n    xTopFrozenIndex.reset();\n    xTableFrozenContent.reset();\n    xLeftIndex.reset();\n    xTopIndex.reset();\n    xLeft.reset();\n    xTop.reset();\n    xContent.reset();\n  }\n\n  /**\n   * 界面缩放\n   * @param val\n   */\n  setScale(val = 1) {\n    // 清空画布\n    this.draw.attr({\n      fillStyle: this.settings.table.background,\n    });\n    this.draw.fullRect();\n    // 调整缩放级别\n    this.scale.setValue(val);\n    // 重新渲染界面\n    this.renderMode = RENDER_MODE.SCALE;\n    this.resize();\n    this.renderMode = RENDER_MODE.RENDER;\n  }\n\n  /**\n   * 重置界面大小\n   */\n  resize() {\n    const {\n      draw, xTableAreaView,\n    } = this;\n    const box = this.parent()\n      .box();\n    draw.resize(box.width, box.height);\n    xTableAreaView.undo();\n    this.reset();\n    this.render();\n  }\n\n  /**\n   * 渲染优化\n   */\n  optimize() {\n    const { styleCellsHelper } = this;\n    const { xTableAreaView } = this;\n    const scrollView = xTableAreaView.getScrollView();\n    let enable = true;\n    styleCellsHelper.getCellByViewRange({\n      view: scrollView,\n      cellsINCallback: (row, col, cell) => {\n        const { borderAttr } = cell;\n        if (borderAttr.hasDouble()) {\n          enable = false;\n          return STYLE_BREAK_LOOP.RETURN;\n        }\n        return STYLE_BREAK_LOOP.CONTINUE;\n      },\n      mergeCallback: (row, col, cell) => {\n        const { borderAttr } = cell;\n        if (borderAttr.hasDouble()) {\n          enable = false;\n          return STYLE_BREAK_LOOP.RETURN;\n        }\n        return STYLE_BREAK_LOOP.CONTINUE;\n      },\n    });\n    this.optimizeEnable = enable;\n  }\n\n  /**\n   * 渲染静态界面\n   */\n  render() {\n    const { xFixedView } = this;\n    const { xTableFrozenFullRect } = this;\n    const { xTableFixedBar } = this;\n    const { xLeftFrozenIndex } = this;\n    const { xTopFrozenIndex } = this;\n    const { xTableFrozenContent } = this;\n    const { xLeftIndex } = this;\n    const { xTopIndex } = this;\n    const { xLeft } = this;\n    const { xTop } = this;\n    const { xContent } = this;\n    this.optimize();\n    xTableFrozenFullRect.render();\n    if (xFixedView.hasFixedLeft() && xFixedView.hasFixedTop()) {\n      xTableFrozenContent.render();\n    }\n    if (xFixedView.hasFixedTop()) {\n      xLeftFrozenIndex.render();\n      xTop.render();\n    }\n    if (xFixedView.hasFixedLeft()) {\n      xTopFrozenIndex.render();\n      xLeft.render();\n    }\n    xLeftIndex.render();\n    xTopIndex.render();\n    xContent.render();\n    xTableFixedBar.render();\n  }\n\n  /**\n   * 渲染滚动界面\n   */\n  scrolling() {\n    const {\n      xTableAreaView,\n    } = this;\n    this.reset();\n    this.renderMode = RENDER_MODE.SCROLL;\n    this.render();\n    xTableAreaView.record();\n    this.renderMode = RENDER_MODE.RENDER;\n    this.reset();\n  }\n\n  /**\n   * 当前行是否存在旋转单元格\n   * @param row\n   * @returns {boolean}\n   */\n  hasAngleCell(row) {\n    const { rows } = this;\n    const rowObject = rows.getOrNew(row);\n    if (rowObject.reCkHasAngle === false) {\n      return rowObject.hasAngelCell;\n    }\n    const { cols, cells } = this;\n    const { len } = cols;\n    let hasAngelCell = false;\n    for (let i = 0; i < len; i += 1) {\n      const cell = cells.getCell(row, i);\n      if (cell) {\n        const { fontAttr } = cell;\n        const { direction } = fontAttr;\n        if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\n          hasAngelCell = true;\n          break;\n        }\n      }\n    }\n    rowObject.setReCkHasAngle(false);\n    rowObject.setHasAngelCell(hasAngelCell);\n    return hasAngelCell;\n  }\n\n  /**\n   * 单元格是否旋转\n   * @returns {boolean|boolean|*}\n   */\n  isAngleBarCell(row, col) {\n    const { cells, merges } = this;\n    const merge = merges.getFirstIncludes(row, col);\n    if (PlainUtils.isNotUnDef(merge)) {\n      return false;\n    }\n    const cell = cells.getCell(row, col);\n    if (PlainUtils.isUnDef(cell)) {\n      return false;\n    }\n    const { fontAttr, borderAttr } = cell;\n    if (fontAttr.direction !== BaseFont.TEXT_DIRECTION.ANGLE) {\n      return false;\n    }\n    const lessZero = fontAttr.angle < 0 && fontAttr.angle > -90;\n    const moreZero = fontAttr.angle > 0 && fontAttr.angle < 90;\n    return (lessZero || moreZero) && borderAttr.isDisplay();\n  }\n\n}\n\nexport {\n  XTableStyle,\n};\n","import { Widget } from '../../../../libs/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenZone extends Widget {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-x-screen-zone ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenZone,\r\n};\r\n","import { cssPrefix } from '../../../../const/Constant';\r\nimport { XScreenZone } from './XScreenZone';\r\n\r\nclass XScreenBRZone extends XScreenZone {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-x-screen-br-zone`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenBRZone,\r\n};\r\n","import { cssPrefix } from '../../../../const/Constant';\r\nimport { XScreenZone } from './XScreenZone';\r\n\r\nclass XScreenLTZone extends XScreenZone {\r\n\r\n  constructor(xScreen) {\r\n    super(`${cssPrefix}-x-screen-lt-zone`);\r\n    this.xScreen = xScreen;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenLTZone,\r\n};\r\n","import { cssPrefix } from '../../../../const/Constant';\r\nimport { XScreenZone } from './XScreenZone';\r\n\r\nclass XScreenLZone extends XScreenZone {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-x-screen-l-zone`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenLZone,\r\n};\r\n","import { cssPrefix } from '../../../../const/Constant';\r\nimport { XScreenZone } from './XScreenZone';\r\n\r\nclass XScreenTZone extends XScreenZone {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-x-screen-t-zone`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenTZone,\r\n};\r\n","import { Widget } from '../../../libs/Widget';\nimport { Constant, cssPrefix } from '../../../const/Constant';\nimport { XScreenBRZone } from './zone/XScreenBRZone';\nimport { XScreenLTZone } from './zone/XScreenLTZone';\nimport { XScreenLZone } from './zone/XScreenLZone';\nimport { XScreenTZone } from './zone/XScreenTZone';\nimport { XEvent } from '../../../libs/XEvent';\nimport { XDraw } from '../../../canvas/XDraw';\n\nconst DISPLAY_AREA = {\n  BRT: Symbol('BRT'),\n  BRL: Symbol('BRL'),\n  BR: Symbol('br'),\n  ALL: Symbol('ALL'),\n};\n\nclass XScreen extends Widget {\n\n  constructor(table) {\n    super(`${cssPrefix}-x-screen`);\n    this.pool = [];\n    this.table = table;\n    this.displayArea = DISPLAY_AREA.BR;\n    this.ltZone = new XScreenLTZone();\n    this.tZone = new XScreenTZone();\n    this.brZone = new XScreenBRZone();\n    this.lZone = new XScreenLZone();\n    this.children(this.ltZone);\n    this.children(this.tZone);\n    this.children(this.brZone);\n    this.children(this.lZone);\n  }\n\n  onAttach() {\n    this.bind();\n    this.setZone();\n  }\n\n  unbind() {\n    const { table } = this;\n    XEvent.unbind(table);\n  }\n\n  bind() {\n    const { table } = this;\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.SCALE_CHANGE, () => {\n      this.setZone();\n    });\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\n      this.setZone();\n    });\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\n      this.setZone();\n    });\n  }\n\n  addItem(item) {\n    this.pool.push(item);\n    this.ltZone.attach(item.lt);\n    this.tZone.attach(item.t);\n    this.lZone.attach(item.l);\n    this.brZone.attach(item.br);\n    item.setXScreen(this);\n    item.onAdd(this);\n  }\n\n  setZone() {\n    const { table } = this;\n    const { index } = table;\n    const fixedHeight = table.getFixedHeight();\n    const fixedWidth = table.getFixedWidth();\n    const brTop = index.getHeight() + fixedHeight;\n    const brLeft = index.getWidth() + fixedWidth;\n    this.brZone.offset({ left: brLeft, top: brTop });\n    const ltDisplay = fixedWidth > 0 && fixedHeight > 0;\n    const tDisplay = fixedHeight > 0;\n    const lDisplay = fixedWidth > 0;\n    this.ltZone.hide();\n    this.lZone.hide();\n    this.tZone.hide();\n    const width = XDraw.dpr();\n    if (ltDisplay) {\n      this.displayArea = DISPLAY_AREA.ALL;\n      this.ltZone.offset({\n        left: index.getWidth(), top: index.getHeight(), width: fixedWidth, height: fixedHeight,\n      }).show();\n      this.ltZone.css('border-width', `${width}px`);\n      this.lZone.offset({\n        left: index.getWidth(),\n        top: brTop,\n        width: fixedWidth,\n        height: table.visualHeight() - index.getHeight() - fixedHeight,\n      }).show();\n      this.lZone.css('border-width', `${width}px`);\n      this.tZone.offset({\n        left: brLeft,\n        top: index.getHeight(),\n        width: table.visualWidth() - index.getWidth() - fixedWidth,\n        height: fixedHeight,\n      }).show();\n      this.tZone.css('border-width', `${width}px`);\n    } else if (lDisplay) {\n      this.displayArea = DISPLAY_AREA.BRL;\n      this.lZone.offset({\n        left: index.getWidth(),\n        top: brTop,\n        width: fixedWidth,\n        height: table.visualHeight() - index.getHeight() - fixedHeight,\n      }).show();\n      this.lZone.css('border-width', `${width}px`);\n    } else if (tDisplay) {\n      this.displayArea = DISPLAY_AREA.BRL;\n      this.tZone.offset({\n        left: brLeft,\n        top: index.getHeight(),\n        width: table.visualWidth() - index.getWidth() - fixedWidth,\n        height: fixedHeight,\n      }).show();\n      this.tZone.css('border-width', `${width}px`);\n    } else {\n      this.displayArea = DISPLAY_AREA.BR;\n    }\n  }\n\n  findType(type) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const item of this.pool) {\n      if (item instanceof type) {\n        return item;\n      }\n    }\n    return null;\n  }\n\n  destroy() {\n    super.destroy();\n    this.unbind();\n    this.pool.forEach((item) => {\n      item.destroy();\n    });\n  }\n\n}\n\nexport {\n  XScreen, DISPLAY_AREA,\n};\n","import { ELContextMenuItem } from '../contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\n\r\nclass AutoFillTypeMenuItem extends ELContextMenuItem {\r\n\r\n  constructor({ text, value }) {\r\n    super(`${cssPrefix}-auto-fill-menu-item`);\r\n    this.text = text;\r\n    this.value = value;\r\n    this.textEle = h('div', `${cssPrefix}-auto-fill-menu-item-title`);\r\n    this.textEle.text(text);\r\n    this.children(this.textEle);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AutoFillTypeMenuItem,\r\n};\r\n","import { ELContextMenu } from '../contextmenu/ELContextMenu';\r\nimport { Constant, cssPrefix } from '../../const/Constant';\r\nimport { AutoFillTypeMenuItem } from './AutoFillTypeMenuItem';\r\nimport { XEvent } from '../../libs/XEvent';\r\n\r\nclass AutoFillTypeMenu extends ELContextMenu {\r\n\r\n  constructor(options = {\r\n    onUpdate: () => {},\r\n  }) {\r\n    super(`${cssPrefix}-auto-fill-menu`, options);\r\n    this.addItem(new AutoFillTypeMenuItem({ text: '以序列的方式填充', value: AutoFillTypeMenu.FILL_TYPE.SERIALIZE }).attr('title', '只有在起始单元格内容为数字时才生效'));\r\n    this.addItem(new AutoFillTypeMenuItem({ text: '填充单元格内容', value: AutoFillTypeMenu.FILL_TYPE.FILLING }).attr('title', '默认使用内容填充'));\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    this.menus.forEach((menu) => {\r\n      XEvent.unbind(menu);\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    this.menus.forEach((menu) => {\r\n      XEvent.bind(menu, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n        this.options.onUpdate(menu);\r\n      });\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\nAutoFillTypeMenu.FILL_TYPE = {\r\n  SERIALIZE: 1, FILLING: 2,\r\n};\r\n\r\nexport {\r\n  AutoFillTypeMenu,\r\n};\r\n","import { Constant, cssPrefix } from '../../const/Constant';\r\nimport { ELContextMenu } from '../contextmenu/ELContextMenu';\r\nimport { XEvent } from '../../libs/XEvent';\r\nimport { AutoFillTypeMenu } from './AutoFillTypeMenu';\r\n\r\nclass AutoFillType extends ELContextMenu {\r\n\r\n  constructor(options = {\r\n    onUpdate: () => {},\r\n  }) {\r\n    super(`${cssPrefix}-auto-fill-type`, options);\r\n    this.autoFillTypeMenu = new AutoFillTypeMenu({\r\n      el: this,\r\n      onUpdate: (menu) => {\r\n        this.options.onUpdate(menu);\r\n        this.autoFillTypeMenu.close();\r\n        this.close();\r\n      },\r\n    });\r\n    this.bind();\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.autoFillTypeMenu.open();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.autoFillTypeMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AutoFillType,\r\n};\r\n","import { RectRange } from '../tablebase/RectRange';\r\nimport { BaseCellsHelper } from './BaseCellsHelper';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\nclass CopyMerge {\r\n\r\n  constructor({\r\n    targetViewRange,\r\n    originViewRange,\r\n    merge = () => {},\r\n    master = () => {},\r\n    onCopy = () => {},\r\n    xIteratorBuilder,\r\n  }) {\r\n    this.targetViewRange = targetViewRange;\r\n    this.originViewRange = originViewRange;\r\n    this.master = master;\r\n    this.merge = merge;\r\n    this.onCopy = onCopy;\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n  }\r\n\r\n  copyStartRow() {\r\n    const { originViewRange } = this;\r\n    return originViewRange.sri;\r\n  }\r\n\r\n  copyEndRow() {\r\n    const { originViewRange } = this;\r\n    return originViewRange.eri;\r\n  }\r\n\r\n  nextCopyRow(row) {\r\n    const endRow = this.copyEndRow();\r\n    if (row >= endRow) {\r\n      return this.copyStartRow();\r\n    }\r\n    return row + 1;\r\n  }\r\n\r\n  copyStartCol() {\r\n    const { originViewRange } = this;\r\n    return originViewRange.sci;\r\n  }\r\n\r\n  copyEndCol() {\r\n    const { originViewRange } = this;\r\n    return originViewRange.eci;\r\n  }\r\n\r\n  nextCopyCol(col) {\r\n    const endCol = this.copyEndCol();\r\n    if (col >= endCol) {\r\n      return this.copyStartCol();\r\n    }\r\n    return col + 1;\r\n  }\r\n\r\n  pasteStartRow() {\r\n    const { targetViewRange } = this;\r\n    return targetViewRange.sri;\r\n  }\r\n\r\n  pasteEndRow() {\r\n    const { targetViewRange } = this;\r\n    return targetViewRange.eri;\r\n  }\r\n\r\n  pasteStartCol() {\r\n    const { targetViewRange } = this;\r\n    return targetViewRange.sci;\r\n  }\r\n\r\n  pasteEndCol() {\r\n    const { targetViewRange } = this;\r\n    return targetViewRange.eci;\r\n  }\r\n\r\n  executeCopy() {\r\n    let ori = this.copyStartRow();\r\n    this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(this.pasteStartRow())\r\n      .setEnd(this.pasteEndRow())\r\n      .setLoop((tri) => {\r\n        let oci = this.copyStartCol();\r\n        this.xIteratorBuilder.getColIterator()\r\n          .setBegin(this.pasteStartCol())\r\n          .setEnd(this.pasteEndCol())\r\n          .setLoop((tci) => {\r\n            const merge = this.merge(ori, oci);\r\n            if (merge && this.master(ori, oci, merge)) {\r\n              this.onCopy(tri, tci, merge);\r\n            }\r\n          })\r\n          .setNext(() => {\r\n            oci = this.nextCopyCol(oci);\r\n          })\r\n          .execute();\r\n      })\r\n      .setNext(() => {\r\n        ori = this.nextCopyRow(ori);\r\n      })\r\n      .foldOnOff(false)\r\n      .execute();\r\n  }\r\n\r\n}\r\n\r\nclass CopyCellIN {\r\n\r\n  constructor({\r\n    targetViewRange,\r\n    originViewRange,\r\n    onCopy = () => {},\r\n    xIteratorBuilder,\r\n  }) {\r\n    this.targetViewRange = targetViewRange;\r\n    this.originViewRange = originViewRange;\r\n    this.onCopy = onCopy;\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n  }\r\n\r\n  copyStartRow() {\r\n    const { originViewRange } = this;\r\n    const { sri, eri } = originViewRange;\r\n    return this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(sri - 1)\r\n      .setEnd(eri)\r\n      .nextRow();\r\n  }\r\n\r\n  copyEndRow() {\r\n    const { originViewRange } = this;\r\n    const { sri, eri } = originViewRange;\r\n    return this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(eri + 1)\r\n      .setEnd(sri)\r\n      .nextRow();\r\n  }\r\n\r\n  nextCopyRow(row) {\r\n    const endRow = this.copyEndRow();\r\n    if (row >= endRow) {\r\n      return this.copyStartRow();\r\n    }\r\n    return this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(row)\r\n      .setEnd(endRow)\r\n      .nextRow();\r\n  }\r\n\r\n  copyStartCol() {\r\n    const { originViewRange } = this;\r\n    return originViewRange.sci;\r\n  }\r\n\r\n  copyEndCol() {\r\n    const { originViewRange } = this;\r\n    return originViewRange.eci;\r\n  }\r\n\r\n  nextCopyCol(col) {\r\n    const endCol = this.copyEndCol();\r\n    if (col >= endCol) {\r\n      return this.copyStartCol();\r\n    }\r\n    return col + 1;\r\n  }\r\n\r\n  pasteStartRow() {\r\n    const { targetViewRange } = this;\r\n    return targetViewRange.sri;\r\n  }\r\n\r\n  pasteEndRow() {\r\n    const { targetViewRange } = this;\r\n    return targetViewRange.eri;\r\n  }\r\n\r\n  pasteStartCol() {\r\n    const { targetViewRange } = this;\r\n    return targetViewRange.sci;\r\n  }\r\n\r\n  pasteEndCol() {\r\n    const { targetViewRange } = this;\r\n    return targetViewRange.eci;\r\n  }\r\n\r\n  executeCopy() {\r\n    let ori = this.copyStartRow();\r\n    this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(this.pasteStartRow())\r\n      .setEnd(this.pasteEndRow())\r\n      .setLoop((tri) => {\r\n        let oci = this.copyStartCol();\r\n        this.xIteratorBuilder.getColIterator()\r\n          .setBegin(this.pasteStartCol())\r\n          .setEnd(this.pasteEndCol())\r\n          .setLoop((tci) => {\r\n            this.onCopy(tri, tci, ori, oci);\r\n          })\r\n          .setNext(() => {\r\n            oci = this.nextCopyCol(oci);\r\n          })\r\n          .execute();\r\n      })\r\n      .setNext(() => {\r\n        ori = this.nextCopyRow(ori);\r\n      })\r\n      .execute();\r\n  }\r\n\r\n}\r\n\r\nclass Serialize {\r\n\r\n  constructor({\r\n    originViewRange,\r\n    direction,\r\n    getStartIndex,\r\n    onSerialize,\r\n    xIteratorBuilder,\r\n  }) {\r\n    this.originViewRange = originViewRange;\r\n    this.direction = direction;\r\n    this.getStartIndex = getStartIndex;\r\n    this.onSerialize = onSerialize;\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n  }\r\n\r\n  serializeRight() {\r\n    const { originViewRange, onSerialize, getStartIndex } = this;\r\n    const { sri, sci, eri, eci } = originViewRange;\r\n    let ret = true;\r\n    this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(sri)\r\n      .setEnd(eri)\r\n      .setLoop((ri) => {\r\n        let start = PlainUtils.Nul;\r\n        this.xIteratorBuilder.getColIterator()\r\n          .setBegin(sci)\r\n          .setEnd(eci)\r\n          .setLoop((ci) => {\r\n            if (start === PlainUtils.Nul) {\r\n              const index = getStartIndex(ri, ci);\r\n              if (!PlainUtils.isNumber(index)) {\r\n                ret = false;\r\n              } else {\r\n                start = parseInt(index, 10);\r\n              }\r\n            } else {\r\n              start += 1;\r\n              onSerialize(ri, ci, start);\r\n            }\r\n            return ret;\r\n          })\r\n          .execute();\r\n        return ret;\r\n      })\r\n      .execute();\r\n  }\r\n\r\n  serializeBottom() {\r\n    const { originViewRange, onSerialize, getStartIndex } = this;\r\n    const { sri, sci, eri, eci } = originViewRange;\r\n    let ret = true;\r\n    this.xIteratorBuilder.getColIterator()\r\n      .setBegin(sci)\r\n      .setEnd(eci)\r\n      .setLoop((ci) => {\r\n        let start = PlainUtils.Nul;\r\n        this.xIteratorBuilder.getRowIterator()\r\n          .setBegin(sri)\r\n          .setEnd(eri)\r\n          .setLoop((ri) => {\r\n            if (start === PlainUtils.Nul) {\r\n              const index = getStartIndex(ri, ci);\r\n              if (!PlainUtils.isNumber(index)) {\r\n                ret = false;\r\n              } else {\r\n                start = parseInt(index, 10);\r\n              }\r\n            } else {\r\n              start += 1;\r\n              onSerialize(ri, ci, start);\r\n            }\r\n            return ret;\r\n          })\r\n          .execute();\r\n        return ret;\r\n      })\r\n      .execute();\r\n  }\r\n\r\n  serializeTop() {\r\n    const { originViewRange, onSerialize, getStartIndex } = this;\r\n    const { sri, sci, eri, eci } = originViewRange;\r\n    let ret = true;\r\n    this.xIteratorBuilder.getColIterator()\r\n      .setBegin(sci)\r\n      .setEnd(eci)\r\n      .setLoop((ci) => {\r\n        let start = PlainUtils.Nul;\r\n        this.xIteratorBuilder.getRowIterator()\r\n          .setBegin(eri)\r\n          .setEnd(sri)\r\n          .setLoop((ri) => {\r\n            if (start === PlainUtils.Nul) {\r\n              const index = getStartIndex(ri, ci);\r\n              if (!PlainUtils.isNumber(index)) {\r\n                ret = false;\r\n              } else {\r\n                start = parseInt(index, 10);\r\n              }\r\n            } else {\r\n              start -= 1;\r\n              onSerialize(ri, ci, start);\r\n            }\r\n            return ret;\r\n          })\r\n          .execute();\r\n        return ret;\r\n      })\r\n      .execute();\r\n  }\r\n\r\n  serializeLeft() {\r\n    const { originViewRange, onSerialize, getStartIndex } = this;\r\n    const { sri, sci, eri, eci } = originViewRange;\r\n    let ret = true;\r\n    this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(sri)\r\n      .setEnd(eri)\r\n      .setLoop((ri) => {\r\n        let start = PlainUtils.Nul;\r\n        this.xIteratorBuilder.getColIterator()\r\n          .setBegin(eci)\r\n          .setEnd(sci)\r\n          .setLoop((ci) => {\r\n            if (start === PlainUtils.Nul) {\r\n              const index = getStartIndex(ri, ci);\r\n              if (!PlainUtils.isNumber(index)) {\r\n                ret = false;\r\n              } else {\r\n                start = parseInt(index, 10);\r\n              }\r\n            } else {\r\n              start -= 1;\r\n              onSerialize(ri, ci, start);\r\n            }\r\n          })\r\n          .execute();\r\n        return ret;\r\n      })\r\n      .execute();\r\n  }\r\n\r\n  executeSerialize() {\r\n    const { direction } = this;\r\n    switch (direction) {\r\n      case Serialize.SERIALIZE_DIRECTION.LEFT:\r\n        this.serializeLeft();\r\n        break;\r\n      case Serialize.SERIALIZE_DIRECTION.TOP:\r\n        this.serializeTop();\r\n        break;\r\n      case Serialize.SERIALIZE_DIRECTION.RIGHT:\r\n        this.serializeRight();\r\n        break;\r\n      case Serialize.SERIALIZE_DIRECTION.BOTTOM:\r\n        this.serializeBottom();\r\n        break;\r\n    }\r\n  }\r\n\r\n}\r\nSerialize.SERIALIZE_DIRECTION = {\r\n  RIGHT: 3,\r\n  BOTTOM: 4,\r\n  TOP: 1,\r\n  LEFT: 2,\r\n};\r\n\r\nclass CellMergeCopyHelper extends BaseCellsHelper {\r\n\r\n  constructor(table) {\r\n    super();\r\n    this.table = table;\r\n  }\r\n\r\n  getStyleTable() {\r\n    return this.table.xTableStyle;\r\n  }\r\n\r\n  getTableDataSnapshot() {\r\n    return this.table.tableDataSnapshot;\r\n  }\r\n\r\n  getXTableAreaView() {\r\n    return this.table.xTableAreaView;\r\n  }\r\n\r\n  getRows() {\r\n    return this.table.rows;\r\n  }\r\n\r\n  getCols() {\r\n    return this.table.cols;\r\n  }\r\n\r\n  getCells() {\r\n    return this.table.getTableCells();\r\n  }\r\n\r\n  getMerges() {\r\n    return this.table.getTableMerges();\r\n  }\r\n\r\n  getXIteratorBuilder() {\r\n    return this.table.xIteratorBuilder;\r\n  }\r\n\r\n  copyCellINContent({\r\n    originViewRange, targetViewRange,\r\n  }) {\r\n    const { table } = this;\r\n    const { xIteratorBuilder } = table;\r\n    const tableDataSnapshot = this.getTableDataSnapshot();\r\n    const cells = this.getCells();\r\n    const { cellDataProxy } = tableDataSnapshot;\r\n    const copy = new CopyCellIN({\r\n      originViewRange,\r\n      targetViewRange,\r\n      xIteratorBuilder,\r\n      onCopy: (tri, tci, ori, oci) => {\r\n        const src = cells.getCell(ori, oci);\r\n        if (src) {\r\n          const target = src.clone();\r\n          cellDataProxy.setCell(tri, tci, target);\r\n        }\r\n      },\r\n    });\r\n    copy.executeCopy();\r\n  }\r\n\r\n  copyMergeContent({\r\n    originViewRange, targetViewRange,\r\n  }) {\r\n    const { table } = this;\r\n    const { xIteratorBuilder } = table;\r\n    const tableDataSnapshot = this.getTableDataSnapshot();\r\n    const merges = this.getMerges();\r\n    const { mergeDataProxy } = tableDataSnapshot;\r\n    const copy = new CopyMerge({\r\n      originViewRange,\r\n      targetViewRange,\r\n      xIteratorBuilder,\r\n      merge: (ri, ci) => merges.getFirstIncludes(ri, ci),\r\n      master: (ri, ci, m) => m.sri === ri && m.sci === ci,\r\n      onCopy: (ri, ci, m) => {\r\n        let [rSize, cSize] = m.size();\r\n        cSize -= 1;\r\n        rSize -= 1;\r\n        const newMerge = new RectRange(ri, ci, ri + rSize, ci + cSize);\r\n        const hasFold = xIteratorBuilder.getRowIterator()\r\n          .setBegin(newMerge.sri)\r\n          .setEnd(newMerge.eri)\r\n          .hasFold();\r\n        if (hasFold) {\r\n          return;\r\n        }\r\n        newMerge.each(xIteratorBuilder, (ri, ci) => {\r\n          const merge = merges.getFirstIncludes(ri, ci);\r\n          if (merge) {\r\n            mergeDataProxy.deleteMerge(merge);\r\n          }\r\n        });\r\n        mergeDataProxy.addMerge(newMerge);\r\n      },\r\n    });\r\n    copy.executeCopy();\r\n  }\r\n\r\n  copyStylesContent({\r\n    originViewRange, targetViewRange,\r\n  }) {\r\n    const { table } = this;\r\n    const { xIteratorBuilder } = table;\r\n    const tableDataSnapshot = this.getTableDataSnapshot();\r\n    const cells = this.getCells();\r\n    const { cellDataProxy } = tableDataSnapshot;\r\n    const copy = new CopyCellIN({\r\n      originViewRange,\r\n      targetViewRange,\r\n      xIteratorBuilder,\r\n      onCopy: (tri, tci, ori, oci) => {\r\n        const src = cells.getCell(ori, oci);\r\n        if (src) {\r\n          const target = cells.getCellOrNew(tri, tci);\r\n          const clone = src.clone();\r\n          clone.text = target.text;\r\n          cellDataProxy.setCell(tri, tci, clone);\r\n        }\r\n      },\r\n    });\r\n    copy.executeCopy();\r\n  }\r\n\r\n  serializeContent({\r\n    originViewRange, direction,\r\n  }) {\r\n    const { table } = this;\r\n    const { xIteratorBuilder } = table;\r\n    const tableDataSnapshot = this.getTableDataSnapshot();\r\n    const cells = this.getCells();\r\n    const { cellDataProxy } = tableDataSnapshot;\r\n    const serialize = new Serialize({\r\n      originViewRange,\r\n      direction,\r\n      xIteratorBuilder,\r\n      getStartIndex: (ri, ci) => {\r\n        const cell = cells.getCell(ri, ci);\r\n        if (cell) {\r\n          return cell.text;\r\n        }\r\n        return PlainUtils.Nul;\r\n      },\r\n      onSerialize: (ri, ci, index) => {\r\n        const cell = cells.getCellOrNew(ri, ci);\r\n        const clone = cell.clone();\r\n        clone.text = `${index}`;\r\n        cellDataProxy.setCell(ri, ci, clone);\r\n      },\r\n    });\r\n    serialize.executeSerialize();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  CellMergeCopyHelper,\r\n  CopyMerge,\r\n  Serialize,\r\n  CopyCellIN,\r\n};\r\n","/* global document */\r\nimport { SELECT_LOCAL, XSelectItem } from '../xselect/XSelectItem';\r\nimport { XScreenCssBorderItem } from '../../xscreen/item/viewborder/XScreenCssBorderItem';\r\nimport { Widget } from '../../../../libs/Widget';\r\nimport { Constant, cssPrefix } from '../../../../const/Constant';\r\nimport { RectRange } from '../../tablebase/RectRange';\r\nimport { PlainUtils } from '../../../../utils/PlainUtils';\r\nimport { XEvent } from '../../../../libs/XEvent';\r\nimport { XTableMousePointer } from '../../XTableMousePointer';\r\nimport { AutoFillType } from '../../../../component/autofilltype/AutoFillType';\r\nimport { Serialize } from '../../helper/CellMergeCopyHelper';\r\nimport { AutoFillTypeMenu } from '../../../../component/autofilltype/AutoFillTypeMenu';\r\n\r\nclass XAutoFillItem extends XScreenCssBorderItem {\r\n\r\n  constructor(table, options = {}) {\r\n    super({ table });\r\n    this.options = PlainUtils.copy({\r\n      mergeForceSplit: false,\r\n      onBeforeAutoFill: () => {},\r\n      onAfterAutoFill: () => {},\r\n    }, options);\r\n    this.moveDirection = null;\r\n    this.autoFillRange = RectRange.EMPTY;\r\n    this.display = false;\r\n    this.ltElem = new Widget(`${cssPrefix}-x-autofill-area`);\r\n    this.brElem = new Widget(`${cssPrefix}-x-autofill-area`);\r\n    this.lElem = new Widget(`${cssPrefix}-x-autofill-area`);\r\n    this.tElem = new Widget(`${cssPrefix}-x-autofill-area`);\r\n    this.blt.children(this.ltElem);\r\n    this.bl.children(this.lElem);\r\n    this.bt.children(this.tElem);\r\n    this.bbr.children(this.brElem);\r\n    this.setBorderType('dashed');\r\n  }\r\n\r\n  onAdd() {\r\n    this.bind();\r\n    this.hide();\r\n  }\r\n\r\n  unbind() {\r\n    const { xScreen } = this;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    XEvent.bind([\r\n      xSelect.ltCorner,\r\n      xSelect.tCorner,\r\n      xSelect.lCorner,\r\n      xSelect.brCorner,\r\n    ]);\r\n    XEvent.bind([\r\n      xSelect.ltCorner,\r\n      xSelect.tCorner,\r\n      xSelect.lCorner,\r\n      xSelect.brCorner,\r\n    ]);\r\n    XEvent.bind([\r\n      xSelect.ltCorner,\r\n      xSelect.tCorner,\r\n      xSelect.lCorner,\r\n      xSelect.brCorner,\r\n    ]);\r\n  }\r\n\r\n  bind() {\r\n    const { table, xScreen } = this;\r\n    const { mousePointer } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const autoFillType = new AutoFillType({\r\n      onUpdate: (menu) => {\r\n        const { value } = menu;\r\n        switch (value) {\r\n          case AutoFillTypeMenu.FILL_TYPE.SERIALIZE:\r\n            this.serialize();\r\n            break;\r\n          case AutoFillTypeMenu.FILL_TYPE.FILLING:\r\n            break;\r\n        }\r\n      },\r\n    });\r\n    XEvent.bind([\r\n      xSelect.ltCorner,\r\n      xSelect.tCorner,\r\n      xSelect.lCorner,\r\n      xSelect.brCorner,\r\n    ], Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      mousePointer.free(XAutoFillItem);\r\n    });\r\n    XEvent.bind([\r\n      xSelect.ltCorner,\r\n      xSelect.tCorner,\r\n      xSelect.lCorner,\r\n      xSelect.brCorner,\r\n    ], Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, () => {\r\n      mousePointer.lock(XAutoFillItem);\r\n      mousePointer.set(XTableMousePointer.KEYS.crosshair, XAutoFillItem);\r\n    });\r\n    XEvent.bind([\r\n      xSelect.ltCorner,\r\n      xSelect.tCorner,\r\n      xSelect.lCorner,\r\n      xSelect.brCorner,\r\n    ], Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\r\n      this.display = true;\r\n      mousePointer.lock(XAutoFillItem);\r\n      mousePointer.set(XTableMousePointer.KEYS.crosshair, XAutoFillItem);\r\n      const { x, y } = table.eventXy(e1);\r\n      this.rangeHandle(x, y);\r\n      this.offsetHandle();\r\n      this.borderHandle();\r\n      XEvent.mouseMoveUp(document, (e2) => {\r\n        const { x, y } = table.eventXy(e2);\r\n        this.rangeHandle(x, y);\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }, () => {\r\n        this.display = false;\r\n        mousePointer.free(XAutoFillItem);\r\n        this.autoFill();\r\n        this.hide();\r\n        const { autoFillRange } = this;\r\n        if (!autoFillRange.equals(RectRange.EMPTY)) {\r\n          const { selectRange } = xSelect;\r\n          xSelect.setRange(selectRange.union(autoFillRange));\r\n          const { activeCorner } = xSelect;\r\n          autoFillType.setEL(activeCorner);\r\n          autoFillType.open();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  rangeHandle(x, y) {\r\n    const { table } = this;\r\n    const { xIteratorBuilder, xScreen } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const merges = table.getTableMerges();\r\n    const { selectRange, selectLocal } = xSelect;\r\n    const { cols, rows } = table;\r\n    const { sri, sci, eri, eci } = selectRange;\r\n    const { ri, ci } = table.getRiCiByXy(x, y);\r\n\r\n    const merge = merges.getFirstIncludes(sri, sci);\r\n    const zone = SELECT_LOCAL.BR !== selectLocal;\r\n    const hasFull = zone || PlainUtils.isNotUnDef(merge);\r\n    const [rSize, cSize] = selectRange.size();\r\n\r\n    let originSRi = ri;\r\n    let originSCi = ci;\r\n\r\n    // 检测边界\r\n    if (originSRi < 0) {\r\n      originSRi = 0;\r\n    } else if (originSRi > rows.len) {\r\n      originSRi = rows.len - 1;\r\n    }\r\n    if (originSCi < 0) {\r\n      originSCi = 0;\r\n    } else if (originSCi > cols.len) {\r\n      originSCi = cols.len - 1;\r\n    }\r\n\r\n    let autoFillRange = RectRange.EMPTY;\r\n    let moveDirection = PlainUtils.Undef;\r\n\r\n    // 选择区域\r\n    if (originSRi < sri || ri > eri) {\r\n      // 上下\r\n      if (originSRi < sri) {\r\n        moveDirection = Serialize.SERIALIZE_DIRECTION.TOP;\r\n        if (hasFull) {\r\n          let minRi = sri;\r\n          let number = 0;\r\n          xIteratorBuilder.getRowIterator()\r\n            .setBegin(sri - 1)\r\n            .setEnd(0)\r\n            .setLoop((i) => {\r\n              if (i < ri) {\r\n                return false;\r\n              }\r\n              if (number % rSize === 0) {\r\n                const value = minRi - rSize;\r\n                if (value >= 0) {\r\n                  minRi = value;\r\n                }\r\n              }\r\n              number += 1;\r\n              return true;\r\n            })\r\n            .foldOnOff(false)\r\n            .execute();\r\n          if (minRi !== sri) {\r\n            autoFillRange = new RectRange(minRi, sci, sri - 1, eci);\r\n          }\r\n        } else {\r\n          const nextRow = xIteratorBuilder.getRowIterator()\r\n            .setBegin(sri)\r\n            .setEnd(0)\r\n            .nextRow();\r\n          autoFillRange = new RectRange(ri, sci, nextRow, eci);\r\n        }\r\n      }\r\n      if (originSRi > eri) {\r\n        moveDirection = Serialize.SERIALIZE_DIRECTION.BOTTOM;\r\n        if (hasFull) {\r\n          let maxRi = eri;\r\n          let number = 0;\r\n          xIteratorBuilder.getRowIterator()\r\n            .setBegin(eri + 1)\r\n            .setEnd(rows.len - 1)\r\n            .setLoop((i) => {\r\n              if (i > ri) {\r\n                return false;\r\n              }\r\n              if (number % rSize === 0) {\r\n                const value = maxRi + rSize;\r\n                if (value >= 0) {\r\n                  maxRi = value;\r\n                }\r\n              }\r\n              number += 1;\r\n              return true;\r\n            })\r\n            .foldOnOff(false)\r\n            .execute();\r\n          if (maxRi !== eri) {\r\n            autoFillRange = new RectRange(eri + 1, sci, maxRi, eci);\r\n          }\r\n        } else {\r\n          const nextRow = xIteratorBuilder.getRowIterator()\r\n            .setBegin(eri)\r\n            .setEnd(rows.len - 1)\r\n            .nextRow();\r\n          autoFillRange = new RectRange(nextRow, sci, ri, eci);\r\n        }\r\n      }\r\n    } else if (originSCi < sci || ci > eci) {\r\n      // 左右\r\n      if (originSCi < sci) {\r\n        moveDirection = Serialize.SERIALIZE_DIRECTION.LEFT;\r\n        if (hasFull) {\r\n          let minCi = sci;\r\n          let number = 0;\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(sci - 1)\r\n            .setEnd(0)\r\n            .setLoop((i) => {\r\n              if (i < ci) {\r\n                return false;\r\n              }\r\n              if (number % cSize === 0) {\r\n                const value = minCi - cSize;\r\n                if (value >= 0) {\r\n                  minCi = value;\r\n                }\r\n              }\r\n              number += 1;\r\n              return true;\r\n            })\r\n            .execute();\r\n          if (minCi !== sci) {\r\n            autoFillRange = new RectRange(sri, minCi, eri, sci - 1);\r\n          }\r\n        } else {\r\n          const nextCol = xIteratorBuilder.getColIterator()\r\n            .setBegin(sci)\r\n            .setEnd(0)\r\n            .nextRow();\r\n          autoFillRange = new RectRange(sri, ci, eri, nextCol);\r\n        }\r\n      }\r\n      if (originSCi > eci) {\r\n        moveDirection = Serialize.SERIALIZE_DIRECTION.RIGHT;\r\n        if (hasFull) {\r\n          let maxCi = eci;\r\n          let number = 0;\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(eci + 1)\r\n            .setEnd(cols.len - 1)\r\n            .setLoop((i) => {\r\n              if (i > ci) {\r\n                return false;\r\n              }\r\n              if (number % cSize === 0) {\r\n                const value = maxCi + cSize;\r\n                if (value >= 0) {\r\n                  maxCi = value;\r\n                }\r\n              }\r\n              number += 1;\r\n              return true;\r\n            })\r\n            .execute();\r\n          if (maxCi !== eci) {\r\n            autoFillRange = new RectRange(sri, eci + 1, eri, maxCi);\r\n          }\r\n        } else {\r\n          const nextCol = xIteratorBuilder.getColIterator()\r\n            .setBegin(eci)\r\n            .setEnd(cols.len - 1)\r\n            .nextRow();\r\n          autoFillRange = new RectRange(sri, nextCol, eri, ci);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (autoFillRange) {\r\n      const width = cols.sectionSumWidth(autoFillRange.sci, autoFillRange.eci);\r\n      const height = rows.sectionSumHeight(autoFillRange.sri, autoFillRange.eri);\r\n      autoFillRange.w = width;\r\n      autoFillRange.h = height;\r\n    }\r\n    this.autoFillRange = autoFillRange;\r\n    this.moveDirection = moveDirection;\r\n  }\r\n\r\n  borderHandle() {\r\n    const { xScreen, autoFillRange, display } = this;\r\n    if (display === false || autoFillRange.equals(RectRange.EMPTY)) {\r\n      this.hideBorder();\r\n    } else {\r\n      const xSelect = xScreen.findType(XSelectItem);\r\n      const { selectRange } = xSelect;\r\n      const unionRange = selectRange.union(autoFillRange);\r\n      this.showBorder(unionRange);\r\n    }\r\n  }\r\n\r\n  offsetHandle() {\r\n    const { xScreen, autoFillRange, display } = this;\r\n    if (display === false || autoFillRange.equals(RectRange.EMPTY)) {\r\n      this.hide();\r\n    } else {\r\n      const xSelect = xScreen.findType(XSelectItem);\r\n      const { selectRange } = xSelect;\r\n      const unionRange = selectRange.union(autoFillRange);\r\n      this.show();\r\n      this.setDisplay(unionRange);\r\n      this.setSizer(unionRange);\r\n      this.setLocal(unionRange);\r\n    }\r\n  }\r\n\r\n  serialize() {\r\n    const { table, xScreen, autoFillRange, moveDirection } = this;\r\n    const { cellMergeCopyHelper } = table;\r\n    const { tableDataSnapshot } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    tableDataSnapshot.begin();\r\n    cellMergeCopyHelper.serializeContent({\r\n      originViewRange: autoFillRange.union(xSelect.selectRange),\r\n      direction: moveDirection,\r\n    });\r\n    tableDataSnapshot.end();\r\n    table.render();\r\n  }\r\n\r\n  autoFill() {\r\n    const { autoFillRange } = this;\r\n    if (autoFillRange.equals(RectRange.EMPTY)) {\r\n      return;\r\n    }\r\n    const { table, options } = this;\r\n    const { tableDataSnapshot } = table;\r\n    options.onBeforeAutoFill();\r\n    tableDataSnapshot.begin();\r\n    this.splitMerge();\r\n    this.fillMerge();\r\n    this.fillCellIN();\r\n    tableDataSnapshot.end();\r\n    options.onAfterAutoFill();\r\n    table.render();\r\n  }\r\n\r\n  fillMerge() {\r\n    const { table, xScreen, autoFillRange } = this;\r\n    const { cellMergeCopyHelper } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    cellMergeCopyHelper.copyMergeContent({\r\n      targetViewRange: autoFillRange,\r\n      originViewRange: xSelect.selectRange,\r\n    });\r\n  }\r\n\r\n  fillCellIN() {\r\n    const { table, xScreen, autoFillRange } = this;\r\n    const { cellMergeCopyHelper } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    cellMergeCopyHelper.copyCellINContent({\r\n      targetViewRange: autoFillRange,\r\n      originViewRange: xSelect.selectRange,\r\n    });\r\n  }\r\n\r\n  splitMerge() {\r\n    const { table, autoFillRange } = this;\r\n    const merges = table.getTableMerges();\r\n    const { tableDataSnapshot } = table;\r\n    const { mergeDataProxy } = tableDataSnapshot;\r\n    merges.getIncludes(autoFillRange, (merge) => {\r\n      mergeDataProxy.deleteMerge(merge);\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XAutoFillItem,\r\n};\r\n","import { Widget } from '../../../../libs/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\nimport { h } from '../../../../libs/Element';\r\n\r\nclass DropRowFixed extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-drop-row-fixed-bar`);\r\n    this.block = h('div', `${cssPrefix}-table-drop-row-fixed-block`);\r\n    this.children(this.block);\r\n    this.table = table;\r\n  }\r\n\r\n  onAttach() {\r\n    this.setSize();\r\n    this.hide();\r\n  }\r\n\r\n  setSize() {\r\n    const { table, block } = this;\r\n    const width = table.visualWidth();\r\n    const height = 6;\r\n    block.offset({\r\n      width: table.getIndexWidth(), height,\r\n    });\r\n    this.offset({\r\n      height, width, left: 0,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  DropRowFixed,\r\n};\r\n","import { Widget } from '../../../../libs/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\nimport { h } from '../../../../libs/Element';\r\n\r\nclass DropColFixed extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-drop-col-fixed-bar`);\r\n    this.block = h('div', `${cssPrefix}-table-drop-col-fixed-block`);\r\n    this.children(this.block);\r\n    this.table = table;\r\n  }\r\n\r\n  onAttach() {\r\n    this.setSize();\r\n    this.hide();\r\n  }\r\n\r\n  setSize() {\r\n    const { table, block } = this;\r\n    const height = table.visualHeight();\r\n    const width = 6;\r\n    block.offset({\r\n      height: table.getIndexHeight(), width,\r\n    });\r\n    this.offset({\r\n      height, width, top: 0,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  DropColFixed,\r\n};\r\n","import { RectRange } from './RectRange';\r\n\r\nclass XFixedView {\r\n\r\n  constructor({\r\n    fixedView = new RectRange(0, 0, -1, -1),\r\n    fxLeft = -1,\r\n    fxTop = -1,\r\n  }) {\r\n    this.fixedView = fixedView;\r\n    if (fxLeft > -1) {\r\n      this.fixedView.eci = fxLeft;\r\n    }\r\n    if (fxTop > -1) {\r\n      this.fixedView.eri = fxTop;\r\n    }\r\n  }\r\n\r\n  setFixedView(fixedView) {\r\n    this.fixedView = fixedView.clone();\r\n  }\r\n\r\n  getFixedView() {\r\n    return this.fixedView.clone();\r\n  }\r\n\r\n  hasFixedLeft() {\r\n    return this.fixedView.eci > -1;\r\n  }\r\n\r\n  hasFixedTop() {\r\n    return this.fixedView.eri > -1;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XFixedView,\r\n};\r\n","class DataProxy {\r\n\r\n  constructor() {\r\n    this.change = false;\r\n  }\r\n\r\n  endNotice() {\r\n    if (this.change) {\r\n      this.change = false;\r\n    }\r\n  }\r\n\r\n  backNotice() {\r\n    if (this.change) {\r\n      this.change = false;\r\n    }\r\n  }\r\n\r\n  goNotice() {\r\n    if (this.change) {\r\n      this.change = false;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { DataProxy };\r\n","import { DataProxy } from '../DataProxy';\r\nimport { Constant } from '../../../../const/Constant';\r\n\r\nclass TableCellDataProxy extends DataProxy {\r\n\r\n  constructor(snapshot, option = {\r\n    on: { setCell() {} },\r\n  }) {\r\n    super();\r\n    this.snapshot = snapshot;\r\n    this.option = option;\r\n  }\r\n\r\n  $setCell(ri, ci, newCell) {\r\n    this.change = true;\r\n    const { snapshot } = this;\r\n    const { cells } = snapshot;\r\n    cells.setCellOrNew(ri, ci, newCell);\r\n  }\r\n\r\n  setCell(ri, ci, newCell) {\r\n    const { option, snapshot } = this;\r\n    const { on } = option;\r\n    const { setCell } = on;\r\n    const { cells } = snapshot;\r\n    const oldCell = cells.getCell(ri, ci);\r\n    this.$setCell(ri, ci, newCell);\r\n    setCell(ri, ci, oldCell, newCell);\r\n  }\r\n\r\n  endNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.endNotice();\r\n  }\r\n\r\n  goNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.goNotice();\r\n  }\r\n\r\n  backNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.backNotice();\r\n  }\r\n}\r\n\r\nexport {\r\n  TableCellDataProxy,\r\n};\r\n","class CellDataRecord {\r\n  constructor({ ri, ci, oldCell, newCell }) {\r\n    this.ri = ri;\r\n    this.ci = ci;\r\n    this.oldCell = oldCell;\r\n    this.newCell = newCell;\r\n  }\r\n}\r\n\r\nexport { CellDataRecord };\r\n","const MERGE_RECORD_TYPE = {\r\n  ADD: Symbol('添加一个合并单元格'),\r\n  DELETE: Symbol('删除一个合并单元格'),\r\n};\r\n\r\nclass MergeDataRecord {\r\n  constructor({ merge, recordType }) {\r\n    this.merge = merge;\r\n    this.recordType = recordType;\r\n  }\r\n}\r\n\r\nexport {\r\n  MergeDataRecord,\r\n  MERGE_RECORD_TYPE,\r\n};\r\n","import { DataProxy } from '../DataProxy';\r\nimport { Constant } from '../../../../const/Constant';\r\n\r\nclass TableMergeDataProxy extends DataProxy {\r\n\r\n  constructor(snapshot, option = {\r\n    on: {\r\n      addMerge() {}, deleteMerge() {},\r\n    },\r\n  }) {\r\n    super();\r\n    this.snapshot = snapshot;\r\n    this.option = option;\r\n  }\r\n\r\n  $addMerge(merge) {\r\n    this.change = true;\r\n    const { snapshot } = this;\r\n    const { merges } = snapshot;\r\n    merges.getIncludes(merge, merge => this.deleteMerge(merge));\r\n    merges.add(merge, false);\r\n  }\r\n\r\n  $deleteMerge(merge) {\r\n    this.change = true;\r\n    const { snapshot } = this;\r\n    const { merges } = snapshot;\r\n    merges.delete(merge);\r\n  }\r\n\r\n  deleteMerge(merge) {\r\n    const { option } = this;\r\n    const { on } = option;\r\n    const { deleteMerge } = on;\r\n    this.$deleteMerge(merge);\r\n    deleteMerge(merge);\r\n  }\r\n\r\n  addMerge(merge) {\r\n    const { option } = this;\r\n    const { on } = option;\r\n    const { addMerge } = on;\r\n    this.$addMerge(merge);\r\n    addMerge(merge);\r\n  }\r\n\r\n  endNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.endNotice();\r\n  }\r\n\r\n  goNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.goNotice();\r\n  }\r\n\r\n  backNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.backNotice();\r\n  }\r\n\r\n}\r\n\r\nexport { TableMergeDataProxy };\r\n","import { DataProxy } from '../DataProxy';\r\nimport { Constant } from '../../../../const/Constant';\r\n\r\nclass TableColsDataProxy extends DataProxy {\r\n\r\n  constructor(snapshot, option = {\r\n    on: { setWidth() {} },\r\n  }) {\r\n    super();\r\n    this.snapshot = snapshot;\r\n    this.option = option;\r\n  }\r\n\r\n  $setWidth(ci, width) {\r\n    this.change = true;\r\n    const { snapshot } = this;\r\n    const { cols } = snapshot;\r\n    cols.setWidth(ci, width);\r\n  }\r\n\r\n  setWidth(ci, newWidth) {\r\n    const { option, snapshot } = this;\r\n    const { on } = option;\r\n    const { setWidth } = on;\r\n    const { cols } = snapshot;\r\n    const oldWidth = cols.getWidth(ci);\r\n    this.$setWidth(ci, newWidth);\r\n    setWidth(ci, oldWidth, newWidth);\r\n  }\r\n\r\n  endNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH);\r\n    }\r\n    super.endNotice();\r\n  }\r\n\r\n  backNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH);\r\n    }\r\n    super.backNotice();\r\n  }\r\n\r\n  goNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH);\r\n    }\r\n    super.goNotice();\r\n  }\r\n}\r\n\r\nexport { TableColsDataProxy };\r\n","class ColsDataRecord {\r\n  constructor({ ci, oldWidth, newWidth }) {\r\n    this.ci = ci;\r\n    this.oldWidth = oldWidth;\r\n    this.newWidth = newWidth;\r\n  }\r\n}\r\n\r\nexport { ColsDataRecord };\r\n","import { DataProxy } from '../DataProxy';\r\nimport { Constant } from '../../../../const/Constant';\r\n\r\nclass TableRowsDataProxy extends DataProxy {\r\n\r\n  constructor(snapshot, option = {\r\n    on: {\r\n      setHeight() {},\r\n    },\r\n  }) {\r\n    super();\r\n    this.snapshot = snapshot;\r\n    this.option = option;\r\n  }\r\n\r\n  $setHeight(ri, height) {\r\n    this.change = true;\r\n    const { snapshot } = this;\r\n    const { rows } = snapshot;\r\n    rows.setHeight(ri, height);\r\n  }\r\n\r\n  setHeight(ri, newHeight) {\r\n    const { option, snapshot } = this;\r\n    const { on } = option;\r\n    const { setHeight } = on;\r\n    const { rows } = snapshot;\r\n    const oldHeight = rows.getHeight(ri);\r\n    this.$setHeight(ri, newHeight);\r\n    setHeight(ri, oldHeight, newHeight);\r\n  }\r\n\r\n  endNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT);\r\n    }\r\n    super.endNotice();\r\n  }\r\n\r\n  backNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT);\r\n    }\r\n    super.backNotice();\r\n  }\r\n\r\n  goNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT);\r\n    }\r\n    super.goNotice();\r\n  }\r\n}\r\n\r\nexport { TableRowsDataProxy };\r\n","class RowsDataRecord {\r\n  constructor({ ri, oldHeight, newHeight }) {\r\n    this.ri = ri;\r\n    this.oldHeight = oldHeight;\r\n    this.newHeight = newHeight;\r\n  }\r\n}\r\n\r\nexport { RowsDataRecord };\r\n","import { TableCellDataProxy } from './proxy/TableCellDataProxy';\r\nimport { CellDataRecord } from './record/CellDataRecord';\r\nimport { MERGE_RECORD_TYPE, MergeDataRecord } from './record/MergeDataRecord';\r\nimport { ChartDataRecord } from './record/ChartDataRecord';\r\nimport { TableMergeDataProxy } from './proxy/TableMergeDataProxy';\r\nimport { TableColsDataProxy } from './proxy/TableColsDataProxy';\r\nimport { ColsDataRecord } from './record/ColsDataRecord';\r\nimport { TableRowsDataProxy } from './proxy/TableRowsDataProxy';\r\nimport { RowsDataRecord } from './record/RowsDataRecord';\r\n\r\nclass TableDataSnapshot {\r\n\r\n  constructor({\r\n    table, cells, merges, cols, rows,\r\n  }) {\r\n    this.record = false;\r\n    this.backLayerStack = [];\r\n    this.recordLayer = [];\r\n    this.goLayerStack = [];\r\n    this.table = table;\r\n    this.cells = cells;\r\n    this.merges = merges;\r\n    this.cols = cols;\r\n    this.rows = rows;\r\n    this.mergeDataProxy = new TableMergeDataProxy(this, {\r\n      on: {\r\n        deleteMerge: (merge) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new MergeDataRecord({ merge, recordType: MERGE_RECORD_TYPE.DELETE }));\r\n        },\r\n        addMerge: (merge) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new MergeDataRecord({ merge, recordType: MERGE_RECORD_TYPE.ADD }));\r\n        },\r\n      },\r\n    });\r\n    this.cellDataProxy = new TableCellDataProxy(this, {\r\n      on: {\r\n        setCell: (ri, ci, oldCell, newCell) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new CellDataRecord({ ri, ci, oldCell, newCell }));\r\n        },\r\n      },\r\n    });\r\n    this.colsDataProxy = new TableColsDataProxy(this, {\r\n      on: {\r\n        setWidth: (ci, oldWidth, newWidth) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new ColsDataRecord({ ci, oldWidth, newWidth }));\r\n        },\r\n      },\r\n    });\r\n    this.rowsDataProxy = new TableRowsDataProxy(this, {\r\n      on: {\r\n        setHeight: (ri, oldHeight, newHeight) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new RowsDataRecord({ ri, oldHeight, newHeight }));\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  back() {\r\n    const { backLayerStack, goLayerStack, table } = this;\r\n    const layer = backLayerStack.pop();\r\n    for (let i = layer.length - 1; i >= 0; i -= 1) {\r\n      const item = layer[i];\r\n      // 单元格元素\r\n      if (item instanceof CellDataRecord) {\r\n        const { ri, ci, oldCell } = item;\r\n        this.cellDataProxy.$setCell(ri, ci, oldCell);\r\n        continue;\r\n      }\r\n      // 合并单元格元素\r\n      if (item instanceof MergeDataRecord) {\r\n        const { recordType } = item;\r\n        switch (recordType) {\r\n          case MERGE_RECORD_TYPE.DELETE: {\r\n            const { merge } = item;\r\n            this.mergeDataProxy.$addMerge(merge);\r\n            break;\r\n          }\r\n          case MERGE_RECORD_TYPE.ADD: {\r\n            const { merge } = item;\r\n            this.mergeDataProxy.$deleteMerge(merge);\r\n            break;\r\n          }\r\n          default: break;\r\n        }\r\n        continue;\r\n      }\r\n      // 图表元素\r\n      if (item instanceof ChartDataRecord) {\r\n        // TODO...\r\n        // ...\r\n      }\r\n      //  列宽元素\r\n      if (item instanceof ColsDataRecord) {\r\n        const { ci, oldWidth } = item;\r\n        this.colsDataProxy.$setWidth(ci, oldWidth);\r\n        continue;\r\n      }\r\n      // 行高元素\r\n      if (item instanceof RowsDataRecord) {\r\n        const { ri, oldHeight } = item;\r\n        this.rowsDataProxy.$setHeight(ri, oldHeight);\r\n      }\r\n    }\r\n    goLayerStack.push(layer);\r\n    this.mergeDataProxy.backNotice();\r\n    this.cellDataProxy.backNotice();\r\n    this.colsDataProxy.backNotice();\r\n    this.rowsDataProxy.backNotice();\r\n    table.render();\r\n  }\r\n\r\n  go() {\r\n    const { backLayerStack, goLayerStack, table } = this;\r\n    const layer = goLayerStack.pop();\r\n    for (let i = 0, len = layer.length; i < len; i += 1) {\r\n      const item = layer[i];\r\n      // 单元格元素\r\n      if (item instanceof CellDataRecord) {\r\n        const { ri, ci, newCell } = item;\r\n        this.cellDataProxy.$setCell(ri, ci, newCell);\r\n        continue;\r\n      }\r\n      // 合并单元格元素\r\n      if (item instanceof MergeDataRecord) {\r\n        const { recordType } = item;\r\n        switch (recordType) {\r\n          case MERGE_RECORD_TYPE.DELETE: {\r\n            const { merge } = item;\r\n            this.mergeDataProxy.$deleteMerge(merge);\r\n            break;\r\n          }\r\n          case MERGE_RECORD_TYPE.ADD: {\r\n            const { merge } = item;\r\n            this.mergeDataProxy.$addMerge(merge);\r\n            break;\r\n          }\r\n          default: break;\r\n        }\r\n        continue;\r\n      }\r\n      // 图表元素\r\n      if (item instanceof ChartDataRecord) {\r\n        // TODO...\r\n        // ...\r\n      }\r\n      //  列宽元素\r\n      if (item instanceof ColsDataRecord) {\r\n        const { ci, newWidth } = item;\r\n        this.colsDataProxy.$setWidth(ci, newWidth);\r\n        continue;\r\n      }\r\n      // 行高元素\r\n      if (item instanceof RowsDataRecord) {\r\n        const { ri, newHeight } = item;\r\n        this.rowsDataProxy.$setHeight(ri, newHeight);\r\n      }\r\n    }\r\n    backLayerStack.push(layer);\r\n    this.mergeDataProxy.goNotice();\r\n    this.cellDataProxy.goNotice();\r\n    this.colsDataProxy.goNotice();\r\n    this.rowsDataProxy.goNotice();\r\n    table.render();\r\n  }\r\n\r\n  end() {\r\n    const { recordLayer, backLayerStack } = this;\r\n    this.record = false;\r\n    if (recordLayer.length) {\r\n      backLayerStack.push(recordLayer);\r\n    }\r\n    this.recordLayer = [];\r\n    this.mergeDataProxy.endNotice();\r\n    this.cellDataProxy.endNotice();\r\n    this.colsDataProxy.endNotice();\r\n    this.rowsDataProxy.endNotice();\r\n  }\r\n\r\n  begin() {\r\n    this.record = true;\r\n    this.goLayerStack = [];\r\n  }\r\n\r\n  canBack() {\r\n    const { backLayerStack } = this;\r\n    return backLayerStack.length !== 0;\r\n  }\r\n\r\n  canGo() {\r\n    const { goLayerStack } = this;\r\n    return goLayerStack.length !== 0;\r\n  }\r\n\r\n}\r\n\r\nexport { TableDataSnapshot };\r\n","import { XEvent } from './XEvent';\r\n\r\nclass Clipboard {\r\n\r\n  constructor({\r\n    target = document.body,\r\n    filter = () => false,\r\n    paste = () => {},\r\n  } = {}) {\r\n    this.target = target;\r\n    this.filter = filter;\r\n    this.paste = paste;\r\n    this.bind();\r\n  }\r\n\r\n  bind() {\r\n    const { target, paste, filter } = this;\r\n    XEvent.bind(target, 'paste', (e) => {\r\n      if (filter()) {\r\n        paste(e);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Clipboard,\r\n};\r\n","\r\n/**\r\n * XIconFocus\r\n */\r\nclass XIconFocus {\r\n\r\n  constructor(icon = null) {\r\n    this.activate = icon;\r\n  }\r\n\r\n  setActivate(icon) {\r\n    this.activate = icon;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XIconFocus,\r\n};\r\n","import { XIcon } from './XIcon';\r\nimport { XIconFocus } from './XIconFocus';\r\n\r\n/**\r\n * XIconBuilder\r\n */\r\nclass XIconBuilder {\r\n\r\n  /**\r\n   * 图标事件处理\r\n   * @param type\r\n   * @param native\r\n   * @param staticIcons\r\n   * @param fixedIcons\r\n   * @param sx\r\n   * @param sy\r\n   * @param fx\r\n   * @param fy\r\n   */\r\n  xIconsEvent({\r\n    type,\r\n    native,\r\n    sx,\r\n    sy,\r\n    fx,\r\n    fy,\r\n    staticIcons = [],\r\n    fixedIcons = [],\r\n  }) {\r\n    if (staticIcons.length + fixedIcons.length === 0) {\r\n      this.clearFocus();\r\n    } else {\r\n      staticIcons.forEach((icon) => {\r\n        icon.eventHandle({\r\n          type, x: sx, y: sy, native,\r\n        });\r\n      });\r\n      fixedIcons.forEach((icon) => {\r\n        icon.eventHandle({\r\n          type, x: fx, y: fy, native,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清空焦点元素\r\n   */\r\n  clearFocus() {\r\n    const { focus } = this;\r\n    const { activate } = focus;\r\n    if (activate) {\r\n      focus.setActivate(null);\r\n      activate.onLeave();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * XIconBuilder\r\n   * @param focus\r\n   */\r\n  constructor({\r\n    focus = new XIconFocus(),\r\n  } = {}) {\r\n    this.focus = focus;\r\n  }\r\n\r\n  /**\r\n   * 构建小图标\r\n   * @param options\r\n   * @returns {XIcon}\r\n   */\r\n  build(options = {}) {\r\n    const { focus } = this;\r\n    const xIcon = new XIcon(options);\r\n    xIcon.setFocus(focus);\r\n    return xIcon;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XIconBuilder,\r\n};\r\n","class BaseIterator {\r\n\r\n  constructor() {\r\n    this.finishCallback = () => {};\r\n    this.loopCallback = () => {};\r\n    this.nextCallback = () => {};\r\n    this.end = 0;\r\n    this.begin = 0;\r\n  }\r\n\r\n  execute() {\r\n    const {\r\n      loopCallback, nextCallback,\r\n    } = this;\r\n    const {\r\n      begin, end,\r\n    } = this;\r\n    let i;\r\n    if (begin > end) {\r\n      i = begin;\r\n      for (; i >= end; i -= 1, nextCallback(i)) {\r\n        const res = loopCallback(i);\r\n        if (res === false) {\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      i = begin;\r\n      for (; i <= end; i += 1, nextCallback(i)) {\r\n        const res = loopCallback(i);\r\n        if (res === false) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.finishCallback(i);\r\n    return this;\r\n  }\r\n\r\n  setLoop(callback) {\r\n    this.loopCallback = callback;\r\n    return this;\r\n  }\r\n\r\n  setNext(callback) {\r\n    this.nextCallback = callback;\r\n    return this;\r\n  }\r\n\r\n  setFinish(callback) {\r\n    this.finishCallback = callback;\r\n    return this;\r\n  }\r\n\r\n  setEnd(end) {\r\n    this.end = end;\r\n    return this;\r\n  }\r\n\r\n  setBegin(begin) {\r\n    this.begin = begin;\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  BaseIterator,\r\n};\r\n","import { BaseIterator } from './BaseIterator';\r\n\r\nlet fold = [];\r\n\r\nclass RowsIterator extends BaseIterator {\r\n\r\n  static getInstance() {\r\n    return new RowsIterator();\r\n  }\r\n\r\n  static setFold(value) {\r\n    fold = value;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.skipCallback = () => {};\r\n    this.useFold = true;\r\n  }\r\n\r\n  execute() {\r\n    const {\r\n      loopCallback, nextCallback, skipCallback,\r\n    } = this;\r\n    const {\r\n      begin, end, useFold,\r\n    } = this;\r\n    let i;\r\n    if (begin > end) {\r\n      i = begin;\r\n      for (; i >= end; i -= 1, nextCallback(i)) {\r\n        if (useFold && fold[i]) {\r\n          skipCallback(i);\r\n          continue;\r\n        }\r\n        const res = loopCallback(i);\r\n        if (res === false) {\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      i = begin;\r\n      for (; i <= end; i += 1, nextCallback(i)) {\r\n        if (useFold && fold[i]) {\r\n          skipCallback(i);\r\n          continue;\r\n        }\r\n        const res = loopCallback(i);\r\n        if (res === false) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.finishCallback(i);\r\n    return this;\r\n  }\r\n\r\n  setSkip(callback) {\r\n    this.skipCallback = callback;\r\n    return this;\r\n  }\r\n\r\n  nextRow() {\r\n    const { begin } = this;\r\n    let ri = -1;\r\n    this.setLoop((i) => {\r\n      if (i !== begin) {\r\n        ri = i;\r\n        return false;\r\n      }\r\n      return true;\r\n    }).execute();\r\n    return ri;\r\n  }\r\n\r\n  hasFold() {\r\n    let find = false;\r\n    this.setLoop((i) => {\r\n      if (fold[i]) {\r\n        find = true;\r\n        return false;\r\n      }\r\n      return true;\r\n    }).foldOnOff(false).execute();\r\n    return find;\r\n  }\r\n\r\n  foldOnOff(onOff) {\r\n    this.useFold = onOff;\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RowsIterator,\r\n};\r\n","import { BaseIterator } from './BaseIterator';\r\n\r\nclass ColsIterator extends BaseIterator {\r\n\r\n  nextRow() {\r\n    const { begin } = this;\r\n    let ci = -1;\r\n    this.setLoop((i) => {\r\n      if (i !== begin) {\r\n        ci = i;\r\n        return false;\r\n      }\r\n      return true;\r\n    }).execute();\r\n    return ci;\r\n  }\r\n\r\n  static getInstance() {\r\n    return new ColsIterator();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  ColsIterator,\r\n};\r\n","import { RowsIterator } from './RowsIterator';\r\nimport { ColsIterator } from './ColsIterator';\r\n\r\nclass XIteratorBuilder {\r\n\r\n  getRowIterator() {\r\n    return RowsIterator.getInstance();\r\n  }\r\n\r\n  getColIterator() {\r\n    return ColsIterator.getInstance();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XIteratorBuilder,\r\n};\r\n","class RowHeightGroupIndex {\r\n\r\n  constructor({\r\n    group = 1000,\r\n    xFixedView,\r\n    rows,\r\n    xIteratorBuilder,\r\n  }) {\r\n    this.groupIndex = [];\r\n    this.rows = rows;\r\n    this.group = group;\r\n    this.xFixedView = xFixedView;\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n    this.clear();\r\n  }\r\n\r\n  min() {\r\n    let { xFixedView } = this;\r\n    let fixedView = xFixedView.getFixedView();\r\n    let min = 0;\r\n    if (xFixedView.hasFixedTop()) {\r\n      min = fixedView.eri + 1;\r\n    }\r\n    return min;\r\n  }\r\n\r\n  limit(ri, top, max) {\r\n    let { groupIndex, group, rows } = this;\r\n    let find = groupIndex[0];\r\n    let end = rows.len - 1;\r\n    top += rows.getHeight(ri);\r\n    ri += 1;\r\n    this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(ri)\r\n      .setEnd(end)\r\n      .setSkip((ri) => {\r\n        if (ri % group === 0) {\r\n          groupIndex.push({ ri, top });\r\n        }\r\n      })\r\n      .setLoop((ri) => {\r\n        if (ri % group === 0) {\r\n          groupIndex.push({\r\n            ri, top,\r\n          });\r\n          if (top > max) {\r\n            let { length } = groupIndex;\r\n            find = groupIndex[length - 2];\r\n            return false;\r\n          }\r\n        }\r\n        top += rows.getHeight(ri);\r\n        return true;\r\n      })\r\n      .execute();\r\n    return find;\r\n  }\r\n\r\n  clear() {\r\n    let min = this.min();\r\n    this.groupIndex = [{ ri: min, top: 0 }];\r\n  }\r\n\r\n  get(scroll) {\r\n    let { groupIndex, group, rows } = this;\r\n    let { length } = groupIndex;\r\n    if (rows.len <= group) {\r\n      return groupIndex[0];\r\n    }\r\n    if (scroll === 0) {\r\n      return groupIndex[0];\r\n    }\r\n    for (let i = 0; i < length; i++) {\r\n      let item = groupIndex[i];\r\n      if (item.top > scroll) {\r\n        return groupIndex[i - 1];\r\n      }\r\n    }\r\n    let last = groupIndex[length - 1];\r\n    let { ri, top } = last;\r\n    return this.limit(ri, top, scroll);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RowHeightGroupIndex,\r\n};\r\n","import { PlainUtils } from '../../utils/PlainUtils';\nimport { Code } from './tablebase/Code';\nimport { Rows } from './tablebase/Rows';\nimport { Cols } from './tablebase/Cols';\nimport { Scroll, SCROLL_TYPE } from './tablebase/Scroll';\nimport { Widget } from '../../libs/Widget';\nimport { Constant, cssPrefix } from '../../const/Constant';\nimport { XEvent } from '../../libs/XEvent';\nimport { Scale, ScaleAdapter } from './tablebase/Scale';\nimport { XTableMousePointer } from './XTableMousePointer';\nimport { XTableKeyboard } from './XTableKeyboard';\nimport { XReSizer } from './resizer/XReSizer';\nimport { YReSizer } from './resizer/YReSizer';\nimport { XHeightLight } from './highlight/XHeightLight';\nimport { YHeightLight } from './highlight/YHeightLight';\nimport { XTableFocus } from './XTableFocus';\nimport { XDraw } from '../../canvas/XDraw';\nimport { RectRange } from './tablebase/RectRange';\nimport { XTableScrollView } from './XTableScrollView';\nimport { XTableAreaView } from './XTableAreaView';\nimport { XTableEdit } from './XTableEdit';\nimport { XTableStyle } from './XTableStyle';\nimport { XScreen } from './xscreen/XScreen';\nimport { XSelectItem } from './xscreenitems/xselect/XSelectItem';\nimport { XAutoFillItem } from './xscreenitems/xautofill/XAutoFillItem';\nimport { XCopyStyle } from './xscreenitems/xcopystyle/XCopyStyle';\nimport { RowFixed } from './tablefixed/RowFixed';\nimport { ColFixed } from './tablefixed/ColFixed';\nimport { DropRowFixed } from './tablefixed/drop/DropRowFixed';\nimport { DropColFixed } from './tablefixed/drop/DropColFixed';\nimport { XFixedMeasure } from './tablebase/XFixedMeasure';\nimport { XFixedView } from './tablebase/XFixedView';\nimport { XFilter } from './xscreenitems/xfilter/XFilter';\nimport { TableDataSnapshot } from './datasnapshot/TableDataSnapshot';\nimport { CellMergeCopyHelper } from './helper/CellMergeCopyHelper';\nimport { Clipboard } from '../../libs/Clipboard';\nimport { XIcon } from './xicon/XIcon';\nimport { XIconBuilder } from './xicon/XIconBuilder';\nimport { BaseFont } from '../../canvas/font/BaseFont';\nimport { XIteratorBuilder } from './iterator/XIteratorBuilder';\nimport { RowHeightGroupIndex } from './tablebase/RowHeightGroupIndex';\n\nclass Dimensions {\n\n  constructor(table) {\n    this.table = table;\n    this.scrollView = null;\n    this.width = null;\n    this.height = null;\n    this.x = null;\n    this.y = null;\n  }\n\n  reset() {\n    this.scrollView = null;\n    this.width = null;\n    this.height = null;\n    this.x = null;\n    this.y = null;\n  }\n\n  getX() {\n    throw new TypeError('child impl');\n  }\n\n  getY() {\n    throw new TypeError('child impl');\n  }\n\n  getHeight() {\n    throw new TypeError('child impl');\n  }\n\n  getWidth() {\n    throw new TypeError('child impl');\n  }\n\n}\n\n// ============================== 表格区域信息 ===============================\n\nclass XTableFrozenContent extends Dimensions {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const width = xFixedMeasure.getWidth();\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const height = xFixedMeasure.getHeight();\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { index } = table;\n    const x = index.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { index } = table;\n    const y = index.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { rows, cols } = table;\n    const { xFixedView } = table;\n    const view = xFixedView.getFixedView();\n    view.w = cols.rectRangeSumWidth(view);\n    view.h = rows.rectRangeSumHeight(view);\n    this.scrollView = view;\n    return view.clone();\n  }\n\n}\n\nclass XTableTopIndex extends Dimensions {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { index } = table;\n    const height = index.getHeight();\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const x = index.getWidth() + xLeft.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const y = 0;\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { index } = table;\n    const { xTableAreaView } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    scrollView.sri = 0;\n    scrollView.eri = 0;\n    scrollView.h = index.getHeight();\n    this.scrollView = scrollView;\n    return scrollView.clone();\n  }\n\n}\n\nclass XTableLeftIndex extends Dimensions {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { index } = table;\n    const width = index.getWidth();\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const x = 0;\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const y = index.getHeight() + xTop.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { index } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    scrollView.sci = 0;\n    scrollView.eci = 0;\n    scrollView.w = index.getWidth();\n    this.scrollView = scrollView;\n    return scrollView.clone();\n  }\n\n}\n\nclass XTableLeft extends Dimensions {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const width = xFixedMeasure.getWidth();\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { index } = table;\n    const x = index.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const y = index.getHeight() + xTop.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { xFixedView } = table;\n    const { cols } = table;\n    const { xTableAreaView } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    const fixedView = xFixedView.getFixedView();\n    scrollView.sci = fixedView.sci;\n    scrollView.eci = fixedView.eci;\n    scrollView.w = cols.sectionSumWidth(scrollView.sci, scrollView.eci);\n    this.scrollView = scrollView;\n    return scrollView.clone();\n  }\n\n}\n\nclass XTableTop extends Dimensions {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const height = xFixedMeasure.getHeight();\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const x = index.getWidth() + xLeft.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { index } = table;\n    const y = index.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { xFixedView } = table;\n    const { rows } = table;\n    const { xTableAreaView } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    const fixedView = xFixedView.getFixedView();\n    scrollView.sri = fixedView.sri;\n    scrollView.eri = fixedView.eri;\n    scrollView.h = rows.sectionSumHeight(scrollView.sri, scrollView.eri);\n    this.scrollView = scrollView;\n    return scrollView.clone();\n  }\n\n}\n\nclass XTableContent extends Dimensions {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { index } = table;\n    const { xLeft } = table;\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const x = index.getWidth() + xLeft.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const y = index.getHeight() + xTop.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    this.scrollView = scrollView;\n    return scrollView.clone();\n  }\n\n}\n\n// ================================= 快捷键 =================================\n\nclass KeyBoardTabCode {\n\n  static register(table) {\n    const {\n      keyboard, cols, rows, xScreen, edit,\n    } = table;\n    const xSelect = xScreen.findType(XSelectItem);\n    const merges = table.getTableMerges();\n    let $tabNext = null;\n    keyboard.register({\n      target: table,\n      keyCode: 9,\n      callback: () => {\n        edit.hideEdit();\n        const { selectRange } = xSelect;\n        const { tabNext } = selectRange;\n        const rect = selectRange.clone();\n        if (!tabNext) {\n          const { sri, sci } = rect;\n          $tabNext = { sri, sci };\n        }\n        const cLen = cols.len - 1;\n        const rLen = rows.len - 1;\n        let { sri, sci } = $tabNext;\n        const srcMerges = merges.getFirstIncludes(sri, sci);\n        if (srcMerges) {\n          sci = srcMerges.eci;\n        }\n        if (sci >= cLen && sri >= rLen) {\n          return;\n        }\n        if (sci >= cLen) {\n          sri += 1;\n          sci = 0;\n        } else {\n          sci += 1;\n        }\n        $tabNext.sri = sri;\n        $tabNext.sci = sci;\n        let eri = sri;\n        let eci = sci;\n        const targetMerges = merges.getFirstIncludes(sri, sci);\n        if (targetMerges) {\n          sri = targetMerges.sri;\n          sci = targetMerges.sci;\n          eri = targetMerges.eri;\n          eci = targetMerges.eci;\n        }\n        rect.tabNext = true;\n        rect.sri = sri;\n        rect.sci = sci;\n        rect.eri = eri;\n        rect.eci = eci;\n        xSelect.setRange(rect);\n        edit.showEdit();\n      },\n    });\n  }\n\n}\n\n// ================================= XTable ================================\n\nconst settings = {\n  index: {\n    height: 30,\n    width: 50,\n    gridColor: '#c1c1c1',\n    size: 11,\n    color: '#000000',\n  },\n  table: {\n    showGrid: true,\n    background: '#ffffff',\n    borderColor: '#000000',\n    gridColor: '#e1e1e1',\n  },\n  rows: {\n    len: 1000,\n    height: 30,\n    data: [],\n  },\n  cols: {\n    len: 36,\n    width: 110,\n    data: [],\n  },\n  xFixedView: {\n    fixedView: new RectRange(0, 0, -1, -1),\n    fxLeft: -1,\n    fxTop: -1,\n  },\n  xFixedBar: {\n    height: RowFixed.HEIGHT,\n    width: ColFixed.WIDTH,\n    background: '#eaeaea',\n    buttonColor: '#c1c1c1',\n  },\n  data: [],\n  merge: {\n    merges: [],\n  },\n};\n\n/**\n * XTable\n */\nclass XTableDimensions extends Widget {\n\n  /**\n   * XTable\n   * @param options\n   */\n  constructor(options) {\n    super(`${cssPrefix}-table`);\n    // 表格设置\n    this.settings = PlainUtils.copy({}, settings, options);\n    // 视口区域大小\n    this.visualHeightCache = null;\n    this.visualWidthCache = null;\n    // 图标创建器\n    this.xIconBuilder = new XIconBuilder();\n    // 行列迭代器\n    this.xIteratorBuilder = new XIteratorBuilder();\n    // 表格数据配置\n    this.scale = new Scale();\n    this.index = new Code({\n      scaleAdapter: new ScaleAdapter({\n        goto: v => XDraw.srcTransformCssPx(this.scale.goto(v)),\n      }),\n      ...this.settings.index,\n    });\n    this.rows = new Rows({\n      scaleAdapter: new ScaleAdapter({\n        goto: v => XDraw.srcTransformCssPx(this.scale.goto(v)),\n      }),\n      xIteratorBuilder: this.xIteratorBuilder,\n      ...this.settings.rows,\n    });\n    this.cols = new Cols({\n      scaleAdapter: new ScaleAdapter({\n        goto: v => XDraw.srcTransformCssPx(this.scale.goto(v)),\n      }),\n      xIteratorBuilder: this.xIteratorBuilder,\n      ...this.settings.cols,\n    });\n    // 冻结视图坐标\n    this.xFixedView = new XFixedView(this.settings.xFixedView);\n    this.xFixedMeasure = new XFixedMeasure({\n      fixedView: this.xFixedView,\n      cols: this.cols,\n      rows: this.rows,\n    });\n    // 滚动视图的坐标\n    this.scroll = new Scroll({\n      xFixedView: this.xFixedView,\n    });\n    // 表格滚动视图\n    this.xTableScrollView = new XTableScrollView({\n      scroll: this.scroll,\n      rows: this.rows,\n      cols: this.cols,\n      xIteratorBuilder: this.xIteratorBuilder,\n      getHeight: () => this.xContent.getHeight(),\n      getWidth: () => this.xContent.getWidth(),\n    });\n    // 表格视图区域\n    this.xTableAreaView = new XTableAreaView({\n      xTableScrollView: this.xTableScrollView,\n      rows: this.rows,\n      cols: this.cols,\n      scroll: this.scroll,\n    });\n    // 表格界面\n    this.xTableStyle = new XTableStyle({\n      xTableScrollView: this.xTableScrollView,\n      scroll: this.scroll,\n      xIteratorBuilder: this.xIteratorBuilder,\n      settings: this.settings,\n      xFixedView: this.xFixedView,\n    });\n    // 数据快照\n    this.tableDataSnapshot = new TableDataSnapshot({\n      merges: this.getTableMerges(),\n      cells: this.getTableCells(),\n      table: this,\n      cols: this.cols,\n      rows: this.rows,\n    });\n    // table区域\n    this.xTableFrozenContent = new XTableFrozenContent(this);\n    this.xLeftIndex = new XTableLeftIndex(this);\n    this.xTopIndex = new XTableTopIndex(this);\n    this.xLeft = new XTableLeft(this);\n    this.xTop = new XTableTop(this);\n    this.xContent = new XTableContent(this);\n    // table组件\n    this.focus = new XTableFocus(this);\n    this.mousePointer = new XTableMousePointer(this);\n    this.keyboard = new XTableKeyboard(this);\n    this.xScreen = new XScreen(this);\n    this.xReSizer = new XReSizer(this);\n    this.yReSizer = new YReSizer(this);\n    this.xHeightLight = new XHeightLight(this);\n    this.yHeightLight = new YHeightLight(this);\n    this.edit = new XTableEdit(this);\n    this.rowFixed = new RowFixed(this);\n    this.colFixed = new ColFixed(this);\n    this.dropColFixed = new DropColFixed(this);\n    this.dropRowFixed = new DropRowFixed(this);\n    // 单元格辅助类\n    this.cellMergeCopyHelper = new CellMergeCopyHelper(this);\n    // 粘贴板\n    this.clipboard = new Clipboard({\n      filter: () => {\n        const { focus } = this;\n        const { activate } = focus;\n        const { target } = activate;\n        return target === this;\n      },\n      paste: () => {},\n    });\n    // 表格行高索引\n    this.rowHeightGroupIndex = new RowHeightGroupIndex({\n      rows: this.rows,\n      xFixedView: this.xFixedView,\n      xIteratorBuilder: this.xIteratorBuilder,\n    });\n  }\n\n  /**\n   * 滚动行区间\n   * @param min\n   * @param max\n   * @param initS\n   * @param initV\n   * @param ifv\n   * @param getV\n   * @return {(*|number)[]}\n   */\n  rowsReduceIf(min, max, initS, initV, ifv, getV) {\n    let s = initS;\n    let v = initV;\n    let ri = min;\n    this.xIteratorBuilder.getRowIterator()\n      .setBegin(ri)\n      .setEnd(max - 1)\n      .setLoop((i) => {\n        if (s >= ifv) {\n          return false;\n        }\n        v = getV(i);\n        s += v;\n        return true;\n      })\n      .setFinish((i) => {\n        ri = i;\n      })\n      .execute();\n    return [ri, s - v, v];\n  }\n\n  /**\n   * 滚动列区间\n   * @param min\n   * @param max\n   * @param initS\n   * @param initV\n   * @param ifv\n   * @param getV\n   * @return {(*|number)[]}\n   */\n  colsReduceIf(min, max, initS, initV, ifv, getV) {\n    let s = initS;\n    let v = initV;\n    let ri = min;\n    this.xIteratorBuilder.getColIterator()\n      .setBegin(ri)\n      .setEnd(max - 1)\n      .setLoop((i) => {\n        if (s >= ifv) {\n          return false;\n        }\n        v = getV(i);\n        s += v;\n        return true;\n      })\n      .setFinish((i) => {\n        ri = i;\n      })\n      .execute();\n    return [ri, s - v, v];\n  }\n\n  /**\n   * 单元辅助实例\n   * @returns {OperateCellsHelper}\n   */\n  getOperateCellsHelper() {\n    const { xTableStyle } = this;\n    const { operateCellsHelper } = xTableStyle;\n    return operateCellsHelper;\n  }\n\n  /**\n   * 单元辅助实例\n   * @returns {StyleCellsHelper}\n   */\n  getStyleCellsHelper() {\n    const { xTableStyle } = this;\n    const { styleCellsHelper } = xTableStyle;\n    return styleCellsHelper;\n  }\n\n  /**\n   * 获取表格渲染对象\n   * @returns {XTableStyle}\n   */\n  getXTableStyle() {\n    const { xTableStyle } = this;\n    return xTableStyle;\n  }\n\n  /**\n   * 读取合并单元格\n   */\n  getTableMerges() {\n    const { xTableStyle } = this;\n    const { merges } = xTableStyle;\n    return merges;\n  }\n\n  /**\n   * 获取表格单元格\n   * @returns {Cells}\n   */\n  getTableCells() {\n    const { xTableStyle } = this;\n    const { cells } = xTableStyle;\n    return cells;\n  }\n\n  /**\n   * 滚动视图的高度\n   * @returns {*}\n   */\n  getScrollTotalHeight() {\n    const {\n      xFixedView,\n    } = this;\n    const { rows } = this;\n    let height;\n    if (xFixedView.hasFixedTop()) {\n      const fixedView = xFixedView.getFixedView();\n      height = rows.sectionSumHeight(fixedView.eri + 1, rows.len - 1);\n    } else {\n      height = rows.sectionSumHeight(0, rows.len - 1);\n    }\n    return height;\n  }\n\n  /**\n   * 滚动视图的宽度\n   * @returns {*}\n   */\n  getScrollTotalWidth() {\n    const {\n      xFixedView,\n    } = this;\n    const { cols } = this;\n    let width;\n    if (xFixedView.hasFixedLeft()) {\n      const fixedView = xFixedView.getFixedView();\n      width = cols.sectionSumWidth(fixedView.eci, cols.len - 1);\n    } else {\n      width = cols.sectionSumWidth(0, cols.len - 1);\n    }\n    return width;\n  }\n\n  /**\n   * 获取单元格CSS样式\n   * @param row\n   * @param col\n   */\n  getCellCssStyle(row, col) {\n    const cells = this.getTableCells();\n    const cell = cells.getCell(row, col);\n    const { fontAttr, background } = cell;\n    const { align, size, color, bold, italic, name } = fontAttr;\n    const fontSize = XDraw.srcTransformCssPx(this.scale.goto(size));\n    let textAlign = 'left';\n    switch (align) {\n      case BaseFont.ALIGN.left:\n        textAlign = 'left';\n        break;\n      case BaseFont.ALIGN.center:\n        textAlign = 'center';\n        break;\n      case BaseFont.ALIGN.right:\n        textAlign = 'right';\n        break;\n    }\n    const css = `\n      text-align:${textAlign};\n      color: ${color};\n      background:${background};\n      font-style: ${italic ? 'italic' : 'initial'};\n      font-weight: ${bold ? 'bold' : 'initial'};\n      font-size: ${XDraw.srcTransformCssPx(fontSize)}px;\n      font-family: ${name};\n    `;\n    return css.replace(/\\s/g, '');\n  }\n\n  /**\n   * 索引栏高度\n   * @returns {*}\n   */\n  getIndexHeight() {\n    const { index } = this;\n    return index.getHeight();\n  }\n\n  /**\n   * 索引栏宽度\n   * @returns {*}\n   */\n  getIndexWidth() {\n    const { index } = this;\n    return index.getWidth();\n  }\n\n  /**\n   * 获取内容区域高度\n   */\n  getContentHeight() {\n    const { xContent } = this;\n    return xContent.getHeight();\n  }\n\n  /**\n   * 获取内容区域宽度\n   */\n  getContentWidth() {\n    const { xContent } = this;\n    return xContent.getWidth();\n  }\n\n  /**\n   * 固定区域宽度\n   */\n  getFixedWidth() {\n    const { xLeft } = this;\n    return xLeft.getWidth();\n  }\n\n  /**\n   * 固定区域高度\n   * @returns {*}\n   */\n  getFixedHeight() {\n    const { xTop } = this;\n    return xTop.getHeight();\n  }\n\n  /**\n   * 可视区域宽度\n   * @return {*}\n   */\n  visualWidth() {\n    if (PlainUtils.isNumber(this.visualWidthCache)) {\n      return this.visualWidthCache;\n    }\n    const width = this.box().width;\n    this.visualWidthCache = width;\n    return width;\n  }\n\n  /**\n   * 可视区域高度\n   * @return {*}\n   */\n  visualHeight() {\n    if (PlainUtils.isNumber(this.visualHeightCache)) {\n      return this.visualHeightCache;\n    }\n    const height = this.box().height;\n    this.visualHeightCache = height;\n    return height;\n  }\n\n  /**\n   * 表格图标事件处理\n   * @param type\n   * @param info\n   * @param native\n   */\n  xIconsEvent(type, info, native) {\n    const { xIconBuilder } = this;\n    const style = this.getXTableStyle();\n    const cells = this.getTableCells();\n    const {\n      fixedCellIcon, staticCellIcon,\n    } = style;\n    const {\n      ri, ci, mri, mci, fx, fy, sx, sy,\n    } = info;\n\n    let staticIconArray = [];\n    let fixedIconArray = [];\n\n    // 单元格固定小图标\n    const fixedIcon = fixedCellIcon.getIcon(ri, ci);\n    if (fixedIcon) {\n      fixedIconArray = fixedIconArray.concat(fixedIcon);\n    }\n\n    // 单元格内容小图标\n    const cell = cells.getCell(mri, mci);\n    if (cell) {\n      staticIconArray = staticIconArray.concat(cell.icons);\n    }\n\n    // 单元格固定小图标\n    const staticIcon = staticCellIcon.getIcon(mri, mci);\n    if (staticIcon) {\n      staticIconArray = staticIconArray.concat(staticIcon);\n    }\n\n    // 触发单元格小图标事件\n    xIconBuilder.xIconsEvent({\n      native,\n      type,\n      staticIcons: staticIconArray,\n      fixedIcons: fixedIconArray,\n      sx: XDraw.srcTransformStylePx(sx),\n      sy: XDraw.srcTransformStylePx(sy),\n      fx: XDraw.srcTransformStylePx(fx),\n      fy: XDraw.srcTransformStylePx(fy),\n    });\n  }\n\n  /**\n   * 更新表格的指针\n   */\n  pointerEvent(info) {\n    const { mousePointer } = this;\n    const { ri, ci } = info;\n    if (ri === -1 && ci === -1) {\n      mousePointer.set(XTableMousePointer.KEYS.default);\n      return;\n    }\n    if (ri === -1) {\n      mousePointer.set(XTableMousePointer.KEYS.sResize);\n      return;\n    }\n    if (ci === -1) {\n      mousePointer.set(XTableMousePointer.KEYS.eResize);\n      return;\n    }\n    mousePointer.set(XTableMousePointer.KEYS.cell);\n  }\n\n  /**\n   * 获取指定单元格下的行列\n   * @param x\n   * @param y\n   * @returns {{ci: number, ri: number}}\n   */\n  getRiCiByXy(x, y) {\n    const {\n      xFixedView, rows, cols,\n    } = this;\n\n    const { index } = this;\n    const fixedView = xFixedView.getFixedView();\n    const merges = this.getTableMerges();\n    const fixedWidth = this.getFixedWidth();\n    const fixedHeight = this.getFixedHeight();\n\n    let [left, top] = [x, y];\n    let [ci, ri] = [-1, -1];\n    left -= index.getWidth();\n    top -= index.getHeight();\n\n    let fx = 0;\n    if (left <= fixedWidth && x > index.getWidth()) {\n      let total = 0;\n      this.xIteratorBuilder.getColIterator()\n        .setBegin(fixedView.sci)\n        .setEnd(fixedView.eci)\n        .setLoop((i) => {\n          const width = cols.getWidth(i);\n          total += width;\n          ci = i;\n          return total < left;\n        })\n        .execute();\n      fx = (total - cols.getWidth(ci) - left) * -1;\n    } else if (x > index.getWidth()) {\n      let total = fixedWidth;\n      const viewRange = this.getScrollView();\n      this.xIteratorBuilder.getColIterator()\n        .setBegin(viewRange.sci)\n        .setEnd(viewRange.eci)\n        .setLoop((i) => {\n          const width = cols.getWidth(i);\n          total += width;\n          ci = i;\n          return total < left;\n        })\n        .execute();\n      fx = (total - cols.getWidth(ci) - left) * -1;\n    }\n\n    let fy = 0;\n    if (top < fixedHeight && y > index.getHeight()) {\n      let total = 0;\n      this.xIteratorBuilder.getRowIterator()\n        .setBegin(fixedView.sri)\n        .setEnd(fixedView.eri)\n        .setLoop((i) => {\n          const height = rows.getHeight(i);\n          total += height;\n          ri = i;\n          return total <= top;\n        })\n        .execute();\n      fy = (total - rows.getHeight(ri) - top) * -1;\n    } else if (y > index.getHeight()) {\n      let total = fixedHeight;\n      const viewRange = this.getScrollView();\n      this.xIteratorBuilder.getRowIterator()\n        .setBegin(viewRange.sri)\n        .setEnd(viewRange.eri)\n        .setLoop((i) => {\n          const height = rows.getHeight(i);\n          total += height;\n          ri = i;\n          return total <= top;\n        })\n        .execute();\n      fy = (total - rows.getHeight(ri) - top) * -1;\n    }\n\n    const merge = merges.getFirstIncludes(ri, ci);\n    let mci = ci;\n    let mri = ri;\n    let sx = fx;\n    let sy = fy;\n    if (merge) {\n      mri = merge.sri;\n      mci = merge.sci;\n      const { rows, cols } = this;\n      const height = rows.sectionSumHeight(mri, ri - 1);\n      const width = cols.sectionSumWidth(mci, ci - 1);\n      sy += height;\n      sx += width;\n    }\n\n    return {\n      ri, ci, mri, mci, fx, fy, sx, sy,\n    };\n  }\n\n  /**\n   * onAttach\n   */\n  onAttach() {\n    // 注册焦点元素\n    this.focus.register({ target: this });\n    // 表格渲染组件\n    const { xTableStyle } = this;\n    this.attach(xTableStyle);\n    // 添加屏幕组件\n    this.attach(this.xScreen);\n    this.xScreen.addItem(new XFilter(this));\n    this.xScreen.addItem(new XSelectItem(this));\n    this.xScreen.addItem(new XCopyStyle(this));\n    this.xScreen.addItem(new XAutoFillItem(this));\n    // 添加表格组件\n    this.attach(this.xHeightLight);\n    this.attach(this.yHeightLight);\n    this.attach(this.edit);\n    this.attach(this.rowFixed);\n    this.attach(this.colFixed);\n    this.attach(this.xReSizer);\n    this.attach(this.yReSizer);\n    this.attach(this.dropRowFixed);\n    this.attach(this.dropColFixed);\n    // 绑定表格事件\n    this.bind();\n    // 注册快捷键\n    KeyBoardTabCode.register(this);\n  }\n\n  /**\n   * 事件绑定\n   */\n  bind() {\n    XEvent.bind(this, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\n      this.resize();\n    });\n    XEvent.bind(this, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\n      this.resize();\n    });\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, (e) => {\n      const { x, y } = this.eventXy(e);\n      const info = this.getRiCiByXy(x, y);\n      this.pointerEvent(info);\n      this.xIconsEvent(XIcon.ICON_EVENT_TYPE.MOUSE_MOVE, info, e);\n    });\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { activate } = this.focus;\n      const { target } = activate;\n      if (target === this) {\n        const { x, y } = this.eventXy(e);\n        const info = this.getRiCiByXy(x, y);\n        this.xIconsEvent(XIcon.ICON_EVENT_TYPE.MOUSE_DOWN, info, e);\n      }\n    });\n    XEvent.bind(this, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\n      this.rowHeightGroupIndex.clear();\n    });\n    XEvent.bind(this, Constant.TABLE_EVENT_TYPE.FIXED_ROW_CHANGE, () => {\n      this.rowHeightGroupIndex.clear();\n    });\n  }\n\n  /**\n   * 移除事件绑定\n   */\n  unbind() {\n    this.keyboard.unbind();\n    this.focus.unbind();\n  }\n\n  /**\n   * 获取滚动视图\n   * @returns {RectRange}\n   */\n  getScrollView() {\n    const { xTableAreaView } = this;\n    return xTableAreaView.getScrollView();\n  }\n\n  /**\n   * 水平滚动\n   * @param x\n   */\n  scrollX(x) {\n    const {\n      cols, xFixedView, scroll,\n    } = this;\n    const fixedView = xFixedView.getFixedView();\n    const [\n      ci, left, width,\n    ] = this.colsReduceIf(fixedView.eci + 1, cols.len, 0, 0, x, i => cols.getWidth(i));\n    let x1 = left;\n    if (x > 0) x1 += width;\n    let type;\n    if (scroll.x > x1) {\n      type = SCROLL_TYPE.H_LEFT;\n    } else if (scroll.x < x1) {\n      type = SCROLL_TYPE.H_RIGHT;\n    }\n    scroll.type = type;\n    scroll.ci = ci;\n    scroll.x = x1;\n    this.scrolling();\n    scroll.type = SCROLL_TYPE.UN;\n  }\n\n  /**\n   * 垂直滚动\n   * @param y\n   */\n  scrollY(y) {\n    const { rows, scroll, rowHeightGroupIndex } = this;\n    const find = rowHeightGroupIndex.get(y);\n    const [\n      ri, top, height,\n    ] = this.rowsReduceIf(find.ri, rows.len, find.top, 0, y, i => rows.getHeight(i));\n    let y1 = top;\n    if (y > 0) y1 += height;\n    let type;\n    if (scroll.y > y1) {\n      type = SCROLL_TYPE.V_TOP;\n    } else if (scroll.y < y1) {\n      type = SCROLL_TYPE.V_BOTTOM;\n    }\n    scroll.type = type;\n    scroll.ri = ri;\n    scroll.y = y1;\n    this.scrolling();\n    scroll.type = SCROLL_TYPE.UN;\n  }\n\n  /**\n   * 获取向上滚动的距离\n   * @returns {*}\n   */\n  getTop() {\n    const {\n      rows, xFixedView,\n    } = this;\n    const fixedView = xFixedView.getFixedView();\n    const view = this.getScrollView();\n    return rows.sectionSumHeight(fixedView.eri + 1, view.sri - 1);\n  }\n\n  /**\n   * 获取向左滚动的距离\n   * @returns {*}\n   */\n  getLeft() {\n    const {\n      cols, xFixedView,\n    } = this;\n    const fixedView = xFixedView.getFixedView();\n    const view = this.getScrollView();\n    return cols.sectionSumWidth(fixedView.eci + 1, view.sci - 1);\n  }\n\n  /**\n   * 设置固定行视图\n   * @param end\n   * @param start\n   */\n  setFixedRow(end, start = -1) {\n    const {\n      xFixedView,\n      rows,\n      scroll,\n      rowFixed,\n    } = this;\n    // 更新视图\n    const fixedView = xFixedView.getFixedView();\n    fixedView.eri = end;\n    if (start > -1) {\n      fixedView.sri = start;\n    }\n    xFixedView.setFixedView(fixedView);\n    // 更新滚动距离\n    const { sri, eri } = fixedView;\n    if (xFixedView.hasFixedTop()) {\n      scroll.y = 0;\n      scroll.ri = eri + 1;\n    } else {\n      scroll.y = rows.sectionSumHeight(0, sri - 1);\n      scroll.ri = sri;\n    }\n    // 更新固定条\n    rowFixed.fxSri = fixedView.sri;\n    rowFixed.fxEri = fixedView.eri;\n    // 更新视图\n    this.resize();\n    // 发送更新通知\n    this.trigger(Constant.TABLE_EVENT_TYPE.FIXED_CHANGE);\n    this.trigger(Constant.TABLE_EVENT_TYPE.FIXED_ROW_CHANGE);\n  }\n\n  /**\n   * 设置固定列视图\n   * @param end\n   * @param start\n   */\n  setFixedCol(end, start = -1) {\n    const {\n      xFixedView,\n      rows,\n      scroll,\n      colFixed,\n    } = this;\n    // 更新视图\n    const fixedView = xFixedView.getFixedView();\n    fixedView.eci = end;\n    if (start > -1) {\n      fixedView.sci = start;\n    }\n    xFixedView.setFixedView(fixedView);\n    // 更新滚动距离\n    const { sci, eci } = fixedView;\n    if (xFixedView.hasFixedLeft()) {\n      scroll.x = 0;\n      scroll.ci = eci + 1;\n    } else {\n      scroll.x = rows.sectionSumHeight(0, sci - 1);\n      scroll.ci = sci;\n    }\n    // 跟新固定条\n    colFixed.fxSci = fixedView.sci;\n    colFixed.fxEci = fixedView.eci;\n    // 更新视图\n    this.resize();\n    // 发送更新通知\n    this.trigger(Constant.TABLE_EVENT_TYPE.FIXED_CHANGE);\n  }\n\n  /**\n   * 设置缩放比\n   */\n  setScale(val = 1) {\n    const {\n      yHeightLight,\n      xHeightLight,\n      xTableStyle,\n      xScreen,\n      scale,\n      rowFixed,\n      colFixed,\n    } = this;\n    this.reset();\n    scale.setValue(val);\n    xScreen.setZone();\n    xHeightLight.offsetHandle();\n    yHeightLight.offsetHandle();\n    rowFixed.setSize();\n    colFixed.setSize();\n    xTableStyle.setScale(val);\n    this.trigger(Constant.TABLE_EVENT_TYPE.SCALE_CHANGE);\n  }\n\n  /**\n   * 重置变量区\n   */\n  reset() {\n    const { xTableAreaView } = this;\n    const { xTableFrozenContent } = this;\n    const { xLeftIndex } = this;\n    const { xTopIndex } = this;\n    const { xLeft } = this;\n    const { xTop } = this;\n    const { xContent } = this;\n    this.visualHeightCache = null;\n    this.visualWidthCache = null;\n    xTableAreaView.reset();\n    xTableFrozenContent.reset();\n    xLeftIndex.reset();\n    xTopIndex.reset();\n    xLeft.reset();\n    xTop.reset();\n    xContent.reset();\n  }\n\n  /**\n   * 重置界面大小\n   */\n  resize() {\n    const {\n      xTableStyle, xScreen, rowFixed, colFixed,\n    } = this;\n    this.reset();\n    xScreen.setZone();\n    rowFixed.setSize();\n    colFixed.setSize();\n    xTableStyle.resize();\n    this.trigger(Constant.TABLE_EVENT_TYPE.RESIZE_CHANGE);\n  }\n\n  /**\n   * 渲染静态界面\n   */\n  render() {\n    const { xTableStyle } = this;\n    xTableStyle.render();\n    this.trigger(Constant.TABLE_EVENT_TYPE.RENDER);\n  }\n\n  /**\n   * 渲染滚动界面\n   */\n  scrolling() {\n    const {\n      xTableStyle, xFixedView, scroll,\n    } = this;\n    const fixedView = xFixedView.getFixedView();\n    if (!xFixedView.hasFixedTop()) {\n      fixedView.sri = scroll.ri;\n    }\n    if (!xFixedView.hasFixedLeft()) {\n      fixedView.sci = scroll.ci;\n    }\n    this.reset();\n    xFixedView.setFixedView(fixedView);\n    xTableStyle.scrolling();\n    this.trigger(Constant.SYSTEM_EVENT_TYPE.SCROLL);\n  }\n\n  /**\n   * 销毁组件\n   */\n  destroy() {\n    super.destroy();\n    this.unbind();\n    this.xScreen.destroy();\n    this.xReSizer.destroy();\n    this.yReSizer.destroy();\n    this.xHeightLight.destroy();\n    this.yHeightLight.destroy();\n    this.edit.destroy();\n    this.rowFixed.destroy();\n    this.colFixed.destroy();\n  }\n\n}\n\nexport {\n  XTableDimensions,\n};\n","import { Widget } from '../../libs/Widget';\r\nimport { XTableDimensions } from '../table/XTableDimensions';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\n\r\nconst settings = {\r\n  tableConfig: {\r\n    data: [],\r\n  },\r\n};\r\n\r\nclass Sheet extends Widget {\r\n\r\n  constructor(tab, options) {\r\n    super(`${cssPrefix}-sheet`);\r\n    this.tab = tab;\r\n    this.options = PlainUtils.copy({}, settings, options);\r\n    this.table = new XTableDimensions(this.options.tableConfig);\r\n  }\r\n\r\n  onAttach() {\r\n    const { table } = this;\r\n    this.attach(table);\r\n  }\r\n\r\n}\r\n\r\nexport { Sheet };\r\n","/* global window */\nimport { Widget } from '../../libs/Widget';\nimport { cssPrefix, Constant, XSheetVersion } from '../../const/Constant';\nimport { VerticalLayer } from '../../libs/layer/VerticalLayer';\nimport { HorizontalLayer } from '../../libs/layer/HorizontalLayer';\nimport { VerticalLayerElement } from '../../libs/layer/VerticalLayerElement';\nimport { ScrollBarX } from '../../component/scrollbar/ScrollBarX';\nimport { ScrollBarY } from '../../component/scrollbar/ScrollBarY';\nimport { HorizontalLayerElement } from '../../libs/layer/HorizontalLayerElement';\nimport { VerticalCenterElement } from '../../libs/layer/center/VerticalCenterElement';\nimport { VerticalCenter } from '../../libs/layer/center/VerticalCenter';\nimport { SheetView } from './SheetView';\nimport { TabView } from './TabView';\nimport { PlainUtils } from '../../utils/PlainUtils';\nimport { XEvent } from '../../libs/XEvent';\nimport { h } from '../../libs/Element';\nimport { Tab } from './Tab';\nimport { Sheet } from './Sheet';\nimport Download from '../../libs/donwload/Download';\nimport { Throttle } from '../../libs/Throttle';\nimport { XDraw } from '../../canvas/XDraw';\n\nconst settings = {\n  sheets: [],\n};\n\nclass WorkBody extends Widget {\n\n  constructor(work, options) {\n    super(`${cssPrefix}-work-body`);\n    this.work = work;\n    this.options = PlainUtils.copy({}, settings, options);\n    this.sheets = this.options.sheets;\n    this.tabSheet = [];\n    this.activeIndex = -1;\n    // 版本标识\n    this.version = h('div', `${cssPrefix}-version-tips`);\n    this.version.html(`<a target=\"_blank\" href=\"https://gitee.com/eigi/x-sheet\">${XSheetVersion}</a>`);\n    this.children(this.version);\n    // sheet表\n    this.sheetViewLayer = new HorizontalLayerElement({\n      style: {\n        flexGrow: 1,\n      },\n    });\n    // 垂直滚动条\n    this.scrollBarYLayer = new HorizontalLayerElement({\n      style: {\n        overflow: 'inherit',\n      },\n    });\n    // 水平滚动条\n    this.scrollBarXLayer = new VerticalCenterElement();\n    this.scrollBarXVerticalCenter = new VerticalCenter();\n    this.scrollBarXHorizontalLayer = new HorizontalLayerElement({\n      style: {\n        flexGrow: 2,\n      },\n    });\n    this.scrollBarXVerticalCenter.children(this.scrollBarXLayer);\n    this.scrollBarXHorizontalLayer.children(this.scrollBarXVerticalCenter);\n    // 选项卡\n    this.sheetSwitchTabLayer = new HorizontalLayerElement({\n      style: {\n        flexGrow: 3,\n      },\n    });\n    // 水平布局\n    this.horizontalLayer1 = new HorizontalLayer();\n    this.horizontalLayer2 = new HorizontalLayer();\n    this.horizontalLayer1.children(this.sheetViewLayer);\n    this.horizontalLayer1.children(this.scrollBarYLayer);\n    this.horizontalLayer2.children(this.sheetSwitchTabLayer);\n    this.horizontalLayer2.children(this.scrollBarXHorizontalLayer);\n    // 根布局\n    this.horizontalLayer1Layer = new VerticalLayerElement({\n      style: {\n        flexGrow: 1,\n      },\n    });\n    this.horizontalLayer2Layer = new VerticalLayerElement();\n    this.layerVerticalLayer = new VerticalLayer();\n    this.horizontalLayer1Layer.children(this.horizontalLayer1);\n    this.horizontalLayer2Layer.children(this.horizontalLayer2);\n    this.layerVerticalLayer.children(this.horizontalLayer1Layer);\n    this.layerVerticalLayer.children(this.horizontalLayer2Layer);\n    this.children(this.layerVerticalLayer);\n    // 组件\n    this.sheetView = new SheetView();\n    this.tabView = new TabView({\n      onAdd: () => {\n        const tab = new Tab();\n        const sheet = new Sheet(tab);\n        this.addTabSheet({ tab, sheet });\n      },\n      onSwitch: (tab) => {\n        this.setActiveTab(tab);\n      },\n    });\n    this.scrollBarY = new ScrollBarY({\n      scroll: (move) => {\n        const sheet = this.sheetView.getActiveSheet();\n        sheet.table.scrollY(move);\n      },\n    });\n    this.scrollBarX = new ScrollBarX({\n      scroll: (move) => {\n        const sheet = this.sheetView.getActiveSheet();\n        sheet.table.scrollX(move);\n      },\n    });\n  }\n\n  onAttach() {\n    const {\n      sheetViewLayer, scrollBarYLayer, sheetSwitchTabLayer, scrollBarXLayer,\n    } = this;\n    scrollBarYLayer.attach(this.scrollBarY);\n    scrollBarXLayer.attach(this.scrollBarX);\n    sheetSwitchTabLayer.attach(this.tabView);\n    sheetViewLayer.attach(this.sheetView);\n    this.bind();\n    this.createSheet();\n  }\n\n  bind() {\n    const exploreInfo = PlainUtils.getExplorerInfo();\n    const throttle = new Throttle();\n    XEvent.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\n      this.scrollBarLocal();\n      this.scrollBarSize();\n    });\n    XEvent.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\n      this.scrollBarLocal();\n      this.scrollBarSize();\n    });\n    XEvent.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.FIXED_CHANGE, () => {\n      const table = this.getActiveTable();\n      if (table) {\n        this.scrollBarLocal();\n        this.scrollBarSize();\n      }\n    });\n    XEvent.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.DATA_CHANGE, (e) => {\n      this.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\n      e.stopPropagation();\n    });\n    XEvent.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.SELECT_CHANGE, (e) => {\n      this.trigger(Constant.TABLE_EVENT_TYPE.SELECT_CHANGE);\n      e.stopPropagation();\n    });\n    XEvent.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.SELECT_DOWN, (e) => {\n      this.trigger(Constant.TABLE_EVENT_TYPE.SELECT_DOWN, this);\n      e.stopPropagation();\n    });\n    XEvent.bind(this.sheetView, Constant.SYSTEM_EVENT_TYPE.MOUSE_WHEEL, (e) => {\n      const sheet = this.sheetView.getActiveSheet();\n      if (PlainUtils.isUnDef(sheet)) return;\n      const { table } = sheet;\n      const {\n        scroll, rows,\n      } = table;\n      const scrollView = table.getScrollView();\n      const { scrollTo } = this.scrollBarY;\n      const { deltaY } = e;\n      switch (exploreInfo.type) {\n        case 'Chrome': {\n          if (deltaY > 0) {\n            this.scrollBarY.scrollMove(scrollTo + Math.abs(deltaY));\n          } else {\n            this.scrollBarY.scrollMove(scrollTo - Math.abs(deltaY));\n          }\n          break;\n        }\n        case 'Firefox': {\n          if (deltaY > 0) {\n            const dis = rows.getHeight(scrollView.sri + 1);\n            this.scrollBarY.scrollMove(scrollTo + dis);\n          } else {\n            const dis = rows.getHeight(scrollView.sri - 1);\n            this.scrollBarY.scrollMove(scrollTo - dis);\n          }\n          break;\n        }\n      }\n      if (scroll.blockTop < scroll.maxBlockTop && scroll.blockTop > 0) {\n        e.stopPropagation();\n      }\n      e.preventDefault();\n    });\n    XEvent.bind(window, Constant.SYSTEM_EVENT_TYPE.RESIZE, () => {\n      throttle.action(() => {\n        XDraw.dprUpdate();\n        const table = this.getActiveTable();\n        if (table) {\n          table.reset();\n          this.scrollBarLocal();\n          this.scrollBarSize();\n          table.resize();\n        }\n      });\n    });\n  }\n\n  unbind() {\n    XEvent.unbind(this.sheetView);\n    XEvent.unbind(window);\n  }\n\n  addTabSheet({ tab, sheet }) {\n    const {\n      tabSheet, sheetView, tabView,\n    } = this;\n    sheetView.attach(sheet);\n    tabView.attach(tab);\n    tabSheet.push({\n      tab, sheet,\n    });\n  }\n\n  scrollBarSize() {\n    const table = this.getActiveTable();\n    const {\n      scrollBarXHorizontalLayer, scrollBarY, scrollBarX,\n    } = this;\n    // 获取表格大小\n    const totalHeight = table.getScrollTotalHeight();\n    const totalWidth = table.getScrollTotalWidth();\n    // 是否显示水平滚动条\n    if (totalWidth > table.getContentWidth()) {\n      scrollBarXHorizontalLayer.show();\n    } else {\n      scrollBarXHorizontalLayer.hide();\n    }\n    // 调整滚动条尺寸\n    scrollBarY.setSize(table.getContentHeight(), totalHeight);\n    scrollBarX.setSize(table.getContentWidth(), totalWidth);\n  }\n\n  scrollBarLocal() {\n    const table = this.getActiveTable();\n    this.scrollBarY.setLocal(table.getTop());\n    this.scrollBarX.setLocal(table.getLeft());\n  }\n\n  createSheet() {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const item of this.sheets) {\n      // eslint-disable-next-line no-restricted-syntax\n      const { name } = item;\n      const tab = new Tab(name);\n      const sheet = new Sheet(tab, item);\n      this.addTabSheet({ tab, sheet });\n    }\n    if (this.tabSheet.length) {\n      this.setActiveIndex(0);\n    }\n  }\n\n  setActiveIndex(index) {\n    const {\n      sheetView, tabView,\n    } = this;\n    sheetView.setActiveSheet(index);\n    tabView.setActiveTab(index);\n    const table = this.getActiveTable();\n    if (table) {\n      table.reset();\n      this.scrollBarLocal();\n      this.scrollBarSize();\n      table.resize();\n    }\n    this.trigger(Constant.WORK_BODY_EVENT_TYPE.CHANGE_ACTIVE);\n    this.activeIndex = index;\n  }\n\n  setScale(value) {\n    const { sheetView } = this;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    table.setScale(value);\n    this.scrollBarLocal();\n    this.scrollBarSize();\n  }\n\n  setActiveTab(tab) {\n    this.tabSheet.forEach((item, index) => {\n      if (item.tab === tab) {\n        this.setActiveIndex(index);\n      }\n    });\n  }\n\n  getActiveSheet() {\n    return this.sheetView.getActiveSheet();\n  }\n\n  getActiveTable() {\n    const sheet = this.getActiveSheet();\n    if (sheet) {\n      return sheet.table;\n    }\n    return null;\n  }\n\n  toJSONTemplate() {\n    const { activeIndex, sheetView, tabView } = this;\n    const sheet = sheetView.sheetList[activeIndex];\n    const tab = tabView.tabList[activeIndex];\n    if (sheet && tab) {\n      const { table } = sheet;\n      const {\n        rows, cols, settings,\n      } = table;\n      const cells = table.getTableCells();\n      const merges = table.getTableMerges();\n      const data = {\n        name: tab.name,\n        tableConfig: {\n          table: {\n            showGrid: settings.table.showGrid,\n            background: settings.table.background,\n          },\n          rows: {\n            len: rows.len,\n            height: rows.height,\n            data: rows.getData(),\n          },\n          cols: {\n            len: cols.len,\n            width: cols.width,\n            data: cols.getData(),\n          },\n          merge: {\n            merges: merges.getData(),\n          },\n          data: cells.getData(),\n        },\n      };\n      const text = `window['${tab.name}'] = ${JSON.stringify(data)}`;\n      Download(text, `${tab.name}.js`, 'application/x-javascript');\n    }\n  }\n\n  destroy() {\n    super.destroy();\n    this.unbind();\n  }\n\n}\n\nexport { WorkBody };\n","import { Widget } from '../../libs/Widget';\r\nimport { Constant, cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\nimport { XEvent } from '../../libs/XEvent';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { XSelectItem } from '../table/xscreenitems/xselect/XSelectItem';\r\nimport { Throttle } from '../../libs/Throttle';\r\nimport { Cell } from '../table/tablecell/Cell';\r\n\r\nclass BottomMenu extends Widget {\r\n\r\n  constructor(workBottom) {\r\n    super(`${cssPrefix}-bottom-menu`);\r\n    this.workBottom = workBottom;\r\n    this.sum = h('div', `${cssPrefix}-bottom-sum`);\r\n    this.avg = h('div', `${cssPrefix}-bottom-avg`);\r\n    this.number = h('div', `${cssPrefix}-bottom-number`);\r\n    this.fullScreen = h('div', `${cssPrefix}-bottom-full-screen`);\r\n    this.grid = h('div', `${cssPrefix}-bottom-grid`);\r\n    this.throttle = new Throttle({ time: 800 });\r\n    this.children(this.grid);\r\n    this.children(this.fullScreen);\r\n    this.children(this.sum);\r\n    this.children(this.avg);\r\n    this.children(this.number);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n  }\r\n\r\n  computer() {\r\n    const { workBottom } = this;\r\n    const { work } = workBottom;\r\n    const { body } = work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen, xIteratorBuilder } = table;\r\n    const merges = table.getTableMerges();\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    if (selectRange) {\r\n      const { sri, sci, eri, eci } = selectRange;\r\n      let number = 0;\r\n      let total = 0;\r\n      // 性能杀手(后续优化)\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(sri)\r\n        .setEnd(eri)\r\n        .setLoop((ri) => {\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(sci)\r\n            .setEnd(eci)\r\n            .setLoop((ci) => {\r\n              const merge = merges.getFirstIncludes(ri, ci);\r\n              if (merge) {\r\n                if (merge.sri !== ri || merge.sci !== ci) {\r\n                  return;\r\n                }\r\n              }\r\n              const cell = cells.getCell(ri, ci);\r\n              if (cell) {\r\n                const { text, contentType } = cell;\r\n                number += 1;\r\n                if (contentType === Cell.CONTENT_TYPE.NUMBER) {\r\n                  total += text;\r\n                }\r\n              }\r\n            })\r\n            .execute();\r\n        })\r\n        .execute();\r\n      const avg = total / number;\r\n      this.setSum(total);\r\n      this.setAvg(avg);\r\n      this.setNumber(number);\r\n    } else {\r\n      this.setSum(0);\r\n      this.setAvg(0);\r\n      this.setNumber(0);\r\n    }\r\n  }\r\n\r\n  unbind() {\r\n    const { workBottom, grid, fullScreen } = this;\r\n    const { work } = workBottom;\r\n    const { body } = work;\r\n    XEvent.unbind(grid);\r\n    XEvent.unbind(fullScreen);\r\n    XEvent.unbind(body);\r\n  }\r\n\r\n  bind() {\r\n    const { workBottom, grid, fullScreen, throttle } = this;\r\n    const { work } = workBottom;\r\n    const { body } = work;\r\n    const { sheetView } = body;\r\n    XEvent.bind(body, Constant.WORK_BODY_EVENT_TYPE.CHANGE_ACTIVE, () => {\r\n      throttle.action(() => {\r\n        this.computer();\r\n      });\r\n    });\r\n    XEvent.bind(body, Constant.TABLE_EVENT_TYPE.SELECT_CHANGE, () => {\r\n      throttle.action(() => {\r\n        this.computer();\r\n      });\r\n    });\r\n    XEvent.bind(body, Constant.TABLE_EVENT_TYPE.DATA_CHANGE, () => {\r\n      throttle.action(() => {\r\n        this.computer();\r\n      });\r\n    });\r\n    XEvent.bind(fullScreen, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      if (PlainUtils.isFull()) {\r\n        PlainUtils.exitFullscreen();\r\n      } else {\r\n        PlainUtils.fullScreen(work.root);\r\n      }\r\n    });\r\n    XEvent.bind(grid, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      table.settings.table.showGrid = !table.settings.table.showGrid;\r\n      table.render();\r\n    });\r\n  }\r\n\r\n  setSum(val) {\r\n    this.sum.text(`求和: ${val}`);\r\n  }\r\n\r\n  setAvg(val) {\r\n    this.avg.text(`平均数: ${val}`);\r\n  }\r\n\r\n  setNumber(val) {\r\n    this.number.text(`数量: ${val}`);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { BottomMenu };\r\n","import { Widget } from '../../libs/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { BottomMenu } from './BottomMenu';\r\n\r\nclass WorkBottom extends Widget {\r\n\r\n  constructor(work) {\r\n    super(`${cssPrefix}-work-bottom`);\r\n    this.work = work;\r\n  }\r\n\r\n  onAttach() {\r\n    this.bottomMenu = new BottomMenu(this);\r\n    this.attach(this.bottomMenu);\r\n  }\r\n\r\n}\r\n\r\nexport { WorkBottom };\r\n","import { Widget } from '../../libs/Widget';\nimport { cssPrefix } from '../../const/Constant';\nimport { VerticalLayer } from '../../libs/layer/VerticalLayer';\nimport { VerticalLayerElement } from '../../libs/layer/VerticalLayerElement';\nimport { WorkTop } from './WorkTop';\nimport { WorkBody } from './WorkBody';\nimport { WorkBottom } from './WorkBottom';\nimport { PlainUtils } from '../../utils/PlainUtils';\n\nconst settings = {\n  top: {\n    option: {\n      show: true,\n    },\n    menu: {\n      show: true,\n    },\n  },\n  body: {\n    sheets: [{\n      tableConfig: {},\n    }],\n  },\n  bottom: {\n    show: true,\n  },\n};\n\nclass Work extends Widget {\n\n  constructor(options) {\n    super(`${cssPrefix}-work`);\n    this.options = PlainUtils.copy({}, settings, options);\n    this.root = null;\n    // 布局\n    this.topLayer = new VerticalLayerElement();\n    this.bodyLayer = new VerticalLayerElement({\n      style: {\n        flexGrow: 1,\n      },\n    });\n    this.bottomLayer = new VerticalLayerElement();\n    this.verticalLayer = new VerticalLayer();\n    this.verticalLayer.children(this.topLayer);\n    this.verticalLayer.children(this.bodyLayer);\n    this.verticalLayer.children(this.bottomLayer);\n    this.children(this.verticalLayer);\n  }\n\n  onAttach(element) {\n    const { options, bodyLayer, topLayer, bottomLayer } = this;\n    this.root = element;\n    // 组件\n    this.top = new WorkTop(this, this.options.top);\n    this.body = new WorkBody(this, this.options.body);\n    this.bottom = new WorkBottom(this);\n    topLayer.attach(this.top);\n    if (options.bottom.show) {\n      bottomLayer.attach(this.bottom);\n    }\n    bodyLayer.attach(this.body);\n    this.bottom.bottomMenu.setSum(0);\n    this.bottom.bottomMenu.setAvg(0);\n    this.bottom.bottomMenu.setNumber(0);\n  }\n\n}\n\nexport { Work };\n","/* global window, document */\nimport { cssPrefix, XSheetVersion } from './const/Constant';\nimport { h } from './libs/Element';\nimport { Work } from './core/work/Work';\nimport { Widget } from './libs/Widget';\nimport { DragPanel } from './component/dragpanel/DragPanel';\nimport { ElPopUp } from './component/elpopup/ElPopUp';\nimport { XDraw } from './canvas/XDraw';\nimport { PlainUtils } from './utils/PlainUtils';\nimport { RectRange } from './core/table/tablebase/RectRange';\nimport { BaseFont } from './canvas/font/BaseFont';\nimport { XIcon } from './core/table/xicon/XIcon';\nimport './styles/base.less';\nimport './styles/index.less';\n\nconst settings = {\n  workConfig: {\n    name: 'x-sheet',\n    top: {\n      option: {\n        show: true,\n      },\n      menu: {\n        show: true,\n      },\n    },\n    body: {\n      sheets: [{\n        tableConfig: {},\n      }],\n    },\n    bottom: {\n      show: true,\n    },\n  },\n};\n\nclass XSheet extends Widget {\n  constructor(selectors, options) {\n    super(`${cssPrefix}`);\n    let root = selectors;\n    if (typeof selectors === 'string') {\n      root = document.querySelector(selectors);\n    }\n    root = h(root);\n    root.children(this);\n    this.options = PlainUtils.copy({}, settings, options);\n    this.work = new Work(this.options.workConfig);\n    this.attach(this.work);\n    ElPopUp.setRoot(this);\n    DragPanel.setRoot(this);\n  }\n}\nXSheet.version = XSheetVersion;\nXSheet.PlainUtils = PlainUtils;\nXSheet.XDraw = XDraw;\nXSheet.XIcon = XIcon;\nXSheet.RectRange = RectRange;\nXSheet.BaseFont = BaseFont;\nif (window) {\n  window.XSheet = XSheet;\n}\n\nexport { XSheet };\n"],"sourceRoot":""}