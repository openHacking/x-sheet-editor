{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/svg/cell.png","webpack:///./assets/svg/s-resize.png","webpack:///./assets/svg/e-resize.png","webpack:///./assets/svg/filter-dark.svg","webpack:///./src/libs/donwload/Download.js","webpack:///./src/const/Constant.js","webpack:///./src/utils/PlainUtils.js","webpack:///./src/libs/Element.js","webpack:///./src/libs/XEvent.js","webpack:///./src/libs/Widget.js","webpack:///./src/libs/Layer.js","webpack:///./src/libs/layer/VerticalLayer.js","webpack:///./src/libs/layer/VerticalLayerElement.js","webpack:///./src/core/work/tools/Icon.js","webpack:///./src/core/work/tools/base/Item.js","webpack:///./src/core/work/tools/Undo.js","webpack:///./src/core/work/tools/Redo.js","webpack:///./src/core/work/tools/PaintFormat.js","webpack:///./src/core/work/tools/ClearFormat.js","webpack:///./src/core/work/tools/base/DropDownItem.js","webpack:///./src/component/elpopup/ElPopUp.js","webpack:///./src/component/contextmenu/ELContextMenu.js","webpack:///./src/component/contextmenu/ELContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/format/FormatContextMenuItem.js","webpack:///./src/component/contextmenu/ELContextMenuDivider.js","webpack:///./src/core/work/tools/contextmenu/format/FormatContextMenu.js","webpack:///./src/core/work/tools/Format.js","webpack:///./src/core/work/tools/contextmenu/font/FontContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/font/FontContextMenu.js","webpack:///./src/core/work/tools/Font.js","webpack:///./src/core/work/tools/contextmenu/fontsize/FontSizeContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/fontsize/FontSizeContextMenu.js","webpack:///./src/core/work/tools/FontSize.js","webpack:///./src/core/work/tools/FontBold.js","webpack:///./src/core/work/tools/FontItalic.js","webpack:///./src/core/work/tools/UnderLine.js","webpack:///./src/core/work/tools/FontStrike.js","webpack:///./src/core/work/tools/contextmenu/fontcolor/FontColorContextMenuItem.js","webpack:///./src/component/dragpanel/DragPanel.js","webpack:///./src/component/colorpicker/ColorPicker.js","webpack:///./src/component/colorpicker/colorarray/ColorItem.js","webpack:///./src/component/colorpicker/colorarray/ColorArray.js","webpack:///./src/core/work/tools/contextmenu/fontcolor/FontColorContextMenu.js","webpack:///./src/core/work/tools/FontColor.js","webpack:///./src/core/work/tools/contextmenu/fillcolor/FillColorContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/fillcolor/FillColorContextMenu.js","webpack:///./src/core/work/tools/FillColor.js","webpack:///./src/core/work/tools/contextmenu/border/bordertype/BorderTypeContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon1.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon2.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon3.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon4.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon5.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon6.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon7.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon8.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon9.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon10.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderColor.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderType.js","webpack:///./src/core/work/tools/contextmenu/border/bordercolor/BorderColorContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/border/bordercolor/BorderColorContextMenu.js","webpack:///./src/core/work/tools/contextmenu/border/linetype/LineTypeContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/border/linetype/LineTypeContextMenu.js","webpack:///./src/canvas/XDraw.js","webpack:///./src/canvas/Line.js","webpack:///./src/core/work/tools/contextmenu/border/bordertype/BorderTypeContextMenu.js","webpack:///./src/core/work/tools/Border.js","webpack:///./src/core/work/tools/Merge.js","webpack:///./src/core/work/tools/contextmenu/icon/horizontal/HorizontalIcon1.js","webpack:///./src/core/work/tools/contextmenu/icon/horizontal/HorizontalIcon2.js","webpack:///./src/core/work/tools/contextmenu/icon/horizontal/HorizontalIcon3.js","webpack:///./src/core/work/tools/contextmenu/horizontal/HorizontalContextMenuItem.js","webpack:///./src/canvas/font/BaseFont.js","webpack:///./src/core/work/tools/contextmenu/horizontal/HorizontalContextMenu.js","webpack:///./src/core/work/tools/HorizontalAlign.js","webpack:///./src/core/work/tools/contextmenu/vertical/VerticalContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/icon/vertical/VerticalIcon1.js","webpack:///./src/core/work/tools/contextmenu/icon/vertical/VerticalIcon2.js","webpack:///./src/core/work/tools/contextmenu/icon/vertical/VerticalIcon3.js","webpack:///./src/core/work/tools/contextmenu/vertical/VerticalContextMenu.js","webpack:///./src/core/work/tools/VerticalAlign.js","webpack:///./src/core/work/tools/contextmenu/icon/textwrapping/TextWrappingIcon1.js","webpack:///./src/core/work/tools/contextmenu/icon/textwrapping/TextWrappingIcon2.js","webpack:///./src/core/work/tools/contextmenu/icon/textwrapping/TextWrappingIcon3.js","webpack:///./src/core/work/tools/contextmenu/textwrapping/TextWrappingContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/textwrapping/TextWrappingContextMenu.js","webpack:///./src/core/work/tools/TextWrapping.js","webpack:///./src/core/work/tools/contextmenu/fixed/FixedContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/fixed/FixedContextMenu.js","webpack:///./src/core/work/tools/Fixed.js","webpack:///./src/core/work/tools/Filter.js","webpack:///./src/core/work/tools/Functions.js","webpack:///./src/core/table/tablecell/CellFont.js","webpack:///./src/core/table/tablecell/Border.js","webpack:///./src/core/table/tablecell/CellBorder.js","webpack:///./src/canvas/Rect.js","webpack:///./src/core/table/xicon/XIconOffset.js","webpack:///./src/canvas/Crop.js","webpack:///./src/core/table/xicon/XIcon.js","webpack:///./src/core/table/tablecell/Cell.js","webpack:///./src/core/work/tools/contextmenu/scale/ScaleContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/scale/ScaleContextMenu.js","webpack:///./src/core/work/tools/Scale.js","webpack:///./src/core/table/tablebase/RectRange.js","webpack:///./src/core/table/xscreen/part/XScreenPart.js","webpack:///./src/core/table/xscreen/part/XScreenLTPart.js","webpack:///./src/core/table/xscreen/part/XScreenTPart.js","webpack:///./src/core/table/xscreen/part/XScreenLPart.js","webpack:///./src/core/table/xscreen/part/XScreenBRPart.js","webpack:///./src/core/table/xscreen/item/XScreenItem.js","webpack:///./src/core/table/xscreen/item/viewdisplay/XScreenViewEyes.js","webpack:///./src/core/table/xscreen/item/viewdisplay/XScreenViewLocal.js","webpack:///./src/core/table/xscreen/item/viewdisplay/XScreenViewSizer.js","webpack:///./src/core/table/xscreen/item/viewborder/XScreenStyleBorderItem.js","webpack:///./src/core/table/xscreen/item/viewborder/XScreenCssBorderItem.js","webpack:///./src/core/table/XTableMousePointer.js","webpack:///./src/core/table/xscreenitems/xselect/XSelectItem.js","webpack:///./src/component/alert/Alert.js","webpack:///./src/component/mask/Mask.js","webpack:///./src/component/filterdata/OrderAZ.js","webpack:///./src/component/filterdata/OrderZA.js","webpack:///./src/component/form/select/SelectContextMenu.js","webpack:///./src/component/form/select/SelectContextMenuItem.js","webpack:///./src/component/form/select/Select.js","webpack:///./src/component/form/input/PlainInput.js","webpack:///./src/component/filterdata/IFFilter.js","webpack:///./src/component/form/input/SearchInput.js","webpack:///./src/component/filterdata/valuefilter/ValueFilter.js","webpack:///./src/component/filterdata/FilterData.js","webpack:///./src/component/filterdata/valuefilter/ValueItem.js","webpack:///./src/core/table/xscreenitems/xfilter/XFilter.js","webpack:///./src/core/table/xscreen/item/viewborder/XScreenSvgBorderItem.js","webpack:///./src/core/table/xscreenitems/xcopystyle/XCopyStyle.js","webpack:///./src/component/confirm/Confirm.js","webpack:///./src/core/work/tools/contextmenu/fontangle/FontAngleContextMenuItem.js","webpack:///./src/core/work/tools/base/Divider.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngleDivider.js","webpack:///./src/core/work/tools/base/DropInputItem.js","webpack:///./src/core/work/tools/contextmenu/fontanglevalue/FontAngleValueContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/fontanglevalue/FontAngleValueContextMenu.js","webpack:///./src/core/work/tools/FontAngleValue.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngle1.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngle2.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngle3.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngle4.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngle5.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngle6.js","webpack:///./src/core/work/tools/contextmenu/fontangle/FontAngleContextMenu.js","webpack:///./src/core/work/tools/FontAngle.js","webpack:///./src/core/work/TopMenu.js","webpack:///./src/core/work/options/base/Item.js","webpack:///./src/core/work/options/File.js","webpack:///./src/core/work/options/ForMart.js","webpack:///./src/core/work/options/Insert.js","webpack:///./src/core/work/options/Look.js","webpack:///./src/core/work/options/Update.js","webpack:///./src/core/work/TopOption.js","webpack:///./src/core/work/WorkTop.js","webpack:///./src/libs/layer/HorizontalLayer.js","webpack:///./src/component/scrollbar/ScrollBarX.js","webpack:///./src/component/scrollbar/ScrollBarY.js","webpack:///./src/libs/layer/HorizontalLayerElement.js","webpack:///./src/libs/layer/center/VerticalCenterElement.js","webpack:///./src/libs/layer/center/VerticalCenter.js","webpack:///./src/core/work/SheetView.js","webpack:///./src/core/work/TabView.js","webpack:///./src/core/work/Tab.js","webpack:///./src/core/table/tablebase/Scale.js","webpack:///./src/core/table/tablebase/Code.js","webpack:///./src/core/table/tablebase/Row.js","webpack:///./src/core/table/tablebase/Rows.js","webpack:///./src/core/table/tablebase/Col.js","webpack:///./src/core/table/tablebase/Cols.js","webpack:///./src/core/table/tablebase/Scroll.js","webpack:///./src/core/table/XTableKeyboard.js","webpack:///./src/core/table/tablefixed/ColFixed.js","webpack:///./src/core/table/resizer/XReSizer.js","webpack:///./src/core/table/tablefixed/RowFixed.js","webpack:///./src/core/table/resizer/YReSizer.js","webpack:///./src/core/table/highlight/XHeightLight.js","webpack:///./src/core/table/highlight/YHeightLight.js","webpack:///./src/core/table/XTableFocus.js","webpack:///./src/core/table/XTableScrollView.js","webpack:///./src/core/table/XTableAreaView.js","webpack:///./src/libs/Throttle.js","webpack:///./src/core/table/XTableEdit.js","webpack:///./src/canvas/Grid.js","webpack:///./src/canvas/Box.js","webpack:///./src/core/table/tablecell/Cells.js","webpack:///./src/utils/DateUtils.js","webpack:///./src/core/table/XTableFormat.js","webpack:///./src/canvas/RTFunction.js","webpack:///./src/canvas/Angle.js","webpack:///./src/canvas/font/DrawResult.js","webpack:///./src/canvas/font/draw/AngleBoxDraw.js","webpack:///./src/canvas/font/draw/AngleBarDraw.js","webpack:///./src/canvas/font/draw/HorizonDraw.js","webpack:///./src/canvas/font/draw/VerticalDraw.js","webpack:///./src/canvas/font/BaseRuler.js","webpack:///./src/canvas/font/PlainRuler.js","webpack:///./src/canvas/font/ruler/AngleBoxRuler.js","webpack:///./src/canvas/font/ruler/AngleBarRuler.js","webpack:///./src/canvas/font/ruler/HorizonRuler.js","webpack:///./src/canvas/font/ruler/HorizonVisual.js","webpack:///./src/canvas/font/ruler/VerticalRuler.js","webpack:///./src/canvas/font/ruler/VerticalVisual.js","webpack:///./src/canvas/font/build/DrawFontBuilder.js","webpack:///./src/core/table/tablebase/Text.js","webpack:///./src/core/table/helper/BaseCellsHelper.js","webpack:///./src/core/table/helper/StyleCellsHelper.js","webpack:///./src/core/table/helper/TextCellsHelper.js","webpack:///./src/core/table/XTableHistoryAreaView.js","webpack:///./src/core/table/helper/OperateCellsHelper.js","webpack:///./src/core/table/tablebase/XFixedMeasure.js","webpack:///./src/core/table/cellicon/CellIcon.js","webpack:///./src/core/table/cellicon/FixedCellIcon.js","webpack:///./src/core/table/cellicon/StaticCellIcon.js","webpack:///./src/core/table/xlinehandle/XLineIteratorFilter.js","webpack:///./src/core/table/xlinehandle/XLineIteratorLoop.js","webpack:///./src/core/table/xlinehandle/XLineIteratorItem.js","webpack:///./src/core/table/xlinehandle/linefilters/borderhidden/BBorderHide.js","webpack:///./src/core/table/xlinehandle/linefilters/mergenulledge/MergeBNullEdge.js","webpack:///./src/core/table/xlinehandle/linefilters/borderhidden/RBorderHide.js","webpack:///./src/core/table/xlinehandle/linefilters/mergenulledge/MergeRNullEdge.js","webpack:///./src/core/table/xlinehandle/linefilters/celloutrange/CellOutRange.js","webpack:///./src/core/table/xlinehandle/linefilters/celloutrange/RCellOutRange.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarhidden/AngleBarHide.js","webpack:///./src/core/table/xlinehandle/linegrids/LineGrid.js","webpack:///./src/core/table/xlinehandle/XLineOptimizeJoin.js","webpack:///./src/core/table/xlinehandle/linefilters/borderdisplay/BBorderShow.js","webpack:///./src/core/table/xlinehandle/linefilters/borderpriority/BBorderPriority.js","webpack:///./src/core/table/xlinehandle/linefilters/borderdisplay/TBorderShow.js","webpack:///./src/core/table/xlinehandle/linefilters/borderpriority/TBorderPriority.js","webpack:///./src/core/table/xlinehandle/linefilters/mergenulledge/MergeTNullEdge.js","webpack:///./src/core/table/xlinehandle/linefilters/borderdisplay/RBorderShow.js","webpack:///./src/core/table/xlinehandle/linefilters/borderpriority/RBorderPriority.js","webpack:///./src/core/table/xlinehandle/linefilters/borderpriority/LBorderPriority.js","webpack:///./src/core/table/xlinehandle/linefilters/borderdisplay/LBorderShow.js","webpack:///./src/core/table/xlinehandle/linefilters/mergenulledge/MergeLNullEdge.js","webpack:///./src/core/table/xlinehandle/linefilters/celloutrange/LCellOutRange.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarhidden/LAngleBarHide.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarhidden/RAngleBarHide.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarhidden/TAngleBarHide.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarhidden/BAngleBarHide.js","webpack:///./src/core/table/xlinehandle/lineborder/LineBorder.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebardisplay/AngleBarShow.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarinrow/AngleBarInRow.js","webpack:///./src/core/table/xlinehandle/anglebar/AngleBar.js","webpack:///./src/core/table/xlinehandle/lineindex/LineIndex.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarout/LAngleBarOut.js","webpack:///./src/core/table/xlinehandle/anglebarout/AngleBarLOut.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarout/RAngleBarOut.js","webpack:///./src/core/table/xlinehandle/anglebarout/AngleBarROut.js","webpack:///./src/core/table/xlinehandle/XLinePlainGenerator.js","webpack:///./src/core/table/xmerges/XMergesIndex.js","webpack:///./src/core/table/xmerges/XMergesNo.js","webpack:///./src/core/table/xmerges/XMergesNoRow.js","webpack:///./src/core/table/xmerges/XMergesItems.js","webpack:///./src/core/table/xmerges/XMergesNoCol.js","webpack:///./src/core/table/xmerges/XMergesRange.js","webpack:///./src/core/table/xmerges/XMerges.js","webpack:///./src/core/table/XTableDataItem.js","webpack:///./src/core/table/XTableDataItems.js","webpack:///./src/canvas/Path.js","webpack:///./src/canvas/Point.js","webpack:///./src/core/table/XTableStyle.js","webpack:///./src/core/table/xscreen/zone/XScreenZone.js","webpack:///./src/core/table/xscreen/zone/XScreenBRZone.js","webpack:///./src/core/table/xscreen/zone/XScreenLTZone.js","webpack:///./src/core/table/xscreen/zone/XScreenLZone.js","webpack:///./src/core/table/xscreen/zone/XScreenTZone.js","webpack:///./src/core/table/xscreen/XScreen.js","webpack:///./src/component/autofilltype/AutoFillTypeMenuItem.js","webpack:///./src/component/autofilltype/AutoFillTypeMenu.js","webpack:///./src/component/autofilltype/AutoFillType.js","webpack:///./src/core/table/helper/CellMergeCopyHelper.js","webpack:///./src/core/table/xscreenitems/xautofill/XAutoFillItem.js","webpack:///./src/core/table/tablefixed/drop/DropRowFixed.js","webpack:///./src/core/table/tablefixed/drop/DropColFixed.js","webpack:///./src/core/table/tablebase/XFixedView.js","webpack:///./src/core/table/datasnapshot/DataProxy.js","webpack:///./src/core/table/datasnapshot/proxy/TableCellDataProxy.js","webpack:///./src/core/table/datasnapshot/record/CellDataRecord.js","webpack:///./src/core/table/datasnapshot/record/MergeDataRecord.js","webpack:///./src/core/table/datasnapshot/proxy/TableMergeDataProxy.js","webpack:///./src/core/table/datasnapshot/proxy/TableColsDataProxy.js","webpack:///./src/core/table/datasnapshot/record/ColsDataRecord.js","webpack:///./src/core/table/datasnapshot/proxy/TableRowsDataProxy.js","webpack:///./src/core/table/datasnapshot/record/RowsDataRecord.js","webpack:///./src/core/table/datasnapshot/TableDataSnapshot.js","webpack:///./src/libs/Clipboard.js","webpack:///./src/core/table/xicon/XIconFocus.js","webpack:///./src/core/table/xicon/XIconBuilder.js","webpack:///./src/core/table/iterator/BaseIterator.js","webpack:///./src/core/table/iterator/RowsIterator.js","webpack:///./src/core/table/iterator/ColsIterator.js","webpack:///./src/core/table/iterator/XIteratorBuilder.js","webpack:///./src/core/table/tablebase/RowHeightGroupIndex.js","webpack:///./src/core/table/XTableDimensions.js","webpack:///./src/core/work/Sheet.js","webpack:///./src/core/work/WorkBody.js","webpack:///./src/core/work/BottomMenu.js","webpack:///./src/core/work/WorkBottom.js","webpack:///./src/core/work/Work.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","define","download","data","strFileName","strMimeType","blob","reader","self","window","defaultMime","mimeType","payload","url","anchor","document","createElement","toString","a","String","myBlob","Blob","MozBlob","WebKitBlob","fileName","this","length","split","pop","href","indexOf","ajax","XMLHttpRequest","open","responseType","onload","e","target","response","setTimeout","send","test","navigator","msSaveBlob","dataUrlToBlob","saver","type","strUrl","parts","binData","atob","decodeURIComponent","mx","uiArr","Uint8Array","charCodeAt","winMode","setAttribute","className","innerHTML","style","display","body","appendChild","click","removeChild","URL","revokeObjectURL","userAgent","replace","confirm","location","f","src","createObjectURL","constructor","btoa","y","encodeURIComponent","FileReader","result","readAsDataURL","Constant","cssPrefix","XSheetVersion","S4","Math","random","substring","WORK_BODY_EVENT_TYPE","CHANGE_ACTIVE","SYSTEM_EVENT_TYPE","MOUSE_MOVE","MOUSE_DOWN","SCROLL","RESIZE","MOUSE_UP","KEY_UP","INPUT","KEY_DOWN","MOUSE_OVER","MOUSE_LEAVE","MOUSE_WHEEL","MOUSE_ENTER","CLICK","DRAG_START","CHANGE","VISIBILITY_CHANGE","TABLE_EVENT_TYPE","CHANGE_HEIGHT","SELECT_OVER","SCALE_CHANGE","FIXED_CHANGE","FIXED_ROW_CHANGE","SELECT_DOWN","SELECT_CHANGE","DATA_CHANGE","CHANGE_WIDTH","RESIZE_CHANGE","RENDER","FORM_EVENT_TYPE","SEARCH_INPUT_CHANGE","PLAIN_INPUT_CHANGE","FORM_SELECT_CHANGE","alphabets","DATA_TYPE","PlainUtils","isEmptyObject","isUnDef","trim","obj","getPrototypeOf","parent","sources","forEach","source","keys","v","Array","isArray","isPlainObject","mergeDeep","str","toLowerCase","arg","json","JSON","stringify","parse","assign","objOrAry","cb","total","size","val","isNumber","parseFloat","parseInt","index","idx","ret","expoNet","x","charAt","indexAt","stringAt","xn","yn","expr2xy","xy2expr","min","getSelection","focus","range","selectAllChildren","collapseToEnd","selection","createRange","moveToElementText","collapse","select","isBlank","Date","now","width","innerWidth","height","innerHeight","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","element","el","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","explorer","version","match","EMPTY","Nul","Undef","undefined","noop","Element","tag","args","elements","item","push","arguments","wrap","childNodes","ele","append","classList","remove","add","contains","k","css","top","offsetTop","left","offsetLeft","offsetHeight","offsetWidth","parentNode","getBoundingClientRect","firstChild","lastChild","previousSibling","nextSibling","flag","cls","addClass","removeClass","text","innerText","html","removeAttribute","getAttribute","removeProperty","getComputedStyle","computedStyle","message","event","CustomEvent","detail","bubbles","cancelable","dispatchEvent","querySelectorAll","eleArray","sibling","previousElementSibling","nextElementSibling","after","before","h","pool","callback","option","removeEventListener","addEventListener","rem","eqElem","eqOpt","eqType","eqCall","eles","unbind","XEvent","fn","multipleUnbind","multipleBind","doubleFunc","last","evt","current","pageX","pageY","moveFunc","upFunc","xEvtMove","stopPropagation","xEvtUp","XEventPool","Widget","nodeType","box","widget","children","onAttach","clazz","node","is","hasClass","Layer","VerticalLayer","options","VerticalLayerElement","flexGrow","Icon","iconNameEl","Item","Undo","icon","Redo","PaintFormat","sheets","sheet","splice","ClearFormat","DropDownItem","drop","title","px","cssRemoveKeys","root","instances","ElPopUp","autoWidth","autoHeight","position","POPUP_POSTION","TB","direction","status","spaces","elPopUpDownHandle","close","instance","filter","elPopUpPosition","elPopUpAutosize","elPopUpLocation","elBox","winWidth","winHeight","LR","elLeft","leftDiff","rightDiff","elTop","topDiff","bottomDIff","ELContextMenu","menus","elPopUp","setEL","destroy","ELContextMenuItem","FormatContextMenuItem","desc","iconElement","titleElement","descElement","ELContextMenuDivider","FormatContextMenu","onUpdate","items","addItem","init","first","setTitle","setActive","format","update","Format","contextMenu","setWidth","setEllipsis","formatContextMenu","FontContextMenuItem","FontContextMenu","setActiveByType","Font","fontContextMenu","FontSizeContextMenuItem","FontSizeContextMenu","FontSize","fontSizeContextMenu","FontBold","FontItalic","UnderLine","FontStrike","FontColorContextMenuItem","DragPanel","DRAG_PANEL_POSITION","CENTER","mask","content","dragPanelLocation","evt1","button","downEventXy","eventXy","mouseMoveUp","evt2","offset","viewPort","LEFT","RIGHT","TOP","removeInstance","ColorPicker","selectCb","dragPanel","color","preViewColorPoint","colorValueTips","colorInput","selectColorPoint","selectColorArea1","selectColorArea2","selectColorArea3","center","colorHuxTips","colorBar","colorBarPoint","bottom","cancelButton","selectButton","buttons","hex","len","join","hsx","max","g","b","rgbToHsb","hexToRgb","rgb","hsb","delta","t1","t2","t3","round","nr","rgbToHex","hsbToRgb","startsWith","isHex","parseRgb","e1","hexColor","xy","colorBarBox","downHue","e2","moveHue","centerBox","downSelect","moveSelect","fixHsx","colorValue","hsbToHex","isRgb","change","colorBarPointBox","colorBarPointLeft","selectColorPointBox","selectColorPointLeft","selectColorPointTop","areaColorValue","sliderPosition","hueChange","selectChange","hexToHsb","fixHex","ColorItem","isDark","checkedIcon","hide","active","show","ColorArray","colors","activeColor","setActiveByColor","FontColorContextMenu","colorPicker","customizeColorArray","colorArray","reset","array","plus","customize","FontColor","setIcon","setColor","fontColorContextMenu","FillColorContextMenuItem","FillColorContextMenu","FillColor","fillColorContextMenu","BorderTypeContextMenuItem","BorderIcon1","BorderIcon2","BorderIcon3","BorderIcon4","BorderIcon5","BorderIcon6","BorderIcon7","BorderIcon8","BorderIcon9","BorderIcon10","BorderColor","BorderType","BorderColorContextMenuItem","BorderColorContextMenu","LineTypeContextMenuItem","typeIcon","LineTypeContextMenu","DPR","devicePixelRatio","LINE_WIDTH_LOW","LINE_WIDTH_MEDIUM","LINE_WIDTH_HIGH","LINE_PIXEL_OFFSET","Base","canvas","ctx","getContext","dpr","styleTransformCssPx","srcTransformStylePx","rounding","angle","PI","CorsLine","lineWidthType","LINE_WIDTH_TYPE","low","lineColor","sx","sy","ex","ey","lineWidth","medium","high","attr","strokeStyle","polyStroke","xys","getOffsetX","getOffsetY","TypeError","corsLine","transformLinePx","pixel","offsetX","offsetY","interpolation","beginPath","moveTo","lineTo","stroke","fill","fillRect","radian","dash","measureText","save","restore","clip","setLineDash","scale","translate","deg","rotate","XDraw","fillText","path","polyInFill","points","w","rect","sw","sh","tx","ty","tw","th","drawImage","LINE_TYPE","SOLID_LINE","DOTTED_LINE","POINT_LINE","DOUBLE_LINE","SolidLine","draw","widthType","setLineColor","setLineWidthType","horizonLine","verticalLine","DottedLine","DoubleLine","padding","spacing","leftShow","topShow","rightShow","bottomShow","iFMerge","iFMergeFirstRow","iFMergeLastRow","iFMergeFirstCol","iFMergeLastCol","row","col","pos","external","ifMerge","firstRow","lastRow","firstCol","lastCol","sTopLeftCorner","sTop","sBottom","eBottomLeftCorner","eBottom","eTop","sLeft","sRight","eTopRightCorner","eRight","eLeft","sTopRightCorner","eBottomRightCorner","sBottomLeftCorner","internal","handleExternal","handleInternal","Line","solidLine","dottedLine","pointLine","doubleLine","setWidthType","tiltingLine","BorderTypeContextMenu","borderIcon1","borderIcon2","borderIcon3","borderIcon4","borderIcon5","div1","borderIcon6","borderIcon7","borderIcon8","borderIcon9","borderIcon10","div2","borderIcons","borderColor","borderType","div3","borderColorAndType","borderColorContextMenu","copyProp","lineTypeContextMenu","closeAll","isClose","preventDefault","Border","borderTypeContextMenu","Merge","HorizontalIcon1","HorizontalIcon2","HorizontalIcon3","HorizontalContextMenuItem","BaseFont","ruler","align","ALIGN","verticalAlign","VERTICAL_ALIGN","right","TEXT_WRAP","OVER_FLOW","WORD_WRAP","TRUNCATE","TEXT_DIRECTION","HORIZONTAL","VERTICAL","ANGLE","ANGLE_BAR","HorizontalContextMenu","horizontalIcon1","horizontalIcon2","horizontalIcon3","horizontalIcons","HorizontalAlign","horizontalContextMenu","VerticalContextMenuItem","VerticalIcon1","VerticalIcon2","VerticalIcon3","VerticalContextMenu","verticalIcon1","verticalIcon2","verticalIcon3","verticalIcons","VerticalAlign","verticalContextMenu","TextWrappingIcon1","TextWrappingIcon2","TextWrappingIcon3","TextWrappingContextMenuItem","TextWrappingContextMenu","textWrappingIcon1","textWrappingIcon2","textWrappingIcon3","textWrappingIcons","TextWrapping","textWrappingContextMenu","FixedContextMenuItem","FixedContextMenu","row1","row2","col1","col2","Fixed","rowStatus","colStatus","fixedContextMenu","Filter","Functions","CellFont","textWrap","strikethrough","underline","bold","italic","scaleAdapter","zIndexID","zIndex","$zIndex","$display","$color","$type","$widthType","border","origin","getZIndex","CellBorder","setBDisplay","setLDisplay","setTDisplay","setRDisplay","setBColor","setLColor","setTColor","setRColor","setBWidthType","setLWidthType","setTWidthType","setRWidthType","setBType","setLType","setTType","setRType","Rect","other","XIconOffset","Crop","XIcon","vertical","ICON_VERTICAL","horizontal","ICON_HORIZONTAL","ICON_TYPE","image","onDraw","onLeave","onMove","onDown","onEnter","icons","iconHorizontal","iconVertical","iconOffsetX","iconOffsetY","iconWidth","iconHeight","rectX","rectY","rectWidth","rectHeight","py","BOTTOM","load","sync","Image","loadImg","complete","onerror","console","error","drawCustom","positionRect","include","includeRect","crop","fillStyle","native","inRectPosition","activate","ICON_EVENT_TYPE","includePoint","setActivate","custom","Cell","background","borderAttr","fontAttr","contentWidth","leftSdistWidth","rightSdistWidth","contentType","CONTENT_TYPE","STRING","newInstances","convert","setContentWidth","setLeftSdistWidth","setRightSdistWidth","NUMBER","ScaleContextMenuItem","ScaleContextMenu","Scale","scaleContextMenu","RectRange","sri","sci","eri","eci","ref","refs","iteratorBuilder","rowFilter","getRowIterator","setBegin","setEnd","setLoop","getColIterator","j","execute","ri","ci","disjoint","coincide","equals","difference","addRet","dsr","dsc","der","dec","multiple","XScreenPart","xScreenZone","XScreenLTPart","XScreenTPart","XScreenLPart","XScreenBRPart","XScreenItem","table","lt","br","xScreen","Display","viewEyes","targetViewRange","getXScreenViewRange","part","getPart","LTDisplay","xFixedView","hasFixedTop","hasFixedLeft","getFixedView","TDisplay","fixedView","scrollView","getScrollView","BRDisplay","LDisplay","XScreenViewEyes","ltDisplay","tDisplay","brDisplay","lDisplay","setDisplay","Local","viewLocal","cols","screenView","sectionSumWidth","rows","sectionSumHeight","setTop","setLeft","LTLocal","TLocal","BRLocal","LLocal","XScreenViewLocal","tlLocal","tLocal","brLocal","lLocal","view","setLocal","Sizer","viewSizer","rectRangeSumWidth","rectRangeSumHeight","offsetToLineInside","LTSizer","TSizer","BRSizer","LSizer","XScreenViewSizer","ltSizer","tSizer","brSizer","lSizer","setSizer","RANGE_OVER_GO","LT","T","BR","L","LTT","LTL","BRT","BRL","ALL","XScreenStyleBorderItem","blt","bt","bl","bbr","overGo","getOverGo","getBorderDisplay","showBBorder","showTBorder","showLBorder","showRBorder","rowsLen","colsLen","ltt","ltl","brt","brl","XScreenCssBorderItem","setBorderType","XTableMousePointer","token","sResize","cell","eResize","KEYS","crosshair","grab","default","rowResize","colResize","pointer","SELECT_LOCAL","XSelectItem","selectLocal","activeCorner","selectRange","downRange","moveRange","ltElem","brElem","lElem","tElem","ltHighLight","lHighLight","tHighLight","brHighLight","ltCorner","lCorner","tCorner","brCorner","merges","getTableMerges","viewRange","getRiCiByXy","union","offsetHandle","borderHandle","cornerHandle","getFirstIncludes","register","mousePointer","downHandle","lock","set","trigger","moveHandle","free","hideBorder","showBorder","Alert","closeEle","titleEle","contentEle","okEle","buttonsEle","Mask","OrderAZ","OrderZA","SelectContextMenu","SelectContextMenuItem","textEle","Select","selectValue","selectText","selectIcon","setSelect","find","PlainInput","inputWrapEle","inputInnerEle","inputEle","setValue","IFFilter","IF_TYPE","NOT","titleTextEle","titleIconEle","selectEleBox","selectEle","valueInputEleBox","valueInput","addValue","addDivider","CT_EMPTY","CT_NOT_EMPTY","STR_INCLUDE","STR_NOT_INCLUDE","STR_START","STR_END","STR_EQ","DAT_EQ","DAT_BEFORE","DAT_AFTER","NUM_BEFORE","NUM_BEFORE_EQ","NUM_AFTER","NUM_AFTER_EQ","NUM_EQ","NUM_NOT_EQ","switchInput","setType","SearchInput","searchEle","ValueFilter","filterExp","filters","optionBoxEle","flagEle","clearEle","searchBoxEle","searchInput","itemsBox","selectAll","closestClass","setStatus","clearAll","RegExp","filterItems","valueItem","setIndex","empty","selectItems","FilterData","ok","no","valueFilter","ifFilter","orderAz","orderZa","noEle","okHandle","valueFilterItems","getSelectItems","valueFilterValue","getValue","ifFilterType","getType","ifFilterValue","noHandle","filterDataHandle","ValueItem","iconEle","XFilter","activeIcon","setRoot","filterFoldRow","flt","ft","fbr","fl","setBorderColor","xFilterOffset","brink","xIconBuilder","xIteratorBuilder","fixedCellIcon","getXTableStyle","each","build","darkFilter","setOnEnter","cssHeight","cssWidth","cssLeft","cssTop","setHeight","setOnDown","filterOpen","setOnMove","setOnLeave","addOrNewCell","render","findType","cells","getTableCells","targetRange","clone","rowLen","colLen","merge","getCellOrMergeCell","emptyCol","emptyRow","Set","emptyAll","getCell","clearFilterIcon","xFilterHandle","emptyRectRange","createFilterIcon","SVG","XCopyStyle","hideCopyStyle","Confirm","FontAngleContextMenuItem","Divider","FontAngleDivider","DropInputItem","input","FontAngleValueContextMenuItem","angleValue","FontAngleValueContextMenu","FontAngleValue","onChange","fontAngleValueContextMenu","FontAngle1","FontAngle2","FontAngle3","FontAngle4","FontAngle5","FontAngle6","FontAngleContextMenu","onUpdateAngle","onUpdateType","angle1","angle2","angle3","angle4","angle5","angle6","FontAngle","fontAngleContextMenu","TopMenu","workTop","sheetView","work","undo","redo","setScale","paintFormat","clearFormat","getActiveSheet","operateCellsHelper","getOperateCellsHelper","tableDataSnapshot","begin","cellDataProxy","getCellOrNewCellByViewRange","rectRange","setCell","end","font","dprFontSize","fontColor","fillColor","lineType","xTableStyle","angleCells","newCell","hasAngleCell","isAngleBarCell","setAllDisplay","setAllColor","setAllWidthType","setAllType","fontBold","fontItalic","underLine","fontStrike","horizontalAlign","textWrapping","fixed","setFixedRow","setFixedCol","functions","fontAngle","updateMaxIndex","setFormatStatus","setFontStatus","setFontSizeStatus","setFontBoldStatus","setFontItalicStatus","setUnderLineStatus","setFontStrikeStatus","setFontColorStatus","setFillColorStatus","setHorizontalAlignStatus","setVerticalAlignStatus","setTextWrappingStatus","setFontAngleStatus","setFixedStatus","canBack","back","canGo","go","xSelect","cellMergeCopyHelper","xCopyStyle","removeSheet","originViewRange","orSize","ocSize","trSize","tcSize","rSize","cSize","copyMergeContent","copyStylesContent","includeSheet","showCopyStyle","addSheet","getCellOrNew","mergeDataProxy","isNotUnDef","deleteMerge","addMerge","hideFilter","openFilter","setUndoStatus","setRedoStatus","setScaleStatus","setPaintFormatStatus","setFilterStatus","setFixedRowStatus","setFixedColStatus","firstCell","File","ForMart","Insert","Look","Update","TopOption","logoEle","optionsEle","leftEle","rightEle","file","insert","look","WorkTop","toolsMenu","attach","HorizontalLayer","ScrollBarX","scroll","to","lastBut","nextBut","block","blockLeft","maxBlockLeft","blockWidth","minBlockWidth","scrollTo","viewPortWidth","isHide","contentBox","computeScrollTo","move","maxTo","ScrollBarY","blockTop","maxBlockTop","blockHeight","minBlockHeight","contentHeight","viewPortHeight","HorizontalLayerElement","VerticalCenterElement","VerticalCenter","SheetView","sheetList","activeIndex","TabView","next","tabs","optiions","onAdd","tab","onSwitch","tabList","maxWidth","offsetSizeLeft","number","Tab","setName","ScaleAdapter","goto","Code","gridColor","Row","reCkHasAngle","hasAngelCell","Rows","minIf","getHeight","ei","rowHeight","getOrNew","Col","Cols","getWidth","colWidth","SCROLL_TYPE","H_LEFT","H_RIGHT","V_TOP","V_BOTTOM","UN","Scroll","XTableKeyboard","xTableKeyBoardDownHandle","keyCode","ColFixed","fxSci","fxEci","dropColFixed","moveOff","setSize","resize","stop","WIDTH","visualHeight","getIndexHeight","getIndexWidth","XReSizer","hoverEl","lineEl","colsDataProxy","getEventLeft","ceil","newLeft","visualWidth","xFixedMeasure","fixedWidth","indexWidth","RowFixed","fxSri","fxEri","dropRowFixed","HEIGHT","outer","YReSizer","rowsDataProxy","getEventTop","my","newTop","fixedHeight","indexHeight","XHeightLight","getLeft","YHeightLight","getTop","XTableFocus","xTableFocusDownHandle","findByNode","alike","findByChild","VIEW_MODE","CHANGE_ADD","CHANGE_NOT","STATIC","BOUND_OUT","XTableScrollView","lastView","within","XTableAreaView","xTableScrollView","Throttle","time","handle","clearTimeout","XTableEdit","throttle","xHeightLight","yHeightLight","maxHeight","realLeft","editOffset","hideEdit","mouseDoubleClick","showEdit","getCellCssStyle","action","keepLastIndex","setText","Grid","Box","fillPath","Cells","xTableData","isNotEmptyObject","wrapAll","getItems","map","DateUtils","dateText","defaultVal","reg","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","milliseconds","getMilliseconds","oneChar","onePart","onePartReg","res","exec","formatPart","replaceVal","dataInfo","fmt","date","floor","S","resultYear","yearFormatPart","yearVal","substr","Val","parserToDate","lastIndex","lastIndexOf","isFraction","toExponential","dateFormat","RTSinKit","tilt","abs","sin","inverse","RTCosKit","cos","nearby","ANGLE_ORIGIN","TOP_LEFT","TOP_CENTER","TOP_RIGHT","MIDDLE_LEFT","MIDDLE_CENTER","MIDDLE_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","Angle","DrawResult","rightSdist","leftSdist","AngleBoxDraw","overflow","lineHeight","textAlign","textBaseline","hasBreak","textWrapDraw","overflowDraw","truncateDraw","textWidth","line","verticalAlignPadding","getVerticalAlignPadding","alignPadding","getAlignPadding","overflowRuler","overflowText","overflowTextWidth","trigonometricWidth","trigonometricHeight","limitHeight","rtx","rty","outboundsHeight","outboundsWidth","dwAngle","drawingLine","revert","textHaveWidth","textWrapRuler","textArray","textWrapTextArray","maxLen","textWrapMaxLen","textArrayLen","textHeight","totalWidth","bx","by","jj","rx","ry","ax","ay","textWrapText","textWrapTextWidth","AngleBarDraw","trigonometricTilt","trigonometricTiltWidth","pointOffset","haveWidth","HorizonDraw","truncateRuler","truncateText","truncateTextWidth","diff","hOffset","textWrapHOffset","textLen","ti","VerticalDraw","truncateTextArray","truncateMaxLen","wOffset","textWrapWOffset","BaseRuler","USED","DEFAULT_INI","PlainRuler","AngleBoxRuler","notWidth","notHeight","used","textHypotenuseWidth","breakArray","textBreak","breakLen","bi","start","ii","AngleBarRuler","HorizonRuler","displayFont","lOffset","temp","over","VerticalRuler","char","DrawFontBuilder","TextBuilder","builder","setPadding","setDirection","buildRuler","buildFont","setRuler","Text","BaseCellsHelper","xTableAreaView","getXTableAreaView","getMerges","getCols","getCells","getXIteratorBuilder","blank","rightWidth","leftWidth","tmp","getRows","half","styleTable","getStyleTable","getHorizontalMaxWidth","getAngleBarMaxWidth","getAngleBarWrapWidth","getAngleMaxWidth","STYLE_BREAK_LOOP","StyleCellsHelper","reverseRows","reverseCols","startX","startY","newRow","newCol","cellsINCallback","mergeCallback","loopINCallback","mergeInfo","minSri","minSci","maxSri","maxSci","TEXT_BREAK_LOOP","TextCellsHelper","cellsINInfo","getCellOverFlow","XTableHistoryAreaView","lastScrollView","enterView","scrollEnterView","leaveView","getLastScrollView","coincideDifference","getEnterView","OperateCellsHelper","XFixedMeasure","CellIcon","xIcon","xIcons","getIcon","getOffset","FixedCellIcon","StaticCellIcon","XLineIteratorFilter","logic","stack","RETURN_TYPE","EXEC","FILTER_LOGIC","AND","run","JUMP","OR","XLineIteratorLoop","foldOnOff","runNewRow","runNewCol","runFilter","runEndCol","runEndRow","runComplete","endRow","endCol","jump","XLineIteratorItem","BBorderHide","MergeBNullEdge","RBorderHide","MergeRNullEdge","CellOutRange","RCellOutRange","master","getCellContentBoundOutWidth","masterBlank","nextBlank","setNext","AngleBarHide","LineGrid","bLine","rLine","bRow","breakpoint","rCols","getBItem","getRItem","XLineOptimizeJoin","ck1","equal","ck2","ck3","nextRow","BBorderShow","BBorderPriority","priority","TBorderShow","TBorderPriority","MergeTNullEdge","RBorderShow","RBorderPriority","LBorderPriority","LBorderShow","MergeLNullEdge","LCellOutRange","LAngleBarHide","RAngleBarHide","TAngleBarHide","BAngleBarHide","LineBorder","optimize","lLine","tLine","osx","oex","optimizeJoin","hbJoin","tRow","htJoin","concat","vrJoin","lCols","vlJoin","getTItem","getLItem","AngleBarShow","AngleBarInRow","AngleBar","LineIndex","LAngleBarOut","AngleBarLOut","RAngleBarOut","AngleBarROut","XLinePlainGenerator","model","MODEL","BORDER","aLine","bResult","getResult","aResult","gLine","gResult","INDEX","iLine","iResult","GRID","OUT_ANGLE_BAR_L","alLine","alResult","OUT_ANGLE_BAR_R","arLine","arResult","XMergesIndex","point","setMergeId","getMergeId","XMergesNo","XMergesNoRow","nos","XMergesItems","recovery","XMergesNoCol","XMergesRange","XMerges","xMergesNoRow","xMergesNoCol","xMergesIndex","xMergesItems","valueOf","notify","getView","getNo","clear","XTableDataItem","mergeId","XTableDataItems","canWrapAll","isString","riLen","ciLen","Path","Point","RENDER_MODE","SCALE","XTableFrozenFullRect","indexGrid","renderMode","getRenderMode","XTableFixedBar","buttonColor","rpxHeight","rpxWidth","drawBar","drawButton","XTableUI","drawX","drawY","mapOriginX","mapOriginY","mapTargetX","mapTargetY","mapWidth","mapHeight","fullScrollView","borderView","borderX","borderY","viewMode","getViewMode","getX","getY","getLeaveView","getLineView","getFullScrollView","settings","dx","getDrawX","dy","getDrawY","getMapWidth","getMapHeight","ox","getMapOriginX","oy","getMapOriginY","getMapTargetX","getMapTargetY","copyImage","XTableContentUI","staticCellIcon","loadImage","drawIcon","styleCellsHelper","getCellByViewRange","staticRect","cellRect","drawStaticXIcon","drawCellXIcon","fixedRect","drawFixedXIcon","textCellsHelper","textFont","lView","allowTextAlign","allowTextWrap","allowDirection","getBuilder","setDraw","setRect","setRow","setCol","setOverFlow","drawingFont","rView","getCellStyleBoundOutWidth","getSdistWidth","tl","tr","setPath","getLineX","getLineY","grid","optimizeEnable","showGrid","drawMap","drawClear","drawBackground","drawBoundOutBackground","drawXFont","drawBoundOutXFont","drawGridBorder","drawBoundOutGridBorder","drawXIcon","XTableIndexUI","drawColor","drawFont","XTableLeftIndexUI","getBackground","getSize","getColor","eachHeight","ch","XTableTopIndexUI","eachWidth","cw","XTableFrozenLeftIndex","XTableFrozenContent","XTableFrozenTopIndex","XTableLeftIndex","xTop","getScrollEnterView","XTableLeft","XTableTopIndex","xLeft","XTableTop","XTableContent","XTableStyle","lBorderFilter","rBorderFilter","tBorderFilter","bBorderFilter","getGridColor","xLeftFrozenIndex","xTopFrozenIndex","xTableFrozenContent","xLeftIndex","xTopIndex","xContent","xTableFrozenFullRect","xTableFixedBar","xFixedBar","boundOutWidth","fullRect","enable","hasDouble","record","rowObject","setReCkHasAngle","setHasAngelCell","lessZero","moreZero","isDisplay","XScreenZone","XScreenBRZone","XScreenLTZone","XScreenLZone","XScreenTZone","DISPLAY_AREA","XScreen","displayArea","ltZone","tZone","brZone","lZone","setZone","setXScreen","getFixedHeight","getFixedWidth","brTop","brLeft","AutoFillTypeMenuItem","AutoFillTypeMenu","FILL_TYPE","SERIALIZE","FILLING","menu","AutoFillType","autoFillTypeMenu","CopyMerge","onCopy","copyEndRow","copyStartRow","copyEndCol","copyStartCol","ori","pasteStartRow","pasteEndRow","tri","oci","pasteStartCol","pasteEndCol","tci","nextCopyCol","nextCopyRow","CopyCellIN","Serialize","getStartIndex","onSerialize","SERIALIZE_DIRECTION","serializeLeft","serializeTop","serializeRight","serializeBottom","CellMergeCopyHelper","getTableDataSnapshot","executeCopy","newMerge","hasFold","executeSerialize","XAutoFillItem","mergeForceSplit","onBeforeAutoFill","onAfterAutoFill","moveDirection","autoFillRange","autoFillType","serialize","rangeHandle","autoFill","setRange","hasFull","originSRi","originSCi","minRi","maxRi","minCi","nextCol","maxCi","unionRange","serializeContent","splitMerge","fillMerge","fillCellIN","copyCellINContent","getIncludes","DropRowFixed","DropColFixed","XFixedView","fxLeft","fxTop","DataProxy","TableCellDataProxy","snapshot","on","setCellOrNew","oldCell","$setCell","CellDataRecord","MERGE_RECORD_TYPE","ADD","DELETE","MergeDataRecord","recordType","TableMergeDataProxy","$deleteMerge","$addMerge","TableColsDataProxy","newWidth","oldWidth","$setWidth","ColsDataRecord","TableRowsDataProxy","newHeight","oldHeight","$setHeight","RowsDataRecord","TableDataSnapshot","backLayerStack","recordLayer","goLayerStack","layer","backNotice","goNotice","endNotice","Clipboard","paste","XIconFocus","XIconBuilder","fx","fy","staticIcons","fixedIcons","clearFocus","eventHandle","setFocus","BaseIterator","finishCallback","loopCallback","nextCallback","fold","RowsIterator","skipCallback","useFold","onOff","ColsIterator","XIteratorBuilder","getInstance","RowHeightGroupIndex","group","groupIndex","setSkip","limit","Dimensions","KeyBoardTabCode","keyboard","edit","$tabNext","tabNext","cLen","rLen","srcMerges","targetMerges","XTableDimensions","visualHeightCache","visualWidthCache","srcTransformCssPx","xReSizer","yReSizer","rowFixed","colFixed","clipboard","rowHeightGroupIndex","initS","initV","ifv","getV","setFinish","fontSize","info","mri","mci","staticIconArray","fixedIconArray","fixedIcon","staticIcon","xIconsEvent","pointerEvent","colsReduceIf","x1","scrolling","rowsReduceIf","y1","setFixedView","Sheet","tableConfig","WorkBody","workConfig","tabSheet","sheetViewLayer","scrollBarYLayer","scrollBarXLayer","scrollBarXVerticalCenter","scrollBarXHorizontalLayer","sheetSwitchTabLayer","horizontalLayer1","horizontalLayer2","horizontalLayer1Layer","horizontalLayer2Layer","layerVerticalLayer","scrollBarY","scrollY","scrollBarX","scrollX","tabView","addTabSheet","setActiveTab","createSheet","exploreInfo","getExplorerInfo","scrollBarLocal","scrollBarSize","getActiveTable","deltaY","scrollMove","dis","dprUpdate","totalHeight","getScrollTotalHeight","getScrollTotalWidth","getContentWidth","getContentHeight","setActiveIndex","setActiveSheet","getData","Download","BottomMenu","workBottom","sum","avg","fullScreen","setSum","setAvg","setNumber","computer","isFull","WorkBottom","bottomMenu","Work","topLayer","bodyLayer","bottomLayer","verticalLayer","XSheet","selectors","querySelector"],"mappings":"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","file":"XSheet.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = __webpack_public_path__ + \"c4ab8001e109540f7ae6a34181d695d3.png\";","module.exports = __webpack_public_path__ + \"42b436e7c64603182355d52d31ea49f1.png\";","module.exports = __webpack_public_path__ + \"9dfd8685ea7e1e5c025514eec46a4547.png\";","module.exports = __webpack_public_path__ + \"51859b5219dccb48ef2a5659717d0a1b.svg\";","//download.js v4.2, by dandavis; 2008-2016. [CCBY2] see http://danml.com/download.html for tests/usage\r\n// v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\r\n// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs\r\n// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.\r\n// v4 adds AMD/UMD, commonJS, and plain browser support\r\n// v4.1 adds url download capability via solo URL argument (same domain/CORS only)\r\n// v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors\r\n// https://github.com/rndme/download\r\n\r\n(function (root, factory) {\r\n  if (typeof define === 'function' && define.amd) {\r\n    // AMD. Register as an anonymous module.\r\n    define([], factory);\r\n  } else if (typeof exports === 'object') {\r\n    // Node. Does not work with strict CommonJS, but\r\n    // only CommonJS-like environments that support module.exports,\r\n    // like Node.\r\n    module.exports = factory();\r\n  } else {\r\n    // Browser globals (root is window)\r\n    root.download = factory();\r\n  }\r\n}(this, function () {\r\n\r\n  return function download(data, strFileName, strMimeType) {\r\n\r\n    var self = window, // this script is only for browsers anyway...\r\n      defaultMime = \"application/octet-stream\", // this default mime also triggers iframe downloads\r\n      mimeType = strMimeType || defaultMime,\r\n      payload = data,\r\n      url = !strFileName && !strMimeType && payload,\r\n      anchor = document.createElement(\"a\"),\r\n      toString = function(a){return String(a);},\r\n      myBlob = (self.Blob || self.MozBlob || self.WebKitBlob || toString),\r\n      fileName = strFileName || \"download\",\r\n      blob,\r\n      reader;\r\n    myBlob= myBlob.call ? myBlob.bind(self) : Blob ;\r\n\r\n    if(String(this)===\"true\"){ //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\r\n      payload=[payload, mimeType];\r\n      mimeType=payload[0];\r\n      payload=payload[1];\r\n    }\r\n\r\n\r\n    if(url && url.length< 2048){ // if no filename and no mime, assume a url was passed as the only argument\r\n      fileName = url.split(\"/\").pop().split(\"?\")[0];\r\n      anchor.href = url; // assign href prop to temp anchor\r\n      if(anchor.href.indexOf(url) !== -1){ // if the browser determines that it's a potentially valid url path:\r\n        var ajax=new XMLHttpRequest();\r\n        ajax.open( \"GET\", url, true);\r\n        ajax.responseType = 'blob';\r\n        ajax.onload= function(e){\r\n          download(e.target.response, fileName, defaultMime);\r\n        };\r\n        setTimeout(function(){ ajax.send();}, 0); // allows setting custom ajax headers using the return:\r\n        return ajax;\r\n      } // end if valid url?\r\n    } // end if url?\r\n\r\n\r\n    //go ahead and download dataURLs right away\r\n    if(/^data\\:[\\w+\\-]+\\/[\\w+\\-]+[,;]/.test(payload)){\r\n\r\n      if(payload.length > (1024*1024*1.999) && myBlob !== toString ){\r\n        payload=dataUrlToBlob(payload);\r\n        mimeType=payload.type || defaultMime;\r\n      }else{\r\n        return navigator.msSaveBlob ?  // IE10 can't do a[download], only Blobs:\r\n          navigator.msSaveBlob(dataUrlToBlob(payload), fileName) :\r\n          saver(payload) ; // everyone else can save dataURLs un-processed\r\n      }\r\n\r\n    }//end if dataURL passed?\r\n\r\n    blob = payload instanceof myBlob ?\r\n      payload :\r\n      new myBlob([payload], {type: mimeType}) ;\r\n\r\n\r\n    function dataUrlToBlob(strUrl) {\r\n      var parts= strUrl.split(/[:;,]/),\r\n        type= parts[1],\r\n        decoder= parts[2] == \"base64\" ? atob : decodeURIComponent,\r\n        binData= decoder( parts.pop() ),\r\n        mx= binData.length,\r\n        i= 0,\r\n        uiArr= new Uint8Array(mx);\r\n\r\n      for(i;i<mx;++i) uiArr[i]= binData.charCodeAt(i);\r\n\r\n      return new myBlob([uiArr], {type: type});\r\n    }\r\n\r\n    function saver(url, winMode){\r\n\r\n      if ('download' in anchor) { //html5 A[download]\r\n        anchor.href = url;\r\n        anchor.setAttribute(\"download\", fileName);\r\n        anchor.className = \"download-js-link\";\r\n        anchor.innerHTML = \"downloading...\";\r\n        anchor.style.display = \"none\";\r\n        document.body.appendChild(anchor);\r\n        setTimeout(function() {\r\n          anchor.click();\r\n          document.body.removeChild(anchor);\r\n          if(winMode===true){setTimeout(function(){ self.URL.revokeObjectURL(anchor.href);}, 250 );}\r\n        }, 66);\r\n        return true;\r\n      }\r\n\r\n      // handle non-a[download] safari as best we can:\r\n      if(/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\r\n        url=url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\r\n        if(!window.open(url)){ // popup blocked, offer direct download:\r\n          if(confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")){ location.href=url; }\r\n        }\r\n        return true;\r\n      }\r\n\r\n      //do iframe dataURL download (old ch+FF):\r\n      var f = document.createElement(\"iframe\");\r\n      document.body.appendChild(f);\r\n\r\n      if(!winMode){ // force a mime that will download:\r\n        url=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\r\n      }\r\n      f.src=url;\r\n      setTimeout(function(){ document.body.removeChild(f); }, 333);\r\n\r\n    }//end saver\r\n\r\n\r\n\r\n\r\n    if (navigator.msSaveBlob) { // IE10+ : (has Blob, but not a[download] or URL)\r\n      return navigator.msSaveBlob(blob, fileName);\r\n    }\r\n\r\n    if(self.URL){ // simple fast and modern way using Blob and URL:\r\n      saver(self.URL.createObjectURL(blob), true);\r\n    }else{\r\n      // handle non-Blob()+non-URL browsers:\r\n      if(typeof blob === \"string\" || blob.constructor===toString ){\r\n        try{\r\n          return saver( \"data:\" +  mimeType   + \";base64,\"  +  self.btoa(blob)  );\r\n        }catch(y){\r\n          return saver( \"data:\" +  mimeType   + \",\" + encodeURIComponent(blob)  );\r\n        }\r\n      }\r\n\r\n      // Blob but not URL support:\r\n      reader=new FileReader();\r\n      reader.onload=function(e){\r\n        saver(this.result);\r\n      };\r\n      reader.readAsDataURL(blob);\r\n    }\r\n    return true;\r\n  }; /* end download() */\r\n}));\r\n","const Constant = {};\r\nconst cssPrefix = 'x-sheet';\r\nconst XSheetVersion = `${cssPrefix} 1.0.0-develop`;\r\nConstant.WORK_BODY_EVENT_TYPE = {\r\n  CHANGE_ACTIVE: 'changeactive',\r\n};\r\nConstant.SYSTEM_EVENT_TYPE = {\r\n  MOUSE_MOVE: 'mousemove',\r\n  MOUSE_DOWN: 'mousedown',\r\n  SCROLL: 'scroll',\r\n  RESIZE: 'resize',\r\n  MOUSE_UP: 'mouseup',\r\n  KEY_UP: 'keyup',\r\n  INPUT: 'input',\r\n  KEY_DOWN: 'keydown',\r\n  MOUSE_OVER: 'mouseover',\r\n  MOUSE_LEAVE: 'mouseleave',\r\n  MOUSE_WHEEL: 'wheel',\r\n  MOUSE_ENTER: 'mouseenter',\r\n  CLICK: 'click',\r\n  DRAG_START: 'dragstart',\r\n  CHANGE: 'change',\r\n  VISIBILITY_CHANGE: 'visibilitychange',\r\n};\r\nConstant.TABLE_EVENT_TYPE = {\r\n  CHANGE_HEIGHT: 'changeheight',\r\n  SELECT_OVER: 'selectover',\r\n  SCALE_CHANGE: 'scalechange',\r\n  FIXED_CHANGE: 'fixedchange',\r\n  FIXED_ROW_CHANGE: 'fixedrowchange',\r\n  SELECT_DOWN: 'selectdown',\r\n  SELECT_CHANGE: 'selectchange',\r\n  DATA_CHANGE: 'datachange',\r\n  CHANGE_WIDTH: 'changewidth',\r\n  RESIZE_CHANGE: 'resizechange',\r\n  RENDER: 'render',\r\n};\r\nConstant.FORM_EVENT_TYPE = {\r\n  SEARCH_INPUT_CHANGE: 'searchinputchange',\r\n  PLAIN_INPUT_CHANGE: 'plaininputchange',\r\n  FORM_SELECT_CHANGE: 'formselectchange',\r\n};\r\nexport {\r\n  XSheetVersion,\r\n  cssPrefix,\r\n  Constant,\r\n};\r\n","/* global navigator document window */\r\n\r\nfunction S4() {\r\n  // eslint-disable-next-line no-bitwise\r\n  return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n}\r\n\r\nconst alphabets = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\nconst DATA_TYPE = {\r\n  String: 1,\r\n  Boolean: 2,\r\n  Number: 3,\r\n  Object: 4,\r\n  Array: 5,\r\n  Function: 6,\r\n  Null: 7,\r\n  Undefined: 8,\r\n  Promise: 9,\r\n  GeneratorFunction: 10,\r\n  AsyncFunction: 11,\r\n  BigInt: 12,\r\n  Symbol: 13,\r\n  Un: 14,\r\n};\r\n\r\nclass PlainUtils {\r\n\r\n  static isWindows() {\r\n    return /windows|win32/i.test(navigator.userAgent);\r\n  }\r\n\r\n  static isMac() {\r\n    return /macintosh|mac os x/i.test(navigator.userAgent);\r\n  }\r\n\r\n  static isNotEmptyObject(object) {\r\n    return !PlainUtils.isEmptyObject(object);\r\n  }\r\n\r\n  static isEmptyObject(object) {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const key in object) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (object.hasOwnProperty(key)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  static isUnDef(e) {\r\n    return e === undefined || e === null;\r\n  }\r\n\r\n  static isNotUnDef(e) {\r\n    return !this.isUnDef(e);\r\n  }\r\n\r\n  static isNumber(e) {\r\n    return /^(-?\\d+.\\d+)$|^(-?\\d+)$/.test(e);\r\n  }\r\n\r\n  static isFraction(e) {\r\n    return /^\\d+\\/\\d+$/.test(e);\r\n  }\r\n\r\n  static isFunction(e) {\r\n    const type = PlainUtils.type(e);\r\n    return type === DATA_TYPE.Function;\r\n  }\r\n\r\n  static isArray(e) {\r\n    return PlainUtils.type(e) === DATA_TYPE.Array;\r\n  }\r\n\r\n  static isBlank(s) {\r\n    if (PlainUtils.isUnDef(s)) {\r\n      return true;\r\n    }\r\n    return s.toString().trim() === '';\r\n  }\r\n\r\n  static isPlainObject(obj) {\r\n    if (PlainUtils.isUnDef(obj)) {\r\n      return false;\r\n    }\r\n    return Object.getPrototypeOf(obj) === Object.getPrototypeOf({});\r\n  }\r\n\r\n  static isString(obj) {\r\n    return PlainUtils.type(obj) === DATA_TYPE.String;\r\n  }\r\n\r\n  static isChildType(obj, parent) {\r\n    return obj instanceof parent;\r\n  }\r\n\r\n  static mergeDeep(object = {}, ...sources) {\r\n    if (PlainUtils.isUnDef(object)) {\r\n      return {};\r\n    }\r\n    if (PlainUtils.isUnDef(sources) || sources.length === 0) {\r\n      return object;\r\n    }\r\n    sources.forEach((source) => {\r\n      if (PlainUtils.isUnDef(source)) return;\r\n      Object.keys(source).forEach((key) => {\r\n        const v = source[key];\r\n        if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean') {\r\n          object[key] = v;\r\n        } else if (typeof v !== 'function' && !Array.isArray(v) && PlainUtils.isPlainObject(v)) {\r\n          object[key] = object[key] || {};\r\n          PlainUtils.mergeDeep(object[key], v);\r\n        } else {\r\n          object[key] = v;\r\n        }\r\n      });\r\n    });\r\n    return object;\r\n  }\r\n\r\n  static toLowCase(str) {\r\n    return str.toLowerCase();\r\n  }\r\n\r\n  static type(arg) {\r\n    const type = Object.prototype.toString.call(arg);\r\n    switch (type) {\r\n      case '[object Null]':\r\n        return DATA_TYPE.Null;\r\n      case '[object Undefined]':\r\n        return DATA_TYPE.Undefined;\r\n      case '[object String]':\r\n        return DATA_TYPE.String;\r\n      case '[object Boolean]':\r\n        return DATA_TYPE.Boolean;\r\n      case '[object Number]':\r\n        return DATA_TYPE.Number;\r\n      case '[object Function]':\r\n        return DATA_TYPE.Function;\r\n      case '[object Array]':\r\n        return DATA_TYPE.Array;\r\n      case '[object Promise]':\r\n        return DATA_TYPE.Promise;\r\n      case '[object GeneratorFunction]':\r\n        return DATA_TYPE.GeneratorFunction;\r\n      case '[object AsyncFunction]':\r\n        return DATA_TYPE.AsyncFunction;\r\n      case '[object BigInt]':\r\n        return DATA_TYPE.BigInt;\r\n      case '[object Symbol]':\r\n        return DATA_TYPE.Symbol;\r\n      default:\r\n        return DATA_TYPE.Un;\r\n    }\r\n  }\r\n\r\n  static cloneDeep(object) {\r\n    const json = JSON.stringify(object);\r\n    return JSON.parse(json);\r\n  }\r\n\r\n  static copyProp(t, s) {\r\n    return Object.assign(t, s);\r\n  }\r\n\r\n  static sum(objOrAry, cb = value => value) {\r\n    let total = 0;\r\n    let size = 0;\r\n    Object.keys(objOrAry).forEach((key) => {\r\n      total += cb(objOrAry[key], key);\r\n      size += 1;\r\n    });\r\n    return [total, size];\r\n  }\r\n\r\n  static parseFloat(val) {\r\n    if (PlainUtils.isNumber(val)) return parseFloat(val);\r\n    return 0;\r\n  }\r\n\r\n  static parseInt(val) {\r\n    if (PlainUtils.isNumber(val)) return parseInt(val, 10);\r\n    return 0;\r\n  }\r\n\r\n  static stringAt(index) {\r\n    let str = '';\r\n    let idx = index;\r\n    while (idx >= alphabets.length) {\r\n      idx /= alphabets.length;\r\n      idx -= 1;\r\n      str += alphabets[parseInt(idx, 10) % alphabets.length];\r\n    }\r\n    const last = index % alphabets.length;\r\n    str += alphabets[last];\r\n    return str;\r\n  }\r\n\r\n  static indexAt(str) {\r\n    let ret = 0;\r\n    for (let i = 0; i < str.length - 1; i += 1) {\r\n      const idx = str.charCodeAt(i) - 65;\r\n      const expoNet = str.length - 1 - i;\r\n      ret += (alphabets.length ** expoNet) + (alphabets.length * idx);\r\n    }\r\n    ret += str.charCodeAt(str.length - 1) - 65;\r\n    return ret;\r\n  }\r\n\r\n  static expr2xy(src) {\r\n    let x = '';\r\n    let y = '';\r\n    for (let i = 0; i < src.length; i += 1) {\r\n      if (src.charAt(i) >= '0' && src.charAt(i) <= '9') {\r\n        y += src.charAt(i);\r\n      } else {\r\n        x += src.charAt(i);\r\n      }\r\n    }\r\n    return [PlainUtils.indexAt(x), parseInt(y, 10) - 1];\r\n  }\r\n\r\n  static xy2expr(x, y) {\r\n    return `${PlainUtils.stringAt(x)}${y + 1}`;\r\n  }\r\n\r\n  static expr2expr(src, xn, yn) {\r\n    const [x, y] = PlainUtils.expr2xy(src);\r\n    return PlainUtils.xy2expr(x + xn, y + yn);\r\n  }\r\n\r\n  static minIf(v, min) {\r\n    if (v < min) return min;\r\n    return v;\r\n  }\r\n\r\n  static keepLastIndex(obj) {\r\n    if (window.getSelection) {\r\n      obj.focus();\r\n      const range = window.getSelection();\r\n      range.selectAllChildren(obj);\r\n      range.collapseToEnd();\r\n    } else if (document.selection) {\r\n      const range = document.selection.createRange();\r\n      range.moveToElementText(obj);\r\n      range.collapse(false);\r\n      range.select();\r\n    }\r\n  }\r\n\r\n  static trim(s) {\r\n    if (this.isBlank(s)) return '';\r\n    return s.trim();\r\n  }\r\n\r\n  static now() {\r\n    return Date.now().toString();\r\n  }\r\n\r\n  static viewPort() {\r\n    return {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    };\r\n  }\r\n\r\n  static exitFullscreen() {\r\n    if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.msExitFullscreen) {\r\n      document.msExitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    }\r\n  }\r\n\r\n  static fullScreen(element) {\r\n    if (element.el) {\r\n      element = element.el;\r\n    }\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen();\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen();\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen();\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen();\r\n    }\r\n  }\r\n\r\n  static isFull() {\r\n    return !!(document.webkitIsFullScreen || document.mozFullScreen\r\n      || document.msFullscreenElement || document.fullscreenElement);\r\n  }\r\n\r\n  static uuid() {\r\n    return (`${S4() + S4()}${S4()}${S4()}${S4()}${S4()}${S4()}${S4()}`);\r\n  }\r\n\r\n  static getExplorerInfo() {\r\n    const explorer = window.navigator.userAgent.toLowerCase();\r\n    // firefox\r\n    if (explorer.indexOf('firefox') >= 0) {\r\n      const ver = explorer.match(/firefox\\/([\\d.]+)/)[1];\r\n      return { type: 'Firefox', version: ver };\r\n    }\r\n    // Chrome\r\n    if (explorer.indexOf('chrome') >= 0) {\r\n      const ver = explorer.match(/chrome\\/([\\d.]+)/)[1];\r\n      return { type: 'Chrome', version: ver };\r\n    }\r\n    // Opera\r\n    if (explorer.indexOf('opera') >= 0) {\r\n      const ver = explorer.match(/opera.([\\d.]+)/)[1];\r\n      return { type: 'Opera', version: ver };\r\n    }\r\n    // Safari\r\n    if (explorer.indexOf('Safari') >= 0) {\r\n      const ver = explorer.match(/version\\/([\\d.]+)/)[1];\r\n      return { type: 'Safari', version: ver };\r\n    }\r\n    // ie\r\n    if (explorer.indexOf('msie') >= 0) {\r\n      const ver = explorer.match(/msie ([\\d.]+)/)[1];\r\n      return { type: 'IE', version: ver };\r\n    }\r\n    // undefined\r\n    return undefined;\r\n  }\r\n\r\n}\r\nPlainUtils.EMPTY = '';\r\nPlainUtils.Nul = null;\r\nPlainUtils.Undef = undefined;\r\nPlainUtils.noop = () => {};\r\n\r\nexport {\r\n  PlainUtils,\r\n};\r\n","/* global document CustomEvent window */\r\nimport { PlainUtils } from '../utils/PlainUtils';\r\n\r\n/**\r\n * Element\r\n */\r\nclass Element {\r\n\r\n  /**\r\n   * 包装元素\r\n   */\r\n  static wrap(args) {\r\n    if (PlainUtils.isArray(args)) {\r\n      const elements = [];\r\n      args.forEach((item) => {\r\n        if (item instanceof Element) {\r\n          elements.push(item);\r\n        } else {\r\n          elements.push(new Element(item));\r\n        }\r\n      });\r\n      return elements;\r\n    }\r\n    return new Element(args);\r\n  }\r\n\r\n  /**\r\n   * Element\r\n   * @param tag\r\n   * @param className\r\n   */\r\n  constructor(tag, className = '') {\r\n    if (typeof tag === 'string') {\r\n      this.el = document.createElement(tag);\r\n      this.el.className = className;\r\n    } else {\r\n      this.el = tag;\r\n    }\r\n    this.el.data = [];\r\n  }\r\n\r\n  /**\r\n   * 空参数时返回子节点, 有参数时插入子节点\r\n   * @param args\r\n   * @returns {Element|NodeListOf<ChildNode>|ActiveX.IXMLDOMNodeList}\r\n   */\r\n  children(...args) {\r\n    if (arguments.length === 0) {\r\n      return Element.wrap(this.el.childNodes);\r\n    }\r\n    args.forEach(ele => this.append(ele));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 在当前元素中插入指定节点\r\n   * @param ele\r\n   */\r\n  append(ele) {\r\n    this.el.appendChild(ele.el);\r\n  }\r\n\r\n  /**\r\n   * 删除Class名称\r\n   * @param name\r\n   * @returns {Element}\r\n   */\r\n  removeClass(name) {\r\n    this.el.classList.remove(name);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 添加Class名称\r\n   * @param name\r\n   * @returns {Element}\r\n   */\r\n  addClass(name) {\r\n    this.el.classList.add(name);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 是否具有指定Class名称\r\n   * @param name\r\n   * @returns {boolean}\r\n   */\r\n  hasClass(name) {\r\n    return this.el.classList.contains(name);\r\n  }\r\n\r\n  /**\r\n   * 数据绑定\r\n   * @param key\r\n   * @param value\r\n   * @returns {Element|*}\r\n   */\r\n  data(key, value) {\r\n    if (value !== undefined) {\r\n      this.el.data[key] = value;\r\n      return this;\r\n    }\r\n    return this.el.data[key];\r\n  }\r\n\r\n  /**\r\n   * 元素定位\r\n   * @param value\r\n   * @returns {{top: *, left: *, width: *, height: *}|Element}\r\n   */\r\n  offset(value) {\r\n    if (value !== undefined) {\r\n      Object.keys(value).forEach((k) => {\r\n        this.css(k, `${value[k]}px`);\r\n      });\r\n      return this;\r\n    }\r\n    const {\r\n      offsetTop, offsetLeft, offsetHeight, offsetWidth,\r\n    } = this.el;\r\n    return {\r\n      top: offsetTop,\r\n      left: offsetLeft,\r\n      height: offsetHeight,\r\n      width: offsetWidth,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 获取当前元素的父节点\r\n   * @returns {Element}\r\n   */\r\n  parent() {\r\n    return Element.wrap(this.el.parentNode)\r\n  }\r\n\r\n  /**\r\n   * 获取元素坐标信息\r\n   * getBoundingClientRect\r\n   * @returns {DOMRect}\r\n   */\r\n  box() {\r\n    return this.el.getBoundingClientRect();\r\n  }\r\n\r\n  /**\r\n   * 获取当前第一个子元素\r\n   * @returns {*}\r\n   */\r\n  first() {\r\n    return Element.wrap(this.el.firstChild);\r\n  }\r\n\r\n  /**\r\n   * 获取最后一个子元素\r\n   * @returns {*}\r\n   */\r\n  last() {\r\n    return Element.wrap(this.el.lastChild);\r\n  }\r\n\r\n  /**\r\n   * 删除当前元素下的子元素\r\n   * @param ele\r\n   * @returns {boolean|ActiveX.IXMLDOMNode|*}\r\n   */\r\n  remove(ele) {\r\n    this.el.removeChild(ele.el || ele);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 当前元素是否包含指定节点\r\n   * @param ele\r\n   * @returns {boolean|*}\r\n   */\r\n  contains(ele) {\r\n    return this.el.contains(ele.el);\r\n  }\r\n\r\n  /**\r\n   * 获取当前元素的上一个元素\r\n   * @returns {*}\r\n   */\r\n  prev() {\r\n    return Element.wrap(this.el.previousSibling);\r\n  }\r\n\r\n  /**\r\n   * 获取当前元素的下一个元素\r\n   * @returns {*}\r\n   */\r\n  next() {\r\n    return Element.wrap(this.el.nextSibling);\r\n  }\r\n\r\n  /**\r\n   * 设置元素的激活状态\r\n   * @param flag\r\n   * @param cls\r\n   * @returns {Element}\r\n   */\r\n  active(flag = true, cls = 'active') {\r\n    if (flag) this.addClass(cls);\r\n    else this.removeClass(cls);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 设置元素文本\r\n   * @param text\r\n   * @returns {string|Element}\r\n   */\r\n  text(text) {\r\n    if (text !== undefined) {\r\n      this.el.innerText = text;\r\n      return this;\r\n    }\r\n    return this.el.innerText;\r\n  }\r\n\r\n  /**\r\n   * 设置元素html内容\r\n   * @param html\r\n   * @returns {Element|*}\r\n   */\r\n  html(html) {\r\n    if (html !== undefined) {\r\n      this.el.innerHTML = html;\r\n      return this;\r\n    }\r\n    return this.el.innerHTML;\r\n  }\r\n\r\n  /**\r\n   * 当前元素设置焦点\r\n   */\r\n  focus() {\r\n    this.el.focus();\r\n  }\r\n\r\n  /**\r\n   * 删除元素属性\r\n   * @param key\r\n   * @returns {Element}\r\n   */\r\n  removeAttr(key) {\r\n    this.el.removeAttribute(key);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 添加元素属性\r\n   * @param key\r\n   * @param value\r\n   * @returns {string|Element}\r\n   */\r\n  attr(key, value) {\r\n    if (value !== undefined) {\r\n      this.el.setAttribute(key, value);\r\n    } else {\r\n      if (typeof key === 'string') {\r\n        return this.el.getAttribute(key);\r\n      }\r\n      Object.keys(key).forEach((k) => {\r\n        this.el.setAttribute(k, key[k]);\r\n      });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 设置元素Value\r\n   * @param v\r\n   * @returns {Element|*}\r\n   */\r\n  val(v) {\r\n    if (v !== undefined) {\r\n      this.el.value = v;\r\n      return this;\r\n    }\r\n    return this.el.value;\r\n  }\r\n\r\n  /**\r\n   * 删除元素style属性\r\n   * @param keys\r\n   * @returns {Element}\r\n   */\r\n  cssRemoveKeys(...keys) {\r\n    keys.forEach(k => this.el.style.removeProperty(k));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 设置元素属性\r\n   * @param name\r\n   * @param value\r\n   * @returns {Element|*}\r\n   */\r\n  css(name, value) {\r\n    if (value === undefined && typeof name !== 'string') {\r\n      Object.keys(name).forEach((k) => {\r\n        this.el.style[k] = name[k];\r\n      });\r\n      return this;\r\n    }\r\n    if (value !== undefined) {\r\n      this.el.style[name] = value;\r\n      return this;\r\n    }\r\n    return this.el.style[name];\r\n  }\r\n\r\n  /**\r\n   * 获取元素计算完成的样式\r\n   * @returns {CSSStyleDeclaration}\r\n   */\r\n  computedStyle() {\r\n    return window.getComputedStyle(this.el, null);\r\n  }\r\n\r\n  /**\r\n   * 显示\r\n   * @returns {Element}\r\n   */\r\n  show() {\r\n    const style = this.computedStyle();\r\n    if (style && style.display !== 'block') {\r\n      this.css('display', 'block');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 隐藏\r\n   * @returns {Element}\r\n   */\r\n  hide() {\r\n    const style = this.computedStyle();\r\n    if (style && style.display !== 'none') {\r\n      this.css('display', 'none');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 事件触发\r\n   * @param type\r\n   * @param message\r\n   */\r\n  trigger(type, message) {\r\n    const event = new CustomEvent(type, {\r\n      detail: message,\r\n      bubbles: true,\r\n      cancelable: false,\r\n    });\r\n    this.el.dispatchEvent(event);\r\n  }\r\n\r\n  /**\r\n   * 查找子元素\r\n   * @param select\r\n   * @returns {[]|Element}\r\n   */\r\n  find(select) {\r\n    const result = this.el.querySelectorAll(select);\r\n    if (result && result.length === 1) {\r\n      return new Element(result[0]);\r\n    }\r\n    const eleArray = [];\r\n    if (result) {\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      for (const item of result) {\r\n        eleArray.push(new Element(item));\r\n      }\r\n    }\r\n    return eleArray;\r\n  }\r\n\r\n  /**\r\n   * 获取当前元素的兄弟节点\r\n   * @returns {[]}\r\n   */\r\n  sibling() {\r\n    let sibling = this.el;\r\n    const result = [];\r\n    // eslint-disable-next-line no-cond-assign\r\n    while ((sibling = sibling.previousElementSibling) !== null) result.push(new Element(sibling));\r\n    sibling = this.el;\r\n    // eslint-disable-next-line no-cond-assign\r\n    while ((sibling = sibling.nextElementSibling) !== null) result.push(new Element(sibling));\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * 比较dom是否相同\r\n   * @param ele\r\n   * @returns {boolean}\r\n   */\r\n  is(ele) {\r\n    return this.el === ele.el;\r\n  }\r\n\r\n  /**\r\n   * 在当前元素之后插入新元素\r\n   * @param ele\r\n   */\r\n  after(ele) {\r\n    this.el.after(ele.el);\r\n  }\r\n\r\n  /**\r\n   * 在当前元素之前插入新元素\r\n   * @param ele\r\n   */\r\n  before(ele) {\r\n    this.el.before(ele.el);\r\n  }\r\n\r\n  /**\r\n   * 清空元素中的所有内容\r\n   */\r\n  empty() {\r\n    this.html('');\r\n  }\r\n\r\n}\r\n\r\nconst h = (tag, className = '') => new Element(tag, className);\r\n\r\nexport {\r\n  Element,\r\n  h,\r\n};\r\n","import { Constant } from '../const/Constant';\r\nimport { Element } from './Element';\r\n\r\nclass BindPool {\r\n\r\n  constructor() {\r\n    this.pool = [];\r\n  }\r\n\r\n  unbind(ele, type, callback, option) {\r\n    if (ele instanceof Element) {\r\n      ele = ele.el;\r\n    }\r\n    const result = this.remove(ele, type, callback, option);\r\n    if (result.length) {\r\n      result.forEach((item) => {\r\n        ele.removeEventListener(item.type, item.callback, item.option);\r\n      });\r\n    } else {\r\n      ele.removeEventListener(type, callback, option);\r\n    }\r\n  }\r\n\r\n  bind(ele, type, callback, option) {\r\n    if (ele instanceof Element) {\r\n      ele = ele.el;\r\n    }\r\n    this.pool.push({\r\n      ele, type, callback, option,\r\n    });\r\n    ele.addEventListener(type, callback, option);\r\n  }\r\n\r\n  remove(ele, type = '*', callback = null, option = null) {\r\n    const pool = [];\r\n    const rem = [];\r\n    this.pool.forEach((item) => {\r\n      const eqElem = ele === item.ele;\r\n      const eqOpt = option === null || option === item.option;\r\n      const eqType = type === '*' || type === item.type;\r\n      const eqCall = callback === null || callback === item.callback;\r\n      if (eqElem && eqType && eqCall && eqOpt) {\r\n        rem.push(item);\r\n      } else {\r\n        pool.push(item);\r\n      }\r\n    });\r\n    this.pool = pool;\r\n    return rem;\r\n  }\r\n\r\n  multipleUnbind(eles, type, callback, option) {\r\n    eles.forEach((item) => {\r\n      this.unbind(item, type, callback, option);\r\n    });\r\n  }\r\n\r\n  multipleBind(eles, type, callback, option) {\r\n    eles.forEach((item) => {\r\n      this.bind(item, type, callback, option);\r\n    });\r\n  }\r\n\r\n}\r\nconst pool = new BindPool();\r\n\r\nclass XEvent {\r\n\r\n  static unbind(target, name, fn, option = false) {\r\n    if (Array.isArray(target)) {\r\n      pool.multipleUnbind(target, name, fn, option);\r\n    } else {\r\n      pool.unbind(target, name, fn, option);\r\n    }\r\n  }\r\n\r\n  static bind(target, name, fn, option = false) {\r\n    if (Array.isArray(target)) {\r\n      pool.multipleBind(target, name, fn, option);\r\n    } else {\r\n      pool.bind(target, name, fn, option);\r\n    }\r\n  }\r\n\r\n  static mouseDoubleClick(target, doubleFunc = () => {}) {\r\n    let last = 0;\r\n    let x = 0;\r\n    let y = 0;\r\n    XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (evt) => {\r\n      const current = Date.now();\r\n      const { pageX, pageY } = evt;\r\n      const diff = current - last <= 300\r\n      if (diff && pageX === x && pageY === y) {\r\n        doubleFunc(evt);\r\n        last = 0;\r\n        x = 0;\r\n        y = 0;\r\n      } else {\r\n        x = pageX;\r\n        y = pageY;\r\n        last = current;\r\n      }\r\n    });\r\n  }\r\n\r\n  static mouseMoveUp(target, moveFunc = () => {}, upFunc = () => {}) {\r\n    const xEvtMove = (evt) => {\r\n      moveFunc(evt);\r\n      evt.stopPropagation();\r\n    };\r\n    const xEvtUp = (evt) => {\r\n      XEvent.unbind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, xEvtMove, true);\r\n      XEvent.unbind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp, true);\r\n      upFunc(evt);\r\n      evt.stopPropagation();\r\n    };\r\n    XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, xEvtMove, true);\r\n    XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp, true);\r\n  }\r\n\r\n}\r\nwindow.XEventPool = pool;\r\n\r\nexport {\r\n  XEvent\r\n};\r\n","import { Element, h } from './Element';\r\nimport { cssPrefix } from '../const/Constant';\r\nimport { XEvent } from './XEvent';\r\n\r\n/**\r\n * Life\r\n */\r\nclass Life extends Element {\r\n\r\n  onAttach() { }\r\n\r\n}\r\n\r\n/**\r\n * Widget\r\n */\r\nclass Widget extends Life {\r\n\r\n  /**\r\n   * Widget\r\n   * @param className\r\n   * @param nodeType\r\n   */\r\n  constructor(className = '', nodeType = \"div\") {\r\n    if (typeof className === 'string') {\r\n      super(nodeType, `${cssPrefix}-widget ${className}`);\r\n    } else {\r\n      super(className);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 计算鼠标在当前\r\n   * 元素中的位置\r\n   * @param event\r\n   * @param ele\r\n   * @returns {{x: number, y: number}}\r\n   */\r\n  eventXy(event, ele = this) {\r\n    const { top, left } = ele.box();\r\n    return {\r\n      x: event.pageX - left,\r\n      y: event.pageY - top,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 追加节点\r\n   * 触发onAttach事件\r\n   * @param widget\r\n   */\r\n  attach(widget) {\r\n    this.children(widget);\r\n    widget.onAttach(this);\r\n  }\r\n\r\n  /**\r\n   * 查找最邻近\r\n   * 的class元素\r\n   * @param clazz\r\n   */\r\n  closestClass(clazz) {\r\n    let node = this;\r\n    while (!h(document.body).is(node)) {\r\n      if (node.hasClass(clazz)) {\r\n        return node;\r\n      }\r\n      node = node.parent();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    XEvent.unbind(this);\r\n  }\r\n\r\n}\r\n\r\nconst w = (className = '', nodeType = \"div\") => new Widget(className, nodeType);\r\n\r\nexport {\r\n  Widget,\r\n  w\r\n};\r\n","import { Widget } from './Widget';\r\nimport { cssPrefix } from '../const/Constant';\r\n\r\nclass Layer extends Widget {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-layer ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {Layer}\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { Layer } from '../Layer';\r\n\r\nclass VerticalLayer extends Layer {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-vertical-layer`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      style: {},\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { VerticalLayer };\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { Layer } from '../Layer';\r\n\r\nclass VerticalLayerElement extends Layer {\r\n  constructor(options) {\r\n    super(`${cssPrefix}-vertical-layer-element`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      style: {\r\n        flexGrow: '0',\r\n      },\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { VerticalLayerElement };\r\n","import { Widget } from '../../../libs/Widget';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { h } from '../../../libs/Element';\r\n\r\nclass Icon extends Widget {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-icon`);\r\n    this.iconNameEl = h('div', `${cssPrefix}-icon-img ${className}`);\r\n    this.children(this.iconNameEl);\r\n  }\r\n\r\n  setWidth(width) {\r\n    this.iconNameEl.css('width', `${width}px`);\r\n  }\r\n\r\n  setHeight(height) {\r\n    this.iconNameEl.css('height', `${height}px`);\r\n  }\r\n\r\n}\r\n\r\nexport { Icon };\r\n","import { Widget } from '../../../../libs/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass Item extends Widget {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-tools-item ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport { Item };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass Undo extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-undo`);\r\n    this.icon = new Icon('undo');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { Undo };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass Redo extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-redo`);\r\n    this.icon = new Icon('redo');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { Redo };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\n\r\nclass PaintFormat extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-point-format`);\r\n    this.icon = new Icon('point-format');\r\n    this.sheets = [];\r\n    this.children(this.icon);\r\n  }\r\n\r\n  addSheet(sheet) {\r\n    this.sheets.push(sheet);\r\n  }\r\n\r\n  removeSheet(sheet) {\r\n    for (let i = 0; i < this.sheets.length; i += 1) {\r\n      if (this.sheets[i] === sheet) {\r\n        this.sheets.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  includeSheet(sheet) {\r\n    for (let i = 0; i < this.sheets.length; i += 1) {\r\n      if (this.sheets[i] === sheet) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\nexport { PaintFormat };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\n\r\nclass ClearFormat extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-clear-format`);\r\n    this.icon = new Icon('clear-format');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { ClearFormat };\r\n","import { Item } from './Item';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\nimport { h } from '../../../../libs/Element';\r\nimport { Icon } from '../Icon';\r\n\r\nclass DropDownItem extends Item {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-tools-drop-down-item ${className}`);\r\n    this.drop = h('div', `${cssPrefix}-tools-drop-down-item-mark`);\r\n    this.title = h('div', `${cssPrefix}-tools-drop-down-item-title`);\r\n    this.drop.children(new Icon('arrow-down'));\r\n    this.children(this.title);\r\n    this.children(this.drop);\r\n  }\r\n\r\n  setTitle(text) {\r\n    this.title.text(text);\r\n  }\r\n\r\n  setIcon(icon) {\r\n    this.title.html('');\r\n    this.title.children(icon);\r\n  }\r\n\r\n  setWidth(px) {\r\n    this.title.css('width', `${px}px`);\r\n  }\r\n\r\n  setEllipsis() {\r\n    this.title.css('overflow', 'hidden');\r\n    this.title.css('text-overflow', 'ellipsis');\r\n    this.title.css('white-space', 'nowrap');\r\n  }\r\n\r\n  removeEllipsis() {\r\n    this.title.cssRemoveKeys('overflow');\r\n    this.title.cssRemoveKeys('text-overflow');\r\n    this.title.cssRemoveKeys('white-space');\r\n  }\r\n\r\n}\r\n\r\nexport { DropDownItem };\r\n","/* global window document */\r\nimport { Widget } from '../../libs/Widget';\r\nimport { Constant, cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { XEvent } from '../../libs/XEvent';\r\n\r\nlet root = PlainUtils.Nul;\r\nlet instances = [];\r\n\r\n/**\r\n * ElPopUp\r\n * @author jerry\r\n * @date 2020/10/19\r\n */\r\nclass ElPopUp extends Widget {\r\n\r\n  /**\r\n   * ElPopUp\r\n   * @param options\r\n   */\r\n  constructor(options) {\r\n    super(`${cssPrefix}-el-pop-up`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      el: PlainUtils.Nul,\r\n      autoWidth: false,\r\n      autoHeight: false,\r\n      position: ElPopUp.POPUP_POSTION.TB,\r\n    }, options);\r\n    this.direction = PlainUtils.Undef;\r\n    this.status = false;\r\n    this.location = 0;\r\n    this.spaces = 0;\r\n    this.elPopUpDownHandle = () => {\r\n      this.close();\r\n    };\r\n    instances.push(this);\r\n    this.bind();\r\n  }\r\n\r\n  /**\r\n   * 显示弹框\r\n   */\r\n  open() {\r\n    if (this.status === false && root) {\r\n      root.children(this);\r\n      this.status = true;\r\n    }\r\n    this.elPopUpPosition();\r\n    this.elPopUpAutosize();\r\n    this.elPopUpLocation();\r\n  }\r\n\r\n  /**\r\n   * 关闭弹框\r\n   */\r\n  close() {\r\n    if (this.status === true && root) {\r\n      root.remove(this);\r\n      this.status = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 卸载事件\r\n   */\r\n  unbind() {\r\n    XEvent.unbind(this);\r\n    XEvent.unbind(document, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, this.elPopUpDownHandle);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件\r\n   */\r\n  bind() {\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      e.stopPropagation();\r\n    });\r\n    XEvent.bind(document, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, this.elPopUpDownHandle);\r\n  }\r\n\r\n  /**\r\n   * 计算显示的大小\r\n   */\r\n  elPopUpAutosize() {\r\n    const { options, direction, spaces } = this;\r\n    const { autoWidth, autoHeight } = options;\r\n    if (autoWidth) {\r\n      this.css('width', 'initial');\r\n      this.css('overflow-x', 'initial');\r\n      const box = this.box();\r\n      const { width } = box;\r\n      switch (direction) {\r\n        case 'left':\r\n        case 'right':\r\n          if (width > spaces) {\r\n            this.css('overflow-x', 'auto');\r\n            this.css('width', `${spaces}px`);\r\n          }\r\n          break;\r\n      }\r\n    }\r\n    if (autoHeight) {\r\n      this.css('height', 'initial');\r\n      this.css('overflow-y', 'initial');\r\n      const box = this.box();\r\n      const { height } = box;\r\n      switch (direction) {\r\n        case 'top':\r\n        case 'bottom':\r\n          if (height > spaces) {\r\n            this.css('overflow-y', 'auto');\r\n            this.css('height', `${spaces}px`);\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 计算显示的位置\r\n   */\r\n  elPopUpPosition() {\r\n    const { options } = this;\r\n    const { position } = options;\r\n    const { el } = options;\r\n    const elBox = el.box();\r\n    const winWidth = window.innerWidth;\r\n    const winHeight = window.innerHeight;\r\n    this.direction = PlainUtils.Undef;\r\n    this.spaces = 0;\r\n    this.location = 0;\r\n    switch (position) {\r\n      case ElPopUp.POPUP_POSTION.LR: {\r\n        const width = elBox.width;\r\n        const elLeft = elBox.left;\r\n        const leftDiff = elLeft;\r\n        const rightDiff = winWidth - (elLeft + width);\r\n        if (leftDiff > rightDiff) {\r\n          this.direction = 'left';\r\n          this.spaces = leftDiff;\r\n          this.location = elLeft;\r\n        } else {\r\n          this.direction = 'right';\r\n          this.spaces = rightDiff;\r\n          this.location = elLeft + width;\r\n        }\r\n        break;\r\n      }\r\n      case ElPopUp.POPUP_POSTION.TB: {\r\n        const height = elBox.height;\r\n        const elTop = elBox.top;\r\n        const topDiff = elTop;\r\n        const bottomDIff = winHeight - (elTop + height);\r\n        if (topDiff > bottomDIff) {\r\n          this.direction = 'top';\r\n          this.spaces = topDiff;\r\n          this.location = elTop;\r\n        } else {\r\n          this.direction = 'bottom';\r\n          this.spaces = bottomDIff;\r\n          this.location = elTop + height;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置显示位置\r\n   */\r\n  elPopUpLocation() {\r\n    const { direction, location, options } = this;\r\n    const { el } = options;\r\n    const box = this.box();\r\n    const elBox = el.box();\r\n    const elLeft = elBox.left;\r\n    const elTop = elBox.top;\r\n    const { width, height } = box;\r\n    switch (direction) {\r\n      case 'left':\r\n        this.css('top', `${elTop}px`);\r\n        this.css('left', `${location - width}px`);\r\n        break;\r\n      case 'right':\r\n        this.css('top', `${elTop}px`);\r\n        this.css('left', `${location}px`);\r\n        break;\r\n      case 'top':\r\n        this.css('left', `${elLeft}px`);\r\n        this.css('top', `${location - height}px`);\r\n        break;\r\n      case 'bottom':\r\n        this.css('left', `${elLeft}px`);\r\n        this.css('top', `${location}px`);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置环绕元素\r\n   * @param el\r\n   */\r\n  setEL(el) {\r\n    this.options.el = el;\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n  /**\r\n   * 删除实例\r\n   * @param instance\r\n   */\r\n  static removeInstance(instance) {\r\n    const filter = [];\r\n    instances.forEach((item) => {\r\n      if (item !== instance) {\r\n        filter.push(item);\r\n      }\r\n    });\r\n    instances = filter;\r\n  }\r\n\r\n  /**\r\n   * 关闭所有实例\r\n   * @param filter\r\n   */\r\n  static closeAll(filter = []) {\r\n    instances.forEach((item) => {\r\n      if (filter.indexOf(item) === -1) {\r\n        item.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 设置根节点\r\n   * @param element\r\n   */\r\n  static setRoot(element) {\r\n    if (element.el) {\r\n      element = h(element.el);\r\n    } else {\r\n      element = h(element);\r\n    }\r\n    root = element;\r\n  }\r\n\r\n}\r\nElPopUp.POPUP_POSTION = {\r\n  TB: Symbol('上下位置'),\r\n  LR: Symbol('左右位置'),\r\n};\r\n\r\nexport {\r\n  ElPopUp,\r\n};\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { Widget } from '../../libs/Widget';\r\nimport { ElPopUp } from '../elpopup/ElPopUp';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\n\r\nclass ELContextMenu extends Widget {\r\n\r\n  constructor(className = '', options = {}) {\r\n    super(`${cssPrefix}-el-context-menu ${className}`);\r\n    this.options = PlainUtils.mergeDeep({}, options);\r\n    this.menus = [];\r\n    this.elPopUp = new ElPopUp(this.options);\r\n    this.elPopUp.children(this);\r\n  }\r\n\r\n  isClose() {\r\n    return this.elPopUp.status === false;\r\n  }\r\n\r\n  addItem(item) {\r\n    const { menus } = this;\r\n    menus.push(item);\r\n    this.children(item);\r\n    return this;\r\n  }\r\n\r\n  open() {\r\n    this.elPopUp.open();\r\n    return this;\r\n  }\r\n\r\n  close() {\r\n    this.elPopUp.close();\r\n    return this;\r\n  }\r\n\r\n  setEL(el) {\r\n    this.elPopUp.setEL(el);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.elPopUp.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { ELContextMenu };\r\n","import { Widget } from '../../libs/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\n\r\nclass ELContextMenuItem extends Widget {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-el-context-menu-item hover ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport { ELContextMenuItem };\r\n","import { h } from '../../../../../libs/Element';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { Icon } from '../../Icon';\r\n\r\nconst pool = [];\r\n\r\nclass FormatContextMenuItem extends ELContextMenuItem {\r\n  constructor(title, desc) {\r\n    super(`${cssPrefix}-format-context-menu-item`);\r\n    this.title = title;\r\n    this.desc = desc;\r\n    this.icon = new Icon('checked');\r\n    this.iconElement = h('div', `${cssPrefix}-format-context-menu-item-icon`);\r\n    this.iconElement.children(this.icon);\r\n    this.titleElement = h('div', `${cssPrefix}-format-context-menu-item-title`);\r\n    this.descElement = h('div', `${cssPrefix}-format-context-menu-item-desc`);\r\n    this.titleElement.text(title);\r\n    this.descElement.text(desc);\r\n    this.children(this.iconElement);\r\n    this.children(this.titleElement);\r\n    this.children(this.descElement);\r\n    pool.push(this);\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.titleElement.text(title);\r\n  }\r\n\r\n  setDesc(desc) {\r\n    this.descElement.text(desc);\r\n  }\r\n\r\n  setActive() {\r\n    pool.forEach((item) => {\r\n      item.removeClass('active');\r\n    });\r\n    this.addClass('active');\r\n  }\r\n}\r\n\r\nexport { FormatContextMenuItem };\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { Widget } from '../../libs/Widget';\r\n\r\nclass ELContextMenuDivider extends Widget {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-el-context-menu-item-divider`);\r\n  }\r\n\r\n}\r\n\r\nexport { ELContextMenuDivider };\r\n","import { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { FormatContextMenuItem } from './FormatContextMenuItem';\r\nimport { ELContextMenuDivider } from '../../../../../component/contextmenu/ELContextMenuDivider';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\n\r\nclass FormatContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-format-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new FormatContextMenuItem('常规', '').data('type', 'default'),\r\n      new FormatContextMenuItem('文本', '').data('type', 'text'),\r\n      new ELContextMenuDivider(),\r\n      new FormatContextMenuItem('数值', '0.59').data('type', 'number'),\r\n      new FormatContextMenuItem('百分比', '90.00%').data('type', 'percentage'),\r\n      new FormatContextMenuItem('分数', '1/2').data('type', 'fraction'),\r\n      new FormatContextMenuItem('科学计数', '9.50e-01').data('type', 'ENotation'),\r\n      new ELContextMenuDivider(),\r\n      new FormatContextMenuItem('人民币', '￥5.00').data('type', 'rmb'),\r\n      new FormatContextMenuItem('港币', 'HK5.00').data('type', 'hk'),\r\n      new FormatContextMenuItem('美元', '$5.00').data('type', 'dollar'),\r\n      new ELContextMenuDivider(),\r\n      new FormatContextMenuItem('日期', '2018/4/18').data('type', 'date1'),\r\n      new FormatContextMenuItem('日期', '4月18日').data('type', 'date2'),\r\n      new FormatContextMenuItem('日期', '2018年4月').data('type', 'date3'),\r\n      new FormatContextMenuItem('日期', '2018年4月18日').data('type', 'date4'),\r\n      new FormatContextMenuItem('日期', '2018/4/18 14:30:30').data('type', 'date5'),\r\n      new FormatContextMenuItem('时间', '14:30:30').data('type', 'time'),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      this.addItem(item);\r\n    });\r\n    this.init();\r\n    this.bind();\r\n  }\r\n\r\n  init() {\r\n    const { options, items } = this;\r\n    const { el } = options;\r\n    const first = items[0];\r\n    el.setTitle(first.title);\r\n    first.setActive();\r\n  }\r\n\r\n  update(format, title) {\r\n    const { options } = this;\r\n    options.onUpdate(format, title);\r\n    this.close();\r\n  }\r\n\r\n  unbind() {\r\n    this.items.forEach((item) => {\r\n      if (item instanceof FormatContextMenuItem && item.data('type')) {\r\n        XEvent.unbind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n      }\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    this.items.forEach((item) => {\r\n      if (item instanceof FormatContextMenuItem && item.data('type')) {\r\n        XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n          this.update(item.data('type'), item.title);\r\n          item.setActive();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  setActiveByType(type) {\r\n    this.items.forEach((item) => {\r\n      if (item.data('type') === type) {\r\n        item.setActive();\r\n      }\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { FormatContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { FormatContextMenu } from './contextmenu/format/FormatContextMenu';\r\n\r\nclass Format extends DropDownItem {\r\n\r\n  constructor(options = {\r\n    contextMenu: {},\r\n  }) {\r\n    super(`${cssPrefix}-tools-format`);\r\n    this.options = options;\r\n    this.setTitle('常规');\r\n    this.setWidth(50);\r\n    this.setEllipsis();\r\n    this.formatContextMenu = new FormatContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.formatContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { Format };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../libs/Element';\r\nimport { Icon } from '../../Icon';\r\n\r\nconst pool = [];\r\n\r\nclass FontContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(title) {\r\n    super(`${cssPrefix}-font-context-menu-item`);\r\n    this.title = title;\r\n    this.icon = new Icon('checked');\r\n    this.iconElement = h('div', `${cssPrefix}-font-context-menu-item-icon`);\r\n    this.iconElement.children(this.icon);\r\n    this.titleElement = h('div', `${cssPrefix}-font-context-menu-item-title`);\r\n    this.titleElement.text(title);\r\n    this.titleElement.css('font-family', title);\r\n    this.children(this.iconElement);\r\n    this.children(this.titleElement);\r\n    pool.push(this);\r\n  }\r\n\r\n  setActive() {\r\n    pool.forEach((item) => {\r\n      item.removeClass('active');\r\n    });\r\n    this.addClass('active');\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title;\r\n    this.titleElement.text(title);\r\n  }\r\n\r\n}\r\n\r\nexport { FontContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { FontContextMenuItem } from './FontContextMenuItem';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\n\r\nclass FontContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new FontContextMenuItem('Arial'),\r\n      new FontContextMenuItem('Helvetica'),\r\n      new FontContextMenuItem('Source Sans Pro'),\r\n      new FontContextMenuItem('Comic Sans Ms'),\r\n      new FontContextMenuItem('Courier New'),\r\n      new FontContextMenuItem('Verdana'),\r\n      new FontContextMenuItem('Lalo'),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      this.addItem(item);\r\n    });\r\n    this.setActiveByType(this.items[0].title);\r\n    this.bind();\r\n  }\r\n\r\n  update(type) {\r\n    const { options } = this;\r\n    options.onUpdate(type);\r\n    this.close();\r\n  }\r\n\r\n  unbind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.unbind(item);\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n        this.update(item.title);\r\n        item.setActive();\r\n      });\r\n    });\r\n  }\r\n\r\n  setActiveByType(type) {\r\n    this.items.forEach((item) => {\r\n      if (item.title === type) {\r\n        item.setActive();\r\n      }\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { FontContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { FontContextMenu } from './contextmenu/font/FontContextMenu';\r\n\r\nclass Font extends DropDownItem {\r\n\r\n  constructor(options = {\r\n    contextMenu: {},\r\n  }) {\r\n    super(`${cssPrefix}-tools-font`);\r\n    this.options = options;\r\n    this.setTitle('Arial');\r\n    this.setWidth(50);\r\n    this.setEllipsis();\r\n    this.fontContextMenu = new FontContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.fontContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { Font };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../libs/Element';\r\n\r\nclass FontSizeContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(size) {\r\n    super(`${cssPrefix}-font-size-context-menu-item`);\r\n    this.size = size;\r\n    this.titleElement = h('div', `${cssPrefix}-font-size-context-menu-item-title`);\r\n    this.titleElement.text(size);\r\n    this.titleElement.css('text-align', 'center');\r\n    this.children(this.titleElement);\r\n  }\r\n\r\n}\r\n\r\nexport { FontSizeContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { FontSizeContextMenuItem } from './FontSizeContextMenuItem';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\n\r\nclass FontSizeContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-size-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new FontSizeContextMenuItem(6),\r\n      new FontSizeContextMenuItem(7),\r\n      new FontSizeContextMenuItem(8),\r\n      new FontSizeContextMenuItem(9),\r\n      new FontSizeContextMenuItem(10),\r\n      new FontSizeContextMenuItem(11),\r\n      new FontSizeContextMenuItem(12),\r\n      new FontSizeContextMenuItem(14),\r\n      new FontSizeContextMenuItem(15),\r\n      new FontSizeContextMenuItem(18),\r\n      new FontSizeContextMenuItem(24),\r\n      new FontSizeContextMenuItem(36),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      this.addItem(item);\r\n    });\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.unbind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n        this.update(item.size);\r\n      });\r\n    });\r\n  }\r\n\r\n  update(size) {\r\n    const { options } = this;\r\n    options.onUpdate(size);\r\n    this.close();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { FontSizeContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { FontSizeContextMenu } from './contextmenu/fontsize/FontSizeContextMenu';\r\n\r\nclass FontSize extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-font-size`);\r\n    this.options = options;\r\n    this.setTitle('10');\r\n    this.setWidth(30);\r\n    this.setEllipsis();\r\n    this.fontSizeContextMenu = new FontSizeContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.fontSizeContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { FontSize };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass FontBold extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-bold`);\r\n    this.icon = new Icon('font-bold');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { FontBold };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass FontItalic extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-italic`);\r\n    this.icon = new Icon('font-italic');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { FontItalic };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass UnderLine extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-under-line`);\r\n    this.icon = new Icon('under-line');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { UnderLine };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\n\r\nclass FontStrike extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-strike`);\r\n    this.icon = new Icon('font-strike');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { FontStrike };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../libs/Element';\r\n\r\nclass FontColorContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(title, icon) {\r\n    super(`${cssPrefix}-font-color-context-menu-item`);\r\n    this.title = title;\r\n    this.icon = icon;\r\n    if (icon) {\r\n      this.iconElement = h('div', `${cssPrefix}-font-color-context-menu-item-icon`);\r\n      this.iconElement.children(this.icon);\r\n      this.children(this.iconElement);\r\n    }\r\n    if (title) {\r\n      this.titleElement = h('div', `${cssPrefix}-font-color-context-menu-item-title`);\r\n      this.titleElement.text(title);\r\n      this.children(this.titleElement);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { FontColorContextMenuItem };\r\n","/* global document */\r\nimport { Widget } from '../../libs/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { XEvent } from '../../libs/XEvent';\r\n\r\nimport { h } from '../../libs/Element';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\n\r\nlet root = PlainUtils.Undef;\r\nlet instances = [];\r\n\r\n/**\r\n * DragPanel\r\n * @author jerry\r\n * @date 2020/10/19\r\n */\r\nclass DragPanel extends Widget {\r\n\r\n  /**\r\n   * DragPanel\r\n   * @param options\r\n   */\r\n  constructor(options) {\r\n    super(`${cssPrefix}-drag-panel`);\r\n    instances.push(this);\r\n    this.options = PlainUtils.mergeDeep({\r\n      position: DragPanel.DRAG_PANEL_POSITION.CENTER,\r\n    }, options);\r\n    this.status = false;\r\n    this.mask = h('div', `${cssPrefix}-drag-panel-mask`);\r\n    this.content = h('div', `${cssPrefix}-drag-panel-content`);\r\n    super.children(this.content);\r\n    this.bind();\r\n  }\r\n\r\n  /**\r\n   * 显示弹框\r\n   */\r\n  open() {\r\n    if (this.status === false && root) {\r\n      const { mask } = this;\r\n      root.children(mask);\r\n      root.children(this);\r\n      this.dragPanelLocation();\r\n      this.status = true;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 关闭弹框\r\n   */\r\n  close() {\r\n    if (this.status === true && root) {\r\n      const { mask } = this;\r\n      root.remove(this);\r\n      root.remove(mask);\r\n      this.status = false;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 卸载事件\r\n   */\r\n  unbind() {\r\n    const { mask } = this;\r\n    XEvent.unbind(mask);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件\r\n   */\r\n  bind() {\r\n    const { mask } = this;\r\n    XEvent.bind(mask, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.close();\r\n      e.stopPropagation();\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (evt1) => {\r\n      if (evt1.button !== 0) return;\r\n      const downEventXy = this.eventXy(evt1, this);\r\n      XEvent.mouseMoveUp(h(document), (evt2) => {\r\n        // 计算移动的距离\r\n        const top = evt2.pageY - downEventXy.y;\r\n        const left = evt2.pageX - downEventXy.x;\r\n        this.offset({ top, left });\r\n        evt2.stopPropagation();\r\n      });\r\n      evt1.stopPropagation();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 设置显示位置\r\n   */\r\n  dragPanelLocation() {\r\n    const { options } = this;\r\n    const { position } = options;\r\n    const { width, height } = PlainUtils.viewPort();\r\n    const box = this.box();\r\n    switch (position) {\r\n      case DragPanel.DRAG_PANEL_POSITION.LEFT:\r\n        break;\r\n      case DragPanel.DRAG_PANEL_POSITION.RIGHT:\r\n        break;\r\n      case DragPanel.DRAG_PANEL_POSITION.TOP:\r\n        break;\r\n      case DragPanel.DRAG_PANEL_POSITION.CENTER:\r\n        this.offset({\r\n          left: width / 2 - box.width / 2,\r\n          top: height / 2 - box.height / 2,\r\n        });\r\n        break;\r\n      default: break;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 添加子元素\r\n   * @param args\r\n   * @returns {DragPanel}\r\n   */\r\n  children(...args) {\r\n    this.content.children(...args);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    DragPanel.removeInstance(this);\r\n  }\r\n\r\n  /**\r\n   * 删除实例\r\n   * @param instance\r\n   */\r\n  static removeInstance(instance) {\r\n    const filter = [];\r\n    instances.forEach((item) => {\r\n      if (item !== instance) {\r\n        filter.push(item);\r\n      }\r\n    });\r\n    instances = filter;\r\n  }\r\n\r\n  /**\r\n   * 关闭所有实例\r\n   * @param filter\r\n   */\r\n  static closeAll(filter = []) {\r\n    instances.forEach((item) => {\r\n      if (filter.indexOf(item) === -1) {\r\n        item.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 设置根节点\r\n   * @param element\r\n   */\r\n  static setRoot(element) {\r\n    if (element.el) {\r\n      element = h(element.el);\r\n    } else {\r\n      element = h(element);\r\n    }\r\n    root = element;\r\n  }\r\n\r\n}\r\nDragPanel.DRAG_PANEL_POSITION = {\r\n  LEFT: 1,\r\n  TOP: 2,\r\n  RIGHT: 3,\r\n  CENTER: 4,\r\n};\r\n\r\nexport { DragPanel };\r\n","/* global document */\r\nimport { h } from '../../libs/Element';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { Widget } from '../../libs/Widget';\r\nimport { DragPanel } from '../dragpanel/DragPanel';\r\nimport { XEvent } from '../../libs/XEvent';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\n\r\nclass ColorPicker extends Widget {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-color-picker`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      selectCb: () => {},\r\n    }, options);\r\n    // 拖拽组件\r\n    this.dragPanel = new DragPanel();\r\n    this.color = [360, 0, 100];\r\n    // 头部\r\n    this.preViewColorPoint = h('div', `${cssPrefix}-color-picker-pre-view-color-point`);\r\n    this.colorValueTips = h('div', `${cssPrefix}-color-picker-color-value-tips`);\r\n    this.colorValueTips.text('十六进制颜色值');\r\n    this.colorInput = h('input', `${cssPrefix}-color-picker-color-input`);\r\n    this.top = h('div', `${cssPrefix}-color-picker-top`);\r\n    this.top.children(this.preViewColorPoint);\r\n    this.top.children(this.colorValueTips);\r\n    this.top.children(this.colorInput);\r\n    // 中间部分\r\n    this.selectColorPoint = h('div', `${cssPrefix}-color-picker-select-color-point`);\r\n    this.selectColorArea1 = h('div', `${cssPrefix}-color-picker-select-color-area area1`);\r\n    this.selectColorArea2 = h('div', `${cssPrefix}-color-picker-select-color-area area2`);\r\n    this.selectColorArea3 = h('div', `${cssPrefix}-color-picker-select-color-area area3`);\r\n    this.center = h('div', `${cssPrefix}-color-picker-center`);\r\n    this.center.children(this.selectColorArea1);\r\n    this.center.children(this.selectColorArea2);\r\n    this.center.children(this.selectColorArea3);\r\n    this.center.children(this.selectColorPoint);\r\n    // 底部\r\n    this.colorHuxTips = h('div', `${cssPrefix}-color-picker-color-hux-tips`);\r\n    this.colorBar = h('div', `${cssPrefix}-color-picker-color-bar`);\r\n    this.colorBarPoint = h('div', `${cssPrefix}-color-picker-bar-point`);\r\n    this.bottom = h('div', `${cssPrefix}-color-picker-bottom`);\r\n    this.colorHuxTips.text('HUE');\r\n    this.colorBar.children(this.colorBarPoint);\r\n    this.bottom.children(this.colorHuxTips);\r\n    this.bottom.children(this.colorBar);\r\n    // 按钮\r\n    this.cancelButton = h('div', `${cssPrefix}-color-picker-button cancel`);\r\n    this.selectButton = h('div', `${cssPrefix}-color-picker-button select`);\r\n    this.buttons = h('div', `${cssPrefix}-color-picker-buttons`);\r\n    this.cancelButton.text('取消');\r\n    this.selectButton.text('确定');\r\n    this.buttons.children(this.selectButton);\r\n    this.buttons.children(this.cancelButton);\r\n    this.children(this.top);\r\n    this.children(this.center);\r\n    this.children(this.bottom);\r\n    this.children(this.buttons);\r\n    this.dragPanel.children(this);\r\n    this.dragPanel.css('background', '#ffffff');\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { selectColorPoint } = this;\r\n    const { colorBarPoint } = this;\r\n    const {\r\n      colorInput, cancelButton, selectButton,\r\n    } = this;\r\n    XEvent.unbind(colorInput);\r\n    XEvent.unbind(colorInput);\r\n    XEvent.unbind(colorBarPoint);\r\n    XEvent.unbind(selectColorPoint);\r\n    XEvent.unbind(cancelButton);\r\n    XEvent.unbind(selectButton);\r\n  }\r\n\r\n  bind() {\r\n    const { selectColorPoint, center } = this;\r\n    const { colorBarPoint, colorBar } = this;\r\n    const {\r\n      colorInput, cancelButton, selectButton,\r\n    } = this;\r\n    XEvent.bind(colorInput, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\r\n      e1.stopPropagation();\r\n    });\r\n    XEvent.bind(colorInput, Constant.SYSTEM_EVENT_TYPE.CHANGE, () => {\r\n      const value = colorInput.val();\r\n      if (value) {\r\n        this.hexColor(value);\r\n      }\r\n    });\r\n    XEvent.bind(colorBarPoint, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\r\n      const xy = this.eventXy(e1, colorBar);\r\n      const colorBarBox = colorBar.box();\r\n      if (xy.x < 0) xy.x = 0;\r\n      if (xy.x > colorBarBox.width) xy.x = colorBarBox.width;\r\n      this.downHue(xy.x, colorBarBox.width);\r\n      XEvent.mouseMoveUp(h(document), (e2) => {\r\n        const xy = this.eventXy(e2, colorBar);\r\n        const colorBarBox = colorBar.box();\r\n        if (xy.x < 0) xy.x = 0;\r\n        if (xy.x > colorBarBox.width) xy.x = colorBarBox.width;\r\n        this.moveHue(xy.x, colorBarBox.width);\r\n      });\r\n      e1.stopPropagation();\r\n    });\r\n    XEvent.bind(selectColorPoint, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\r\n      const xy = this.eventXy(e1, center);\r\n      const centerBox = center.box();\r\n      if (xy.x < 0) xy.x = 0;\r\n      if (xy.x > centerBox.width) xy.x = centerBox.width;\r\n      if (xy.y < 0) xy.y = 0;\r\n      if (xy.y > centerBox.height) xy.y = centerBox.height;\r\n      this.downSelect(xy.x, xy.y, centerBox.width, centerBox.height);\r\n      XEvent.mouseMoveUp(h(document), (e2) => {\r\n        const xy = this.eventXy(e2, center);\r\n        if (xy.x < 0) xy.x = 0;\r\n        if (xy.x > centerBox.width) xy.x = centerBox.width;\r\n        if (xy.y < 0) xy.y = 0;\r\n        if (xy.y > centerBox.height) xy.y = centerBox.height;\r\n        this.moveSelect(xy.x, xy.y, centerBox.width, centerBox.height);\r\n      });\r\n      e1.stopPropagation();\r\n    });\r\n    XEvent.bind(cancelButton, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.close();\r\n    });\r\n    XEvent.bind(selectButton, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      const { color } = this;\r\n      const hsb = ColorPicker.fixHsx({\r\n        h: parseInt(color[0], 10),\r\n        s: parseInt(color[1], 10),\r\n        x: parseInt(color[2], 10),\r\n      });\r\n      const colorValue = ColorPicker.hsbToHex(hsb);\r\n      this.options.selectCb(`#${colorValue}`);\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  open(hex) {\r\n    const { dragPanel } = this;\r\n    dragPanel.open();\r\n    if (hex) {\r\n      if (ColorPicker.isRgb(hex)) {\r\n        const rgb = ColorPicker.parseRgb(hex);\r\n        // eslint-disable-next-line no-param-reassign\r\n        hex = ColorPicker.rgbToHex(rgb);\r\n      }\r\n      this.hexColor(hex);\r\n    } else {\r\n      this.change();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  close() {\r\n    const { dragPanel } = this;\r\n    dragPanel.close();\r\n    return this;\r\n  }\r\n\r\n  sliderPosition(hsb) {\r\n    // hue 滑块位置\r\n    const { colorBar, colorBarPoint } = this;\r\n    const colorBarPointBox = colorBarPoint.box();\r\n    const colorBarBox = colorBar.box();\r\n    let colorBarPointLeft = parseInt(colorBarBox.width - colorBarBox.width * hsb.h / 360, 10);\r\n    colorBarPointLeft -= colorBarPointBox.width / 2;\r\n    colorBarPoint.offset({\r\n      left: colorBarPointLeft,\r\n    });\r\n    // select color 滑块位置\r\n    const { center, selectColorPoint } = this;\r\n    const selectColorPointBox = selectColorPoint.box();\r\n    const centerBox = center.box();\r\n    let selectColorPointLeft = parseInt(centerBox.width * hsb.s / 100, 10);\r\n    let selectColorPointTop = parseInt(centerBox.height * (100 - hsb.x) / 100, 10);\r\n    selectColorPointLeft -= selectColorPointBox.width / 2;\r\n    selectColorPointTop -= selectColorPointBox.height / 2;\r\n    selectColorPoint.offset({\r\n      left: selectColorPointLeft,\r\n      top: selectColorPointTop,\r\n    });\r\n  }\r\n\r\n  hueChange() {\r\n    const { color } = this;\r\n    const hsb = ColorPicker.fixHsx({\r\n      h: parseInt(color[0], 10),\r\n      s: parseInt(color[1], 10),\r\n      x: parseInt(color[2], 10),\r\n    });\r\n    const {\r\n      colorBarPoint, selectColorPoint, preViewColorPoint, selectColorArea1, colorInput,\r\n    } = this;\r\n    const colorValue = ColorPicker.hsbToHex(hsb);\r\n    const areaColorValue = ColorPicker.hsbToHex({ h: hsb.h, s: 100, x: 100 });\r\n    selectColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    preViewColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    colorBarPoint.css('backgroundColor', `#${areaColorValue}`);\r\n    selectColorArea1.css('backgroundColor', `#${areaColorValue}`);\r\n    colorInput.val(`#${colorValue}`);\r\n    this.sliderPosition(hsb);\r\n  }\r\n\r\n  selectChange() {\r\n    const { color } = this;\r\n    const hsb = ColorPicker.fixHsx({\r\n      h: parseInt(color[0], 10),\r\n      s: parseInt(color[1], 10),\r\n      x: parseInt(color[2], 10),\r\n    });\r\n    const {\r\n      preViewColorPoint, selectColorPoint, colorInput,\r\n    } = this;\r\n    const colorValue = ColorPicker.hsbToHex(hsb);\r\n    selectColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    preViewColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    colorInput.val(`#${colorValue}`);\r\n    this.sliderPosition(hsb);\r\n  }\r\n\r\n  change() {\r\n    this.hueChange();\r\n    this.selectChange();\r\n  }\r\n\r\n  downSelect(x, y, width, height) {\r\n    const { color } = this;\r\n    color[1] = parseInt(100 * x / width, 10);\r\n    color[2] = parseInt(100 * (height - y) / height, 10);\r\n    this.selectChange();\r\n  }\r\n\r\n  moveSelect(x, y, width, height) {\r\n    const { color } = this;\r\n    color[1] = parseInt(100 * (Math.max(0, Math.min(width, x))) / width, 10);\r\n    color[2] = parseInt(100 * (height - Math.max(0, Math.min(height, y))) / height, 10);\r\n    this.selectChange();\r\n  }\r\n\r\n  downHue(x, width) {\r\n    const { color } = this;\r\n    color[0] = parseInt(360 * (width - x) / width, 10);\r\n    this.hueChange();\r\n  }\r\n\r\n  moveHue(x, width) {\r\n    const { color } = this;\r\n    color[0] = parseInt(360 * (width - Math.max(0, Math.min(width, x))) / width, 10);\r\n    this.hueChange();\r\n  }\r\n\r\n  hexColor(hex) {\r\n    const { color } = this;\r\n    const result = ColorPicker.hexToHsb(ColorPicker.fixHex(hex));\r\n    color[0] = result.h;\r\n    color[1] = result.s;\r\n    color[2] = result.x;\r\n    this.change();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.dragPanel.destroy();\r\n  }\r\n\r\n  static fixHex(hex) {\r\n    const len = 6 - hex.length;\r\n    if (len > 0) {\r\n      const o = [];\r\n      for (let i = 0; i < len; i += 1) {\r\n        o.push('0');\r\n      }\r\n      o.push(hex);\r\n      // eslint-disable-next-line no-param-reassign\r\n      hex = o.join('');\r\n    }\r\n    return hex;\r\n  }\r\n\r\n  static fixHsx(hsx) {\r\n    return {\r\n      h: Math.min(360, Math.max(0, hsx.h)),\r\n      s: Math.min(100, Math.max(0, hsx.s)),\r\n      x: Math.min(100, Math.max(0, hsx.x)),\r\n    };\r\n  }\r\n\r\n  static hexToRgb(hex) {\r\n    // eslint-disable-next-line no-redeclare,no-param-reassign\r\n    hex = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\r\n    // eslint-disable-next-line no-bitwise\r\n    return { r: hex >> 16, g: (hex & 0x00FF00) >> 8, b: (hex & 0x0000FF) };\r\n  }\r\n\r\n  static hexToHsb(hex) {\r\n    return this.rgbToHsb(this.hexToRgb(hex));\r\n  }\r\n\r\n  static rgbToHsb(rgb) {\r\n    const hsb = { h: 0, s: 0, x: 0 };\r\n    const min = Math.min(rgb.r, rgb.g, rgb.b);\r\n    const max = Math.max(rgb.r, rgb.g, rgb.b);\r\n    const delta = max - min;\r\n    hsb.x = max;\r\n    hsb.s = max !== 0 ? 255 * delta / max : 0;\r\n    if (hsb.s !== 0) {\r\n      if (rgb.r === max) hsb.h = (rgb.g - rgb.b) / delta;\r\n      else if (rgb.g === max) hsb.h = 2 + (rgb.b - rgb.r) / delta;\r\n      else hsb.h = 4 + (rgb.r - rgb.g) / delta;\r\n    } else hsb.h = -1;\r\n    hsb.h *= 60;\r\n    if (hsb.h < 0) hsb.h += 360;\r\n    hsb.s *= 100 / 255;\r\n    hsb.x *= 100 / 255;\r\n    return hsb;\r\n  }\r\n\r\n  static hsbToRgb(hsb) {\r\n    const rgb = {};\r\n    let { h } = hsb;\r\n    const s = hsb.s * 255 / 100;\r\n    const v = hsb.x * 255 / 100;\r\n    if (s === 0) {\r\n      rgb.r = v;\r\n      rgb.g = v;\r\n      rgb.b = v;\r\n    } else {\r\n      const t1 = v;\r\n      const t2 = (255 - s) * v / 255;\r\n      const t3 = (t1 - t2) * (h % 60) / 60;\r\n      if (h === 360) h = 0;\r\n      if (h < 60) {\r\n        rgb.r = t1;\r\n        rgb.b = t2;\r\n        rgb.g = t2 + t3;\r\n      } else if (h < 120) {\r\n        rgb.g = t1;\r\n        rgb.b = t2;\r\n        rgb.r = t1 - t3;\r\n      } else if (h < 180) {\r\n        rgb.g = t1;\r\n        rgb.r = t2;\r\n        rgb.b = t2 + t3;\r\n      } else if (h < 240) {\r\n        rgb.b = t1;\r\n        rgb.r = t2;\r\n        rgb.g = t1 - t3;\r\n      } else if (h < 300) {\r\n        rgb.b = t1;\r\n        rgb.g = t2;\r\n        rgb.r = t2 + t3;\r\n      } else if (h < 360) {\r\n        rgb.r = t1;\r\n        rgb.g = t2;\r\n        rgb.b = t1 - t3;\r\n      } else {\r\n        rgb.r = 0;\r\n        rgb.g = 0;\r\n        rgb.b = 0;\r\n      }\r\n    }\r\n    return { r: Math.round(rgb.r), g: Math.round(rgb.g), b: Math.round(rgb.b) };\r\n  }\r\n\r\n  static rgbToHex(rgb) {\r\n    const hex = [\r\n      rgb.r.toString(16),\r\n      rgb.g.toString(16),\r\n      rgb.b.toString(16),\r\n    ];\r\n    hex.forEach((val, nr) => {\r\n      if (val.length === 1) {\r\n        hex[nr] = `0${val}`;\r\n      }\r\n    });\r\n    return hex.join('');\r\n  }\r\n\r\n  static hsbToHex(hsb) {\r\n    return this.rgbToHex(this.hsbToRgb(hsb));\r\n  }\r\n\r\n  static isRgb(rgb) {\r\n    return rgb.startsWith('rgb');\r\n  }\r\n\r\n  static isHex(hex) {\r\n    return hex.startsWith('#');\r\n  }\r\n\r\n  static parseRgb(rgb) {\r\n    const rxp = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/;\r\n    const result = rgb.match(rxp);\r\n    return {\r\n      r: result[1],\r\n      g: result[2],\r\n      b: result[3],\r\n    };\r\n  }\r\n\r\n  static isDark(rgb) {\r\n    if (PlainUtils.isBlank(rgb)) {\r\n      return false;\r\n    }\r\n    if (this.isHex(rgb)) {\r\n      const v = ColorPicker.hexToRgb(rgb);\r\n      rgb = `rgb(${v.r}, ${v.g}, ${v.b})`;\r\n    }\r\n    const result = ColorPicker.parseRgb(rgb);\r\n    const r = parseInt(result.r, 10);\r\n    const g = parseInt(result.g, 10);\r\n    const b = parseInt(result.b, 10);\r\n    return (r * 0.299) + (g * 0.578) + (b * 0.114) >= 192;\r\n  }\r\n\r\n}\r\n\r\nexport { ColorPicker };\r\n","import { Widget } from '../../../libs/Widget';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { Icon } from '../../../core/work/tools/Icon';\r\nimport { ColorPicker } from '../ColorPicker';\r\n\r\nclass ColorItem extends Widget {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-color-array-item`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      color: null,\r\n      icon: null,\r\n    }, options);\r\n    this.color = this.options.color;\r\n    this.icon = this.options.icon;\r\n    if (this.color) {\r\n      this.css('backgroundColor', this.color);\r\n      if (ColorPicker.isDark(this.options.color)) {\r\n        this.checkedIcon = new Icon('checked-dark');\r\n        this.children(this.checkedIcon);\r\n      } else {\r\n        this.checkedIcon = new Icon('checked-light');\r\n        this.children(this.checkedIcon);\r\n      }\r\n      this.checkedIcon.hide();\r\n    }\r\n    if (this.icon) {\r\n      this.children(this.options.icon);\r\n    }\r\n  }\r\n\r\n  setActive(active) {\r\n    if (this.checkedIcon) {\r\n      if (active) {\r\n        this.checkedIcon.show();\r\n      } else {\r\n        this.checkedIcon.hide();\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { ColorItem };\r\n","import { Widget } from '../../../libs/Widget';\r\nimport { cssPrefix, Constant } from '../../../const/Constant';\r\nimport { ColorItem } from './ColorItem';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XEvent } from '../../../libs/XEvent';\r\n\r\nclass ColorArray extends Widget {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-color-array`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      colors: [\r\n        new ColorItem({ color: 'rgb(0,0,0)' }),\r\n        new ColorItem({ color: 'rgb(67, 67, 67)' }),\r\n        new ColorItem({ color: 'rgb(102, 102, 102)' }),\r\n        new ColorItem({ color: 'rgb(153, 153, 153)' }),\r\n        new ColorItem({ color: 'rgb(183, 183, 183)' }),\r\n        new ColorItem({ color: 'rgb(204, 204, 204)' }),\r\n        new ColorItem({ color: 'rgb(217, 217, 217)' }),\r\n        new ColorItem({ color: 'rgb(239, 239, 239)' }),\r\n        new ColorItem({ color: 'rgb(255, 255, 255)' }),\r\n\r\n        new ColorItem({ color: 'rgb(152, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(255, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(255, 153, 0)' }),\r\n        new ColorItem({ color: 'rgb(255, 255, 0)' }),\r\n        new ColorItem({ color: 'rgb(0, 255, 0)' }),\r\n        new ColorItem({ color: 'rgb(0, 255, 255)' }),\r\n        new ColorItem({ color: 'rgb(74, 134, 232)' }),\r\n        new ColorItem({ color: 'rgb(0, 0, 255)' }),\r\n        new ColorItem({ color: 'rgb(153, 0, 255)' }),\r\n        new ColorItem({ color: 'rgb(255, 0, 255)' }),\r\n\r\n        new ColorItem({ color: 'rgb(230, 184, 175)' }),\r\n        new ColorItem({ color: 'rgb(244, 204, 204)' }),\r\n        new ColorItem({ color: 'rgb(252, 229, 205)' }),\r\n        new ColorItem({ color: 'rgb(255, 242, 204)' }),\r\n        new ColorItem({ color: 'rgb(217, 234, 211)' }),\r\n        new ColorItem({ color: 'rgb(208, 224, 227)' }),\r\n        new ColorItem({ color: 'rgb(201, 218, 248)' }),\r\n        new ColorItem({ color: 'rgb(207, 226, 243)' }),\r\n        new ColorItem({ color: 'rgb(217, 210, 233)' }),\r\n        new ColorItem({ color: 'rgb(234, 209, 220)' }),\r\n\r\n        new ColorItem({ color: 'rgb(221, 126, 107)' }),\r\n        new ColorItem({ color: 'rgb(234, 153, 153)' }),\r\n        new ColorItem({ color: 'rgb(249, 203, 156)' }),\r\n        new ColorItem({ color: 'rgb(255, 229, 153)' }),\r\n        new ColorItem({ color: 'rgb(182, 215, 168)' }),\r\n        new ColorItem({ color: 'rgb(162, 196, 201)' }),\r\n        new ColorItem({ color: 'rgb(164, 194, 244)' }),\r\n        new ColorItem({ color: 'rgb(159, 197, 232)' }),\r\n        new ColorItem({ color: 'rgb(180, 167, 214)' }),\r\n        new ColorItem({ color: 'rgb(213, 166, 189)' }),\r\n\r\n        new ColorItem({ color: 'rgb(204, 65, 37)' }),\r\n        new ColorItem({ color: 'rgb(224, 102, 102)' }),\r\n        new ColorItem({ color: 'rgb(246, 178, 107)' }),\r\n        new ColorItem({ color: 'rgb(255, 217, 102)' }),\r\n        new ColorItem({ color: 'rgb(147, 196, 125)' }),\r\n        new ColorItem({ color: 'rgb(118, 165, 175)' }),\r\n        new ColorItem({ color: 'rgb(109, 158, 235)' }),\r\n        new ColorItem({ color: 'rgb(111, 168, 220)' }),\r\n        new ColorItem({ color: 'rgb(142, 124, 195)' }),\r\n        new ColorItem({ color: 'rgb(194, 123, 160)' }),\r\n\r\n        new ColorItem({ color: 'rgb(166, 28, 0)' }),\r\n        new ColorItem({ color: 'rgb(204, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(230, 145, 56)' }),\r\n        new ColorItem({ color: 'rgb(241, 194, 50)' }),\r\n        new ColorItem({ color: 'rgb(106, 168, 79)' }),\r\n        new ColorItem({ color: 'rgb(69, 129, 142)' }),\r\n        new ColorItem({ color: 'rgb(60, 120, 216)' }),\r\n        new ColorItem({ color: 'rgb(61, 133, 198)' }),\r\n        new ColorItem({ color: 'rgb(103, 78, 167)' }),\r\n        new ColorItem({ color: 'rgb(166, 77, 121)' }),\r\n\r\n        new ColorItem({ color: 'rgb(133, 32, 12)' }),\r\n        new ColorItem({ color: 'rgb(153, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(180, 95, 6)' }),\r\n        new ColorItem({ color: 'rgb(191, 144, 0)' }),\r\n        new ColorItem({ color: 'rgb(56, 118, 29)' }),\r\n        new ColorItem({ color: 'rgb(19, 79, 92)' }),\r\n        new ColorItem({ color: 'rgb(17, 85, 204)' }),\r\n        new ColorItem({ color: 'rgb(11, 83, 148)' }),\r\n        new ColorItem({ color: 'rgb(53, 28, 117)' }),\r\n        new ColorItem({ color: 'rgb(116, 27, 71)' }),\r\n\r\n        new ColorItem({ color: 'rgb(91, 15, 0)' }),\r\n        new ColorItem({ color: 'rgb(102, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(120, 63, 4)' }),\r\n        new ColorItem({ color: 'rgb(127, 96, 0)' }),\r\n        new ColorItem({ color: 'rgb(39, 78, 19)' }),\r\n        new ColorItem({ color: 'rgb(12, 52, 61)' }),\r\n        new ColorItem({ color: 'rgb(28, 69, 135)' }),\r\n        new ColorItem({ color: 'rgb(7, 55, 99)' }),\r\n        new ColorItem({ color: 'rgb(32, 18, 77)' }),\r\n        new ColorItem({ color: 'rgb(76, 17, 48)' }),\r\n      ],\r\n      selectCb: () => {},\r\n    }, options);\r\n    this.colors = [];\r\n    this.activeColor = null;\r\n    this.options.colors.forEach((item) => {\r\n      this.add(item);\r\n    });\r\n    if (this.colors.length > 0) {\r\n      this.setActiveByColor(this.colors[0].options.color);\r\n    }\r\n  }\r\n\r\n  add(item) {\r\n    this.colors.push(item);\r\n    this.children(item);\r\n    this.bind(item);\r\n  }\r\n\r\n  unbind() {\r\n    this.colors.forEach((item) => {\r\n      XEvent.unbind(item);\r\n    });\r\n  }\r\n\r\n  bind(item) {\r\n    XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.selectCb(item);\r\n      if (item.options.color) {\r\n        this.setActiveByColor(item.options.color);\r\n      }\r\n    });\r\n  }\r\n\r\n  setActiveByColor(color) {\r\n    this.colors.forEach((item) => {\r\n      const { options } = item;\r\n      if (options.color === color) {\r\n        item.setActive(true);\r\n        this.activeColor = options.color;\r\n      } else {\r\n        item.setActive(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { ColorArray };\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { FontColorContextMenuItem } from './FontColorContextMenuItem';\r\nimport { ColorArray } from '../../../../../component/colorpicker/colorarray/ColorArray';\r\nimport { h } from '../../../../../libs/Element';\r\nimport { ColorItem } from '../../../../../component/colorpicker/colorarray/ColorItem';\r\nimport { ELContextMenuDivider } from '../../../../../component/contextmenu/ELContextMenuDivider';\r\nimport { Icon } from '../../Icon';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { ColorPicker } from '../../../../../component/colorpicker/ColorPicker';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\n\r\nclass FontColorContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-color-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.colorPicker = new ColorPicker({\r\n      selectCb: (color) => {\r\n        const item = new ColorItem({ color });\r\n        this.customizeColorArray.add(item);\r\n        this.customizeColorArray.setActiveByColor(color);\r\n        this.colorArray.setActiveByColor(null);\r\n        this.options.onUpdate(color);\r\n        this.close();\r\n      },\r\n    });\r\n    // 重置\r\n    this.reset = new FontColorContextMenuItem('重置', new Icon('clear-color'));\r\n    // 颜色筛选\r\n    this.array = new FontColorContextMenuItem();\r\n    this.array.removeClass('hover');\r\n    this.colorArray = new ColorArray({\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) this.options.onUpdate(color);\r\n        this.customizeColorArray.setActiveByColor(null);\r\n        this.close();\r\n      },\r\n    });\r\n    this.array.children(this.colorArray);\r\n    // 历史选中\r\n    this.title = h('div', `${cssPrefix}-font-color-context-menu-color-title`);\r\n    this.title.text('自定义');\r\n    this.plus = new Icon('plus');\r\n    this.customizeColorArray = new ColorArray({\r\n      colors: [\r\n        new ColorItem({ icon: this.plus }),\r\n      ],\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) {\r\n          this.options.onUpdate(color);\r\n          this.colorArray.setActiveByColor(null);\r\n          this.close();\r\n        } else {\r\n          this.colorPicker.open(this.customizeColorArray.activeColor);\r\n        }\r\n      },\r\n    });\r\n    this.customize = new FontColorContextMenuItem();\r\n    this.customize.removeClass('hover');\r\n    this.customize.children(this.title);\r\n    this.customize.children(this.customizeColorArray);\r\n    // 菜单元素追加子节点\r\n    this.addItem(this.reset);\r\n    this.addItem(this.array);\r\n    this.addItem(new ELContextMenuDivider());\r\n    this.addItem(this.customize);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.reset);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.reset, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdate('rgb(0,0,0)');\r\n      this.customizeColorArray.setActiveByColor(null);\r\n      this.colorArray.setActiveByColor(null);\r\n    });\r\n  }\r\n\r\n  setActiveByColor(color) {\r\n    this.customizeColorArray.setActiveByColor(color);\r\n    this.colorArray.setActiveByColor(color);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { FontColorContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { FontColorContextMenu } from './contextmenu/fontcolor/FontColorContextMenu';\r\n\r\nclass FontColor extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-font-color`);\r\n    this.options = options;\r\n    this.icon = new Icon('color');\r\n    this.setIcon(this.icon);\r\n    this.setColor('rgb(0,0,0)');\r\n    this.fontColorContextMenu = new FontColorContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n    this.fontColorContextMenu.setActiveByColor('rgb(0,0,0)');\r\n  }\r\n\r\n  setColor(color) {\r\n    this.icon.css('border-bottom', `3px solid ${color}`);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.fontColorContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { FontColor };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../libs/Element';\r\n\r\nclass FillColorContextMenuItem extends ELContextMenuItem {\r\n  constructor(title, icon) {\r\n    super(`${cssPrefix}-fill-color-context-menu-item`);\r\n    this.title = title;\r\n    this.icon = icon;\r\n    if (icon) {\r\n      this.iconElement = h('div', `${cssPrefix}-fill-color-context-menu-item-icon`);\r\n      this.iconElement.children(this.icon);\r\n      this.children(this.iconElement);\r\n    }\r\n    if (title) {\r\n      this.titleElement = h('div', `${cssPrefix}-fill-color-context-menu-item-title`);\r\n      this.titleElement.text(title);\r\n      this.children(this.titleElement);\r\n    }\r\n  }\r\n}\r\n\r\nexport { FillColorContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { ColorArray } from '../../../../../component/colorpicker/colorarray/ColorArray';\r\nimport { h } from '../../../../../libs/Element';\r\nimport { ColorItem } from '../../../../../component/colorpicker/colorarray/ColorItem';\r\nimport { ELContextMenuDivider } from '../../../../../component/contextmenu/ELContextMenuDivider';\r\nimport { Icon } from '../../Icon';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nimport { FillColorContextMenuItem } from './FillColorContextMenuItem';\r\nimport { ColorPicker } from '../../../../../component/colorpicker/ColorPicker';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\n\r\nclass FillColorContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-color-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.colorPicker = new ColorPicker({\r\n      selectCb: (color) => {\r\n        const item = new ColorItem({ color });\r\n        this.customizeColorArray.add(item);\r\n        this.customizeColorArray.setActiveByColor(color);\r\n        this.colorArray.setActiveByColor(null);\r\n        this.options.onUpdate(color);\r\n        this.close();\r\n      },\r\n    });\r\n    // 重置\r\n    this.reset = new FillColorContextMenuItem('重置', new Icon('clear-color'));\r\n    // 颜色筛选\r\n    this.array = new FillColorContextMenuItem();\r\n    this.array.removeClass('hover');\r\n    this.colorArray = new ColorArray({\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) this.options.onUpdate(color);\r\n        this.customizeColorArray.setActiveByColor(null);\r\n        this.close();\r\n      },\r\n    });\r\n    this.array.children(this.colorArray);\r\n    // 历史选中\r\n    this.title = h('div', `${cssPrefix}-font-color-context-menu-color-title`);\r\n    this.title.text('自定义');\r\n    this.plus = new Icon('plus');\r\n    this.customizeColorArray = new ColorArray({\r\n      colors: [\r\n        new ColorItem({ icon: this.plus }),\r\n      ],\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) {\r\n          this.options.onUpdate(color);\r\n          this.colorArray.setActiveByColor(null);\r\n          this.close();\r\n        } else {\r\n          this.colorPicker.open(this.customizeColorArray.activeColor);\r\n        }\r\n      },\r\n    });\r\n    this.customize = new FillColorContextMenuItem();\r\n    this.customize.removeClass('hover');\r\n    this.customize.children(this.title);\r\n    this.customize.children(this.customizeColorArray);\r\n    // 菜单元素追加子节点\r\n    this.addItem(this.reset);\r\n    this.addItem(this.array);\r\n    this.addItem(new ELContextMenuDivider());\r\n    this.addItem(this.customize);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.bind(this.reset);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.reset, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdate(null);\r\n      this.customizeColorArray.setActiveByColor(null);\r\n      this.colorArray.setActiveByColor(null);\r\n    });\r\n  }\r\n\r\n  setActiveByColor(color) {\r\n    this.customizeColorArray.setActiveByColor(color);\r\n    this.colorArray.setActiveByColor(color);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { FillColorContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { FillColorContextMenu } from './contextmenu/fillcolor/FillColorContextMenu';\r\n\r\nclass FillColor extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-fill-color`);\r\n    this.options = options;\r\n    this.icon = new Icon('fill-color');\r\n    this.setIcon(this.icon);\r\n    this.setColor('rgb(255, 255, 255)');\r\n    this.fillColorContextMenu = new FillColorContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n    this.fillColorContextMenu.setActiveByColor('rgb(255, 255, 255)');\r\n  }\r\n\r\n  setColor(color) {\r\n    this.icon.css('border-bottom', `3px solid ${color}`);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.fillColorContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { FillColor };\r\n","import { ELContextMenuItem } from '../../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\n\r\nclass BorderTypeContextMenuItem extends ELContextMenuItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-border-type-context-menu-item`);\r\n  }\r\n}\r\n\r\nexport { BorderTypeContextMenuItem };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon1 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border1`);\r\n    this.icon = new Icon('border1');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon1 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon2 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border2`);\r\n    this.icon = new Icon('border2');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon2 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon3 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border3`);\r\n    this.icon = new Icon('border3');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon3 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon4 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border4`);\r\n    this.icon = new Icon('border4');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon4 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon5 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border5`);\r\n    this.icon = new Icon('border5');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon5 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon6 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border6`);\r\n    this.icon = new Icon('border6');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon6 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon7 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border7`);\r\n    this.icon = new Icon('border7');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon7 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon8 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border8`);\r\n    this.icon = new Icon('border8');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon8 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon9 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border9`);\r\n    this.icon = new Icon('border9');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon9 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon10 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border10`);\r\n    this.icon = new Icon('border10');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon10 };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { DropDownItem } from '../../../base/DropDownItem';\r\n\r\nclass BorderColor extends DropDownItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border-color`);\r\n    this.icon = new Icon('border-color');\r\n    this.setIcon(this.icon);\r\n    this.setColor('#000000');\r\n  }\r\n\r\n  setColor(color) {\r\n    this.icon.css('border-bottom', `3px solid ${color}`);\r\n  }\r\n}\r\n\r\nexport { BorderColor };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { DropDownItem } from '../../../base/DropDownItem';\r\n\r\nclass BorderType extends DropDownItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border-type`);\r\n    this.icon = new Icon('border-type');\r\n    this.setIcon(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderType };\r\n","import { ELContextMenuItem } from '../../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { h } from '../../../../../../libs/Element';\r\n\r\nclass BorderColorContextMenuItem extends ELContextMenuItem {\r\n  constructor(title, icon) {\r\n    super(`${cssPrefix}-border-color-context-menu-item`);\r\n    this.title = title;\r\n    this.icon = icon;\r\n    if (icon) {\r\n      this.iconElement = h('div', `${cssPrefix}-border-color-context-menu-item-icon`);\r\n      this.iconElement.children(this.icon);\r\n      this.children(this.iconElement);\r\n    }\r\n    if (title) {\r\n      this.titleElement = h('div', `${cssPrefix}-border-color-context-menu-item-title`);\r\n      this.titleElement.text(title);\r\n      this.children(this.titleElement);\r\n    }\r\n  }\r\n}\r\n\r\nexport { BorderColorContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../../utils/PlainUtils';\r\nimport { ColorPicker } from '../../../../../../component/colorpicker/ColorPicker';\r\nimport { ColorItem } from '../../../../../../component/colorpicker/colorarray/ColorItem';\r\nimport { Icon } from '../../../Icon';\r\nimport { ColorArray } from '../../../../../../component/colorpicker/colorarray/ColorArray';\r\nimport { ELContextMenuDivider } from '../../../../../../component/contextmenu/ELContextMenuDivider';\r\nimport { BorderColorContextMenuItem } from './BorderColorContextMenuItem';\r\nimport { h } from '../../../../../../libs/Element';\r\nimport { XEvent } from '../../../../../../libs/XEvent';\r\n\r\nclass BorderColorContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-border-color-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.colorPicker = new ColorPicker({\r\n      selectCb: (color) => {\r\n        const item = new ColorItem({ color });\r\n        this.customizeColorArray.add(item);\r\n        this.customizeColorArray.setActiveByColor(color);\r\n        this.colorArray.setActiveByColor(null);\r\n        this.options.onUpdate(color);\r\n        this.close();\r\n      },\r\n    });\r\n    // 重置\r\n    this.reset = new BorderColorContextMenuItem('重置', new Icon('clear-color'));\r\n    // 颜色筛选\r\n    this.array = new BorderColorContextMenuItem();\r\n    this.array.removeClass('hover');\r\n    this.colorArray = new ColorArray({\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) this.options.onUpdate(color);\r\n        this.customizeColorArray.setActiveByColor(null);\r\n        this.close();\r\n      },\r\n    });\r\n    this.array.children(this.colorArray);\r\n    // 历史选中\r\n    this.title = h('div', `${cssPrefix}-border-color-context-menu-color-title`);\r\n    this.title.text('自定义');\r\n    this.plus = new Icon('plus');\r\n    this.customizeColorArray = new ColorArray({\r\n      colors: [\r\n        new ColorItem({ icon: this.plus }),\r\n      ],\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) {\r\n          this.options.onUpdate(color);\r\n          this.colorArray.setActiveByColor(null);\r\n          this.close();\r\n        } else {\r\n          this.colorPicker.open(this.customizeColorArray.activeColor);\r\n        }\r\n      },\r\n    });\r\n    this.customize = new BorderColorContextMenuItem();\r\n    this.customize.removeClass('hover');\r\n    this.customize.children(this.title);\r\n    this.customize.children(this.customizeColorArray);\r\n    // 菜单元素追加子节点\r\n    this.addItem(this.reset);\r\n    this.addItem(this.array);\r\n    this.addItem(new ELContextMenuDivider());\r\n    this.addItem(this.customize);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.reset);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.reset, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdate('rgb(0,0,0)');\r\n      this.customizeColorArray.setActiveByColor(null);\r\n      this.colorArray.setActiveByColor(null);\r\n    });\r\n  }\r\n\r\n  setActiveByColor(color) {\r\n    this.customizeColorArray.setActiveByColor(color);\r\n    this.colorArray.setActiveByColor(color);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { BorderColorContextMenu };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { h } from '../../../../../../libs/Element';\r\nimport { ELContextMenuItem } from '../../../../../../component/contextmenu/ELContextMenuItem';\r\n\r\nconst pool = [];\r\n\r\nclass LineTypeContextMenuItem extends ELContextMenuItem {\r\n  constructor(type) {\r\n    super(`${cssPrefix}-font-context-menu-item`);\r\n    this.type = type;\r\n    this.icon = new Icon('checked');\r\n    this.typeIcon = new Icon(type);\r\n    this.typeIcon.setWidth(50);\r\n    this.iconElement = h('div', `${cssPrefix}-font-context-menu-item-icon`);\r\n    this.titleElement = h('div', `${cssPrefix}-font-context-menu-item-title`);\r\n    this.iconElement.children(this.icon);\r\n    this.titleElement.children(this.typeIcon);\r\n    this.children(this.iconElement);\r\n    this.children(this.titleElement);\r\n    pool.push(this);\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title;\r\n    this.titleElement.text(title);\r\n  }\r\n\r\n  setActive() {\r\n    pool.forEach((item) => {\r\n      item.removeClass('active');\r\n    });\r\n    this.addClass('active');\r\n  }\r\n}\r\n\r\nexport { LineTypeContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../../component/contextmenu/ELContextMenu';\r\nimport { PlainUtils } from '../../../../../../utils/PlainUtils';\r\nimport { cssPrefix, Constant } from '../../../../../../const/Constant';\r\nimport { LineTypeContextMenuItem } from './LineTypeContextMenuItem';\r\nimport { XEvent } from '../../../../../../libs/XEvent';\r\n\r\nclass LineTypeContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-line-type-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new LineTypeContextMenuItem('line1'),\r\n      new LineTypeContextMenuItem('line2'),\r\n      new LineTypeContextMenuItem('line3'),\r\n      new LineTypeContextMenuItem('line4'),\r\n      new LineTypeContextMenuItem('line5'),\r\n      new LineTypeContextMenuItem('line6'),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      this.addItem(item);\r\n    });\r\n    this.setActiveByType(this.items[0].type);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.unbind(item);\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n        this.update(item.type);\r\n        item.setActive();\r\n      });\r\n    });\r\n  }\r\n\r\n  update(type) {\r\n    const { options } = this;\r\n    options.onUpdate(type);\r\n    this.close();\r\n  }\r\n\r\n  setActiveByType(type) {\r\n    this.items.forEach((item) => {\r\n      if (item.type === type) {\r\n        item.setActive();\r\n      }\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { LineTypeContextMenu };\r\n","/* global window */\r\n\r\nlet DPR = window.devicePixelRatio || 1;\r\nlet LINE_WIDTH_LOW = Math.round(DPR);\r\nlet LINE_WIDTH_MEDIUM = LINE_WIDTH_LOW + 2;\r\nlet LINE_WIDTH_HIGH = LINE_WIDTH_MEDIUM + 2;\r\nlet LINE_PIXEL_OFFSET = LINE_WIDTH_LOW / 2;\r\n\r\nclass Base {\r\n\r\n  static styleTransformCssPx(px) {\r\n    return px / this.dpr();\r\n  }\r\n\r\n  static srcTransformCssPx(px) {\r\n    return this.styleTransformCssPx(this.srcTransformStylePx(px));\r\n  }\r\n\r\n  static srcTransformStylePx(px) {\r\n    return this.rounding(px * this.dpr());\r\n  }\r\n\r\n  static rounding(val) {\r\n    return Math.round(val);\r\n  }\r\n\r\n  static radian(angle) {\r\n    return -angle * (Math.PI / 180);\r\n  }\r\n\r\n  static dpr() {\r\n    return DPR;\r\n  }\r\n\r\n  static dprUpdate() {\r\n    DPR = window.devicePixelRatio || 1;\r\n    LINE_WIDTH_LOW = Math.round(DPR);\r\n    LINE_WIDTH_MEDIUM = LINE_WIDTH_LOW + 2;\r\n    LINE_WIDTH_HIGH = LINE_WIDTH_MEDIUM + 2;\r\n    LINE_PIXEL_OFFSET = LINE_WIDTH_LOW / 2;\r\n  }\r\n\r\n  constructor(canvas) {\r\n    this.canvas = canvas;\r\n    this.ctx = canvas.getContext('2d');\r\n  }\r\n\r\n  attr(options) {\r\n    // eslint-disable-next-line guard-for-in,no-restricted-syntax\r\n    for (const key in options) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (options.hasOwnProperty(key)) {\r\n        let value = options[key];\r\n        if (typeof value === 'string' || value instanceof String) {\r\n          value = value.trim();\r\n        }\r\n        if (this.ctx[key] !== value) {\r\n          this.ctx[key] = value;\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  resize(width, height) {\r\n    const { canvas } = this;\r\n    canvas.width = Base.srcTransformStylePx(width);\r\n    canvas.height = Base.srcTransformStylePx(height);\r\n    canvas.style.width = `${canvas.width / Base.dpr()}px`;\r\n    canvas.style.height = `${canvas.height / Base.dpr()}px`;\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nclass Wrapping extends Base {\r\n\r\n  constructor(canvas) {\r\n    super(canvas);\r\n    this.dash = [];\r\n  }\r\n\r\n  beginPath() {\r\n    const { ctx } = this;\r\n    ctx.beginPath();\r\n    return this;\r\n  }\r\n\r\n  measureText(text) {\r\n    const { ctx } = this;\r\n    return ctx.measureText(text);\r\n  }\r\n\r\n  save() {\r\n    const { ctx } = this;\r\n    ctx.save();\r\n    return this;\r\n  }\r\n\r\n  restore() {\r\n    const { ctx } = this;\r\n    ctx.restore();\r\n    return this;\r\n  }\r\n\r\n  fill() {\r\n    const { ctx } = this;\r\n    ctx.fill();\r\n    return this;\r\n  }\r\n\r\n  clip() {\r\n    const { ctx } = this;\r\n    ctx.clip();\r\n    return this;\r\n  }\r\n\r\n  setLineDash(dash = []) {\r\n    const { ctx } = this;\r\n    this.dash = dash;\r\n    ctx.setLineDash(dash);\r\n    return this;\r\n  }\r\n\r\n  scale(x, y) {\r\n    const { ctx } = this;\r\n    ctx.scale(x, y);\r\n    return this;\r\n  }\r\n\r\n  translate(x, y) {\r\n    const { ctx } = this;\r\n    ctx.translate(x, y);\r\n    return this;\r\n  }\r\n\r\n  rotate(deg) {\r\n    const { ctx } = this;\r\n    ctx.rotate(deg);\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nclass Extends extends Wrapping {\r\n\r\n  polyStroke(interpolation = xys => xys, ...xys) {\r\n    const { ctx } = this;\r\n    if (xys.length > 1) {\r\n      this.beginPath();\r\n      const [x, y] = interpolation(xys[0]);\r\n      ctx.moveTo(x, y);\r\n      for (let i = 1, len = xys.length; i < len; i += 1) {\r\n        const [x, y] = interpolation(xys[i]);\r\n        ctx.lineTo(x, y);\r\n      }\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  polyInFill(interpolation = xys => xys, ...xys) {\r\n    const { ctx } = this;\r\n    if (xys.length > 1) {\r\n      this.beginPath();\r\n      const [x, y] = interpolation(xys[0]);\r\n      ctx.moveTo(x, y);\r\n      for (let i = 1, len = xys.length; i < len; i += 1) {\r\n        const [x, y] = interpolation(xys[i]);\r\n        ctx.lineTo(x, y);\r\n      }\r\n      ctx.fill();\r\n    }\r\n  }\r\n\r\n  fullRect() {\r\n    const { canvas } = this;\r\n    const { width, height } = canvas;\r\n    this.ctx.fillRect(0, 0, width, height);\r\n    return this;\r\n  }\r\n\r\n  rotate(angle) {\r\n    super.rotate(Base.radian(angle));\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nclass Position extends Extends {\r\n\r\n  constructor(canvas) {\r\n    super(canvas);\r\n    this.offsetX = 0;\r\n    this.offsetY = 0;\r\n  }\r\n\r\n  offset(x, y) {\r\n    this.offsetX = x;\r\n    this.offsetY = y;\r\n  }\r\n\r\n  getOffsetX() {\r\n    return this.offsetX;\r\n  }\r\n\r\n  getOffsetY() {\r\n    return this.offsetY;\r\n  }\r\n\r\n  fillText() {\r\n    throw TypeError('child impl');\r\n  }\r\n\r\n  fillRect() {\r\n    throw TypeError('child impl');\r\n  }\r\n\r\n  rect() {\r\n    throw TypeError('child impl');\r\n  }\r\n\r\n  drawImage() {\r\n    throw TypeError('child impl');\r\n  }\r\n\r\n}\r\n\r\nclass BaseLine extends Position {\r\n\r\n  line(...xys) {\r\n    this.polyStroke((xys) => {\r\n      const [x, y] = xys;\r\n      return [this.transformLinePx(Base.rounding(x + this.getOffsetX())),\r\n        this.transformLinePx(Base.rounding(y + this.getOffsetY()))];\r\n    }, ...xys);\r\n    return this;\r\n  }\r\n\r\n  transformLinePx(pixel) {\r\n    const { ctx } = this;\r\n    const {\r\n      lineWidth,\r\n    } = ctx;\r\n    return lineWidth % 2 === 0\r\n      ? pixel : pixel - 0.5;\r\n  }\r\n\r\n}\r\n\r\nclass CorsLine extends BaseLine {\r\n\r\n  static offsetToLineInside(val) {\r\n    return LINE_WIDTH_LOW > 1\r\n      ? val - LINE_WIDTH_LOW / 2\r\n      : val - 1;\r\n  }\r\n\r\n  constructor(canvas) {\r\n    super(canvas);\r\n    this.lineWidthType = CorsLine.LINE_WIDTH_TYPE.low;\r\n    this.lineColor = '#000000';\r\n  }\r\n\r\n  corsLine([sx, sy], [ex, ey]) {\r\n    const {\r\n      lineWidthType, lineColor,\r\n    } = this;\r\n    let lineWidth = LINE_WIDTH_LOW;\r\n    switch (lineWidthType) {\r\n      case CorsLine.LINE_WIDTH_TYPE.medium:\r\n        lineWidth = LINE_WIDTH_MEDIUM;\r\n        break;\r\n      case CorsLine.LINE_WIDTH_TYPE.low:\r\n        lineWidth = LINE_WIDTH_LOW;\r\n        break;\r\n      case CorsLine.LINE_WIDTH_TYPE.high:\r\n        lineWidth = LINE_WIDTH_HIGH;\r\n        break;\r\n    }\r\n    this.attr({\r\n      strokeStyle: lineColor,\r\n      lineWidth,\r\n    });\r\n    this.polyStroke((xys) => {\r\n      const [x, y] = xys;\r\n      return [\r\n        Base.rounding(x + this.getOffsetX()) - LINE_PIXEL_OFFSET,\r\n        Base.rounding(y + this.getOffsetY()) - LINE_PIXEL_OFFSET,\r\n      ];\r\n    }, [sx, sy], [ex, ey]);\r\n  }\r\n\r\n  setLineColor(color) {\r\n    this.lineColor = color;\r\n  }\r\n\r\n  setLineWidthType(type) {\r\n    this.lineWidthType = type;\r\n  }\r\n\r\n  horizonLine([sx, sy], [ex, ey]) {\r\n    if (sy !== ey) {\r\n      throw new TypeError('Error Horizon Line');\r\n    }\r\n    this.corsLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  verticalLine([sx, sy], [ex, ey]) {\r\n    if (sx !== ex) {\r\n      throw new TypeError('Error Vertical Line');\r\n    }\r\n    this.corsLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n}\r\nCorsLine.LINE_WIDTH_TYPE = {\r\n  low: 'low',\r\n  medium: 'medium',\r\n  high: 'high',\r\n};\r\n\r\nclass XDraw extends CorsLine {\r\n\r\n  fillText(text, x, y) {\r\n    x += this.getOffsetX();\r\n    y += this.getOffsetY();\r\n    this.ctx.fillText(text, XDraw.rounding(x), XDraw.rounding(y));\r\n    return this;\r\n  }\r\n\r\n  fillPath(path) {\r\n    this.polyInFill((xys) => {\r\n      const { x, y } = xys;\r\n      return [Base.rounding(x + this.getOffsetX()), Base.rounding(y + this.getOffsetY())];\r\n    }, ...path.points);\r\n    return this;\r\n  }\r\n\r\n  fillRect(x, y, w, h) {\r\n    x += this.getOffsetX();\r\n    y += this.getOffsetY();\r\n    this.ctx.fillRect(XDraw.rounding(x), XDraw.rounding(y),\r\n      XDraw.rounding(w), XDraw.rounding(h));\r\n    return this;\r\n  }\r\n\r\n  rect(x, y, w, h) {\r\n    x += this.getOffsetX();\r\n    y += this.getOffsetY();\r\n    this.ctx.rect(XDraw.rounding(x), XDraw.rounding(y),\r\n      XDraw.rounding(w), XDraw.rounding(h));\r\n    return this;\r\n  }\r\n\r\n  copyImage(sx, sy, sw, sh, tx, ty, tw, th) {\r\n    const { ctx } = this;\r\n    tx += this.getOffsetX();\r\n    sx += this.getOffsetX();\r\n    ty += this.getOffsetY();\r\n    sy += this.getOffsetY();\r\n    ctx.drawImage(this.canvas,\r\n      XDraw.rounding(sx), XDraw.rounding(sy),\r\n      XDraw.rounding(sw), XDraw.rounding(sh),\r\n      XDraw.rounding(tx), XDraw.rounding(ty),\r\n      XDraw.rounding(tw), XDraw.rounding(th));\r\n    return this;\r\n  }\r\n\r\n  drawImage(el, sx, sy, sw, sh, tx, ty, tw, th) {\r\n    const { ctx } = this;\r\n    tx += this.getOffsetX();\r\n    ty += this.getOffsetY();\r\n    ctx.drawImage(el,\r\n      XDraw.rounding(sx), XDraw.rounding(sy),\r\n      XDraw.rounding(sw), XDraw.rounding(sh),\r\n      XDraw.rounding(tx), XDraw.rounding(ty),\r\n      XDraw.rounding(tw), XDraw.rounding(th));\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XDraw,\r\n};\r\n","import { PlainUtils } from '../utils/PlainUtils';\r\nimport { XDraw } from './XDraw';\r\n\r\nconst LINE_TYPE = {\r\n  SOLID_LINE: 0,\r\n  DOTTED_LINE: 1,\r\n  POINT_LINE: 2,\r\n  DOUBLE_LINE: 3,\r\n};\r\n\r\nclass SolidLine {\r\n\r\n  constructor(draw, attr) {\r\n    this.draw = draw;\r\n    PlainUtils.mergeDeep(this, {\r\n      color: '#000000',\r\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\r\n    }, attr);\r\n  }\r\n\r\n  setWidthType(widthType) {\r\n    this.widthType = widthType;\r\n  }\r\n\r\n  setColor(color) {\r\n    this.color = color;\r\n  }\r\n\r\n  horizonLine(sx, sy, ex, ey) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    draw.horizonLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  verticalLine(sx, sy, ex, ey) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    draw.verticalLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  tiltingLine(sx, sy, ex, ey) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    draw.corsLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n}\r\n\r\nclass DottedLine {\r\n\r\n  constructor(draw, attr) {\r\n    this.draw = draw;\r\n    PlainUtils.mergeDeep(this, {\r\n      color: '#000000',\r\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\r\n      dash: [5],\r\n    }, attr);\r\n  }\r\n\r\n  setWidthType(widthType) {\r\n    this.widthType = widthType;\r\n  }\r\n\r\n  setColor(color) {\r\n    this.color = color;\r\n  }\r\n\r\n  horizonLine(sx, sy, ex, ey) {\r\n    const { draw, dash } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash(dash);\r\n    draw.horizonLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  verticalLine(sx, sy, ex, ey) {\r\n    const { draw, dash } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash(dash);\r\n    draw.verticalLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  tiltingLine(sx, sy, ex, ey) {\r\n    const { draw, dash } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash(dash);\r\n    draw.corsLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n}\r\n\r\nclass DoubleLine {\r\n\r\n  constructor(draw, attr) {\r\n    this.draw = draw;\r\n    PlainUtils.mergeDeep(this, {\r\n      color: '#000000',\r\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\r\n      padding: 1,\r\n      spacing: DoubleLine.spacing,\r\n      leftShow: () => false,\r\n      topShow: () => false,\r\n      rightShow: () => false,\r\n      bottomShow: () => false,\r\n      iFMerge: () => false,\r\n      iFMergeFirstRow: () => false,\r\n      iFMergeLastRow: () => false,\r\n      iFMergeFirstCol: () => false,\r\n      iFMergeLastCol: () => false,\r\n    }, attr);\r\n  }\r\n\r\n  setWidthType(widthType) {\r\n    this.widthType = widthType;\r\n  }\r\n\r\n  setColor(color) {\r\n    this.color = color;\r\n  }\r\n\r\n  handleExternal(sx, sy, ex, ey, row, col, pos) {\r\n    const external = {};\r\n    const { leftShow, topShow, rightShow, bottomShow } = this;\r\n    const { iFMerge, iFMergeFirstRow, iFMergeLastRow, iFMergeFirstCol, iFMergeLastCol } = this;\r\n    const { spacing } = this;\r\n    let ifMerge = null;\r\n    let firstRow = null;\r\n    let lastRow = null;\r\n    let firstCol = null;\r\n    let lastCol = null;\r\n    switch (pos) {\r\n      case 'left':\r\n        ifMerge = iFMerge(row, col - 1);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row, col - 1);\r\n          lastRow = iFMergeLastRow(row, col - 1);\r\n          firstCol = iFMergeFirstCol(row, col - 1);\r\n          lastCol = iFMergeLastCol(row, col - 1);\r\n        }\r\n        break;\r\n      case 'top':\r\n        ifMerge = iFMerge(row - 1, col);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row - 1, col);\r\n          lastRow = iFMergeLastRow(row - 1, col);\r\n          firstCol = iFMergeFirstCol(row - 1, col);\r\n          lastCol = iFMergeLastCol(row - 1, col);\r\n        }\r\n        break;\r\n      case 'right':\r\n        ifMerge = iFMerge(row, col + 1);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row, col + 1);\r\n          lastRow = iFMergeLastRow(row, col + 1);\r\n          firstCol = iFMergeFirstCol(row, col + 1);\r\n          lastCol = iFMergeLastCol(row, col + 1);\r\n        }\r\n        break;\r\n      case 'bottom':\r\n        ifMerge = iFMerge(row + 1, col);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row + 1, col);\r\n          lastRow = iFMergeLastRow(row + 1, col);\r\n          firstCol = iFMergeFirstCol(row + 1, col);\r\n          lastCol = iFMergeLastCol(row + 1, col);\r\n        }\r\n        break;\r\n      default: break;\r\n    }\r\n    if (ifMerge) {\r\n      switch (pos) {\r\n        case 'left': {\r\n          external.sx = sx - spacing;\r\n          external.ex = ex - spacing;\r\n          // 检查顶边和上底边及左上角底边及左顶边\r\n          const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          external.sy = sy;\r\n          if (sTop || sBottom) external.sy = sy - spacing;\r\n          if (sTopLeftCorner && firstRow) external.sy = sy + spacing;\r\n          // 检查底边和下顶边及左下角顶边和左底边\r\n          const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          external.ey = ey;\r\n          if (eBottom || eTop) external.ey = ey + spacing;\r\n          if (eBottomLeftCorner && lastRow) external.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'top': {\r\n          external.sy = sy - spacing;\r\n          external.ey = ey - spacing;\r\n          // 检查左边和左右边及左上角右边及上左边\r\n          const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          external.sx = sx;\r\n          if (sLeft || sRight) external.sx = sx - spacing;\r\n          if (sTopLeftCorner && firstCol) external.sx = sx + spacing;\r\n          // 检查右边和右左边及右上角左边及上右边\r\n          const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          external.ex = ex;\r\n          if (eRight || eLeft) external.ex = ex + spacing;\r\n          if (eTopRightCorner && lastCol) external.ex = ex - spacing;\r\n          break;\r\n        }\r\n        case 'right': {\r\n          external.sx = sx + spacing;\r\n          external.ex = ex + spacing;\r\n          // 检查顶边和上底边及右上角底边及右顶边\r\n          const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          external.sy = sy;\r\n          if (sTop || sBottom) external.sy = sy - spacing;\r\n          if (sTopRightCorner && firstRow) external.sy = sy + spacing;\r\n          // 检查底边和下顶边及右下角顶边及右底边\r\n          const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          external.ey = ey;\r\n          if (eBottom || eTop) external.ey = ey + spacing;\r\n          if (eBottomRightCorner && lastRow) external.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'bottom': {\r\n          external.sy = sy + spacing;\r\n          external.ey = ey + spacing;\r\n          // 检查左边和左右边及左下角右边及下左边\r\n          const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          external.sx = sx;\r\n          if (sLeft || sRight) external.sx = sx - spacing;\r\n          if (sBottomLeftCorner && firstCol) external.sx = sx + spacing;\r\n          // 检查右边和右左边及右下角左边及下右边\r\n          const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          external.ex = ex;\r\n          if (eRight || eLeft) external.ex = ex + spacing;\r\n          if (eBottomRightCorner && lastCol) external.ex = ex - spacing;\r\n          break;\r\n        }\r\n        default: break;\r\n      }\r\n      return external;\r\n    }\r\n    switch (pos) {\r\n      case 'left': {\r\n        external.sx = sx - spacing;\r\n        external.ex = ex - spacing;\r\n        // 检查顶边和上底边及左上角底边及左顶边\r\n        const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        external.sy = sy;\r\n        if (sTop || sBottom) external.sy = sy - spacing;\r\n        if (sTopLeftCorner) external.sy = sy + spacing;\r\n        // 检查底边和下顶边及左下角顶边和左底边\r\n        const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        external.ey = ey;\r\n        if (eBottom || eTop) external.ey = ey + spacing;\r\n        if (eBottomLeftCorner) external.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'top': {\r\n        external.sy = sy - spacing;\r\n        external.ey = ey - spacing;\r\n        // 检查左边和左右边及左上角右边及上左边\r\n        const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        external.sx = sx;\r\n        if (sLeft || sRight) external.sx = sx - spacing;\r\n        if (sTopLeftCorner) external.sx = sx + spacing;\r\n        // 检查右边和右左边及右上角左边及上右边\r\n        const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        external.ex = ex;\r\n        if (eRight || eLeft) external.ex = ex + spacing;\r\n        if (eTopRightCorner) external.ex = ex - spacing;\r\n        break;\r\n      }\r\n      case 'right': {\r\n        external.sx = sx + spacing;\r\n        external.ex = ex + spacing;\r\n        // 检查顶边和上底边及右上角底边及右顶边\r\n        const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        external.sy = sy;\r\n        if (sTop || sBottom) external.sy = sy - spacing;\r\n        if (sTopRightCorner) external.sy = sy + spacing;\r\n        // 检查底边和下顶边及右下角顶边及右底边\r\n        const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        external.ey = ey;\r\n        if (eBottom || eTop) external.ey = ey + spacing;\r\n        if (eBottomRightCorner) external.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'bottom': {\r\n        external.sy = sy + spacing;\r\n        external.ey = ey + spacing;\r\n        // 检查左边和左右边及左下角右边及下左边\r\n        const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        external.sx = sx;\r\n        if (sLeft || sRight) external.sx = sx - spacing;\r\n        if (sBottomLeftCorner) external.sx = sx + spacing;\r\n        // 检查右边和右左边及右下角左边及下右边\r\n        const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        external.ex = ex;\r\n        if (eRight || eLeft) external.ex = ex + spacing;\r\n        if (eBottomRightCorner) external.ex = ex - spacing;\r\n        break;\r\n      }\r\n      default: break;\r\n    }\r\n    return external;\r\n  }\r\n\r\n  handleInternal(sx, sy, ex, ey, row, col, pos) {\r\n    const internal = {};\r\n    const { leftShow, topShow, rightShow, bottomShow } = this;\r\n    const { iFMerge, iFMergeFirstRow, iFMergeLastRow, iFMergeFirstCol, iFMergeLastCol } = this;\r\n    const { spacing } = this;\r\n    const ifMerge = iFMerge(row, col);\r\n    // merge\r\n    if (ifMerge) {\r\n      const firstRow = iFMergeFirstRow(row, col);\r\n      const lastRow = iFMergeLastRow(row, col);\r\n      const firstCol = iFMergeFirstCol(row, col);\r\n      const lastCol = iFMergeLastCol(row, col);\r\n      switch (pos) {\r\n        case 'left': {\r\n          internal.sx = sx + spacing;\r\n          internal.ex = ex + spacing;\r\n          // 检查顶边和上底边及左上角底边及左顶边\r\n          const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          internal.sy = sy;\r\n          if (sTopLeftCorner) internal.sy = sy - spacing;\r\n          if ((sTop || sBottom) && firstRow) internal.sy = sy + spacing;\r\n          // 检查底边和下顶边及左下角顶边和左底边\r\n          const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          internal.ey = ey;\r\n          if (eBottomLeftCorner) internal.ey = ey + spacing;\r\n          if ((eBottom || eTop) && lastRow) internal.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'top': {\r\n          internal.sy = sy + spacing;\r\n          internal.ey = ey + spacing;\r\n          // 检查左边和左右边及左上角右边及上左边\r\n          const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          internal.sx = sx;\r\n          if (sTopLeftCorner) internal.sx = sx - spacing;\r\n          if ((sLeft || sRight) && firstCol) internal.sx = sx + spacing;\r\n          // 检查右边和右左边及右上角左边及上右边\r\n          const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          internal.ex = ex;\r\n          if (eTopRightCorner) internal.ex = ex + spacing;\r\n          if ((eRight || eLeft) && lastCol) internal.ex = ex - spacing;\r\n          break;\r\n        }\r\n        case 'right': {\r\n          internal.sx = sx - spacing;\r\n          internal.ex = ex - spacing;\r\n          // 检查顶边和上底边及右上角底边及右上边\r\n          const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          internal.sy = sy;\r\n          if (sTopRightCorner) internal.sy = sy - spacing;\r\n          if ((sTop || sBottom) && firstRow) internal.sy = sy + spacing;\r\n          // 检查底边和下顶边右下角顶边及右下边\r\n          const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          internal.ey = ey;\r\n          if (eBottomRightCorner) internal.ey = ey + spacing;\r\n          if ((eBottom || eTop) && lastRow) internal.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'bottom': {\r\n          internal.sy = sy - spacing;\r\n          internal.ey = ey - spacing;\r\n          // 检查左边和左右边及左下角右边及下左边\r\n          const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          internal.sx = sx;\r\n          if (sBottomLeftCorner) internal.sx = sx - spacing;\r\n          if ((sLeft || sRight) && firstCol) internal.sx = sx + spacing;\r\n          // 检查右边和右左边及右下角左边及下右边\r\n          const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          internal.ex = ex;\r\n          if (eBottomRightCorner) internal.ex = ex + spacing;\r\n          if ((eRight || eLeft) && lastCol) internal.ex = ex - spacing;\r\n          break;\r\n        }\r\n        default: break;\r\n      }\r\n      return internal;\r\n    }\r\n    switch (pos) {\r\n      case 'left': {\r\n        internal.sx = sx + spacing;\r\n        internal.ex = ex + spacing;\r\n        // 检查顶边和上底边及左上角底边及左顶边\r\n        const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        internal.sy = sy;\r\n        if (sTopLeftCorner) internal.sy = sy - spacing;\r\n        if (sTop || sBottom) internal.sy = sy + spacing;\r\n        // 检查底边和下顶边及左下角顶边和左底边\r\n        const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        internal.ey = ey;\r\n        if (eBottomLeftCorner) internal.ey = ey + spacing;\r\n        if (eBottom || eTop) internal.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'top': {\r\n        internal.sy = sy + spacing;\r\n        internal.ey = ey + spacing;\r\n        // 检查左边和左右边及左上角右边及上左边\r\n        const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        internal.sx = sx;\r\n        if (sTopLeftCorner) internal.sx = sx - spacing;\r\n        if (sLeft || sRight) internal.sx = sx + spacing;\r\n        // 检查右边和右左边及右上角左边及上右边\r\n        const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        internal.ex = ex;\r\n        if (eTopRightCorner) internal.ex = ex + spacing;\r\n        if (eRight || eLeft) internal.ex = ex - spacing;\r\n        break;\r\n      }\r\n      case 'right': {\r\n        internal.sx = sx - spacing;\r\n        internal.ex = ex - spacing;\r\n        // 检查顶边和上底边及右上角底边及右上边\r\n        const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        internal.sy = sy;\r\n        if (sTopRightCorner) internal.sy = sy - spacing;\r\n        if (sTop || sBottom) internal.sy = sy + spacing;\r\n        // 检查底边和下顶边右下角顶边及右下边\r\n        const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        internal.ey = ey;\r\n        if (eBottomRightCorner) internal.ey = ey + spacing;\r\n        if (eBottom || eTop) internal.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'bottom': {\r\n        internal.sy = sy - spacing;\r\n        internal.ey = ey - spacing;\r\n        // 检查左边和左右边及左下角右边及下左边\r\n        const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        internal.sx = sx;\r\n        if (sBottomLeftCorner) internal.sx = sx - spacing;\r\n        if (sLeft || sRight) internal.sx = sx + spacing;\r\n        // 检查右边和右左边及右下角左边及下右边\r\n        const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        internal.ex = ex;\r\n        if (eBottomRightCorner) internal.ex = ex + spacing;\r\n        if (eRight || eLeft) internal.ex = ex - spacing;\r\n        break;\r\n      }\r\n      default: break;\r\n    }\r\n    return internal;\r\n  }\r\n\r\n  horizonLine(sx, sy, ex, ey, row, col, pos) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    const external = this.handleExternal(sx, sy, ex, ey, row, col, pos);\r\n    const internal = this.handleInternal(sx, sy, ex, ey, row, col, pos);\r\n    if (!PlainUtils.isEmptyObject(internal)) {\r\n      draw.horizonLine([internal.sx, internal.sy], [internal.ex, internal.ey]);\r\n    }\r\n    if (!PlainUtils.isEmptyObject(external)) {\r\n      draw.horizonLine([external.sx, external.sy], [external.ex, external.ey]);\r\n    }\r\n  }\r\n\r\n  verticalLine(sx, sy, ex, ey, row, col, pos) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    const external = this.handleExternal(sx, sy, ex, ey, row, col, pos);\r\n    const internal = this.handleInternal(sx, sy, ex, ey, row, col, pos);\r\n    if (!PlainUtils.isEmptyObject(internal)) {\r\n      draw.verticalLine([internal.sx, internal.sy], [internal.ex, internal.ey]);\r\n    }\r\n    if (!PlainUtils.isEmptyObject(external)) {\r\n      draw.verticalLine([external.sx, external.sy], [external.ex, external.ey]);\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  tiltingLine(sx, sy, ex, ey, row, col, pos) {\r\n    // TODO ..\r\n    // ...\r\n  }\r\n\r\n}\r\nDoubleLine.spacing = XDraw.dpr() >= 2 ? 3 : 2;\r\n\r\nclass Line {\r\n\r\n  constructor(draw, attr = {}) {\r\n    this.widthType = XDraw.LINE_WIDTH_TYPE.low;\r\n    this.type = LINE_TYPE.SOLID_LINE;\r\n    this.solidLine = new SolidLine(draw, PlainUtils.mergeDeep({}, attr));\r\n    this.dottedLine = new DottedLine(draw, PlainUtils.mergeDeep({\r\n      dash: [5],\r\n    }, attr));\r\n    this.pointLine = new DottedLine(draw, PlainUtils.mergeDeep({\r\n      dash: [2, 2],\r\n    }, attr));\r\n    this.doubleLine = new DoubleLine(draw, PlainUtils.mergeDeep({}, attr));\r\n  }\r\n\r\n  setWidthType(widthType) {\r\n    if (widthType) {\r\n      if (this.type === LINE_TYPE.SOLID_LINE) {\r\n        this.solidLine.setWidthType(widthType);\r\n      }\r\n    }\r\n  }\r\n\r\n  setColor(color) {\r\n    if (color) {\r\n      this.solidLine.setColor(color);\r\n      this.dottedLine.setColor(color);\r\n      this.pointLine.setColor(color);\r\n      this.doubleLine.setColor(color);\r\n    }\r\n  }\r\n\r\n  setType(type) {\r\n    this.type = type;\r\n  }\r\n\r\n  horizonLine(sx, sy, ex, ey, row, col, pos) {\r\n    const {\r\n      type,\r\n      solidLine,\r\n      dottedLine,\r\n      pointLine,\r\n      doubleLine,\r\n    } = this;\r\n    switch (type) {\r\n      case LINE_TYPE.SOLID_LINE:\r\n        solidLine.horizonLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOTTED_LINE:\r\n        dottedLine.horizonLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.POINT_LINE:\r\n        pointLine.horizonLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOUBLE_LINE:\r\n        doubleLine.horizonLine(sx, sy, ex, ey, row, col, pos);\r\n        break;\r\n    }\r\n  }\r\n\r\n  verticalLine(sx, sy, ex, ey, row, col, pos) {\r\n    const {\r\n      type,\r\n      solidLine,\r\n      dottedLine,\r\n      pointLine,\r\n      doubleLine,\r\n    } = this;\r\n    switch (type) {\r\n      case LINE_TYPE.SOLID_LINE:\r\n        solidLine.verticalLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOTTED_LINE:\r\n        dottedLine.verticalLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.POINT_LINE:\r\n        pointLine.verticalLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOUBLE_LINE:\r\n        doubleLine.verticalLine(sx, sy, ex, ey, row, col, pos);\r\n        break;\r\n    }\r\n  }\r\n\r\n  tiltingLine(sx, sy, ex, ey, row, col, pos) {\r\n    const {\r\n      type,\r\n      solidLine,\r\n      dottedLine,\r\n      pointLine,\r\n      doubleLine,\r\n    } = this;\r\n    switch (type) {\r\n      case LINE_TYPE.SOLID_LINE:\r\n        solidLine.tiltingLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOTTED_LINE:\r\n        dottedLine.tiltingLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.POINT_LINE:\r\n        pointLine.tiltingLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOUBLE_LINE:\r\n        doubleLine.tiltingLine(sx, sy, ex, ey, row, col, pos);\r\n        break;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Line, LINE_TYPE, SolidLine,\r\n};\r\n","import { ELContextMenu } from '../../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../../utils/PlainUtils';\r\nimport { BorderTypeContextMenuItem } from './BorderTypeContextMenuItem';\r\nimport { ELContextMenuDivider } from '../../../../../../component/contextmenu/ELContextMenuDivider';\r\nimport { h } from '../../../../../../libs/Element';\r\nimport { BorderIcon1 } from '../../icon/border/BorderIcon1';\r\nimport { BorderIcon2 } from '../../icon/border/BorderIcon2';\r\nimport { BorderIcon3 } from '../../icon/border/BorderIcon3';\r\nimport { BorderIcon4 } from '../../icon/border/BorderIcon4';\r\nimport { BorderIcon5 } from '../../icon/border/BorderIcon5';\r\nimport { BorderIcon6 } from '../../icon/border/BorderIcon6';\r\nimport { BorderIcon7 } from '../../icon/border/BorderIcon7';\r\nimport { BorderIcon8 } from '../../icon/border/BorderIcon8';\r\nimport { BorderIcon9 } from '../../icon/border/BorderIcon9';\r\nimport { BorderIcon10 } from '../../icon/border/BorderIcon10';\r\nimport { BorderColor } from '../../icon/border/BorderColor';\r\nimport { BorderType } from '../../icon/border/BorderType';\r\nimport { XEvent } from '../../../../../../libs/XEvent';\r\nimport { BorderColorContextMenu } from '../bordercolor/BorderColorContextMenu';\r\nimport { LineTypeContextMenu } from '../linetype/LineTypeContextMenu';\r\nimport { LINE_TYPE } from '../../../../../../canvas/Line';\r\nimport { ElPopUp } from '../../../../../../component/elpopup/ElPopUp';\r\n\r\nclass BorderTypeContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-border-type-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.type = LINE_TYPE.SOLID_LINE;\r\n    this.color = '#000000';\r\n    // 边框样式\r\n    this.borderIcon1 = new BorderIcon1();\r\n    this.borderIcon2 = new BorderIcon2();\r\n    this.borderIcon3 = new BorderIcon3();\r\n    this.borderIcon4 = new BorderIcon4();\r\n    this.borderIcon5 = new BorderIcon5();\r\n    const div1 = h('div', `${cssPrefix}-border-type-context-menu-type-icon-line`);\r\n    div1.children(this.borderIcon1);\r\n    div1.children(this.borderIcon2);\r\n    div1.children(this.borderIcon3);\r\n    div1.children(this.borderIcon4);\r\n    div1.children(this.borderIcon5);\r\n    this.borderIcon6 = new BorderIcon6();\r\n    this.borderIcon7 = new BorderIcon7();\r\n    this.borderIcon8 = new BorderIcon8();\r\n    this.borderIcon9 = new BorderIcon9();\r\n    this.borderIcon10 = new BorderIcon10();\r\n    const div2 = h('div', `${cssPrefix}-border-type-context-menu-type-icon-line`);\r\n    div2.children(this.borderIcon6);\r\n    div2.children(this.borderIcon7);\r\n    div2.children(this.borderIcon8);\r\n    div2.children(this.borderIcon9);\r\n    div2.children(this.borderIcon10);\r\n    this.borderIcons = new BorderTypeContextMenuItem();\r\n    this.borderIcons.removeClass('hover');\r\n    this.borderIcons.children(div1);\r\n    this.borderIcons.children(div2);\r\n    // 子菜单\r\n    this.borderColor = new BorderColor();\r\n    this.borderType = new BorderType();\r\n    const div3 = h('div', `${cssPrefix}-border-type-context-menu-type-icon-line`);\r\n    div3.children(this.borderColor);\r\n    div3.children(this.borderType);\r\n    this.borderColorAndType = new BorderTypeContextMenuItem();\r\n    this.borderColorAndType.removeClass('hover');\r\n    this.borderColorAndType.children(div3);\r\n    // 追加子菜单\r\n    this.addItem(this.borderIcons);\r\n    this.addItem(new ELContextMenuDivider());\r\n    this.addItem(this.borderColorAndType);\r\n    // 边框颜色菜单\r\n    this.borderColorContextMenu = new BorderColorContextMenu(PlainUtils.copyProp({\r\n      el: this.borderColor,\r\n    }, {\r\n      onUpdate: (color) => {\r\n        this.color = color;\r\n        this.borderColor.setColor(color);\r\n      },\r\n    }));\r\n    // 边框类型\r\n    this.lineTypeContextMenu = new LineTypeContextMenu(PlainUtils.copyProp({\r\n      el: this.borderType,\r\n    }, {\r\n      onUpdate: (type) => {\r\n        this.type = type;\r\n      },\r\n    }));\r\n    // 添加事件\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.borderColor, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderType, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon4, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon5, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon6, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon7, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon8, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon9, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon10, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.borderColor, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { borderColorContextMenu } = this;\r\n      const { elPopUp } = borderColorContextMenu;\r\n      ElPopUp.closeAll([elPopUp, this.elPopUp]);\r\n      if (borderColorContextMenu.isClose()) {\r\n        borderColorContextMenu.open();\r\n      } else {\r\n        borderColorContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderType, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { lineTypeContextMenu } = this;\r\n      const { elPopUp } = lineTypeContextMenu;\r\n      ElPopUp.closeAll([elPopUp, this.elPopUp]);\r\n      if (lineTypeContextMenu.isClose()) {\r\n        lineTypeContextMenu.open();\r\n      } else {\r\n        lineTypeContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border1', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border2', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border3', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon4, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border4', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon5, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border5', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon6, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border6', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon7, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border7', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon8, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border8', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon9, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border9', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon10, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border10', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { BorderTypeContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { BorderTypeContextMenu } from './contextmenu/border/bordertype/BorderTypeContextMenu';\r\n\r\nclass Border extends DropDownItem {\r\n\r\n  constructor(options = {\r\n    contextMenu: {},\r\n  }) {\r\n    super(`${cssPrefix}-tools-border`);\r\n    this.options = options;\r\n    this.icon = new Icon('border');\r\n    this.setIcon(this.icon);\r\n    this.borderTypeContextMenu = new BorderTypeContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport { Border };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass Merge extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-merge`);\r\n    this.icon = new Icon('merge');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { Merge };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass HorizontalIcon1 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-horizontal1`);\r\n    this.icon = new Icon('align-left');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { HorizontalIcon1 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass HorizontalIcon2 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-horizontal2`);\r\n    this.icon = new Icon('align-center');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { HorizontalIcon2 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass HorizontalIcon3 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-horizontal3`);\r\n    this.icon = new Icon('align-right');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { HorizontalIcon3 };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\n\r\nclass HorizontalContextMenuItem extends ELContextMenuItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-horizontal-type-context-menu-item`);\r\n  }\r\n}\r\n\r\nexport { HorizontalContextMenuItem };\r\n","class BaseFont {\r\n\r\n  constructor({\r\n    draw, ruler, attr,\r\n  }) {\r\n    this.draw = draw;\r\n    this.ruler = ruler;\r\n    this.attr = attr;\r\n  }\r\n\r\n  setRuler(ruler) {\r\n    this.ruler = ruler;\r\n  }\r\n\r\n  getAlignPadding() {\r\n    if (this.attr.align === BaseFont.ALIGN.center) {\r\n      return 0;\r\n    }\r\n    return this.attr.padding;\r\n  }\r\n\r\n  isBlank(text) {\r\n    return text === null || text === undefined || text.toString().trim() === '';\r\n  }\r\n\r\n  hasBreak(text) {\r\n    return text.indexOf('\\n') > -1;\r\n  }\r\n\r\n  getVerticalAlignPadding() {\r\n    if (this.attr.verticalAlign === BaseFont.VERTICAL_ALIGN.center) {\r\n      return 0;\r\n    }\r\n    return this.attr.padding;\r\n  }\r\n\r\n}\r\nBaseFont.VERTICAL_ALIGN = {\r\n  top: 'top',\r\n  center: 'middle',\r\n  bottom: 'bottom',\r\n};\r\nBaseFont.ALIGN = {\r\n  left: 'left',\r\n  center: 'center',\r\n  right: 'right',\r\n};\r\nBaseFont.TEXT_WRAP = {\r\n  OVER_FLOW: 1,\r\n  WORD_WRAP: 2,\r\n  TRUNCATE: 3,\r\n};\r\nBaseFont.TEXT_DIRECTION = {\r\n  HORIZONTAL: 'horizontal',\r\n  VERTICAL: 'vertical',\r\n  ANGLE: 'angle',\r\n  ANGLE_BAR: 'bar',\r\n};\r\nexport {\r\n  BaseFont,\r\n};\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { h } from '../../../../../libs/Element';\r\nimport { HorizontalIcon1 } from '../icon/horizontal/HorizontalIcon1';\r\nimport { HorizontalIcon2 } from '../icon/horizontal/HorizontalIcon2';\r\nimport { HorizontalIcon3 } from '../icon/horizontal/HorizontalIcon3';\r\nimport { HorizontalContextMenuItem } from './HorizontalContextMenuItem';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass HorizontalContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-horizontal-type-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.horizontalIcon1 = new HorizontalIcon1();\r\n    this.horizontalIcon2 = new HorizontalIcon2();\r\n    this.horizontalIcon3 = new HorizontalIcon3();\r\n    const div2 = h('div', `${cssPrefix}-horizontal-type-context-menu-type-icon-line`);\r\n    div2.children(this.horizontalIcon1);\r\n    div2.children(this.horizontalIcon2);\r\n    div2.children(this.horizontalIcon3);\r\n    this.horizontalIcons = new HorizontalContextMenuItem();\r\n    this.horizontalIcons.removeClass('hover');\r\n    this.horizontalIcons.children(div2);\r\n    this.addItem(this.horizontalIcons);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.horizontalIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.horizontalIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.horizontalIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.horizontalIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.ALIGN.left);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.horizontalIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.ALIGN.center);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.horizontalIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.ALIGN.right);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { HorizontalContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { HorizontalContextMenu } from './contextmenu/horizontal/HorizontalContextMenu';\r\n\r\nclass HorizontalAlign extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-horizontal-align`);\r\n    this.options = options;\r\n    this.icon = new Icon('align-left');\r\n    this.setIcon(this.icon);\r\n    this.horizontalContextMenu = new HorizontalContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.horizontalContextMenu.destroy();\r\n  }\r\n\r\n}\r\nexport { HorizontalAlign };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\n\r\nclass VerticalContextMenuItem extends ELContextMenuItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-vertical-type-context-menu-item`);\r\n  }\r\n}\r\n\r\nexport { VerticalContextMenuItem };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass VerticalIcon1 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-verticalIcon1`);\r\n    this.icon = new Icon('align-top');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { VerticalIcon1 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass VerticalIcon2 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-verticalIcon2`);\r\n    this.icon = new Icon('align-middle');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { VerticalIcon2 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass VerticalIcon3 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-verticalIcon3`);\r\n    this.icon = new Icon('align-bottom');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { VerticalIcon3 };\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { h } from '../../../../../libs/Element';\r\nimport { VerticalContextMenuItem } from './VerticalContextMenuItem';\r\nimport { VerticalIcon1 } from '../icon/vertical/VerticalIcon1';\r\nimport { VerticalIcon2 } from '../icon/vertical/VerticalIcon2';\r\nimport { VerticalIcon3 } from '../icon/vertical/VerticalIcon3';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass VerticalContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-vertical-type-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.verticalIcon1 = new VerticalIcon1();\r\n    this.verticalIcon2 = new VerticalIcon2();\r\n    this.verticalIcon3 = new VerticalIcon3();\r\n    const div2 = h('div', `${cssPrefix}-vertical-type-context-menu-type-icon-line`);\r\n    div2.children(this.verticalIcon1);\r\n    div2.children(this.verticalIcon2);\r\n    div2.children(this.verticalIcon3);\r\n    this.verticalIcons = new VerticalContextMenuItem();\r\n    this.verticalIcons.removeClass('hover');\r\n    this.verticalIcons.children(div2);\r\n    this.addItem(this.verticalIcons);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.verticalIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.verticalIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.verticalIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.verticalIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.VERTICAL_ALIGN.top);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.verticalIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.VERTICAL_ALIGN.center);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.verticalIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.VERTICAL_ALIGN.bottom);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { VerticalContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { VerticalContextMenu } from './contextmenu/vertical/VerticalContextMenu';\r\n\r\nclass VerticalAlign extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-vertical-align`);\r\n    this.options = options;\r\n    this.icon = new Icon('align-middle');\r\n    this.setIcon(this.icon);\r\n    this.verticalContextMenu = new VerticalContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.verticalContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { VerticalAlign };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass TextWrappingIcon1 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-text-wrapping1`);\r\n    this.icon = new Icon('truncate');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { TextWrappingIcon1 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass TextWrappingIcon2 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-text-wrapping2`);\r\n    this.icon = new Icon('overflow');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { TextWrappingIcon2 };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass TextWrappingIcon3 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-text-wrapping3`);\r\n    this.icon = new Icon('wrap');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { TextWrappingIcon3 };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\n\r\nclass TextWrappingContextMenuItem extends ELContextMenuItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-text-wrapping-context-menu-item`);\r\n  }\r\n}\r\n\r\nexport { TextWrappingContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { TextWrappingIcon1 } from '../icon/textwrapping/TextWrappingIcon1';\r\nimport { TextWrappingIcon2 } from '../icon/textwrapping/TextWrappingIcon2';\r\nimport { TextWrappingIcon3 } from '../icon/textwrapping/TextWrappingIcon3';\r\nimport { h } from '../../../../../libs/Element';\r\nimport { TextWrappingContextMenuItem } from './TextWrappingContextMenuItem';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass TextWrappingContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-text-wrapping-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.textWrappingIcon1 = new TextWrappingIcon1();\r\n    this.textWrappingIcon2 = new TextWrappingIcon2();\r\n    this.textWrappingIcon3 = new TextWrappingIcon3();\r\n    const div2 = h('div', `${cssPrefix}-text-wrapping-context-menu-type-icon-line`);\r\n    div2.children(this.textWrappingIcon1);\r\n    div2.children(this.textWrappingIcon2);\r\n    div2.children(this.textWrappingIcon3);\r\n    this.textWrappingIcons = new TextWrappingContextMenuItem();\r\n    this.textWrappingIcons.removeClass('hover');\r\n    this.textWrappingIcons.children(div2);\r\n    this.addItem(this.textWrappingIcons);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.textWrappingIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.textWrappingIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.textWrappingIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.textWrappingIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.TEXT_WRAP.TRUNCATE);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.textWrappingIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.TEXT_WRAP.OVER_FLOW);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.textWrappingIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.TEXT_WRAP.WORD_WRAP);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { TextWrappingContextMenu };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { DropDownItem } from './base/DropDownItem';\r\nimport { TextWrappingContextMenu } from './contextmenu/textwrapping/TextWrappingContextMenu';\r\n\r\nclass TextWrapping extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-text-wrapping`);\r\n    this.options = options;\r\n    this.icon = new Icon('text-wrap');\r\n    this.setIcon(this.icon);\r\n    this.textWrappingContextMenu = new TextWrappingContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.textWrappingContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { TextWrapping };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../libs/Element';\r\n\r\nconst pool = [];\r\n\r\nclass FixedContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(title) {\r\n    super(`${cssPrefix}-fixed-context-menu-item`);\r\n    this.title = title;\r\n    this.titleElement = h('div', `${cssPrefix}-fixed-context-menu-item-title`);\r\n    this.titleElement.text(title);\r\n    this.children(this.titleElement);\r\n    pool.push(this);\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title;\r\n    this.titleElement.text(title);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FixedContextMenuItem,\r\n};\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { Constant, cssPrefix } from '../../../../../const/Constant';\r\nimport { ELContextMenuDivider } from '../../../../../component/contextmenu/ELContextMenuDivider';\r\nimport { FixedContextMenuItem } from './FixedContextMenuItem';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass FixedContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-fixed-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {\r\n      },\r\n    }, options));\r\n    this.row = new FixedContextMenuItem('冻结至当前行');\r\n    this.row1 = new FixedContextMenuItem('冻结1行');\r\n    this.row2 = new FixedContextMenuItem('冻结2行');\r\n    this.col = new FixedContextMenuItem('冻结至当前列');\r\n    this.col1 = new FixedContextMenuItem('冻结1列');\r\n    this.col2 = new FixedContextMenuItem('冻结2列');\r\n    this.addItem(this.row);\r\n    this.addItem(this.row1);\r\n    this.addItem(this.row2);\r\n    this.addItem(new ELContextMenuDivider());\r\n    this.addItem(this.col);\r\n    this.addItem(this.col1);\r\n    this.addItem(this.col2);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.row, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.row1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.row2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.col, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.col1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.col2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.row, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { options } = this;\r\n      options.onUpdate('ROW');\r\n      this.close();\r\n    });\r\n    XEvent.bind(this.row1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { options } = this;\r\n      options.onUpdate('ROW1');\r\n      this.close();\r\n    });\r\n    XEvent.bind(this.row2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { options } = this;\r\n      options.onUpdate('ROW2');\r\n      this.close();\r\n    });\r\n    XEvent.bind(this.col, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { options } = this;\r\n      options.onUpdate('COL');\r\n      this.close();\r\n    });\r\n    XEvent.bind(this.col1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { options } = this;\r\n      options.onUpdate('COL1');\r\n      this.close();\r\n    });\r\n    XEvent.bind(this.col2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { options } = this;\r\n      options.onUpdate('COL2');\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FixedContextMenu,\r\n};\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { DropDownItem } from './base/DropDownItem';\r\nimport { FixedContextMenu } from './contextmenu/fixed/FixedContextMenu';\r\n\r\nclass Fixed extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-fixed`);\r\n    this.options = options;\r\n    this.icon = new Icon('freeze');\r\n    this.rowStatus = false;\r\n    this.colStatus = false;\r\n    this.setIcon(this.icon);\r\n    this.fixedContextMenu = new FixedContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  setFixedColStatus(status) {\r\n    const { fixedContextMenu } = this;\r\n    if (status) {\r\n      this.colStatus = true;\r\n      fixedContextMenu.col.setTitle('取消冻结列');\r\n    } else {\r\n      this.colStatus = false;\r\n      fixedContextMenu.col.setTitle('冻结至当前列');\r\n    }\r\n  }\r\n\r\n  setFixedRowStatus(status) {\r\n    const { fixedContextMenu } = this;\r\n    if (status) {\r\n      this.rowStatus = true;\r\n      fixedContextMenu.row.setTitle('取消冻结行');\r\n    } else {\r\n      this.rowStatus = false;\r\n      fixedContextMenu.row.setTitle('冻结至当前行');\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.fixedContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { Fixed };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass Filter extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-filter`);\r\n    this.icon = new Icon('filter');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { Filter };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\n\r\nclass Functions extends DropDownItem {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-format`);\r\n    this.icon = new Icon('functions');\r\n    this.setIcon(this.icon);\r\n  }\r\n\r\n}\r\nexport { Functions };\r\n","import { BaseFont } from '../../../canvas/font/BaseFont';\r\n\r\n/**\r\n *  CellFont\r\n *  @author jerry\r\n */\r\nclass CellFont {\r\n\r\n  /**\r\n   * CellFont\r\n   * @param align\r\n   * @param verticalAlign\r\n   * @param textWrap\r\n   * @param strikethrough\r\n   * @param underline\r\n   * @param color\r\n   * @param name\r\n   * @param size\r\n   * @param bold\r\n   * @param italic\r\n   * @param angle\r\n   * @param direction\r\n   * @param padding\r\n   */\r\n  constructor({\r\n    align = BaseFont.ALIGN.left,\r\n    verticalAlign = BaseFont.VERTICAL_ALIGN.center,\r\n    textWrap = BaseFont.TEXT_WRAP.TRUNCATE,\r\n    strikethrough = false,\r\n    underline = false,\r\n    color = 'rgb(0,0,0)',\r\n    name = 'Arial',\r\n    size = 14,\r\n    bold = false,\r\n    italic = false,\r\n    angle = 0,\r\n    direction = BaseFont.TEXT_DIRECTION.HORIZONTAL,\r\n    padding = 5,\r\n  }) {\r\n    this.align = align;\r\n    this.verticalAlign = verticalAlign;\r\n    this.textWrap = textWrap;\r\n    this.strikethrough = strikethrough;\r\n    this.underline = underline;\r\n    this.color = color;\r\n    this.name = name;\r\n    this.size = size;\r\n    this.bold = bold;\r\n    this.italic = italic;\r\n    this.direction = direction;\r\n    this.angle = angle;\r\n    this.padding = padding;\r\n  }\r\n\r\n  clone() {\r\n    const {\r\n      align,\r\n      verticalAlign,\r\n      textWrap,\r\n      strikethrough,\r\n      underline,\r\n      color,\r\n      name,\r\n      size,\r\n      bold,\r\n      italic,\r\n      angle,\r\n      direction,\r\n      padding,\r\n    } = this;\r\n    return new CellFont({\r\n      align,\r\n      verticalAlign,\r\n      textWrap,\r\n      strikethrough,\r\n      underline,\r\n      color,\r\n      name,\r\n      size,\r\n      bold,\r\n      italic,\r\n      angle,\r\n      direction,\r\n      padding,\r\n    });\r\n  }\r\n\r\n}\r\nCellFont.scaleAdapter = null;\r\n\r\nexport { CellFont };\r\n","import { LINE_TYPE } from '../../../canvas/Line';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XDraw } from '../../../canvas/XDraw';\r\n\r\nlet zIndexID = 0;\r\n\r\n/**\r\n * Border\r\n * @author jerry\r\n */\r\nclass Border {\r\n\r\n  static getZIndex() {\r\n    zIndexID += 1;\r\n    return zIndexID;\r\n  }\r\n\r\n  /**\r\n   * Border\r\n   * @param widthType\r\n   * @param width\r\n   * @param color\r\n   * @param zIndex\r\n   * @param display\r\n   * @param type\r\n   */\r\n  constructor({\r\n    widthType = XDraw.LINE_WIDTH_TYPE.low,\r\n    width = -1,\r\n    color = '#000000',\r\n    zIndex = 0,\r\n    display = false,\r\n    type = LINE_TYPE.SOLID_LINE,\r\n  }) {\r\n    this.$zIndex = zIndex;\r\n    this.$display = display;\r\n    this.$color = color;\r\n    this.$type = type;\r\n    if (width === 1) {\r\n      this.$widthType = XDraw.LINE_WIDTH_TYPE.low;\r\n    } else if (width === 2) {\r\n      this.$widthType = XDraw.LINE_WIDTH_TYPE.medium;\r\n    } else if (width === 3) {\r\n      this.$widthType = XDraw.LINE_WIDTH_TYPE.high;\r\n    } else {\r\n      this.$widthType = widthType;\r\n    }\r\n    if (zIndex > zIndexID) {\r\n      zIndexID = zIndex;\r\n    }\r\n  }\r\n\r\n  get display() {\r\n    return this.$display;\r\n  }\r\n\r\n  set display(value) {\r\n    this.$zIndex = Border.getZIndex();\r\n    this.$display = value;\r\n  }\r\n\r\n  get widthType() {\r\n    return this.$widthType;\r\n  }\r\n\r\n  set widthType(value) {\r\n    this.$zIndex = Border.getZIndex();\r\n    this.$widthType = value;\r\n  }\r\n\r\n  get color() {\r\n    return this.$color;\r\n  }\r\n\r\n  set color(value) {\r\n    this.$zIndex = Border.getZIndex();\r\n    this.$color = value;\r\n  }\r\n\r\n  get type() {\r\n    return this.$type;\r\n  }\r\n\r\n  set type(value) {\r\n    this.$zIndex = Border.getZIndex();\r\n    this.$type = value;\r\n  }\r\n\r\n  get zIndex() {\r\n    return this.$zIndex;\r\n  }\r\n\r\n  set zIndex(value) {\r\n    this.$zIndex = value;\r\n  }\r\n\r\n  equal(target) {\r\n    const widthType = this.widthType === target.widthType;\r\n    const color = this.color === target.color;\r\n    const type = this.type === target.type;\r\n    return color && widthType && type;\r\n  }\r\n\r\n  toJSON() {\r\n    const zIndex = this.$zIndex;\r\n    const display = this.$display;\r\n    const widthType = this.$widthType;\r\n    const color = this.$color;\r\n    const type = this.$type;\r\n    return { zIndex, display, widthType, color, type };\r\n  }\r\n\r\n  priority(border) {\r\n    if (PlainUtils.isUnDef(border)) {\r\n      return -2;\r\n    }\r\n    const origin = this.zIndex;\r\n    const target = border.zIndex;\r\n    if (origin > target) {\r\n      return 1;\r\n    }\r\n    if (target > origin) {\r\n      return -1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n}\r\n\r\nexport { Border };\r\n","import { Border } from './Border';\r\nimport { LINE_TYPE } from '../../../canvas/Line';\r\n\r\n/**\r\n * CellBorder\r\n * @author jerry\r\n */\r\nclass CellBorder {\r\n\r\n  /**\r\n   * CellBorder\r\n   * @param time\r\n   * @param left\r\n   * @param top\r\n   * @param right\r\n   * @param bottom\r\n   */\r\n  constructor({\r\n    left = {},\r\n    bottom = {},\r\n    top = {},\r\n    right = {},\r\n  }) {\r\n    this.left = new Border(left);\r\n    this.bottom = new Border(bottom);\r\n    this.top = new Border(top);\r\n    this.right = new Border(right);\r\n  }\r\n\r\n  hasDouble() {\r\n    const { top, left, right, bottom } = this;\r\n    if (top.type === LINE_TYPE.DOUBLE_LINE) {\r\n      return true;\r\n    }\r\n    if (left.type === LINE_TYPE.DOUBLE_LINE) {\r\n      return true;\r\n    }\r\n    if (right.type === LINE_TYPE.DOUBLE_LINE) {\r\n      return true;\r\n    }\r\n    return bottom.type === LINE_TYPE.DOUBLE_LINE;\r\n  }\r\n\r\n  isDisplay() {\r\n    return this.left.display || this.top.display\r\n      || this.bottom.display || this.right.display;\r\n  }\r\n\r\n  setAllDisplay(display) {\r\n    this.setBDisplay(display);\r\n    this.setLDisplay(display);\r\n    this.setTDisplay(display);\r\n    this.setRDisplay(display);\r\n  }\r\n\r\n  setLDisplay(display) {\r\n    this.left.display = display;\r\n  }\r\n\r\n  setTDisplay(display) {\r\n    this.top.display = display;\r\n  }\r\n\r\n  setRDisplay(display) {\r\n    this.right.display = display;\r\n  }\r\n\r\n  setBDisplay(display) {\r\n    this.bottom.display = display;\r\n  }\r\n\r\n  setAllColor(color) {\r\n    this.setBColor(color);\r\n    this.setLColor(color);\r\n    this.setTColor(color);\r\n    this.setRColor(color);\r\n  }\r\n\r\n  setLColor(color) {\r\n    this.left.color = color;\r\n  }\r\n\r\n  setTColor(color) {\r\n    this.top.color = color;\r\n  }\r\n\r\n  setRColor(color) {\r\n    this.right.color = color;\r\n  }\r\n\r\n  setBColor(color) {\r\n    this.bottom.color = color;\r\n  }\r\n\r\n  setAllWidthType(widthType) {\r\n    this.setBWidthType(widthType);\r\n    this.setLWidthType(widthType);\r\n    this.setTWidthType(widthType);\r\n    this.setRWidthType(widthType);\r\n  }\r\n\r\n  setLWidthType(widthType) {\r\n    this.left.widthType = widthType;\r\n  }\r\n\r\n  setTWidthType(widthType) {\r\n    this.top.widthType = widthType;\r\n  }\r\n\r\n  setRWidthType(widthType) {\r\n    this.right.widthType = widthType;\r\n  }\r\n\r\n  setBWidthType(widthType) {\r\n    this.bottom.widthType = widthType;\r\n  }\r\n\r\n  setAllType(type) {\r\n    this.setBType(type);\r\n    this.setLType(type);\r\n    this.setTType(type);\r\n    this.setRType(type);\r\n  }\r\n\r\n  setLType(type) {\r\n    this.left.type = type;\r\n  }\r\n\r\n  setTType(type) {\r\n    this.top.type = type;\r\n  }\r\n\r\n  setRType(type) {\r\n    this.right.type = type;\r\n  }\r\n\r\n  setBType(type) {\r\n    this.bottom.type = type;\r\n  }\r\n\r\n  updateMaxIndex() {\r\n    const zIndex = Border.getZIndex();\r\n    this.bottom.zIndex = zIndex;\r\n    this.left.zIndex = zIndex;\r\n    this.top.zIndex = zIndex;\r\n    this.right.zIndex = zIndex;\r\n  }\r\n\r\n  clone() {\r\n    const {\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    } = this;\r\n    return new CellBorder({\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport { CellBorder };\r\n","class Rect {\r\n\r\n  /**\r\n   * Rect\r\n   * @param x\r\n   * @param y\r\n   * @param width\r\n   * @param height\r\n   */\r\n  constructor({\r\n    x, y, width, height,\r\n  }) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  /**\r\n   * 计算当前矩形在指定矩形内部的位置\r\n   * @param rect\r\n   * @returns {Rect}\r\n   */\r\n  inRectPosition(rect) {\r\n    return new Rect({\r\n      x: this.x - rect.x,\r\n      y: this.y - rect.y,\r\n      width: this.width,\r\n      height: this.height,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 判断两个矩形是否不发生重合\r\n   * @param {Rect} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  disjoint(other) {\r\n    return this.x > other.x + other.width\r\n      || this.y > this.y + other.height\r\n      || other.x > this.x + this.width\r\n      || other.y > this.y + this.height;\r\n  }\r\n\r\n  /**\r\n   * 扩展尺寸\r\n   * @param size\r\n   * @returns {Rect}\r\n   */\r\n  expandSize(size) {\r\n    this.width += size;\r\n    this.height += size;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 是否包含点\r\n   * @param x\r\n   * @param y\r\n   * @returns {boolean}\r\n   */\r\n  includePoint(x, y) {\r\n    return x >= this.x && x <= this.x + this.width\r\n      && y >= this.y && y <= this.y + this.height;\r\n  }\r\n\r\n  /**\r\n   * 是否包含矩形\r\n   * @param rect\r\n   * @returns {boolean|boolean}\r\n   */\r\n  includeRect(rect) {\r\n    const { x, y, width, height } = rect;\r\n    return this.x <= x && this.x + this.width >= x + width\r\n      && this.y <= y && this.y + this.height >= y + height;\r\n  }\r\n\r\n  /**\r\n   * 复制\r\n   * @returns {Rect}\r\n   */\r\n  clone() {\r\n    const { x, y, width, height } = this;\r\n    return new Rect({ x, y, width, height });\r\n  }\r\n\r\n}\r\n\r\nexport { Rect };\r\n","\r\n/**\r\n * XIconOffset\r\n */\r\nclass XIconOffset {\r\n\r\n  /**\r\n   * XIconOffset\r\n   * @param x\r\n   * @param y\r\n   */\r\n  constructor({ x = 0, y = 0 } = {}) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XIconOffset,\r\n};\r\n","class Crop {\r\n\r\n  constructor({\r\n    rect, draw, offset = 0,\r\n  }) {\r\n    this.rect = rect;\r\n    this.draw = draw;\r\n    this.offset = offset;\r\n  }\r\n\r\n  open() {\r\n    const {\r\n      rect, draw, offset,\r\n    } = this;\r\n    const {\r\n      x, y, width, height,\r\n    } = rect;\r\n    draw.save()\r\n      .rect(x, y, width + offset, height + offset)\r\n      .clip()\r\n      .beginPath();\r\n    return this;\r\n  }\r\n\r\n  close() {\r\n    const { draw } = this;\r\n    draw.restore();\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport { Crop };\r\n","/* global Image console */\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XDraw } from '../../../canvas/XDraw';\r\nimport { Rect } from '../../../canvas/Rect';\r\nimport { XIconOffset } from './XIconOffset';\r\nimport { Crop } from '../../../canvas/Crop';\r\n\r\n/**\r\n * XIcon\r\n * @author jerry\r\n * @date 2020/10/20\r\n */\r\nclass XIcon {\r\n\r\n  /**\r\n   * 多图标初始化\r\n   * @param icons\r\n   * @returns {[]}\r\n   */\r\n  static newInstances(icons = []) {\r\n    const instances = [];\r\n    for (let i = 0; i < icons.length; i += 1) {\r\n      const icon = icons[i];\r\n      instances.push(new XIcon(icon));\r\n    }\r\n    return instances;\r\n  }\r\n\r\n  /**\r\n   * XIcon\r\n   * @param vertical\r\n   * @param horizontal\r\n   * @param type\r\n   * @param image\r\n   * @param focus\r\n   * @param height\r\n   * @param width\r\n   * @param color\r\n   * @param offset\r\n   * @param onDraw\r\n   * @param onLeave\r\n   * @param onMove\r\n   * @param onDown\r\n   * @param onEnter\r\n   */\r\n  constructor({\r\n    vertical = XIcon.ICON_VERTICAL.CENTER,\r\n    horizontal = XIcon.ICON_HORIZONTAL.RIGHT,\r\n    type = XIcon.ICON_TYPE.image,\r\n    image = PlainUtils.Nul,\r\n    focus = null,\r\n    height = 16,\r\n    width = 16,\r\n    color = '#ffffff',\r\n    offset = { x: 0, y: 0 },\r\n    onDraw = () => {},\r\n    onLeave = () => {},\r\n    onMove = () => {},\r\n    onDown = () => {},\r\n    onEnter = () => {},\r\n  }) {\r\n    this.vertical = vertical;\r\n    this.horizontal = horizontal;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.type = type;\r\n    this.image = image;\r\n    this.color = color;\r\n    this.focus = focus;\r\n    this.offset = new XIconOffset(offset);\r\n    this.onLeave = onLeave;\r\n    this.onMove = onMove;\r\n    this.onDraw = onDraw;\r\n    this.onDown = onDown;\r\n    this.onEnter = onEnter;\r\n    this.rect = null;\r\n  }\r\n\r\n  /**\r\n   * 计算绘制坐标\r\n   * @param rect\r\n   * @returns {{x: number, y: number}}\r\n   */\r\n  position(rect) {\r\n    // 图标信息\r\n    const iconHorizontal = this.horizontal;\r\n    const iconVertical = this.vertical;\r\n    const iconOffsetX = XDraw.srcTransformStylePx(this.offset.x);\r\n    const iconOffsetY = XDraw.srcTransformStylePx(this.offset.y);\r\n    const iconWidth = XDraw.srcTransformStylePx(this.width);\r\n    const iconHeight = XDraw.srcTransformStylePx(this.height);\r\n    // 矩形位置\r\n    const rectX = rect.x;\r\n    const rectY = rect.y;\r\n    const rectWidth = rect.width;\r\n    const rectHeight = rect.height;\r\n    // 计算位置\r\n    let px = 0;\r\n    let py = 0;\r\n    switch (iconHorizontal) {\r\n      case XIcon.ICON_HORIZONTAL.CENTER:\r\n        px = (rectX + rectWidth / 2) - (iconWidth / 2);\r\n        break;\r\n      case XIcon.ICON_HORIZONTAL.LEFT:\r\n        px = rectX;\r\n        break;\r\n      case XIcon.ICON_HORIZONTAL.RIGHT:\r\n        px = rectX + rectWidth - iconWidth;\r\n        break;\r\n    }\r\n    switch (iconVertical) {\r\n      case XIcon.ICON_VERTICAL.CENTER:\r\n        py = (rectY + rectHeight / 2) - (iconHeight / 2);\r\n        break;\r\n      case XIcon.ICON_VERTICAL.TOP:\r\n        py = rectY;\r\n        break;\r\n      case XIcon.ICON_VERTICAL.BOTTOM:\r\n        py = rectY + rectHeight - iconHeight;\r\n        break;\r\n    }\r\n    px += iconOffsetX;\r\n    py += iconOffsetY;\r\n    return new Rect({\r\n      x: px, y: py, width: iconWidth, height: iconHeight,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 加载图片信息\r\n   * @param async\r\n   * @param sync\r\n   */\r\n  loadImage({\r\n    load, sync,\r\n  }) {\r\n    const { image, type } = this;\r\n    switch (type) {\r\n      case XIcon.ICON_TYPE.image:\r\n        if (image instanceof Image) {\r\n          sync(image);\r\n        } else {\r\n          const loadImg = new Image();\r\n          loadImg.src = image;\r\n          if (loadImg.complete) {\r\n            this.image = loadImg;\r\n            sync(this.image);\r\n          } else {\r\n            loadImg.onload = () => {\r\n              this.image = loadImg;\r\n              load(loadImg);\r\n            };\r\n            loadImg.onerror = () => {\r\n              // eslint-disable-next-line no-console\r\n              console.error(`图片加载失败${image}`);\r\n            };\r\n          }\r\n        }\r\n        break;\r\n      case XIcon.ICON_TYPE.draw:\r\n        sync();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绘制小图标\r\n   * @param rect\r\n   * @param draw\r\n   */\r\n  drawIcon({\r\n    rect, draw,\r\n  }) {\r\n    const { type } = this;\r\n    this.rect = rect;\r\n    switch (type) {\r\n      case XIcon.ICON_TYPE.image:\r\n        this.drawImage({\r\n          rect, draw,\r\n        });\r\n        break;\r\n      case XIcon.ICON_TYPE.draw:\r\n        this.drawCustom({\r\n          rect, draw,\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 自定义绘制\r\n   * @param rect\r\n   * @param icon\r\n   * @param draw\r\n   */\r\n  drawCustom({\r\n    rect, draw,\r\n  }) {\r\n    this.onDraw({\r\n      rect, draw,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 绘制图片\r\n   * @param rect\r\n   * @param icon\r\n   * @param draw\r\n   */\r\n  drawImage({\r\n    rect, draw,\r\n  }) {\r\n    const image = this.image;\r\n    const color = this.color;\r\n    const positionRect = this.position(rect);\r\n    const {\r\n      x, y, width, height,\r\n    } = positionRect;\r\n    const include = rect.includeRect(positionRect);\r\n    const crop = new Crop({\r\n      rect, draw,\r\n    });\r\n    if (include === false) {\r\n      crop.open();\r\n    }\r\n    if (color) {\r\n      draw.attr({ fillStyle: color });\r\n      draw.fillRect(x, y, width, height);\r\n    }\r\n    draw.drawImage(image, 0, 0, image.width, image.height, x, y, width, height);\r\n    if (include === false) {\r\n      crop.close();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 事件处理\r\n   * @param type\r\n   * @param x\r\n   * @param y\r\n   * @param native\r\n   */\r\n  eventHandle({\r\n    type, x, y, native,\r\n  }) {\r\n    const { rect, focus } = this;\r\n    if (rect) {\r\n      const position = this.position(rect);\r\n      const location = position.inRectPosition(rect);\r\n      const { activate } = focus;\r\n      switch (type) {\r\n        case XIcon.ICON_EVENT_TYPE.MOUSE_DOWN:\r\n          if (location.includePoint(x, y)) {\r\n            focus.setActivate(this);\r\n            this.onDown({\r\n              native, position,\r\n            });\r\n          }\r\n          break;\r\n        case XIcon.ICON_EVENT_TYPE.MOUSE_MOVE:\r\n          if (location.includePoint(x, y)) {\r\n            if (activate !== this) {\r\n              this.onEnter({\r\n                native, position,\r\n              });\r\n            }\r\n            focus.setActivate(this);\r\n            this.onMove({\r\n              native, position,\r\n            });\r\n          } else if (activate) {\r\n            focus.setActivate(null);\r\n            this.onLeave({\r\n              native, position,\r\n            });\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绘制回调\r\n   * @param callback\r\n   */\r\n  setOnDraw(callback) {\r\n    this.onDraw = callback;\r\n  }\r\n\r\n  /**\r\n   * 按下回调\r\n   * @param callback\r\n   */\r\n  setOnDown(callback) {\r\n    this.onDown = callback;\r\n  }\r\n\r\n  /**\r\n   * 移动回调\r\n   * @param callback\r\n   */\r\n  setOnMove(callback) {\r\n    this.onMove = callback;\r\n  }\r\n\r\n  /**\r\n   * 进入回调\r\n   * @param callback\r\n   */\r\n  setOnEnter(callback) {\r\n    this.onEnter = callback;\r\n  }\r\n\r\n  /**\r\n   * 离开回调\r\n   * @param callback\r\n   */\r\n  setOnLeave(callback) {\r\n    this.onLeave = callback;\r\n  }\r\n\r\n  /**\r\n   * 设置焦点元素\r\n   * @param focus\r\n   */\r\n  setFocus(focus) {\r\n    this.focus = focus;\r\n  }\r\n\r\n}\r\nXIcon.ICON_HORIZONTAL = {\r\n  LEFT: 0,\r\n  RIGHT: 1,\r\n  CENTER: 2,\r\n};\r\nXIcon.ICON_VERTICAL = {\r\n  TOP: 3,\r\n  BOTTOM: 4,\r\n  CENTER: 5,\r\n};\r\nXIcon.ICON_TYPE = {\r\n  image: 1,\r\n  custom: 2,\r\n};\r\nXIcon.ICON_EVENT_TYPE = {\r\n  MOUSE_DOWN: 1,\r\n  MOUSE_MOVE: 2,\r\n};\r\n\r\nexport { XIcon };\r\n","import { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { CellFont } from './CellFont';\r\nimport { CellBorder } from './CellBorder';\r\nimport { XIcon } from '../xicon/XIcon';\r\n\r\n/**\r\n * Cell\r\n * @author jerry\r\n */\r\nclass Cell {\r\n\r\n  /**\r\n   * Cell\r\n   * @param text\r\n   * @param background\r\n   * @param format\r\n   * @param fontAttr\r\n   * @param icons\r\n   * @param borderAttr\r\n   * @param contentWidth\r\n   * @param leftSdistWidth\r\n   * @param rightSdistWidth\r\n   * @param contentType\r\n   */\r\n  constructor({\r\n    text = PlainUtils.EMPTY,\r\n    background = PlainUtils.Nul,\r\n    format = 'default',\r\n    borderAttr = {},\r\n    icons = [],\r\n    fontAttr = {},\r\n    contentWidth = 0,\r\n    leftSdistWidth = 0,\r\n    rightSdistWidth = 0,\r\n    contentType = Cell.CONTENT_TYPE.STRING,\r\n  }) {\r\n    this.ruler = null;\r\n    this.background = background;\r\n    this.format = format;\r\n    this.icons = XIcon.newInstances(icons);\r\n    this.borderAttr = new CellBorder(borderAttr);\r\n    this.fontAttr = new CellFont(fontAttr);\r\n    this.contentWidth = contentWidth;\r\n    this.leftSdistWidth = leftSdistWidth;\r\n    this.rightSdistWidth = rightSdistWidth;\r\n    this.contentType = contentType;\r\n    this.convert(text);\r\n  }\r\n\r\n  setContentWidth(contentWidth) {\r\n    this.contentWidth = contentWidth;\r\n  }\r\n\r\n  setFontAttr(fontAttr) {\r\n    this.fontAttr = fontAttr;\r\n  }\r\n\r\n  setBorderAttr(borderAttr) {\r\n    this.borderAttr = borderAttr;\r\n  }\r\n\r\n  setIcons(icons) {\r\n    this.icons = icons;\r\n  }\r\n\r\n  setText(text) {\r\n    this.convert(text);\r\n    this.setContentWidth(0);\r\n    this.setLeftSdistWidth(0);\r\n    this.setRightSdistWidth(0);\r\n  }\r\n\r\n  setRuler(ruler) {\r\n    this.ruler = ruler;\r\n  }\r\n\r\n  setLeftSdistWidth(leftSdistWidth) {\r\n    this.leftSdistWidth = leftSdistWidth;\r\n  }\r\n\r\n  setRightSdistWidth(rightSdistWidth) {\r\n    this.rightSdistWidth = rightSdistWidth;\r\n  }\r\n\r\n  clone() {\r\n    const { background, format, text, fontAttr, borderAttr, contentWidth, icons } = this;\r\n    return new Cell({\r\n      background, format, text, fontAttr, borderAttr, contentWidth, icons,\r\n    });\r\n  }\r\n\r\n  convert(text) {\r\n    const { contentType } = this;\r\n    switch (contentType) {\r\n      case Cell.CONTENT_TYPE.NUMBER:\r\n        this.text = PlainUtils.parseFloat(text);\r\n        break;\r\n      case Cell.CONTENT_TYPE.STRING:\r\n        this.text = text;\r\n        break;\r\n    }\r\n  }\r\n\r\n  toJSON() {\r\n    const { background, format, text, fontAttr, borderAttr, contentWidth, icons } = this;\r\n    return {\r\n      background, format, text, fontAttr, borderAttr, contentWidth, icons,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nCell.CONTENT_TYPE = {\r\n  NUMBER: 0,\r\n  STRING: 1,\r\n};\r\n\r\nexport {\r\n  Cell,\r\n};\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../libs/Element';\r\n\r\nclass ScaleContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(scale) {\r\n    super(`${cssPrefix}-scale-context-menu-item`);\r\n    this.scale = scale;\r\n    this.titleElement = h('div', `${cssPrefix}-scale-context-menu-item-title`);\r\n    this.titleElement.text(`${scale}%`);\r\n    this.children(this.titleElement);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  ScaleContextMenuItem,\r\n};\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { Constant, cssPrefix } from '../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { ScaleContextMenuItem } from './ScaleContextMenuItem';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\n\r\nclass ScaleContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-scale-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new ScaleContextMenuItem(200),\r\n      new ScaleContextMenuItem(150),\r\n      new ScaleContextMenuItem(125),\r\n      new ScaleContextMenuItem(100),\r\n      new ScaleContextMenuItem(90),\r\n      new ScaleContextMenuItem(75),\r\n      new ScaleContextMenuItem(50),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      this.addItem(item);\r\n    });\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.unbind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n        this.update(item.scale);\r\n      });\r\n    });\r\n  }\r\n\r\n  update(scale) {\r\n    const { options } = this;\r\n    options.onUpdate(scale);\r\n    this.close();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  ScaleContextMenu,\r\n};\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { ScaleContextMenu } from './contextmenu/scale/ScaleContextMenu';\r\n\r\nclass Scale extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-scale`);\r\n    this.options = options;\r\n    this.setTitle('100%');\r\n    this.setWidth(50);\r\n    this.setEllipsis();\r\n    this.scaleContextMenu = new ScaleContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.scaleContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Scale,\r\n};\r\n","import { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\nclass RectRange {\r\n\r\n  /**\r\n   * RectRange\r\n   * @param {int} sri 起始行\r\n   * @param {int} sci 起始列\r\n   * @param {int} eri 结束行\r\n   * @param {int} eci 结束列\r\n   * @param {int} w 宽度\r\n   * @param {int} h 高度\r\n   */\r\n  constructor(sri, sci, eri, eci, w = 0, h = 0) {\r\n    this.sri = sri;\r\n    this.sci = sci;\r\n    this.eri = eri;\r\n    this.eci = eci;\r\n    this.w = w;\r\n    this.h = h;\r\n  }\r\n\r\n  /**\r\n   * 循环过滤指定的行列\r\n   * @param {XIteratorBuilder} iteratorBuilder 迭代器\r\n   * @param {Function} cb 回调函数\r\n   * @param {Function} rowFilter 过滤使用的回调函数\r\n   */\r\n  each(iteratorBuilder, cb, rowFilter = () => true) {\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this;\r\n    let ret = false;\r\n    iteratorBuilder.getRowIterator()\r\n      .setBegin(sri)\r\n      .setEnd(eri)\r\n      .setLoop((i) => {\r\n        if (rowFilter(i)) {\r\n          iteratorBuilder.getColIterator()\r\n            .setBegin(sci)\r\n            .setEnd(eci)\r\n            .setLoop((j) => {\r\n              ret = cb(i, j);\r\n              return ret;\r\n            })\r\n            .execute();\r\n        }\r\n        return ret;\r\n      })\r\n      .execute();\r\n  }\r\n\r\n  /**\r\n   * 设置区域\r\n   * @param {int} sri 起始行\r\n   * @param {int} sci 起始列\r\n   * @param {int} eri 结束行\r\n   * @param {int} eci 结束列\r\n   */\r\n  set(sri, sci, eri, eci) {\r\n    this.sri = sri;\r\n    this.sci = sci;\r\n    this.eri = eri;\r\n    this.eci = eci;\r\n  }\r\n\r\n  /**\r\n   * 判断是否跨多个单元格\r\n   * @returns {boolean}\r\n   */\r\n  multiple() {\r\n    return this.eri - this.sri > 0 || this.eci - this.sci > 0;\r\n  }\r\n\r\n  /**\r\n   * 判断当前的区域是否包含指定的行和列\r\n   * 参数支持 ri, ci 和 A10 两种形式\r\n   * @param {[int, int] | String} args 行索引,列索引 或者 字符串\r\n   * @returns {boolean}\r\n   */\r\n  includes(...args) {\r\n    let [ri, ci] = [0, 0];\r\n    if (args.length === 1) {\r\n      [ci, ri] = PlainUtils.expr2xy(args[0]);\r\n    } else if (args.length === 2) {\r\n      [ri, ci] = args;\r\n    }\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this;\r\n    return sri <= ri && ri <= eri && sci <= ci && ci <= eci;\r\n  }\r\n\r\n  /**\r\n   * 判断当前的区域是否包含指定的区域\r\n   * @param {RectRange} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  contains(other) {\r\n    return this.sri <= other.sri\r\n      && this.sci <= other.sci\r\n      && this.eri >= other.eri\r\n      && this.eci >= other.eci;\r\n  }\r\n\r\n  /**\r\n   * 判断当前的区域是否被指定的区域包含\r\n   * @param {RectRange} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  within(other) {\r\n    return this.sri >= other.sri\r\n      && this.sci >= other.sci\r\n      && this.eri <= other.eri\r\n      && this.eci <= other.eci;\r\n  }\r\n\r\n  /**\r\n   * 判断当前的区域和指定的区域不发生重合\r\n   * @param {RectRange} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  disjoint(other) {\r\n    return this.sri > other.eri\r\n      || this.sci > other.eci\r\n      || other.sri > this.eri\r\n      || other.sci > this.eci;\r\n  }\r\n\r\n  /**\r\n   * 判断当前的区域和指定的区域发生重合\r\n   * @param {RectRange} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  intersects(other) {\r\n    return this.sri <= other.eri\r\n      && this.sci <= other.eci\r\n      && other.sri <= this.eri\r\n      && other.sci <= this.eci;\r\n  }\r\n\r\n  /**\r\n   * 返回当前区域和指定区域合并后的新区域\r\n   * @param {RectRange} other 区域\r\n   * @returns {RectRange}\r\n   */\r\n  union(other) {\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this;\r\n    return new RectRange(\r\n      other.sri < sri ? other.sri : sri,\r\n      other.sci < sci ? other.sci : sci,\r\n      other.eri > eri ? other.eri : eri,\r\n      other.eci > eci ? other.eci : eci,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 返回当前区域和指定区域合重合的新区域\r\n   * @param {RectRange} other\r\n   * @returns {RectRange}\r\n   */\r\n  coincide(other) {\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this;\r\n    if (this.disjoint(other)) {\r\n      return RectRange.EMPTY;\r\n    }\r\n    return new RectRange(\r\n      other.sri > sri ? other.sri : sri,\r\n      other.sci > sci ? other.sci : sci,\r\n      other.eri < eri ? other.eri : eri,\r\n      other.eci < eci ? other.eci : eci,\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 当前区域和指定区域重合\r\n   * 返回当前区域和指定区域不重合的部分\r\n   * @param {RectRange} other 区域\r\n   * @returns {Array}\r\n   */\r\n  coincideDifference(other) {\r\n    if (this.coincide(other).equals(RectRange.EMPTY)) {\r\n      return [];\r\n    }\r\n    return this.difference(other);\r\n  }\r\n\r\n  /**\r\n   * 返回当前区域和指定区域不重合的部分\r\n   * @param {RectRange} other 区域\r\n   * @returns {Array}\r\n   */\r\n  difference(other) {\r\n    const ret = [];\r\n    const addRet = (sri, sci, eri, eci) => {\r\n      ret.push(new RectRange(sri, sci, eri, eci));\r\n    };\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this;\r\n    const dsr = other.sri - sri;\r\n    const dsc = other.sci - sci;\r\n    const der = eri - other.eri;\r\n    const dec = eci - other.eci;\r\n    if (dsr > 0) {\r\n      addRet(sri, sci, other.sri - 1, eci);\r\n      if (der > 0) {\r\n        addRet(other.eri + 1, sci, eri, eci);\r\n        if (dsc > 0) {\r\n          addRet(other.sri, sci, other.eri, other.sci - 1);\r\n        }\r\n        if (dec > 0) {\r\n          addRet(other.sri, other.eci + 1, other.eri, eci);\r\n        }\r\n      } else {\r\n        if (dsc > 0) {\r\n          addRet(other.sri, sci, eri, other.sci - 1);\r\n        }\r\n        if (dec > 0) {\r\n          addRet(other.sri, other.eci + 1, eri, eci);\r\n        }\r\n      }\r\n    } else if (der > 0) {\r\n      addRet(other.eri + 1, sci, eri, eci);\r\n      if (dsc > 0) {\r\n        addRet(sri, sci, other.eri, other.sci - 1);\r\n      }\r\n      if (dec > 0) {\r\n        addRet(sri, other.eci + 1, other.eri, eci);\r\n      }\r\n    }\r\n    if (dsc > 0) {\r\n      addRet(sri, sci, eri, other.sci - 1);\r\n      if (dec > 0) {\r\n        addRet(sri, other.eri + 1, eri, eci);\r\n        if (dsr > 0) {\r\n          addRet(sri, other.sci, other.sri - 1, other.eci);\r\n        }\r\n        if (der > 0) {\r\n          addRet(other.sri + 1, other.sci, eri, other.eci);\r\n        }\r\n      } else {\r\n        if (dsr > 0) {\r\n          addRet(sri, other.sci, other.sri - 1, eci);\r\n        }\r\n        if (der > 0) {\r\n          addRet(other.sri + 1, other.sci, eri, eci);\r\n        }\r\n      }\r\n    } else if (dec > 0) {\r\n      addRet(sri, other.eci + 1, eri, eci);\r\n      if (dsr > 0) {\r\n        addRet(sri, sci, other.sri - 1, other.eci);\r\n      }\r\n      if (der > 0) {\r\n        addRet(other.eri + 1, sci, eri, other.eci);\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * 当前区域跨的行列数\r\n   * @returns {number[]}\r\n   */\r\n  size() {\r\n    return [\r\n      this.eri - this.sri + 1,\r\n      this.eci - this.sci + 1,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * 返回边缘区域\r\n   * @returns {{top: RectRange, left: RectRange, bottom: RectRange, right: RectRange}}\r\n   */\r\n  brink() {\r\n    const { sri, eri, sci, eci } = this;\r\n    const top = new RectRange(sri, sci, sri, eci);\r\n    const bottom = new RectRange(eri, sci, eri, eci);\r\n    const right = new RectRange(sri, eci, eri, eci);\r\n    const left = new RectRange(sri, sci, eri, sci);\r\n    return { top, right, bottom, left };\r\n  }\r\n\r\n  /**\r\n   * equals\r\n   * @param {RectRange} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  equals(other) {\r\n    return this.eri === other.eri\r\n      && this.eci === other.eci\r\n      && this.sri === other.sri\r\n      && this.sci === other.sci;\r\n  }\r\n\r\n  /**\r\n   * 克隆\r\n   * @returns {RectRange}\r\n   */\r\n  clone() {\r\n    const {\r\n      sri, sci, eri, eci, w, h,\r\n    } = this;\r\n    return new RectRange(sri, sci, eri, eci, w, h);\r\n  }\r\n\r\n  toString() {\r\n    const {\r\n      sri, sci, eri, eci,\r\n    } = this;\r\n    let ref = PlainUtils.xy2expr(sci, sri);\r\n    if (this.multiple()) {\r\n      ref = `${ref}:${PlainUtils.xy2expr(eci, eri)}`;\r\n    }\r\n    return ref;\r\n  }\r\n\r\n  /**\r\n   * 将 B1:B8 或者 B1 参数转换成新的区域\r\n   * @param {String} ref 行列字符串\r\n   * @returns {RectRange}\r\n   */\r\n  static valueOf(ref) {\r\n    const refs = ref.split(':');\r\n    const [sci, sri] = PlainUtils.expr2xy(refs[0]);\r\n    let [eri, eci] = [sri, sci];\r\n    if (refs.length > 1) {\r\n      [eci, eri] = PlainUtils.expr2xy(refs[1]);\r\n    }\r\n    return new RectRange(sri, sci, eri, eci);\r\n  }\r\n}\r\n\r\nRectRange.EMPTY = new RectRange(-1, -1, -1, -1);\r\n\r\nexport { RectRange };\r\n","import { Widget } from '../../../../libs/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenPart extends Widget {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-x-screen-part ${className}`);\r\n    this.xScreenZone = null;\r\n  }\r\n\r\n  onAttach(xScreenZone) {\r\n    this.xScreenZone = xScreenZone;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenPart,\r\n};\r\n","import { XScreenPart } from './XScreenPart';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenLTPart extends XScreenPart {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-x-screen-lt-part ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenLTPart,\r\n};\r\n","import { XScreenPart } from './XScreenPart';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenTPart extends XScreenPart {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-x-screen-br-part ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenTPart,\r\n};\r\n","import { XScreenPart } from './XScreenPart';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenLPart extends XScreenPart {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-x-screen-l-part ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenLPart,\r\n};\r\n","import { XScreenPart } from './XScreenPart';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenBRPart extends XScreenPart {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-x-screen-br-part ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenBRPart,\r\n};\r\n","import { XScreenLTPart } from '../part/XScreenLTPart';\r\nimport { XScreenTPart } from '../part/XScreenTPart';\r\nimport { XScreenBRPart } from '../part/XScreenBRPart';\r\nimport { XScreenLPart } from '../part/XScreenLPart';\r\n\r\nclass XScreenItem {\r\n\r\n  constructor({\r\n    table,\r\n  } = {}) {\r\n    this.table = table;\r\n    this.lt = new XScreenLTPart();\r\n    this.t = new XScreenTPart();\r\n    this.br = new XScreenBRPart();\r\n    this.l = new XScreenLPart();\r\n    this.xScreen = null;\r\n  }\r\n\r\n  onAdd() {}\r\n\r\n  hide() {\r\n    this.lt.hide();\r\n    this.t.hide();\r\n    this.br.hide();\r\n    this.l.hide();\r\n  }\r\n\r\n  show() {\r\n    this.lt.show();\r\n    this.t.show();\r\n    this.br.show();\r\n    this.l.show();\r\n  }\r\n\r\n  setXScreen(xScreen) {\r\n    this.xScreen = xScreen;\r\n  }\r\n\r\n  destroy() {}\r\n\r\n}\r\n\r\nexport {\r\n  XScreenItem,\r\n};\r\n","import { RectRange } from '../../../tablebase/RectRange';\r\nimport { XScreenItem } from '../XScreenItem';\r\n\r\nclass Display {\r\n\r\n  constructor(viewEyes) {\r\n    this.viewEyes = viewEyes;\r\n  }\r\n\r\n  setDisplay(targetViewRange) {\r\n    const screenView = this.getXScreenViewRange();\r\n    const target = screenView.coincide(targetViewRange);\r\n    const part = this.getPart();\r\n    if (target !== RectRange.EMPTY) {\r\n      part.show();\r\n      return true;\r\n    }\r\n    part.hide();\r\n    return false;\r\n  }\r\n\r\n  getPart() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n}\r\n\r\nclass LTDisplay extends Display {\r\n\r\n  setDisplay(targetViewRange) {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\r\n      return super.setDisplay(targetViewRange);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getPart() {\r\n    const { viewEyes } = this;\r\n    return viewEyes.lt;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\r\n      return xFixedView.getFixedView();\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass TDisplay extends Display {\r\n\r\n  setDisplay(targetViewRange) {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop()) {\r\n      return super.setDisplay(targetViewRange);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getPart() {\r\n    const { viewEyes } = this;\r\n    return viewEyes.t;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop()) {\r\n      const fixedView = xFixedView.getFixedView();\r\n      const scrollView = table.getScrollView();\r\n      return new RectRange(fixedView.sri, scrollView.sci, fixedView.eri, scrollView.eci);\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass BRDisplay extends Display {\r\n\r\n  getPart() {\r\n    const { viewEyes } = this;\r\n    return viewEyes.br;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    return table.getScrollView();\r\n  }\r\n\r\n}\r\n\r\nclass LDisplay extends Display {\r\n\r\n  setDisplay(targetViewRange) {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedLeft()) {\r\n      super.setDisplay(targetViewRange);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getPart() {\r\n    const { viewEyes } = this;\r\n    return viewEyes.l;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedLeft()) {\r\n      const fixedView = xFixedView.getFixedView();\r\n      const scrollView = table.getScrollView();\r\n      return new RectRange(scrollView.sri, fixedView.sci, scrollView.eri, fixedView.eci);\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass XScreenViewEyes extends XScreenItem {\r\n\r\n  constructor({\r\n    table,\r\n  } = {}) {\r\n    super({ table });\r\n    this.ltDisplay = new LTDisplay(this);\r\n    this.tDisplay = new TDisplay(this);\r\n    this.brDisplay = new BRDisplay(this);\r\n    this.lDisplay = new LDisplay(this);\r\n  }\r\n\r\n  setDisplay(targetViewRange) {\r\n    const lt = this.ltDisplay.setDisplay(targetViewRange);\r\n    const t = this.tDisplay.setDisplay(targetViewRange);\r\n    const br = this.brDisplay.setDisplay(targetViewRange);\r\n    const l = this.lDisplay.setDisplay(targetViewRange);\r\n    return lt || t || br || l;\r\n  }\r\n\r\n  setLocal() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  setSizer() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenViewEyes,\r\n};\r\n","import { XScreenViewEyes } from './XScreenViewEyes';\r\nimport { RectRange } from '../../../tablebase/RectRange';\r\n\r\nclass Local {\r\n\r\n  constructor(viewLocal) {\r\n    this.viewLocal = viewLocal;\r\n  }\r\n\r\n  setLeft(targetViewRange) {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { cols } = table;\r\n    const screenView = this.getXScreenViewRange();\r\n    const target = screenView.coincide(targetViewRange);\r\n    const left = target !== RectRange.EMPTY\r\n      ? cols.sectionSumWidth(screenView.sci, target.sci - 1) : 0;\r\n    const part = this.getPart();\r\n    part.offset({ left });\r\n  }\r\n\r\n  setTop(targetViewRange) {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { rows } = table;\r\n    const screenView = this.getXScreenViewRange();\r\n    const target = screenView.coincide(targetViewRange);\r\n    const top = target !== RectRange.EMPTY\r\n      ? rows.sectionSumHeight(screenView.sri, target.sri - 1) : 0;\r\n    const part = this.getPart();\r\n    part.offset({ top });\r\n  }\r\n\r\n  setLocal(targetViewRange) {\r\n    this.setTop(targetViewRange);\r\n    this.setLeft(targetViewRange);\r\n  }\r\n\r\n  getPart() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n}\r\n\r\nclass LTLocal extends Local {\r\n\r\n  setLocal(targetViewRange) {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\r\n      super.setLocal(targetViewRange);\r\n    }\r\n  }\r\n\r\n  getPart() {\r\n    const { viewLocal } = this;\r\n    return viewLocal.lt;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\r\n      return xFixedView.getFixedView();\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass TLocal extends Local {\r\n\r\n  setLocal(targetViewRange) {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop()) {\r\n      super.setLocal(targetViewRange);\r\n    }\r\n  }\r\n\r\n  getPart() {\r\n    const { viewLocal } = this;\r\n    return viewLocal.t;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop()) {\r\n      const fixedView = xFixedView.getFixedView();\r\n      const scrollView = table.getScrollView();\r\n      return new RectRange(fixedView.sri, scrollView.sci, fixedView.eri, scrollView.eci);\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass BRLocal extends Local {\r\n\r\n  getPart() {\r\n    const { viewLocal } = this;\r\n    return viewLocal.br;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    return table.getScrollView();\r\n  }\r\n\r\n}\r\n\r\nclass LLocal extends Local {\r\n\r\n  setLocal(targetViewRange) {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedLeft()) {\r\n      super.setLocal(targetViewRange);\r\n    }\r\n  }\r\n\r\n  getPart() {\r\n    const { viewLocal } = this;\r\n    return viewLocal.l;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedLeft()) {\r\n      const fixedView = xFixedView.getFixedView();\r\n      const scrollView = table.getScrollView();\r\n      return new RectRange(scrollView.sri, fixedView.sci, scrollView.eri, fixedView.eci);\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass XScreenViewLocal extends XScreenViewEyes {\r\n\r\n  constructor({\r\n    table,\r\n  } = {}) {\r\n    super({ table });\r\n    this.tlLocal = new LTLocal(this);\r\n    this.tLocal = new TLocal(this);\r\n    this.brLocal = new BRLocal(this);\r\n    this.lLocal = new LLocal(this);\r\n  }\r\n\r\n  setLocal(view) {\r\n    this.tlLocal.setLocal(view);\r\n    this.tLocal.setLocal(view);\r\n    this.brLocal.setLocal(view);\r\n    this.lLocal.setLocal(view);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenViewLocal,\r\n};\r\n","import { XScreenViewLocal } from './XScreenViewLocal';\r\nimport { RectRange } from '../../../tablebase/RectRange';\r\nimport { XDraw } from '../../../../../canvas/XDraw';\r\n\r\nclass Sizer {\r\n\r\n  constructor(viewSizer) {\r\n    this.viewSizer = viewSizer;\r\n  }\r\n\r\n  setSizer(targetViewRange) {\r\n    const { viewSizer } = this;\r\n    const { table } = viewSizer;\r\n    const { cols, rows } = table;\r\n    const screenView = this.getXScreenViewRange();\r\n    const target = screenView.coincide(targetViewRange);\r\n    const width = cols.rectRangeSumWidth(target);\r\n    const height = rows.rectRangeSumHeight(target);\r\n    const part = this.getPart();\r\n    part.offset({\r\n      width: XDraw.offsetToLineInside(width),\r\n      height: XDraw.offsetToLineInside(height),\r\n    });\r\n  }\r\n\r\n  getPart() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n}\r\n\r\nclass LTSizer extends Sizer {\r\n\r\n  setSizer(targetViewRange) {\r\n    const { viewSizer } = this;\r\n    const { table } = viewSizer;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\r\n      super.setSizer(targetViewRange);\r\n    }\r\n  }\r\n\r\n  getPart() {\r\n    const { viewSizer } = this;\r\n    return viewSizer.lt;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewSizer } = this;\r\n    const { table } = viewSizer;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\r\n      return xFixedView.getFixedView();\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass TSizer extends Sizer {\r\n\r\n  setSizer(targetViewRange) {\r\n    const { viewSizer } = this;\r\n    const { table } = viewSizer;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop()) {\r\n      super.setSizer(targetViewRange);\r\n    }\r\n  }\r\n\r\n  getPart() {\r\n    const { viewSizer } = this;\r\n    return viewSizer.t;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewSizer } = this;\r\n    const { table } = viewSizer;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop()) {\r\n      const fixedView = xFixedView.getFixedView();\r\n      const scrollView = table.getScrollView();\r\n      return new RectRange(fixedView.sri, scrollView.sci, fixedView.eri, scrollView.eci);\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass BRSizer extends Sizer {\r\n\r\n  getPart() {\r\n    const { viewSizer } = this;\r\n    return viewSizer.br;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewSizer } = this;\r\n    const { table } = viewSizer;\r\n    return table.getScrollView();\r\n  }\r\n\r\n}\r\n\r\nclass LSizer extends Sizer {\r\n\r\n  setSizer(targetViewRange) {\r\n    const { viewSizer } = this;\r\n    const { table } = viewSizer;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedLeft()) {\r\n      super.setSizer(targetViewRange);\r\n    }\r\n  }\r\n\r\n  getPart() {\r\n    const { viewSizer } = this;\r\n    return viewSizer.l;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewSizer } = this;\r\n    const { table } = viewSizer;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedLeft()) {\r\n      const fixedView = xFixedView.getFixedView();\r\n      const scrollView = table.getScrollView();\r\n      return new RectRange(scrollView.sri, fixedView.sci, scrollView.eri, fixedView.eci);\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass XScreenViewSizer extends XScreenViewLocal {\r\n\r\n  constructor({\r\n    table,\r\n  } = {}) {\r\n    super({ table });\r\n    this.ltSizer = new LTSizer(this);\r\n    this.tSizer = new TSizer(this);\r\n    this.brSizer = new BRSizer(this);\r\n    this.lSizer = new LSizer(this);\r\n  }\r\n\r\n  setSizer(view) {\r\n    this.ltSizer.setSizer(view);\r\n    this.tSizer.setSizer(view);\r\n    this.brSizer.setSizer(view);\r\n    this.lSizer.setSizer(view);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenViewSizer,\r\n};\r\n","import { RectRange } from '../../../tablebase/RectRange';\r\nimport { XScreenLTPart } from '../../part/XScreenLTPart';\r\nimport { XScreenTPart } from '../../part/XScreenTPart';\r\nimport { XScreenLPart } from '../../part/XScreenLPart';\r\nimport { XScreenBRPart } from '../../part/XScreenBRPart';\r\nimport { XScreenViewSizer } from '../viewdisplay/XScreenViewSizer';\r\n\r\nconst RANGE_OVER_GO = {\r\n  LT: Symbol('lt'),\r\n  T: Symbol('t'),\r\n  BR: Symbol('br'),\r\n  L: Symbol('l'),\r\n  LTT: Symbol('ltt'),\r\n  LTL: Symbol('ltl'),\r\n  BRT: Symbol('brt'),\r\n  BRL: Symbol('brl'),\r\n  ALL: Symbol('all'),\r\n};\r\n\r\nclass XScreenStyleBorderHandle extends XScreenViewSizer {\r\n\r\n  getBorderDisplay(range) {\r\n    const { table } = this;\r\n    const scrollView = table.getScrollView();\r\n    const overGo = this.getOverGo(range);\r\n    const display = {\r\n      bottom: false, left: false, top: false, right: false,\r\n    };\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n        display.bottom = true;\r\n        display.top = true;\r\n        display.left = true;\r\n        display.right = true;\r\n        break;\r\n      case RANGE_OVER_GO.T:\r\n        display.bottom = true;\r\n        display.top = true;\r\n        display.left = range.sci >= scrollView.sci && range.sci <= scrollView.eci;\r\n        display.right = range.eci <= scrollView.eci && range.eci >= scrollView.sci;\r\n        break;\r\n      case RANGE_OVER_GO.BR:\r\n        display.bottom = range.eri <= scrollView.eri && range.eri >= scrollView.sri;\r\n        display.top = range.sri >= scrollView.sri && range.sri <= scrollView.eri;\r\n        display.left = range.sci >= scrollView.sci && range.sci <= scrollView.eci;\r\n        display.right = range.eci <= scrollView.eci && range.eci >= scrollView.sci;\r\n        break;\r\n      case RANGE_OVER_GO.L:\r\n        display.bottom = range.eri <= scrollView.eri && range.eri >= scrollView.sri;\r\n        display.top = range.sri >= scrollView.sri && range.sri <= scrollView.eri;\r\n        display.left = true;\r\n        display.right = true;\r\n        break;\r\n      case RANGE_OVER_GO.LTT:\r\n        display.bottom = true;\r\n        display.top = true;\r\n        display.left = true;\r\n        display.right = range.eci <= scrollView.eci && range.eci >= scrollView.sci;\r\n        break;\r\n      case RANGE_OVER_GO.LTL:\r\n        display.bottom = range.eri <= scrollView.eri && range.eri >= scrollView.sri;\r\n        display.top = true;\r\n        display.left = true;\r\n        display.right = true;\r\n        break;\r\n      case RANGE_OVER_GO.BRT:\r\n        display.bottom = range.eri <= scrollView.eri && range.eri >= scrollView.sri;\r\n        display.top = true;\r\n        display.left = range.sci >= scrollView.sci && range.sci <= scrollView.eci;\r\n        display.right = range.eci <= scrollView.eci && range.eci >= scrollView.sci;\r\n        break;\r\n      case RANGE_OVER_GO.BRL:\r\n        display.bottom = range.eri <= scrollView.eri && range.eri >= scrollView.sri;\r\n        display.top = range.sri >= scrollView.sri && range.sri <= scrollView.eri;\r\n        display.left = true;\r\n        display.right = range.eci <= scrollView.eci && range.eci >= scrollView.sci;\r\n        break;\r\n      case RANGE_OVER_GO.ALL:\r\n        display.bottom = range.eri <= scrollView.eri && range.eri >= scrollView.sri;\r\n        display.top = true;\r\n        display.left = true;\r\n        display.right = range.eci <= scrollView.eci && range.eci >= scrollView.sci;\r\n        break;\r\n    }\r\n    return display;\r\n  }\r\n\r\n  getOverGo(range) {\r\n    const { table } = this;\r\n    const { cols, rows } = table;\r\n    const {\r\n      xFixedView,\r\n    } = table;\r\n    const rowsLen = rows.len - 1;\r\n    const colsLen = cols.len - 1;\r\n    const fixedView = xFixedView.getFixedView();\r\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\r\n      const lt = fixedView;\r\n      const t = new RectRange(fixedView.sri, fixedView.eci + 1, fixedView.eri, colsLen);\r\n      const l = new RectRange(fixedView.eri + 1, fixedView.sci, rowsLen, fixedView.eci);\r\n      const br = new RectRange(fixedView.eri + 1, fixedView.eci + 1, rowsLen, colsLen);\r\n      if (lt.contains(range)) {\r\n        return RANGE_OVER_GO.LT;\r\n      }\r\n      if (t.contains(range)) {\r\n        return RANGE_OVER_GO.T;\r\n      }\r\n      if (br.contains(range)) {\r\n        return RANGE_OVER_GO.BR;\r\n      }\r\n      if (l.contains(range)) {\r\n        return RANGE_OVER_GO.L;\r\n      }\r\n      const ltt = new RectRange(fixedView.sri, fixedView.sci, fixedView.eri, colsLen);\r\n      const ltl = new RectRange(fixedView.sri, fixedView.sci, rowsLen, fixedView.eci);\r\n      const brt = new RectRange(fixedView.sri, fixedView.eci + 1, rowsLen, colsLen);\r\n      const brl = new RectRange(fixedView.eri + 1, fixedView.sci, rowsLen, colsLen);\r\n      if (ltt.contains(range)) {\r\n        return RANGE_OVER_GO.LTT;\r\n      }\r\n      if (ltl.contains(range)) {\r\n        return RANGE_OVER_GO.LTL;\r\n      }\r\n      if (brt.contains(range)) {\r\n        return RANGE_OVER_GO.BRT;\r\n      }\r\n      if (brl.contains(range)) {\r\n        return RANGE_OVER_GO.BRL;\r\n      }\r\n      return RANGE_OVER_GO.ALL;\r\n    } if (xFixedView.hasFixedTop()) {\r\n      const t = new RectRange(fixedView.sri, fixedView.eci, fixedView.eri, colsLen);\r\n      const br = new RectRange(fixedView.eri + 1, fixedView.eci + 1, rowsLen, colsLen);\r\n      if (t.contains(range)) {\r\n        return RANGE_OVER_GO.T;\r\n      }\r\n      if (br.contains(range)) {\r\n        return RANGE_OVER_GO.BR;\r\n      }\r\n      return RANGE_OVER_GO.BRT;\r\n    } if (xFixedView.hasFixedLeft()) {\r\n      const l = new RectRange(fixedView.eri, fixedView.sci, rowsLen, fixedView.eci);\r\n      const br = new RectRange(fixedView.eri + 1, fixedView.eci + 1, rowsLen, colsLen);\r\n      if (l.contains(range)) {\r\n        return RANGE_OVER_GO.L;\r\n      }\r\n      if (br.contains(range)) {\r\n        return RANGE_OVER_GO.BR;\r\n      }\r\n      return RANGE_OVER_GO.BRL;\r\n    }\r\n    return RANGE_OVER_GO.BR;\r\n  }\r\n\r\n  showBBorder(overGo, display) {\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n        this.blt.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.L:\r\n        this.bl.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.T:\r\n        this.bt.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.BR:\r\n        if (display.bottom) this.bbr.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTT:\r\n        this.blt.addClass('show-bottom-border');\r\n        this.bt.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTL:\r\n        if (display.bottom) this.bl.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRT:\r\n        if (display.bottom) this.bbr.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.ALL:\r\n      case RANGE_OVER_GO.BRL:\r\n        if (display.bottom) {\r\n          this.bl.addClass('show-bottom-border');\r\n          this.bbr.addClass('show-bottom-border');\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  showTBorder(overGo, display) {\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n        this.blt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.L:\r\n        this.bl.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.T:\r\n        this.bt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.BR:\r\n        if (display.top) this.bbr.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTT:\r\n        this.blt.addClass('show-top-border');\r\n        this.bt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTL:\r\n        this.blt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRT:\r\n        this.bt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRL:\r\n        if (display.top) {\r\n          this.bl.addClass('show-top-border');\r\n          this.bbr.addClass('show-top-border');\r\n        }\r\n        break;\r\n      case RANGE_OVER_GO.ALL:\r\n        this.blt.addClass('show-top-border');\r\n        this.bt.addClass('show-top-border');\r\n        break;\r\n    }\r\n  }\r\n\r\n  showLBorder(overGo, display) {\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n        this.blt.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.L:\r\n        this.bl.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.T:\r\n        if (display.left) this.bt.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.BR:\r\n        if (display.left) this.bbr.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTT:\r\n        this.blt.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTL:\r\n        this.blt.addClass('show-left-border');\r\n        this.bl.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRT:\r\n        if (display.left) {\r\n          this.bt.addClass('show-left-border');\r\n          this.bbr.addClass('show-left-border');\r\n        }\r\n        break;\r\n      case RANGE_OVER_GO.BRL:\r\n        this.bl.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.ALL:\r\n        this.blt.addClass('show-left-border');\r\n        this.bl.addClass('show-left-border');\r\n        break;\r\n    }\r\n  }\r\n\r\n  showRBorder(overGo, display) {\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n        this.blt.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.L:\r\n        this.bl.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.T:\r\n        if (display.right) this.bt.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.BR:\r\n        if (display.right) this.bbr.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTT:\r\n        if (display.right) this.bt.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTL:\r\n        this.blt.addClass('show-right-border');\r\n        this.bl.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRT:\r\n        if (display.right) {\r\n          this.bt.addClass('show-right-border');\r\n          this.bbr.addClass('show-right-border');\r\n        }\r\n        break;\r\n      case RANGE_OVER_GO.BRL:\r\n        if (display.right) this.bbr.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.ALL:\r\n        if (display.right) {\r\n          this.bt.addClass('show-right-border');\r\n          this.bbr.addClass('show-right-border');\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass XScreenStyleBorderItem extends XScreenStyleBorderHandle {\r\n\r\n  constructor({ table }, className = '') {\r\n    super({ table });\r\n    this.blt = new XScreenLTPart(className);\r\n    this.bt = new XScreenTPart(className);\r\n    this.bl = new XScreenLPart(className);\r\n    this.bbr = new XScreenBRPart(className);\r\n    this.lt.children(this.blt);\r\n    this.t.children(this.bt);\r\n    this.l.children(this.bl);\r\n    this.br.children(this.bbr);\r\n  }\r\n\r\n  hideBorder() {\r\n    [this.bbr, this.bt, this.bl, this.blt].forEach((item) => {\r\n      item.removeClass('show-bottom-border');\r\n      item.removeClass('show-top-border');\r\n      item.removeClass('show-right-border');\r\n      item.removeClass('show-left-border');\r\n    });\r\n  }\r\n\r\n  showBorder(range) {\r\n    const overGo = this.getOverGo(range);\r\n    const display = this.getBorderDisplay(range);\r\n    this.showBBorder(overGo, display);\r\n    this.showTBorder(overGo, display);\r\n    this.showLBorder(overGo, display);\r\n    this.showRBorder(overGo, display);\r\n    return display;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenStyleBorderItem, RANGE_OVER_GO,\r\n};\r\n","import { cssPrefix } from '../../../../../const/Constant';\r\nimport { XScreenStyleBorderItem } from './XScreenStyleBorderItem';\r\n\r\nclass XScreenCssBorderItem extends XScreenStyleBorderItem {\r\n\r\n  constructor({ table }) {\r\n    super({ table }, `${cssPrefix}-part-border-css`);\r\n    this.type = 'solid';\r\n    this.color = '#42a642';\r\n    this.setBorderType(this.type);\r\n  }\r\n\r\n  setBorderType(type) {\r\n    this.type = type;\r\n    this.blt.addClass(type);\r\n    this.bl.addClass(type);\r\n    this.bt.addClass(type);\r\n    this.bbr.addClass(type);\r\n  }\r\n\r\n  setBorderColor(color) {\r\n    this.color = color;\r\n    this.blt.css('border-color', color);\r\n    this.bl.css('border-color', color);\r\n    this.bt.css('border-color', color);\r\n    this.bbr.css('border-color', color);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenCssBorderItem,\r\n};\r\n","import cell from '../../../assets/svg/cell.png';\r\nimport sResize from '../../../assets/svg/s-resize.png';\r\nimport eResize from '../../../assets/svg/e-resize.png';\r\n\r\nclass XTableMousePointer {\r\n\r\n  constructor(table) {\r\n    this.flag = null;\r\n    this.table = table;\r\n  }\r\n\r\n  lock(flag) {\r\n    if (this.flag === null) {\r\n      this.flag = flag;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  set(type, token) {\r\n    if (this.flag !== null) {\r\n      if (this.flag !== token) {\r\n        return;\r\n      }\r\n    }\r\n    const { table } = this;\r\n    switch (type) {\r\n      case 's-resize':\r\n        table.css('cursor', `url(${sResize}) 2.5 7.5,auto`);\r\n        return;\r\n      case 'cell':\r\n        table.css('cursor', `url(${cell}) 7.5 7.5,auto`);\r\n        return;\r\n      case 'e-resize':\r\n        table.css('cursor', `url(${eResize}) 7.5 2.5,auto`);\r\n        return;\r\n    }\r\n    table.css('cursor', type);\r\n  }\r\n\r\n  free(flag) {\r\n    if (this.flag === flag) {\r\n      this.flag = null;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\nXTableMousePointer.KEYS = {\r\n  cell: 'cell',\r\n  crosshair: 'crosshair',\r\n  eResize: 'e-resize',\r\n  sResize: 's-resize',\r\n  grab: '-webkit-grab',\r\n  default: 'default',\r\n  rowResize: 'row-resize',\r\n  colResize: 'col-resize',\r\n  pointer: 'pointer',\r\n};\r\n\r\nexport { XTableMousePointer };\r\n","/* global document */\r\nimport { XScreenCssBorderItem } from '../../xscreen/item/viewborder/XScreenCssBorderItem';\r\nimport { XEvent } from '../../../../libs/XEvent';\r\nimport { Constant, cssPrefix } from '../../../../const/Constant';\r\nimport { RectRange } from '../../tablebase/RectRange';\r\nimport { Widget } from '../../../../libs/Widget';\r\nimport { XTableMousePointer } from '../../XTableMousePointer';\r\nimport { RANGE_OVER_GO } from '../../xscreen/item/viewborder/XScreenStyleBorderItem';\r\n\r\nconst SELECT_LOCAL = {\r\n  LT: Symbol('LT'),\r\n  L: Symbol('L'),\r\n  T: Symbol('T'),\r\n  BR: Symbol('BR'),\r\n};\r\n\r\n/**\r\n * XSelectItem\r\n */\r\nclass XSelectItem extends XScreenCssBorderItem {\r\n\r\n  /**\r\n   * XSelectItem\r\n   * @param table\r\n   */\r\n  constructor(table) {\r\n    super({ table });\r\n    this.selectLocal = SELECT_LOCAL.BR;\r\n    this.display = false;\r\n    this.border = {};\r\n    // 当前显示的操作按钮\r\n    this.activeCorner = null;\r\n    // 用户选中的区域\r\n    this.selectRange = null;\r\n    this.downRange = null;\r\n    this.moveRange = null;\r\n    // 上下左右四个区域阴影\r\n    this.ltElem = new Widget(`${cssPrefix}-x-select-area`);\r\n    this.brElem = new Widget(`${cssPrefix}-x-select-area`);\r\n    this.lElem = new Widget(`${cssPrefix}-x-select-area`);\r\n    this.tElem = new Widget(`${cssPrefix}-x-select-area`);\r\n    // 上下左右高亮区域\r\n    this.ltHighLight = new Widget(`${cssPrefix}-x-select-high-light`);\r\n    this.lHighLight = new Widget(`${cssPrefix}-x-select-high-light`);\r\n    this.tHighLight = new Widget(`${cssPrefix}-x-select-high-light`);\r\n    this.brHighLight = new Widget(`${cssPrefix}-x-select-high-light`);\r\n    // 上下左右4个操作按钮\r\n    this.ltCorner = new Widget(`${cssPrefix}-x-select-corner`);\r\n    this.lCorner = new Widget(`${cssPrefix}-x-select-corner`);\r\n    this.tCorner = new Widget(`${cssPrefix}-x-select-corner`);\r\n    this.brCorner = new Widget(`${cssPrefix}-x-select-corner`);\r\n    // 添加区域阴影\r\n    this.blt.before(this.ltElem);\r\n    this.bl.before(this.lElem);\r\n    this.bt.before(this.tElem);\r\n    this.bbr.before(this.brElem);\r\n    // 添加上下左右高亮区域\r\n    this.blt.before(this.ltHighLight);\r\n    this.bl.before(this.lHighLight);\r\n    this.bt.before(this.tHighLight);\r\n    this.bbr.before(this.brHighLight);\r\n    // 添加操作按钮\r\n    this.blt.after(this.ltCorner);\r\n    this.bl.after(this.lCorner);\r\n    this.bt.after(this.tCorner);\r\n    this.bbr.after(this.brCorner);\r\n    // 设置边框类型\r\n    this.setBorderType('solid');\r\n  }\r\n\r\n  /**\r\n   * 鼠标移动的区域\r\n   * @param x\r\n   * @param y\r\n   */\r\n  moveHandle(x, y) {\r\n    const { table } = this;\r\n    const {\r\n      rows, cols,\r\n    } = table;\r\n    const { downRange, selectLocal } = this;\r\n    const merges = table.getTableMerges();\r\n    const viewRange = table.getScrollView();\r\n    let { ri, ci } = table.getRiCiByXy(x, y);\r\n    if (ri === -1) {\r\n      ri = viewRange.sri;\r\n    }\r\n    if (ci === -1) {\r\n      ci = viewRange.sci;\r\n    }\r\n    if (selectLocal === SELECT_LOCAL.LT) {\r\n      const rect = downRange.union(new RectRange(0, 0, rows.len - 1, cols.len - 1));\r\n      this.moveRange = downRange.union(rect);\r\n      this.selectRange = this.moveRange;\r\n      this.selectLocal = SELECT_LOCAL.LT;\r\n      return;\r\n    }\r\n    if (selectLocal === SELECT_LOCAL.L) {\r\n      const rect = downRange.union(new RectRange(ri, 0, ri, 0));\r\n      this.moveRange = downRange.union(rect);\r\n      this.selectRange = this.moveRange;\r\n      this.selectLocal = SELECT_LOCAL.L;\r\n      return;\r\n    }\r\n    if (selectLocal === SELECT_LOCAL.T) {\r\n      const rect = downRange.union(new RectRange(0, ci, 0, ci));\r\n      this.moveRange = downRange.union(rect);\r\n      this.selectRange = this.moveRange;\r\n      this.selectLocal = SELECT_LOCAL.T;\r\n      return;\r\n    }\r\n    const rect = downRange.union(new RectRange(ri, ci, ri, ci));\r\n    this.moveRange = merges.union(rect);\r\n    this.selectRange = this.moveRange;\r\n    this.selectLocal = SELECT_LOCAL.BR;\r\n  }\r\n\r\n  /**\r\n   * 更新用户选中\r\n   * 的区域\r\n   * @param range\r\n   */\r\n  setRange(range) {\r\n    this.selectRange = range;\r\n    this.selectLocal = SELECT_LOCAL.BR;\r\n    this.offsetHandle();\r\n    this.borderHandle();\r\n    this.cornerHandle();\r\n  }\r\n\r\n  /**\r\n   * 鼠标按下的区域\r\n   * @param x\r\n   * @param y\r\n   */\r\n  downHandle(x, y) {\r\n    const { table } = this;\r\n    const { rows, cols } = table;\r\n    const merges = table.getTableMerges();\r\n    const { ri, ci } = table.getRiCiByXy(x, y);\r\n    if (ri === -1 && ci === -1) {\r\n      this.downRange = new RectRange(0, 0, rows.len - 1, cols.len - 1);\r\n      this.selectRange = this.downRange;\r\n      this.selectLocal = SELECT_LOCAL.LT;\r\n      return;\r\n    }\r\n    if (ri === -1) {\r\n      this.downRange = new RectRange(0, ci, rows.len - 1, ci);\r\n      this.selectRange = this.downRange;\r\n      this.selectLocal = SELECT_LOCAL.T;\r\n      return;\r\n    }\r\n    if (ci === -1) {\r\n      this.downRange = new RectRange(ri, 0, ri, cols.len - 1);\r\n      this.selectRange = this.downRange;\r\n      this.selectLocal = SELECT_LOCAL.L;\r\n      return;\r\n    }\r\n    this.downRange = merges.getFirstIncludes(ri, ci)\r\n      || new RectRange(ri, ci, ri, ci);\r\n    this.selectRange = this.downRange;\r\n    this.selectLocal = SELECT_LOCAL.BR;\r\n  }\r\n\r\n  /**\r\n   * 节点已添加\r\n   * 到屏幕上\r\n   */\r\n  onAdd() {\r\n    const { table } = this;\r\n    this.bind();\r\n    this.hide();\r\n    table.focus.register({ target: this.ltCorner });\r\n    table.focus.register({ target: this.lCorner });\r\n    table.focus.register({ target: this.tCorner });\r\n    table.focus.register({ target: this.brCorner });\r\n  }\r\n\r\n  /**\r\n   * 解绑事件\r\n   */\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件\r\n   */\r\n  bind() {\r\n    const { table } = this;\r\n    const {\r\n      mousePointer, focus,\r\n    } = table;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.offsetHandle();\r\n      this.borderHandle();\r\n      this.cornerHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      this.offsetHandle();\r\n      this.borderHandle();\r\n      this.cornerHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.SCALE_CHANGE, () => {\r\n      this.offsetHandle();\r\n      this.borderHandle();\r\n      this.cornerHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.FIXED_CHANGE, () => {\r\n      this.offsetHandle();\r\n      this.borderHandle();\r\n      this.cornerHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.RESIZE_CHANGE, () => {\r\n      this.offsetHandle();\r\n      this.borderHandle();\r\n      this.cornerHandle();\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\r\n      if (e1.button !== 0) {\r\n        return;\r\n      }\r\n      const { activate } = focus;\r\n      const { target } = activate;\r\n      if (target !== table) {\r\n        return;\r\n      }\r\n      const { x, y } = table.eventXy(e1);\r\n      this.downHandle(x, y);\r\n      this.offsetHandle();\r\n      this.borderHandle();\r\n      this.cornerHandle();\r\n      const { selectLocal } = this;\r\n      switch (selectLocal) {\r\n        case SELECT_LOCAL.L:\r\n          mousePointer.lock(XSelectItem);\r\n          mousePointer.set(XTableMousePointer.KEYS.eResize, XSelectItem);\r\n          break;\r\n        case SELECT_LOCAL.T:\r\n          mousePointer.lock(XSelectItem);\r\n          mousePointer.set(XTableMousePointer.KEYS.sResize, XSelectItem);\r\n          break;\r\n      }\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.SELECT_DOWN);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.SELECT_CHANGE);\r\n      XEvent.mouseMoveUp(document, (e2) => {\r\n        const { x, y } = table.eventXy(e2);\r\n        this.moveHandle(x, y);\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n        this.cornerHandle();\r\n        table.trigger(Constant.TABLE_EVENT_TYPE.SELECT_CHANGE);\r\n      }, () => {\r\n        switch (selectLocal) {\r\n          case SELECT_LOCAL.L:\r\n          case SELECT_LOCAL.T:\r\n            mousePointer.free(XSelectItem);\r\n            break;\r\n        }\r\n        table.trigger(Constant.TABLE_EVENT_TYPE.SELECT_OVER);\r\n      });\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\r\n      this.offsetHandle();\r\n      this.borderHandle();\r\n      this.cornerHandle();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 处理边框\r\n   * 是否显示\r\n   */\r\n  borderHandle() {\r\n    const { selectRange, display } = this;\r\n    if (selectRange && display) {\r\n      this.hideBorder();\r\n      this.border = this.showBorder(selectRange);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 处理选中区域\r\n   * 的位置和大小\r\n   */\r\n  offsetHandle() {\r\n    const { selectRange } = this;\r\n    if (selectRange && this.setDisplay(selectRange)) {\r\n      this.display = true;\r\n      this.setSizer(selectRange);\r\n      this.setLocal(selectRange);\r\n    } else {\r\n      this.display = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 处理操作按钮\r\n   * 是否显示\r\n   */\r\n  cornerHandle() {\r\n    const {\r\n      selectRange, selectLocal, display, border,\r\n    } = this;\r\n    if (selectRange && display) {\r\n      const overGo = this.getOverGo(selectRange);\r\n      this.ltCorner.hide();\r\n      this.tCorner.hide();\r\n      this.lCorner.hide();\r\n      this.brCorner.hide();\r\n      switch (selectLocal) {\r\n        case SELECT_LOCAL.LT:\r\n        case SELECT_LOCAL.L:\r\n        case SELECT_LOCAL.BR:\r\n          if (border.bottom === false) {\r\n            return;\r\n          }\r\n      }\r\n      this.brCorner.removeClass('br-pos');\r\n      this.lCorner.removeClass('br-pos');\r\n      this.tCorner.removeClass('br-pos');\r\n      this.ltCorner.removeClass('br-pos');\r\n      this.brCorner.removeClass('tr-pos');\r\n      this.lCorner.removeClass('tr-pos');\r\n      this.tCorner.removeClass('tr-pos');\r\n      this.ltCorner.removeClass('tr-pos');\r\n      this.brCorner.removeClass('bl-pos');\r\n      this.lCorner.removeClass('bl-pos');\r\n      this.tCorner.removeClass('bl-pos');\r\n      this.ltCorner.removeClass('bl-pos');\r\n      switch (selectLocal) {\r\n        case SELECT_LOCAL.L:\r\n          this.brCorner.addClass('bl-pos');\r\n          this.lCorner.addClass('bl-pos');\r\n          this.tCorner.addClass('bl-pos');\r\n          this.ltCorner.addClass('bl-pos');\r\n          break;\r\n        case SELECT_LOCAL.T:\r\n          this.brCorner.addClass('tr-pos');\r\n          this.lCorner.addClass('tr-pos');\r\n          this.tCorner.addClass('tr-pos');\r\n          this.ltCorner.addClass('tr-pos');\r\n          break;\r\n        case SELECT_LOCAL.LT:\r\n        case SELECT_LOCAL.BR:\r\n          this.brCorner.addClass('br-pos');\r\n          this.lCorner.addClass('br-pos');\r\n          this.tCorner.addClass('br-pos');\r\n          this.ltCorner.addClass('br-pos');\r\n          break;\r\n      }\r\n      switch (overGo) {\r\n        case RANGE_OVER_GO.LT:\r\n          this.ltCorner.show();\r\n          this.tCorner.hide();\r\n          this.brCorner.hide();\r\n          this.lCorner.hide();\r\n          this.activeCorner = this.ltCorner;\r\n          break;\r\n        case RANGE_OVER_GO.LTT:\r\n        case RANGE_OVER_GO.T:\r\n          this.ltCorner.hide();\r\n          this.tCorner.show();\r\n          this.brCorner.hide();\r\n          this.lCorner.hide();\r\n          this.activeCorner = this.tCorner;\r\n          break;\r\n        case RANGE_OVER_GO.ALL:\r\n        case RANGE_OVER_GO.BRL:\r\n        case RANGE_OVER_GO.BRT:\r\n        case RANGE_OVER_GO.BR:\r\n          this.ltCorner.hide();\r\n          this.tCorner.hide();\r\n          this.brCorner.show();\r\n          this.lCorner.hide();\r\n          this.activeCorner = this.brCorner;\r\n          break;\r\n        case RANGE_OVER_GO.LTL:\r\n        case RANGE_OVER_GO.L:\r\n          this.ltCorner.hide();\r\n          this.tCorner.hide();\r\n          this.brCorner.hide();\r\n          this.lCorner.show();\r\n          this.activeCorner = this.lCorner;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XSelectItem, SELECT_LOCAL,\r\n};\r\n","import { Widget } from '../../libs/Widget';\r\nimport { Constant, cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\nimport { DragPanel } from '../dragpanel/DragPanel';\r\nimport { XEvent } from '../../libs/XEvent';\r\n\r\nclass Alert extends Widget {\r\n\r\n  constructor({\r\n    title = '提示',\r\n    message = '',\r\n  }) {\r\n    super(`${cssPrefix}-alert`);\r\n    // 创建 UI\r\n    this.closeEle = h('div', `${cssPrefix}-alert-close`);\r\n    this.titleEle = h('div', `${cssPrefix}-alert-title`);\r\n    this.contentEle = h('div', `${cssPrefix}-alert-content`);\r\n    this.okEle = h('div', `${cssPrefix}-alert-ok`);\r\n    this.buttonsEle = h('div', `${cssPrefix}-alert-buttons`);\r\n    // 显示内容消息\r\n    this.titleEle.html(title);\r\n    this.contentEle.html(message);\r\n    this.okEle.html('确定');\r\n    // 添加UI\r\n    this.buttonsEle.children(this.okEle);\r\n    this.children(this.closeEle);\r\n    this.children(this.titleEle);\r\n    this.children(this.contentEle);\r\n    this.children(this.buttonsEle);\r\n    // 拖拽组件\r\n    this.dragPanel = new DragPanel().children(this);\r\n  }\r\n\r\n  unbind() {\r\n    const { okEle } = this;\r\n    XEvent.unbind(okEle);\r\n  }\r\n\r\n  bind() {\r\n    const { okEle } = this;\r\n    XEvent.bind(okEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  open() {\r\n    const { dragPanel } = this;\r\n    dragPanel.open();\r\n    this.bind();\r\n  }\r\n\r\n  close() {\r\n    const { dragPanel } = this;\r\n    dragPanel.close();\r\n    this.destroy();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.dragPanel.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Alert,\r\n};\r\n","/* global document */\r\nimport { Widget } from '../../libs/Widget';\r\nimport { h } from '../../libs/Element';\r\nimport { cssPrefix } from '../../const/Constant';\r\n\r\nclass Mask extends Widget {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-mask`);\r\n    this.root = h(document.body);\r\n    this.status = false;\r\n    this.css('position', 'absolute');\r\n    this.css('background', 'rgba(0,0,0,0.3)');\r\n  }\r\n\r\n  setLeft(left) {\r\n    this.offset({ left });\r\n    return this;\r\n  }\r\n\r\n  setTop(top) {\r\n    this.offset({ top });\r\n    return this;\r\n  }\r\n\r\n  setHeight(height) {\r\n    this.offset({ height });\r\n    return this;\r\n  }\r\n\r\n  setWidth(width) {\r\n    this.offset({ width });\r\n    return this;\r\n  }\r\n\r\n  setOpacity(val) {\r\n    this.css('opacity', val);\r\n    return this;\r\n  }\r\n\r\n  open() {\r\n    if (this.status === false) {\r\n      this.root.children(this);\r\n      this.status = true;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  close() {\r\n    if (this.status === true) {\r\n      this.root.remove(this);\r\n      this.status = false;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  setRoot(element) {\r\n    if (element.el) {\r\n      element = h(element.el);\r\n    } else {\r\n      element = h(element);\r\n    }\r\n    this.root = element;\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Mask,\r\n};\r\n","import { ELContextMenuItem } from '../contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\n\r\nclass OrderAZ extends ELContextMenuItem {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-filter-data-menu-item ${cssPrefix}-order-az`);\r\n    this.titleElement = h('div', `${cssPrefix}-filter-data-menu-item-title`);\r\n    this.titleElement.text('以A->Z的顺序排序');\r\n    this.children(this.titleElement);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  OrderAZ,\r\n};\r\n","import { ELContextMenuItem } from '../contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\n\r\nclass OrderZA extends ELContextMenuItem {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-filter-data-menu-item ${cssPrefix}-order-za`);\r\n    this.titleElement = h('div', `${cssPrefix}-filter-data-menu-item-title`);\r\n    this.titleElement.text('以Z->A的顺序排序');\r\n    this.children(this.titleElement);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  OrderZA,\r\n};\r\n","import { ELContextMenu } from '../../contextmenu/ELContextMenu';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XEvent } from '../../../libs/XEvent';\r\n\r\nclass SelectContextMenu extends ELContextMenu {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-form-select-menu`, PlainUtils.mergeDeep({\r\n      autoHeight: true,\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [];\r\n    this.elPopUp.offset({\r\n      width: 200,\r\n    });\r\n  }\r\n\r\n  unbind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.unbind(item);\r\n    });\r\n  }\r\n\r\n  bind(item) {\r\n    XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdate(item);\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  addItem(item) {\r\n    this.bind(item);\r\n    this.items.push(item);\r\n    this.children(item);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  SelectContextMenu,\r\n};\r\n","import { ELContextMenuItem } from '../../contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { h } from '../../../libs/Element';\r\n\r\nclass SelectContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor({\r\n    text = '', value = '',\r\n  }) {\r\n    super(`${cssPrefix}-form-select-menu-item`);\r\n    this.value = value;\r\n    this.text = text;\r\n    this.textEle = h('div', `${cssPrefix}-form-select-menu-item-title`);\r\n    this.textEle.text(text);\r\n    this.children(this.textEle);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  SelectContextMenuItem,\r\n};\r\n","import { Widget } from '../../../libs/Widget';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { XEvent } from '../../../libs/XEvent';\r\nimport { h } from '../../../libs/Element';\r\nimport { ELContextMenuDivider } from '../../contextmenu/ELContextMenuDivider';\r\nimport { SelectContextMenu } from './SelectContextMenu';\r\nimport { SelectContextMenuItem } from './SelectContextMenuItem';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\n/**\r\n * Select\r\n */\r\nclass Select extends Widget {\r\n\r\n  /**\r\n   * Select\r\n   */\r\n  constructor() {\r\n    super(`${cssPrefix}-form-select`);\r\n    this.selectValue = PlainUtils.Nul;\r\n    // 文本和图标\r\n    this.selectText = h('div', `${cssPrefix}-form-select-text`);\r\n    this.selectIcon = h('div', `${cssPrefix}-form-select-icon`);\r\n    this.children(this.selectText);\r\n    this.children(this.selectIcon);\r\n    // 上下文菜单\r\n    this.contextMenu = new SelectContextMenu({\r\n      el: this,\r\n      onUpdate: (item) => {\r\n        const { value } = item;\r\n        this.setSelect(value);\r\n      },\r\n    });\r\n    this.bind();\r\n  }\r\n\r\n  /**\r\n   * 卸载事件\r\n   */\r\n  unbind() {\r\n    XEvent.unbind(this);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件\r\n   */\r\n  bind() {\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      if (this.contextMenu.isClose()) {\r\n        this.contextMenu.open();\r\n      } else {\r\n        this.contextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 获取当前选择的值\r\n   * @returns {null}\r\n   */\r\n  getValue() {\r\n    return this.selectValue;\r\n  }\r\n\r\n  /**\r\n   * 设置选择的值\r\n   * @param value\r\n   */\r\n  setSelect(value) {\r\n    const { contextMenu, selectText } = this;\r\n    const { items } = contextMenu;\r\n    const find = items.find(item => item.value && item.value === value);\r\n    if (find) {\r\n      selectText.html(`&nbsp;${find.text}`);\r\n      this.selectValue = find.value;\r\n      this.trigger(Constant.FORM_EVENT_TYPE.FORM_SELECT_CHANGE, {\r\n        item: find,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 添加新的选项\r\n   * @param text\r\n   * @param value\r\n   */\r\n  addValue({\r\n    text, value,\r\n  }) {\r\n    const item = new SelectContextMenuItem({ text, value });\r\n    this.contextMenu.addItem(item);\r\n  }\r\n\r\n  /**\r\n   * 获取分隔线\r\n   */\r\n  addDivider() {\r\n    const item = new ELContextMenuDivider();\r\n    this.contextMenu.addItem(item);\r\n  }\r\n\r\n  /**\r\n   * 组件销毁\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.contextMenu.close();\r\n    this.contextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Select,\r\n};\r\n","import { Widget } from '../../../libs/Widget';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { h } from '../../../libs/Element';\r\nimport { XEvent } from '../../../libs/XEvent';\r\n\r\nclass PlainInput extends Widget {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-form-plain-input`);\r\n    this.inputWrapEle = h('div', `${cssPrefix}-form-input-wrap`);\r\n    this.inputInnerEle = h('div', `${cssPrefix}-form-input-inner`);\r\n    this.inputEle = h('input', `${cssPrefix}-form-input-source`);\r\n    this.inputInnerEle.children(this.inputEle);\r\n    this.inputWrapEle.children(this.inputInnerEle);\r\n    this.children(this.inputWrapEle);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { inputEle } = this;\r\n    XEvent.unbind(inputEle);\r\n  }\r\n\r\n  bind() {\r\n    const { inputEle } = this;\r\n    XEvent.bind(inputEle, Constant.SYSTEM_EVENT_TYPE.INPUT, () => {\r\n      this.setValue(inputEle.val());\r\n    });\r\n  }\r\n\r\n  setValue(value) {\r\n    this.inputEle.val(value);\r\n    this.trigger(Constant.FORM_EVENT_TYPE.PLAIN_INPUT_CHANGE, {\r\n      value: this.inputEle.val(),\r\n    });\r\n  }\r\n\r\n  getValue() {\r\n    return this.inputEle.val();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  PlainInput,\r\n};\r\n","import { ELContextMenuItem } from '../contextmenu/ELContextMenuItem';\r\nimport { Constant, cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\nimport { Select } from '../form/select/Select';\r\nimport { XEvent } from '../../libs/XEvent';\r\nimport { PlainInput } from '../form/input/PlainInput';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\n\r\n/**\r\n * IFFilter\r\n */\r\nclass IFFilter extends ELContextMenuItem {\r\n\r\n  /**\r\n   * IFFilter\r\n   */\r\n  constructor() {\r\n    super(`${cssPrefix}-filter-data-menu-item ${cssPrefix}-if-filter`);\r\n    this.status = false;\r\n    this.type = IFFilter.IF_TYPE.NOT;\r\n    this.value = PlainUtils.EMPTY;\r\n    // 标题\r\n    this.titleEle = h('div', `${cssPrefix}-if-filter-title`);\r\n    this.titleTextEle = h('span', `${cssPrefix}-if-filter-title-text`);\r\n    this.titleIconEle = h('span', `${cssPrefix}-if-filter-title-icon`);\r\n    this.titleTextEle.text('条件过滤');\r\n    this.titleEle.children(this.titleIconEle);\r\n    this.titleEle.children(this.titleTextEle);\r\n    this.children(this.titleEle);\r\n    // 条件类型\r\n    this.selectEleBox = h('div', `${cssPrefix}-if-filter-select-box`);\r\n    this.selectEle = new Select();\r\n    this.selectEleBox.children(this.selectEle);\r\n    this.children(this.selectEleBox);\r\n    // 条件值\r\n    this.valueInputEleBox = h('div', `${cssPrefix}-if-filter-value-input-box`);\r\n    this.valueInput = new PlainInput();\r\n    this.valueInputEleBox.children(this.valueInput);\r\n    this.children(this.valueInputEleBox);\r\n    // 搜索类型\r\n    this.selectEle.addValue({ text: '无', value: IFFilter.IF_TYPE.NOT });\r\n    this.selectEle.addDivider();\r\n    this.selectEle.addValue({ text: '为空', value: IFFilter.IF_TYPE.CT_EMPTY });\r\n    this.selectEle.addValue({ text: '不为空', value: IFFilter.IF_TYPE.CT_NOT_EMPTY });\r\n    this.selectEle.addDivider();\r\n    this.selectEle.addValue({ text: '文本包含', value: IFFilter.IF_TYPE.STR_INCLUDE });\r\n    this.selectEle.addValue({ text: '文本不包含', value: IFFilter.IF_TYPE.STR_NOT_INCLUDE });\r\n    this.selectEle.addValue({ text: '文本开头', value: IFFilter.IF_TYPE.STR_START });\r\n    this.selectEle.addValue({ text: '文本结尾', value: IFFilter.IF_TYPE.STR_END });\r\n    this.selectEle.addValue({ text: '文本相符', value: IFFilter.IF_TYPE.STR_EQ });\r\n    this.selectEle.addDivider();\r\n    this.selectEle.addValue({ text: '日期为', value: IFFilter.IF_TYPE.DAT_EQ });\r\n    this.selectEle.addValue({ text: '日期超前', value: IFFilter.IF_TYPE.DAT_BEFORE });\r\n    this.selectEle.addValue({ text: '日期滞后', value: IFFilter.IF_TYPE.DAT_AFTER });\r\n    this.selectEle.addDivider();\r\n    this.selectEle.addValue({ text: '数字大于', value: IFFilter.IF_TYPE.NUM_BEFORE });\r\n    this.selectEle.addValue({ text: '数字大于等于', value: IFFilter.IF_TYPE.NUM_BEFORE_EQ });\r\n    this.selectEle.addValue({ text: '数字小于', value: IFFilter.IF_TYPE.NUM_AFTER });\r\n    this.selectEle.addValue({ text: '数字小于等于', value: IFFilter.IF_TYPE.NUM_AFTER_EQ });\r\n    this.selectEle.addValue({ text: '数字等于', value: IFFilter.IF_TYPE.NUM_EQ });\r\n    this.selectEle.addValue({ text: '数字不等于', value: IFFilter.IF_TYPE.NUM_NOT_EQ });\r\n    this.removeClass('hover');\r\n    this.bind();\r\n    this.hide();\r\n    this.selectEle.setSelect(IFFilter.IF_TYPE.NOT);\r\n  }\r\n\r\n  /**\r\n   * 设置筛选条件\r\n   * @param value\r\n   */\r\n  setValue(value) {\r\n    if (PlainUtils.isBlank(value)) {\r\n      value = PlainUtils.EMPTY;\r\n    }\r\n    this.valueInput.setValue(value);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件\r\n   * 处理程序\r\n   */\r\n  bind() {\r\n    const { titleEle, selectEle, valueInput } = this;\r\n    XEvent.bind(selectEle, Constant.FORM_EVENT_TYPE.FORM_SELECT_CHANGE, (e) => {\r\n      const { detail } = e;\r\n      const { item } = detail;\r\n      const { value } = item;\r\n      this.type = value;\r\n      this.switchInput();\r\n    });\r\n    XEvent.bind(valueInput, Constant.FORM_EVENT_TYPE.PLAIN_INPUT_CHANGE, (e) => {\r\n      const { detail } = e;\r\n      const { value } = detail;\r\n      this.value = value;\r\n    });\r\n    XEvent.bind(titleEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      if (this.status) {\r\n        this.hide();\r\n      } else {\r\n        this.show();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 卸载事件\r\n   * 处理程序\r\n   */\r\n  unbind() {\r\n    const { titleEle, selectEle } = this;\r\n    XEvent.unbind(titleEle);\r\n    XEvent.unbind(selectEle);\r\n  }\r\n\r\n  /**\r\n   * 设置条件类型\r\n   * @param type\r\n   */\r\n  setType(type) {\r\n    if (PlainUtils.isBlank(type)) {\r\n      type = IFFilter.IF_TYPE.NOT;\r\n    }\r\n    this.selectEle.setSelect(type);\r\n  }\r\n\r\n  /**\r\n   * 切换值输入\r\n   */\r\n  switchInput() {\r\n    const { type, valueInputEleBox } = this;\r\n    valueInputEleBox.hide();\r\n    switch (type) {\r\n      case IFFilter.IF_TYPE.STR_NOT_INCLUDE:\r\n      case IFFilter.IF_TYPE.STR_INCLUDE:\r\n      case IFFilter.IF_TYPE.STR_EQ:\r\n      case IFFilter.IF_TYPE.STR_START:\r\n      case IFFilter.IF_TYPE.STR_END:\r\n      case IFFilter.IF_TYPE.DAT_EQ:\r\n      case IFFilter.IF_TYPE.DAT_BEFORE:\r\n      case IFFilter.IF_TYPE.DAT_AFTER:\r\n      case IFFilter.IF_TYPE.NUM_BEFORE:\r\n      case IFFilter.IF_TYPE.NUM_BEFORE_EQ:\r\n      case IFFilter.IF_TYPE.NUM_AFTER:\r\n      case IFFilter.IF_TYPE.NUM_AFTER_EQ:\r\n      case IFFilter.IF_TYPE.NUM_EQ:\r\n      case IFFilter.IF_TYPE.NUM_NOT_EQ:\r\n        valueInputEleBox.show();\r\n        break;\r\n      default:\r\n        valueInputEleBox.hide();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取条件类型\r\n   */\r\n  getType() {\r\n    return this.type;\r\n  }\r\n\r\n  /**\r\n   * 获取筛选条件\r\n   */\r\n  getValue() {\r\n    return this.value;\r\n  }\r\n\r\n  /**\r\n   * 隐藏条件搜索\r\n   * @returns {IFFilter}\r\n   */\r\n  hide() {\r\n    this.titleIconEle.removeClass('active');\r\n    this.status = false;\r\n    this.selectEleBox.hide();\r\n    this.valueInputEleBox.hide();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 显示条件搜索\r\n   * @returns {IFFilter}\r\n   */\r\n  show() {\r\n    const { type } = this;\r\n    this.titleIconEle.addClass('active');\r\n    this.status = true;\r\n    this.selectEleBox.show();\r\n    this.setType(type);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 是否符合筛选条件\r\n   * @param type\r\n   * @param value\r\n   */\r\n  qualified(type, value) {\r\n    switch (type) {\r\n      case IFFilter.IF_TYPE.NOT: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.CT_NOT_EMPTY: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.CT_EMPTY: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.STR_NOT_INCLUDE: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.STR_INCLUDE: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.STR_EQ: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.STR_START: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.STR_END: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.DAT_EQ: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.DAT_BEFORE: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.DAT_AFTER: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.NUM_BEFORE: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.NUM_BEFORE_EQ: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.NUM_AFTER: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.NUM_AFTER_EQ: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.NUM_EQ: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.NUM_NOT_EQ: {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.selectEle.destroy();\r\n  }\r\n\r\n}\r\nIFFilter.IF_TYPE = {\r\n  NOT: 1,\r\n  CT_NOT_EMPTY: 2,\r\n  CT_EMPTY: 3,\r\n  STR_NOT_INCLUDE: 4,\r\n  STR_INCLUDE: 5,\r\n  STR_EQ: 6,\r\n  STR_START: 7,\r\n  STR_END: 8,\r\n  DAT_EQ: 9,\r\n  DAT_BEFORE: 10,\r\n  DAT_AFTER: 11,\r\n  NUM_BEFORE: 12,\r\n  NUM_BEFORE_EQ: 13,\r\n  NUM_AFTER: 14,\r\n  NUM_AFTER_EQ: 15,\r\n  NUM_EQ: 16,\r\n  NUM_NOT_EQ: 17,\r\n};\r\n\r\nexport {\r\n  IFFilter,\r\n};\r\n","import { h } from '../../../libs/Element';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { Widget } from '../../../libs/Widget';\r\nimport { XEvent } from '../../../libs/XEvent';\r\n\r\nclass SearchInput extends Widget {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-form-search-input`);\r\n    this.inputWrapEle = h('div', `${cssPrefix}-form-input-wrap`);\r\n    this.inputInnerEle = h('div', `${cssPrefix}-form-input-inner`);\r\n    this.inputEle = h('input', `${cssPrefix}-form-input-source`);\r\n    this.searchEle = h('div', `${cssPrefix}-form-input-search`);\r\n    this.inputInnerEle.children(this.inputEle);\r\n    this.inputWrapEle.children(this.inputInnerEle);\r\n    this.children(this.inputWrapEle);\r\n    this.children(this.searchEle);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { searchEle, inputEle } = this;\r\n    XEvent.unbind(searchEle);\r\n    XEvent.unbind(inputEle);\r\n  }\r\n\r\n  bind() {\r\n    const { searchEle, inputEle } = this;\r\n    XEvent.bind(searchEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.setValue(inputEle.val());\r\n    });\r\n    XEvent.bind(inputEle, Constant.SYSTEM_EVENT_TYPE.INPUT, () => {\r\n      this.setValue(inputEle.val());\r\n    });\r\n  }\r\n\r\n  getValue() {\r\n    const { inputEle } = this;\r\n    return inputEle.val();\r\n  }\r\n\r\n  setValue(value) {\r\n    const { inputEle } = this;\r\n    inputEle.val(value);\r\n    this.trigger(Constant.FORM_EVENT_TYPE.SEARCH_INPUT_CHANGE, {\r\n      value: inputEle.val(),\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  SearchInput,\r\n};\r\n","import { ELContextMenuItem } from '../../contextmenu/ELContextMenuItem';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { h } from '../../../libs/Element';\r\nimport { SearchInput } from '../../form/input/SearchInput';\r\nimport { w } from '../../../libs/Widget';\r\nimport { XEvent } from '../../../libs/XEvent';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\n/**\r\n * ValueFilter\r\n */\r\nclass ValueFilter extends ELContextMenuItem {\r\n\r\n  /**\r\n   * ValueFilter\r\n   */\r\n  constructor() {\r\n    super(`${cssPrefix}-filter-data-menu-item ${cssPrefix}-value-filter`);\r\n    this.filterExp = null;\r\n    this.items = [];\r\n    this.filters = [];\r\n    this.status = true;\r\n    this.value = PlainUtils.EMPTY;\r\n    // 值过滤标题\r\n    this.titleEle = h('div', `${cssPrefix}-value-filter-title`);\r\n    this.titleTextEle = h('span', `${cssPrefix}-value-filter-title-text`);\r\n    this.titleIconEle = h('span', `${cssPrefix}-value-filter-title-icon`);\r\n    this.titleTextEle.text('按值过滤');\r\n    this.titleEle.children(this.titleIconEle);\r\n    this.titleEle.children(this.titleTextEle);\r\n    this.children(this.titleEle);\r\n    // 操作按钮\r\n    this.optionBoxEle = h('div', `${cssPrefix}-value-filter-option-box`);\r\n    this.selectEle = h('div', `${cssPrefix}-value-filter-option-select`);\r\n    this.flagEle = h('div', `${cssPrefix}-value-filter-option-flag`);\r\n    this.clearEle = h('div', `${cssPrefix}-value-filter-option-clear`);\r\n    this.clearEle.text('清空');\r\n    this.flagEle.html('&nbsp;-&nbsp;');\r\n    this.selectEle.text('全选');\r\n    this.optionBoxEle.children(this.selectEle);\r\n    this.optionBoxEle.children(this.flagEle);\r\n    this.optionBoxEle.children(this.clearEle);\r\n    this.children(this.optionBoxEle);\r\n    // 搜索框\r\n    this.searchBoxEle = h('div', `${cssPrefix}-value-filter-input-box`);\r\n    this.searchInput = new SearchInput();\r\n    this.searchBoxEle.children(this.searchInput);\r\n    this.children(this.searchBoxEle);\r\n    // 条目盒子\r\n    this.itemsBox = h('div', `${cssPrefix}-value-filter-items-box`);\r\n    this.children(this.itemsBox);\r\n    // 事件处理\r\n    this.hide();\r\n    this.bind();\r\n    this.removeClass('hover');\r\n  }\r\n\r\n  /**\r\n   * 卸载事件\r\n   */\r\n  unbind() {\r\n    const { titleEle, selectEle, clearEle, searchInput } = this;\r\n    XEvent.unbind(clearEle);\r\n    XEvent.unbind(titleEle);\r\n    XEvent.unbind(selectEle);\r\n    XEvent.unbind(searchInput);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件\r\n   */\r\n  bind() {\r\n    const { titleEle, itemsBox, selectEle, clearEle, searchInput } = this;\r\n    const clazz = `${cssPrefix}-value-filter-item`;\r\n    XEvent.bind(selectEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.selectAll();\r\n    });\r\n    XEvent.bind(titleEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      if (this.status) {\r\n        this.hide();\r\n      } else {\r\n        this.show();\r\n      }\r\n    });\r\n    XEvent.bind(itemsBox, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { items } = this;\r\n      const { target } = e;\r\n      const ele = w(target).closestClass(clazz);\r\n      if (ele) {\r\n        const index = ele.attr(`${cssPrefix}-value-filter-item-index`);\r\n        const item = items[index];\r\n        item.setStatus(!item.status);\r\n      }\r\n    });\r\n    XEvent.bind(clearEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.clearAll();\r\n    });\r\n    XEvent.bind(searchInput, Constant.FORM_EVENT_TYPE.SEARCH_INPUT_CHANGE, (e) => {\r\n      const { detail } = e;\r\n      const { value } = detail;\r\n      if (!PlainUtils.isBlank(value)) {\r\n        this.filterExp = new RegExp(`.?${value}.?`);\r\n      } else {\r\n        this.filterExp = null;\r\n      }\r\n      this.value = value;\r\n      this.filterItems();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 添加单项\r\n   * @param valueItem\r\n   */\r\n  addItem(valueItem) {\r\n    valueItem.setIndex(this.items.length);\r\n    this.items.push(valueItem);\r\n    this.itemsBox.children(valueItem);\r\n  }\r\n\r\n  /**\r\n   * 过滤筛选项\r\n   */\r\n  filterItems() {\r\n    const { filterExp, items, itemsBox } = this;\r\n    const filters = [];\r\n    itemsBox.empty();\r\n    if (filterExp) {\r\n      // 筛选符合条件的元素\r\n      items.forEach((item) => {\r\n        const { text } = item;\r\n        if (filterExp.test(text)) {\r\n          filters.push(item);\r\n        }\r\n      });\r\n      // 显示筛选内容\r\n      filters.forEach((item) => {\r\n        itemsBox.children(item);\r\n      });\r\n    } else {\r\n      items.forEach((item) => {\r\n        itemsBox.children(item);\r\n      });\r\n    }\r\n    this.filters = filters;\r\n  }\r\n\r\n  /**\r\n   * 设置搜索值\r\n   * @param value\r\n   */\r\n  setValue(value) {\r\n    const { searchInput } = this;\r\n    if (PlainUtils.isBlank(value)) {\r\n      value = PlainUtils.EMPTY;\r\n    }\r\n    searchInput.setValue(value);\r\n  }\r\n\r\n  /**\r\n   * 获取搜索值\r\n   */\r\n  getValue() {\r\n    return this.value;\r\n  }\r\n\r\n  /**\r\n   * 获取选中的项目\r\n   */\r\n  getSelectItems() {\r\n    const { items, filters } = this;\r\n    const selectItems = [];\r\n    if (filters.length > 0) {\r\n      filters.forEach((item) => {\r\n        if (item.status) {\r\n          selectItems.push(item);\r\n        }\r\n      });\r\n    } else {\r\n      items.forEach((item) => {\r\n        if (item.status) {\r\n          selectItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return selectItems;\r\n  }\r\n\r\n  /**\r\n   * 显示控件\r\n   */\r\n  show() {\r\n    this.titleIconEle.addClass('active');\r\n    this.status = true;\r\n    this.optionBoxEle.show();\r\n    this.searchBoxEle.show();\r\n    this.itemsBox.show();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 隐藏控件\r\n   */\r\n  hide() {\r\n    this.titleIconEle.removeClass('active');\r\n    this.status = false;\r\n    this.optionBoxEle.hide();\r\n    this.searchBoxEle.hide();\r\n    this.itemsBox.hide();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 选中所有子项\r\n   */\r\n  selectAll() {\r\n    const { items } = this;\r\n    items.forEach((item) => {\r\n      item.setStatus(true);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 清除所有子项\r\n   */\r\n  clearAll() {\r\n    const { items } = this;\r\n    items.forEach((item) => {\r\n      item.setStatus(false);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 清空内容\r\n   */\r\n  emptyAll() {\r\n    this.itemsBox.empty();\r\n    this.items = [];\r\n  }\r\n\r\n  /**\r\n   * 是否符合筛选条件\r\n   * @param items\r\n   */\r\n  qualified(items) {\r\n\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.searchInput.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  ValueFilter,\r\n};\r\n","import { Constant, cssPrefix } from '../../const/Constant';\r\nimport { ELContextMenu } from '../contextmenu/ELContextMenu';\r\nimport { OrderAZ } from './OrderAZ';\r\nimport { OrderZA } from './OrderZA';\r\nimport { IFFilter } from './IFFilter';\r\nimport { ValueFilter } from './valuefilter/ValueFilter';\r\nimport { h } from '../../libs/Element';\r\nimport { ELContextMenuDivider } from '../contextmenu/ELContextMenuDivider';\r\nimport { XEvent } from '../../libs/XEvent';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { ElPopUp } from '../elpopup/ElPopUp';\r\n\r\nclass FilterData extends ELContextMenu {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-filter-data-menu`, PlainUtils.mergeDeep({\r\n      ok: () => {},\r\n      no: () => {},\r\n    }, options));\r\n    this.valueFilter = new ValueFilter();\r\n    this.ifFilter = new IFFilter();\r\n    this.orderAz = new OrderAZ();\r\n    this.orderZa = new OrderZA();\r\n    this.okEle = h('div', `${cssPrefix}-filter-data-menu-button ${cssPrefix}-filter-data-menu-ok`);\r\n    this.noEle = h('div', `${cssPrefix}-filter-data-menu-button ${cssPrefix}-filter-data-menu-no`);\r\n    this.children(this.orderAz);\r\n    this.children(this.orderZa);\r\n    this.children(new ELContextMenuDivider());\r\n    this.children(this.ifFilter);\r\n    this.children(this.valueFilter);\r\n    this.children(new ELContextMenuDivider());\r\n    this.children(this.noEle);\r\n    this.children(this.okEle);\r\n    this.okEle.html('确定');\r\n    this.noEle.html('取消');\r\n    this.okHandle = () => {\r\n      const { ifFilter, valueFilter } = this;\r\n      const valueFilterItems = valueFilter.getSelectItems();\r\n      const valueFilterValue = valueFilter.getValue();\r\n      const ifFilterType = ifFilter.getType();\r\n      const ifFilterValue = ifFilter.getValue();\r\n      this.options.ok({\r\n        valueFilterItems, valueFilterValue, ifFilterType, ifFilterValue,\r\n      });\r\n      this.close();\r\n    };\r\n    this.noHandle = () => {\r\n      this.options.no();\r\n      this.close();\r\n    };\r\n    this.filterDataHandle = () => {\r\n      ElPopUp.closeAll([this.elPopUp]);\r\n    };\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.okEle);\r\n    XEvent.unbind(this.noEle);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.okEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, this.okHandle);\r\n    XEvent.bind(this.noEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, this.noHandle);\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, this.filterDataHandle);\r\n  }\r\n\r\n  open() {\r\n    super.open();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.valueFilter.destroy();\r\n    this.ifFilter.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FilterData,\r\n};\r\n","import { Widget } from '../../../libs/Widget';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { h } from '../../../libs/Element';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\nclass ValueItem extends Widget {\r\n\r\n  constructor({\r\n    text = PlainUtils.EMPTY,\r\n    index = -1,\r\n    status = false,\r\n  }) {\r\n    super(`${cssPrefix}-value-filter-item`);\r\n    this.text = text;\r\n    this.status = status;\r\n    this.index = index;\r\n    this.iconEle = h('div', `${cssPrefix}-value-filter-item-icon`);\r\n    this.textEle = h('div', `${cssPrefix}-value-filter-item-text`);\r\n    this.textEle.text(text);\r\n    this.attr('title', text);\r\n    this.children(this.iconEle);\r\n    this.children(this.textEle);\r\n    this.setIndex(index);\r\n    this.setStatus(status);\r\n  }\r\n\r\n  setStatus(status) {\r\n    this.status = status;\r\n    if (this.status) {\r\n      this.iconEle.css('opacity', 1);\r\n    } else {\r\n      this.iconEle.css('opacity', 0);\r\n    }\r\n  }\r\n\r\n  setIndex(index) {\r\n    this.index = index;\r\n    this.attr(`${cssPrefix}-value-filter-item-index`, `${this.index}`);\r\n  }\r\n\r\n  equals(item) {\r\n    return this.text === item.text;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  ValueItem,\r\n};\r\n","import { XSelectItem } from '../xselect/XSelectItem';\r\nimport { PlainUtils } from '../../../../utils/PlainUtils';\r\nimport { RectRange } from '../../tablebase/RectRange';\r\nimport { Widget } from '../../../../libs/Widget';\r\nimport { Constant, cssPrefix } from '../../../../const/Constant';\r\nimport { XEvent } from '../../../../libs/XEvent';\r\nimport { Alert } from '../../../../component/alert/Alert';\r\nimport { XScreenCssBorderItem } from '../../xscreen/item/viewborder/XScreenCssBorderItem';\r\nimport darkFilter from '../../../../../assets/svg/filter-dark.svg';\r\nimport { XTableMousePointer } from '../../XTableMousePointer';\r\nimport { XIcon } from '../../xicon/XIcon';\r\nimport { Mask } from '../../../../component/mask/Mask';\r\nimport { XDraw } from '../../../../canvas/XDraw';\r\nimport { FilterData } from '../../../../component/filterdata/FilterData';\r\nimport { ElPopUp } from '../../../../component/elpopup/ElPopUp';\r\nimport { ValueItem } from '../../../../component/filterdata/valuefilter/ValueItem';\r\n\r\n/**\r\n * XFilter\r\n */\r\nclass XFilter extends XScreenCssBorderItem {\r\n\r\n  /**\r\n   * XFilter\r\n   * @param table\r\n   */\r\n  constructor(table) {\r\n    super({ table });\r\n    this.display = false;\r\n    this.icons = [];\r\n    this.selectRange = null;\r\n    this.activeIcon = null;\r\n    this.mask = new Mask().setRoot(table);\r\n    this.filter = new FilterData({\r\n      el: this.mask,\r\n      ok: ({\r\n        valueFilterItems, valueFilterValue, ifFilterType, ifFilterValue,\r\n      }) => {\r\n        const { activeIcon } = this;\r\n        activeIcon.valueFilterItems = valueFilterItems;\r\n        activeIcon.valueFilterValue = valueFilterValue;\r\n        activeIcon.ifFilterType = ifFilterType;\r\n        activeIcon.ifFilterValue = ifFilterValue;\r\n        this.filterFoldRow();\r\n      },\r\n    });\r\n    this.flt = new Widget(`${cssPrefix}-x-filter ${cssPrefix}-x-filter-lt`);\r\n    this.ft = new Widget(`${cssPrefix}-x-filter ${cssPrefix}-x-filter-t`);\r\n    this.fbr = new Widget(`${cssPrefix}-x-filter ${cssPrefix}-x-filter-br`);\r\n    this.fl = new Widget(`${cssPrefix}-x-filter ${cssPrefix}-x-filter-l`);\r\n    this.blt.children(this.flt);\r\n    this.bl.children(this.fl);\r\n    this.bt.children(this.ft);\r\n    this.bbr.children(this.fbr);\r\n    this.setBorderColor('#0071cf');\r\n    this.bind();\r\n  }\r\n\r\n  /**\r\n   * 元素添加监听\r\n   */\r\n  onAdd() {\r\n    super.onAdd();\r\n  }\r\n\r\n  /**\r\n   * 卸载绑定事件\r\n   */\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件监听\r\n   */\r\n  bind() {\r\n    const { table } = this;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.RESIZE_CHANGE, () => {\r\n      if (this.display) {\r\n        this.xFilterOffset();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\r\n      if (this.display) {\r\n        ElPopUp.closeAll();\r\n        this.xFilterOffset();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.RENDER, () => {\r\n      if (this.display) {\r\n        this.xFilterOffset();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 创建过滤小图标\r\n   */\r\n  createFilterIcon() {\r\n    const { selectRange } = this;\r\n    const { table } = this;\r\n    const { icons } = this;\r\n    if (selectRange) {\r\n      const { top } = selectRange.brink();\r\n      const { xIconBuilder, xIteratorBuilder } = table;\r\n      const style = table.getXTableStyle();\r\n      const { fixedCellIcon } = style;\r\n      const { mousePointer } = table;\r\n      top.each(xIteratorBuilder, (ri, ci) => {\r\n        const icon = xIconBuilder.build({\r\n          image: darkFilter,\r\n          offset: {\r\n            x: -2,\r\n            y: -2,\r\n          },\r\n          height: 18,\r\n          width: 18,\r\n          vertical: XIcon.ICON_VERTICAL.BOTTOM,\r\n        });\r\n        const item = { ri, ci, icon };\r\n        icon.setOnEnter((event) => {\r\n          const { position } = event;\r\n          const cssHeight = XDraw.styleTransformCssPx(position.height);\r\n          const cssWidth = XDraw.styleTransformCssPx(position.width);\r\n          const cssLeft = XDraw.styleTransformCssPx(position.x);\r\n          const cssTop = XDraw.styleTransformCssPx(position.y);\r\n          this.mask.setLeft(cssLeft)\r\n            .setTop(cssTop)\r\n            .setWidth(cssWidth)\r\n            .setHeight(cssHeight)\r\n            .open();\r\n        });\r\n        icon.setOnDown((event) => {\r\n          const { native } = event;\r\n          this.activeIcon = item;\r\n          this.filterOpen();\r\n          native.stopPropagation();\r\n        });\r\n        icon.setOnMove(() => {\r\n          mousePointer.set(XTableMousePointer.KEYS.pointer, XFilter);\r\n        });\r\n        icon.setOnLeave(() => {\r\n          this.mask.close();\r\n          mousePointer.free(XFilter);\r\n        });\r\n        fixedCellIcon.addOrNewCell(ri, ci, icon);\r\n        icons.push(item);\r\n      });\r\n      table.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清除过滤小图标\r\n   */\r\n  clearFilterIcon() {\r\n    const { table, selectRange } = this;\r\n    if (selectRange) {\r\n      const style = table.getXTableStyle();\r\n      const { fixedCellIcon } = style;\r\n      this.icons.forEach((item) => {\r\n        const { ri, ci, icon } = item;\r\n        fixedCellIcon.remove(ri, ci, icon);\r\n      });\r\n      this.icons = [];\r\n      table.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 处理元素的\r\n   * 显示,大小,位置\r\n   */\r\n  offsetHandle() {\r\n    const { selectRange } = this;\r\n    if (selectRange) {\r\n      this.setDisplay(selectRange);\r\n      this.setSizer(selectRange);\r\n      this.setLocal(selectRange);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 处理元素的边框\r\n   * 是否显示\r\n   */\r\n  borderHandle() {\r\n    const { selectRange, display } = this;\r\n    if (selectRange && display) {\r\n      this.hideBorder();\r\n      this.showBorder(selectRange);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 处理过滤器的\r\n   * 视图区域\r\n   */\r\n  xFilterHandle() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen, cols, rows, xIteratorBuilder,\r\n    } = table;\r\n\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    const cells = table.getTableCells();\r\n    const merges = table.getTableMerges();\r\n\r\n    if (selectRange) {\r\n      let targetRange = selectRange.clone();\r\n      const { sri, sci, eri, eci } = targetRange;\r\n      const rowLen = rows.len - 1;\r\n      const colLen = cols.len - 1;\r\n      const merge = merges.getFirstIncludes(sri, sci) || RectRange.EMPTY;\r\n      // 排除多选单元格\r\n      if (targetRange.multiple() && !merge.equals(targetRange)) {\r\n        this.selectRange = targetRange;\r\n        return;\r\n      }\r\n      // 向右走\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(eci + 1)\r\n        .setEnd(colLen)\r\n        .setLoop((i) => {\r\n          const cell = cells.getCellOrMergeCell(sri, i);\r\n          if (PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text)) {\r\n            return false;\r\n          }\r\n          targetRange = targetRange.union(new RectRange(sri, i, sri, i));\r\n          return true;\r\n        })\r\n        .execute();\r\n      // 向左走\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(sci - 1)\r\n        .setEnd(0)\r\n        .setLoop((i) => {\r\n          const cell = cells.getCellOrMergeCell(sri, i);\r\n          if (PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text)) {\r\n            return false;\r\n          }\r\n          targetRange = targetRange.union(new RectRange(sri, i, sri, i));\r\n          return true;\r\n        })\r\n        .execute();\r\n      // 向下走\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(eri + 1)\r\n        .setEnd(rowLen)\r\n        .setLoop((i) => {\r\n          const cell = cells.getCellOrMergeCell(i, sci);\r\n          if (PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text)) {\r\n            return false;\r\n          }\r\n          targetRange = targetRange.union(new RectRange(i, sci, i, sci));\r\n          return true;\r\n        })\r\n        .execute();\r\n      // 向上走\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(sri - 1)\r\n        .setEnd(0)\r\n        .setLoop((i) => {\r\n          const cell = cells.getCellOrMergeCell(i, sci);\r\n          if (PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text)) {\r\n            return false;\r\n          }\r\n          targetRange = targetRange.union(new RectRange(i, sci, i, sci));\r\n          return true;\r\n        })\r\n        .execute();\r\n      // 向右扫描\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(targetRange.eci + 1)\r\n        .setEnd(colLen)\r\n        .setLoop((i) => {\r\n          const { sri, eri } = targetRange;\r\n          let emptyCol = true;\r\n          xIteratorBuilder.getRowIterator()\r\n            .setBegin(sri)\r\n            .setEnd(eri)\r\n            .setLoop((j) => {\r\n              const cell = cells.getCellOrMergeCell(j, i);\r\n              if (!PlainUtils.isUnDef(cell) && !PlainUtils.isBlank(cell.text)) {\r\n                targetRange = targetRange.union(new RectRange(j, i, j, i));\r\n                emptyCol = false;\r\n              }\r\n            })\r\n            .execute();\r\n          return !emptyCol;\r\n        })\r\n        .execute();\r\n      // 向左扫描\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(targetRange.sci - 1)\r\n        .setEnd(0)\r\n        .setLoop((i) => {\r\n          const { sri, eri } = targetRange;\r\n          let emptyCol = true;\r\n          xIteratorBuilder.getRowIterator()\r\n            .setBegin(sri)\r\n            .setEnd(eri)\r\n            .setLoop((j) => {\r\n              const cell = cells.getCellOrMergeCell(j, i);\r\n              if (!PlainUtils.isUnDef(cell) && !PlainUtils.isBlank(cell.text)) {\r\n                targetRange = targetRange.union(new RectRange(j, i, j, i));\r\n                emptyCol = false;\r\n              }\r\n            })\r\n            .execute();\r\n          return !emptyCol;\r\n        })\r\n        .execute();\r\n      // 向下扫描\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(targetRange.eri + 1)\r\n        .setEnd(rowLen)\r\n        .setLoop((i) => {\r\n          const { sci, eci } = targetRange;\r\n          let emptyRow = true;\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(sci)\r\n            .setEnd(eci)\r\n            .setLoop((j) => {\r\n              const cell = cells.getCellOrMergeCell(i, j);\r\n              if (!PlainUtils.isUnDef(cell) && !PlainUtils.isBlank(cell.text)) {\r\n                targetRange = targetRange.union(new RectRange(i, j, i, j));\r\n                emptyRow = false;\r\n              }\r\n            })\r\n            .execute();\r\n          return !emptyRow;\r\n        })\r\n        .execute();\r\n      // 向上扫描\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(targetRange.sri - 1)\r\n        .setEnd(0)\r\n        .setLoop((i) => {\r\n          const { sci, eci } = targetRange;\r\n          let emptyRow = true;\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(sci)\r\n            .setEnd(eci)\r\n            .setLoop((j) => {\r\n              const cell = cells.getCellOrMergeCell(i, j);\r\n              if (!PlainUtils.isUnDef(cell) && !PlainUtils.isBlank(cell.text)) {\r\n                targetRange = targetRange.union(new RectRange(i, j, i, j));\r\n                emptyRow = false;\r\n              }\r\n            })\r\n            .execute();\r\n          return !emptyRow;\r\n        })\r\n        .execute();\r\n      this.selectRange = targetRange;\r\n\r\n    } else {\r\n      this.selectRange = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 处理元素的基本属性\r\n   * 和边框\r\n   */\r\n  xFilterOffset() {\r\n    this.offsetHandle();\r\n    this.borderHandle();\r\n  }\r\n\r\n  /**\r\n   * 打开过滤面板\r\n   */\r\n  filterOpen() {\r\n    const { selectRange, table, filter, activeIcon } = this;\r\n    const { valueFilter, ifFilter } = filter;\r\n    const { xIteratorBuilder } = table;\r\n    const cells = table.getTableCells();\r\n    // 筛选条件\r\n    const { valueFilterValue, ifFilterType, ifFilterValue, valueFilterItems } = activeIcon;\r\n    // 筛选范围\r\n    const { ri: sri, ci: sci } = activeIcon;\r\n    const { eri } = selectRange;\r\n    const eci = sci;\r\n    // 筛选数据\r\n    const items = new Set();\r\n    new RectRange(sri, sci, eri, eci).each(xIteratorBuilder, (ri, ci) => {\r\n      const cell = cells.getCellOrMergeCell(ri, ci);\r\n      if (cell && !PlainUtils.isBlank(cell.text)) {\r\n        items.add(cell.text.trim());\r\n      }\r\n    });\r\n    // 值筛选\r\n    valueFilter.emptyAll();\r\n    if (valueFilterItems) {\r\n      items.forEach((item) => {\r\n        const valueItem = new ValueItem({\r\n          text: item,\r\n        });\r\n        if (valueFilterItems.find(item => valueItem.equals(item))) {\r\n          valueItem.setStatus(true);\r\n        } else {\r\n          valueItem.setStatus(false);\r\n        }\r\n        valueFilter.addItem(valueItem);\r\n      });\r\n    } else {\r\n      items.forEach((item) => {\r\n        const valueItem = new ValueItem({\r\n          text: item,\r\n        });\r\n        valueItem.setStatus(true);\r\n        valueFilter.addItem(valueItem);\r\n      });\r\n    }\r\n    valueFilter.setValue(valueFilterValue);\r\n    // 条件筛选\r\n    ifFilter.setType(ifFilterType);\r\n    ifFilter.setValue(ifFilterValue);\r\n    // 关闭其他面板\r\n    ElPopUp.closeAll();\r\n    // 打开面板\r\n    filter.open();\r\n  }\r\n\r\n  /**\r\n   * 过滤折叠行\r\n   */\r\n  filterFoldRow() {\r\n    const { selectRange } = this;\r\n    const { table } = this;\r\n    const { icons } = this;\r\n    const { sri, sci, eri, eci } = selectRange;\r\n    const cells = table.getTableCells();\r\n    for (let ri = sri; ri <= eri; ri++) {\r\n      for (let ci = sci; ci <= eci; ci++) {\r\n        const cell = cells.getCell(ri, ci);\r\n        if (PlainUtils.isEmptyObject(cell)) {\r\n          continue;\r\n        }\r\n        const { text } = cell;\r\n        if (PlainUtils.isBlank(text)) {\r\n          continue;\r\n        }\r\n        const icon = icons[ci];\r\n        // 数值筛选\r\n        const { valueFilterItems } = icon;\r\n        const { valueFilterValue } = icon;\r\n        if (valueFilterItems) {\r\n\r\n        }\r\n        // 条件筛选\r\n        const { ifFilterType } = icon;\r\n        const { ifFilterValue } = icon;\r\n        if (ifFilterType) {\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 隐藏过滤器\r\n   */\r\n  hideFilter() {\r\n    this.display = false;\r\n    this.clearFilterIcon();\r\n    this.hide();\r\n  }\r\n\r\n  /**\r\n   * 显示过滤器\r\n   */\r\n  openFilter() {\r\n    const { table } = this;\r\n    const cells = table.getTableCells();\r\n    this.xFilterHandle();\r\n    const { selectRange } = this;\r\n    if (selectRange) {\r\n      if (cells.emptyRectRange(selectRange)) {\r\n        new Alert({\r\n          message: '不能为空数据区创建过滤器, 请选择非空区域',\r\n        }).open();\r\n      } else {\r\n        this.display = true;\r\n        this.createFilterIcon();\r\n        this.show();\r\n        this.xFilterOffset();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 销毁过滤器\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XFilter,\r\n};\r\n","import { cssPrefix } from '../../../../../const/Constant';\r\nimport { XScreenStyleBorderItem } from './XScreenStyleBorderItem';\r\n\r\nconst SVG = `\r\n  <svg class=\"${cssPrefix}-copy-style-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">\r\n    <line class=\"${cssPrefix}-copy-style-stroked ${cssPrefix}-copy-style-stroked-top\" x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"0\"/>\r\n    <line class=\"${cssPrefix}-copy-style-stroked ${cssPrefix}-copy-style-stroked-left\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\"/>\r\n    <line class=\"${cssPrefix}-copy-style-stroked ${cssPrefix}-copy-style-stroked-bottom\" x1=\"0\" y1=\"100%\" x2=\"100%\" y2=\"100%\"/>\r\n    <line class=\"${cssPrefix}-copy-style-stroked ${cssPrefix}-copy-style-stroked-right\" x1=\"100%\" y1=\"0\" x2=\"100%\" y2=\"100%\"/>\r\n  </svg>\r\n`;\r\n\r\nclass XScreenSvgBorderItem extends XScreenStyleBorderItem {\r\n\r\n  constructor({ table }) {\r\n    super({ table }, `${cssPrefix}-part-border-svg`);\r\n    this.blt.html(SVG);\r\n    this.bl.html(SVG);\r\n    this.bt.html(SVG);\r\n    this.bbr.html(SVG);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenSvgBorderItem,\r\n};\r\n","import { XSelectItem } from '../xselect/XSelectItem';\r\nimport { Widget } from '../../../../libs/Widget';\r\nimport { Constant, cssPrefix } from '../../../../const/Constant';\r\nimport { XEvent } from '../../../../libs/XEvent';\r\nimport { RectRange } from '../../tablebase/RectRange';\r\nimport { XScreenSvgBorderItem } from '../../xscreen/item/viewborder/XScreenSvgBorderItem';\r\n\r\nclass XCopyStyle extends XScreenSvgBorderItem {\r\n\r\n  constructor(table) {\r\n    super({ table });\r\n    this.display = false;\r\n    this.selectRange = RectRange.EMPTY;\r\n    this.ltElem = new Widget(`${cssPrefix}-x-copy-style-area`);\r\n    this.brElem = new Widget(`${cssPrefix}-x-copy-style-area`);\r\n    this.lElem = new Widget(`${cssPrefix}-x-copy-style-area`);\r\n    this.tElem = new Widget(`${cssPrefix}-x-copy-style-area`);\r\n    this.blt.children(this.ltElem);\r\n    this.bl.children(this.lElem);\r\n    this.bt.children(this.tElem);\r\n    this.bbr.children(this.brElem);\r\n  }\r\n\r\n  onAdd() {\r\n    this.hideCopyStyle();\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      if (this.display) {\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      if (this.display) {\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.SCALE_CHANGE, () => {\r\n      if (this.display) {\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.FIXED_CHANGE, () => {\r\n      if (this.display) {\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.RESIZE_CHANGE, () => {\r\n      if (this.display) {\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\r\n      if (this.display) {\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }\r\n    });\r\n  }\r\n\r\n  borderHandle() {\r\n    const { selectRange } = this;\r\n    if (selectRange.equals(RectRange.EMPTY)) {\r\n      return;\r\n    }\r\n    this.hideBorder();\r\n    this.showBorder(selectRange);\r\n  }\r\n\r\n  offsetHandle() {\r\n    const { selectRange } = this;\r\n    if (selectRange.equals(RectRange.EMPTY)) {\r\n      this.hide();\r\n      return;\r\n    }\r\n    this.show();\r\n    this.setDisplay(selectRange);\r\n    this.setSizer(selectRange);\r\n    this.setLocal(selectRange);\r\n  }\r\n\r\n  hideCopyStyle() {\r\n    this.display = false;\r\n    this.hide();\r\n  }\r\n\r\n  showCopyStyle() {\r\n    this.display = true;\r\n    this.show();\r\n    const { xScreen } = this;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    this.selectRange = selectRange;\r\n    this.offsetHandle();\r\n    this.borderHandle();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XCopyStyle,\r\n};\r\n","import { h } from '../../libs/Element';\r\nimport { Constant, cssPrefix } from '../../const/Constant';\r\nimport { Widget } from '../../libs/Widget';\r\nimport { DragPanel } from '../dragpanel/DragPanel';\r\nimport { XEvent } from '../../libs/XEvent';\r\n\r\nclass Confirm extends Widget {\r\n\r\n  constructor({\r\n    title = '提示',\r\n    message = '',\r\n    ok = () => {},\r\n    no = () => {},\r\n  }) {\r\n    super(`${cssPrefix}-confirm`);\r\n    this.title = title;\r\n    this.message = message;\r\n    this.ok = ok;\r\n    this.no = no;\r\n    // 创建 UI\r\n    this.closeEle = h('div', `${cssPrefix}-confirm-close`);\r\n    this.titleEle = h('div', `${cssPrefix}-confirm-title`);\r\n    this.contentEle = h('div', `${cssPrefix}-confirm-content`);\r\n    this.okEle = h('div', `${cssPrefix}-confirm-button ${cssPrefix}-confirm-ok`);\r\n    this.noEle = h('div', `${cssPrefix}-confirm-button ${cssPrefix}-confirm-no`);\r\n    this.buttonsEle = h('div', `${cssPrefix}-confirm-buttons`);\r\n    // 显示内容消息\r\n    this.titleEle.html(title);\r\n    this.contentEle.html(message);\r\n    this.okEle.html('确定');\r\n    this.noEle.html('取消');\r\n    // 添加UI\r\n    this.buttonsEle.children(this.noEle);\r\n    this.buttonsEle.children(this.okEle);\r\n    this.children(this.closeEle);\r\n    this.children(this.titleEle);\r\n    this.children(this.contentEle);\r\n    this.children(this.buttonsEle);\r\n    // 拖拽组件\r\n    this.dragPanel = new DragPanel().children(this);\r\n  }\r\n\r\n  unbind() {\r\n    const { okEle, noEle } = this;\r\n    XEvent.unbind(okEle);\r\n    XEvent.unbind(noEle);\r\n  }\r\n\r\n  bind() {\r\n    const { okEle, noEle } = this;\r\n    XEvent.bind(okEle, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.ok();\r\n      this.close();\r\n    });\r\n    XEvent.bind(noEle, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.no();\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  open() {\r\n    const { dragPanel } = this;\r\n    dragPanel.open();\r\n    this.bind();\r\n  }\r\n\r\n  close() {\r\n    const { dragPanel } = this;\r\n    dragPanel.close();\r\n    this.destroy();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.dragPanel.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Confirm,\r\n};\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\n\r\nclass FontAngleContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-font-angle-context-menu-item`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FontAngleContextMenuItem,\r\n};\r\n","import { Widget } from '../../../../libs/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass Divider extends Widget {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-divider`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Divider,\r\n};\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Divider } from '../../../base/Divider';\r\n\r\nclass FontAngleDivider extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle-divider`);\r\n    this.children(new Divider());\r\n    this.css('padding-left', '0');\r\n    this.css('padding-right', '0');\r\n    this.css('margin-left', '0');\r\n    this.css('margin-right', '0');\r\n  }\r\n}\r\n\r\nexport {\r\n  FontAngleDivider,\r\n};\r\n","import { Item } from './Item';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\nimport { Icon } from '../Icon';\r\nimport { h } from '../../../../libs/Element';\r\n\r\nclass DropInputItem extends Item {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-tools-drop-input-item ${className}`);\r\n    this.drop = h('div', `${cssPrefix}-tools-drop-input-item-mark`);\r\n    this.title = h('div', `${cssPrefix}-tools-drop-input-item-title`);\r\n    this.icon = new Icon('arrow-down');\r\n    this.input = h('input', `${cssPrefix}-tools-drop-input`);\r\n    this.drop.children(this.icon);\r\n    this.title.children(this.input);\r\n    this.children(this.title);\r\n    this.children(this.drop);\r\n  }\r\n\r\n  setValue(value) {\r\n    this.input.val(value);\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport { DropInputItem };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../libs/Element';\r\n\r\nclass FontAngleValueContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(angleValue) {\r\n    super(`${cssPrefix}-font-angle-value-context-menu-item`);\r\n    this.angleValue = angleValue;\r\n    this.titleElement = h('div', `${cssPrefix}-font-angle-value-context-menu-item-title`);\r\n    this.titleElement.text(angleValue);\r\n    this.titleElement.css('text-align', 'center');\r\n    this.children(this.titleElement);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FontAngleValueContextMenuItem,\r\n};\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { FontAngleValueContextMenuItem } from './FontAngleValueContextMenuItem';\r\nimport { Constant, cssPrefix } from '../../../../../const/Constant';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass FontAngleValueContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-angle-value-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new FontAngleValueContextMenuItem(-90),\r\n      new FontAngleValueContextMenuItem(-75),\r\n      new FontAngleValueContextMenuItem(-60),\r\n      new FontAngleValueContextMenuItem(-45),\r\n      new FontAngleValueContextMenuItem(-30),\r\n      new FontAngleValueContextMenuItem(-15),\r\n      new FontAngleValueContextMenuItem(0),\r\n      new FontAngleValueContextMenuItem(15),\r\n      new FontAngleValueContextMenuItem(30),\r\n      new FontAngleValueContextMenuItem(45),\r\n      new FontAngleValueContextMenuItem(60),\r\n      new FontAngleValueContextMenuItem(75),\r\n      new FontAngleValueContextMenuItem(90),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      this.addItem(item);\r\n    });\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { items } = this;\r\n    items.forEach((item) => {\r\n      XEvent.unbind(item);\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    const { items } = this;\r\n    items.forEach((item) => {\r\n      XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n        this.options.onUpdate(item);\r\n        this.close();\r\n      });\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FontAngleValueContextMenu,\r\n};\r\n","import { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { DropInputItem } from './base/DropInputItem';\r\nimport { XEvent } from '../../../libs/XEvent';\r\nimport { FontAngleValueContextMenu } from './contextmenu/fontanglevalue/FontAngleValueContextMenu';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\nclass FontAngleValue extends DropInputItem {\r\n\r\n  constructor({\r\n    onChange = () => {},\r\n  }) {\r\n    super(`${cssPrefix}-tools-angle-value`);\r\n    this.onChange = onChange;\r\n    this.value = 0;\r\n    this.fontAngleValueContextMenu = new FontAngleValueContextMenu({\r\n      onUpdate: (item) => {\r\n        const { angleValue } = item;\r\n        this.setValue(angleValue);\r\n        this.onChange(angleValue);\r\n      },\r\n      el: this,\r\n    });\r\n    this.input.val(this.value);\r\n    this.input.attr('type', 'number');\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { icon } = this;\r\n    XEvent.unbind(icon);\r\n  }\r\n\r\n  bind() {\r\n    const { fontAngleValueContextMenu, icon, input } = this;\r\n    XEvent.bind(icon, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      if (fontAngleValueContextMenu.isClose()) {\r\n        fontAngleValueContextMenu.open();\r\n      } else {\r\n        fontAngleValueContextMenu.close();\r\n      }\r\n    });\r\n    XEvent.bind(input, Constant.SYSTEM_EVENT_TYPE.CHANGE, () => {\r\n      const target = PlainUtils.parseInt(input.val());\r\n      this.value = target;\r\n      this.onChange(target);\r\n    });\r\n  }\r\n\r\n  setValue(value) {\r\n    this.value = value;\r\n    return super.setValue(value);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.fontAngleValueContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FontAngleValue,\r\n};\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass FontAngle1 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle1`);\r\n    this.icon = new Icon('font-angle1');\r\n    this.children(this.icon);\r\n  }\r\n}\r\nexport {\r\n  FontAngle1,\r\n};\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass FontAngle2 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle2`);\r\n    this.icon = new Icon('font-angle2');\r\n    this.children(this.icon);\r\n  }\r\n}\r\nexport {\r\n  FontAngle2,\r\n};\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass FontAngle3 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle3`);\r\n    this.icon = new Icon('font-angle3');\r\n    this.children(this.icon);\r\n  }\r\n}\r\nexport {\r\n  FontAngle3,\r\n};\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass FontAngle4 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle4`);\r\n    this.icon = new Icon('font-angle4');\r\n    this.children(this.icon);\r\n  }\r\n}\r\nexport {\r\n  FontAngle4,\r\n};\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass FontAngle5 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle5`);\r\n    this.icon = new Icon('font-angle5');\r\n    this.children(this.icon);\r\n  }\r\n}\r\nexport {\r\n  FontAngle5,\r\n};\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass FontAngle6 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle6`);\r\n    this.icon = new Icon('font-angle6');\r\n    this.children(this.icon);\r\n  }\r\n}\r\nexport {\r\n  FontAngle6,\r\n};\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { FontAngleContextMenuItem } from './FontAngleContextMenuItem';\r\nimport { FontAngleDivider } from '../icon/fontangle/FontAngleDivider';\r\nimport { h } from '../../../../../libs/Element';\r\nimport { FontAngleValue } from '../../FontAngleValue';\r\nimport { Constant, cssPrefix } from '../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { FontAngle1 } from '../icon/fontangle/FontAngle1';\r\nimport { FontAngle2 } from '../icon/fontangle/FontAngle2';\r\nimport { FontAngle3 } from '../icon/fontangle/FontAngle3';\r\nimport { FontAngle4 } from '../icon/fontangle/FontAngle4';\r\nimport { FontAngle5 } from '../icon/fontangle/FontAngle5';\r\nimport { FontAngle6 } from '../icon/fontangle/FontAngle6';\r\nimport { XEvent } from '../../../../../libs/XEvent';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass FontAngleContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-angle-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdateAngle: () => {},\r\n      onUpdateType: () => {},\r\n    }, options));\r\n    const div1 = h('div', `${cssPrefix}-font-angle-context-menu-type-icon-line`);\r\n    this.angle1 = new FontAngle1();\r\n    this.angle2 = new FontAngle2();\r\n    this.angle3 = new FontAngle3();\r\n    this.angle4 = new FontAngle4();\r\n    this.angle5 = new FontAngle5();\r\n    this.angle6 = new FontAngle6();\r\n    this.input = new FontAngleValue({\r\n      onChange: (angle) => {\r\n        this.options.onUpdateAngle(angle);\r\n      },\r\n    });\r\n    div1.children(this.angle1);\r\n    div1.children(this.angle2);\r\n    div1.children(new FontAngleDivider());\r\n    div1.children(this.angle4);\r\n    div1.children(this.angle3);\r\n    div1.children(this.angle6);\r\n    div1.children(this.angle5);\r\n    div1.children(new FontAngleDivider());\r\n    div1.children(this.input);\r\n    this.item = new FontAngleContextMenuItem();\r\n    this.item.children(div1);\r\n    this.item.removeClass('hover');\r\n    this.addItem(this.item);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { angle1, angle2, angle3, angle4, angle5, angle6 } = this;\r\n    XEvent.unbind(angle1);\r\n    XEvent.unbind(angle2);\r\n    XEvent.unbind(angle3);\r\n    XEvent.unbind(angle4);\r\n    XEvent.unbind(angle5);\r\n    XEvent.unbind(angle6);\r\n  }\r\n\r\n  bind() {\r\n    const { angle1, angle2, angle3, angle4, angle5, angle6 } = this;\r\n    XEvent.bind(angle1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdateType(BaseFont.TEXT_DIRECTION.HORIZONTAL);\r\n    });\r\n    XEvent.bind(angle2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdateType(BaseFont.TEXT_DIRECTION.VERTICAL);\r\n    });\r\n    XEvent.bind(angle3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdateAngle(-45);\r\n    });\r\n    XEvent.bind(angle4, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdateAngle(45);\r\n    });\r\n    XEvent.bind(angle5, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdateAngle(-90);\r\n    });\r\n    XEvent.bind(angle6, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdateAngle(90);\r\n    });\r\n  }\r\n\r\n  setValue(value) {\r\n    if (!PlainUtils.isNumber(value)) {\r\n      value = 0;\r\n    }\r\n    this.input.setValue(value);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.input.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FontAngleContextMenu,\r\n};\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { FontAngleContextMenu } from './contextmenu/fontangle/FontAngleContextMenu';\r\n\r\nclass FontAngle extends DropDownItem {\r\n\r\n  constructor(options = {\r\n    contextMenu: {},\r\n  }) {\r\n    super(`${cssPrefix}-tools-angle`);\r\n    this.options = options;\r\n    this.icon = new Icon('angle');\r\n    this.setIcon(this.icon);\r\n    this.fontAngleContextMenu = new FontAngleContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  setValue(value) {\r\n    this.fontAngleContextMenu.setValue(value);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.fontAngleContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FontAngle,\r\n};\r\n","import { Widget } from '../../libs/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { Undo } from './tools/Undo';\r\nimport { Redo } from './tools/Redo';\r\nimport { PaintFormat } from './tools/PaintFormat';\r\nimport { ClearFormat } from './tools/ClearFormat';\r\nimport { Format } from './tools/Format';\r\nimport { Font } from './tools/Font';\r\nimport { FontSize } from './tools/FontSize';\r\nimport { FontBold } from './tools/FontBold';\r\nimport { FontItalic } from './tools/FontItalic';\r\nimport { UnderLine } from './tools/UnderLine';\r\nimport { FontStrike } from './tools/FontStrike';\r\nimport { FontColor } from './tools/FontColor';\r\nimport { FillColor } from './tools/FillColor';\r\nimport { Border } from './tools/Border';\r\nimport { Merge } from './tools/Merge';\r\nimport { HorizontalAlign } from './tools/HorizontalAlign';\r\nimport { VerticalAlign } from './tools/VerticalAlign';\r\nimport { TextWrapping } from './tools/TextWrapping';\r\nimport { Fixed } from './tools/Fixed';\r\nimport { Filter } from './tools/Filter';\r\nimport { Functions } from './tools/Functions';\r\nimport { XEvent } from '../../libs/XEvent';\r\nimport { ElPopUp } from '../../component/elpopup/ElPopUp';\r\nimport { LINE_TYPE } from '../../canvas/Line';\r\nimport { Icon } from './tools/Icon';\r\nimport { Cell } from '../table/tablecell/Cell';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { Scale } from './tools/Scale';\r\nimport { BaseFont } from '../../canvas/font/BaseFont';\r\nimport { XSelectItem } from '../table/xscreenitems/xselect/XSelectItem';\r\nimport { XDraw } from '../../canvas/XDraw';\r\nimport { Alert } from '../../component/alert/Alert';\r\nimport { XFilter } from '../table/xscreenitems/xfilter/XFilter';\r\nimport { XCopyStyle } from '../table/xscreenitems/xcopystyle/XCopyStyle';\r\nimport { Confirm } from '../../component/confirm/Confirm';\r\nimport { FontAngle } from './tools/FontAngle';\r\nimport { Divider } from './tools/base/Divider';\r\n\r\nclass TopMenu extends Widget {\r\n\r\n  constructor(workTop) {\r\n    super(`${cssPrefix}-tools-menu`);\r\n\r\n    this.workTop = workTop;\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n\r\n    // tools\r\n    this.undo = new Undo();\r\n    this.redo = new Redo();\r\n    this.scale = new Scale({\r\n      contextMenu: {\r\n        onUpdate: (value) => {\r\n          this.scale.setTitle(`${value}%`);\r\n          const { body } = this.workTop.work;\r\n          body.setScale(value / 100);\r\n        },\r\n      },\r\n    });\r\n    this.paintFormat = new PaintFormat();\r\n    this.clearFormat = new ClearFormat();\r\n    this.format = new Format({\r\n      contextMenu: {\r\n        onUpdate: (format, title) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const {\r\n            xScreen,\r\n          } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          this.format.setTitle(title);\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                cell.format = format;\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.font = new Font({\r\n      contextMenu: {\r\n        onUpdate: (type) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const {\r\n            xScreen,\r\n          } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          this.font.setTitle(type);\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                cell.fontAttr.name = type;\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.dprFontSize = new FontSize({\r\n      contextMenu: {\r\n        onUpdate: (size) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const { xScreen } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          this.dprFontSize.setTitle(size);\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                cell.fontAttr.size = size;\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.fontColor = new FontColor({\r\n      contextMenu: {\r\n        onUpdate: (color) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const {\r\n            xScreen,\r\n          } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          this.fontColor.setColor(color);\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                cell.fontAttr.color = color;\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.fillColor = new FillColor({\r\n      contextMenu: {\r\n        onUpdate: (color) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const {\r\n            xScreen,\r\n          } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          this.fillColor.setColor(color);\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                cell.background = color;\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.border = new Border({\r\n      contextMenu: {\r\n        onUpdate: (borderType, color, lineType) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const { xScreen } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const xTableStyle = table.getXTableStyle();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            const rect = selectRange;\r\n            let widthType = XDraw.LINE_WIDTH_TYPE.low;\r\n            let type = LINE_TYPE.SOLID_LINE;\r\n            switch (lineType) {\r\n              case 'line1':\r\n                widthType = XDraw.LINE_WIDTH_TYPE.low;\r\n                type = LINE_TYPE.SOLID_LINE;\r\n                break;\r\n              case 'line2':\r\n                widthType = XDraw.LINE_WIDTH_TYPE.medium;\r\n                type = LINE_TYPE.SOLID_LINE;\r\n                break;\r\n              case 'line3':\r\n                widthType = XDraw.LINE_WIDTH_TYPE.high;\r\n                type = LINE_TYPE.SOLID_LINE;\r\n                break;\r\n              case 'line4':\r\n                type = LINE_TYPE.DOTTED_LINE;\r\n                break;\r\n              case 'line5':\r\n                type = LINE_TYPE.POINT_LINE;\r\n                break;\r\n              case 'line6':\r\n                type = LINE_TYPE.DOUBLE_LINE;\r\n                break;\r\n            }\r\n            const angleCells = [];\r\n            switch (borderType) {\r\n              case 'border1':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    borderAttr.setAllDisplay(true);\r\n                    borderAttr.setAllColor(color);\r\n                    borderAttr.setAllWidthType(widthType);\r\n                    borderAttr.setAllType(type);\r\n                    cellDataProxy.setCell(ri, ci, newCell);\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, ci, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  borderAttr.setAllDisplay(true);\r\n                  borderAttr.setAllColor(color);\r\n                  borderAttr.setAllWidthType(widthType);\r\n                  borderAttr.setAllType(type);\r\n                  cellDataProxy.setCell(ri, ci, newCell);\r\n                });\r\n                break;\r\n              case 'border2':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    if (ri !== rect.sri) {\r\n                      borderAttr.setTDisplay(true);\r\n                      borderAttr.setTColor(color);\r\n                      borderAttr.setTWidthType(widthType);\r\n                      borderAttr.setTType(type);\r\n                    }\r\n                    if (ri !== rect.eri) {\r\n                      borderAttr.setBDisplay(true);\r\n                      borderAttr.setBColor(color);\r\n                      borderAttr.setBWidthType(widthType);\r\n                      borderAttr.setBType(type);\r\n                    }\r\n                    if (ci !== rect.sci) {\r\n                      borderAttr.setLDisplay(true);\r\n                      borderAttr.setLColor(color);\r\n                      borderAttr.setLWidthType(widthType);\r\n                      borderAttr.setLType(type);\r\n                    }\r\n                    if (ci !== rect.eci) {\r\n                      borderAttr.setRDisplay(true);\r\n                      borderAttr.setRColor(color);\r\n                      borderAttr.setRWidthType(widthType);\r\n                      borderAttr.setRType(type);\r\n                    }\r\n                    cellDataProxy.setCell(ri, ci, newCell);\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, ci, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  if (ri !== rect.sri) {\r\n                    borderAttr.setTDisplay(true);\r\n                    borderAttr.setTColor(color);\r\n                    borderAttr.setTWidthType(widthType);\r\n                    borderAttr.setTType(type);\r\n                  }\r\n                  if (ri !== rect.eri) {\r\n                    borderAttr.setBDisplay(true);\r\n                    borderAttr.setBColor(color);\r\n                    borderAttr.setBWidthType(widthType);\r\n                    borderAttr.setBType(type);\r\n                  }\r\n                  if (ci !== rect.sci) {\r\n                    borderAttr.setLDisplay(true);\r\n                    borderAttr.setLColor(color);\r\n                    borderAttr.setLWidthType(widthType);\r\n                    borderAttr.setLType(type);\r\n                  }\r\n                  if (ci !== rect.eci) {\r\n                    borderAttr.setRDisplay(true);\r\n                    borderAttr.setRColor(color);\r\n                    borderAttr.setRWidthType(widthType);\r\n                    borderAttr.setRType(type);\r\n                  }\r\n                  cellDataProxy.setCell(ri, ci, newCell);\r\n                });\r\n                break;\r\n              case 'border3':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    if (ri !== rect.sri) {\r\n                      borderAttr.setTDisplay(true);\r\n                      borderAttr.setTColor(color);\r\n                      borderAttr.setTWidthType(widthType);\r\n                      borderAttr.setTType(type);\r\n                    }\r\n                    if (ri !== rect.eri) {\r\n                      borderAttr.setBDisplay(true);\r\n                      borderAttr.setBColor(color);\r\n                      borderAttr.setBWidthType(widthType);\r\n                      borderAttr.setBType(type);\r\n                    }\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  if (ri !== rect.sri) {\r\n                    borderAttr.setTDisplay(true);\r\n                    borderAttr.setTColor(color);\r\n                    borderAttr.setTWidthType(widthType);\r\n                    borderAttr.setTType(type);\r\n                  }\r\n                  if (ri !== rect.eri) {\r\n                    borderAttr.setBDisplay(true);\r\n                    borderAttr.setBColor(color);\r\n                    borderAttr.setBWidthType(widthType);\r\n                    borderAttr.setBType(type);\r\n                  }\r\n                });\r\n                break;\r\n              case 'border4':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    if (ci !== rect.sci) {\r\n                      borderAttr.setLDisplay(true);\r\n                      borderAttr.setLColor(color);\r\n                      borderAttr.setLWidthType(widthType);\r\n                      borderAttr.setLType(type);\r\n                    }\r\n                    if (ci !== rect.eci) {\r\n                      borderAttr.setRDisplay(true);\r\n                      borderAttr.setRColor(color);\r\n                      borderAttr.setRWidthType(widthType);\r\n                      borderAttr.setRType(type);\r\n                    }\r\n                    cellDataProxy.setCell(ri, ci, newCell);\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, ci, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  if (ci !== rect.sci) {\r\n                    borderAttr.setLDisplay(true);\r\n                    borderAttr.setLColor(color);\r\n                    borderAttr.setLWidthType(widthType);\r\n                    borderAttr.setLType(type);\r\n                  }\r\n                  if (ci !== rect.eci) {\r\n                    borderAttr.setRDisplay(true);\r\n                    borderAttr.setRColor(color);\r\n                    borderAttr.setRWidthType(widthType);\r\n                    borderAttr.setRType(type);\r\n                  }\r\n                  cellDataProxy.setCell(ri, ci, newCell);\r\n                });\r\n                break;\r\n              case 'border5':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    if (ri === rect.sri) {\r\n                      borderAttr.setTDisplay(true);\r\n                      borderAttr.setTColor(color);\r\n                      borderAttr.setTWidthType(widthType);\r\n                      borderAttr.setTType(type);\r\n                    }\r\n                    if (ri === rect.eri) {\r\n                      borderAttr.setBDisplay(true);\r\n                      borderAttr.setBColor(color);\r\n                      borderAttr.setBWidthType(widthType);\r\n                      borderAttr.setBType(type);\r\n                    }\r\n                    if (ci === rect.sci) {\r\n                      borderAttr.setLDisplay(true);\r\n                      borderAttr.setLColor(color);\r\n                      borderAttr.setLWidthType(widthType);\r\n                      borderAttr.setLType(type);\r\n                    }\r\n                    if (ci === rect.eci) {\r\n                      borderAttr.setRDisplay(true);\r\n                      borderAttr.setRColor(color);\r\n                      borderAttr.setRWidthType(widthType);\r\n                      borderAttr.setRType(type);\r\n                    }\r\n                    cellDataProxy.setCell(ri, ci, newCell);\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, ci, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  if (ri === rect.sri) {\r\n                    borderAttr.setTDisplay(true);\r\n                    borderAttr.setTColor(color);\r\n                    borderAttr.setTWidthType(widthType);\r\n                    borderAttr.setTType(type);\r\n                  }\r\n                  if (ri === rect.eri) {\r\n                    borderAttr.setBDisplay(true);\r\n                    borderAttr.setBColor(color);\r\n                    borderAttr.setBWidthType(widthType);\r\n                    borderAttr.setBType(type);\r\n                  }\r\n                  if (ci === rect.sci) {\r\n                    borderAttr.setLDisplay(true);\r\n                    borderAttr.setLColor(color);\r\n                    borderAttr.setLWidthType(widthType);\r\n                    borderAttr.setLType(type);\r\n                  }\r\n                  if (ci === rect.eci) {\r\n                    borderAttr.setRDisplay(true);\r\n                    borderAttr.setRColor(color);\r\n                    borderAttr.setRWidthType(widthType);\r\n                    borderAttr.setRType(type);\r\n                  }\r\n                  cellDataProxy.setCell(ri, ci, newCell);\r\n                });\r\n                break;\r\n              case 'border6':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    if (ci === rect.sci) {\r\n                      borderAttr.setLDisplay(true);\r\n                      borderAttr.setLColor(color);\r\n                      borderAttr.setLWidthType(widthType);\r\n                      borderAttr.setLType(type);\r\n                    }\r\n                    cellDataProxy.setCell(ri, ci, newCell);\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, ci, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  if (ci === rect.sci) {\r\n                    borderAttr.setLDisplay(true);\r\n                    borderAttr.setLColor(color);\r\n                    borderAttr.setLWidthType(widthType);\r\n                    borderAttr.setLType(type);\r\n                  }\r\n                  cellDataProxy.setCell(ri, ci, newCell);\r\n                });\r\n                break;\r\n              case 'border7':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    if (ri === rect.sri) {\r\n                      borderAttr.setTDisplay(true);\r\n                      borderAttr.setTColor(color);\r\n                      borderAttr.setTWidthType(widthType);\r\n                      borderAttr.setTType(type);\r\n                    }\r\n                    cellDataProxy.setCell(ri, ci, newCell);\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, ci, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  if (ri === rect.sri) {\r\n                    borderAttr.setTDisplay(true);\r\n                    borderAttr.setTColor(color);\r\n                    borderAttr.setTWidthType(widthType);\r\n                    borderAttr.setTType(type);\r\n                  }\r\n                  cellDataProxy.setCell(ri, ci, newCell);\r\n                });\r\n                break;\r\n              case 'border8':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    if (ci === rect.eci) {\r\n                      borderAttr.setRDisplay(true);\r\n                      borderAttr.setRColor(color);\r\n                      borderAttr.setRWidthType(widthType);\r\n                      borderAttr.setRType(type);\r\n                    }\r\n                    cellDataProxy.setCell(ri, ci, newCell);\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, ci, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  if (ci === rect.eci) {\r\n                    borderAttr.setRDisplay(true);\r\n                    borderAttr.setRColor(color);\r\n                    borderAttr.setRWidthType(widthType);\r\n                    borderAttr.setRType(type);\r\n                  }\r\n                  cellDataProxy.setCell(ri, ci, newCell);\r\n                });\r\n                break;\r\n              case 'border9':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    if (ri === rect.eri) {\r\n                      borderAttr.setBDisplay(true);\r\n                      borderAttr.setBColor(color);\r\n                      borderAttr.setBWidthType(widthType);\r\n                      borderAttr.setBType(type);\r\n                    }\r\n                    cellDataProxy.setCell(ri, ci, newCell);\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, ci, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  if (ri === rect.eri) {\r\n                    borderAttr.setBDisplay(true);\r\n                    borderAttr.setBColor(color);\r\n                    borderAttr.setBWidthType(widthType);\r\n                    borderAttr.setBType(type);\r\n                  }\r\n                  cellDataProxy.setCell(ri, ci, newCell);\r\n                });\r\n                break;\r\n              case 'border10':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    borderAttr.setAllDisplay(false);\r\n                    cellDataProxy.setCell(ri, ci, newCell);\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, ci, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  borderAttr.setAllDisplay(false);\r\n                  cellDataProxy.setCell(ri, ci, newCell);\r\n                });\r\n                break;\r\n            }\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.fontBold = new FontBold();\r\n    this.fontItalic = new FontItalic();\r\n    this.underLine = new UnderLine();\r\n    this.fontStrike = new FontStrike();\r\n    this.merge = new Merge();\r\n    this.horizontalAlign = new HorizontalAlign({\r\n      contextMenu: {\r\n        onUpdate: (type) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const {\r\n            xScreen,\r\n          } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          switch (type) {\r\n            case BaseFont.ALIGN.left:\r\n              this.horizontalAlign.setIcon(new Icon('align-left'));\r\n              break;\r\n            case BaseFont.ALIGN.center:\r\n              this.horizontalAlign.setIcon(new Icon('align-center'));\r\n              break;\r\n            case BaseFont.ALIGN.right:\r\n              this.horizontalAlign.setIcon(new Icon('align-right'));\r\n              break;\r\n            default: break;\r\n          }\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                cell.fontAttr.align = type;\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.verticalAlign = new VerticalAlign({\r\n      contextMenu: {\r\n        onUpdate: (type) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const {\r\n            xScreen,\r\n          } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          switch (type) {\r\n            case BaseFont.VERTICAL_ALIGN.top:\r\n              this.verticalAlign.setIcon(new Icon('align-top'));\r\n              break;\r\n            case BaseFont.VERTICAL_ALIGN.center:\r\n              this.verticalAlign.setIcon(new Icon('align-middle'));\r\n              break;\r\n            case BaseFont.VERTICAL_ALIGN.bottom:\r\n              this.verticalAlign.setIcon(new Icon('align-bottom'));\r\n              break;\r\n            default: break;\r\n          }\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                cell.fontAttr.verticalAlign = type;\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.textWrapping = new TextWrapping({\r\n      contextMenu: {\r\n        onUpdate: (type) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const {\r\n            xScreen,\r\n          } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          let icon;\r\n          switch (type) {\r\n            case BaseFont.TEXT_WRAP.TRUNCATE:\r\n              icon = new Icon('truncate');\r\n              break;\r\n            case BaseFont.TEXT_WRAP.WORD_WRAP:\r\n              icon = new Icon('text-wrap');\r\n              break;\r\n            case BaseFont.TEXT_WRAP.OVER_FLOW:\r\n              icon = new Icon('overflow');\r\n              break;\r\n          }\r\n          this.textWrapping.setIcon(icon);\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                cell.fontAttr.textWrap = type;\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.fixed = new Fixed({\r\n      contextMenu: {\r\n        onUpdate: (type) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const { xScreen } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          switch (type) {\r\n            case 'ROW': {\r\n              if (this.fixed.rowStatus) {\r\n                table.setFixedRow(-1);\r\n              } else if (selectRange) {\r\n                const scrollView = table.getScrollView();\r\n                const { sri } = selectRange;\r\n                if (sri < scrollView.eri - 2 && sri >= scrollView.sri) {\r\n                  table.setFixedRow(sri);\r\n                } else {\r\n                  new Alert({ message: '无法在当前区域内冻结单元格, 请重新选择冻结区域' }).open();\r\n                }\r\n              }\r\n              break;\r\n            }\r\n            case 'COL': {\r\n              if (this.fixed.colStatus) {\r\n                table.setFixedCol(-1);\r\n              } else if (selectRange) {\r\n                const scrollView = table.getScrollView();\r\n                const { sci } = selectRange;\r\n                if (sci < scrollView.eci - 2 && sci >= scrollView.sci) {\r\n                  table.setFixedCol(sci);\r\n                } else {\r\n                  new Alert({ message: '无法在当前区域内冻结单元格, 请重新选择冻结区域' }).open();\r\n                }\r\n              }\r\n              break;\r\n            }\r\n            case 'ROW1': {\r\n              table.setFixedRow(0, 0);\r\n              break;\r\n            }\r\n            case 'ROW2': {\r\n              table.setFixedRow(1, 0);\r\n              break;\r\n            }\r\n            case 'COL1': {\r\n              table.setFixedCol(0, 0);\r\n              break;\r\n            }\r\n            case 'COL2': {\r\n              table.setFixedCol(1, 0);\r\n            }\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.filter = new Filter();\r\n    this.functions = new Functions();\r\n    this.fontAngle = new FontAngle({\r\n      contextMenu: {\r\n        onUpdateAngle: (angle) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const { xScreen } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                if (angle === 0) {\r\n                  cell.fontAttr.angle = angle;\r\n                  cell.fontAttr.direction = BaseFont.TEXT_DIRECTION.HORIZONTAL;\r\n                } else {\r\n                  cell.borderAttr.updateMaxIndex();\r\n                  cell.fontAttr.angle = angle;\r\n                  cell.fontAttr.direction = BaseFont.TEXT_DIRECTION.ANGLE;\r\n                }\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n        onUpdateType: (type) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const { xScreen } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                cell.fontAttr.angle = 0;\r\n                cell.fontAttr.direction = type;\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.children(this.undo);\r\n    this.children(this.redo);\r\n    this.children(new Divider());\r\n    this.children(this.scale);\r\n    this.children(this.paintFormat);\r\n    this.children(this.clearFormat);\r\n    this.children(this.format);\r\n    this.children(new Divider());\r\n    this.children(this.font);\r\n    this.children(this.dprFontSize);\r\n    this.children(new Divider());\r\n    this.children(this.fontBold);\r\n    this.children(this.fontItalic);\r\n    this.children(this.underLine);\r\n    this.children(this.fontStrike);\r\n    this.children(this.fontColor);\r\n    this.children(new Divider());\r\n    this.children(this.fillColor);\r\n    this.children(this.border);\r\n    this.children(this.merge);\r\n    this.children(new Divider());\r\n    this.children(this.horizontalAlign);\r\n    this.children(this.verticalAlign);\r\n    this.children(this.textWrapping);\r\n    this.children(this.fontAngle);\r\n    this.children(new Divider());\r\n    this.children(this.fixed);\r\n    this.children(this.filter);\r\n    this.children(this.functions);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { body } = this.workTop.work;\r\n    XEvent.bind(body);\r\n    XEvent.bind(this.scale);\r\n    XEvent.bind(this.undo);\r\n    XEvent.bind(this.redo);\r\n    XEvent.bind(this.paintFormat);\r\n    XEvent.bind(this.clearFormat);\r\n    XEvent.bind(this.format);\r\n    XEvent.bind(this.font);\r\n    XEvent.bind(this.dprFontSize);\r\n    XEvent.bind(this.fontBold);\r\n    XEvent.bind(this.fontItalic);\r\n    XEvent.bind(this.underLine);\r\n    XEvent.bind(this.fontStrike);\r\n    XEvent.bind(this.fontColor);\r\n    XEvent.bind(this.fillColor);\r\n    XEvent.bind(this.border);\r\n    XEvent.bind(this.merge);\r\n    XEvent.bind(this.horizontalAlign);\r\n    XEvent.bind(this.verticalAlign);\r\n    XEvent.bind(this.textWrapping);\r\n    XEvent.bind(this.fixed);\r\n    XEvent.bind(this.filter);\r\n  }\r\n\r\n  bind() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    XEvent.bind(body, Constant.WORK_BODY_EVENT_TYPE.CHANGE_ACTIVE, () => {\r\n      this.setStatus();\r\n    });\r\n    XEvent.bind(body, Constant.TABLE_EVENT_TYPE.SELECT_DOWN, () => {\r\n      this.setFormatStatus();\r\n      this.setFontStatus();\r\n      this.setFontSizeStatus();\r\n      this.setFontBoldStatus();\r\n      this.setFontItalicStatus();\r\n      this.setUnderLineStatus();\r\n      this.setFontStrikeStatus();\r\n      this.setFontColorStatus();\r\n      this.setFillColorStatus();\r\n      this.setHorizontalAlignStatus();\r\n      this.setVerticalAlignStatus();\r\n      this.setTextWrappingStatus();\r\n      this.setFontAngleStatus();\r\n    });\r\n    XEvent.bind(body, Constant.TABLE_EVENT_TYPE.DATA_CHANGE, () => {\r\n      this.setStatus();\r\n    });\r\n    XEvent.bind(body, Constant.TABLE_EVENT_TYPE.FIXED_CHANGE, () => {\r\n      this.setFixedStatus();\r\n    });\r\n    XEvent.bind(this.scale, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { scale } = this;\r\n      const { scaleContextMenu } = scale;\r\n      const { elPopUp } = scaleContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (scaleContextMenu.isClose()) {\r\n        scaleContextMenu.open();\r\n      } else {\r\n        scaleContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.undo, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const { tableDataSnapshot } = table;\r\n      if (tableDataSnapshot.canBack()) tableDataSnapshot.back();\r\n    });\r\n    XEvent.bind(this.redo, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const { tableDataSnapshot } = table;\r\n      if (tableDataSnapshot.canGo()) tableDataSnapshot.go();\r\n    });\r\n    XEvent.bind(this.paintFormat, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const { xScreen } = table;\r\n      const xSelect = xScreen.findType(XSelectItem);\r\n      const { selectRange } = xSelect;\r\n      if (PlainUtils.isUnDef(selectRange)) {\r\n        return;\r\n      }\r\n      const { cellMergeCopyHelper } = table;\r\n      const { tableDataSnapshot } = table;\r\n      const xCopyStyle = xScreen.findType(XCopyStyle);\r\n      const callback = () => {\r\n        xCopyStyle.hideCopyStyle();\r\n        // 清除复制\r\n        this.paintFormat.active(false);\r\n        this.paintFormat.removeSheet(sheet);\r\n        // 复制区域\r\n        const originViewRange = xCopyStyle.selectRange.clone();\r\n        const targetViewRange = xSelect.selectRange.clone();\r\n        const [orSize, ocSize] = originViewRange.size();\r\n        const [trSize, tcSize] = targetViewRange.size();\r\n        const rSize = orSize > trSize ? orSize : trSize;\r\n        const cSize = ocSize > tcSize ? ocSize : tcSize;\r\n        targetViewRange.eri = targetViewRange.sri + (rSize - 1);\r\n        targetViewRange.eci = targetViewRange.sci + (cSize - 1);\r\n        // 开始复制\r\n        tableDataSnapshot.begin();\r\n        cellMergeCopyHelper.copyMergeContent({\r\n          originViewRange,\r\n          targetViewRange,\r\n        });\r\n        cellMergeCopyHelper.copyStylesContent({\r\n          originViewRange,\r\n          targetViewRange,\r\n        });\r\n        tableDataSnapshot.end();\r\n        table.render();\r\n        // 删除事件监听\r\n        XEvent.unbind(table, Constant.TABLE_EVENT_TYPE.SELECT_OVER, callback);\r\n      };\r\n      if (this.paintFormat.includeSheet(sheet)) {\r\n        xCopyStyle.hideCopyStyle();\r\n        this.paintFormat.active(false);\r\n        this.paintFormat.removeSheet(sheet);\r\n        XEvent.unbind(table, Constant.TABLE_EVENT_TYPE.SELECT_OVER, callback);\r\n      } else {\r\n        xCopyStyle.showCopyStyle();\r\n        this.paintFormat.active(true);\r\n        this.paintFormat.addSheet(sheet);\r\n        XEvent.bind(table, Constant.TABLE_EVENT_TYPE.SELECT_OVER, callback);\r\n      }\r\n    });\r\n    XEvent.bind(this.clearFormat, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const {\r\n        xScreen,\r\n      } = table;\r\n      const operateCellsHelper = table.getOperateCellsHelper();\r\n      const { tableDataSnapshot } = table;\r\n      const xSelect = xScreen.findType(XSelectItem);\r\n      const { selectRange } = xSelect;\r\n      if (selectRange) {\r\n        tableDataSnapshot.begin();\r\n        const { cellDataProxy } = tableDataSnapshot;\r\n        operateCellsHelper.getCellOrNewCellByViewRange({\r\n          rectRange: selectRange,\r\n          callback: (r, c, origin) => {\r\n            const { text } = origin;\r\n            cellDataProxy.setCell(r, c, new Cell({ text }));\r\n          },\r\n        });\r\n        tableDataSnapshot.end();\r\n        table.render();\r\n      }\r\n    });\r\n    XEvent.bind(this.format, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { format } = this;\r\n      const { formatContextMenu } = format;\r\n      const { elPopUp } = formatContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (formatContextMenu.isClose()) {\r\n        formatContextMenu.open();\r\n      } else {\r\n        formatContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.font, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { font } = this;\r\n      const { fontContextMenu } = font;\r\n      const { elPopUp } = fontContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (fontContextMenu.isClose()) {\r\n        fontContextMenu.open();\r\n      } else {\r\n        fontContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.dprFontSize, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { dprFontSize } = this;\r\n      const { fontSizeContextMenu } = dprFontSize;\r\n      const { elPopUp } = fontSizeContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (fontSizeContextMenu.isClose()) {\r\n        fontSizeContextMenu.open();\r\n      } else {\r\n        fontSizeContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.fontBold, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const {\r\n        xScreen,\r\n      } = table;\r\n      const operateCellsHelper = table.getOperateCellsHelper();\r\n      const cells = table.getTableCells();\r\n      const { tableDataSnapshot } = table;\r\n      const xSelect = xScreen.findType(XSelectItem);\r\n      const { selectRange } = xSelect;\r\n      if (selectRange) {\r\n        const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n        const bold = !firstCell.fontAttr.bold;\r\n        tableDataSnapshot.begin();\r\n        const { cellDataProxy } = tableDataSnapshot;\r\n        operateCellsHelper.getCellOrNewCellByViewRange({\r\n          rectRange: selectRange,\r\n          callback: (r, c, origin) => {\r\n            const cell = origin.clone();\r\n            cell.fontAttr.bold = bold;\r\n            cellDataProxy.setCell(r, c, cell);\r\n          },\r\n        });\r\n        tableDataSnapshot.end();\r\n        table.render();\r\n      }\r\n    });\r\n    XEvent.bind(this.fontItalic, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const {\r\n        xScreen,\r\n      } = table;\r\n      const operateCellsHelper = table.getOperateCellsHelper();\r\n      const cells = table.getTableCells();\r\n      const { tableDataSnapshot } = table;\r\n      const xSelect = xScreen.findType(XSelectItem);\r\n      const { selectRange } = xSelect;\r\n      if (selectRange) {\r\n        const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n        const italic = !firstCell.fontAttr.italic;\r\n        tableDataSnapshot.begin();\r\n        const { cellDataProxy } = tableDataSnapshot;\r\n        operateCellsHelper.getCellOrNewCellByViewRange({\r\n          rectRange: selectRange,\r\n          callback: (r, c, origin) => {\r\n            const cell = origin.clone();\r\n            cell.fontAttr.italic = italic;\r\n            cellDataProxy.setCell(r, c, cell);\r\n          },\r\n        });\r\n        tableDataSnapshot.end();\r\n        table.render();\r\n      }\r\n    });\r\n    XEvent.bind(this.underLine, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const {\r\n        xScreen,\r\n      } = table;\r\n      const operateCellsHelper = table.getOperateCellsHelper();\r\n      const cells = table.getTableCells();\r\n      const { tableDataSnapshot } = table;\r\n      const xSelect = xScreen.findType(XSelectItem);\r\n      const { selectRange } = xSelect;\r\n      if (selectRange) {\r\n        const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n        const underline = !firstCell.fontAttr.underline;\r\n        tableDataSnapshot.begin();\r\n        const { cellDataProxy } = tableDataSnapshot;\r\n        operateCellsHelper.getCellOrNewCellByViewRange({\r\n          rectRange: selectRange,\r\n          callback: (r, c, origin) => {\r\n            const cell = origin.clone();\r\n            cell.fontAttr.underline = underline;\r\n            cellDataProxy.setCell(r, c, cell);\r\n          },\r\n        });\r\n        tableDataSnapshot.end();\r\n        table.render();\r\n      }\r\n    });\r\n    XEvent.bind(this.fontStrike, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const {\r\n        xScreen,\r\n      } = table;\r\n      const operateCellsHelper = table.getOperateCellsHelper();\r\n      const cells = table.getTableCells();\r\n      const { tableDataSnapshot } = table;\r\n      const xSelect = xScreen.findType(XSelectItem);\r\n      const { selectRange } = xSelect;\r\n      if (selectRange) {\r\n        const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n        const strikethrough = !firstCell.fontAttr.strikethrough;\r\n        tableDataSnapshot.begin();\r\n        const { cellDataProxy } = tableDataSnapshot;\r\n        operateCellsHelper.getCellOrNewCellByViewRange({\r\n          rectRange: selectRange,\r\n          callback: (r, c, origin) => {\r\n            const cell = origin.clone();\r\n            cell.fontAttr.strikethrough = strikethrough;\r\n            cellDataProxy.setCell(r, c, cell);\r\n          },\r\n        });\r\n        tableDataSnapshot.end();\r\n        table.render();\r\n      }\r\n    });\r\n    XEvent.bind(this.fontColor, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { fontColor } = this;\r\n      const { fontColorContextMenu } = fontColor;\r\n      const { elPopUp } = fontColorContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (fontColorContextMenu.isClose()) {\r\n        fontColorContextMenu.open();\r\n      } else {\r\n        fontColorContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.fillColor, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { fillColor } = this;\r\n      const { fillColorContextMenu } = fillColor;\r\n      const { elPopUp } = fillColorContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (fillColorContextMenu.isClose()) {\r\n        fillColorContextMenu.open();\r\n      } else {\r\n        fillColorContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.border, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { border } = this;\r\n      const { borderTypeContextMenu } = border;\r\n      const { elPopUp } = borderTypeContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (borderTypeContextMenu.isClose()) {\r\n        borderTypeContextMenu.open();\r\n      } else {\r\n        borderTypeContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.merge, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const {\r\n        xScreen,\r\n      } = table;\r\n      const merges = table.getTableMerges();\r\n      const cells = table.getTableCells();\r\n      const { tableDataSnapshot } = table;\r\n      const xSelect = xScreen.findType(XSelectItem);\r\n      const { selectRange } = xSelect;\r\n      if (selectRange) {\r\n        const merge = selectRange.clone();\r\n        const find = merges.getFirstIncludes(merge.sri, merge.sci);\r\n        const { mergeDataProxy } = tableDataSnapshot;\r\n        if (PlainUtils.isNotUnDef(find) && merge.equals(find)) {\r\n          tableDataSnapshot.begin();\r\n          mergeDataProxy.deleteMerge(find);\r\n          tableDataSnapshot.end();\r\n          table.render();\r\n        } else if (merge.multiple()) {\r\n          if (cells.emptyRectRange(merge)) {\r\n            tableDataSnapshot.begin();\r\n            mergeDataProxy.addMerge(merge);\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          } else {\r\n            new Confirm({\r\n              message: '非空单元格合并将使用左上角单元格内容',\r\n              ok: () => {\r\n                tableDataSnapshot.begin();\r\n                mergeDataProxy.addMerge(merge);\r\n                tableDataSnapshot.end();\r\n                table.render();\r\n              },\r\n            }).open();\r\n          }\r\n        }\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.horizontalAlign, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { horizontalAlign } = this;\r\n      const { horizontalContextMenu } = horizontalAlign;\r\n      const { elPopUp } = horizontalContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (horizontalContextMenu.isClose()) {\r\n        horizontalContextMenu.open();\r\n      } else {\r\n        horizontalContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.verticalAlign, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { verticalAlign } = this;\r\n      const { verticalContextMenu } = verticalAlign;\r\n      const { elPopUp } = verticalContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (verticalContextMenu.isClose()) {\r\n        verticalContextMenu.open();\r\n      } else {\r\n        verticalContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.textWrapping, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { textWrapping } = this;\r\n      const { textWrappingContextMenu } = textWrapping;\r\n      const { elPopUp } = textWrappingContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (textWrappingContextMenu.isClose()) {\r\n        textWrappingContextMenu.open();\r\n      } else {\r\n        textWrappingContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.fixed, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { fixed } = this;\r\n      const { fixedContextMenu } = fixed;\r\n      const { elPopUp } = fixedContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (fixedContextMenu.isClose()) {\r\n        fixedContextMenu.open();\r\n      } else {\r\n        fixedContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.filter, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const { xScreen } = table;\r\n      const filter = xScreen.findType(XFilter);\r\n      if (filter.display) {\r\n        filter.hideFilter();\r\n        this.filter.active(filter.display);\r\n      } else {\r\n        filter.openFilter();\r\n        this.filter.active(filter.display);\r\n      }\r\n    });\r\n    XEvent.bind(this.fontAngle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { fontAngle } = this;\r\n      const { fontAngleContextMenu } = fontAngle;\r\n      const { elPopUp } = fontAngleContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (fontAngleContextMenu.isClose()) {\r\n        fontAngleContextMenu.open();\r\n      } else {\r\n        fontAngleContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n  }\r\n\r\n  setHorizontalAlignStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let icon = new Icon('align-left');\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      switch (firstCell.fontAttr.align) {\r\n        case BaseFont.ALIGN.left:\r\n          icon = new Icon('align-left');\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          icon = new Icon('align-center');\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n          icon = new Icon('align-right');\r\n          break;\r\n        default: break;\r\n      }\r\n    }\r\n    this.horizontalAlign.setIcon(icon);\r\n  }\r\n\r\n  setVerticalAlignStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let icon = new Icon('align-middle');\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      switch (firstCell.fontAttr.verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          icon = new Icon('align-top');\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          icon = new Icon('align-middle');\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          icon = new Icon('align-bottom');\r\n          break;\r\n        default: break;\r\n      }\r\n    }\r\n    this.verticalAlign.setIcon(icon);\r\n  }\r\n\r\n  setTextWrappingStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let icon = new Icon('text-wrap');\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      switch (firstCell.fontAttr.textWrap) {\r\n        case BaseFont.TEXT_WRAP.TRUNCATE:\r\n          icon = new Icon('truncate');\r\n          break;\r\n        case BaseFont.TEXT_WRAP.WORD_WRAP:\r\n          icon = new Icon('text-wrap');\r\n          break;\r\n        case BaseFont.TEXT_WRAP.OVER_FLOW:\r\n          icon = new Icon('overflow');\r\n          break;\r\n      }\r\n    }\r\n    this.textWrapping.setIcon(icon);\r\n  }\r\n\r\n  setUndoStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { tableDataSnapshot } = table;\r\n    this.undo.active(tableDataSnapshot.canBack());\r\n  }\r\n\r\n  setRedoStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { tableDataSnapshot } = table;\r\n    this.redo.active(tableDataSnapshot.canGo());\r\n  }\r\n\r\n  setScaleStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { scale } = table;\r\n    const value = scale.goto(100);\r\n    this.scale.setTitle(`${value}%`);\r\n  }\r\n\r\n  setPaintFormatStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    this.paintFormat.active(this.paintFormat.includeSheet(sheet));\r\n  }\r\n\r\n  setFormatStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let text = '常规';\r\n    let format = 'default';\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      format = firstCell.format;\r\n      switch (format) {\r\n        case 'default':\r\n          text = '常规';\r\n          break;\r\n        case 'text':\r\n          text = '文本';\r\n          break;\r\n        case 'number':\r\n          text = '数字';\r\n          break;\r\n        case 'percentage':\r\n          text = '百分比';\r\n          break;\r\n        case 'fraction':\r\n          text = '分数';\r\n          break;\r\n        case 'ENotation':\r\n          text = '科学计数';\r\n          break;\r\n        case 'rmb':\r\n          text = '人民币';\r\n          break;\r\n        case 'hk':\r\n          text = '港币';\r\n          break;\r\n        case 'dollar':\r\n          text = '美元';\r\n          break;\r\n        case 'date1':\r\n        case 'date2':\r\n        case 'date3':\r\n        case 'date4':\r\n        case 'date5':\r\n          text = '日期';\r\n          break;\r\n        case 'time':\r\n          text = '时间';\r\n          break;\r\n        default: break;\r\n      }\r\n    }\r\n    this.format.setTitle(text);\r\n    this.format.formatContextMenu.setActiveByType(format);\r\n  }\r\n\r\n  setFontStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let name = 'Arial';\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      name = firstCell.fontAttr.name;\r\n    }\r\n    this.font.setTitle(name);\r\n    this.font.fontContextMenu.setActiveByType(name);\r\n  }\r\n\r\n  setStatus() {\r\n    this.setUndoStatus();\r\n    this.setRedoStatus();\r\n    this.setScaleStatus();\r\n    this.setPaintFormatStatus();\r\n    this.setFormatStatus();\r\n    this.setFontStatus();\r\n    this.setFontSizeStatus();\r\n    this.setFontBoldStatus();\r\n    this.setFontItalicStatus();\r\n    this.setUnderLineStatus();\r\n    this.setFontStrikeStatus();\r\n    this.setFontColorStatus();\r\n    this.setFillColorStatus();\r\n    this.setHorizontalAlignStatus();\r\n    this.setVerticalAlignStatus();\r\n    this.setTextWrappingStatus();\r\n    this.setFixedStatus();\r\n    this.setFilterStatus();\r\n    this.setFontAngleStatus();\r\n  }\r\n\r\n  setFixedStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { fixed } = this;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    fixed.setFixedRowStatus(table.xFixedView.hasFixedTop());\r\n    fixed.setFixedColStatus(table.xFixedView.hasFixedLeft());\r\n  }\r\n\r\n  setFilterStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const filter = xScreen.findType(XFilter);\r\n    this.filter.active(filter.display);\r\n  }\r\n\r\n  setUnderLineStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let underline = false;\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      underline = firstCell.fontAttr.underline;\r\n    }\r\n    this.underLine.active(underline);\r\n  }\r\n\r\n  setFontSizeStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let size = '12';\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      size = firstCell.fontAttr.size;\r\n    }\r\n    this.dprFontSize.setTitle(size);\r\n  }\r\n\r\n  setFontBoldStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let bold = false;\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      bold = firstCell.fontAttr.bold;\r\n    }\r\n    this.fontBold.active(bold);\r\n  }\r\n\r\n  setFontStrikeStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let strikethrough = false;\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      strikethrough = firstCell.fontAttr.strikethrough;\r\n    }\r\n    this.fontStrike.active(strikethrough);\r\n  }\r\n\r\n  setFontColorStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let color = 'rgb(0, 0, 0)';\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      color = firstCell.fontAttr.color;\r\n    }\r\n    this.fontColor.setColor(color);\r\n    this.fontColor.fontColorContextMenu.setActiveByColor(color);\r\n  }\r\n\r\n  setFillColorStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let color = 'rgb(255, 255, 255)';\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      if (firstCell.background) {\r\n        color = firstCell.background;\r\n      }\r\n    }\r\n    this.fillColor.setColor(color);\r\n    this.fillColor.fillColorContextMenu.setActiveByColor(color);\r\n  }\r\n\r\n  setFontItalicStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let italic = false;\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      italic = firstCell.fontAttr.italic;\r\n    }\r\n    this.fontItalic.active(italic);\r\n  }\r\n\r\n  setFontAngleStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let angle = 0;\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      angle = firstCell.fontAttr.angle;\r\n    }\r\n    this.fontAngle.setValue(angle);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { TopMenu };\r\n","import { Widget } from '../../../../libs/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass Item extends Widget {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-option-item ${className}`);\r\n    this.title = '';\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title;\r\n    this.text(this.title);\r\n  }\r\n\r\n}\r\n\r\nexport { Item };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\n\r\nclass File extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-file`);\r\n    this.setTitle('文件');\r\n  }\r\n\r\n}\r\n\r\nexport { File };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\n\r\nclass ForMart extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-format`);\r\n    this.setTitle('格式');\r\n  }\r\n\r\n}\r\n\r\nexport { ForMart };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\n\r\nclass Insert extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-insert`);\r\n    this.setTitle('插入');\r\n  }\r\n\r\n}\r\n\r\nexport { Insert };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\n\r\nclass Look extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-look`);\r\n    this.setTitle('查看');\r\n  }\r\n\r\n}\r\n\r\nexport { Look };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\n\r\nclass Update extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-update`);\r\n    this.setTitle('修改');\r\n  }\r\n\r\n}\r\n\r\nexport { Update };\r\n","import { Widget } from '../../libs/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\nimport { File } from './options/File';\r\nimport { ForMart } from './options/ForMart';\r\nimport { Insert } from './options/Insert';\r\nimport { Look } from './options/Look';\r\nimport { Update } from './options/Update';\r\n\r\nclass TopOption extends Widget {\r\n\r\n  constructor(workTop) {\r\n    super(`${cssPrefix}-option`);\r\n\r\n    this.workTop = workTop;\r\n    this.title = `${cssPrefix} 工作簿`;\r\n    this.logoEle = h('div', `${cssPrefix}-option-logo`);\r\n    this.titleEle = h('div', `${cssPrefix}-option-title`);\r\n    this.optionsEle = h('div', `${cssPrefix}-option-box`);\r\n    this.leftEle = h('div', `${cssPrefix}-option-left`);\r\n    this.rightEle = h('div', `${cssPrefix}-option-right`);\r\n    this.leftEle.children(this.logoEle);\r\n    this.rightEle.children(this.titleEle, this.optionsEle);\r\n    this.children(this.leftEle);\r\n    this.children(this.rightEle);\r\n    this.setTitle(this.title);\r\n    this.file = new File();\r\n    this.format = new ForMart();\r\n    this.insert = new Insert();\r\n    this.look = new Look();\r\n    this.update = new Update();\r\n    this.optionsEle.children(this.file);\r\n    this.optionsEle.children(this.format);\r\n    this.optionsEle.children(this.insert);\r\n    this.optionsEle.children(this.look);\r\n    this.optionsEle.children(this.update);\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title;\r\n    this.titleEle.text(title);\r\n  }\r\n\r\n}\r\n\r\nexport { TopOption };\r\n","import { Widget } from '../../libs/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { TopMenu } from './TopMenu';\r\nimport { TopOption } from './TopOption';\r\n\r\nclass WorkTop extends Widget {\r\n\r\n  constructor(work) {\r\n    super(`${cssPrefix}-work-top`);\r\n    this.work = work;\r\n  }\r\n\r\n  onAttach() {\r\n    this.toolsMenu = new TopMenu(this);\r\n    this.option = new TopOption(this);\r\n    this.attach(this.option);\r\n    this.attach(this.toolsMenu);\r\n  }\r\n\r\n}\r\n\r\nexport { WorkTop };\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { Layer } from '../Layer';\r\n\r\nclass HorizontalLayer extends Layer {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-horizontal-layer`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      style: {},\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { HorizontalLayer };\r\n","/* global document */\r\nimport { Widget } from '../../libs/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\n\r\nimport { XEvent } from '../../libs/XEvent';\r\n\r\nclass ScrollBarX extends Widget {\r\n\r\n  constructor(option) {\r\n    super(`${cssPrefix}-scroll-bar-x`);\r\n    this.option = PlainUtils.mergeDeep({\r\n      style: {},\r\n      scroll: to => to,\r\n    }, option);\r\n    this.lastBut = h('div', `${cssPrefix}-scroll-bar-x-last-but`);\r\n    this.nextBut = h('div', `${cssPrefix}-scroll-bar-x-next-but`);\r\n    this.content = h('div', `${cssPrefix}-scroll-bar-x-content`);\r\n    this.block = h('div', `${cssPrefix}-scroll-bar-x-block`);\r\n    this.content.children(this.block);\r\n    this.children(...[\r\n      this.lastBut,\r\n      this.nextBut,\r\n      this.content,\r\n    ]);\r\n    this.blockLeft = 0;\r\n    this.maxBlockLeft = 0;\r\n    this.blockWidth = 0;\r\n    this.minBlockWidth = 20;\r\n    this.scrollTo = 0;\r\n    this.contentWidth = 0;\r\n    this.viewPortWidth = 0;\r\n    this.isHide = true;\r\n    this.css(this.option.style);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n  }\r\n\r\n  setSize(viewPortWidth, contentWidth) {\r\n    if (viewPortWidth < contentWidth) {\r\n      this.isHide = false;\r\n      this.show();\r\n      // 计算滑块宽度\r\n      const contentBox = this.content.box();\r\n      const blockWidth = viewPortWidth / contentWidth * contentBox.width;\r\n      this.blockWidth = blockWidth < this.minBlockWidth ? this.minBlockWidth : blockWidth;\r\n      this.viewPortWidth = viewPortWidth;\r\n      this.contentWidth = contentWidth;\r\n      this.maxBlockLeft = contentBox.width - this.blockWidth;\r\n      this.block.css('width', `${this.blockWidth}px`);\r\n      // 计算滑块位置\r\n      const blockLeft = (this.scrollTo / (contentWidth - viewPortWidth)) * this.maxBlockLeft;\r\n      this.blockLeft = blockLeft > this.maxBlockLeft ? this.maxBlockLeft : blockLeft;\r\n      this.scrollTo = this.computeScrollTo(this.blockLeft);\r\n      this.block.css('left', `${this.blockLeft}px`);\r\n    } else {\r\n      this.isHide = true;\r\n      this.hide();\r\n      this.option.scroll(0);\r\n    }\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.block);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.block, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (evt1) => {\r\n      if (evt1.button !== 0) return;\r\n      const downEventXy = this.eventXy(evt1, this.block);\r\n      XEvent.mouseMoveUp(h(document), (evt2) => {\r\n        // 计算移动的距离\r\n        const moveEventXy = this.eventXy(evt2, this.content);\r\n        let left = moveEventXy.x - downEventXy.x;\r\n        if (left < 0) left = 0;\r\n        if (left > this.maxBlockLeft) left = this.maxBlockLeft;\r\n        // 计算滑动的距离\r\n        this.blockLeft = left;\r\n        this.scrollTo = this.computeScrollTo(this.blockLeft);\r\n        this.block.css('left', `${left}px`);\r\n        this.option.scroll(this.scrollTo);\r\n        evt2.stopPropagation();\r\n        evt2.preventDefault();\r\n      });\r\n      evt1.stopPropagation();\r\n      evt1.preventDefault();\r\n    });\r\n  }\r\n\r\n  scrollMove(move) {\r\n    this.setLocal(move);\r\n    this.option.scroll(this.scrollTo);\r\n  }\r\n\r\n  setLocal(move) {\r\n    let to = move;\r\n    const maxTo = this.contentWidth - this.viewPortWidth;\r\n    if (to > maxTo) to = maxTo; else if (to < 0) to = 0;\r\n    const blockLeft = (to / (this.contentWidth - this.viewPortWidth)) * this.maxBlockLeft;\r\n    this.blockLeft = blockLeft > this.maxBlockLeft ? this.maxBlockLeft : blockLeft;\r\n    if (this.isHide === false) {\r\n      this.scrollTo = to;\r\n      this.block.css('left', `${this.blockLeft}px`);\r\n    }\r\n  }\r\n\r\n  computeScrollTo(move) {\r\n    return (move / this.maxBlockLeft) * (this.contentWidth - this.viewPortWidth);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { ScrollBarX };\r\n","/* global document */\r\nimport { Widget } from '../../libs/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\n\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { XEvent } from '../../libs/XEvent';\r\n\r\nclass ScrollBarY extends Widget {\r\n\r\n  constructor(option) {\r\n    super(`${cssPrefix}-scroll-bar-y`);\r\n    this.option = PlainUtils.mergeDeep({\r\n      style: {},\r\n      scroll: to => to,\r\n    }, option);\r\n    this.lastBut = h('div', `${cssPrefix}-scroll-bar-y-last-but`);\r\n    this.nextBut = h('div', `${cssPrefix}-scroll-bar-y-next-but`);\r\n    this.content = h('div', `${cssPrefix}-scroll-bar-y-content`);\r\n    this.block = h('div', `${cssPrefix}-scroll-bar-y-block`);\r\n    this.content.children(this.block);\r\n    this.children(...[\r\n      this.lastBut,\r\n      this.nextBut,\r\n      this.content,\r\n    ]);\r\n    this.blockTop = 0;\r\n    this.maxBlockTop = 0;\r\n    this.blockHeight = 0;\r\n    this.minBlockHeight = 20;\r\n    this.scrollTo = 0;\r\n    this.contentHeight = 0;\r\n    this.viewPortHeight = 0;\r\n    this.isHide = true;\r\n    this.css(this.option.style);\r\n  }\r\n\r\n  setSize(viewPortHeight, contentHeight) {\r\n    if (viewPortHeight < contentHeight) {\r\n      this.isHide = false;\r\n      this.show();\r\n      // 计算滑块高度\r\n      const contentBox = this.content.box();\r\n      const blockHeight = viewPortHeight / contentHeight * contentBox.height;\r\n      this.blockHeight = blockHeight < this.minBlockHeight ? this.minBlockHeight : blockHeight;\r\n      this.viewPortHeight = viewPortHeight;\r\n      this.contentHeight = contentHeight;\r\n      this.maxBlockTop = contentBox.height - this.blockHeight;\r\n      this.block.css('height', `${this.blockHeight}px`);\r\n      // 计算滑块位置\r\n      const blockTop = (this.scrollTo / (contentHeight - viewPortHeight)) * this.maxBlockTop;\r\n      this.blockTop = blockTop > this.maxBlockTop ? this.maxBlockTop : blockTop;\r\n      this.scrollTo = this.computeScrollTo(this.blockTop);\r\n      this.block.css('top', `${this.blockTop}px`);\r\n    } else {\r\n      this.isHide = true;\r\n      this.hide();\r\n      this.option.scroll(0);\r\n    }\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.block);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.block, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (evt1) => {\r\n      if (evt1.button !== 0) return;\r\n      const downEventXy = this.eventXy(evt1, this.block);\r\n      XEvent.mouseMoveUp(h(document), (evt2) => {\r\n        // 计算移动的距离\r\n        const moveEventXy = this.eventXy(evt2, this.content);\r\n        let top = moveEventXy.y - downEventXy.y;\r\n        if (top < 0) top = 0;\r\n        if (top > this.maxBlockTop) top = this.maxBlockTop;\r\n        // 计算滑动的距离\r\n        this.blockTop = top;\r\n        this.scrollTo = this.computeScrollTo(this.blockTop);\r\n        this.block.css('top', `${top}px`);\r\n        this.option.scroll(this.scrollTo);\r\n        evt2.stopPropagation();\r\n        evt2.preventDefault();\r\n      });\r\n    });\r\n  }\r\n\r\n  setLocal(move) {\r\n    let to = move;\r\n    const maxTo = this.contentHeight - this.viewPortHeight;\r\n    if (to > maxTo) to = maxTo; else if (to < 0) to = 0;\r\n    const blockTop = (to / (this.contentHeight - this.viewPortHeight)) * this.maxBlockTop;\r\n    this.blockTop = blockTop > this.maxBlockTop ? this.maxBlockTop : blockTop;\r\n    if (this.isHide === false) {\r\n      this.scrollTo = to;\r\n      this.block.css('top', `${this.blockTop}px`);\r\n    }\r\n  }\r\n\r\n  scrollMove(move) {\r\n    this.setLocal(move);\r\n    this.option.scroll(this.scrollTo);\r\n  }\r\n\r\n  computeScrollTo(move) {\r\n    return (move / this.maxBlockTop) * (this.contentHeight - this.viewPortHeight);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { ScrollBarY };\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { Layer } from '../Layer';\r\n\r\nclass HorizontalLayerElement extends Layer {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-horizontal-layer-element`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      style: {\r\n        flexGrow: '0',\r\n      },\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { HorizontalLayerElement };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { Layer } from '../../Layer';\r\n\r\nclass VerticalCenterElement extends Layer {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-vertical-center-element`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      style: {},\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { VerticalCenterElement };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { Layer } from '../../Layer';\r\n\r\nclass VerticalCenter extends Layer {\r\n  constructor(options) {\r\n    super(`${cssPrefix}-vertical-center`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      style: {},\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { VerticalCenter };\r\n","import { Widget } from '../../libs/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\n\r\nclass SheetView extends Widget {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-sheet-view`);\r\n    this.sheetList = [];\r\n    this.activeIndex = -1;\r\n  }\r\n\r\n  setActiveSheet(index) {\r\n    const { sheetList } = this;\r\n    if (sheetList[index]) {\r\n      this.activeIndex = index;\r\n      return this.setActive(sheetList[index]);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  attach(sheet) {\r\n    this.sheetList.push(sheet);\r\n    super.attach(sheet);\r\n    sheet.hide();\r\n  }\r\n\r\n  getActiveSheet() {\r\n    return this.sheetList[this.activeIndex];\r\n  }\r\n\r\n  setActive(sheet) {\r\n    sheet.show();\r\n    sheet.sibling().forEach((item) => {\r\n      item.hide();\r\n    });\r\n    return sheet;\r\n  }\r\n\r\n  getLastIndex() {\r\n    return this.sheetList.length - 1;\r\n  }\r\n\r\n}\r\n\r\nexport { SheetView };\r\n","import { Widget } from '../../libs/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { XEvent } from '../../libs/XEvent';\r\n\r\nclass TabView extends Widget {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-sheet-switch-tab`);\r\n    this.last = h('div', `${cssPrefix}-switch-tab-last-btn`);\r\n    this.next = h('div', `${cssPrefix}-switch-tab-next-btn`);\r\n    this.content = h('div', `${cssPrefix}-sheet-tab-content`);\r\n    this.tabs = h('div', `${cssPrefix}-sheet-tab-tabs`);\r\n    this.plus = h('div', `${cssPrefix}-sheet-tab-plus`);\r\n    this.content.children(this.tabs);\r\n    this.children(...[\r\n      this.last,\r\n      this.next,\r\n      this.content,\r\n      this.plus,\r\n    ]);\r\n    this.optiions = PlainUtils.mergeDeep({\r\n      onAdd(tab) { return tab; },\r\n      onSwitch(tab) { return tab; },\r\n    }, options);\r\n    this.left = null;\r\n    this.tabList = [];\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n  }\r\n\r\n  offsetSizeLeft() {\r\n    const maxWidth = this.content.offset().width;\r\n    const current = this.tabs.offset().width;\r\n    if (current > maxWidth) {\r\n      this.left = -(current - maxWidth);\r\n      this.tabs.css('marginLeft', `${this.left}px`);\r\n    }\r\n  }\r\n\r\n  unbind() {\r\n    const { next, last, plus } = this;\r\n    XEvent.unbind(next);\r\n    XEvent.unbind(last);\r\n    XEvent.unbind(plus);\r\n  }\r\n\r\n  bind() {\r\n    const { next, last, plus } = this;\r\n    XEvent.bind(next, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      const maxWidth = this.content.offset().width;\r\n      const current = this.tabs.offset().width;\r\n      const min = -(current - maxWidth);\r\n      let left = this.left || 0;\r\n      left -= 30;\r\n      if (left < min) left = min;\r\n      this.left = left;\r\n      this.tabs.css('marginLeft', `${this.left}px`);\r\n    });\r\n    XEvent.bind(last, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      let left = this.left || 0;\r\n      left += 30;\r\n      if (left > 0) left = 0;\r\n      this.left = left;\r\n      this.tabs.css('marginLeft', `${this.left}px`);\r\n    });\r\n    XEvent.bind(plus, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.optiions.onAdd();\r\n      this.offsetSizeLeft();\r\n    });\r\n  }\r\n\r\n  attach(tab) {\r\n    this.tabList.push(tab);\r\n    this.tabs.children(tab);\r\n    tab.onAttach();\r\n    XEvent.bind(tab, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.setActive(tab);\r\n      this.optiions.onSwitch(tab);\r\n    });\r\n  }\r\n\r\n  setActiveTab(index) {\r\n    const { tabList } = this;\r\n    if (tabList[index]) {\r\n      this.setActive(tabList[index]);\r\n      return tabList[index];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  setActive(tab) {\r\n    tab.addClass('active');\r\n    tab.sibling().forEach((item) => {\r\n      item.removeClass('active');\r\n    });\r\n  }\r\n\r\n  getLastIndex() {\r\n    return this.tabList.length - 1;\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { TabView };\r\n","import { Widget } from '../../libs/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\n\r\nlet number = 1;\r\n\r\nclass Tab extends Widget {\r\n\r\n  constructor(name = `Sheet${number}`) {\r\n    super(`${cssPrefix}-sheet-tab`);\r\n    number += 1;\r\n    this.setName(name);\r\n  }\r\n\r\n  setName(name) {\r\n    this.name = name;\r\n    this.text(this.name);\r\n  }\r\n\r\n}\r\n\r\nexport { Tab };\r\n","class Scale {\r\n\r\n  constructor() {\r\n    this.value = 1;\r\n  }\r\n\r\n  back(origin) {\r\n    return origin / this.value;\r\n  }\r\n\r\n  goto(origin) {\r\n    return this.value * origin;\r\n  }\r\n\r\n  setValue(value) {\r\n    this.value = value;\r\n  }\r\n\r\n}\r\n\r\nclass ScaleAdapter {\r\n\r\n  constructor({\r\n    goto = v => v,\r\n    back = v => v,\r\n  } = {}) {\r\n    this.goto = goto;\r\n    this.back = back;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Scale, ScaleAdapter,\r\n};\r\n","import { ScaleAdapter } from './Scale';\r\n\r\nclass Code {\r\n\r\n  constructor({\r\n    scaleAdapter = new ScaleAdapter(),\r\n    height = 33,\r\n    width = 50,\r\n    background = '#f6f7fa',\r\n    color = '#585757',\r\n    size = 11,\r\n    gridColor = '#e8e8e8',\r\n  }) {\r\n    this.scaleAdapter = scaleAdapter;\r\n    this.height = height;\r\n    this.width = width;\r\n    this.background = background;\r\n    this.color = color;\r\n    this.size = size;\r\n    this.gridColor = gridColor;\r\n  }\r\n\r\n  getGridColor() {\r\n    const { gridColor } = this;\r\n    return gridColor;\r\n  }\r\n\r\n  getColor() {\r\n    const { color } = this;\r\n    return color;\r\n  }\r\n\r\n  getSize() {\r\n    const { scaleAdapter } = this;\r\n    const { size } = this;\r\n    return scaleAdapter.goto(size);\r\n  }\r\n\r\n  getBackground() {\r\n    const { background } = this;\r\n    return background;\r\n  }\r\n\r\n  getHeight() {\r\n    const { scaleAdapter } = this;\r\n    const { height } = this;\r\n    return scaleAdapter.goto(height);\r\n  }\r\n\r\n  getWidth() {\r\n    const { scaleAdapter } = this;\r\n    const { width } = this;\r\n    return scaleAdapter.goto(width);\r\n  }\r\n\r\n}\r\n\r\nexport { Code };\r\n","class Row {\r\n\r\n  constructor(row, {\r\n    height = 30,\r\n  } = {}) {\r\n    this.height = height;\r\n    this.row = row;\r\n    this.reCkHasAngle = true;\r\n    this.hasAngelCell = false;\r\n  }\r\n\r\n  setHasAngelCell(value) {\r\n    this.hasAngelCell = value;\r\n  }\r\n\r\n  setReCkHasAngle(value) {\r\n    this.reCkHasAngle = value;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Row,\r\n};\r\n","import { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { ScaleAdapter } from './Scale';\r\nimport { RectRange } from './RectRange';\r\nimport { Row } from './Row';\r\n\r\nclass Rows {\r\n\r\n  constructor({\r\n    scaleAdapter = new ScaleAdapter(),\r\n    len = 10,\r\n    height = 30,\r\n    xIteratorBuilder,\r\n    data = [],\r\n  }) {\r\n    this.scaleAdapter = scaleAdapter;\r\n    this.len = len;\r\n    this.data = data;\r\n    this.min = 5;\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n    this.height = PlainUtils.minIf(height, this.min);\r\n  }\r\n\r\n  sectionSumHeight(sri, eri) {\r\n    let total = 0;\r\n    if (sri > eri) {\r\n      return total;\r\n    }\r\n    this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(sri)\r\n      .setEnd(eri)\r\n      .setLoop((i) => {\r\n        total += this.getHeight(i);\r\n      })\r\n      .execute();\r\n    return total;\r\n  }\r\n\r\n  rectRangeSumHeight(rectRange) {\r\n    if (!rectRange.equals(RectRange.EMPTY)) {\r\n      return this.sectionSumHeight(rectRange.sri, rectRange.eri);\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  get(ri) {\r\n    let row = this.data[ri];\r\n    if (row) {\r\n      if (row instanceof Row) {\r\n        return row;\r\n      }\r\n      row = new Row(ri, row);\r\n      this.data[ri] = row;\r\n    }\r\n    return row;\r\n  }\r\n\r\n  getOrNew(ri) {\r\n    const row = this.get(ri);\r\n    if (row) {\r\n      return row;\r\n    }\r\n    this.data[ri] = new Row(ri, {\r\n      height: this.height,\r\n    });\r\n    return this.data[ri];\r\n  }\r\n\r\n  getHeight(ri) {\r\n    const { scaleAdapter } = this;\r\n    const row = this.get(ri);\r\n    if (row) {\r\n      return scaleAdapter.goto(row.height);\r\n    }\r\n    return scaleAdapter.goto(this.height);\r\n  }\r\n\r\n  eachHeight(ri, ei, cb, sy = 0) {\r\n    let y = sy;\r\n    this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(ri)\r\n      .setEnd(ei)\r\n      .setLoop((i) => {\r\n        const rowHeight = this.getHeight(i);\r\n        cb(i, rowHeight, y);\r\n        y += rowHeight;\r\n      })\r\n      .execute();\r\n  }\r\n\r\n  setHeight(ri, height) {\r\n    const row = this.getOrNew(ri);\r\n    const { scaleAdapter } = this;\r\n    row.height = scaleAdapter.back(PlainUtils.minIf(height, this.min));\r\n  }\r\n\r\n  getData() {\r\n    return this.data;\r\n  }\r\n\r\n  setData(data) {\r\n    this.data = data;\r\n  }\r\n\r\n}\r\n\r\nexport { Rows };\r\n","class Col {\r\n\r\n  constructor(col, {\r\n    width = 130,\r\n  } = {}) {\r\n    this.col = col;\r\n    this.width = width;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Col,\r\n};\r\n","import { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { ScaleAdapter } from './Scale';\r\nimport { RectRange } from './RectRange';\r\nimport { Col } from './Col';\r\n\r\nclass Cols {\r\n\r\n  constructor({\r\n    scaleAdapter = new ScaleAdapter(),\r\n    len = 10,\r\n    data = [],\r\n    width = 110,\r\n    xIteratorBuilder,\r\n  }) {\r\n    this.scaleAdapter = scaleAdapter;\r\n    this.len = len;\r\n    this.data = data;\r\n    this.min = 5;\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n    this.width = PlainUtils.minIf(width, this.min);\r\n  }\r\n\r\n  sectionSumWidth(sci, eci) {\r\n    let total = 0;\r\n    if (sci > eci) {\r\n      return total;\r\n    }\r\n    this.xIteratorBuilder.getColIterator()\r\n      .setBegin(sci)\r\n      .setEnd(eci)\r\n      .setLoop((i) => {\r\n        total += this.getWidth(i);\r\n      })\r\n      .execute();\r\n    return total;\r\n  }\r\n\r\n  rectRangeSumWidth(rectRange) {\r\n    if (!rectRange.equals(RectRange.EMPTY)) {\r\n      return this.sectionSumWidth(rectRange.sci, rectRange.eci);\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  get(ci) {\r\n    let col = this.data[ci];\r\n    if (col) {\r\n      if (col instanceof Col) {\r\n        return col;\r\n      }\r\n      col = new Col(ci, col);\r\n      this.data[ci] = col;\r\n    }\r\n    return col;\r\n  }\r\n\r\n  getOrNew(ci) {\r\n    const col = this.get(ci);\r\n    if (col) {\r\n      return col;\r\n    }\r\n    this.data[ci] = new Col(ci, {\r\n      width: this.width,\r\n    });\r\n    return this.data[ci];\r\n  }\r\n\r\n  getWidth(i) {\r\n    const { scaleAdapter } = this;\r\n    const col = this.data[i];\r\n    if (col && col.width) {\r\n      return scaleAdapter.goto(col.width);\r\n    }\r\n    return scaleAdapter.goto(this.width);\r\n  }\r\n\r\n  eachWidth(ci, ei, cb, sx = 0) {\r\n    let x = sx;\r\n    this.xIteratorBuilder.getColIterator()\r\n      .setBegin(ci)\r\n      .setEnd(ei)\r\n      .setLoop((i) => {\r\n        const colWidth = this.getWidth(i);\r\n        cb(i, colWidth, x);\r\n        x += colWidth;\r\n      })\r\n      .execute();\r\n  }\r\n\r\n  setWidth(i, width) {\r\n    const col = this.getOrNew(i);\r\n    const { scaleAdapter } = this;\r\n    col.width = scaleAdapter.back(PlainUtils.minIf(width, this.min));\r\n  }\r\n\r\n  getData() {\r\n    return this.data;\r\n  }\r\n\r\n  setData(data) {\r\n    this.data = data;\r\n  }\r\n\r\n}\r\n\r\nexport { Cols };\r\n","\r\nconst SCROLL_TYPE = {\r\n  H_LEFT: Symbol('水平方向左边滚动条'),\r\n  H_RIGHT: Symbol('水平方向向右边滚动'),\r\n  V_TOP: Symbol('垂直方向向上滚动'),\r\n  V_BOTTOM: Symbol('垂直方向下滚动'),\r\n  UN: Symbol('未知'),\r\n};\r\n\r\nclass Scroll {\r\n\r\n  constructor({\r\n    xFixedView,\r\n  }) {\r\n    const fixedView = xFixedView.getFixedView();\r\n    this.ri = fixedView.eri + 1;\r\n    this.ci = fixedView.eci + 1;\r\n    this.x = 0;\r\n    this.y = 0;\r\n    this.type = SCROLL_TYPE.UN;\r\n  }\r\n}\r\n\r\nexport {\r\n  Scroll, SCROLL_TYPE,\r\n};\r\n","/* global document */\r\nimport { XEvent } from '../../libs/XEvent';\r\nimport { Constant } from '../../const/Constant';\r\n\r\nclass XTableKeyboard {\r\n\r\n  constructor(table) {\r\n    const { focus } = table;\r\n    this.table = table;\r\n    this.pool = [];\r\n    this.xTableKeyBoardDownHandle = (e) => {\r\n      const { activate } = focus;\r\n      const { keyCode } = e;\r\n      if (activate) {\r\n        const { target } = activate;\r\n        const find = this.find(target);\r\n        if (find && find.keyCode === keyCode) {\r\n          find.callback();\r\n        }\r\n      }\r\n      if (keyCode === 9) {\r\n        e.preventDefault();\r\n      }\r\n    };\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(document, Constant.SYSTEM_EVENT_TYPE.KEY_DOWN, this.xTableKeyBoardDownHandle);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(document, Constant.SYSTEM_EVENT_TYPE.KEY_DOWN, this.xTableKeyBoardDownHandle);\r\n  }\r\n\r\n  find(el) {\r\n    const { pool } = this;\r\n    for (let i = 0; i < pool.length; i += 1) {\r\n      const item = pool[i];\r\n      const { target } = item;\r\n      if (target === el) {\r\n        return item;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  register({\r\n    target, keyCode, callback,\r\n  }) {\r\n    this.pool.push({ target, keyCode, callback });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableKeyboard,\r\n};\r\n","/* global document */\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { Widget } from '../../../libs/Widget';\r\nimport { h } from '../../../libs/Element';\r\nimport { XEvent } from '../../../libs/XEvent';\r\nimport { XTableMousePointer } from '../XTableMousePointer';\r\n\r\nclass ColFixed extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-col-fixed-bar`);\r\n    const { xFixedView } = table;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const block = h('div', `${cssPrefix}-table-col-fixed-block`);\r\n    this.table = table;\r\n    this.fxSci = fixedView.sci;\r\n    this.fxEci = fixedView.eci;\r\n    this.block = block;\r\n    this.children(block);\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    const {\r\n      mousePointer, dropColFixed, xFixedView,\r\n    } = table;\r\n    let moveOff = true;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.setSize();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.setSize();\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, () => {\r\n      this.setActive(true);\r\n      mousePointer.lock(ColFixed);\r\n      mousePointer.set(XTableMousePointer.KEYS.grab, ColFixed);\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      if (!moveOff) {\r\n        return;\r\n      }\r\n      this.setActive(false);\r\n      mousePointer.free(ColFixed);\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      dropColFixed.show();\r\n      this.setActive(true);\r\n      // 滚动视图\r\n      const scrollView = table.getScrollView();\r\n      // 获取固定区域\r\n      const fixedView = xFixedView.getFixedView();\r\n      this.fxSci = fixedView.sci;\r\n      this.fxEci = fixedView.eci;\r\n      // 锁定鼠标指针\r\n      mousePointer.lock(ColFixed);\r\n      mousePointer.set(XTableMousePointer.KEYS.grab, ColFixed);\r\n      // 推拽条移动位置\r\n      const { x } = table.eventXy(e, table);\r\n      dropColFixed.offset({ left: x });\r\n      moveOff = false;\r\n      // 如果存在固定位置 定位到起始处\r\n      if (xFixedView.hasFixedLeft()) {\r\n        table.scroll.x = 0;\r\n        table.scroll.ci = this.fxEci + 1;\r\n        table.resize();\r\n      }\r\n      XEvent.mouseMoveUp(document, (e) => {\r\n        // 推拽条移动位置\r\n        const { x, y } = table.eventXy(e, table);\r\n        dropColFixed.offset({ left: x });\r\n        // 更新行号\r\n        const { ci } = table.getRiCiByXy(x, y);\r\n        // 是否越界最大列数\r\n        if (ci < scrollView.eci - 2) {\r\n          this.fxEci = ci;\r\n          this.setSize();\r\n        }\r\n      }, () => {\r\n        this.setActive(false);\r\n        // 释放指针\r\n        mousePointer.free(ColFixed);\r\n        dropColFixed.hide();\r\n        // 更新固定区域\r\n        table.setFixedCol(this.fxEci);\r\n        moveOff = true;\r\n      });\r\n    });\r\n  }\r\n\r\n  setActive(status) {\r\n    if (status) {\r\n      this.block.addClass('active');\r\n      this.addClass('active');\r\n    } else {\r\n      this.block.removeClass('active');\r\n      this.removeClass('active');\r\n    }\r\n  }\r\n\r\n  onAttach() {\r\n    const { table } = this;\r\n    // 初始化固定条大小\r\n    this.setSize();\r\n    // 绑定处理函数\r\n    this.bind();\r\n    // 注册焦点元素\r\n    table.focus.register({ target: this, stop: false });\r\n  }\r\n\r\n  setSize() {\r\n    const {\r\n      table, block,\r\n    } = this;\r\n    const { fxSci, fxEci } = this;\r\n    const { cols } = table;\r\n    const width = ColFixed.WIDTH;\r\n    const height = fxEci > -1 ? table.visualHeight() : table.getIndexHeight();\r\n    const offset = fxEci > -1 ? width / 2 : width;\r\n    const left = cols.sectionSumWidth(fxSci, fxEci) + table.getIndexWidth() - offset;\r\n    block.offset({\r\n      height: table.getIndexHeight(), width,\r\n    });\r\n    this.offset({\r\n      width, height, left, top: 0,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\nColFixed.WIDTH = 6;\r\n\r\nexport {\r\n  ColFixed,\r\n};\r\n","/* global document */\r\nimport { Widget } from '../../../libs/Widget';\r\nimport { cssPrefix, Constant } from '../../../const/Constant';\r\nimport { h } from '../../../libs/Element';\r\nimport { XEvent } from '../../../libs/XEvent';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XTableMousePointer } from '../XTableMousePointer';\r\nimport { ColFixed } from '../tablefixed/ColFixed';\r\n\r\nclass XReSizer extends Widget {\r\n\r\n  constructor(table, options = { width: 5 }) {\r\n    super(`${cssPrefix}-re-sizer-horizontal`);\r\n    this.table = table;\r\n    this.options = options;\r\n    this.width = options.width;\r\n    this.hoverEl = h('div', `${cssPrefix}-re-sizer-hover`);\r\n    this.lineEl = h('div', `${cssPrefix}-re-sizer-line`);\r\n    this.children(...[\r\n      this.hoverEl,\r\n      this.lineEl,\r\n    ]);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.table.focus.register({ target: this });\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    const {\r\n      cols, mousePointer, focus, xFixedView,\r\n    } = table;\r\n    const { tableDataSnapshot } = table;\r\n    const { colsDataProxy } = tableDataSnapshot;\r\n    const { index } = table;\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      mousePointer.lock(XReSizer);\r\n      mousePointer.set(XTableMousePointer.KEYS.colResize, XReSizer);\r\n      const { left, ci } = this.getEventLeft(e);\r\n      const min = left - cols.getWidth(ci) + cols.min;\r\n      let { x: mx } = table.eventXy(e);\r\n      XEvent.mouseMoveUp(document, (e) => {\r\n        ({ x: mx } = table.eventXy(e));\r\n        mx -= this.width / 2;\r\n        mx = Math.ceil(PlainUtils.minIf(mx, min));\r\n        this.css('left', `${mx}px`);\r\n        this.lineEl.css('height', `${table.visualHeight()}px`);\r\n        this.lineEl.show();\r\n      }, (e) => {\r\n        mousePointer.free(XReSizer);\r\n        this.lineEl.hide();\r\n        this.css('left', `${mx}px`);\r\n        const { y } = table.eventXy(e);\r\n        if (y <= 0) {\r\n          this.hide();\r\n        }\r\n        const newLeft = mx - (left - cols.getWidth(ci)) + this.width;\r\n        tableDataSnapshot.begin();\r\n        colsDataProxy.setWidth(ci, newLeft);\r\n        tableDataSnapshot.end();\r\n        table.resize();\r\n      });\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      mousePointer.free(XReSizer);\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, () => {\r\n      mousePointer.lock(XReSizer);\r\n      mousePointer.set(XTableMousePointer.KEYS.colResize, XReSizer);\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, (e) => {\r\n      // eslint-disable-next-line prefer-const\r\n      let { left, ci } = this.getEventLeft(e);\r\n      const min = left - cols.getWidth(ci) + cols.min;\r\n      const visualWidth = table.visualWidth();\r\n      const fixedView = xFixedView.getFixedView();\r\n      if (left > visualWidth) {\r\n        left = visualWidth;\r\n      }\r\n      if (left === -1 || min > visualWidth || ci === -1) {\r\n        this.hide();\r\n      } else {\r\n        this.show();\r\n        if (ci === fixedView.eci) {\r\n          this.css('left', `${left - this.width - ColFixed.WIDTH / 2}px`);\r\n        } else {\r\n          this.css('left', `${left - this.width}px`);\r\n        }\r\n        this.hoverEl.css('width', `${this.width}px`);\r\n        this.hoverEl.css('height', `${index.getHeight()}px`);\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      this.hide();\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { activate } = focus;\r\n      const { target } = activate;\r\n      if (target !== table && target !== this) {\r\n        this.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  getEventLeft(event) {\r\n    const { table } = this;\r\n    const {\r\n      cols, xFixedView, xFixedMeasure,\r\n    } = table;\r\n    const { index } = table;\r\n    const { x, y } = table.eventXy(event);\r\n    const { ri, ci } = table.getRiCiByXy(x, y);\r\n    const result = {\r\n      ci, left: -1,\r\n    };\r\n    // 无效区域\r\n    if (ri !== -1) {\r\n      return result;\r\n    }\r\n    const fixedWidth = xFixedMeasure.getWidth();\r\n    const indexWidth = index.getWidth();\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = table.getScrollView();\r\n    // 冻结区域\r\n    if (xFixedView.hasFixedLeft()) {\r\n      if (ci > fixedView.eci) {\r\n        result.left = indexWidth + fixedWidth + cols.sectionSumWidth(scrollView.sci, ci);\r\n      } else {\r\n        result.left = indexWidth + cols.sectionSumWidth(fixedView.sci, ci);\r\n      }\r\n    } else {\r\n      result.left = indexWidth + cols.sectionSumWidth(scrollView.sci, ci);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { XReSizer };\r\n","/* global document */\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { Widget } from '../../../libs/Widget';\r\nimport { h } from '../../../libs/Element';\r\nimport { XEvent } from '../../../libs/XEvent';\r\nimport { XTableMousePointer } from '../XTableMousePointer';\r\n\r\nclass RowFixed extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-row-fixed-bar`);\r\n    const { xFixedView } = table;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const block = h('div', `${cssPrefix}-table-row-fixed-block`);\r\n    this.table = table;\r\n    this.fxSri = fixedView.sri;\r\n    this.fxEri = fixedView.eri;\r\n    this.block = block;\r\n    this.children(this.block);\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    const {\r\n      mousePointer, dropRowFixed, xFixedView,\r\n    } = table;\r\n    let moveOff = true;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.setSize();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.setSize();\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, () => {\r\n      this.setActive(true);\r\n      mousePointer.lock(RowFixed);\r\n      mousePointer.set(XTableMousePointer.KEYS.grab, RowFixed);\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      if (!moveOff) {\r\n        return;\r\n      }\r\n      this.setActive(false);\r\n      mousePointer.free(RowFixed);\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      dropRowFixed.show();\r\n      this.setActive(true);\r\n      // 滚动视图\r\n      const scrollView = table.getScrollView();\r\n      // 获取固定区域\r\n      const fixedView = xFixedView.getFixedView();\r\n      this.fxSri = fixedView.sri;\r\n      this.fxEri = fixedView.eri;\r\n      // 锁定鼠标指针\r\n      mousePointer.lock(RowFixed);\r\n      mousePointer.set(XTableMousePointer.KEYS.grab, RowFixed);\r\n      // 推拽条移动位置\r\n      const { y } = table.eventXy(e, table);\r\n      dropRowFixed.offset({ top: y });\r\n      moveOff = false;\r\n      // 如果存在固定位置 定位到起始处\r\n      if (xFixedView.hasFixedTop()) {\r\n        table.scroll.y = 0;\r\n        table.scroll.ri = this.fxEri + 1;\r\n        table.resize();\r\n      }\r\n      XEvent.mouseMoveUp(document, (e) => {\r\n        // 推拽条移动位置 + 行号\r\n        const { x, y } = table.eventXy(e, table);\r\n        dropRowFixed.offset({ top: y });\r\n        // 更新行号\r\n        const { ri } = table.getRiCiByXy(x, y);\r\n        // 是否越界最大行数\r\n        if (ri < scrollView.eri - 2) {\r\n          this.fxEri = ri;\r\n          this.setSize();\r\n        }\r\n      }, () => {\r\n        this.setActive(false);\r\n        // 释放指针\r\n        mousePointer.free(RowFixed);\r\n        dropRowFixed.hide();\r\n        // 更新固定区域\r\n        table.setFixedRow(this.fxEri);\r\n        moveOff = true;\r\n      });\r\n    });\r\n  }\r\n\r\n  setActive(status) {\r\n    if (status) {\r\n      this.addClass('active');\r\n      this.block.addClass('active');\r\n    } else {\r\n      this.removeClass('active');\r\n      this.block.removeClass('active');\r\n    }\r\n  }\r\n\r\n  onAttach() {\r\n    const { table } = this;\r\n    // 初始化固定条大小\r\n    this.setSize();\r\n    // 绑定处理函数\r\n    this.bind();\r\n    // 注册焦点元素\r\n    table.focus.register({ target: this, stop: false });\r\n  }\r\n\r\n  setSize() {\r\n    const { table, block } = this;\r\n    const { fxSri, fxEri } = this;\r\n    const { rows } = table;\r\n    const height = RowFixed.HEIGHT;\r\n    const width = fxEri > -1 ? table.visualWidth() : table.getIndexWidth();\r\n    const outer = fxEri > -1 ? height / 2 : height;\r\n    const top = rows.sectionSumHeight(fxSri, fxEri) + table.getIndexHeight() - outer;\r\n    block.offset({\r\n      width: table.getIndexWidth(), height,\r\n    });\r\n    this.offset({\r\n      height, width, left: 0, top,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\nRowFixed.HEIGHT = 6;\r\n\r\nexport {\r\n  RowFixed,\r\n};\r\n","/* global document */\r\nimport { Widget } from '../../../libs/Widget';\r\nimport { cssPrefix, Constant } from '../../../const/Constant';\r\nimport { h } from '../../../libs/Element';\r\nimport { XEvent } from '../../../libs/XEvent';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XTableMousePointer } from '../XTableMousePointer';\r\nimport { RowFixed } from '../tablefixed/RowFixed';\r\n\r\nclass YReSizer extends Widget {\r\n\r\n  constructor(table, options = { height: 5 }) {\r\n    super(`${cssPrefix}-re-sizer-vertical`);\r\n    this.table = table;\r\n    this.options = options;\r\n    this.height = options.height;\r\n    this.hoverEl = h('div', `${cssPrefix}-re-sizer-hover`);\r\n    this.lineEl = h('div', `${cssPrefix}-re-sizer-line`);\r\n    this.children(...[\r\n      this.hoverEl,\r\n      this.lineEl,\r\n    ]);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.table.focus.register({ target: this });\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    const {\r\n      rows, mousePointer, focus, xFixedView,\r\n    } = table;\r\n    const { tableDataSnapshot } = table;\r\n    const { rowsDataProxy } = tableDataSnapshot;\r\n    const { index } = table;\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      mousePointer.lock(YReSizer);\r\n      mousePointer.set(XTableMousePointer.KEYS.rowResize, YReSizer);\r\n      const { top, ri } = this.getEventTop(e);\r\n      const min = top - rows.getHeight(ri) + rows.min;\r\n      let { y: my } = table.eventXy(e);\r\n      XEvent.mouseMoveUp(document, (e) => {\r\n        ({ y: my } = table.eventXy(e));\r\n        my -= this.height / 2;\r\n        my = Math.ceil(PlainUtils.minIf(my, min));\r\n        this.css('top', `${my}px`);\r\n        this.lineEl.css('width', `${table.visualWidth()}px`);\r\n        this.lineEl.show();\r\n      }, (e) => {\r\n        mousePointer.free(YReSizer);\r\n        this.lineEl.hide();\r\n        this.css('top', `${my}px`);\r\n        const { x } = table.eventXy(e);\r\n        if (x <= 0) {\r\n          this.hide();\r\n        }\r\n        const newTop = my - (top - rows.getHeight(ri)) + this.height;\r\n        tableDataSnapshot.begin();\r\n        rowsDataProxy.setHeight(ri, newTop);\r\n        tableDataSnapshot.end();\r\n        table.resize();\r\n      });\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      mousePointer.free(YReSizer);\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, () => {\r\n      mousePointer.lock(YReSizer);\r\n      mousePointer.set(XTableMousePointer.KEYS.rowResize, YReSizer);\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, (e) => {\r\n      // eslint-disable-next-line prefer-const\r\n      let { top, ri } = this.getEventTop(e);\r\n      const min = top - rows.getHeight(ri) + rows.min;\r\n      const visualHeight = table.visualHeight();\r\n      const fixedView = xFixedView.getFixedView();\r\n      if (top > visualHeight) {\r\n        top = visualHeight;\r\n      }\r\n      if (top === -1 || min > visualHeight || ri === -1) {\r\n        this.hide();\r\n      } else {\r\n        this.show();\r\n        if (ri === fixedView.eri) {\r\n          this.css('top', `${top - this.height - RowFixed.HEIGHT / 2}px`);\r\n        } else {\r\n          this.css('top', `${top - this.height}px`);\r\n        }\r\n        this.hoverEl.css('width', `${index.getWidth()}px`);\r\n        this.hoverEl.css('height', `${this.height}px`);\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      this.hide();\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { activate } = focus;\r\n      const { target } = activate;\r\n      if (target !== table && target !== this) {\r\n        this.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  getEventTop(event) {\r\n    const { table } = this;\r\n    const {\r\n      rows, xFixedView, xFixedMeasure,\r\n    } = table;\r\n    const { index } = table;\r\n    const { x, y } = table.eventXy(event);\r\n    const { ri, ci } = table.getRiCiByXy(x, y);\r\n    const result = {\r\n      ri, top: -1,\r\n    };\r\n    // 无效区域\r\n    if (ci !== -1) {\r\n      return result;\r\n    }\r\n    const fixedHeight = xFixedMeasure.getHeight();\r\n    const indexHeight = index.getHeight();\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = table.getScrollView();\r\n    // 冻结区域\r\n    if (xFixedView.hasFixedTop()) {\r\n      if (ri > fixedView.eri) {\r\n        result.top = indexHeight + fixedHeight + rows.sectionSumHeight(scrollView.sri, ri);\r\n      } else {\r\n        result.top = indexHeight + rows.sectionSumHeight(fixedView.sri, ri);\r\n      }\r\n    } else {\r\n      result.top = indexHeight + rows.sectionSumHeight(scrollView.sri, ri);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { YReSizer };\r\n","import { Widget } from '../../../libs/Widget';\r\nimport { RANGE_OVER_GO } from '../xscreen/item/viewborder/XScreenStyleBorderItem';\r\nimport { cssPrefix, Constant } from '../../../const/Constant';\r\nimport { XEvent } from '../../../libs/XEvent';\r\nimport { XSelectItem } from '../xscreenitems/xselect/XSelectItem';\r\n\r\nclass XHeightLight extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-x-height-light`);\r\n    this.table = table;\r\n    this.width = -1;\r\n    this.left = -1;\r\n    this.setSize();\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.hide();\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.SELECT_CHANGE, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.FIXED_CHANGE, () => {\r\n      this.offsetHandle();\r\n    });\r\n  }\r\n\r\n  offsetHandle() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen,\r\n    } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    if (selectRange) {\r\n      const left = this.getLeft() + table.getIndexWidth();\r\n      const width = this.getWidth();\r\n      if (left !== this.left || width !== this.width) {\r\n        this.show();\r\n        this.offset({\r\n          top: 0,\r\n          left,\r\n          width,\r\n          height: table.getIndexHeight(),\r\n        });\r\n      }\r\n      this.left = left;\r\n      this.width = width;\r\n    }\r\n  }\r\n\r\n  setSize() {\r\n    const { table } = this;\r\n    this.css('height', `${table.getIndexHeight()}px`);\r\n  }\r\n\r\n  getLeft() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen, rows, xFixedView, cols,\r\n    } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    const overGo = xSelect.getOverGo(selectRange);\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = table.getScrollView();\r\n    scrollView.sri = 0;\r\n    scrollView.eri = rows.length - 1;\r\n    fixedView.sri = 0;\r\n    fixedView.eri = rows.length - 1;\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.BRL:\r\n      case RANGE_OVER_GO.LTL:\r\n      case RANGE_OVER_GO.ALL:\r\n      case RANGE_OVER_GO.LT:\r\n      case RANGE_OVER_GO.LTT:\r\n      case RANGE_OVER_GO.L: {\r\n        return cols.sectionSumWidth(fixedView.sci, selectRange.sci - 1);\r\n      }\r\n      case RANGE_OVER_GO.BR:\r\n      case RANGE_OVER_GO.T:\r\n      case RANGE_OVER_GO.BRT: {\r\n        const coincide = scrollView.coincide(selectRange);\r\n        const scroll = cols.sectionSumWidth(scrollView.sci, coincide.sci - 1);\r\n        const fixed = cols.sectionSumWidth(fixedView.sci, fixedView.eci);\r\n        return fixed + scroll;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  getWidth() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen, rows, xFixedView, cols,\r\n    } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = table.getScrollView();\r\n    const overGo = xSelect.getOverGo(selectRange);\r\n    scrollView.sri = 0;\r\n    scrollView.eri = rows.length - 1;\r\n    fixedView.sri = 0;\r\n    fixedView.eri = rows.length - 1;\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n      case RANGE_OVER_GO.L:\r\n      case RANGE_OVER_GO.LTL: {\r\n        return cols.rectRangeSumWidth(selectRange);\r\n      }\r\n      case RANGE_OVER_GO.BR:\r\n      case RANGE_OVER_GO.T:\r\n      case RANGE_OVER_GO.BRT: {\r\n        return cols.rectRangeSumWidth(scrollView.coincide(selectRange));\r\n      }\r\n      case RANGE_OVER_GO.BRL:\r\n      case RANGE_OVER_GO.LTT:\r\n      case RANGE_OVER_GO.ALL: {\r\n        const scroll = cols.rectRangeSumWidth(scrollView.coincide(selectRange));\r\n        const fixed = cols.rectRangeSumWidth(fixedView.coincide(selectRange));\r\n        return scroll + fixed;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { XHeightLight };\r\n","import { Widget } from '../../../libs/Widget';\r\nimport { RANGE_OVER_GO } from '../xscreen/item/viewborder/XScreenStyleBorderItem';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { XEvent } from '../../../libs/XEvent';\r\nimport { XSelectItem } from '../xscreenitems/xselect/XSelectItem';\r\n\r\nclass YHeightLight extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-y-height-light`);\r\n    this.table = table;\r\n    this.height = -1;\r\n    this.top = -1;\r\n    this.setSize();\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.hide();\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.SELECT_CHANGE, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.FIXED_CHANGE, () => {\r\n      this.offsetHandle();\r\n    });\r\n  }\r\n\r\n  offsetHandle() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen,\r\n    } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    if (selectRange) {\r\n      const top = this.getTop() + table.getIndexHeight();\r\n      const height = this.getHeight();\r\n      if (top !== this.top || height !== this.height) {\r\n        this.show();\r\n        this.offset({\r\n          left: 0,\r\n          top,\r\n          height,\r\n          width: table.getIndexWidth(),\r\n        });\r\n      }\r\n      this.top = top;\r\n      this.height = height;\r\n    }\r\n  }\r\n\r\n  setSize() {\r\n    const { table } = this;\r\n    this.css('width', `${table.getIndexWidth()}px`);\r\n  }\r\n\r\n  getTop() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen, rows, xFixedView, cols,\r\n    } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    const overGo = xSelect.getOverGo(selectRange);\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = table.getScrollView();\r\n    scrollView.sci = 0;\r\n    scrollView.eci = cols.length - 1;\r\n    fixedView.sci = 0;\r\n    fixedView.eci = cols.length - 1;\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.BRT:\r\n      case RANGE_OVER_GO.LTL:\r\n      case RANGE_OVER_GO.ALL:\r\n      case RANGE_OVER_GO.LT:\r\n      case RANGE_OVER_GO.LTT:\r\n      case RANGE_OVER_GO.T: {\r\n        return rows.sectionSumHeight(fixedView.sri, selectRange.sri - 1);\r\n      }\r\n      case RANGE_OVER_GO.BR:\r\n      case RANGE_OVER_GO.L:\r\n      case RANGE_OVER_GO.BRL: {\r\n        const coincide = scrollView.coincide(selectRange);\r\n        const scroll = rows.sectionSumHeight(scrollView.sri, coincide.sri - 1);\r\n        const fixed = rows.sectionSumHeight(fixedView.sri, fixedView.eri);\r\n        return fixed + scroll;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  getHeight() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen, rows, xFixedView, cols,\r\n    } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = table.getScrollView();\r\n    const overGo = xSelect.getOverGo(selectRange);\r\n    scrollView.sci = 0;\r\n    scrollView.eci = cols.length - 1;\r\n    fixedView.sci = 0;\r\n    fixedView.eci = cols.length - 1;\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n      case RANGE_OVER_GO.T:\r\n      case RANGE_OVER_GO.LTT: {\r\n        return rows.rectRangeSumHeight(selectRange);\r\n      }\r\n      case RANGE_OVER_GO.BR:\r\n      case RANGE_OVER_GO.L:\r\n      case RANGE_OVER_GO.BRL: {\r\n        return rows.rectRangeSumHeight(scrollView.coincide(selectRange));\r\n      }\r\n      case RANGE_OVER_GO.BRT:\r\n      case RANGE_OVER_GO.LTL:\r\n      case RANGE_OVER_GO.ALL: {\r\n        const scroll = rows.rectRangeSumHeight(scrollView.coincide(selectRange));\r\n        const fixed = rows.rectRangeSumHeight(fixedView.coincide(selectRange));\r\n        return scroll + fixed;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { YHeightLight };\r\n","/* global document */\r\nimport { Constant } from '../../const/Constant';\r\nimport { XEvent } from '../../libs/XEvent';\r\nimport { Element } from '../../libs/Element';\r\n\r\nclass XTableFocus {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n    this.pool = [];\r\n    this.activate = {};\r\n    this.xTableFocusDownHandle = () => {\r\n      this.activate = {};\r\n    };\r\n    this.bind();\r\n  }\r\n\r\n  remove(target) {\r\n    if (!(target instanceof Element)) {\r\n      throw new TypeError(' error type not Element ');\r\n    }\r\n    const pool = [];\r\n    for (let i = 0; i < this.pool.length; i += 1) {\r\n      const item = this.pool[i];\r\n      if (item.target.el !== target.el) {\r\n        pool.push(item);\r\n      }\r\n    }\r\n    this.pool = pool;\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(document, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN,\r\n      this.xTableFocusDownHandle, true);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(document, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN,\r\n      this.xTableFocusDownHandle, true);\r\n  }\r\n\r\n  add(item) {\r\n    // 是否是Element\r\n    if (!(item.target instanceof Element)) {\r\n      return false;\r\n    }\r\n    // 是否已经注册\r\n    const find = this.findByNode(item.target);\r\n    if (find) {\r\n      return false;\r\n    }\r\n    // 记录注册的元素\r\n    this.pool.push(item);\r\n    if (item.focus) {\r\n      this.activate = this.pool[this.pool.length - 1];\r\n    }\r\n    return true;\r\n  }\r\n\r\n  register({\r\n    attr = {},\r\n    target,\r\n    stop = false,\r\n    focus = false,\r\n  }) {\r\n    if (this.add({\r\n      attr, target, focus, stop,\r\n    })) {\r\n      XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n        const alike = this.findByChild(e.target);\r\n        if (alike) {\r\n          this.activate = alike;\r\n          if (stop) {\r\n            e.stopPropagation();\r\n          }\r\n        } else {\r\n          this.activate = null;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  findByNode(el) {\r\n    for (let i = 0; i < this.pool.length; i += 1) {\r\n      const item = this.pool[i];\r\n      if (item.target.el === el) {\r\n        return item;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  findByChild(el) {\r\n    const { table } = this;\r\n    const root = table.el.parentNode;\r\n    while (el !== root) {\r\n      const find = this.findByNode(el);\r\n      if (find) {\r\n        return find;\r\n      }\r\n      el = el.parentNode;\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\nexport { XTableFocus };\r\n","import { PlainUtils } from '../../utils/PlainUtils';\r\nimport { RectRange } from './tablebase/RectRange';\r\n\r\nconst VIEW_MODE = {\r\n  CHANGE_ADD: Symbol('change_add'),\r\n  CHANGE_NOT: Symbol('change_not'),\r\n  STATIC: Symbol('static'),\r\n  BOUND_OUT: Symbol('bound_out'),\r\n};\r\n\r\n/**\r\n * XTableScrollView\r\n */\r\nclass XTableScrollView {\r\n\r\n  /**\r\n   * 视图类型\r\n   * @param lastView\r\n   * @param view\r\n   * @return {symbol}\r\n   */\r\n  static viewMode(lastView, view) {\r\n    if (PlainUtils.isUnDef(lastView)) {\r\n      return VIEW_MODE.CHANGE_NOT;\r\n    }\r\n    // 视图无变化\r\n    if (view.equals(lastView)) {\r\n      return VIEW_MODE.STATIC;\r\n    }\r\n    // 视图不相交\r\n    if (view.coincide(lastView).equals(RectRange.EMPTY)) {\r\n      return VIEW_MODE.BOUND_OUT;\r\n    }\r\n    // 无新增加的视图区域\r\n    if (view.within(lastView)) {\r\n      return VIEW_MODE.CHANGE_NOT;\r\n    }\r\n    // 有新增的视图区域\r\n    return VIEW_MODE.CHANGE_ADD;\r\n  }\r\n\r\n  /**\r\n   * XTableScrollView\r\n   * @param scroll\r\n   * @param rows\r\n   * @param cols\r\n   * @param xIteratorBuilder\r\n   * @param getHeight\r\n   * @param getWidth\r\n   */\r\n  constructor({\r\n    scroll,\r\n    rows,\r\n    cols,\r\n    xIteratorBuilder,\r\n    getHeight = () => 0,\r\n    getWidth = () => 0,\r\n  }) {\r\n    this.scroll = scroll;\r\n    this.rows = rows;\r\n    this.cols = cols;\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n    this.getHeight = getHeight;\r\n    this.getWidth = getWidth;\r\n  }\r\n\r\n  /**\r\n   * 当前视图滚动区域\r\n   * @returns {RectRange}\r\n   */\r\n  getScrollView() {\r\n    const {\r\n      rows, cols, xIteratorBuilder, scroll, getHeight, getWidth,\r\n    } = this;\r\n    const { ri, ci } = scroll;\r\n    let [width, height] = [0, 0];\r\n    let [eri, eci] = [rows.len, cols.len];\r\n    // 行\r\n    xIteratorBuilder.getRowIterator()\r\n      .setBegin(ri)\r\n      .setEnd(rows.len - 1)\r\n      .setLoop((i) => {\r\n        height += rows.getHeight(i);\r\n        eri = i;\r\n        return height < getHeight();\r\n      })\r\n      .execute();\r\n    // 列\r\n    xIteratorBuilder.getColIterator()\r\n      .setBegin(ci)\r\n      .setEnd(cols.len - 1)\r\n      .setLoop((j) => {\r\n        width += cols.getWidth(j);\r\n        eci = j;\r\n        return width < getWidth();\r\n      })\r\n      .execute();\r\n    // 滚动视图\r\n    return new RectRange(ri, ci, eri, eci);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableScrollView,\r\n  VIEW_MODE,\r\n};\r\n","import { PlainUtils } from '../../utils/PlainUtils';\r\n\r\n/**\r\n * TableAreaView\r\n */\r\nclass XTableAreaView {\r\n\r\n  /**\r\n   * TableAreaView\r\n   * @param xTableScrollView\r\n   * @param rows\r\n   * @param cols\r\n   * @param scroll\r\n   */\r\n  constructor({\r\n    xTableScrollView,\r\n    rows,\r\n    cols,\r\n    scroll,\r\n  }) {\r\n    this.xTableScrollView = xTableScrollView;\r\n    this.scroll = scroll;\r\n    this.rows = rows;\r\n    this.cols = cols;\r\n    this.scrollView = null;\r\n  }\r\n\r\n  /**\r\n   * 重置变量区\r\n   */\r\n  reset() {\r\n    this.scrollView = null;\r\n  }\r\n\r\n  /**\r\n   * 当前视图滚动区域\r\n   * @returns {RectRange}\r\n   */\r\n  getScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { xTableScrollView } = this;\r\n    const { cols, rows } = this;\r\n    const scrollView = xTableScrollView.getScrollView();\r\n    scrollView.w = cols.rectRangeSumWidth(scrollView);\r\n    scrollView.h = rows.rectRangeSumHeight(scrollView);\r\n    this.scrollView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableAreaView,\r\n};\r\n","class Throttle {\r\n\r\n  constructor({\r\n    time = 500,\r\n  } = {}) {\r\n    this.handle = null;\r\n    this.time = time;\r\n  }\r\n\r\n  setTime(time) {\r\n    this.time = time;\r\n  }\r\n\r\n  action(cb) {\r\n    clearTimeout(this.handle);\r\n    this.handle = setTimeout(() => {\r\n      cb();\r\n    }, this.time);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Throttle,\r\n};\r\n","import { Widget } from '../../libs/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { XEvent } from '../../libs/XEvent';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { XSelectItem } from './xscreenitems/xselect/XSelectItem';\r\nimport { XDraw } from '../../canvas/XDraw';\r\nimport { Throttle } from '../../libs/Throttle';\r\nimport { BaseFont } from '../../canvas/font/BaseFont';\r\n\r\nclass XTableEdit extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-edit`);\r\n    this.table = table;\r\n    this.cell = null;\r\n    this.merge = null;\r\n    this.select = null;\r\n    this.throttle = new Throttle({ time: 100 });\r\n    this.attr('contenteditable', true);\r\n    this.html(PlainUtils.EMPTY);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.hide();\r\n  }\r\n\r\n  editOffset() {\r\n    const { table, cell } = this;\r\n    const {\r\n      xHeightLight, yHeightLight,\r\n    } = table;\r\n    const { fontAttr } = cell;\r\n    const { align } = fontAttr;\r\n    const left = xHeightLight.getLeft() + table.getIndexWidth();\r\n    const top = yHeightLight.getTop() + table.getIndexHeight();\r\n    const height = yHeightLight.getHeight();\r\n    const width = xHeightLight.getWidth();\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left: {\r\n        this.cssRemoveKeys('right');\r\n        const maxHeight = table.visualHeight() - top;\r\n        const maxWidth = table.visualWidth() - left;\r\n        this.css({\r\n          left: `${left}px`,\r\n          top: `${top}px`,\r\n          'min-width': `${XDraw.offsetToLineInside(Math.min(width, maxWidth))}px`,\r\n          'min-height': `${XDraw.offsetToLineInside(Math.min(height, maxHeight))}px`,\r\n          'max-width': `${XDraw.offsetToLineInside(maxWidth)}px`,\r\n          'max-height': `${XDraw.offsetToLineInside(maxHeight)}px`,\r\n        });\r\n        break;\r\n      }\r\n      case BaseFont.ALIGN.center: {\r\n        this.cssRemoveKeys('right');\r\n        const box = this.box();\r\n        const maxHeight = table.visualHeight() - top;\r\n        if (box.width > width) {\r\n          const maxWidth = (table.visualWidth() - (left + width)) * 2 + width;\r\n          const realWidth = Math.min(box.width, maxWidth);\r\n          const realLeft = left - (realWidth / 2 - width / 2);\r\n          this.css({\r\n            left: `${realLeft}px`,\r\n            top: `${top}px`,\r\n            'min-width': `${XDraw.offsetToLineInside(Math.min(width, maxWidth))}px`,\r\n            'min-height': `${XDraw.offsetToLineInside(Math.min(height, maxHeight))}px`,\r\n            'max-width': `${XDraw.offsetToLineInside(maxWidth)}px`,\r\n            'max-height': `${XDraw.offsetToLineInside(maxHeight)}px`,\r\n          });\r\n        } else {\r\n          const maxWidth = table.visualWidth() - left;\r\n          this.css({\r\n            left: `${left}px`,\r\n            top: `${top}px`,\r\n            'min-width': `${XDraw.offsetToLineInside(Math.min(width, maxWidth))}px`,\r\n            'min-height': `${XDraw.offsetToLineInside(Math.min(height, maxHeight))}px`,\r\n            'max-width': `${XDraw.offsetToLineInside(maxWidth)}px`,\r\n            'max-height': `${XDraw.offsetToLineInside(maxHeight)}px`,\r\n          });\r\n        }\r\n        break;\r\n      }\r\n      case BaseFont.ALIGN.right: {\r\n        this.cssRemoveKeys('left');\r\n        const maxWidth = (left + width) - table.getIndexWidth();\r\n        const right = table.visualWidth() - (left + width);\r\n        const maxHeight = table.visualHeight() - top;\r\n        this.css({\r\n          right: `${right}px`,\r\n          top: `${top}px`,\r\n          'min-width': `${XDraw.offsetToLineInside(Math.min(width, maxWidth))}px`,\r\n          'min-height': `${XDraw.offsetToLineInside(Math.min(height, maxHeight))}px`,\r\n          'max-width': `${XDraw.offsetToLineInside(maxWidth)}px`,\r\n          'max-height': `${XDraw.offsetToLineInside(maxHeight)}px`,\r\n        });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    const { xScreen } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    XEvent.bind(table);\r\n    XEvent.unbind([\r\n      xSelect.lt,\r\n      xSelect.t,\r\n      xSelect.l,\r\n      xSelect.br,\r\n    ]);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    const { xScreen } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const merges = table.getTableMerges();\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_WHEEL, (e) => {\r\n      e.stopPropagation();\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      e.stopPropagation();\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.INPUT, () => {\r\n      const { cell } = this;\r\n      const { fontAttr } = cell;\r\n      const { align } = fontAttr;\r\n      if (align === BaseFont.ALIGN.center) {\r\n        this.editOffset();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.hideEdit();\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\r\n      this.hideEdit();\r\n    });\r\n    XEvent.mouseDoubleClick(table, () => {\r\n      const { selectRange } = xSelect;\r\n      const { sri, sci } = selectRange;\r\n      if (!selectRange.multiple() || merges.getFirstIncludes(sri, sci)) {\r\n        this.showEdit();\r\n      }\r\n    });\r\n  }\r\n\r\n  showEdit() {\r\n    const { table } = this;\r\n    const merges = table.getTableMerges();\r\n    const cells = table.getTableCells();\r\n    const { xScreen } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    if (selectRange) {\r\n      const { sri, sci } = selectRange;\r\n      const merge = merges.getFirstIncludes(sri, sci);\r\n      const cell = cells.getCellOrNew(sri, sci);\r\n      this.merge = merge;\r\n      this.cell = cell;\r\n      this.select = selectRange;\r\n      this.show();\r\n      if (PlainUtils.isBlank(cell.text)) {\r\n        this.html(PlainUtils.EMPTY);\r\n      } else {\r\n        this.html(cell.text);\r\n      }\r\n      this.attr('style', table.getCellCssStyle(sri, sci));\r\n      this.editOffset();\r\n      this.throttle.action(() => {\r\n        PlainUtils.keepLastIndex(this.el);\r\n      });\r\n    }\r\n  }\r\n\r\n  hideEdit() {\r\n    const { select } = this;\r\n    const { table } = this;\r\n    const cells = table.getTableCells();\r\n    const { tableDataSnapshot } = table;\r\n    const { cellDataProxy } = tableDataSnapshot;\r\n    if (select) {\r\n      const origin = cells.getCellOrNew(select.sri, select.sci);\r\n      const cell = origin.clone();\r\n      const text = PlainUtils.trim(this.text());\r\n      this.hide();\r\n      if (cell.text !== text) {\r\n        tableDataSnapshot.begin();\r\n        cell.setText(text);\r\n        cellDataProxy.setCell(select.sri, select.sci, cell);\r\n        tableDataSnapshot.end();\r\n        table.render();\r\n      }\r\n      this.select = null;\r\n    }\r\n  }\r\n\r\n  show() {\r\n    this.css({\r\n      'min-width': '0px',\r\n      'min-height': '0px',\r\n      'max-width': '0px',\r\n      'max-height': '0px',\r\n    });\r\n    return super.show();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableEdit,\r\n};\r\n","import { SolidLine } from './Line';\r\n\r\nclass Grid {\r\n\r\n  constructor(draw, attr = {}) {\r\n    this.solidLine = new SolidLine(draw, attr);\r\n  }\r\n\r\n  horizonLine(sx, sy, ex, ey) {\r\n    const { solidLine } = this;\r\n    solidLine.horizonLine(sx, sy, ex, ey);\r\n  }\r\n\r\n  verticalLine(sx, sy, ex, ey) {\r\n    const { solidLine } = this;\r\n    solidLine.verticalLine(sx, sy, ex, ey);\r\n  }\r\n}\r\n\r\nexport { Grid };\r\n","class Box {\r\n\r\n  constructor({\r\n    rect, draw, path, background,\r\n  }) {\r\n    this.draw = draw;\r\n    this.path = path;\r\n    this.rect = rect;\r\n    this.background = background;\r\n  }\r\n\r\n  setPath({\r\n    path,\r\n  }) {\r\n    this.path = path;\r\n  }\r\n\r\n  setRect({\r\n    rect,\r\n  }) {\r\n    this.rect = rect;\r\n  }\r\n\r\n  setBackground({\r\n    color,\r\n  }) {\r\n    this.background = color;\r\n  }\r\n\r\n  render() {\r\n    const { draw, rect, path, background } = this;\r\n    if (rect && background) {\r\n      draw.attr({\r\n        fillStyle: background,\r\n      });\r\n      draw.fillRect(rect.x, rect.y, rect.width, rect.height);\r\n      return;\r\n    }\r\n    if (path && background) {\r\n      draw.attr({\r\n        fillStyle: background,\r\n      });\r\n      draw.fillPath(path);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { Box };\r\n","import { Cell } from './Cell';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\n/**\r\n * Cells\r\n * @author jerry\r\n */\r\nclass Cells {\r\n\r\n  constructor({\r\n    onChange = () => {},\r\n    table,\r\n    xTableData,\r\n    xIteratorBuilder,\r\n  }) {\r\n    this.table = table;\r\n    this.xTableData = xTableData;\r\n    this.onChange = onChange;\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n  }\r\n\r\n  emptyRectRange(rectRange) {\r\n    let empty = true;\r\n    rectRange.each(this.xIteratorBuilder, (ri, ci) => {\r\n      const cell = this.getCell(ri, ci);\r\n      if (PlainUtils.isNotEmptyObject(cell) && !PlainUtils.isBlank(cell.text)) {\r\n        empty = false;\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n    return empty;\r\n  }\r\n\r\n  setCell(ri, ci, cell) {\r\n    const item = this.xTableData.get(ri, ci);\r\n    if (item) {\r\n      item.setCell(cell);\r\n      this.onChange(ri, ci);\r\n    }\r\n  }\r\n\r\n  setCellOrNew(ri, ci, cell) {\r\n    const item = this.xTableData.getOrNew(ri, ci);\r\n    item.setCell(cell);\r\n    this.onChange(ri, ci);\r\n  }\r\n\r\n  getCellOrNew(ri, ci) {\r\n    const item = this.xTableData.getOrNew(ri, ci);\r\n    const find = item.getCell();\r\n    if (find) {\r\n      return find;\r\n    }\r\n    const cell = new Cell({ text: PlainUtils.EMPTY });\r\n    item.setCell(cell);\r\n    return cell;\r\n  }\r\n\r\n  getCellOrMergeCell(ri, ci) {\r\n    const { table } = this;\r\n    const { merges } = table;\r\n    const merge = merges.getFirstIncludes(ri, ci);\r\n    if (merge) {\r\n      return this.getCell(merge.sri, merge.sci);\r\n    }\r\n    return this.getCell(ri, ci);\r\n  }\r\n\r\n  getCell(ri, ci) {\r\n    const item = this.xTableData.get(ri, ci);\r\n    if (item) {\r\n      return item.getCell();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getData() {\r\n    this.xTableData.wrapAll();\r\n    return this.xTableData.getItems().map(rows => rows.map((item) => {\r\n      if (item) {\r\n        return item.getCell();\r\n      }\r\n      return null;\r\n    }));\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Cells,\r\n};\r\n","class DateUtils {\r\n\r\n  static parserToDate(dateText, format) {\r\n    if (!dateText) {\r\n      return null;\r\n    }\r\n    const defaultVal = new Date('1970/01/01 00:00:00');\r\n    const o = [{\r\n      reg: 'y+',\r\n    }, {\r\n      reg: 'M+',\r\n    }, {\r\n      reg: 'd+',\r\n    }, {\r\n      reg: 'h+',\r\n    }, {\r\n      reg: 'm+',\r\n    }, {\r\n      reg: 's+',\r\n    }, {\r\n      reg: 'S',\r\n    }];\r\n    let year = defaultVal.getFullYear();\r\n    let month = defaultVal.getMonth() + 1;\r\n    let day = defaultVal.getDate();\r\n    let hours = defaultVal.getHours();\r\n    let minutes = defaultVal.getMinutes();\r\n    let seconds = defaultVal.getSeconds();\r\n    let milliseconds = defaultVal.getMilliseconds();\r\n    let index = 1;\r\n    for (let j = 0; j < format.length; j += 1) {\r\n      const oneChar = format[j];\r\n      for (let i = 0; i < o.length; i += 1) {\r\n        const onePart = o[i];\r\n        const onePartReg = onePart.reg;\r\n        if (onePartReg[0] === oneChar) {\r\n          if (!onePart.index) {\r\n            onePart.index = index;\r\n            index += 1;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    for (let i = 0; i < o.length; i += 1) {\r\n      const onePart = o[i];\r\n      const onePartReg = onePart.reg;\r\n      const re = new RegExp(`(${onePartReg})`);\r\n      const res = re.exec(format);\r\n      if (res) {\r\n        const formatPart = res[0];\r\n        const replaceVal = `([0-9]{1,${formatPart.length}})`;\r\n        // eslint-disable-next-line no-param-reassign\r\n        format = format.replace(formatPart, replaceVal);\r\n      }\r\n    }\r\n    const dataInfo = {};\r\n    const re = new RegExp(format);\r\n    const res = re.exec(dateText);\r\n    if (res) {\r\n      for (let i = 1; i < res.length; i += 1) {\r\n        dataInfo[i] = res[i];\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n    if (o[0].index) {\r\n      const { index } = o[0];\r\n      year = dataInfo[index];\r\n    }\r\n    if (o[1].index) {\r\n      const { index } = o[1];\r\n      month = dataInfo[index];\r\n    }\r\n    if (o[2].index) {\r\n      const { index } = o[2];\r\n      day = dataInfo[index];\r\n    }\r\n    if (o[3].index) {\r\n      const { index } = o[3];\r\n      hours = dataInfo[index];\r\n    }\r\n    if (o[4].index) {\r\n      const { index } = o[4];\r\n      minutes = dataInfo[index];\r\n    }\r\n    if (o[5].index) {\r\n      const { index } = o[5];\r\n      seconds = dataInfo[index];\r\n    }\r\n    if (o[6].index) {\r\n      const { index } = o[6];\r\n      milliseconds = dataInfo[index];\r\n    }\r\n    return new Date(year, month - 1, day, hours, minutes, seconds, milliseconds);\r\n  }\r\n\r\n  static dateFormat(fmt, date) {\r\n    const o = {\r\n      'M+': date.getMonth() + 1,\r\n      'd+': date.getDate(),\r\n      'h+': date.getHours(),\r\n      'm+': date.getMinutes(),\r\n      's+': date.getSeconds(),\r\n      'q+': Math.floor((date.getMonth() + 3) / 3),\r\n      S: date.getMilliseconds(),\r\n    };\r\n    const reYear = /(y+)/;\r\n    const resultYear = reYear.exec(fmt);\r\n    if (resultYear) {\r\n      const yearFormatPart = resultYear[0];\r\n      const yearVal = (date.getFullYear().toString()).substr(4 - yearFormatPart.length);\r\n      // eslint-disable-next-line no-param-reassign\r\n      fmt = fmt.replace(yearFormatPart, yearVal);\r\n    }\r\n    // eslint-disable-next-line guard-for-in,no-restricted-syntax\r\n    for (const k in o) {\r\n      const re = new RegExp(`(${k})`);\r\n      const res = re.exec(fmt);\r\n      if (res) {\r\n        const Val = o[k].toString();\r\n        const formatPart = res[0];\r\n        const replaceVal = (formatPart.length === 1) ? (Val) : ((`00${Val}`).substr(Val.length));\r\n        // eslint-disable-next-line no-param-reassign\r\n        fmt = fmt.replace(formatPart, replaceVal);\r\n      }\r\n    }\r\n    return fmt;\r\n  }\r\n\r\n}\r\n\r\nexport { DateUtils };\r\n","import { PlainUtils } from '../../utils/PlainUtils';\r\nimport { DateUtils } from '../../utils/DateUtils';\r\n\r\nfunction parserToDate(text) {\r\n  let result = DateUtils.parserToDate(text, 'yyyy/MM/dd hh:mm:ss');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'yyyy/MM/dd');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'hh:mm:ss');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'MM月dd日');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'yyyy年MM月');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'yyyy年MM月dd日');\r\n  if (result) return result;\r\n  return null;\r\n}\r\n\r\nclass Format {\r\n\r\n  default(value) {\r\n    return value;\r\n  }\r\n\r\n  text(value) {\r\n    return value;\r\n  }\r\n\r\n  number(value) {\r\n    if (PlainUtils.isNumber(value)) {\r\n      if (value.toString().indexOf('.') !== -1) {\r\n        const lastIndex = value.toString().lastIndexOf('.') + 1;\r\n        return value.toString().substring(0, lastIndex + 2);\r\n      }\r\n      return `${value}.00`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  percentage(value) {\r\n    if (PlainUtils.isNumber(value)) {\r\n      return `${value}%`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  fraction(value) {\r\n    if (PlainUtils.isFraction(value)) {\r\n      const left = value.split('/')[0];\r\n      const right = value.split('/')[1];\r\n      return PlainUtils.parseInt(left) / PlainUtils.parseInt(right);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  ENotation(value) {\r\n    if (PlainUtils.isNumber(value)) {\r\n      const number = PlainUtils.parseFloat(value);\r\n      return number.toExponential(2);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  rmb(value) {\r\n    if (PlainUtils.isNumber(value)) {\r\n      return `￥${value}`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  hk(value) {\r\n    if (PlainUtils.isNumber(value)) {\r\n      return `HK${value}`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  dollar(value) {\r\n    if (PlainUtils.isNumber(value)) {\r\n      return `$${value}`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  date1(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('yyyy/MM/dd', result);\r\n    return value;\r\n  }\r\n\r\n  date2(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('MM月dd日', result);\r\n    return value;\r\n  }\r\n\r\n  date3(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('yyyy年MM月', result);\r\n    return value;\r\n  }\r\n\r\n  date4(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('yyyy年MM月dd日', result);\r\n    return value;\r\n  }\r\n\r\n  date5(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('yyyy/MM/dd hh:mm:ss', result);\r\n    return value;\r\n  }\r\n\r\n  time(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('hh:mm:ss', result);\r\n    return value;\r\n  }\r\n}\r\n\r\nconst format = new Format();\r\n\r\nexport default (type, value) => format[type](value);\r\n","import { XDraw } from './XDraw';\r\n\r\n/**\r\n * RTSinKit\r\n */\r\nclass RTSinKit {\r\n\r\n  /**\r\n   * 计算对边\r\n   * @see http://math001.com/trigonometric_function/\r\n   * @param tilt 斜边\r\n   * @param angle 角度\r\n   */\r\n  static inverse({ tilt, angle }) {\r\n    return Math.abs(tilt * Math.sin(XDraw.radian(angle)));\r\n  }\r\n\r\n  /**\r\n   * 计算斜边\r\n   * @see http://math001.com/trigonometric_function/\r\n   * @param inverse 对边\r\n   * @param angle 角度\r\n   */\r\n  static tilt({ inverse, angle }) {\r\n    return Math.abs(inverse / Math.sin(XDraw.radian(angle)));\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * RTCosKit\r\n */\r\nclass RTCosKit {\r\n\r\n  /**\r\n   * 计算邻边\r\n   * @see http://math001.com/trigonometric_function/\r\n   * @param tilt\r\n   * @param angle\r\n   */\r\n  static nearby({ tilt, angle }) {\r\n    return Math.abs(tilt * Math.cos(XDraw.radian((angle))));\r\n  }\r\n\r\n  /**\r\n   * 计算斜边\r\n   * @see http://math001.com/trigonometric_function/\r\n   * @param nearby 领边\r\n   * @param angle 角度\r\n   */\r\n  static tilt({ nearby, angle }) {\r\n    return Math.abs(nearby / Math.cos(XDraw.radian((angle))));\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RTSinKit, RTCosKit,\r\n};\r\n","import { Rect } from './Rect';\r\n\r\nconst ANGLE_ORIGIN = {\r\n  TOP_LEFT: 'top-left',\r\n  TOP_CENTER: 'top-center',\r\n  TOP_RIGHT: 'top-right',\r\n  MIDDLE_LEFT: 'middle-left',\r\n  MIDDLE_CENTER: 'middle-center',\r\n  MIDDLE_RIGHT: 'middle-right',\r\n  BOTTOM_LEFT: 'bottom-left',\r\n  BOTTOM_CENTER: 'bottom-center',\r\n  BOTTOM_RIGHT: 'bottom-right',\r\n};\r\n\r\nclass Angle {\r\n\r\n  constructor({\r\n    angle,\r\n    draw,\r\n    origin = ANGLE_ORIGIN.MIDDLE_CENTER,\r\n    rect = new Rect({ x: 0, y: 0, width: 0, height: 0 }),\r\n  }) {\r\n    this.draw = draw;\r\n    this.origin = origin;\r\n    this.rect = rect;\r\n    this.angle = angle;\r\n  }\r\n\r\n  rotate() {\r\n    const { origin, draw, rect, angle } = this;\r\n    const { x, y, width, height } = rect;\r\n    draw.save();\r\n    let tx = 0;\r\n    let ty = 0;\r\n    switch (origin) {\r\n      case ANGLE_ORIGIN.TOP_LEFT:\r\n        tx = x;\r\n        ty = y;\r\n        break;\r\n      case ANGLE_ORIGIN.TOP_CENTER:\r\n        tx = x + width / 2;\r\n        ty = y;\r\n        break;\r\n      case ANGLE_ORIGIN.TOP_RIGHT:\r\n        tx = x + width;\r\n        ty = y;\r\n        break;\r\n      case ANGLE_ORIGIN.MIDDLE_LEFT:\r\n        tx = x;\r\n        ty = y + height / 2;\r\n        break;\r\n      case ANGLE_ORIGIN.MIDDLE_CENTER:\r\n        tx = x + width / 2;\r\n        ty = y + height / 2;\r\n        break;\r\n      case ANGLE_ORIGIN.MIDDLE_RIGHT:\r\n        tx = x + width;\r\n        ty = y + height / 2;\r\n        break;\r\n      case ANGLE_ORIGIN.BOTTOM_LEFT:\r\n        tx = x;\r\n        ty = y + height;\r\n        break;\r\n      case ANGLE_ORIGIN.BOTTOM_CENTER:\r\n        tx = x + width / 2;\r\n        ty = y + height;\r\n        break;\r\n      case ANGLE_ORIGIN.BOTTOM_RIGHT:\r\n        tx = x + width;\r\n        ty = y + height;\r\n        break;\r\n      default: break;\r\n    }\r\n    const offsetX = draw.getOffsetX();\r\n    const offsetY = draw.getOffsetY();\r\n    draw.translate(tx + offsetX, ty + offsetY)\r\n      .rotate(angle)\r\n      .translate(-(tx + offsetX), -(ty + offsetY));\r\n    return this;\r\n  }\r\n\r\n  revert() {\r\n    const { draw } = this;\r\n    draw.restore();\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Angle,\r\n  ANGLE_ORIGIN,\r\n};\r\n","class DrawResult {\r\n\r\n  constructor({\r\n    width = 0,\r\n    rightSdist = 0,\r\n    leftSdist = 0,\r\n  } = {}) {\r\n    this.width = width;\r\n    this.rightSdist = rightSdist;\r\n    this.leftSdist = leftSdist;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  DrawResult,\r\n};\r\n","import { BaseFont } from '../BaseFont';\r\nimport { RTCosKit, RTSinKit } from '../../RTFunction';\r\nimport { Crop } from '../../Crop';\r\nimport { Angle } from '../../Angle';\r\nimport { Rect } from '../../Rect';\r\nimport { DrawResult } from '../DrawResult';\r\n\r\nclass AngleBoxDraw extends BaseFont {\r\n\r\n  constructor({\r\n    draw, ruler, rect, overflow, lineHeight = 4, attr,\r\n  }) {\r\n    super({\r\n      draw, ruler, attr,\r\n    });\r\n    this.rect = rect;\r\n    this.overflow = overflow;\r\n    this.lineHeight = lineHeight;\r\n  }\r\n\r\n  drawingFont() {\r\n    const { ruler } = this;\r\n    if (ruler.isBlank()) {\r\n      return new DrawResult();\r\n    }\r\n    const { draw, attr } = this;\r\n    const { textWrap } = attr;\r\n    draw.attr({\r\n      textAlign: BaseFont.ALIGN.left,\r\n      textBaseline: BaseFont.VERTICAL_ALIGN.top,\r\n      font: `${attr.italic ? 'italic' : ''} ${attr.bold ? 'bold' : ''} ${attr.size}px ${attr.name}`,\r\n      fillStyle: attr.color,\r\n      strokeStyle: attr.color,\r\n    });\r\n    if (ruler.hasBreak()) {\r\n      return this.textWrapDraw();\r\n    }\r\n    switch (textWrap) {\r\n      case BaseFont.TEXT_WRAP.OVER_FLOW:\r\n        return this.overflowDraw();\r\n      case BaseFont.TEXT_WRAP.TRUNCATE:\r\n        return this.truncateDraw();\r\n      case BaseFont.TEXT_WRAP.WORD_WRAP:\r\n        return this.textWrapDraw();\r\n    }\r\n    return new DrawResult();\r\n  }\r\n\r\n  drawingLine(type, tx, ty, textWidth) {\r\n    const { draw, attr } = this;\r\n    const { size } = attr;\r\n    const s = [0, 0];\r\n    const e = [0, 0];\r\n    if (type === 'strike') {\r\n      s[0] = tx;\r\n      e[0] = tx + textWidth;\r\n      s[1] = ty + size / 2;\r\n      e[1] = ty + size / 2;\r\n    }\r\n    if (type === 'underline') {\r\n      s[0] = tx;\r\n      e[0] = tx + textWidth;\r\n      s[1] = ty + size;\r\n      e[1] = ty + size;\r\n    }\r\n    draw.line(s, e);\r\n  }\r\n\r\n  truncateDraw() {\r\n    return this.overflowDraw();\r\n  }\r\n\r\n  overflowDraw() {\r\n    const { draw, ruler, attr } = this;\r\n    const { rect, overflow } = this;\r\n    const { x, y, width, height } = rect;\r\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\r\n    // 填充宽度\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const alignPadding = this.getAlignPadding();\r\n    // 角度边界\r\n    let { angle } = attr;\r\n    if (angle < -90) {\r\n      angle = -90;\r\n    }\r\n    if (angle > 90) {\r\n      angle = 90;\r\n    }\r\n    if (angle === 0) {\r\n      throw new TypeError('文字的角度必须是在90<0或者0>90之间!');\r\n    }\r\n    // 文本长度\r\n    ruler.overflowRuler();\r\n    const {\r\n      overflowText: text,\r\n      overflowTextWidth: textWidth,\r\n    } = ruler;\r\n    // 文本块大小\r\n    const trigonometricWidth = Math.max(RTCosKit.nearby({\r\n      tilt: textWidth,\r\n      angle,\r\n    }), size);\r\n    const trigonometricHeight = RTSinKit.inverse({\r\n      tilt: textWidth,\r\n      angle,\r\n    });\r\n    const limitHeight = trigonometricHeight - height;\r\n    // 计算文本绘制位置旋转中心\r\n    let rtx = x;\r\n    let rty = y;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left:\r\n        rtx += alignPadding;\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        rtx += width / 2 - trigonometricWidth / 2;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        rtx += width - trigonometricWidth - alignPadding;\r\n        break;\r\n    }\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        rty += verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        rty += height / 2 - trigonometricHeight / 2;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        rty += height - trigonometricHeight - verticalAlignPadding;\r\n        break;\r\n    }\r\n    // 边界检查\r\n    const outboundsHeight = trigonometricHeight + verticalAlignPadding > overflow.height;\r\n    const outboundsWidth = trigonometricWidth + alignPadding > overflow.width;\r\n    if (outboundsHeight || outboundsWidth) {\r\n      const crop = new Crop({\r\n        draw,\r\n        rect: overflow,\r\n      });\r\n      const dwAngle = new Angle({\r\n        draw,\r\n        angle,\r\n        rect: new Rect({\r\n          x: rtx,\r\n          y: rty,\r\n          width: trigonometricWidth,\r\n          height: trigonometricHeight,\r\n        }),\r\n      });\r\n      crop.open();\r\n      dwAngle.rotate();\r\n      const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n      const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n      draw.fillText(text, tx, ty);\r\n      if (underline) {\r\n        this.drawingLine('underline', tx, ty, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', tx, ty, textWidth);\r\n      }\r\n      dwAngle.revert();\r\n      crop.close();\r\n    } else {\r\n      const dwAngle = new Angle({\r\n        draw,\r\n        angle,\r\n        rect: new Rect({\r\n          x: rtx,\r\n          y: rty,\r\n          width: trigonometricWidth,\r\n          height: trigonometricHeight,\r\n        }),\r\n      });\r\n      dwAngle.rotate();\r\n      const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n      const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n      draw.fillText(text, tx, ty);\r\n      if (underline) {\r\n        this.drawingLine('underline', tx, ty, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', tx, ty, textWidth);\r\n      }\r\n      dwAngle.revert();\r\n    }\r\n    // 文本宽度\r\n    let textHaveWidth = trigonometricWidth;\r\n    if (limitHeight > 0) {\r\n      const tilt = RTSinKit.tilt({\r\n        inverse: height,\r\n        angle,\r\n      });\r\n      textHaveWidth = RTCosKit.nearby({\r\n        tilt, angle,\r\n      });\r\n    }\r\n    return new DrawResult({\r\n      width: textHaveWidth + alignPadding,\r\n    });\r\n  }\r\n\r\n  textWrapDraw() {\r\n    const { draw, ruler, attr } = this;\r\n    const { rect, lineHeight } = this;\r\n    const { width, height } = rect;\r\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\r\n    // 填充宽度\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const alignPadding = this.getAlignPadding();\r\n    // 角度边界\r\n    let { angle } = attr;\r\n    if (angle < -90) {\r\n      angle = -90;\r\n    }\r\n    if (angle > 90) {\r\n      angle = 90;\r\n    }\r\n    if (angle === 0) {\r\n      throw new TypeError('文字的角度必须是在90<0或者0>90之间!');\r\n    }\r\n    // 绘制文本\r\n    if (angle > 0) {\r\n      // 折行文本计算\r\n      ruler.textWrapRuler();\r\n      const {\r\n        textWrapTextArray: textArray,\r\n        textWrapMaxLen: maxLen,\r\n      } = ruler;\r\n      const textArrayLen = textArray.length;\r\n      // 多行文本\r\n      if (textArrayLen > 1) {\r\n        // 文本间隙\r\n        const spacing = RTSinKit.tilt({\r\n          inverse: size + lineHeight,\r\n          angle,\r\n        });\r\n        // 文本宽高\r\n        const textWidth = Math.max(RTCosKit.nearby({\r\n          tilt: maxLen,\r\n          angle,\r\n        }), size);\r\n        const textHeight = RTSinKit.inverse({\r\n          tilt: maxLen,\r\n          angle,\r\n        });\r\n        // 总宽度\r\n        const totalWidth = textWidth + ((textArrayLen - 1) * spacing);\r\n        // 文本坐标\r\n        let bx = rect.x;\r\n        let by = rect.y;\r\n        switch (align) {\r\n          case BaseFont.ALIGN.left:\r\n            bx += alignPadding;\r\n            break;\r\n          case BaseFont.ALIGN.center:\r\n            bx += width / 2 - totalWidth / 2;\r\n            break;\r\n          case BaseFont.ALIGN.right:\r\n            bx += width - totalWidth - alignPadding;\r\n            break;\r\n        }\r\n        switch (verticalAlign) {\r\n          case BaseFont.VERTICAL_ALIGN.top:\r\n            by += verticalAlignPadding;\r\n            break;\r\n          case BaseFont.VERTICAL_ALIGN.center:\r\n            by += height / 2 - textHeight / 2;\r\n            break;\r\n          case BaseFont.VERTICAL_ALIGN.bottom:\r\n            by += height - textHeight - verticalAlignPadding;\r\n            break;\r\n        }\r\n        // 渲染文本\r\n        let jj = 0;\r\n        while (jj < textArrayLen) {\r\n          // 计算文本的绘制位置旋转中心\r\n          const item = textArray[jj];\r\n          const rx = item.tx + bx;\r\n          const ry = item.ty + by;\r\n          let ax = 0;\r\n          let ay = 0;\r\n          switch (align) {\r\n            case BaseFont.ALIGN.left: {\r\n              const tilt = item.len / 2;\r\n              const tw = Math.max(RTCosKit.nearby({\r\n                tilt,\r\n                angle,\r\n              }), size);\r\n              const th = RTSinKit.inverse({\r\n                tilt,\r\n                angle,\r\n              });\r\n              ax += rx + tw;\r\n              ay += ry + textHeight - th;\r\n              break;\r\n            }\r\n            case BaseFont.ALIGN.center: {\r\n              ax = rx + textWidth / 2;\r\n              ay = ry + textHeight / 2;\r\n              break;\r\n            }\r\n            case BaseFont.ALIGN.right: {\r\n              const tilt = item.len / 2;\r\n              const tw = Math.max(RTCosKit.nearby({\r\n                tilt,\r\n                angle,\r\n              }), size);\r\n              const th = RTSinKit.inverse({\r\n                tilt,\r\n                angle,\r\n              });\r\n              ax += rx + textWidth - tw;\r\n              ay += ry + th;\r\n              break;\r\n            }\r\n          }\r\n          const tx = ax - item.len / 2;\r\n          const ty = ay - size / 2;\r\n          // 旋转并且绘制文本\r\n          const dwAngle = new Angle({\r\n            draw,\r\n            angle,\r\n            rect: new Rect({\r\n              x: tx,\r\n              y: ty,\r\n              width: item.len,\r\n              height: size,\r\n            }),\r\n          });\r\n          dwAngle.rotate();\r\n          draw.fillText(item.text, tx, ty);\r\n          if (underline) {\r\n            this.drawingLine('underline', tx, ty, item.len);\r\n          }\r\n          if (strikethrough) {\r\n            this.drawingLine('strike', tx, ty, item.len);\r\n          }\r\n          dwAngle.revert();\r\n          jj += 1;\r\n        }\r\n        return new DrawResult({\r\n          width: totalWidth + alignPadding,\r\n        });\r\n      }\r\n      // 文本大小\r\n      const {\r\n        textWrapText: text,\r\n        textWrapTextWidth: textWidth,\r\n      } = ruler;\r\n      const trigonometricWidth = Math.max(RTCosKit.nearby({\r\n        tilt: textWidth,\r\n        angle,\r\n      }), size);\r\n      const trigonometricHeight = RTSinKit.inverse({\r\n        tilt: textWidth,\r\n        angle,\r\n      });\r\n      // 文本坐标\r\n      let rtx = rect.x;\r\n      let rty = rect.y;\r\n      switch (align) {\r\n        case BaseFont.ALIGN.left:\r\n          rtx += alignPadding;\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          rtx += width / 2 - trigonometricWidth / 2;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n          rtx += width - trigonometricWidth - alignPadding;\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          rty += verticalAlignPadding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          rty += height / 2 - trigonometricHeight / 2;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          rty += height - trigonometricHeight - verticalAlignPadding;\r\n          break;\r\n      }\r\n      // 渲染文本\r\n      const dwAngle = new Angle({\r\n        draw,\r\n        angle,\r\n        rect: new Rect({\r\n          x: rtx,\r\n          y: rty,\r\n          width: trigonometricWidth,\r\n          height: trigonometricHeight,\r\n        }),\r\n      });\r\n      dwAngle.rotate();\r\n      const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n      const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n      draw.fillText(text, tx, ty);\r\n      if (underline) {\r\n        this.drawingLine('underline', tx, ty, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', tx, ty, textWidth);\r\n      }\r\n      dwAngle.revert();\r\n      return new DrawResult({\r\n        width: trigonometricWidth + alignPadding,\r\n      });\r\n    }\r\n    // 折行文本计算\r\n    ruler.textWrapRuler();\r\n    const {\r\n      textWrapTextArray: textArray,\r\n      textWrapMaxLen: maxLen,\r\n    } = ruler;\r\n    const textArrayLen = textArray.length;\r\n    // 多行文本\r\n    if (textArrayLen > 1) {\r\n      // 计算文本块之间的间隙\r\n      const spacing = RTSinKit.tilt({\r\n        inverse: size + lineHeight,\r\n        angle,\r\n      });\r\n      // 计算每个文本块宽度和高度\r\n      const textWidth = Math.max(RTCosKit.nearby({\r\n        tilt: maxLen,\r\n        angle,\r\n      }), size);\r\n      const textHeight = RTSinKit.inverse({\r\n        tilt: maxLen,\r\n        angle,\r\n      });\r\n      // 文本总宽度\r\n      const totalWidth = textWidth + ((textArrayLen - 1) * spacing);\r\n      // 文本坐标\r\n      let bx = rect.x;\r\n      let by = rect.y;\r\n      switch (align) {\r\n        case BaseFont.ALIGN.left:\r\n          bx += alignPadding;\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          bx += width / 2 - totalWidth / 2;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n          bx += width - totalWidth - alignPadding;\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          by += verticalAlignPadding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          by += height / 2 - textHeight / 2;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          by += height - textHeight - verticalAlignPadding;\r\n          break;\r\n      }\r\n      // 渲染文本\r\n      let jj = 0;\r\n      while (jj < textArrayLen) {\r\n        // 计算文本的绘制位置旋转中心\r\n        const item = textArray[jj];\r\n        const rx = item.tx + bx;\r\n        const ry = item.ty + by;\r\n        let ax = 0;\r\n        let ay = 0;\r\n        switch (align) {\r\n          case BaseFont.ALIGN.left: {\r\n            const tilt = item.len / 2;\r\n            const tw = Math.max(RTCosKit.nearby({\r\n              tilt,\r\n              angle,\r\n            }), size);\r\n            const th = RTSinKit.inverse({\r\n              tilt,\r\n              angle,\r\n            });\r\n            ax += rx + tw;\r\n            ay += ry + th;\r\n            break;\r\n          }\r\n          case BaseFont.ALIGN.center: {\r\n            ax = rx + textWidth / 2;\r\n            ay = ry + textHeight / 2;\r\n            break;\r\n          }\r\n          case BaseFont.ALIGN.right: {\r\n            const tilt = item.len / 2;\r\n            const tw = Math.max(RTCosKit.nearby({\r\n              tilt,\r\n              angle,\r\n            }), size);\r\n            const th = RTSinKit.inverse({\r\n              tilt,\r\n              angle,\r\n            });\r\n            ax += rx + textWidth - tw;\r\n            ay += ry + textHeight - th;\r\n            break;\r\n          }\r\n        }\r\n        const tx = ax - item.len / 2;\r\n        const ty = ay - size / 2;\r\n        // 旋转并且绘制文本\r\n        const dwAngle = new Angle({\r\n          draw,\r\n          angle,\r\n          rect: new Rect({\r\n            x: tx,\r\n            y: ty,\r\n            width: item.len,\r\n            height: size,\r\n          }),\r\n        });\r\n        dwAngle.rotate();\r\n        draw.fillText(item.text, tx, ty);\r\n        if (underline) {\r\n          this.drawingLine('underline', tx, ty, item.len);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawingLine('strike', tx, ty, item.len);\r\n        }\r\n        dwAngle.revert();\r\n        jj += 1;\r\n      }\r\n      return new DrawResult({\r\n        width: totalWidth + alignPadding,\r\n      });\r\n    }\r\n    // 计算文本块大小\r\n    const {\r\n      textWrapText: text,\r\n      textWrapTextWidth: textWidth,\r\n    } = ruler;\r\n    const trigonometricWidth = Math.max(RTCosKit.nearby({\r\n      tilt: textWidth,\r\n      angle,\r\n    }), size);\r\n    const trigonometricHeight = RTSinKit.inverse({\r\n      tilt: textWidth,\r\n      angle,\r\n    });\r\n    // 计算文本绘制位置旋转中心\r\n    let rtx = rect.x;\r\n    let rty = rect.y;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left:\r\n        rtx += alignPadding;\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        rtx += width / 2 - trigonometricWidth / 2;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        rtx += width - trigonometricWidth - alignPadding;\r\n        break;\r\n    }\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        rty += verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        rty += height / 2 - trigonometricHeight / 2;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        rty += height - trigonometricHeight - verticalAlignPadding;\r\n        break;\r\n    }\r\n    // 渲染文本\r\n    const dwAngle = new Angle({\r\n      draw,\r\n      angle,\r\n      rect: new Rect({\r\n        x: rtx,\r\n        y: rty,\r\n        width: trigonometricWidth,\r\n        height: trigonometricHeight,\r\n      }),\r\n    });\r\n    dwAngle.rotate();\r\n    const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n    const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n    draw.fillText(text, tx, ty);\r\n    if (underline) {\r\n      this.drawingLine('underline', tx, ty, textWidth);\r\n    }\r\n    if (strikethrough) {\r\n      this.drawingLine('strike', tx, ty, textWidth);\r\n    }\r\n    dwAngle.revert();\r\n    return new DrawResult({\r\n      width: trigonometricWidth + alignPadding,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBoxDraw,\r\n};\r\n","import { BaseFont } from '../BaseFont';\r\nimport { RTCosKit, RTSinKit } from '../../RTFunction';\r\nimport { Rect } from '../../Rect';\r\nimport { Crop } from '../../Crop';\r\nimport { Angle } from '../../Angle';\r\nimport { DrawResult } from '../DrawResult';\r\n\r\nclass AngleBarDraw extends BaseFont {\r\n\r\n  constructor({\r\n    draw, ruler, rect, overflow, lineHeight = 4, attr,\r\n  }) {\r\n    super({\r\n      draw, ruler, attr,\r\n    });\r\n    this.rect = rect;\r\n    this.overflow = overflow;\r\n    this.lineHeight = lineHeight;\r\n  }\r\n\r\n  drawingFont() {\r\n    const { ruler } = this;\r\n    if (ruler.isBlank()) {\r\n      return new DrawResult();\r\n    }\r\n    const { draw, attr } = this;\r\n    const { textWrap } = attr;\r\n    draw.attr({\r\n      textAlign: BaseFont.ALIGN.left,\r\n      textBaseline: BaseFont.VERTICAL_ALIGN.top,\r\n      font: `${attr.italic ? 'italic' : ''} ${attr.bold ? 'bold' : ''} ${attr.size}px ${attr.name}`,\r\n      fillStyle: attr.color,\r\n      strokeStyle: attr.color,\r\n    });\r\n    if (ruler.hasBreak()) {\r\n      return this.textWrapDraw();\r\n    }\r\n    switch (textWrap) {\r\n      case BaseFont.TEXT_WRAP.OVER_FLOW:\r\n        return this.overflowDraw();\r\n      case BaseFont.TEXT_WRAP.TRUNCATE:\r\n        return this.truncateDraw();\r\n      case BaseFont.TEXT_WRAP.WORD_WRAP:\r\n        return this.textWrapDraw();\r\n    }\r\n    return new DrawResult();\r\n  }\r\n\r\n  drawingLine(type, tx, ty, textWidth) {\r\n    const { draw, attr } = this;\r\n    const { size } = attr;\r\n    const s = [0, 0];\r\n    const e = [0, 0];\r\n    if (type === 'strike') {\r\n      s[0] = tx;\r\n      e[0] = tx + textWidth;\r\n      s[1] = ty + size / 2;\r\n      e[1] = ty + size / 2;\r\n    }\r\n    if (type === 'underline') {\r\n      s[0] = tx;\r\n      e[0] = tx + textWidth;\r\n      s[1] = ty + size;\r\n      e[1] = ty + size;\r\n    }\r\n    draw.line(s, e);\r\n  }\r\n\r\n  truncateDraw() {\r\n    return this.overflowDraw();\r\n  }\r\n\r\n  overflowDraw() {\r\n    const { draw, ruler, attr } = this;\r\n    const { rect } = this;\r\n    const { x, y, width, height } = rect;\r\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\r\n    // 填充宽度\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const alignPadding = this.getAlignPadding();\r\n    // 角度边界\r\n    let { angle } = attr;\r\n    if (angle < -90) {\r\n      angle = -90;\r\n    }\r\n    if (angle > 90) {\r\n      angle = 90;\r\n    }\r\n    if (angle === 0) {\r\n      throw new TypeError('文字的角度必须是在90<0或者0>90之间!');\r\n    }\r\n    // 斜边的大小\r\n    const trigonometricTilt = RTSinKit.tilt({\r\n      inverse: height,\r\n      angle,\r\n    });\r\n    const trigonometricTiltWidth = RTCosKit.nearby({\r\n      tilt: trigonometricTilt,\r\n      angle,\r\n    });\r\n    // 文本长度\r\n    ruler.overflowRuler();\r\n    const {\r\n      overflowText: text,\r\n      overflowTextWidth: textWidth,\r\n    } = ruler;\r\n    // 文本块大小\r\n    const trigonometricWidth = Math.max(RTCosKit.nearby({\r\n      tilt: textWidth,\r\n      angle,\r\n    }), size);\r\n    const trigonometricHeight = RTSinKit.inverse({\r\n      tilt: textWidth,\r\n      angle,\r\n    });\r\n    if (angle > 0) {\r\n      // 可溢出区域\r\n      const overflow = new Rect({\r\n        x, y, width: trigonometricTiltWidth + width, height,\r\n      });\r\n      // 计算文本绘制位置\r\n      let rtx = 0;\r\n      let rty = 0;\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          rtx = x + (trigonometricTiltWidth - trigonometricWidth) - verticalAlignPadding;\r\n          rty = y + verticalAlignPadding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          rtx = x + (trigonometricTiltWidth / 2 - trigonometricWidth / 2) - verticalAlignPadding;\r\n          rty = y + (height / 2 - trigonometricHeight / 2) + verticalAlignPadding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          rtx = x + verticalAlignPadding;\r\n          rty = y + (height - trigonometricHeight) - verticalAlignPadding;\r\n          break;\r\n      }\r\n      switch (align) {\r\n        case BaseFont.ALIGN.left:\r\n          rtx += size / 2 + alignPadding;\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          rtx += width / 2;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n          rtx += width - size / 2 - alignPadding;\r\n          break;\r\n      }\r\n      // 边界检查\r\n      const outboundsHeight = trigonometricHeight + verticalAlignPadding > overflow.height;\r\n      const outboundsWidth = trigonometricWidth + alignPadding > overflow.width;\r\n      if (outboundsHeight || outboundsWidth) {\r\n        const crop = new Crop({\r\n          draw,\r\n          rect: overflow,\r\n        });\r\n        const dwAngle = new Angle({\r\n          draw,\r\n          angle,\r\n          rect: new Rect({\r\n            x: rtx,\r\n            y: rty,\r\n            width: trigonometricWidth,\r\n            height: trigonometricHeight,\r\n          }),\r\n        });\r\n        crop.open();\r\n        dwAngle.rotate();\r\n        const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n        const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n        draw.fillText(text, tx, ty);\r\n        if (underline) {\r\n          this.drawingLine('underline', tx, ty, textWidth);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawingLine('strike', tx, ty, textWidth);\r\n        }\r\n        dwAngle.revert();\r\n        crop.close();\r\n      } else {\r\n        const dwAngle = new Angle({\r\n          draw,\r\n          angle,\r\n          rect: new Rect({\r\n            x: rtx,\r\n            y: rty,\r\n            width: trigonometricWidth,\r\n            height: trigonometricHeight,\r\n          }),\r\n        });\r\n        dwAngle.rotate();\r\n        const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n        const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n        draw.fillText(text, tx, ty);\r\n        if (underline) {\r\n          this.drawingLine('underline', tx, ty, textWidth);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawingLine('strike', tx, ty, textWidth);\r\n        }\r\n        dwAngle.revert();\r\n      }\r\n      // 文本宽度\r\n      const haveWidth = trigonometricTiltWidth + width;\r\n      return new DrawResult({\r\n        width: haveWidth, leftSdist: trigonometricTiltWidth, rightSdist: 0,\r\n      });\r\n    }\r\n    // 可溢出区域\r\n    const overflow = new Rect({\r\n      x: x - trigonometricTiltWidth, y, width: trigonometricTiltWidth + width, height,\r\n    });\r\n    // 计算文本绘制位置\r\n    let rtx = 0;\r\n    let rty = 0;\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        rtx = x - trigonometricTiltWidth + verticalAlignPadding;\r\n        rty = y + verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        rtx = x - (trigonometricTiltWidth / 2 + trigonometricWidth / 2) + verticalAlignPadding;\r\n        rty = y + (height / 2 - trigonometricHeight / 2) + verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        rtx = x - trigonometricWidth - verticalAlignPadding;\r\n        rty = y + (height - trigonometricHeight) - verticalAlignPadding;\r\n        break;\r\n    }\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left:\r\n        rtx += size / 2 + alignPadding;\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        rtx += width / 2;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        rtx += width - size / 2 - alignPadding;\r\n        break;\r\n    }\r\n    // 边界检查\r\n    const outboundsHeight = trigonometricHeight + verticalAlignPadding > overflow.height;\r\n    const outboundsWidth = trigonometricWidth + alignPadding > overflow.width;\r\n    if (outboundsHeight || outboundsWidth) {\r\n      const crop = new Crop({\r\n        draw,\r\n        rect: overflow,\r\n      });\r\n      const dwAngle = new Angle({\r\n        draw,\r\n        angle,\r\n        rect: new Rect({\r\n          x: rtx,\r\n          y: rty,\r\n          width: trigonometricWidth,\r\n          height: trigonometricHeight,\r\n        }),\r\n      });\r\n      crop.open();\r\n      dwAngle.rotate();\r\n      const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n      const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n      draw.fillText(text, tx, ty);\r\n      if (underline) {\r\n        this.drawingLine('underline', tx, ty, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', tx, ty, textWidth);\r\n      }\r\n      dwAngle.revert();\r\n      crop.close();\r\n    } else {\r\n      const dwAngle = new Angle({\r\n        draw,\r\n        angle,\r\n        rect: new Rect({\r\n          x: rtx,\r\n          y: rty,\r\n          width: trigonometricWidth,\r\n          height: trigonometricHeight,\r\n        }),\r\n      });\r\n      dwAngle.rotate();\r\n      const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n      const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n      draw.fillText(text, tx, ty);\r\n      if (underline) {\r\n        this.drawingLine('underline', tx, ty, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', tx, ty, textWidth);\r\n      }\r\n      dwAngle.revert();\r\n    }\r\n    // 文本宽度\r\n    const haveWidth = trigonometricTiltWidth + width;\r\n    return new DrawResult({\r\n      width: haveWidth, leftSdist: 0, rightSdist: trigonometricTiltWidth,\r\n    });\r\n  }\r\n\r\n  textWrapDraw() {\r\n    const { draw, ruler, attr } = this;\r\n    const { rect, overflow, lineHeight } = this;\r\n    const { x, y, width, height } = rect;\r\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\r\n    // 填充宽度\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const alignPadding = this.getAlignPadding();\r\n    // 角度边界\r\n    let { angle } = attr;\r\n    if (angle < -90) {\r\n      angle = -90;\r\n    }\r\n    if (angle > 90) {\r\n      angle = 90;\r\n    }\r\n    if (angle === 0) {\r\n      throw new TypeError('文字的角度必须是在90<0或者0>90之间!');\r\n    }\r\n    // 斜边的大小\r\n    const trigonometricTilt = RTSinKit.tilt({\r\n      inverse: height,\r\n      angle,\r\n    });\r\n    const trigonometricTiltWidth = RTCosKit.nearby({\r\n      tilt: trigonometricTilt,\r\n      angle,\r\n    });\r\n    // 绘制文本\r\n    if (angle > 0) {\r\n      // 折行文本计算\r\n      ruler.textWrapRuler();\r\n      const {\r\n        textWrapTextArray: textArray,\r\n        textWrapMaxLen: maxLen,\r\n      } = ruler;\r\n      const textArrayLen = textArray.length;\r\n      // 多行文本\r\n      if (textArrayLen > 1) {\r\n        // 文本间隙\r\n        const spacing = RTSinKit.tilt({\r\n          inverse: size + lineHeight,\r\n          angle,\r\n        });\r\n        // 文本宽高\r\n        const textWidth = Math.max(RTCosKit.nearby({\r\n          tilt: maxLen,\r\n          angle,\r\n        }), size);\r\n        const textHeight = RTSinKit.inverse({\r\n          tilt: maxLen,\r\n          angle,\r\n        });\r\n        // 总宽度\r\n        const totalWidth = textWidth + ((textArrayLen - 1) * spacing);\r\n        // 计算文本绘制位置\r\n        let bx = 0;\r\n        let by = 0;\r\n        switch (verticalAlign) {\r\n          case BaseFont.VERTICAL_ALIGN.top:\r\n            bx = x + (trigonometricTiltWidth - textWidth) - verticalAlignPadding;\r\n            by = y + verticalAlignPadding;\r\n            break;\r\n          case BaseFont.VERTICAL_ALIGN.center:\r\n            bx = x + (trigonometricTiltWidth / 2 - textWidth / 2) - verticalAlignPadding;\r\n            by = y + (height / 2 - textHeight / 2) + verticalAlignPadding;\r\n            break;\r\n          case BaseFont.VERTICAL_ALIGN.bottom:\r\n            bx = x + verticalAlignPadding;\r\n            by = y + (height - textHeight) - verticalAlignPadding;\r\n            break;\r\n        }\r\n        switch (align) {\r\n          case BaseFont.ALIGN.left:\r\n            bx += size / 2 + alignPadding;\r\n            break;\r\n          case BaseFont.ALIGN.center:\r\n            bx += (textWidth / 2 + width / 2) - totalWidth / 2;\r\n            break;\r\n          case BaseFont.ALIGN.right:\r\n            bx += (textWidth / 2 + width) - (totalWidth - textWidth / 2) - size / 2 - alignPadding;\r\n            break;\r\n        }\r\n        // 边界检查\r\n        let pointOffset = false;\r\n        if (align === BaseFont.ALIGN.center) {\r\n          if (overflow.x > bx) {\r\n            pointOffset = true;\r\n          }\r\n        }\r\n        const outboundsHeight = totalWidth + verticalAlignPadding > overflow.height;\r\n        const outboundsWidth = totalWidth + alignPadding > overflow.width;\r\n        if (outboundsHeight || outboundsWidth || pointOffset) {\r\n          const crop = new Crop({\r\n            draw,\r\n            rect: overflow,\r\n          });\r\n          crop.open();\r\n          // 渲染文本\r\n          let jj = 0;\r\n          while (jj < textArrayLen) {\r\n            // 计算文本的绘制位置旋转中心\r\n            const item = textArray[jj];\r\n            const rx = item.tx + bx;\r\n            const ry = item.ty + by;\r\n            let ax = 0;\r\n            let ay = 0;\r\n            switch (align) {\r\n              case BaseFont.ALIGN.left: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + tw;\r\n                ay += ry + textHeight - th;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.center: {\r\n                ax = rx + textWidth / 2;\r\n                ay = ry + textHeight / 2;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.right: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + textWidth - tw;\r\n                ay += ry + th;\r\n                break;\r\n              }\r\n            }\r\n            const tx = ax - item.len / 2;\r\n            const ty = ay - size / 2;\r\n            // 旋转并且绘制文本\r\n            const dwAngle = new Angle({\r\n              draw,\r\n              angle,\r\n              rect: new Rect({\r\n                x: tx,\r\n                y: ty,\r\n                width: item.len,\r\n                height: size,\r\n              }),\r\n            });\r\n            dwAngle.rotate();\r\n            draw.fillText(item.text, tx, ty);\r\n            if (underline) {\r\n              this.drawingLine('underline', tx, ty, item.len);\r\n            }\r\n            if (strikethrough) {\r\n              this.drawingLine('strike', tx, ty, item.len);\r\n            }\r\n            dwAngle.revert();\r\n            jj += 1;\r\n          }\r\n          crop.close();\r\n        } else {\r\n          // 渲染文本\r\n          let jj = 0;\r\n          while (jj < textArrayLen) {\r\n            // 计算文本的绘制位置旋转中心\r\n            const item = textArray[jj];\r\n            const rx = item.tx + bx;\r\n            const ry = item.ty + by;\r\n            let ax = 0;\r\n            let ay = 0;\r\n            switch (align) {\r\n              case BaseFont.ALIGN.left: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + tw;\r\n                ay += ry + textHeight - th;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.center: {\r\n                ax = rx + textWidth / 2;\r\n                ay = ry + textHeight / 2;\r\n                break;\r\n              }\r\n              case BaseFont.ALIGN.right: {\r\n                const tilt = item.len / 2;\r\n                const tw = Math.max(RTCosKit.nearby({\r\n                  tilt,\r\n                  angle,\r\n                }), size);\r\n                const th = RTSinKit.inverse({\r\n                  tilt,\r\n                  angle,\r\n                });\r\n                ax += rx + textWidth - tw;\r\n                ay += ry + th;\r\n                break;\r\n              }\r\n            }\r\n            const tx = ax - item.len / 2;\r\n            const ty = ay - size / 2;\r\n            // 旋转并且绘制文本\r\n            const dwAngle = new Angle({\r\n              draw,\r\n              angle,\r\n              rect: new Rect({\r\n                x: tx,\r\n                y: ty,\r\n                width: item.len,\r\n                height: size,\r\n              }),\r\n            });\r\n            dwAngle.rotate();\r\n            draw.fillText(item.text, tx, ty);\r\n            if (underline) {\r\n              this.drawingLine('underline', tx, ty, item.len);\r\n            }\r\n            if (strikethrough) {\r\n              this.drawingLine('strike', tx, ty, item.len);\r\n            }\r\n            dwAngle.revert();\r\n            jj += 1;\r\n          }\r\n        }\r\n        // 文本宽度\r\n        let haveWidth = 0;\r\n        switch (align) {\r\n          case BaseFont.ALIGN.left: {\r\n            haveWidth = totalWidth + trigonometricTiltWidth / 2 + alignPadding;\r\n            break;\r\n          }\r\n          case BaseFont.ALIGN.center: {\r\n            haveWidth = totalWidth / 2 + trigonometricTiltWidth / 2 + width / 2;\r\n            break;\r\n          }\r\n          case BaseFont.ALIGN.right: {\r\n            haveWidth = trigonometricTiltWidth + width;\r\n            break;\r\n          }\r\n        }\r\n        haveWidth = Math.max(haveWidth, trigonometricTiltWidth + width);\r\n        return new DrawResult({\r\n          width: haveWidth, leftSdist: trigonometricTiltWidth, rightSdist: 0,\r\n        });\r\n      }\r\n      // 文本长度\r\n      const {\r\n        textWrapText: text,\r\n        textWrapTextWidth: textWidth,\r\n      } = ruler;\r\n      // 文本块大小\r\n      const trigonometricWidth = Math.max(RTCosKit.nearby({\r\n        tilt: textWidth,\r\n        angle,\r\n      }), size);\r\n      const trigonometricHeight = RTSinKit.inverse({\r\n        tilt: textWidth,\r\n        angle,\r\n      });\r\n      // 计算文本绘制位置\r\n      let rtx = 0;\r\n      let rty = 0;\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          rtx = x + (trigonometricTiltWidth - trigonometricWidth) - verticalAlignPadding;\r\n          rty = y + verticalAlignPadding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          rtx = x + (trigonometricTiltWidth / 2 - trigonometricWidth / 2) - verticalAlignPadding;\r\n          rty = y + (height / 2 - trigonometricHeight / 2) + verticalAlignPadding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          rtx = x + verticalAlignPadding;\r\n          rty = y + (height - trigonometricHeight) - verticalAlignPadding;\r\n          break;\r\n      }\r\n      switch (align) {\r\n        case BaseFont.ALIGN.left:\r\n          rtx += size / 2 + alignPadding;\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          rtx += width / 2;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n          rtx += width - size / 2 - alignPadding;\r\n          break;\r\n      }\r\n      // 绘制文本\r\n      const dwAngle = new Angle({\r\n        draw,\r\n        angle,\r\n        rect: new Rect({\r\n          x: rtx,\r\n          y: rty,\r\n          width: trigonometricWidth,\r\n          height: trigonometricHeight,\r\n        }),\r\n      });\r\n      dwAngle.rotate();\r\n      const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n      const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n      draw.fillText(text, tx, ty);\r\n      if (underline) {\r\n        this.drawingLine('underline', tx, ty, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', tx, ty, textWidth);\r\n      }\r\n      dwAngle.revert();\r\n      // 文本宽度\r\n      const haveWidth = trigonometricTiltWidth + width;\r\n      return new DrawResult({\r\n        width: haveWidth, leftSdist: trigonometricTiltWidth, rightSdist: 0,\r\n      });\r\n    }\r\n    // 折行文本计算\r\n    ruler.textWrapRuler();\r\n    const {\r\n      textWrapTextArray: textArray,\r\n      textWrapMaxLen: maxLen,\r\n    } = ruler;\r\n    const textArrayLen = textArray.length;\r\n    // 多行文本\r\n    if (textArrayLen > 1) {\r\n      // 文本间隙\r\n      const spacing = RTSinKit.tilt({\r\n        inverse: size + lineHeight,\r\n        angle,\r\n      });\r\n      // 文本宽高\r\n      const textWidth = Math.max(RTCosKit.nearby({\r\n        tilt: maxLen,\r\n        angle,\r\n      }), size);\r\n      const textHeight = RTSinKit.inverse({\r\n        tilt: maxLen,\r\n        angle,\r\n      });\r\n      // 总宽度\r\n      const totalWidth = textWidth + ((textArrayLen - 1) * spacing);\r\n      // 文本坐标\r\n      let bx = rect.x;\r\n      let by = rect.y;\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          bx = x - trigonometricTiltWidth + verticalAlignPadding;\r\n          by = y + verticalAlignPadding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          bx = x - (trigonometricTiltWidth / 2 + textWidth / 2) + verticalAlignPadding;\r\n          by = y + (height / 2 - textHeight / 2) + verticalAlignPadding;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          bx = x - textWidth - verticalAlignPadding;\r\n          by = y + (height - textHeight) - verticalAlignPadding;\r\n          break;\r\n      }\r\n      switch (align) {\r\n        case BaseFont.ALIGN.left:\r\n          bx += size / 2 + alignPadding;\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          bx += (textWidth / 2 + width / 2) - totalWidth / 2;\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n          bx += (textWidth / 2 + width) - (totalWidth - textWidth / 2) - size / 2 - alignPadding;\r\n          break;\r\n      }\r\n      // 边界检查\r\n      let pointOffset = false;\r\n      if (align === BaseFont.ALIGN.center) {\r\n        if (overflow.x + overflow.width > bx + totalWidth) {\r\n          pointOffset = true;\r\n        }\r\n      }\r\n      const outboundsHeight = totalWidth + verticalAlignPadding > overflow.height;\r\n      const outboundsWidth = totalWidth + alignPadding > overflow.width;\r\n      if (outboundsHeight || outboundsWidth || pointOffset) {\r\n        const crop = new Crop({\r\n          draw,\r\n          rect: overflow,\r\n        });\r\n        crop.open();\r\n        // 渲染文本\r\n        let jj = 0;\r\n        while (jj < textArrayLen) {\r\n          // 计算文本的绘制位置旋转中心\r\n          const item = textArray[jj];\r\n          const rx = item.tx + bx;\r\n          const ry = item.ty + by;\r\n          let ax = 0;\r\n          let ay = 0;\r\n          switch (align) {\r\n            case BaseFont.ALIGN.left: {\r\n              const tilt = item.len / 2;\r\n              const tw = Math.max(RTCosKit.nearby({\r\n                tilt,\r\n                angle,\r\n              }), size);\r\n              const th = RTSinKit.inverse({\r\n                tilt,\r\n                angle,\r\n              });\r\n              ax += rx + tw;\r\n              ay += ry + th;\r\n              break;\r\n            }\r\n            case BaseFont.ALIGN.center: {\r\n              ax = rx + textWidth / 2;\r\n              ay = ry + textHeight / 2;\r\n              break;\r\n            }\r\n            case BaseFont.ALIGN.right: {\r\n              const tilt = item.len / 2;\r\n              const tw = Math.max(RTCosKit.nearby({\r\n                tilt,\r\n                angle,\r\n              }), size);\r\n              const th = RTSinKit.inverse({\r\n                tilt,\r\n                angle,\r\n              });\r\n              ax += rx + textWidth - tw;\r\n              ay += ry + textHeight - th;\r\n              break;\r\n            }\r\n          }\r\n          const tx = ax - item.len / 2;\r\n          const ty = ay - size / 2;\r\n          // 旋转并且绘制文本\r\n          const dwAngle = new Angle({\r\n            draw,\r\n            angle,\r\n            rect: new Rect({\r\n              x: tx,\r\n              y: ty,\r\n              width: item.len,\r\n              height: size,\r\n            }),\r\n          });\r\n          dwAngle.rotate();\r\n          draw.fillText(item.text, tx, ty);\r\n          if (underline) {\r\n            this.drawingLine('underline', tx, ty, item.len);\r\n          }\r\n          if (strikethrough) {\r\n            this.drawingLine('strike', tx, ty, item.len);\r\n          }\r\n          dwAngle.revert();\r\n          jj += 1;\r\n        }\r\n        crop.close();\r\n      } else {\r\n        // 渲染文本\r\n        let jj = 0;\r\n        while (jj < textArrayLen) {\r\n          // 计算文本的绘制位置旋转中心\r\n          const item = textArray[jj];\r\n          const rx = item.tx + bx;\r\n          const ry = item.ty + by;\r\n          let ax = 0;\r\n          let ay = 0;\r\n          switch (align) {\r\n            case BaseFont.ALIGN.left: {\r\n              const tilt = item.len / 2;\r\n              const tw = Math.max(RTCosKit.nearby({\r\n                tilt,\r\n                angle,\r\n              }), size);\r\n              const th = RTSinKit.inverse({\r\n                tilt,\r\n                angle,\r\n              });\r\n              ax += rx + tw;\r\n              ay += ry + th;\r\n              break;\r\n            }\r\n            case BaseFont.ALIGN.center: {\r\n              ax = rx + textWidth / 2;\r\n              ay = ry + textHeight / 2;\r\n              break;\r\n            }\r\n            case BaseFont.ALIGN.right: {\r\n              const tilt = item.len / 2;\r\n              const tw = Math.max(RTCosKit.nearby({\r\n                tilt,\r\n                angle,\r\n              }), size);\r\n              const th = RTSinKit.inverse({\r\n                tilt,\r\n                angle,\r\n              });\r\n              ax += rx + textWidth - tw;\r\n              ay += ry + textHeight - th;\r\n              break;\r\n            }\r\n          }\r\n          const tx = ax - item.len / 2;\r\n          const ty = ay - size / 2;\r\n          // 旋转并且绘制文本\r\n          const dwAngle = new Angle({\r\n            draw,\r\n            angle,\r\n            rect: new Rect({\r\n              x: tx,\r\n              y: ty,\r\n              width: item.len,\r\n              height: size,\r\n            }),\r\n          });\r\n          dwAngle.rotate();\r\n          draw.fillText(item.text, tx, ty);\r\n          if (underline) {\r\n            this.drawingLine('underline', tx, ty, item.len);\r\n          }\r\n          if (strikethrough) {\r\n            this.drawingLine('strike', tx, ty, item.len);\r\n          }\r\n          dwAngle.revert();\r\n          jj += 1;\r\n        }\r\n      }\r\n      // 文本宽度\r\n      let haveWidth = 0;\r\n      switch (align) {\r\n        case BaseFont.ALIGN.left: {\r\n          haveWidth = trigonometricTiltWidth + width;\r\n          break;\r\n        }\r\n        case BaseFont.ALIGN.center: {\r\n          haveWidth = totalWidth / 2 + trigonometricTiltWidth / 2 + width / 2;\r\n          break;\r\n        }\r\n        case BaseFont.ALIGN.right: {\r\n          haveWidth = totalWidth + trigonometricTiltWidth / 2 + alignPadding;\r\n          break;\r\n        }\r\n      }\r\n      haveWidth = Math.max(haveWidth, trigonometricTiltWidth + width);\r\n      return new DrawResult({\r\n        width: haveWidth, leftSdist: 0, rightSdist: trigonometricTiltWidth,\r\n      });\r\n    }\r\n    // 文本长度\r\n    const {\r\n      textWrapText: text,\r\n      textWrapTextWidth: textWidth,\r\n    } = ruler;\r\n    // 文本块大小\r\n    const trigonometricWidth = Math.max(RTCosKit.nearby({\r\n      tilt: textWidth,\r\n      angle,\r\n    }), size);\r\n    const trigonometricHeight = RTSinKit.inverse({\r\n      tilt: textWidth,\r\n      angle,\r\n    });\r\n    // 计算文本绘制位置\r\n    let rtx = 0;\r\n    let rty = 0;\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        rtx = x - trigonometricTiltWidth + verticalAlignPadding;\r\n        rty = y + verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        rtx = x - (trigonometricTiltWidth / 2 + trigonometricWidth / 2) + verticalAlignPadding;\r\n        rty = y + (height / 2 - trigonometricHeight / 2) + verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        rtx = x - trigonometricWidth - verticalAlignPadding;\r\n        rty = y + (height - trigonometricHeight) - verticalAlignPadding;\r\n        break;\r\n    }\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left:\r\n        rtx += size / 2 + alignPadding;\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        rtx += width / 2;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        rtx += width - size / 2 - alignPadding;\r\n        break;\r\n    }\r\n    // 绘制文本\r\n    const dwAngle = new Angle({\r\n      draw,\r\n      angle,\r\n      rect: new Rect({\r\n        x: rtx,\r\n        y: rty,\r\n        width: trigonometricWidth,\r\n        height: trigonometricHeight,\r\n      }),\r\n    });\r\n    dwAngle.rotate();\r\n    const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\r\n    const ty = rty + (trigonometricHeight / 2 - size / 2);\r\n    draw.fillText(text, tx, ty);\r\n    if (underline) {\r\n      this.drawingLine('underline', tx, ty, textWidth);\r\n    }\r\n    if (strikethrough) {\r\n      this.drawingLine('strike', tx, ty, textWidth);\r\n    }\r\n    dwAngle.revert();\r\n    // 文本宽度\r\n    const haveWidth = trigonometricTiltWidth + width;\r\n    return new DrawResult({\r\n      width: haveWidth, leftSdist: 0, rightSdist: trigonometricTiltWidth,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBarDraw,\r\n};\r\n","import { BaseFont } from '../BaseFont';\r\nimport { Crop } from '../../Crop';\r\nimport { DrawResult } from '../DrawResult';\r\n\r\nclass HorizonDraw extends BaseFont {\r\n\r\n  constructor({\r\n    draw, ruler, rect, overflow, lineHeight = 4, attr,\r\n  }) {\r\n    super({ draw, ruler, attr });\r\n    this.rect = rect;\r\n    this.overflow = overflow;\r\n    this.lineHeight = lineHeight;\r\n  }\r\n\r\n  drawingFont() {\r\n    const { ruler } = this;\r\n    if (ruler.isBlank()) {\r\n      return new DrawResult();\r\n    }\r\n    const { draw, attr } = this;\r\n    const { textWrap } = attr;\r\n    const font = `${attr.italic ? 'italic' : ''} ${attr.bold ? 'bold' : ''} ${attr.size}px ${attr.name}`.trim();\r\n    draw.attr({\r\n      textAlign: attr.align,\r\n      textBaseline: attr.verticalAlign,\r\n      font,\r\n      fillStyle: attr.color,\r\n      strokeStyle: attr.color,\r\n    });\r\n    if (ruler.hasBreak()) {\r\n      return this.textWrapDraw();\r\n    }\r\n    switch (textWrap) {\r\n      case BaseFont.TEXT_WRAP.OVER_FLOW:\r\n        return this.overflowDraw();\r\n      case BaseFont.TEXT_WRAP.TRUNCATE:\r\n        return this.truncateDraw();\r\n      case BaseFont.TEXT_WRAP.WORD_WRAP:\r\n        return this.textWrapDraw();\r\n    }\r\n    return new DrawResult();\r\n  }\r\n\r\n  drawingLine(type, tx, ty, textWidth) {\r\n    const { draw, attr } = this;\r\n    const { size, verticalAlign, align } = attr;\r\n    const s = [0, 0];\r\n    const e = [0, 0];\r\n    if (type === 'strike') {\r\n      switch (align) {\r\n        case BaseFont.ALIGN.right:\r\n          s[0] = tx - textWidth;\r\n          e[0] = tx;\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          s[0] = tx - textWidth / 2;\r\n          e[0] = tx + textWidth / 2;\r\n          break;\r\n        case BaseFont.ALIGN.left:\r\n          s[0] = tx;\r\n          e[0] = tx + textWidth;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          s[1] = ty + size / 2;\r\n          e[1] = ty + size / 2;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          s[1] = ty;\r\n          e[1] = ty;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          s[1] = ty - size / 2;\r\n          e[1] = ty - size / 2;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    if (type === 'underline') {\r\n      switch (align) {\r\n        case BaseFont.ALIGN.right:\r\n          s[0] = tx - textWidth;\r\n          e[0] = tx;\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          s[0] = tx - textWidth / 2;\r\n          e[0] = tx + textWidth / 2;\r\n          break;\r\n        case BaseFont.ALIGN.left:\r\n          s[0] = tx;\r\n          e[0] = tx + textWidth;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          s[1] = ty + size;\r\n          e[1] = ty + size;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          s[1] = ty + size / 2;\r\n          e[1] = ty + size / 2;\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          s[1] = ty;\r\n          e[1] = ty;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    draw.line(s, e);\r\n  }\r\n\r\n  truncateDraw() {\r\n    const { draw, ruler, attr } = this;\r\n    const { rect } = this;\r\n    const { width, height } = rect;\r\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\r\n    // 文字宽度\r\n    ruler.truncateRuler();\r\n    const {\r\n      truncateText: text,\r\n      truncateTextWidth: textWidth,\r\n    } = ruler;\r\n    // 填充宽度\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const alignPadding = this.getAlignPadding();\r\n    // 计算文本坐标\r\n    let bx = rect.x;\r\n    let by = rect.y;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.center:\r\n        bx += width / 2;\r\n        break;\r\n      case BaseFont.ALIGN.left:\r\n        bx += alignPadding;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        bx += width - alignPadding;\r\n        break;\r\n    }\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        by += verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        by += height / 2;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        by += height - verticalAlignPadding;\r\n        break;\r\n    }\r\n    // 边界检查\r\n    const outboundsHeight = size + verticalAlignPadding > height;\r\n    const outboundsWidth = textWidth + alignPadding > width;\r\n    if (outboundsHeight || outboundsWidth) {\r\n      const crop = new Crop({\r\n        draw,\r\n        rect,\r\n      });\r\n      crop.open();\r\n      draw.fillText(text, bx, by);\r\n      if (underline) {\r\n        this.drawingLine('underline', bx, by, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', bx, by, textWidth);\r\n      }\r\n      crop.close();\r\n    } else {\r\n      draw.fillText(text, bx, by);\r\n      if (underline) {\r\n        this.drawingLine('underline', bx, by, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', bx, by, textWidth);\r\n      }\r\n    }\r\n    return new DrawResult();\r\n  }\r\n\r\n  overflowDraw() {\r\n    const { draw, ruler, attr } = this;\r\n    const { rect, overflow } = this;\r\n    const { width, height } = rect;\r\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\r\n    // 文字宽度\r\n    ruler.overflowRuler();\r\n    const {\r\n      overflowText: text,\r\n      overflowTextWidth: textWidth,\r\n    } = ruler;\r\n    // 填充宽度\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const alignPadding = this.getAlignPadding();\r\n    // 计算文本坐标\r\n    let bx = rect.x;\r\n    let by = rect.y;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left:\r\n        bx += alignPadding;\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        bx += width / 2;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        bx += width - alignPadding;\r\n        break;\r\n    }\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        by += verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        by += height / 2;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        by += height - verticalAlignPadding;\r\n        break;\r\n    }\r\n    // 边界检查\r\n    const outboundsHeight = size + verticalAlignPadding > overflow.height;\r\n    const outboundsWidth = textWidth + alignPadding > overflow.width;\r\n    let pointOffset = false;\r\n    if (align === BaseFont.ALIGN.center) {\r\n      const diff = textWidth / 2 - width / 2;\r\n      if (diff > 0) {\r\n        if (overflow.x > rect.x - diff) {\r\n          pointOffset = true;\r\n        } else if (overflow.x + overflow.width < rect.x + rect.width + diff) {\r\n          pointOffset = true;\r\n        }\r\n      }\r\n    }\r\n    if (outboundsHeight || outboundsWidth || pointOffset) {\r\n      const crop = new Crop({\r\n        draw,\r\n        rect: overflow,\r\n      });\r\n      crop.open();\r\n      draw.fillText(text, bx, by);\r\n      if (underline) {\r\n        this.drawingLine('underline', bx, by, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', bx, by, textWidth);\r\n      }\r\n      crop.close();\r\n    } else {\r\n      draw.fillText(text, bx, by);\r\n      if (underline) {\r\n        this.drawingLine('underline', bx, by, textWidth);\r\n      }\r\n      if (strikethrough) {\r\n        this.drawingLine('strike', bx, by, textWidth);\r\n      }\r\n    }\r\n    return new DrawResult({\r\n      width: textWidth + alignPadding,\r\n    });\r\n  }\r\n\r\n  textWrapDraw() {\r\n    const { draw, ruler, attr } = this;\r\n    const { rect, lineHeight } = this;\r\n    const { width, height } = rect;\r\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\r\n    // 填充宽度\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const alignPadding = this.getAlignPadding();\r\n    // 计算文本折行\r\n    ruler.textWrapRuler();\r\n    const {\r\n      textWrapTextArray: textArray,\r\n      textWrapHOffset: hOffset,\r\n    } = ruler;\r\n    // 计算文本坐标\r\n    let bx = rect.x;\r\n    let by = rect.y;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left:\r\n        bx += alignPadding;\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        bx += width / 2;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        bx += width - alignPadding;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        by += height / 2 - hOffset / 2;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        by += verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        by += height - hOffset - verticalAlignPadding;\r\n        break;\r\n    }\r\n    // 边界检查\r\n    const totalHeight = (textArray.length * (size + lineHeight)) - lineHeight;\r\n    const outboundsHeight = totalHeight + verticalAlignPadding > height;\r\n    if (outboundsHeight) {\r\n      const crop = new Crop({\r\n        draw,\r\n        rect,\r\n      });\r\n      crop.open();\r\n      const textLen = textArray.length;\r\n      let ti = 0;\r\n      while (ti < textLen) {\r\n        const item = textArray[ti];\r\n        const tx = item.tx + bx;\r\n        const ty = item.ty + by;\r\n        draw.fillText(item.text, tx, ty);\r\n        if (underline) {\r\n          this.drawingLine('underline', tx, ty, item.len);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawingLine('strike', tx, ty, item.len);\r\n        }\r\n        ti += 1;\r\n      }\r\n      crop.close();\r\n    } else {\r\n      for (let i = 0, len = textArray.length; i < len; i += 1) {\r\n        const item = textArray[i];\r\n        const tx = item.tx + bx;\r\n        const ty = item.ty + by;\r\n        draw.fillText(item.text, tx, ty);\r\n        if (underline) {\r\n          this.drawingLine('underline', tx, ty, item.len);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawingLine('strike', tx, ty, item.len);\r\n        }\r\n      }\r\n    }\r\n    return new DrawResult();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  HorizonDraw,\r\n};\r\n","import { BaseFont } from '../BaseFont';\r\nimport { Crop } from '../../Crop';\r\nimport { DrawResult } from '../DrawResult';\r\n\r\nclass VerticalDraw extends BaseFont {\r\n\r\n  constructor({\r\n    draw, ruler, rect, attr,\r\n  }) {\r\n    super({ draw, ruler, attr });\r\n    this.rect = rect;\r\n  }\r\n\r\n  drawingFont() {\r\n    const { ruler } = this;\r\n    if (ruler.isBlank()) {\r\n      return new DrawResult();\r\n    }\r\n    const { draw, attr } = this;\r\n    const { textWrap } = attr;\r\n    draw.attr({\r\n      textAlign: BaseFont.ALIGN.left,\r\n      textBaseline: BaseFont.VERTICAL_ALIGN.top,\r\n      font: `${attr.italic ? 'italic' : ''} ${attr.bold ? 'bold' : ''} ${attr.size}px ${attr.name}`,\r\n      fillStyle: attr.color,\r\n      strokeStyle: attr.color,\r\n    });\r\n    if (ruler.hasBreak()) {\r\n      return this.textWrapDraw();\r\n    }\r\n    switch (textWrap) {\r\n      case BaseFont.TEXT_WRAP.OVER_FLOW:\r\n        return this.overflowDraw();\r\n      case BaseFont.TEXT_WRAP.TRUNCATE:\r\n        return this.truncateDraw();\r\n      case BaseFont.TEXT_WRAP.WORD_WRAP:\r\n        return this.textWrapDraw();\r\n    }\r\n    return new DrawResult();\r\n  }\r\n\r\n  drawingLine(type, tx, ty, textWidth, align, verticalAlign) {\r\n    const { draw, attr } = this;\r\n    const { size } = attr;\r\n    const s = [0, 0];\r\n    const e = [0, 0];\r\n    if (type === 'strike') {\r\n      switch (align) {\r\n        case BaseFont.ALIGN.center:\r\n        case BaseFont.ALIGN.left:\r\n        case BaseFont.ALIGN.right:\r\n          s[0] = tx;\r\n          e[0] = tx + textWidth;\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          s[1] = ty + size / 2;\r\n          e[1] = ty + size / 2;\r\n          break;\r\n      }\r\n    }\r\n    if (type === 'underline') {\r\n      switch (align) {\r\n        case BaseFont.ALIGN.center:\r\n        case BaseFont.ALIGN.left:\r\n        case BaseFont.ALIGN.right:\r\n          s[0] = tx;\r\n          e[0] = tx + textWidth;\r\n          break;\r\n      }\r\n      switch (verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          s[1] = ty + size;\r\n          e[1] = ty + size;\r\n          break;\r\n      }\r\n    }\r\n    draw.line(s, e);\r\n  }\r\n\r\n  truncateDraw() {\r\n    const { draw, ruler, attr } = this;\r\n    const { rect } = this;\r\n    const { width, height } = rect;\r\n    const { underline, strikethrough, align, verticalAlign } = attr;\r\n    const { size } = attr;\r\n    // 填充宽度\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const alignPadding = this.getAlignPadding();\r\n    // 文本位置计算\r\n    ruler.truncateRuler();\r\n    const {\r\n      truncateTextArray: textArray,\r\n      truncateMaxLen: maxLen,\r\n    } = ruler;\r\n    // 计算文本坐标\r\n    let bx = rect.x;\r\n    let by = rect.y;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left:\r\n        bx += alignPadding;\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        bx += width / 2 - size / 2;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        bx += width - size - alignPadding;\r\n        break;\r\n    }\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        by += verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        by += height / 2 - maxLen / 2;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        by += height - maxLen - verticalAlignPadding;\r\n        break;\r\n    }\r\n    // 边界检查\r\n    const outboundsHeight = maxLen + verticalAlignPadding > height;\r\n    const outboundsWidth = size + alignPadding > width;\r\n    if (outboundsHeight || outboundsWidth) {\r\n      const crop = new Crop({\r\n        draw,\r\n        rect,\r\n      });\r\n      crop.open();\r\n      const textLen = textArray.length;\r\n      let ti = 0;\r\n      while (ti < textLen) {\r\n        const item = textArray[ti];\r\n        const tx = item.tx + bx;\r\n        const ty = item.ty + by;\r\n        draw.fillText(item.text, tx, ty);\r\n        if (underline) {\r\n          this.drawingLine('underline', tx, ty, item.len, align, verticalAlign);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawingLine('strike', tx, ty, item.len, align, verticalAlign);\r\n        }\r\n        ti += 1;\r\n      }\r\n      crop.close();\r\n    } else {\r\n      const textLen = textArray.length;\r\n      let ti = 0;\r\n      while (ti < textLen) {\r\n        const item = textArray[ti];\r\n        const tx = item.tx + bx;\r\n        const ty = item.ty + by;\r\n        draw.fillText(item.text, tx, ty);\r\n        if (underline) {\r\n          this.drawingLine('underline', tx, ty, item.len, align, verticalAlign);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawingLine('strike', tx, ty, item.len, align, verticalAlign);\r\n        }\r\n        ti += 1;\r\n      }\r\n    }\r\n    return new DrawResult();\r\n  }\r\n\r\n  overflowDraw() {\r\n    return this.truncateDraw();\r\n  }\r\n\r\n  textWrapDraw() {\r\n    const { draw, ruler, attr } = this;\r\n    const { rect } = this;\r\n    const { width, height } = rect;\r\n    const { size, verticalAlign, underline } = attr;\r\n    const { strikethrough, align } = attr;\r\n    // 填充宽度\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const alignPadding = this.getAlignPadding();\r\n    // 计算文本折行\r\n    ruler.textWrapRuler();\r\n    const {\r\n      textWrapTextArray: textArray,\r\n      textWrapMaxLen: maxLen,\r\n      textWrapWOffset: wOffset,\r\n    } = ruler;\r\n    // 计算文本坐标\r\n    let bx = rect.x;\r\n    let by = rect.y;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left:\r\n        bx += alignPadding;\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        bx += width / 2 - wOffset / 2;\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        bx += width - wOffset - alignPadding;\r\n        break;\r\n    }\r\n    switch (verticalAlign) {\r\n      case BaseFont.VERTICAL_ALIGN.top:\r\n        by += verticalAlignPadding;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.center:\r\n        by += height / 2 - maxLen / 2;\r\n        break;\r\n      case BaseFont.VERTICAL_ALIGN.bottom:\r\n        by += height - maxLen - verticalAlignPadding;\r\n        break;\r\n    }\r\n    // 边界检查\r\n    const totalWidth = textArray.length * size;\r\n    const outboundsWidth = totalWidth + alignPadding > width;\r\n    if (outboundsWidth) {\r\n      const textLen = textArray.length;\r\n      const crop = new Crop({\r\n        draw,\r\n        rect,\r\n      });\r\n      crop.open();\r\n      let ti = 0;\r\n      while (ti < textLen) {\r\n        const item = textArray[ti];\r\n        const tx = item.tx + bx;\r\n        const ty = item.ty + by;\r\n        draw.fillText(item.text, tx, ty);\r\n        if (underline) {\r\n          this.drawingLine('underline', tx, ty, item.len, align, verticalAlign);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawingLine('strike', tx, ty, item.len, align, verticalAlign);\r\n        }\r\n        ti += 1;\r\n      }\r\n      crop.close();\r\n    } else {\r\n      const textLen = textArray.length;\r\n      let ti = 0;\r\n      while (ti < textLen) {\r\n        const item = textArray[ti];\r\n        const tx = item.tx + bx;\r\n        const ty = item.ty + by;\r\n        draw.fillText(item.text, tx, ty);\r\n        if (underline) {\r\n          this.drawingLine('underline', tx, ty, item.len, align, verticalAlign);\r\n        }\r\n        if (strikethrough) {\r\n          this.drawingLine('strike', tx, ty, item.len, align, verticalAlign);\r\n        }\r\n        ti += 1;\r\n      }\r\n    }\r\n    return new DrawResult();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  VerticalDraw,\r\n};\r\n","class BaseRuler {\r\n\r\n  constructor({ draw }) {\r\n    this.draw = draw;\r\n  }\r\n\r\n  // 文本测量性能杀手谨慎使用\r\n  textWidth(text) {\r\n    const { draw } = this;\r\n    return draw.measureText(text).width;\r\n  }\r\n\r\n}\r\nBaseRuler.USED = {\r\n  DEFAULT_INI: 0,\r\n  TRUNCATE: 1,\r\n  OVER_FLOW: 2,\r\n  TEXT_WRAP: 3,\r\n};\r\nexport {\r\n  BaseRuler,\r\n};\r\n","import { BaseRuler } from './BaseRuler';\r\n\r\nclass PlainRuler extends BaseRuler {\r\n\r\n  constructor({\r\n    draw, text,\r\n  }) {\r\n    super({ draw });\r\n    this.text = text;\r\n  }\r\n\r\n  textBreak() {\r\n    const { text } = this;\r\n    return text.split(/\\n/);\r\n  }\r\n\r\n  isBlank() {\r\n    const { text } = this;\r\n    return text === null || text === undefined || text.toString().trim() === '';\r\n  }\r\n\r\n  hasBreak() {\r\n    const { text } = this;\r\n    return text.indexOf('\\n') > -1;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  PlainRuler,\r\n};\r\n","import { BaseRuler } from '../BaseRuler';\r\nimport { RTSinKit } from '../../RTFunction';\r\nimport { PlainRuler } from '../PlainRuler';\r\nimport { BaseFont } from '../BaseFont';\r\n\r\nclass AngleBoxRuler extends PlainRuler {\r\n\r\n  constructor({\r\n    draw,\r\n    text,\r\n    size,\r\n    angle,\r\n    rect,\r\n    overflow,\r\n    align,\r\n    verticalAlign,\r\n    textWrap,\r\n    lineHeight = 4,\r\n    padding,\r\n  }) {\r\n    super({\r\n      draw, text,\r\n    });\r\n\r\n    this.size = size;\r\n    this.angle = angle;\r\n    this.rect = rect;\r\n    this.overflow = overflow;\r\n    this.align = align;\r\n    this.verticalAlign = verticalAlign;\r\n    this.textWrap = textWrap;\r\n    this.lineHeight = lineHeight;\r\n    this.padding = padding;\r\n\r\n    this.overflowText = '';\r\n    this.overflowTextWidth = 0;\r\n\r\n    this.textWrapText = '';\r\n    this.textWrapTextWidth = 0;\r\n    this.textWrapTextArray = [];\r\n    this.textWrapMaxLen = 0;\r\n  }\r\n\r\n  equals(other) {\r\n    if (other === null) {\r\n      return false;\r\n    }\r\n    if (other.constructor !== AngleBoxRuler) {\r\n      return false;\r\n    }\r\n    if (other.text !== this.text) {\r\n      return false;\r\n    }\r\n    if (other.size !== this.size) {\r\n      return false;\r\n    }\r\n    if (other.angle !== this.angle) {\r\n      return false;\r\n    }\r\n    if (other.align !== this.align) {\r\n      return false;\r\n    }\r\n    if (other.verticalAlign !== this.verticalAlign) {\r\n      return false;\r\n    }\r\n    if (other.textWrap !== this.textWrap) {\r\n      return false;\r\n    }\r\n    if (other.padding !== this.padding) {\r\n      return false;\r\n    }\r\n    switch (this.textWrap) {\r\n      case BaseFont.TEXT_WRAP.TRUNCATE: {\r\n        const notWidth = other.rect.width !== this.rect.width;\r\n        const notHeight = other.rect.height !== this.rect.height;\r\n        if (notWidth || notHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n      case BaseFont.TEXT_WRAP.OVER_FLOW: {\r\n        const notWidth = other.overflow.width !== this.overflow.width;\r\n        const notHeight = other.overflow.height !== this.overflow.height;\r\n        if (notWidth || notHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n      case BaseFont.TEXT_WRAP.WORD_WRAP: {\r\n        if (other.lineHeight !== this.lineHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  truncateRuler() {\r\n    this.overflowRuler();\r\n  }\r\n\r\n  overflowRuler() {\r\n    if (this.used) { return; }\r\n    const { text } = this;\r\n    const textWidth = this.textWidth(text);\r\n    this.overflowText = text;\r\n    this.overflowTextWidth = textWidth;\r\n    this.used = BaseRuler.USED.OVER_FLOW;\r\n  }\r\n\r\n  textWrapRuler() {\r\n    if (this.used) { return; }\r\n    const { text, size, angle, rect, lineHeight, padding } = this;\r\n    const { height } = rect;\r\n    if (angle > 0) {\r\n      const textHypotenuseWidth = RTSinKit.tilt({\r\n        inverse: height - (padding * 2),\r\n        angle,\r\n      });\r\n      // 折行文本计算\r\n      const breakArray = this.textBreak();\r\n      const textArray = [];\r\n      const breakLen = breakArray.length;\r\n      let bi = 0;\r\n      let maxLen = 0;\r\n      while (bi < breakLen) {\r\n        const text = breakArray[bi];\r\n        const textLen = text.length;\r\n        const line = {\r\n          str: '',\r\n          len: 0,\r\n          start: 0,\r\n        };\r\n        let ii = 0;\r\n        while (ii < textLen) {\r\n          const str = line.str + text.charAt(ii);\r\n          const len = this.textWidth(str);\r\n          if (len > textHypotenuseWidth) {\r\n            if (line.len === 0) {\r\n              textArray.push({\r\n                text: str,\r\n                len,\r\n                tx: 0,\r\n                ty: 0,\r\n              });\r\n              if (len > maxLen) {\r\n                maxLen = len;\r\n              }\r\n              ii += 1;\r\n            } else {\r\n              textArray.push({\r\n                text: line.str,\r\n                len: line.len,\r\n                tx: 0,\r\n                ty: 0,\r\n              });\r\n              if (line.len > maxLen) {\r\n                maxLen = line.len;\r\n              }\r\n            }\r\n            line.str = '';\r\n            line.len = 0;\r\n            line.start = ii;\r\n          } else {\r\n            line.str = str;\r\n            line.len = len;\r\n            ii += 1;\r\n          }\r\n        }\r\n        if (line.len > 0) {\r\n          textArray.push({\r\n            text: line.str,\r\n            len: line.len,\r\n            tx: 0,\r\n            ty: 0,\r\n          });\r\n        }\r\n        if (line.len > maxLen) {\r\n          maxLen = line.len;\r\n        }\r\n        bi += 1;\r\n      }\r\n      // x坐标偏移量\r\n      const spacing = RTSinKit.tilt({\r\n        inverse: size + lineHeight,\r\n        angle,\r\n      });\r\n      const textArrayLen = textArray.length;\r\n      let wOffset = 0;\r\n      let ii = 0;\r\n      while (ii < textArrayLen) {\r\n        const item = textArray[ii];\r\n        item.tx = wOffset;\r\n        wOffset += spacing;\r\n        ii += 1;\r\n      }\r\n      this.textWrapTextArray = textArray;\r\n      this.textWrapMaxLen = maxLen;\r\n    } else {\r\n      const textHypotenuseWidth = RTSinKit.tilt({\r\n        inverse: height - (padding * 2),\r\n        angle,\r\n      });\r\n      // 折行文本计算\r\n      const breakArray = this.textBreak();\r\n      const textArray = [];\r\n      const breakLen = breakArray.length;\r\n      let bi = 0;\r\n      let maxLen = 0;\r\n      while (bi < breakLen) {\r\n        const text = breakArray[bi];\r\n        const textLen = text.length;\r\n        const line = {\r\n          str: '',\r\n          len: 0,\r\n          start: 0,\r\n        };\r\n        let ii = 0;\r\n        while (ii < textLen) {\r\n          const str = line.str + text.charAt(ii);\r\n          const len = this.textWidth(str);\r\n          if (len > textHypotenuseWidth) {\r\n            if (line.len === 0) {\r\n              textArray.push({\r\n                text: str,\r\n                len,\r\n                tx: 0,\r\n                ty: 0,\r\n              });\r\n              if (len > maxLen) {\r\n                maxLen = len;\r\n              }\r\n              ii += 1;\r\n            } else {\r\n              textArray.push({\r\n                text: line.str,\r\n                len: line.len,\r\n                tx: 0,\r\n                ty: 0,\r\n              });\r\n              if (line.len > maxLen) {\r\n                maxLen = line.len;\r\n              }\r\n            }\r\n            line.str = '';\r\n            line.len = 0;\r\n            line.start = ii;\r\n          } else {\r\n            line.str = str;\r\n            line.len = len;\r\n            ii += 1;\r\n          }\r\n        }\r\n        if (line.len > 0) {\r\n          textArray.push({\r\n            text: line.str,\r\n            len: line.len,\r\n            tx: 0,\r\n            ty: 0,\r\n          });\r\n        }\r\n        if (line.len > maxLen) {\r\n          maxLen = line.len;\r\n        }\r\n        bi += 1;\r\n      }\r\n      // 计算x坐标偏移量\r\n      const spacing = RTSinKit.tilt({\r\n        inverse: size + lineHeight,\r\n        angle,\r\n      });\r\n      const textArrayLen = textArray.length;\r\n      let wOffset = 0;\r\n      let ii = textArrayLen - 1;\r\n      while (ii >= 0) {\r\n        const item = textArray[ii];\r\n        item.tx = wOffset;\r\n        wOffset += spacing;\r\n        ii -= 1;\r\n      }\r\n      this.textWrapTextArray = textArray;\r\n      this.textWrapMaxLen = maxLen;\r\n    }\r\n    const { textWrapTextArray } = this;\r\n    if (textWrapTextArray.length === 0) {\r\n      this.textWrapText = text;\r\n      this.textWrapTextWidth = this.textWidth(text);\r\n    }\r\n    this.used = BaseRuler.USED.TEXT_WRAP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBoxRuler,\r\n};\r\n","import { AngleBoxRuler } from './AngleBoxRuler';\r\nimport { BaseFont } from '../BaseFont';\r\n\r\nclass AngleBarRuler extends AngleBoxRuler {\r\n\r\n  equals(other) {\r\n    if (other === null) {\r\n      return false;\r\n    }\r\n    if (other.constructor !== AngleBarRuler) {\r\n      return false;\r\n    }\r\n    if (other.text !== this.text) {\r\n      return false;\r\n    }\r\n    if (other.size !== this.size) {\r\n      return false;\r\n    }\r\n    if (other.angle !== this.angle) {\r\n      return false;\r\n    }\r\n    if (other.align !== this.align) {\r\n      return false;\r\n    }\r\n    if (other.verticalAlign !== this.verticalAlign) {\r\n      return false;\r\n    }\r\n    if (other.textWrap !== this.textWrap) {\r\n      return false;\r\n    }\r\n    if (other.padding !== this.padding) {\r\n      return false;\r\n    }\r\n    switch (this.textWrap) {\r\n      case BaseFont.TEXT_WRAP.TRUNCATE: {\r\n        const notWidth = other.rect.width !== this.rect.width;\r\n        const notHeight = other.rect.height !== this.rect.height;\r\n        if (notWidth || notHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n      case BaseFont.TEXT_WRAP.OVER_FLOW: {\r\n        const notWidth = other.overflow.width !== this.overflow.width;\r\n        const notHeight = other.overflow.height !== this.overflow.height;\r\n        if (notWidth || notHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n      case BaseFont.TEXT_WRAP.WORD_WRAP: {\r\n        if (other.lineHeight !== this.lineHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBarRuler,\r\n};\r\n","import { HorizonVisual } from './HorizonVisual';\r\nimport { BaseRuler } from '../BaseRuler';\r\nimport { BaseFont } from '../BaseFont';\r\n\r\nclass HorizonRuler extends HorizonVisual {\r\n\r\n  constructor({\r\n    draw,\r\n    text,\r\n    size,\r\n    rect,\r\n    overflow,\r\n    align,\r\n    textWrap,\r\n    lineHeight = 4,\r\n    padding,\r\n  }) {\r\n    super({\r\n      text, draw, align, padding,\r\n    });\r\n\r\n    this.size = size;\r\n    this.rect = rect;\r\n    this.overflow = overflow;\r\n    this.textWrap = textWrap;\r\n    this.lineHeight = lineHeight;\r\n    this.used = BaseRuler.USED.DEFAULT_INI;\r\n\r\n    this.truncateText = '';\r\n    this.truncateTextWidth = 0;\r\n\r\n    this.overflowText = '';\r\n    this.overflowTextWidth = 0;\r\n\r\n    this.textWrapTextArray = [];\r\n    this.textWrapHOffset = 0;\r\n  }\r\n\r\n  equals(other) {\r\n    if (other === null) {\r\n      return false;\r\n    }\r\n    if (other.constructor !== HorizonRuler) {\r\n      return false;\r\n    }\r\n    if (other.text !== this.text) {\r\n      return false;\r\n    }\r\n    if (other.align !== this.align) {\r\n      return false;\r\n    }\r\n    if (other.size !== this.size) {\r\n      return false;\r\n    }\r\n    if (other.padding !== this.padding) {\r\n      return false;\r\n    }\r\n    if (other.textWrap !== this.textWrap) {\r\n      return false;\r\n    }\r\n    switch (this.textWrap) {\r\n      case BaseFont.TEXT_WRAP.TRUNCATE: {\r\n        const notWidth = other.rect.width !== this.rect.width;\r\n        const notHeight = other.rect.height !== this.rect.height;\r\n        if (notWidth || notHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n      case BaseFont.TEXT_WRAP.OVER_FLOW: {\r\n        const notWidth = other.overflow.width !== this.overflow.width;\r\n        const notHeight = other.overflow.height !== this.overflow.height;\r\n        if (notWidth || notHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n      case BaseFont.TEXT_WRAP.WORD_WRAP: {\r\n        if (other.lineHeight !== this.lineHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  truncateRuler() {\r\n    if (this.used) { return; }\r\n    const { rect } = this;\r\n    const { text, textWidth } = this.displayFont(rect);\r\n    this.truncateText = text;\r\n    this.truncateTextWidth = textWidth;\r\n    this.used = BaseRuler.USED.TRUNCATE;\r\n  }\r\n\r\n  overflowRuler() {\r\n    if (this.used) { return; }\r\n    const { overflow } = this;\r\n    const { text, textWidth } = this.displayFont(overflow);\r\n    this.overflowText = text;\r\n    this.overflowTextWidth = textWidth;\r\n    this.used = BaseRuler.USED.OVER_FLOW;\r\n  }\r\n\r\n  textWrapRuler() {\r\n    if (this.used) { return; }\r\n    const { size, rect, lineHeight } = this;\r\n    const { width } = rect;\r\n    const alignPadding = this.getAlignPadding();\r\n    const breakArray = this.textBreak();\r\n    const textArray = [];\r\n    const maxWidth = width - (alignPadding * 2);\r\n    const breakLen = breakArray.length;\r\n    let bi = 0;\r\n    let hOffset = 0;\r\n    while (bi < breakLen) {\r\n      if (bi > 0) {\r\n        hOffset += size + lineHeight;\r\n      }\r\n      const text = breakArray[bi];\r\n      const textLen = text.length;\r\n      let ii = 0;\r\n      const line = {\r\n        str: '',\r\n        len: 0,\r\n        start: 0,\r\n      };\r\n      while (ii < textLen) {\r\n        const str = line.str + text.charAt(ii);\r\n        const len = this.textWidth(str);\r\n        if (len > maxWidth) {\r\n          if (line.len === 0) {\r\n            textArray.push({\r\n              text: str,\r\n              len,\r\n              tx: 0,\r\n              ty: hOffset,\r\n            });\r\n            ii += 1;\r\n          } else {\r\n            textArray.push({\r\n              text: line.str,\r\n              len: line.len,\r\n              tx: 0,\r\n              ty: hOffset,\r\n            });\r\n          }\r\n          hOffset += size + lineHeight;\r\n          line.str = '';\r\n          line.len = 0;\r\n          line.start = ii;\r\n        } else {\r\n          line.str = str;\r\n          line.len = len;\r\n          ii += 1;\r\n        }\r\n      }\r\n      if (line.len > 0) {\r\n        textArray.push({\r\n          text: line.str,\r\n          len: line.len,\r\n          tx: 0,\r\n          ty: hOffset,\r\n        });\r\n      }\r\n      bi += 1;\r\n    }\r\n    if (hOffset > 0) {\r\n      hOffset -= lineHeight;\r\n    }\r\n    this.textWrapTextArray = textArray;\r\n    this.textWrapHOffset = hOffset;\r\n    this.used = BaseRuler.USED.TEXT_WRAP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  HorizonRuler,\r\n};\r\n","import { PlainRuler } from '../PlainRuler';\r\nimport { BaseFont } from '../BaseFont';\r\n\r\nclass HorizonVisual extends PlainRuler {\r\n\r\n  constructor({\r\n    draw, text, align, padding,\r\n  }) {\r\n    super({ draw, text });\r\n    this.align = align;\r\n    this.padding = padding;\r\n  }\r\n\r\n  displayFont(rect) {\r\n    const { align } = this;\r\n    const { width } = rect;\r\n    const origin = this.text;\r\n    const length = origin.length;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left: {\r\n        let text = '';\r\n        let textWidth = 0;\r\n        let start = 0;\r\n        while (start < length) {\r\n          const str = text + origin.charAt(start);\r\n          const len = this.textWidth(str);\r\n          if (len >= width) {\r\n            break;\r\n          }\r\n          text = str;\r\n          textWidth = len;\r\n          start += 1;\r\n        }\r\n        return {\r\n          text, textWidth,\r\n        };\r\n      }\r\n      case BaseFont.ALIGN.center: {\r\n        const textWidth = this.textWidth(origin);\r\n        const lOffset = width / 2 - textWidth / 2;\r\n        if (lOffset < 0) {\r\n          let start = 0;\r\n          let temp = '';\r\n          while (start < length) {\r\n            const str = temp + origin.charAt(start);\r\n            if (lOffset + this.textWidth(str) >= 0) {\r\n              break;\r\n            }\r\n            temp = str;\r\n            start += 1;\r\n          }\r\n          let over = start;\r\n          let text = '';\r\n          let textWidth = 0;\r\n          while (over < length) {\r\n            const str = text + origin.charAt(over);\r\n            const len = this.textWidth(str);\r\n            if (len >= width) {\r\n              break;\r\n            }\r\n            text = str;\r\n            textWidth = len;\r\n            over += 1;\r\n          }\r\n          return {\r\n            text, textWidth,\r\n          };\r\n        }\r\n        return {\r\n          text: origin, textWidth,\r\n        };\r\n      }\r\n      case BaseFont.ALIGN.right: {\r\n        let start = length - 1;\r\n        let text = '';\r\n        let textWidth = 0;\r\n        while (start >= 0) {\r\n          const str = origin.charAt(start) + text;\r\n          const len = this.textWidth(str);\r\n          if (len >= width) {\r\n            break;\r\n          }\r\n          text = str;\r\n          textWidth = len;\r\n          start -= 1;\r\n        }\r\n        return {\r\n          text, textWidth,\r\n        };\r\n      }\r\n    }\r\n    return {\r\n      text: '',\r\n      textWidth: 0,\r\n    };\r\n  }\r\n\r\n  getAlignPadding() {\r\n    if (this.align === BaseFont.ALIGN.center) {\r\n      return 0;\r\n    }\r\n    return this.padding;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  HorizonVisual,\r\n};\r\n","import { VerticalVisual } from './VerticalVisual';\r\nimport { BaseRuler } from '../BaseRuler';\r\nimport { BaseFont } from '../BaseFont';\r\n\r\nclass VerticalRuler extends VerticalVisual {\r\n\r\n  constructor({\r\n    draw,\r\n    text,\r\n    size,\r\n    rect,\r\n    verticalAlign,\r\n    textWrap,\r\n    spacing = 2,\r\n    lineHeight = 8,\r\n    padding,\r\n  }) {\r\n    super({\r\n      draw,\r\n      text,\r\n      verticalAlign,\r\n      padding,\r\n    });\r\n\r\n    this.size = size;\r\n    this.rect = rect;\r\n    this.textWrap = textWrap;\r\n    this.spacing = spacing;\r\n    this.lineHeight = lineHeight;\r\n    this.used = BaseRuler.USED.DEFAULT_INI;\r\n\r\n    this.truncateTextArray = [];\r\n    this.truncateMaxLen = 0;\r\n\r\n    this.textWrapTextArray = [];\r\n    this.textWrapMaxLen = 0;\r\n    this.textWrapWOffset = 0;\r\n  }\r\n\r\n  equals(other) {\r\n    if (other === null) {\r\n      return false;\r\n    }\r\n    if (other.constructor !== VerticalRuler) {\r\n      return false;\r\n    }\r\n    if (other.text !== this.text) {\r\n      return false;\r\n    }\r\n    if (other.size !== this.size) {\r\n      return false;\r\n    }\r\n    if (other.spacing !== this.spacing) {\r\n      return false;\r\n    }\r\n    if (other.padding !== this.padding) {\r\n      return false;\r\n    }\r\n    if (other.verticalAlign !== this.verticalAlign) {\r\n      return false;\r\n    }\r\n    if (other.textWrap !== this.textWrap) {\r\n      return false;\r\n    }\r\n    switch (this.textWrap) {\r\n      case BaseFont.TEXT_WRAP.TRUNCATE:\r\n      case BaseFont.TEXT_WRAP.OVER_FLOW: {\r\n        const notWidth = other.rect.width !== this.rect.width;\r\n        const notHeight = other.rect.height !== this.rect.height;\r\n        if (notWidth || notHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n      case BaseFont.TEXT_WRAP.WORD_WRAP: {\r\n        if (other.lineHeight !== this.lineHeight) {\r\n          return false;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  truncateRuler() {\r\n    if (this.used) {\r\n      return;\r\n    }\r\n    const { text, size, spacing } = this;\r\n    const textArray = [];\r\n    const textLen = text.length;\r\n    let maxLen = 0;\r\n    let hOffset = 0;\r\n    let ii = 0;\r\n    while (ii < textLen) {\r\n      const char = text.charAt(ii);\r\n      const width = this.textWidth(char);\r\n      textArray.push({\r\n        len: width,\r\n        text: char,\r\n        tx: size / 2 - width / 2,\r\n        ty: hOffset,\r\n      });\r\n      hOffset += size + spacing;\r\n      ii += 1;\r\n    }\r\n    if (hOffset > 0) {\r\n      hOffset -= spacing;\r\n    }\r\n    if (hOffset > maxLen) {\r\n      maxLen = hOffset;\r\n    }\r\n    this.truncateTextArray = textArray;\r\n    this.truncateMaxLen = maxLen;\r\n    this.used = BaseRuler.USED.TRUNCATE;\r\n  }\r\n\r\n  overflowRuler() {\r\n    this.truncateRuler();\r\n  }\r\n\r\n  textWrapRuler() {\r\n    const { rect, size, spacing, lineHeight } = this;\r\n    const { height } = rect;\r\n    const verticalAlignPadding = this.getVerticalAlignPadding();\r\n    const breakArray = this.textBreak();\r\n    const textArray = [];\r\n    const maxHeight = height - (verticalAlignPadding * 2);\r\n    const breakLen = breakArray.length;\r\n    let maxLen = 0;\r\n    let wOffset = 0;\r\n    let bi = 0;\r\n    while (bi < breakLen) {\r\n      const text = breakArray[bi];\r\n      const textLen = text.length;\r\n      let hOffset = 0;\r\n      let ii = 0;\r\n      while (ii < textLen) {\r\n        const char = text.charAt(ii);\r\n        const width = this.textWidth(char);\r\n        const item = {\r\n          len: width,\r\n          text: char,\r\n          tx: wOffset + (size / 2 - width / 2),\r\n          ty: hOffset,\r\n        };\r\n        textArray.push(item);\r\n        if (hOffset + size > maxHeight) {\r\n          if (hOffset > maxLen) {\r\n            maxLen = hOffset - spacing;\r\n          }\r\n          wOffset += size + lineHeight;\r\n          hOffset = 0;\r\n          item.tx = wOffset + (size / 2 - width / 2);\r\n          item.ty = hOffset;\r\n        }\r\n        hOffset += size + spacing;\r\n        ii += 1;\r\n      }\r\n      if (hOffset > maxLen) {\r\n        maxLen = hOffset - spacing;\r\n      }\r\n      wOffset += size;\r\n      bi += 1;\r\n    }\r\n    this.textWrapTextArray = textArray;\r\n    this.textWrapMaxLen = maxLen;\r\n    this.textWrapWOffset = wOffset;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  VerticalRuler,\r\n};\r\n","import { PlainRuler } from '../PlainRuler';\r\nimport { BaseFont } from '../BaseFont';\r\n\r\nclass VerticalVisual extends PlainRuler {\r\n\r\n  constructor({\r\n    draw, text, verticalAlign, padding,\r\n  }) {\r\n    super({ draw, text });\r\n    this.verticalAlign = verticalAlign;\r\n    this.padding = padding;\r\n  }\r\n\r\n  getVerticalAlignPadding() {\r\n    if (this.verticalAlign === BaseFont.VERTICAL_ALIGN.center) {\r\n      return 0;\r\n    }\r\n    return this.padding;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  VerticalVisual,\r\n};\r\n","import { BaseFont } from '../BaseFont';\r\nimport { AngleBoxDraw } from '../draw/AngleBoxDraw';\r\nimport { AngleBarDraw } from '../draw/AngleBarDraw';\r\nimport { HorizonDraw } from '../draw/HorizonDraw';\r\nimport { VerticalDraw } from '../draw/VerticalDraw';\r\nimport { AngleBoxRuler } from '../ruler/AngleBoxRuler';\r\nimport { AngleBarRuler } from '../ruler/AngleBarRuler';\r\nimport { HorizonRuler } from '../ruler/HorizonRuler';\r\nimport { VerticalRuler } from '../ruler/VerticalRuler';\r\n\r\nclass DrawFontBuilder {\r\n\r\n  constructor({\r\n    draw, text, rect, overflow, attr,\r\n  }) {\r\n    this.attr = Object.assign({}, {\r\n      verticalAlign: BaseFont.VERTICAL_ALIGN.center,\r\n      direction: BaseFont.TEXT_DIRECTION.HORIZONTAL,\r\n      name: 'Arial',\r\n      size: 14,\r\n      color: '#000000',\r\n      underline: false,\r\n      strikethrough: false,\r\n      bold: false,\r\n      italic: false,\r\n      textWrap: BaseFont.TEXT_WRAP.TRUNCATE,\r\n      align: BaseFont.ALIGN.left,\r\n      angle: 0,\r\n      padding: 8,\r\n    }, attr);\r\n    this.draw = draw;\r\n    this.text = text;\r\n    this.rect = rect;\r\n    this.overflow = overflow;\r\n  }\r\n\r\n  setPadding(padding) {\r\n    this.attr.padding = padding;\r\n  }\r\n\r\n  setSize(size) {\r\n    this.attr.size = size;\r\n  }\r\n\r\n  setDirection(direction) {\r\n    this.attr.direction = direction;\r\n  }\r\n\r\n  buildFont() {\r\n    const { text, draw, rect, attr, overflow } = this;\r\n    switch (attr.direction) {\r\n      case BaseFont.TEXT_DIRECTION.ANGLE:\r\n        return new AngleBoxDraw({\r\n          draw, text, rect, overflow, attr,\r\n        });\r\n      case BaseFont.TEXT_DIRECTION.ANGLE_BAR:\r\n        return new AngleBarDraw({\r\n          draw, text, rect, overflow, attr,\r\n        });\r\n      case BaseFont.TEXT_DIRECTION.HORIZONTAL:\r\n        return new HorizonDraw({\r\n          draw, text, rect, overflow, attr,\r\n        });\r\n      case BaseFont.TEXT_DIRECTION.VERTICAL:\r\n        return new VerticalDraw({\r\n          draw, text, rect, overflow, attr,\r\n        });\r\n    }\r\n    return null;\r\n  }\r\n\r\n  buildRuler() {\r\n    const { attr } = this;\r\n    const { text, draw, rect, overflow } = this;\r\n    const { size, align, angle, padding, textWrap } = attr;\r\n    switch (attr.direction) {\r\n      case BaseFont.TEXT_DIRECTION.ANGLE:\r\n        return new AngleBoxRuler({\r\n          draw, text, size, angle, rect, overflow, align, textWrap, padding\r\n        });\r\n      case BaseFont.TEXT_DIRECTION.ANGLE_BAR:\r\n        return new AngleBarRuler({\r\n          draw, text, size, angle, rect, overflow, align, textWrap, padding\r\n        });\r\n      case BaseFont.TEXT_DIRECTION.HORIZONTAL:\r\n        return new HorizonRuler({\r\n          draw, text, size, rect, overflow, align, textWrap, padding\r\n        });\r\n      case BaseFont.TEXT_DIRECTION.VERTICAL:\r\n        return new VerticalRuler({\r\n          draw, text, size, rect, overflow, align, textWrap, padding\r\n        });\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  DrawFontBuilder,\r\n};\r\n","import { ScaleAdapter } from './Scale';\r\nimport { XDraw } from '../../../canvas/XDraw';\r\nimport { BaseFont } from '../../../canvas/font/BaseFont';\r\nimport XTableFormat from '../XTableFormat';\r\nimport { DrawFontBuilder } from '../../../canvas/font/build/DrawFontBuilder';\r\n\r\nclass TextBuilder {\r\n\r\n  constructor({\r\n    scaleAdapter, table,\r\n  }) {\r\n    this.scaleAdapter = scaleAdapter;\r\n    this.rect = null;\r\n    this.draw = null;\r\n    this.cell = null;\r\n    this.row = -1;\r\n    this.col = -1;\r\n    this.table = table;\r\n    this.overflow = null;\r\n  }\r\n\r\n  setRect(rect) {\r\n    this.rect = rect;\r\n  }\r\n\r\n  setDraw(draw) {\r\n    this.draw = draw;\r\n  }\r\n\r\n  setCell(cell) {\r\n    this.cell = cell;\r\n  }\r\n\r\n  setCol(col) {\r\n    this.col = col;\r\n  }\r\n\r\n  setRow(row) {\r\n    this.row = row;\r\n  }\r\n\r\n  setOverFlow(overflow) {\r\n    this.overflow = overflow;\r\n  }\r\n\r\n  build() {\r\n    const { rect, overflow, row, col, cell, draw, scaleAdapter, table } = this;\r\n    const { format, text, fontAttr, ruler } = cell;\r\n    const size = XDraw.srcTransformStylePx(scaleAdapter.goto(fontAttr.size));\r\n    const padding = XDraw.srcTransformStylePx(scaleAdapter.goto(fontAttr.padding));\r\n    const builder = new DrawFontBuilder({\r\n      text: XTableFormat(format, text), draw, overflow, rect, attr: fontAttr,\r\n    });\r\n    builder.setSize(size);\r\n    builder.setPadding(padding);\r\n    if (table.isAngleBarCell(row, col)) {\r\n      builder.setDirection(BaseFont.TEXT_DIRECTION.ANGLE_BAR);\r\n    }\r\n    const buildRuler = builder.buildRuler();\r\n    const buildFont = builder.buildFont();\r\n    buildFont.setRuler(buildRuler.equals(ruler) ? ruler : buildRuler);\r\n    cell.setRuler(buildFont.ruler);\r\n    return buildFont;\r\n  }\r\n\r\n}\r\n\r\nclass Text {\r\n\r\n  constructor({\r\n    scaleAdapter = new ScaleAdapter(),\r\n    table,\r\n  }) {\r\n    this.scaleAdapter = scaleAdapter;\r\n    this.table = table;\r\n  }\r\n\r\n  getBuilder() {\r\n    const { scaleAdapter, table } = this;\r\n    return new TextBuilder({\r\n      scaleAdapter, table,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport { Text };\r\n","import { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { Rect } from '../../../canvas/Rect';\r\nimport { RTCosKit, RTSinKit } from '../../../canvas/RTFunction';\r\nimport { BaseFont } from '../../../canvas/font/BaseFont';\r\n\r\nclass BaseCellsHelper {\r\n\r\n  getXTableAreaView() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getRows() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getStyleTable() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getCols() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getMerges() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getCells() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getXIteratorBuilder() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getAngleBarWrapWidth(ri, ci, cell, rect) {\r\n    const xTableAreaView = this.getXTableAreaView();\r\n    const merges = this.getMerges();\r\n    const cols = this.getCols();\r\n    const merge = merges.getFirstIncludes(ri, ci);\r\n    if (merge) {\r\n      return merge;\r\n    }\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    const { eci } = scrollView;\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    let width = 0;\r\n    let offset = 0;\r\n    if (angle > 0) {\r\n      width = cols.sectionSumWidth(ci, eci);\r\n    } else {\r\n      width = cols.sectionSumWidth(0, ci - 1) + rect.width;\r\n      offset = -(width - rect.width);\r\n    }\r\n    return { width, offset };\r\n  }\r\n\r\n  getHorizontalMaxWidth(ri, ci, cell) {\r\n    const merges = this.getMerges();\r\n    const cols = this.getCols();\r\n    const cells = this.getCells();\r\n    const { fontAttr } = cell;\r\n    const { align } = fontAttr;\r\n    const xIteratorBuilder = this.getXIteratorBuilder();\r\n    let width = 0;\r\n    let offset = 0;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left: {\r\n        // 计算当前单元格右边\r\n        // 空白的单元格的总宽度\r\n        xIteratorBuilder.getColIterator()\r\n          .setBegin(ci)\r\n          .setEnd(cols.len)\r\n          .setLoop((i) => {\r\n            const merge = merges.getFirstIncludes(ri, i);\r\n            const cell = cells.getCell(ri, i);\r\n            const blank = PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text);\r\n            if (i === ci) {\r\n              width += cols.getWidth(i);\r\n              return true;\r\n            }\r\n            if (blank && PlainUtils.isUnDef(merge)) {\r\n              width += cols.getWidth(i);\r\n              return true;\r\n            }\r\n            return false;\r\n          })\r\n          .execute();\r\n        break;\r\n      }\r\n      case BaseFont.ALIGN.center: {\r\n        let rightWidth = 0;\r\n        let leftWidth = 0;\r\n        // 右边\r\n        xIteratorBuilder.getColIterator()\r\n          .setBegin(ci + 1)\r\n          .setEnd(cols.len)\r\n          .setLoop((i) => {\r\n            const merge = merges.getFirstIncludes(ri, i);\r\n            const cell = cells.getCell(ri, i);\r\n            const blank = PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text);\r\n            if (blank && PlainUtils.isUnDef(merge)) {\r\n              rightWidth += cols.getWidth(i);\r\n              return true;\r\n            }\r\n            return false;\r\n          })\r\n          .execute();\r\n        // 左边\r\n        xIteratorBuilder.getColIterator()\r\n          .setBegin(ci - 1)\r\n          .setEnd(0)\r\n          .setLoop((i) => {\r\n            const merge = merges.getFirstIncludes(ri, i);\r\n            const cell = cells.getCell(ri, i);\r\n            const blank = PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text);\r\n            if (blank && PlainUtils.isUnDef(merge)) {\r\n              const tmp = cols.getWidth(i);\r\n              leftWidth += tmp;\r\n              offset -= tmp;\r\n              return true;\r\n            }\r\n            return false;\r\n          })\r\n          .execute();\r\n        // 统计\r\n        width = cols.getWidth(ci) + leftWidth + rightWidth;\r\n        break;\r\n      }\r\n      case BaseFont.ALIGN.right: {\r\n        // 计算当前单元格左边\r\n        // 空白的单元格的总宽度\r\n        xIteratorBuilder.getColIterator()\r\n          .setBegin(ci)\r\n          .setEnd(0)\r\n          .setLoop((i) => {\r\n            const merge = merges.getFirstIncludes(ri, i);\r\n            const cell = cells.getCell(ri, i);\r\n            const blank = PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text);\r\n            if (i === ci) {\r\n              width += cols.getWidth(i);\r\n              return true;\r\n            }\r\n            if (blank && PlainUtils.isUnDef(merge)) {\r\n              const tmp = cols.getWidth(i);\r\n              width += tmp;\r\n              offset -= tmp;\r\n              return true;\r\n            }\r\n            return false;\r\n          })\r\n          .execute();\r\n        break;\r\n      }\r\n    }\r\n    return { width, offset };\r\n  }\r\n\r\n  getAngleMaxWidth(ri, ci, cell, rect) {\r\n    const merges = this.getMerges();\r\n    const cols = this.getCols();\r\n    const rows = this.getRows();\r\n    const merge = merges.getFirstIncludes(ri, ci);\r\n    if (merge) {\r\n      return merge;\r\n    }\r\n    const xIteratorBuilder = this.getXIteratorBuilder();\r\n    const { fontAttr } = cell;\r\n    const { angle, align, padding } = fontAttr;\r\n    const rowHeight = rows.getHeight(ri);\r\n    const tilt = RTSinKit.tilt({\r\n      inverse: rowHeight,\r\n      angle,\r\n    });\r\n    let haveWidth = RTCosKit.nearby({ tilt, angle });\r\n    let width = 0;\r\n    let offset = 0;\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left: {\r\n        haveWidth += padding;\r\n        xIteratorBuilder.getColIterator()\r\n          .setBegin(ci)\r\n          .setEnd(cols.len)\r\n          .setLoop((i) => {\r\n            const colWidth = cols.getWidth(i);\r\n            width += colWidth;\r\n            return haveWidth > width;\r\n          })\r\n          .execute();\r\n        break;\r\n      }\r\n      case BaseFont.ALIGN.center: {\r\n        const target = haveWidth - rect.width;\r\n        const half = target / 2;\r\n        let leftWidth = 0;\r\n        xIteratorBuilder.getColIterator()\r\n          .setBegin(ci)\r\n          .setEnd(cols.len)\r\n          .setLoop((i) => {\r\n            const colWidth = cols.getWidth(i);\r\n            leftWidth += colWidth;\r\n            return half + rect.width > leftWidth;\r\n          })\r\n          .execute();\r\n        let rightWidth = 0;\r\n        xIteratorBuilder.getColIterator()\r\n          .setBegin(ci)\r\n          .setEnd(0)\r\n          .setLoop((i) => {\r\n            const colWidth = cols.getWidth(i);\r\n            rightWidth += colWidth;\r\n            return half + rect.width > rightWidth;\r\n          })\r\n          .execute();\r\n        width = leftWidth + rightWidth - rect.width;\r\n        offset = -(width / 2 - rect.width / 2);\r\n        break;\r\n      }\r\n      case BaseFont.ALIGN.right: {\r\n        haveWidth += padding;\r\n        xIteratorBuilder.getColIterator()\r\n          .setBegin(ci)\r\n          .setEnd(0)\r\n          .setLoop((i) => {\r\n            const colWidth = cols.getWidth(i);\r\n            width += colWidth;\r\n            return haveWidth > width;\r\n          })\r\n          .execute();\r\n        offset = -(width - rect.width);\r\n        break;\r\n      }\r\n    }\r\n    return {\r\n      width, offset,\r\n    };\r\n  }\r\n\r\n  getAngleBarMaxWidth(ri, ci, cell, rect) {\r\n    const merges = this.getMerges();\r\n    const rows = this.getRows();\r\n    const merge = merges.getFirstIncludes(ri, ci);\r\n    if (merge) {\r\n      return merge;\r\n    }\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    const rowHeight = rows.getHeight(ri);\r\n    const tilt = RTSinKit.tilt({\r\n      inverse: rowHeight,\r\n      angle,\r\n    });\r\n    let width = RTCosKit.nearby({ tilt, angle });\r\n    let offset = 0;\r\n    if (angle < 0) {\r\n      width = RTCosKit.nearby({ tilt, angle }) + rect.width;\r\n      offset = -width;\r\n    }\r\n    return { width, offset };\r\n  }\r\n\r\n  getCellOverFlow(ri, ci, rect, cell) {\r\n    const styleTable = this.getStyleTable();\r\n    const { x, y, height, width } = rect;\r\n    const { fontAttr, contentWidth } = cell;\r\n    const { direction } = fontAttr;\r\n    const blank = PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text);\r\n    switch (direction) {\r\n      case BaseFont.TEXT_DIRECTION.HORIZONTAL: {\r\n        if (blank === false) {\r\n          const { textWrap } = fontAttr;\r\n          if (textWrap === BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n            if (contentWidth === 0 || contentWidth > width) {\r\n              const max = this.getHorizontalMaxWidth(ri, ci, cell);\r\n              return new Rect({\r\n                x: x + max.offset, y, width: max.width, height,\r\n              });\r\n            }\r\n          }\r\n        }\r\n        return rect;\r\n      }\r\n      case BaseFont.TEXT_DIRECTION.ANGLE: {\r\n        if (blank === false) {\r\n          const { textWrap } = fontAttr;\r\n          if (styleTable.isAngleBarCell(ri, ci)) {\r\n            switch (textWrap) {\r\n              case BaseFont.TEXT_WRAP.OVER_FLOW:\r\n              case BaseFont.TEXT_WRAP.TRUNCATE: {\r\n                const max = this.getAngleBarMaxWidth(ri, ci, cell, rect);\r\n                return new Rect({\r\n                  x: x + max.offset, y, width: max.width, height,\r\n                });\r\n              }\r\n              case BaseFont.TEXT_WRAP.WORD_WRAP: {\r\n                const max = this.getAngleBarWrapWidth(ri, ci, cell, rect);\r\n                return new Rect({\r\n                  x: x + max.offset, y, width: max.width, height,\r\n                });\r\n              }\r\n            }\r\n          } else {\r\n            switch (textWrap) {\r\n              case BaseFont.TEXT_WRAP.OVER_FLOW:\r\n              case BaseFont.TEXT_WRAP.TRUNCATE: {\r\n                const max = this.getAngleMaxWidth(ri, ci, cell, rect);\r\n                return new Rect({\r\n                  x: x + max.offset, y, width: max.width, height,\r\n                });\r\n              }\r\n            }\r\n          }\r\n        }\r\n        return rect;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  BaseCellsHelper,\r\n};\r\n","import { BaseCellsHelper } from './BaseCellsHelper';\r\nimport { Rect } from '../../../canvas/Rect';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\nconst STYLE_BREAK_LOOP = {\r\n  CONTINUE: 3,\r\n  ROW: 1,\r\n  RETURN: 2,\r\n};\r\n\r\nclass StyleCellsHelper extends BaseCellsHelper {\r\n\r\n  constructor(table) {\r\n    super();\r\n    this.table = table;\r\n  }\r\n\r\n  getXTableAreaView() {\r\n    return this.table.xTableAreaView;\r\n  }\r\n\r\n  getRows() {\r\n    return this.table.rows;\r\n  }\r\n\r\n  getStyleTable() {\r\n    return this.table;\r\n  }\r\n\r\n  getCols() {\r\n    return this.table.cols;\r\n  }\r\n\r\n  getMerges() {\r\n    return this.table.merges;\r\n  }\r\n\r\n  getCells() {\r\n    return this.table.cells;\r\n  }\r\n\r\n  getXIteratorBuilder() {\r\n    return this.table.xIteratorBuilder;\r\n  }\r\n\r\n  getCellByViewRange({\r\n    reverseRows = false,\r\n    reverseCols = false,\r\n    startX = 0,\r\n    startY = 0,\r\n    view,\r\n    newRow = () => {},\r\n    newCol = () => {},\r\n    cellsINCallback = () => {},\r\n    mergeCallback = () => {},\r\n    loopINCallback = () => {},\r\n  }) {\r\n    const { table } = this;\r\n    const { xIteratorBuilder } = table;\r\n    const rows = this.getRows();\r\n    const cols = this.getCols();\r\n    const cells = this.getCells();\r\n    const merges = this.getMerges();\r\n    const { sri, eri, sci, eci } = view;\r\n    const filter = [];\r\n    let y = startY;\r\n    if (reverseRows && reverseCols) {\r\n      let y = startY;\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(eri)\r\n        .setEnd(sri)\r\n        .setLoop((row) => {\r\n          const height = rows.getHeight(row);\r\n          let result = null;\r\n          let x = startX;\r\n          y -= height;\r\n          newRow(row);\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(eci)\r\n            .setEnd(sci)\r\n            .setLoop((col) => {\r\n              const merge = merges.getFirstIncludes(row, col);\r\n              const width = cols.getWidth(col);\r\n              x -= width;\r\n              const rect = new Rect({ x, y, width, height });\r\n              newCol(col);\r\n              loopINCallback(row, col, rect);\r\n              if (merge) {\r\n                const find = filter.find(i => i === merge);\r\n                if (PlainUtils.isUnDef(find)) {\r\n                  filter.push(merge);\r\n                  const mergeInfo = this.mergeInfo({\r\n                    view, merge,\r\n                  });\r\n                  const { rect, cell } = mergeInfo;\r\n                  result = mergeCallback(row, col, cell, rect, merge);\r\n                }\r\n              } else {\r\n                const cell = cells.getCell(row, col);\r\n                if (cell) {\r\n                  result = cellsINCallback(row, col, cell, rect);\r\n                }\r\n              }\r\n              switch (result) {\r\n                case STYLE_BREAK_LOOP.RETURN:\r\n                case STYLE_BREAK_LOOP.ROW:\r\n                  return false;\r\n                default: return true;\r\n              }\r\n            })\r\n            .execute();\r\n          switch (result) {\r\n            case STYLE_BREAK_LOOP.RETURN:\r\n              return false;\r\n            default: return true;\r\n          }\r\n        })\r\n        .execute();\r\n    } else if (reverseRows) {\r\n      let y = startY;\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(eri)\r\n        .setEnd(sri)\r\n        .setLoop((row) => {\r\n          const height = rows.getHeight(row);\r\n          let result = null;\r\n          let x = startX;\r\n          newRow(row);\r\n          y -= height;\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(sci)\r\n            .setEnd(eci)\r\n            .setLoop((col) => {\r\n              const merge = merges.getFirstIncludes(row, col);\r\n              const width = cols.getWidth(col);\r\n              const rect = new Rect({ x, y, width, height });\r\n              newCol(col);\r\n              loopINCallback(row, col, rect);\r\n              if (merge) {\r\n                const find = filter.find(i => i === merge);\r\n                if (PlainUtils.isUnDef(find)) {\r\n                  filter.push(merge);\r\n                  const mergeInfo = this.mergeInfo({\r\n                    view, merge,\r\n                  });\r\n                  const { rect, cell } = mergeInfo;\r\n                  result = mergeCallback(row, col, cell, rect, merge);\r\n                }\r\n              } else {\r\n                const cell = cells.getCell(row, col);\r\n                if (cell) {\r\n                  result = cellsINCallback(row, col, cell, rect);\r\n                }\r\n              }\r\n              x += width;\r\n              switch (result) {\r\n                case STYLE_BREAK_LOOP.RETURN:\r\n                case STYLE_BREAK_LOOP.ROW:\r\n                  return false;\r\n                default: return true;\r\n              }\r\n            })\r\n            .execute();\r\n          switch (result) {\r\n            case STYLE_BREAK_LOOP.RETURN:\r\n              return false;\r\n            default: return true;\r\n          }\r\n        })\r\n        .execute();\r\n    } else if (reverseCols) {\r\n      let y = startY;\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(sri)\r\n        .setEnd(eri)\r\n        .setLoop((row) => {\r\n          const height = rows.getHeight(row);\r\n          let result = null;\r\n          let x = startX;\r\n          newRow(row);\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(eci)\r\n            .setEnd(sci)\r\n            .setLoop((col) => {\r\n              const merge = merges.getFirstIncludes(row, col);\r\n              const width = cols.getWidth(col);\r\n              x -= width;\r\n              const rect = new Rect({ x, y, width, height });\r\n              newCol(col);\r\n              loopINCallback(row, col, rect);\r\n              if (merge) {\r\n                const find = filter.find(i => i === merge);\r\n                if (PlainUtils.isUnDef(find)) {\r\n                  filter.push(merge);\r\n                  const mergeInfo = this.mergeInfo({\r\n                    view, merge,\r\n                  });\r\n                  const { rect, cell } = mergeInfo;\r\n                  result = mergeCallback(row, col, cell, rect, merge);\r\n                }\r\n              } else {\r\n                const cell = cells.getCell(row, col);\r\n                if (cell) {\r\n                  result = cellsINCallback(row, col, cell, rect);\r\n                }\r\n              }\r\n              switch (result) {\r\n                case STYLE_BREAK_LOOP.RETURN:\r\n                case STYLE_BREAK_LOOP.ROW:\r\n                  return false;\r\n                default: return true;\r\n              }\r\n            })\r\n            .execute();\r\n          y += height;\r\n          switch (result) {\r\n            case STYLE_BREAK_LOOP.RETURN:\r\n              return false;\r\n            default: return true;\r\n          }\r\n        })\r\n        .execute();\r\n    } else {\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(sri)\r\n        .setEnd(eri)\r\n        .setLoop((row) => {\r\n          const height = rows.getHeight(row);\r\n          let result = null;\r\n          let x = startX;\r\n          newRow(row);\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(sci)\r\n            .setEnd(eci)\r\n            .setLoop((col) => {\r\n              const merge = merges.getFirstIncludes(row, col);\r\n              const width = cols.getWidth(col);\r\n              const rect = new Rect({ x, y, width, height });\r\n              newCol(col);\r\n              loopINCallback(row, col, rect);\r\n              if (merge) {\r\n                const find = filter.find(i => i === merge);\r\n                if (PlainUtils.isUnDef(find)) {\r\n                  filter.push(merge);\r\n                  const mergeInfo = this.mergeInfo({\r\n                    view, merge,\r\n                  });\r\n                  const { rect, cell } = mergeInfo;\r\n                  result = mergeCallback(row, col, cell, rect, merge);\r\n                }\r\n              } else {\r\n                const cell = cells.getCell(row, col);\r\n                if (cell) {\r\n                  result = cellsINCallback(row, col, cell, rect);\r\n                }\r\n              }\r\n              x += width;\r\n              switch (result) {\r\n                case STYLE_BREAK_LOOP.RETURN:\r\n                case STYLE_BREAK_LOOP.ROW:\r\n                  return false;\r\n                default: return true;\r\n              }\r\n            })\r\n            .execute();\r\n          y += height;\r\n          switch (result) {\r\n            case STYLE_BREAK_LOOP.RETURN:\r\n              return false;\r\n            default: return true;\r\n          }\r\n        })\r\n        .execute();\r\n    }\r\n  }\r\n\r\n  mergeInfo({\r\n    view, merge,\r\n  }) {\r\n    const rows = this.getRows();\r\n    const cols = this.getCols();\r\n    const cells = this.getCells();\r\n    // 计算坐标\r\n    const minSri = Math.min(view.sri, merge.sri);\r\n    const minSci = Math.min(view.sci, merge.sci);\r\n    let maxSri = Math.max(view.sri, merge.sri);\r\n    let maxSci = Math.max(view.sci, merge.sci);\r\n    maxSri -= 1;\r\n    maxSci -= 1;\r\n    let x = cols.sectionSumWidth(minSci, maxSci);\r\n    let y = rows.sectionSumHeight(minSri, maxSri);\r\n    x = view.sci > merge.sci ? x * -1 : x;\r\n    y = view.sri > merge.sri ? y * -1 : y;\r\n    // 计算尺寸\r\n    const height = rows.sectionSumHeight(merge.sri, merge.eri);\r\n    const width = cols.sectionSumWidth(merge.sci, merge.eci);\r\n    const cell = cells.getCellOrNew(merge.sri, merge.sci);\r\n    const rect = new Rect({ x, y, width, height });\r\n    return { rect, cell };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  StyleCellsHelper, STYLE_BREAK_LOOP,\r\n};\r\n","import { BaseCellsHelper } from './BaseCellsHelper';\r\nimport { Rect } from '../../../canvas/Rect';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { RectRange } from '../tablebase/RectRange';\r\n\r\nconst TEXT_BREAK_LOOP = {\r\n  CONTINUE: 3,\r\n  ROW: 1,\r\n  RETURN: 2,\r\n};\r\n\r\nclass TextCellsHelper extends BaseCellsHelper {\r\n\r\n  constructor(table) {\r\n    super();\r\n    this.table = table;\r\n  }\r\n\r\n  getXTableAreaView() {\r\n    return this.table.xTableAreaView;\r\n  }\r\n\r\n  getRows() {\r\n    return this.table.rows;\r\n  }\r\n\r\n  getStyleTable() {\r\n    return this.table;\r\n  }\r\n\r\n  getCols() {\r\n    return this.table.cols;\r\n  }\r\n\r\n  getMerges() {\r\n    return this.table.merges;\r\n  }\r\n\r\n  getCells() {\r\n    return this.table.cells;\r\n  }\r\n\r\n  getXIteratorBuilder() {\r\n    return this.table.xIteratorBuilder;\r\n  }\r\n\r\n  getCellByViewRange({\r\n    reverseRows = false,\r\n    reverseCols = false,\r\n    startX = 0,\r\n    startY = 0,\r\n    newRow = () => {},\r\n    newCol = () => {},\r\n    view = new RectRange(0, 0, 0, 0, 0, 0),\r\n    cellsINCallback = () => {},\r\n    mergeCallback = () => {},\r\n  }) {\r\n    const rows = this.getRows();\r\n    const cols = this.getCols();\r\n    const cells = this.getCells();\r\n    const merges = this.getMerges();\r\n    const { table } = this;\r\n    const { xIteratorBuilder } = table;\r\n    const { sri, eri, sci, eci } = view;\r\n    const filter = [];\r\n    if (reverseRows && reverseCols) {\r\n      let y = startY;\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(eri)\r\n        .setEnd(sri)\r\n        .setLoop((row) => {\r\n          const height = rows.getHeight(row);\r\n          let result = null;\r\n          let x = startX;\r\n          y -= height;\r\n          newRow(row);\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(eci)\r\n            .setEnd(sci)\r\n            .setLoop((col) => {\r\n              const merge = merges.getFirstIncludes(row, col);\r\n              const width = cols.getWidth(col);\r\n              newCol(col);\r\n              x -= width;\r\n              if (merge) {\r\n                const find = filter.find(i => i === merge);\r\n                if (PlainUtils.isUnDef(find)) {\r\n                  filter.push(merge);\r\n                  const mergeInfo = this.mergeInfo({\r\n                    view, merge,\r\n                  });\r\n                  const { rect, cell } = mergeInfo;\r\n                  result = mergeCallback(row, col, cell, rect, merge);\r\n                }\r\n              } else {\r\n                const cell = cells.getCell(row, col);\r\n                if (cell) {\r\n                  const cellsINInfo = this.cellsINInfo({\r\n                    x, y, width, height, row, col, cell,\r\n                  });\r\n                  const { rect, overflow } = cellsINInfo;\r\n                  result = cellsINCallback(row, col, cell, rect, overflow);\r\n                }\r\n              }\r\n              switch (result) {\r\n                case TEXT_BREAK_LOOP.RETURN:\r\n                case TEXT_BREAK_LOOP.ROW:\r\n                  return false;\r\n                default: return true;\r\n              }\r\n            })\r\n            .execute();\r\n          switch (result) {\r\n            case TEXT_BREAK_LOOP.RETURN:\r\n              return false;\r\n            default: return true;\r\n          }\r\n        })\r\n        .execute();\r\n    } else if (reverseRows) {\r\n      let y = startY;\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(eri)\r\n        .setEnd(sri)\r\n        .setLoop((row) => {\r\n          const height = rows.getHeight(row);\r\n          let result = null;\r\n          let x = startX;\r\n          newRow(row);\r\n          y -= height;\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(sci)\r\n            .setEnd(eci)\r\n            .setLoop((col) => {\r\n              const merge = merges.getFirstIncludes(row, col);\r\n              const width = cols.getWidth(col);\r\n              newCol(col);\r\n              if (merge) {\r\n                const find = filter.find(i => i === merge);\r\n                if (PlainUtils.isUnDef(find)) {\r\n                  filter.push(merge);\r\n                  const mergeInfo = this.mergeInfo({\r\n                    view, merge,\r\n                  });\r\n                  const { rect, cell } = mergeInfo;\r\n                  result = mergeCallback(row, col, cell, rect, merge);\r\n                }\r\n              } else {\r\n                const cell = cells.getCell(row, col);\r\n                if (cell) {\r\n                  const cellsINInfo = this.cellsINInfo({\r\n                    x, y, width, height, row, col, cell,\r\n                  });\r\n                  const { rect, overflow } = cellsINInfo;\r\n                  result = cellsINCallback(row, col, cell, rect, overflow);\r\n                }\r\n              }\r\n              x += width;\r\n              switch (result) {\r\n                case TEXT_BREAK_LOOP.RETURN:\r\n                case TEXT_BREAK_LOOP.ROW:\r\n                  return false;\r\n                default: return true;\r\n              }\r\n            })\r\n            .execute();\r\n          switch (result) {\r\n            case TEXT_BREAK_LOOP.RETURN:\r\n              return false;\r\n            default: return true;\r\n          }\r\n        })\r\n        .execute();\r\n    } else if (reverseCols) {\r\n      let y = startY;\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(sri)\r\n        .setEnd(eri)\r\n        .setLoop((row) => {\r\n          const height = rows.getHeight(row);\r\n          let result = null;\r\n          let x = startX;\r\n          newRow(row);\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(eci)\r\n            .setEnd(sci)\r\n            .setLoop((col) => {\r\n              const merge = merges.getFirstIncludes(row, col);\r\n              const width = cols.getWidth(col);\r\n              newCol(col);\r\n              x -= width;\r\n              if (merge) {\r\n                const find = filter.find(i => i === merge);\r\n                if (PlainUtils.isUnDef(find)) {\r\n                  filter.push(merge);\r\n                  const mergeInfo = this.mergeInfo({\r\n                    view, merge,\r\n                  });\r\n                  const { rect, cell } = mergeInfo;\r\n                  result = mergeCallback(row, col, cell, rect, merge);\r\n                }\r\n              } else {\r\n                const cell = cells.getCell(row, col);\r\n                if (cell) {\r\n                  const cellsINInfo = this.cellsINInfo({\r\n                    x, y, width, height, row, col, cell,\r\n                  });\r\n                  const { rect, overflow } = cellsINInfo;\r\n                  result = cellsINCallback(row, col, cell, rect, overflow);\r\n                }\r\n              }\r\n              switch (result) {\r\n                case TEXT_BREAK_LOOP.RETURN:\r\n                case TEXT_BREAK_LOOP.ROW:\r\n                  return false;\r\n                default: return true;\r\n              }\r\n            })\r\n            .execute();\r\n          y += height;\r\n          switch (result) {\r\n            case TEXT_BREAK_LOOP.RETURN:\r\n              return false;\r\n            default: return true;\r\n          }\r\n        })\r\n        .execute();\r\n    } else {\r\n      let y = startY;\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(sri)\r\n        .setEnd(eri)\r\n        .setLoop((row) => {\r\n          const height = rows.getHeight(row);\r\n          let result = null;\r\n          let x = startX;\r\n          newRow(row);\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(sci)\r\n            .setEnd(eci)\r\n            .setLoop((col) => {\r\n              const merge = merges.getFirstIncludes(row, col);\r\n              const width = cols.getWidth(col);\r\n              newCol(col);\r\n              if (merge) {\r\n                const find = filter.find(i => i === merge);\r\n                if (PlainUtils.isUnDef(find)) {\r\n                  filter.push(merge);\r\n                  const mergeInfo = this.mergeInfo({\r\n                    view, merge,\r\n                  });\r\n                  const { rect, cell } = mergeInfo;\r\n                  result = mergeCallback(row, col, cell, rect, merge);\r\n                }\r\n              } else {\r\n                const cell = cells.getCell(row, col);\r\n                if (cell) {\r\n                  const cellsINInfo = this.cellsINInfo({\r\n                    x, y, width, height, row, col, cell,\r\n                  });\r\n                  const { rect, overflow } = cellsINInfo;\r\n                  result = cellsINCallback(row, col, cell, rect, overflow);\r\n                }\r\n              }\r\n              x += width;\r\n              switch (result) {\r\n                case TEXT_BREAK_LOOP.RETURN:\r\n                case TEXT_BREAK_LOOP.ROW:\r\n                  return false;\r\n                default: return true;\r\n              }\r\n            })\r\n            .execute();\r\n          y += height;\r\n          switch (result) {\r\n            case TEXT_BREAK_LOOP.RETURN:\r\n              return false;\r\n            default: return true;\r\n          }\r\n        })\r\n        .execute();\r\n    }\r\n  }\r\n\r\n  mergeInfo({\r\n    view, merge,\r\n  }) {\r\n    const rows = this.getRows();\r\n    const cols = this.getCols();\r\n    const cells = this.getCells();\r\n    // 计算坐标\r\n    const minSri = Math.min(view.sri, merge.sri);\r\n    const minSci = Math.min(view.sci, merge.sci);\r\n    let maxSri = Math.max(view.sri, merge.sri);\r\n    let maxSci = Math.max(view.sci, merge.sci);\r\n    maxSri -= 1;\r\n    maxSci -= 1;\r\n    let x = cols.sectionSumWidth(minSci, maxSci);\r\n    let y = rows.sectionSumHeight(minSri, maxSri);\r\n    x = view.sci > merge.sci ? x * -1 : x;\r\n    y = view.sri > merge.sri ? y * -1 : y;\r\n    // 计算尺寸\r\n    const height = rows.sectionSumHeight(merge.sri, merge.eri);\r\n    const width = cols.sectionSumWidth(merge.sci, merge.eci);\r\n    const cell = cells.getCell(merge.sri, merge.sci);\r\n    const rect = new Rect({ x, y, width, height });\r\n    return { rect, cell, merge };\r\n  }\r\n\r\n  cellsINInfo({\r\n    width, height, col, row, x, y, cell,\r\n  }) {\r\n    const rect = new Rect({ x, y, width, height });\r\n    const overflow = this.getCellOverFlow(row, col, rect, cell);\r\n    return { rect, overflow };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  TextCellsHelper, TEXT_BREAK_LOOP,\r\n};\r\n","import { PlainUtils } from '../../utils/PlainUtils';\r\nimport { SCROLL_TYPE } from './tablebase/Scroll';\r\nimport { XTableAreaView } from './XTableAreaView';\r\n\r\n/**\r\n * XTableHistoryAreaView\r\n */\r\nclass XTableHistoryAreaView extends XTableAreaView {\r\n\r\n  /**\r\n   * XTableHistoryAreaView\r\n   * @param xTableScrollView\r\n   * @param rows\r\n   * @param cols\r\n   * @param scroll\r\n   */\r\n  constructor({\r\n    xTableScrollView,\r\n    rows,\r\n    cols,\r\n    scroll,\r\n  }) {\r\n    super({\r\n      xTableScrollView,\r\n      rows,\r\n      cols,\r\n      scroll,\r\n    });\r\n    this.lastScrollView = null;\r\n    this.enterView = null;\r\n    this.scrollEnterView = null;\r\n    this.leaveView = null;\r\n  }\r\n\r\n  /**\r\n   * 重置变量区\r\n   */\r\n  reset() {\r\n    super.reset();\r\n    this.scrollEnterView = null;\r\n    this.enterView = null;\r\n    this.leaveView = null;\r\n  }\r\n\r\n  /**\r\n   * 获取上一次滚动的视图区域\r\n   * @returns {null|RectRange}\r\n   */\r\n  getLastScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.lastScrollView)) {\r\n      return this.lastScrollView.clone();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 获取滚动离开的视图区域\r\n   * @returns {null|RectRange}\r\n   */\r\n  getLeaveView() {\r\n    if (PlainUtils.isNotUnDef(this.leaveView)) {\r\n      return this.leaveView.clone();\r\n    }\r\n    const lastScrollView = this.getLastScrollView();\r\n    const scrollView = this.getScrollView();\r\n    const { cols, rows } = this;\r\n    if (lastScrollView) {\r\n      const [leaveView] = lastScrollView.coincideDifference(scrollView);\r\n      if (leaveView) {\r\n        leaveView.w = cols.rectRangeSumWidth(leaveView);\r\n        leaveView.h = rows.rectRangeSumHeight(leaveView);\r\n        this.leaveView = leaveView;\r\n        return leaveView.clone();\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 获取滚动进入的视图区域\r\n   * @returns {null|RectRange}\r\n   */\r\n  getEnterView() {\r\n    if (PlainUtils.isNotUnDef(this.enterView)) {\r\n      return this.enterView.clone();\r\n    }\r\n    const lastScrollView = this.getLastScrollView();\r\n    const scrollView = this.getScrollView();\r\n    const { cols, rows } = this;\r\n    if (lastScrollView) {\r\n      const [enterView] = scrollView.coincideDifference(lastScrollView);\r\n      if (enterView) {\r\n        enterView.w = cols.rectRangeSumWidth(enterView);\r\n        enterView.h = rows.rectRangeSumHeight(enterView);\r\n        this.enterView = enterView;\r\n        return enterView.clone();\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 获取滚动进入的视图区域\r\n   * @returns {null|RectRange}\r\n   */\r\n  getScrollEnterView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollEnterView)) {\r\n      return this.scrollEnterView.clone();\r\n    }\r\n    const { cols, rows, scroll } = this;\r\n    const enterView = this.getEnterView();\r\n    if (enterView) {\r\n      switch (scroll.type) {\r\n        case SCROLL_TYPE.H_RIGHT: {\r\n          enterView.sci -= 1;\r\n          break;\r\n        }\r\n        case SCROLL_TYPE.V_BOTTOM: {\r\n          enterView.sri -= 1;\r\n          break;\r\n        }\r\n        case SCROLL_TYPE.H_LEFT: {\r\n          enterView.eci += 1;\r\n          break;\r\n        }\r\n        case SCROLL_TYPE.V_TOP: {\r\n          enterView.eri += 1;\r\n          break;\r\n        }\r\n      }\r\n      enterView.w = cols.rectRangeSumWidth(enterView);\r\n      enterView.h = rows.rectRangeSumHeight(enterView);\r\n      this.scrollEnterView = enterView;\r\n      return enterView.clone();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 清空上一次视图记录\r\n   */\r\n  undo() {\r\n    this.lastScrollView = null;\r\n  }\r\n\r\n  /**\r\n   * 记录上一次视图\r\n   */\r\n  record() {\r\n    this.lastScrollView = this.scrollView;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableHistoryAreaView,\r\n};\r\n","import { BaseCellsHelper } from './BaseCellsHelper';\r\nimport { RectRange } from '../tablebase/RectRange';\r\n\r\nclass OperateCellsHelper extends BaseCellsHelper {\r\n\r\n  constructor(table) {\r\n    super();\r\n    this.table = table;\r\n  }\r\n\r\n  getCellOrNewCellByViewRange({\r\n    rectRange = new RectRange(-1, -1, -1, -1),\r\n    callback = () => {},\r\n  }) {\r\n    const { table } = this;\r\n    const { xIteratorBuilder } = table;\r\n    const cells = this.getCells();\r\n    const { sri, eri, sci, eci } = rectRange;\r\n    xIteratorBuilder.getRowIterator()\r\n      .setBegin(sri)\r\n      .setEnd(eri)\r\n      .setLoop((i) => {\r\n        xIteratorBuilder.getColIterator()\r\n          .setBegin(sci)\r\n          .setEnd(eci)\r\n          .setLoop((j) => {\r\n            const cell = cells.getCellOrNew(i, j);\r\n            callback(i, j, cell);\r\n          })\r\n          .execute();\r\n      })\r\n      .execute();\r\n  }\r\n\r\n  getXTableAreaView() {\r\n    return this.table.xTableAreaView;\r\n  }\r\n\r\n  getRows() {\r\n    return this.table.rows;\r\n  }\r\n\r\n  getCells() {\r\n    return this.table.cells;\r\n  }\r\n\r\n  getCols() {\r\n    return this.table.cols;\r\n  }\r\n\r\n  getMerges() {\r\n    return this.table.merges;\r\n  }\r\n\r\n  getStyleTable() {\r\n    return this.table;\r\n  }\r\n\r\n  getXIteratorBuilder() {\r\n    return this.table.xIteratorBuilder;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  OperateCellsHelper,\r\n};\r\n","class XFixedMeasure {\r\n\r\n  constructor({\r\n    rows,\r\n    cols,\r\n    fixedView,\r\n  }) {\r\n    this.fixedView = fixedView;\r\n    this.cols = cols;\r\n    this.rows = rows;\r\n  }\r\n\r\n  getHeight() {\r\n    return this.rows.rectRangeSumHeight(this.fixedView.getFixedView());\r\n  }\r\n\r\n  getWidth() {\r\n    return this.cols.rectRangeSumWidth(this.fixedView.getFixedView());\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XFixedMeasure,\r\n};\r\n","import { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\nclass CellIcon {\r\n\r\n  constructor({\r\n    rows,\r\n    cols,\r\n    cells,\r\n  } = {}) {\r\n    this.cells = cells;\r\n    this.cols = cols;\r\n    this.data = new Array(rows.len * cols.len);\r\n  }\r\n\r\n  addOrNewCell(ri, ci, xIcon) {\r\n    const { cells } = this;\r\n    cells.getCellOrNew(ri, ci);\r\n    this.add(ri, ci, xIcon);\r\n  }\r\n\r\n  add(ri, ci, xIcon) {\r\n    const { data, cells } = this;\r\n    const cell = cells.getCell(ri, ci);\r\n    if (cell) {\r\n      const xIcons = this.getIcon(ri, ci);\r\n      if (xIcons) {\r\n        xIcons.push(xIcon);\r\n      } else {\r\n        const offset = this.getOffset(ri, ci);\r\n        data[offset] = [xIcon];\r\n      }\r\n    }\r\n  }\r\n\r\n  getIcon(ri, ci) {\r\n    const { data } = this;\r\n    const offset = this.getOffset(ri, ci);\r\n    return data[offset];\r\n  }\r\n\r\n  getOffset(ri, ci) {\r\n    const { cols } = this;\r\n    const { len } = cols;\r\n    return (ri * len) + ci;\r\n  }\r\n\r\n  remove(ri, ci, xIcon = null) {\r\n    const { data } = this;\r\n    let xIcons = this.getIcon(ri, ci);\r\n    if (xIcons) {\r\n      const offset = this.getOffset(ri, ci);\r\n      if (xIcon) {\r\n        xIcons = xIcons.filter(item => item !== xIcon);\r\n        data[offset] = xIcons;\r\n      } else {\r\n        data[offset] = PlainUtils.Undef;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  CellIcon,\r\n};\r\n","import { CellIcon } from './CellIcon';\r\n\r\nclass FixedCellIcon extends CellIcon {\r\n\r\n}\r\n\r\nexport {\r\n  FixedCellIcon,\r\n};\r\n","import { CellIcon } from './CellIcon';\r\n\r\nclass StaticCellIcon extends CellIcon {\r\n\r\n}\r\n\r\nexport {\r\n  StaticCellIcon,\r\n};\r\n","class XLineIteratorFilter {\r\n\r\n  constructor({\r\n    logic, stack,\r\n  }) {\r\n    this.stack = stack;\r\n    this.logic = logic;\r\n    this.active = null;\r\n  }\r\n\r\n  getActive() {\r\n    return this.active;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { logic, stack } = this;\r\n    let result = XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    let active = null;\r\n    switch (logic) {\r\n      case XLineIteratorFilter.FILTER_LOGIC.AND: {\r\n        result = XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n        for (let i = 0; i < stack.length; i += 1) {\r\n          const filter = stack[i];\r\n          const returnValue = filter.run({ row, col });\r\n          if (returnValue !== XLineIteratorFilter.RETURN_TYPE.EXEC) {\r\n            result = XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n            active = filter;\r\n            break;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case XLineIteratorFilter.FILTER_LOGIC.OR: {\r\n        result = XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n        for (let i = 0; i < stack.length; i += 1) {\r\n          const filter = stack[i];\r\n          const returnValue = filter.run({ row, col });\r\n          if (returnValue === XLineIteratorFilter.RETURN_TYPE.EXEC) {\r\n            result = XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n            active = filter;\r\n            break;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    this.active = active;\r\n    return result;\r\n  }\r\n\r\n}\r\nXLineIteratorFilter.RETURN_TYPE = {\r\n  EXEC: 1,\r\n  JUMP: 2,\r\n};\r\nXLineIteratorFilter.FILTER_LOGIC = {\r\n  AND: 1,\r\n  OR: 2,\r\n};\r\nXLineIteratorFilter.EMPTY = new XLineIteratorFilter({\r\n  logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n  stack: [],\r\n});\r\n\r\nexport {\r\n  XLineIteratorFilter,\r\n};\r\n","import { XLineIteratorFilter } from './XLineIteratorFilter';\r\nimport { RectRange } from '../tablebase/RectRange';\r\n\r\nclass XLineIteratorLoop {\r\n\r\n  constructor({\r\n    foldOnOff = true,\r\n    items = [],\r\n    bx = 0,\r\n    by = 0,\r\n    table,\r\n    filter = XLineIteratorFilter.EMPTY,\r\n    view = RectRange.EMPTY,\r\n  }) {\r\n    this.foldOnOff = foldOnOff;\r\n    this.bx = bx;\r\n    this.by = by;\r\n    this.items = items;\r\n    this.table = table;\r\n    this.filter = filter;\r\n    this.view = view;\r\n  }\r\n\r\n  run() {\r\n    const { view, table } = this;\r\n    const { rows, cols, xIteratorBuilder } = table;\r\n    const { filter, foldOnOff } = this;\r\n    const { bx, by } = this;\r\n    const { sri, eri, sci, eci } = view;\r\n    let y = by;\r\n    let firstRow = true;\r\n    let lastRow = false;\r\n    xIteratorBuilder.getRowIterator()\r\n      .setBegin(sri)\r\n      .setEnd(eri)\r\n      .setLoop((row) => {\r\n        const height = rows.getHeight(row);\r\n        const result = filter.run({ row });\r\n        switch (result) {\r\n          case XLineIteratorFilter.RETURN_TYPE.EXEC: {\r\n            this.runNewRow(row, y);\r\n            lastRow = row === eri;\r\n            let x = bx;\r\n            xIteratorBuilder.getColIterator()\r\n              .setBegin(sci)\r\n              .setEnd(eci)\r\n              .setLoop((col) => {\r\n                const width = cols.getWidth(col);\r\n                if (firstRow) {\r\n                  this.runNewCol(col, x);\r\n                }\r\n                this.runFilter(row, col, x, y);\r\n                if (lastRow) {\r\n                  this.runEndCol(col);\r\n                }\r\n                x += width;\r\n              })\r\n              .execute();\r\n            firstRow = false;\r\n            this.runEndRow(row);\r\n            break;\r\n          }\r\n          case XLineIteratorFilter.RETURN_TYPE.JUMP: {\r\n            break;\r\n          }\r\n        }\r\n        y += height;\r\n      })\r\n      .foldOnOff(foldOnOff)\r\n      .execute();\r\n    this.runComplete();\r\n  }\r\n\r\n  runNewRow(row, y) {\r\n    const { items } = this;\r\n    for (let idx = 0; idx < items.length; idx++) {\r\n      const item = items[idx];\r\n      item.newRow({ row, y });\r\n    }\r\n  }\r\n\r\n  runNewCol(col, x) {\r\n    const { items } = this;\r\n    for (let idx = 0; idx < items.length; idx++) {\r\n      const item = items[idx];\r\n      item.newCol({ col, x });\r\n    }\r\n  }\r\n\r\n  runEndRow(row) {\r\n    const { items } = this;\r\n    for (let idx = 0; idx < items.length; idx++) {\r\n      const item = items[idx];\r\n      item.endRow({ row });\r\n    }\r\n  }\r\n\r\n  runEndCol(col) {\r\n    const { items } = this;\r\n    for (let idx = 0; idx < items.length; idx++) {\r\n      const item = items[idx];\r\n      item.endCol({ col });\r\n    }\r\n  }\r\n\r\n  runFilter(row, col, x, y) {\r\n    const { items } = this;\r\n    for (let idx = 0; idx < items.length; idx++) {\r\n      const item = items[idx];\r\n      const result = item.filter.run({ row, col });\r\n      switch (result) {\r\n        case XLineIteratorFilter.RETURN_TYPE.EXEC:\r\n          item.exec({ row, col, x, y });\r\n          break;\r\n        case XLineIteratorFilter.RETURN_TYPE.JUMP:\r\n          item.jump({ row, col, x, y });\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  runComplete() {\r\n    const { items } = this;\r\n    for (let idx = 0; idx < items.length; idx++) {\r\n      const item = items[idx];\r\n      item.complete();\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XLineIteratorLoop,\r\n};\r\n","import { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XLineIteratorFilter } from './XLineIteratorFilter';\r\n\r\nclass XLineIteratorItem {\r\n\r\n  constructor({\r\n    newRow = PlainUtils.noop,\r\n    endRow = PlainUtils.noop,\r\n    filter = XLineIteratorFilter.EMPTY,\r\n    newCol = PlainUtils.noop,\r\n    endCol = PlainUtils.noop,\r\n    jump = PlainUtils.noop,\r\n    exec = PlainUtils.noop,\r\n    complete = PlainUtils.noop,\r\n  } = {}) {\r\n    this.newRow = newRow;\r\n    this.endRow = endRow;\r\n    this.filter = filter;\r\n    this.newCol = newCol;\r\n    this.endCol = endCol;\r\n    this.jump = jump;\r\n    this.exec = exec;\r\n    this.complete = complete;\r\n  }\r\n\r\n  getFilter() {\r\n    return this.filter;\r\n  }\r\n\r\n}\r\n\r\nXLineIteratorItem.EMPTY = new XLineIteratorItem();\r\n\r\nexport {\r\n  XLineIteratorItem,\r\n};\r\n","import { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass BBorderHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    const { bottom } = cell.borderAttr;\r\n    return bottom.display\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  BBorderHide,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass MergeBNullEdge {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { merges } = table;\r\n    const merge = merges.getFirstIncludes(row, col);\r\n    if (merge) {\r\n      return merge.eri === row\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  MergeBNullEdge,\r\n};\r\n","import { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass RBorderHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    const { right } = cell.borderAttr;\r\n    return right.display\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RBorderHide,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass MergeRNullEdge {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { merges } = table;\r\n    const merge = merges.getFirstIncludes(row, col);\r\n    if (merge) {\r\n      return merge.eci === col\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  MergeRNullEdge,\r\n};\r\n","\r\nclass CellOutRange {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  CellOutRange,\r\n};\r\n","import { CellOutRange } from './CellOutRange';\r\nimport { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass RCellOutRange extends CellOutRange {\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    return this.master({ row, col }) && this.right({ row, col }) && this.left({ row, col })\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n  master({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells, cols } = table;\r\n    const next = cells.getCell(row, col + 1);\r\n    const master = cells.getCell(row, col);\r\n\r\n    // 是否是空单元格\r\n    if (PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text)) {\r\n      return true;\r\n    }\r\n    // 文字属性检查\r\n    const { fontAttr } = master;\r\n    const { direction } = fontAttr;\r\n    // 是否旋转文本\r\n    if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n      const { angle } = fontAttr;\r\n      if (table.isAngleBarCell(row, col)) {\r\n        return angle < 0;\r\n      }\r\n      if (angle === 90 || angle === -90) {\r\n        return true;\r\n      }\r\n    } else {\r\n      const { textWrap } = fontAttr;\r\n      if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n        return true;\r\n      }\r\n    }\r\n    // 对其方式检查\r\n    const { align } = fontAttr;\r\n    if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\r\n      return true;\r\n    }\r\n    // 文本是否越界\r\n    const width = table.getCellContentBoundOutWidth(row, col);\r\n    const maxWidth = cols.getWidth(col);\r\n    if (width > maxWidth) {\r\n      // 只有next单元格是空时\r\n      // 才允许不绘制边框\r\n      if (direction === BaseFont.TEXT_DIRECTION.ANGLE\r\n        || PlainUtils.isUnDef(next) || PlainUtils.isBlank(next.text)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  left({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells, cols, merges, xIteratorBuilder } = table;\r\n    const next = cells.getCell(row, col + 1);\r\n    const master = cells.getCell(row, col);\r\n    let find = true;\r\n    let leftWidth = cols.getWidth(col - 1) + cols.getWidth(col);\r\n\r\n    // 左方向越界检查\r\n    if (table.hasAngleCell(row)) {\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(col - 1)\r\n        .setEnd(0)\r\n        .setLoop((i) => {\r\n          // 检查空单元格\r\n          const cell = cells.getCell(row, i);\r\n          if (PlainUtils.isUnDef(cell)) {\r\n            return true;\r\n          }\r\n          // 检查合并单元格\r\n          const merge = merges.getFirstIncludes(row, i);\r\n          if (PlainUtils.isNotUnDef(merge)) {\r\n            return true;\r\n          }\r\n          // 检查空文本单元格\r\n          const { text } = cell;\r\n          if (PlainUtils.isBlank(text)) {\r\n            return true;\r\n          }\r\n          // 检查文本类型\r\n          const { fontAttr } = cell;\r\n          const { direction } = fontAttr;\r\n          // 是否旋转文本\r\n          if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n            const { angle } = fontAttr;\r\n            // 忽略反方向旋转的angleBar单元格\r\n            if (table.isAngleBarCell(row, i)) {\r\n              if (angle < 0) {\r\n                return true;\r\n              }\r\n            } else {\r\n              // 旋转方向忽略正负90度\r\n              if (angle === 90 || angle === -90) {\r\n                return true;\r\n              }\r\n              // 检查对其方式\r\n              const { align } = fontAttr;\r\n              if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\r\n                return true;\r\n              }\r\n            }\r\n          } else {\r\n            // 检查裁剪类型\r\n            const { textWrap } = fontAttr;\r\n            if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n              return true;\r\n            }\r\n            // 检查对其方式\r\n            const { align } = fontAttr;\r\n            if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\r\n              return true;\r\n            }\r\n          }\r\n          // 文本是否越界\r\n          const width = table.getCellContentBoundOutWidth(row, i);\r\n          if (width > leftWidth) {\r\n            // 只有master单元格和\r\n            // next单元格都是空时\r\n            // 才允许不绘制边框\r\n            const masterBlank = PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text);\r\n            const nextBlank = PlainUtils.isUnDef(next) || PlainUtils.isBlank(next.text);\r\n            if (direction === BaseFont.TEXT_DIRECTION.ANGLE\r\n              || (masterBlank && nextBlank)) {\r\n              find = false;\r\n            }\r\n          }\r\n          return false;\r\n        })\r\n        .setNext((i) => {\r\n          leftWidth += cols.getWidth(i);\r\n        })\r\n        .execute();\r\n    } else {\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(col - 1)\r\n        .setEnd(0)\r\n        .setLoop((i) => {\r\n          // 检查空单元格\r\n          const cell = cells.getCell(row, i);\r\n          if (PlainUtils.isUnDef(cell)) {\r\n            return true;\r\n          }\r\n          // 检查合并单元格\r\n          const merge = merges.getFirstIncludes(row, i);\r\n          if (PlainUtils.isNotUnDef(merge)) {\r\n            return true;\r\n          }\r\n          // 检查空文本单元格\r\n          const { text } = cell;\r\n          if (PlainUtils.isBlank(text)) {\r\n            return true;\r\n          }\r\n          // 检查文本类型\r\n          const { fontAttr } = cell;\r\n          const { textWrap } = fontAttr;\r\n          // 检查裁剪类型\r\n          if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n            return false;\r\n          }\r\n          // 检查对其方式\r\n          const { align } = fontAttr;\r\n          if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\r\n            return false;\r\n          }\r\n          // 文本是否越界\r\n          const width = table.getCellContentBoundOutWidth(row, i);\r\n          // 文本是否越界\r\n          if (width > leftWidth) {\r\n            // 只有master单元格和\r\n            // next单元格都是空时\r\n            // 才允许不绘制边框\r\n            const masterBlank = PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text);\r\n            const nextBlank = PlainUtils.isUnDef(next) || PlainUtils.isBlank(next.text);\r\n            if (masterBlank && nextBlank) {\r\n              find = false;\r\n            }\r\n          }\r\n          return false;\r\n        })\r\n        .setNext((i) => {\r\n          leftWidth += cols.getWidth(i);\r\n        })\r\n        .execute();\r\n    }\r\n    return find;\r\n  }\r\n\r\n  right({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells, cols, merges, xIteratorBuilder } = table;\r\n    const { len } = cols;\r\n    const master = cells.getCell(row, col);\r\n    let find = true;\r\n    let rightWidth = cols.getWidth(col + 1);\r\n\r\n    // 右方向越界检查\r\n    if (table.hasAngleCell(row)) {\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(col + 1)\r\n        .setEnd(len)\r\n        .setLoop((j) => {\r\n          // 空单元格检查\r\n          const cell = cells.getCell(row, j);\r\n          if (PlainUtils.isUnDef(cell)) {\r\n            return true;\r\n          }\r\n          // 合并单元格检查\r\n          const merge = merges.getFirstIncludes(row, j);\r\n          if (PlainUtils.isNotUnDef(merge)) {\r\n            return true;\r\n          }\r\n          // 空文本单检查\r\n          const { text } = cell;\r\n          if (PlainUtils.isBlank(text)) {\r\n            return true;\r\n          }\r\n          // 文本属性检查\r\n          const { fontAttr } = cell;\r\n          const { direction } = fontAttr;\r\n          // 文本旋转方向\r\n          if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n            const { angle } = fontAttr;\r\n            // 忽略反方向旋转的angleBar单元格\r\n            if (table.isAngleBarCell(row, j)) {\r\n              if (angle > 0) {\r\n                return true;\r\n              }\r\n            } else {\r\n              // 旋转方向忽略正负90度\r\n              if (angle === 90 || angle === -90) {\r\n                return true;\r\n              }\r\n              // 检查对其方式\r\n              const { align } = fontAttr;\r\n              if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\r\n                return true;\r\n              }\r\n            }\r\n          } else {\r\n            // 检查文本裁剪类型\r\n            const { textWrap } = fontAttr;\r\n            if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n              return true;\r\n            }\r\n            // 检查文本对齐方式\r\n            const { align } = fontAttr;\r\n            if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\r\n              return true;\r\n            }\r\n          }\r\n          // 检查文本是否越界\r\n          const width = table.getCellContentBoundOutWidth(row, j);\r\n          if (width > rightWidth) {\r\n            // 只有master单元格为\r\n            // 空时才允许不绘制边框\r\n            if (PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text)) {\r\n              find = false;\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        })\r\n        .setNext((j) => {\r\n          rightWidth += cols.getWidth(j);\r\n        })\r\n        .execute();\r\n    } else {\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(col + 1)\r\n        .setEnd(len)\r\n        .setLoop((j) => {\r\n          // 空单元格检查\r\n          const cell = cells.getCell(row, j);\r\n          if (PlainUtils.isUnDef(cell)) {\r\n            return true;\r\n          }\r\n          // 合并单元格检查\r\n          const merge = merges.getFirstIncludes(row, j);\r\n          if (PlainUtils.isNotUnDef(merge)) {\r\n            return true;\r\n          }\r\n          // 空文本单检查\r\n          const { text } = cell;\r\n          if (PlainUtils.isBlank(text)) {\r\n            return true;\r\n          }\r\n          // 文本属性检查\r\n          const { fontAttr } = cell;\r\n          const { textWrap } = fontAttr;\r\n          // 裁剪类型检查\r\n          if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n            return false;\r\n          }\r\n          // 文本对齐方式检查\r\n          const { align } = fontAttr;\r\n          if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\r\n            return false;\r\n          }\r\n          // 文本越界检查\r\n          const width = table.getCellContentBoundOutWidth(row, j);\r\n          if (width > rightWidth) {\r\n            // 只有master单元格为\r\n            // 空时才允许不绘制边框\r\n            if (PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text)) {\r\n              find = false;\r\n            }\r\n          }\r\n          return false;\r\n        })\r\n        .setNext((j) => {\r\n          rightWidth += cols.getWidth(j);\r\n        })\r\n        .execute();\r\n    }\r\n    return find;\r\n  }\r\n\r\n\r\n}\r\n\r\nexport {\r\n  RCellOutRange,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass AngleBarHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    return table.isAngleBarCell(row, col)\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBarHide,\r\n};\r\n","import { XLineIteratorFilter } from '../XLineIteratorFilter';\r\nimport { XLineIteratorItem } from '../XLineIteratorItem';\r\nimport { BBorderHide } from '../linefilters/borderhidden/BBorderHide';\r\nimport { MergeBNullEdge } from '../linefilters/mergenulledge/MergeBNullEdge';\r\nimport { RBorderHide } from '../linefilters/borderhidden/RBorderHide';\r\nimport { MergeRNullEdge } from '../linefilters/mergenulledge/MergeRNullEdge';\r\nimport { RCellOutRange } from '../linefilters/celloutrange/RCellOutRange';\r\nimport { AngleBarHide } from '../linefilters/anglebarhidden/AngleBarHide';\r\n\r\nclass LineGrid {\r\n\r\n  constructor({\r\n    table, getWidth, getHeight, bx = 0, by = 0,\r\n  }) {\r\n    this.table = table;\r\n    this.getHeight = getHeight;\r\n    this.getWidth = getWidth;\r\n    this.bx = bx;\r\n    this.by = by;\r\n    this.bLine = [];\r\n    this.rLine = [];\r\n  }\r\n\r\n  getBItem() {\r\n    const { table, bx, by, getWidth, getHeight } = this;\r\n    const bRow = {};\r\n    const bLine = [];\r\n    return new XLineIteratorItem({\r\n      newRow: ({ row, y }) => {\r\n        const height = getHeight(row);\r\n        bRow.sx = bx;\r\n        bRow.sy = by + y + height;\r\n        bRow.ex = bRow.sx;\r\n        bRow.ey = bRow.sy;\r\n        bRow.breakpoint = false;\r\n      },\r\n      endRow: () => {\r\n        if (bRow.breakpoint) {\r\n          const { sx, sy, ex, ey } = bRow;\r\n          bLine.push({ sx, sy, ex, ey });\r\n        }\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new BBorderHide(table),\r\n          new MergeBNullEdge(table),\r\n          new AngleBarHide(table),\r\n        ],\r\n      }),\r\n      exec: ({ col }) => {\r\n        const width = getWidth(col);\r\n        bRow.breakpoint = true;\r\n        bRow.ex += width;\r\n      },\r\n      jump: ({ col }) => {\r\n        if (bRow.breakpoint) {\r\n          const { sx, sy, ex, ey } = bRow;\r\n          bRow.breakpoint = false;\r\n          bLine.push({ sx, sy, ex, ey });\r\n        }\r\n        const width = getWidth(col);\r\n        bRow.sx = bRow.ex + width;\r\n        bRow.ex = bRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.bLine = bLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getRItem() {\r\n    const { table, bx, by, getWidth, getHeight } = this;\r\n    const rCols = [];\r\n    const rLine = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const width = getWidth(col);\r\n        const sx = bx + x + width;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const breakpoint = false;\r\n        rCols[col] = { sx, sy, ex, ey, breakpoint };\r\n      },\r\n      endCol: ({ col }) => {\r\n        const item = rCols[col];\r\n        if (item.breakpoint) {\r\n          const { sx, sy, ex, ey } = item;\r\n          rLine.push({ sx, sy, ex, ey });\r\n        }\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new RBorderHide(table),\r\n          new MergeRNullEdge(table),\r\n          new AngleBarHide(table),\r\n          new RCellOutRange(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const item = rCols[col];\r\n        const height = getHeight(row);\r\n        item.breakpoint = true;\r\n        item.ey += height;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const item = rCols[col];\r\n        const height = getHeight(row);\r\n        if (item.breakpoint) {\r\n          const { sx, sy, ex, ey } = item;\r\n          item.breakpoint = false;\r\n          rLine.push({ sx, sy, ex, ey });\r\n        }\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        this.rLine = rLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    return [\r\n      this.getBItem(),\r\n      this.getRItem(),\r\n    ];\r\n  }\r\n\r\n  getResult() {\r\n    const { bLine, rLine } = this;\r\n    return {\r\n      bLine, rLine,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LineGrid,\r\n};\r\n","class XLineOptimizeJoin {\r\n\r\n  constructor(xIteratorBuilder) {\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n  }\r\n\r\n  htJoin(line) {\r\n    for (let i = 1; i < line.length;) {\r\n      const item = line[i];\r\n      const last = line[i - 1];\r\n      const ck1 = item.borderAttr.top.equal(last.borderAttr.top);\r\n      const ck2 = item.col - last.col === 1;\r\n      const ck3 = item.row === last.row;\r\n      if (ck1 && ck2 && ck3) {\r\n        last.ex = item.ex;\r\n        last.col = item.col;\r\n        line.splice(i, 1);\r\n      } else {\r\n        i += 1;\r\n      }\r\n    }\r\n    return line;\r\n  }\r\n\r\n  hbJoin(line) {\r\n    for (let i = 1; i < line.length;) {\r\n      const item = line[i];\r\n      const last = line[i - 1];\r\n      const ck1 = item.borderAttr.bottom.equal(last.borderAttr.bottom);\r\n      const ck2 = item.col - last.col === 1;\r\n      const ck3 = item.row === last.row;\r\n      if (ck1 && ck2 && ck3) {\r\n        last.ex = item.ex;\r\n        last.col = item.col;\r\n        line.splice(i, 1);\r\n      } else {\r\n        i += 1;\r\n      }\r\n    }\r\n    return line;\r\n  }\r\n\r\n  vlJoin(line) {\r\n    const { xIteratorBuilder } = this;\r\n    for (let i = 1; i < line.length;) {\r\n      const item = line[i];\r\n      const last = line[i - 1];\r\n      const nextRow = xIteratorBuilder.getRowIterator()\r\n        .setBegin(last.row)\r\n        .setEnd(item.row)\r\n        .nextRow();\r\n      const ck1 = item.borderAttr.left.equal(last.borderAttr.left);\r\n      const ck2 = item.row === nextRow;\r\n      const ck3 = item.col === last.col;\r\n      if (ck1 && ck2 && ck3) {\r\n        last.ey = item.ey;\r\n        last.row = item.row;\r\n        line.splice(i, 1);\r\n      } else {\r\n        i += 1;\r\n      }\r\n    }\r\n    return line;\r\n  }\r\n\r\n  vrJoin(line) {\r\n    const { xIteratorBuilder } = this;\r\n    for (let i = 1; i < line.length;) {\r\n      const item = line[i];\r\n      const last = line[i - 1];\r\n      const nextRow = xIteratorBuilder.getRowIterator()\r\n        .setBegin(last.row)\r\n        .setEnd(item.row)\r\n        .nextRow();\r\n      const ck1 = item.borderAttr.right.equal(last.borderAttr.right);\r\n      const ck2 = item.row === nextRow;\r\n      const ck3 = item.col === last.col;\r\n      if (ck1 && ck2 && ck3) {\r\n        last.ey = item.ey;\r\n        last.row = item.row;\r\n        line.splice(i, 1);\r\n      } else {\r\n        i += 1;\r\n      }\r\n    }\r\n    return line;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XLineOptimizeJoin,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass BBorderShow {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const { bottom } = cell.borderAttr;\r\n    return bottom.display\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  BBorderShow,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass BBorderPriority {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const next = cells.getCell(row + 1, col);\r\n    const cell = cells.getCell(row, col);\r\n    // 对面的单元格不存在\r\n    if (PlainUtils.isUnDef(next)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    // 对面的单元格不需要显示\r\n    const { top } = next.borderAttr;\r\n    if (top.display) {\r\n      const { bottom } = cell.borderAttr;\r\n      const result = bottom.priority(top);\r\n      return result === 1\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    // 对面单元格不存在则显示\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  BBorderPriority,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass TBorderShow {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const { top } = cell.borderAttr;\r\n    return top.display\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  TBorderShow,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass TBorderPriority {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const next = cells.getCell(row - 1, col);\r\n    const cell = cells.getCell(row, col);\r\n    // 对面的单元格不存在\r\n    if (PlainUtils.isUnDef(next)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    // 对面的单元格不需要显示\r\n    const { bottom } = next.borderAttr;\r\n    if (bottom.display) {\r\n      const { top } = cell.borderAttr;\r\n      const result = top.priority(bottom);\r\n      return result === 1 || result === 0\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    // 对面单元格不存在则显示\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  TBorderPriority,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass MergeTNullEdge {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { merges } = table;\r\n    const merge = merges.getFirstIncludes(row, col);\r\n    if (merge) {\r\n      return merge.sri === row\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  MergeTNullEdge,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass RBorderShow {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const { right } = cell.borderAttr;\r\n    return right.display\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RBorderShow,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass RBorderPriority {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const next = cells.getCell(row, col + 1);\r\n    const cell = cells.getCell(row, col);\r\n    // 对面的单元格不存在\r\n    if (PlainUtils.isUnDef(next)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    // 对面的单元格不需要显示\r\n    const { left } = next.borderAttr;\r\n    if (left.display) {\r\n      const { right } = cell.borderAttr;\r\n      const result = right.priority(left);\r\n      return result === 1\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    // 对面单元格不存在则显示\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RBorderPriority,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass LBorderPriority {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const next = cells.getCell(row, col - 1);\r\n    const cell = cells.getCell(row, col);\r\n    // 对面的单元格不存在\r\n    if (PlainUtils.isUnDef(next)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    // 对面的单元格不需要显示\r\n    const { right } = next.borderAttr;\r\n    if (right.display) {\r\n      const { left } = cell.borderAttr;\r\n      const result = left.priority(right);\r\n      return result === 1 || result === 0\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    // 对面单元格不存在则显示\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LBorderPriority,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass LBorderShow {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const { left } = cell.borderAttr;\r\n    return left.display\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LBorderShow,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass MergeLNullEdge {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { merges } = table;\r\n    const merge = merges.getFirstIncludes(row, col);\r\n    if (merge) {\r\n      return merge.sci === col\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  MergeLNullEdge,\r\n};\r\n","import { CellOutRange } from './CellOutRange';\r\nimport { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass LCellOutRange extends CellOutRange {\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    return this.master({ row, col }) && this.right({ row, col }) && this.left({ row, col })\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n  master({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells, cols } = table;\r\n    const last = cells.getCell(row, col - 1);\r\n    const master = cells.getCell(row, col);\r\n\r\n    // 是否是空单元格\r\n    if (PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text)) {\r\n      return true;\r\n    }\r\n    // 文字属性检查\r\n    const { fontAttr } = master;\r\n    const { direction } = fontAttr;\r\n    // 是否旋转文本\r\n    if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n      const { angle } = fontAttr;\r\n      if (table.isAngleBarCell(row, col)) {\r\n        return angle > 0;\r\n      }\r\n      if (angle === 90 || angle === -90) {\r\n        return true;\r\n      }\r\n    } else {\r\n      const { textWrap } = fontAttr;\r\n      if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n        return true;\r\n      }\r\n    }\r\n    // 对其方式检查\r\n    const { align } = fontAttr;\r\n    if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\r\n      return true;\r\n    }\r\n    // 文本是否越界\r\n    const width = table.getCellContentBoundOutWidth(row, col);\r\n    const maxWidth = cols.getWidth(col);\r\n    if (width > maxWidth) {\r\n      // 只有next单元格是空时\r\n      // 才允许不绘制边框\r\n      if (PlainUtils.isUnDef(last) || PlainUtils.isBlank(last.text)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  left({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells, cols, merges, xIteratorBuilder } = table;\r\n    const master = cells.getCell(row, col);\r\n    let find = true;\r\n    let leftWidth = cols.getWidth(col - 1);\r\n\r\n    // 左方向越界检查\r\n    if (table.hasAngleCell(row)) {\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(col - 1)\r\n        .setEnd(0)\r\n        .setLoop((i) => {\r\n          // 是否是空单元格\r\n          const cell = cells.getCell(row, i);\r\n          if (PlainUtils.isUnDef(cell)) {\r\n            return true;\r\n          }\r\n          // 是否是合并单元格\r\n          const merge = merges.getFirstIncludes(row, i);\r\n          if (PlainUtils.isNotUnDef(merge)) {\r\n            return true;\r\n          }\r\n          // 是否是空文本\r\n          const { text } = cell;\r\n          if (PlainUtils.isBlank(text)) {\r\n            return true;\r\n          }\r\n          // 检查文本属性\r\n          const { fontAttr } = cell;\r\n          const { direction } = fontAttr;\r\n          // 是否旋转文本\r\n          if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n            const { angle } = fontAttr;\r\n            // 忽略反方向旋转的angleBar单元格\r\n            if (table.isAngleBarCell(row, i)) {\r\n              if (angle < 0) {\r\n                return true;\r\n              }\r\n            } else {\r\n              // 旋转方向忽略正负90度\r\n              if (angle === 90 || angle === -90) {\r\n                return true;\r\n              }\r\n              // 检查对其方式\r\n              const { align } = fontAttr;\r\n              if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\r\n                return true;\r\n              }\r\n            }\r\n          } else {\r\n            // 检查裁剪类型\r\n            const { textWrap } = fontAttr;\r\n            if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n              return true;\r\n            }\r\n            // 检查对其方式\r\n            const { align } = fontAttr;\r\n            if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\r\n              return true;\r\n            }\r\n          }\r\n          // 文本是否越界\r\n          const width = table.getCellContentBoundOutWidth(row, i);\r\n          if (width > leftWidth) {\r\n            // 只有master单元格为\r\n            // 空时才允许不绘制边框\r\n            if (PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text)) {\r\n              find = false;\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        })\r\n        .setNext((i) => {\r\n          leftWidth += cols.getWidth(i);\r\n        })\r\n        .execute();\r\n    } else {\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(col - 1)\r\n        .setEnd(0)\r\n        .setLoop((i) => {\r\n          // 是否是空单元格\r\n          const cell = cells.getCell(row, i);\r\n          if (PlainUtils.isUnDef(cell)) {\r\n            return true;\r\n          }\r\n          // 是否是合并单元格\r\n          const merge = merges.getFirstIncludes(row, i);\r\n          if (PlainUtils.isNotUnDef(merge)) {\r\n            return true;\r\n          }\r\n          // 是否是空文本\r\n          const { text } = cell;\r\n          if (PlainUtils.isBlank(text)) {\r\n            return true;\r\n          }\r\n          // 检查文本类型\r\n          const { fontAttr } = cell;\r\n          const { textWrap } = fontAttr;\r\n          // 检查裁剪类型\r\n          if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n            return false;\r\n          }\r\n          // 检查对其方式\r\n          const { align } = fontAttr;\r\n          if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\r\n            return false;\r\n          }\r\n          // 文本是否越界\r\n          const width = table.getCellContentBoundOutWidth(row, i);\r\n          if (width > leftWidth) {\r\n            // 只有master单元格为\r\n            // 空时才允许不绘制边框\r\n            if (PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text)) {\r\n              find = false;\r\n            }\r\n          }\r\n          return false;\r\n        })\r\n        .setNext((i) => {\r\n          leftWidth += cols.getWidth(i);\r\n        })\r\n        .execute();\r\n    }\r\n    return find;\r\n  }\r\n\r\n  right({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells, cols, merges, xIteratorBuilder } = table;\r\n    const { len } = cols;\r\n    const last = cells.getCell(row, col - 1);\r\n    const master = cells.getCell(row, col);\r\n    let find = true;\r\n    let rightWidth = cols.getWidth(col + 1) + cols.getWidth(col);\r\n\r\n    // 右方向越界检查\r\n    if (table.hasAngleCell(row)) {\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(col + 1)\r\n        .setEnd(len)\r\n        .setLoop((j) => {\r\n          // 空单元格检查\r\n          const cell = cells.getCell(row, j);\r\n          if (PlainUtils.isUnDef(cell)) {\r\n            return true;\r\n          }\r\n          // 合并单元格检查\r\n          const merge = merges.getFirstIncludes(row, j);\r\n          if (PlainUtils.isNotUnDef(merge)) {\r\n            return true;\r\n          }\r\n          // 空文本单检查\r\n          const { text } = cell;\r\n          if (PlainUtils.isBlank(text)) {\r\n            return true;\r\n          }\r\n          // 文本属性检查\r\n          const { fontAttr } = cell;\r\n          const { direction } = fontAttr;\r\n          // 文本旋转方向\r\n          if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n            const { angle } = fontAttr;\r\n            // 忽略反方向旋转的angleBar单元格\r\n            if (table.isAngleBarCell(row, j)) {\r\n              if (angle > 0) {\r\n                return true;\r\n              }\r\n            } else {\r\n              // 旋转方向忽略正负90度\r\n              if (angle === 90 || angle === -90) {\r\n                return true;\r\n              }\r\n              // 检查对其方式\r\n              const { align } = fontAttr;\r\n              if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\r\n                return true;\r\n              }\r\n            }\r\n          } else {\r\n            // 检查文本裁剪类型\r\n            const { textWrap } = fontAttr;\r\n            if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n              return true;\r\n            }\r\n            // 检查文本对齐方式\r\n            const { align } = fontAttr;\r\n            if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\r\n              return true;\r\n            }\r\n          }\r\n          // 检查文本是否越界\r\n          const width = table.getCellContentBoundOutWidth(row, j);\r\n          if (width > rightWidth) {\r\n            // 只有master单元格和\r\n            // last单元格都是空时\r\n            // 才允许不绘制边框\r\n            const masterBlank = PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text);\r\n            const nextBlank = PlainUtils.isUnDef(last) || PlainUtils.isBlank(last.text);\r\n            if (masterBlank && nextBlank) {\r\n              find = false;\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        })\r\n        .setNext((j) => {\r\n          rightWidth += cols.getWidth(j);\r\n        })\r\n        .execute();\r\n    } else {\r\n      xIteratorBuilder.getColIterator()\r\n        .setBegin(col + 1)\r\n        .setEnd(len)\r\n        .setLoop((j) => {\r\n          // 空单元格检查\r\n          const cell = cells.getCell(row, j);\r\n          if (PlainUtils.isUnDef(cell)) {\r\n            return true;\r\n          }\r\n          // 合并单元格检查\r\n          const merge = merges.getFirstIncludes(row, j);\r\n          if (PlainUtils.isNotUnDef(merge)) {\r\n            return true;\r\n          }\r\n          // 空文本单检查\r\n          const { text } = cell;\r\n          if (PlainUtils.isBlank(text)) {\r\n            return true;\r\n          }\r\n          // 文本属性检查\r\n          const { fontAttr } = cell;\r\n          const { textWrap } = fontAttr;\r\n          // 裁剪类型检查\r\n          if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\r\n            return false;\r\n          }\r\n          // 文本对齐方式检查\r\n          const { align } = fontAttr;\r\n          if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\r\n            return false;\r\n          }\r\n          // 文本越界检查\r\n          const width = table.getCellContentBoundOutWidth(row, j);\r\n          if (width > rightWidth) {\r\n            // 只有master单元格和\r\n            // last单元格都是空时\r\n            // 才允许不绘制边框\r\n            const masterBlank = PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text);\r\n            const nextBlank = PlainUtils.isUnDef(last) || PlainUtils.isBlank(last.text);\r\n            if (masterBlank && nextBlank) {\r\n              find = false;\r\n            }\r\n          }\r\n          return false;\r\n        })\r\n        .setNext((j) => {\r\n          rightWidth += cols.getWidth(j);\r\n        })\r\n        .execute();\r\n    }\r\n    return find;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LCellOutRange,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass LAngleBarHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    return table.isAngleBarCell(row, col) || table.isAngleBarCell(row, col - 1)\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LAngleBarHide,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass RAngleBarHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    return table.isAngleBarCell(row, col) || table.isAngleBarCell(row, col + 1)\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RAngleBarHide,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass TAngleBarHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    return table.isAngleBarCell(row, col) || table.isAngleBarCell(row - 1, col)\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  TAngleBarHide,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass BAngleBarHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    return table.isAngleBarCell(row, col) || table.isAngleBarCell(row + 1, col)\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  BAngleBarHide,\r\n};\r\n","import { XLineIteratorFilter } from '../XLineIteratorFilter';\r\nimport { XLineIteratorItem } from '../XLineIteratorItem';\r\nimport { XLineOptimizeJoin } from '../XLineOptimizeJoin';\r\nimport { BBorderShow } from '../linefilters/borderdisplay/BBorderShow';\r\nimport { BBorderPriority } from '../linefilters/borderpriority/BBorderPriority';\r\nimport { MergeBNullEdge } from '../linefilters/mergenulledge/MergeBNullEdge';\r\nimport { TBorderShow } from '../linefilters/borderdisplay/TBorderShow';\r\nimport { TBorderPriority } from '../linefilters/borderpriority/TBorderPriority';\r\nimport { MergeTNullEdge } from '../linefilters/mergenulledge/MergeTNullEdge';\r\nimport { RCellOutRange } from '../linefilters/celloutrange/RCellOutRange';\r\nimport { RBorderShow } from '../linefilters/borderdisplay/RBorderShow';\r\nimport { RBorderPriority } from '../linefilters/borderpriority/RBorderPriority';\r\nimport { MergeRNullEdge } from '../linefilters/mergenulledge/MergeRNullEdge';\r\nimport { LBorderPriority } from '../linefilters/borderpriority/LBorderPriority';\r\nimport { LBorderShow } from '../linefilters/borderdisplay/LBorderShow';\r\nimport { MergeLNullEdge } from '../linefilters/mergenulledge/MergeLNullEdge';\r\nimport { LCellOutRange } from '../linefilters/celloutrange/LCellOutRange';\r\nimport { LAngleBarHide } from '../linefilters/anglebarhidden/LAngleBarHide';\r\nimport { RAngleBarHide } from '../linefilters/anglebarhidden/RAngleBarHide';\r\nimport { TAngleBarHide } from '../linefilters/anglebarhidden/TAngleBarHide';\r\nimport { BAngleBarHide } from '../linefilters/anglebarhidden/BAngleBarHide';\r\n\r\nclass LineBorder {\r\n\r\n  constructor({\r\n    table, bx = 0, by = 0, optimize = true,\r\n  }) {\r\n    this.optimize = optimize;\r\n    this.table = table;\r\n    this.lLine = [];\r\n    this.tLine = [];\r\n    this.rLine = [];\r\n    this.bLine = [];\r\n    this.bx = bx;\r\n    this.by = by;\r\n  }\r\n\r\n  offsetX({\r\n    sx, ex, row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const last = cells.getCell(row, col - 1);\r\n    const next = cells.getCell(row, col + 1);\r\n    let osx = sx;\r\n    let oex = ex;\r\n    if (last) {\r\n      if (last.borderAttr.top.display) {\r\n        osx -= last.rightSdistWidth;\r\n      }\r\n    }\r\n    if (next) {\r\n      if (next.borderAttr.top.display) {\r\n        oex += next.leftSdistWidth;\r\n      }\r\n    }\r\n    return { osx, oex };\r\n  }\r\n\r\n  getBItem() {\r\n    const { table, bx, by, optimize } = this;\r\n    const { cols, rows, cells } = table;\r\n    const bLine = [];\r\n    const bRow = {};\r\n    const optimizeJoin = new XLineOptimizeJoin();\r\n    return new XLineIteratorItem({\r\n      newRow: ({ row, y }) => {\r\n        const height = rows.getHeight(row);\r\n        bRow.sx = bx;\r\n        bRow.sy = by + y + height;\r\n        bRow.ex = bRow.sx;\r\n        bRow.ey = bRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new BBorderShow(table),\r\n          new BBorderPriority(table),\r\n          new MergeBNullEdge(table),\r\n          new BAngleBarHide(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        bRow.ex += width;\r\n        const { sx, sy, ex, ey } = bRow;\r\n        bLine.push({ sx, sy, ex, ey, row, col, borderAttr });\r\n        bRow.sx = bRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        bRow.sx = bRow.ex + width;\r\n        bRow.ex = bRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.bLine = optimize\r\n          ? optimizeJoin.hbJoin(bLine)\r\n          : bLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getTItem() {\r\n    const { table, bx, by, optimize } = this;\r\n    const { cols, cells } = table;\r\n    const tLine = [];\r\n    const tRow = {};\r\n    const optimizeJoin = new XLineOptimizeJoin();\r\n    return new XLineIteratorItem({\r\n      newRow: ({ y }) => {\r\n        tRow.sx = bx;\r\n        tRow.sy = by + y;\r\n        tRow.ex = tRow.sx;\r\n        tRow.ey = tRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new TBorderShow(table),\r\n          new TBorderPriority(table),\r\n          new MergeTNullEdge(table),\r\n          new TAngleBarHide(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        tRow.ex += width;\r\n        const { sx, sy, ex, ey } = tRow;\r\n        const { osx, oex } = this.offsetX({ sx, ex, row, col });\r\n        tLine.push({ sx: osx, sy, ex: oex, ey, row, col, borderAttr });\r\n        tRow.sx = tRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        tRow.sx = tRow.ex + width;\r\n        tRow.ex = tRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.tLine = optimize\r\n          ? optimizeJoin.htJoin(tLine)\r\n          : tLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getRItem() {\r\n    const { table, bx, by, optimize } = this;\r\n    const { cols, rows, cells, xIteratorBuilder } = table;\r\n    const rCols = [];\r\n    const optimizeJoin = new XLineOptimizeJoin(xIteratorBuilder);\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const width = cols.getWidth(col);\r\n        const sx = bx + x + width;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const rLine = [];\r\n        rCols[col] = { sx, sy, ex, ey, rLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new RBorderShow(table),\r\n          new RBorderPriority(table),\r\n          new MergeRNullEdge(table),\r\n          new RAngleBarHide(table),\r\n          new RCellOutRange(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const cell = cells.getCell(row, col);\r\n        const item = rCols[col];\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, rLine } = item;\r\n        rLine.push({ sx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = rCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let rLine = [];\r\n        for (let idx = 0; idx < rCols.length; idx++) {\r\n          const item = rCols[idx];\r\n          if (item) {\r\n            if (optimize) {\r\n              rLine = rLine.concat(optimizeJoin.vrJoin(item.rLine));\r\n            } else {\r\n              rLine = rLine.concat(item.rLine);\r\n            }\r\n          }\r\n        }\r\n        this.rLine = rLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getLItem() {\r\n    const { table, bx, by, optimize } = this;\r\n    const { rows, cells, xIteratorBuilder } = table;\r\n    const lCols = [];\r\n    const optimizeJoin = new XLineOptimizeJoin(xIteratorBuilder);\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const sx = bx + x;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const lLine = [];\r\n        lCols[col] = { sx, sy, ex, ey, lLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new LBorderShow(table),\r\n          new LBorderPriority(table),\r\n          new MergeLNullEdge(table),\r\n          new LAngleBarHide(table),\r\n          new LCellOutRange(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const item = lCols[col];\r\n        const cell = cells.getCell(row, col);\r\n        const height = rows.getHeight(row);\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, lLine } = item;\r\n        lLine.push({ sx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = lCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let lLine = [];\r\n        for (let idx = 0; idx < lCols.length; idx++) {\r\n          const item = lCols[idx];\r\n          if (item) {\r\n            if (optimize) {\r\n              lLine = lLine.concat(optimizeJoin.vlJoin(item.lLine));\r\n            } else {\r\n              lLine = lLine.concat(item.lLine);\r\n            }\r\n          }\r\n        }\r\n        this.lLine = lLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    return [\r\n      this.getBItem(),\r\n      this.getTItem(),\r\n      this.getRItem(),\r\n      this.getLItem(),\r\n    ];\r\n  }\r\n\r\n  getResult() {\r\n    const { rLine, bLine, lLine, tLine } = this;\r\n    return {\r\n      rLine, bLine, lLine, tLine,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LineBorder,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass AngleBarShow {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    return table.isAngleBarCell(row, col)\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBarShow,\r\n};\r\n","import { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass AngleBarInRow {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row,\r\n  }) {\r\n    const { table } = this;\r\n    return table.hasAngleCell(row)\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBarInRow,\r\n};\r\n","import { XLineIteratorItem } from '../XLineIteratorItem';\r\nimport { XLineIteratorFilter } from '../XLineIteratorFilter';\r\nimport { BBorderShow } from '../linefilters/borderdisplay/BBorderShow';\r\nimport { BBorderPriority } from '../linefilters/borderpriority/BBorderPriority';\r\nimport { MergeBNullEdge } from '../linefilters/mergenulledge/MergeBNullEdge';\r\nimport { TBorderShow } from '../linefilters/borderdisplay/TBorderShow';\r\nimport { TBorderPriority } from '../linefilters/borderpriority/TBorderPriority';\r\nimport { MergeTNullEdge } from '../linefilters/mergenulledge/MergeTNullEdge';\r\nimport { RBorderShow } from '../linefilters/borderdisplay/RBorderShow';\r\nimport { RBorderPriority } from '../linefilters/borderpriority/RBorderPriority';\r\nimport { MergeRNullEdge } from '../linefilters/mergenulledge/MergeRNullEdge';\r\nimport { LBorderShow } from '../linefilters/borderdisplay/LBorderShow';\r\nimport { LBorderPriority } from '../linefilters/borderpriority/LBorderPriority';\r\nimport { MergeLNullEdge } from '../linefilters/mergenulledge/MergeLNullEdge';\r\nimport { AngleBarShow } from '../linefilters/anglebardisplay/AngleBarShow';\r\nimport { AngleBarInRow } from '../linefilters/anglebarinrow/AngleBarInRow';\r\n\r\nclass AngleBar {\r\n\r\n  constructor({\r\n    table, bx = 0, by = 0,\r\n  }) {\r\n    this.table = table;\r\n    this.lLine = [];\r\n    this.tLine = [];\r\n    this.rLine = [];\r\n    this.bLine = [];\r\n    this.bx = bx;\r\n    this.by = by;\r\n  }\r\n\r\n  offsetX({\r\n    sx, ex, row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    if (angle > 0) {\r\n      sx += cell.leftSdistWidth;\r\n      ex += cell.leftSdistWidth;\r\n    } else {\r\n      sx -= cell.rightSdistWidth;\r\n      ex -= cell.rightSdistWidth;\r\n    }\r\n    return {\r\n      osx: sx,\r\n      oex: ex,\r\n    };\r\n  }\r\n\r\n  getBItem() {\r\n    const { bx, by, table } = this;\r\n    const { cols, rows, cells } = table;\r\n    const bLine = [];\r\n    const bRow = {};\r\n    return new XLineIteratorItem({\r\n      newRow: ({ row, y }) => {\r\n        const height = rows.getHeight(row);\r\n        bRow.sx = bx;\r\n        bRow.sy = by + y + height;\r\n        bRow.ex = bRow.sx;\r\n        bRow.ey = bRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new BBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new BBorderPriority(table),\r\n          new MergeBNullEdge(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        bRow.ex += width;\r\n        const { sx, sy, ex, ey } = bRow;\r\n        bLine.push({ sx, sy, ex, ey, row, col, borderAttr });\r\n        bRow.sx = bRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        bRow.sx = bRow.ex + width;\r\n        bRow.ex = bRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.bLine = bLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getTItem() {\r\n    const { table, bx, by } = this;\r\n    const { cols, cells } = table;\r\n    const tLine = [];\r\n    const tRow = {};\r\n    return new XLineIteratorItem({\r\n      newRow: ({ y }) => {\r\n        tRow.sx = bx;\r\n        tRow.sy = by + y;\r\n        tRow.ex = tRow.sx;\r\n        tRow.ey = tRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new TBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new TBorderPriority(table),\r\n          new MergeTNullEdge(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        tRow.ex += width;\r\n        const { sx, sy, ex, ey } = tRow;\r\n        const { osx, oex } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        tLine.push({ sx: osx, sy, ex: oex, ey, row, col, borderAttr });\r\n        tRow.sx = tRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        tRow.sx = tRow.ex + width;\r\n        tRow.ex = tRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.tLine = tLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getRItem() {\r\n    const { bx, by, table } = this;\r\n    const { cols, rows, cells } = table;\r\n    const rCols = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const width = cols.getWidth(col);\r\n        const sx = bx + x + width;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const rLine = [];\r\n        rCols[col] = { sx, sy, ex, ey, rLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new RBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new RBorderPriority(table),\r\n          new MergeRNullEdge(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const cell = cells.getCell(row, col);\r\n        const item = rCols[col];\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, rLine } = item;\r\n        const { osx } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        rLine.push({ sx: osx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = rCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let rLine = [];\r\n        for (let idx = 0; idx < rCols.length; idx++) {\r\n          const item = rCols[idx];\r\n          if (item) {\r\n            rLine = rLine.concat(item.rLine);\r\n          }\r\n        }\r\n        this.rLine = rLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getLItem() {\r\n    const { bx, by, table } = this;\r\n    const { rows, cells } = table;\r\n    const lCols = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const sx = bx + x;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const lLine = [];\r\n        lCols[col] = { sx, sy, ex, ey, lLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new LBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new LBorderPriority(table),\r\n          new MergeLNullEdge(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const item = lCols[col];\r\n        const cell = cells.getCell(row, col);\r\n        const height = rows.getHeight(row);\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, lLine } = item;\r\n        const { osx } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        lLine.push({ sx: osx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = lCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let lLine = [];\r\n        for (let idx = 0; idx < lCols.length; idx++) {\r\n          const item = lCols[idx];\r\n          if (item) {\r\n            lLine = lLine.concat(item.lLine);\r\n          }\r\n        }\r\n        this.lLine = lLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    return [\r\n      this.getBItem(),\r\n      this.getTItem(),\r\n      this.getRItem(),\r\n      this.getLItem(),\r\n    ];\r\n  }\r\n\r\n  getResult() {\r\n    const { rLine, bLine, lLine, tLine } = this;\r\n    return {\r\n      rLine, bLine, lLine, tLine,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBar,\r\n};\r\n","import { XLineIteratorItem } from '../XLineIteratorItem';\r\nimport { XLineIteratorFilter } from '../XLineIteratorFilter';\r\n\r\nclass LineIndex {\r\n\r\n  constructor({\r\n    getWidth, getHeight, bx = 0, by = 0,\r\n  }) {\r\n    this.getHeight = getHeight;\r\n    this.getWidth = getWidth;\r\n    this.bx = bx;\r\n    this.by = by;\r\n    this.bLine = [];\r\n    this.rLine = [];\r\n  }\r\n\r\n  getBItem() {\r\n    const { bx, by, getWidth, getHeight } = this;\r\n    const bRow = {};\r\n    const bLine = [];\r\n    return new XLineIteratorItem({\r\n      newRow: ({ row, y }) => {\r\n        const height = getHeight(row);\r\n        bRow.sx = bx;\r\n        bRow.sy = by + y + height;\r\n        bRow.ex = bRow.sx;\r\n        bRow.ey = bRow.sy;\r\n        bRow.breakpoint = false;\r\n      },\r\n      endRow: () => {\r\n        if (bRow.breakpoint) {\r\n          const { sx, sy, ex, ey } = bRow;\r\n          bLine.push({ sx, sy, ex, ey });\r\n        }\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [],\r\n      }),\r\n      exec: ({ col }) => {\r\n        const width = getWidth(col);\r\n        bRow.breakpoint = true;\r\n        bRow.ex += width;\r\n      },\r\n      jump: ({ col }) => {\r\n        if (bRow.breakpoint) {\r\n          const { sx, sy, ex, ey } = bRow;\r\n          bRow.breakpoint = false;\r\n          bLine.push({ sx, sy, ex, ey });\r\n        }\r\n        const width = getWidth(col);\r\n        bRow.sx = bRow.ex + width;\r\n        bRow.ex = bRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.bLine = bLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getRItem() {\r\n    const { bx, by, getWidth, getHeight } = this;\r\n    const rCols = [];\r\n    const rLine = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const width = getWidth(col);\r\n        const sx = bx + x + width;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const breakpoint = false;\r\n        rCols[col] = { sx, sy, ex, ey, breakpoint };\r\n      },\r\n      endCol: ({ col }) => {\r\n        const item = rCols[col];\r\n        if (item.breakpoint) {\r\n          const { sx, sy, ex, ey } = item;\r\n          rLine.push({ sx, sy, ex, ey });\r\n        }\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const item = rCols[col];\r\n        const height = getHeight(row);\r\n        item.breakpoint = true;\r\n        item.ey += height;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const item = rCols[col];\r\n        const height = getHeight(row);\r\n        if (item.breakpoint) {\r\n          const { sx, sy, ex, ey } = item;\r\n          item.breakpoint = false;\r\n          rLine.push({ sx, sy, ex, ey });\r\n        }\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        this.rLine = rLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    return [\r\n      this.getBItem(),\r\n      this.getRItem(),\r\n    ];\r\n  }\r\n\r\n  getResult() {\r\n    const { bLine, rLine } = this;\r\n    return {\r\n      bLine, rLine,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LineIndex,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass LAngleBarOut {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n    this.maxWidth = 0;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cols } = table;\r\n    const width = cols.getWidth(col);\r\n    this.maxWidth += width;\r\n    if (!table.isAngleBarCell(row, col)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    if (angle < 0) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const size = table.getCellContentBoundOutWidth(row, col);\r\n    if (size === 0 || size > this.maxWidth) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LAngleBarOut,\r\n};\r\n","import { XLineIteratorItem } from '../XLineIteratorItem';\r\nimport { XLineIteratorFilter } from '../XLineIteratorFilter';\r\nimport { AngleBarInRow } from '../linefilters/anglebarinrow/AngleBarInRow';\r\nimport { BBorderShow } from '../linefilters/borderdisplay/BBorderShow';\r\nimport { AngleBarShow } from '../linefilters/anglebardisplay/AngleBarShow';\r\nimport { BBorderPriority } from '../linefilters/borderpriority/BBorderPriority';\r\nimport { MergeBNullEdge } from '../linefilters/mergenulledge/MergeBNullEdge';\r\nimport { TBorderShow } from '../linefilters/borderdisplay/TBorderShow';\r\nimport { TBorderPriority } from '../linefilters/borderpriority/TBorderPriority';\r\nimport { MergeTNullEdge } from '../linefilters/mergenulledge/MergeTNullEdge';\r\nimport { RBorderShow } from '../linefilters/borderdisplay/RBorderShow';\r\nimport { RBorderPriority } from '../linefilters/borderpriority/RBorderPriority';\r\nimport { MergeRNullEdge } from '../linefilters/mergenulledge/MergeRNullEdge';\r\nimport { LBorderShow } from '../linefilters/borderdisplay/LBorderShow';\r\nimport { LBorderPriority } from '../linefilters/borderpriority/LBorderPriority';\r\nimport { MergeLNullEdge } from '../linefilters/mergenulledge/MergeLNullEdge';\r\nimport { LAngleBarOut } from '../linefilters/anglebarout/LAngleBarOut';\r\n\r\nclass AngleBarLOut {\r\n\r\n  constructor({\r\n    table, bx = 0, by = 0,\r\n  }) {\r\n    this.table = table;\r\n    this.lLine = [];\r\n    this.tLine = [];\r\n    this.rLine = [];\r\n    this.bLine = [];\r\n    this.bx = bx;\r\n    this.by = by;\r\n  }\r\n\r\n  offsetX({\r\n    sx, ex, row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    if (angle > 0) {\r\n      sx += cell.leftSdistWidth;\r\n      ex += cell.leftSdistWidth;\r\n    } else {\r\n      sx -= cell.rightSdistWidth;\r\n      ex -= cell.rightSdistWidth;\r\n    }\r\n    return {\r\n      osx: sx,\r\n      oex: ex,\r\n    };\r\n  }\r\n\r\n  getBItem() {\r\n    const { bx, by, table } = this;\r\n    const { cols, rows, cells } = table;\r\n    const bLine = [];\r\n    const bRow = {};\r\n    return new XLineIteratorItem({\r\n      newRow: ({ row, y }) => {\r\n        const height = rows.getHeight(row);\r\n        bRow.sx = bx;\r\n        bRow.sy = by + y + height;\r\n        bRow.ex = bRow.sx;\r\n        bRow.ey = bRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new BBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new BBorderPriority(table),\r\n          new MergeBNullEdge(table),\r\n          new LAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        bRow.ex += width;\r\n        const { sx, sy, ex, ey } = bRow;\r\n        bLine.push({ sx, sy, ex, ey, row, col, borderAttr });\r\n        bRow.sx = bRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        bRow.sx = bRow.ex + width;\r\n        bRow.ex = bRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.bLine = bLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getTItem() {\r\n    const { table, bx, by } = this;\r\n    const { cols, cells } = table;\r\n    const tLine = [];\r\n    const tRow = {};\r\n    return new XLineIteratorItem({\r\n      newRow: ({ y }) => {\r\n        tRow.sx = bx;\r\n        tRow.sy = by + y;\r\n        tRow.ex = tRow.sx;\r\n        tRow.ey = tRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new TBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new TBorderPriority(table),\r\n          new MergeTNullEdge(table),\r\n          new LAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        tRow.ex += width;\r\n        const { sx, sy, ex, ey } = tRow;\r\n        const { osx, oex } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        tLine.push({ sx: osx, sy, ex: oex, ey, row, col, borderAttr });\r\n        tRow.sx = tRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        tRow.sx = tRow.ex + width;\r\n        tRow.ex = tRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.tLine = tLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getRItem() {\r\n    const { bx, by, table } = this;\r\n    const { cols, rows, cells } = table;\r\n    const rCols = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const width = cols.getWidth(col);\r\n        const sx = bx + x + width;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const rLine = [];\r\n        rCols[col] = { sx, sy, ex, ey, rLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new RBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new RBorderPriority(table),\r\n          new MergeRNullEdge(table),\r\n          new LAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const cell = cells.getCell(row, col);\r\n        const item = rCols[col];\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, rLine } = item;\r\n        const { osx } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        rLine.push({ sx: osx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = rCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let rLine = [];\r\n        for (let idx = 0; idx < rCols.length; idx++) {\r\n          const item = rCols[idx];\r\n          if (item) {\r\n            rLine = rLine.concat(item.rLine);\r\n          }\r\n        }\r\n        this.rLine = rLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getLItem() {\r\n    const { bx, by, table } = this;\r\n    const { rows, cells } = table;\r\n    const lCols = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const sx = bx + x;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const lLine = [];\r\n        lCols[col] = { sx, sy, ex, ey, lLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new LBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new LBorderPriority(table),\r\n          new MergeLNullEdge(table),\r\n          new LAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const item = lCols[col];\r\n        const cell = cells.getCell(row, col);\r\n        const height = rows.getHeight(row);\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, lLine } = item;\r\n        const { osx } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        lLine.push({ sx: osx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = lCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let lLine = [];\r\n        for (let idx = 0; idx < lCols.length; idx++) {\r\n          const item = lCols[idx];\r\n          if (item) {\r\n            lLine = lLine.concat(item.lLine);\r\n          }\r\n        }\r\n        this.lLine = lLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    return [\r\n      this.getBItem(),\r\n      this.getTItem(),\r\n      this.getRItem(),\r\n      this.getLItem(),\r\n    ];\r\n  }\r\n\r\n  getResult() {\r\n    const { rLine, bLine, lLine, tLine } = this;\r\n    return {\r\n      rLine, bLine, lLine, tLine,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBarLOut,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass RAngleBarOut {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n    this.maxWidth = 0;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cols } = table;\r\n    const width = cols.getWidth(col);\r\n    this.maxWidth += width;\r\n    if (!table.isAngleBarCell(row, col)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    if (angle > 0) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const size = table.getCellContentBoundOutWidth(row, col);\r\n    if (size === 0 || size > this.maxWidth) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RAngleBarOut,\r\n};\r\n","import { XLineIteratorItem } from '../XLineIteratorItem';\r\nimport { XLineIteratorFilter } from '../XLineIteratorFilter';\r\nimport { AngleBarInRow } from '../linefilters/anglebarinrow/AngleBarInRow';\r\nimport { BBorderShow } from '../linefilters/borderdisplay/BBorderShow';\r\nimport { AngleBarShow } from '../linefilters/anglebardisplay/AngleBarShow';\r\nimport { BBorderPriority } from '../linefilters/borderpriority/BBorderPriority';\r\nimport { MergeBNullEdge } from '../linefilters/mergenulledge/MergeBNullEdge';\r\nimport { TBorderShow } from '../linefilters/borderdisplay/TBorderShow';\r\nimport { TBorderPriority } from '../linefilters/borderpriority/TBorderPriority';\r\nimport { MergeTNullEdge } from '../linefilters/mergenulledge/MergeTNullEdge';\r\nimport { RBorderShow } from '../linefilters/borderdisplay/RBorderShow';\r\nimport { RBorderPriority } from '../linefilters/borderpriority/RBorderPriority';\r\nimport { MergeRNullEdge } from '../linefilters/mergenulledge/MergeRNullEdge';\r\nimport { LBorderShow } from '../linefilters/borderdisplay/LBorderShow';\r\nimport { LBorderPriority } from '../linefilters/borderpriority/LBorderPriority';\r\nimport { MergeLNullEdge } from '../linefilters/mergenulledge/MergeLNullEdge';\r\nimport { RAngleBarOut } from '../linefilters/anglebarout/RAngleBarOut';\r\n\r\nclass AngleBarROut {\r\n\r\n  constructor({\r\n    table, bx = 0, by = 0,\r\n  }) {\r\n    this.table = table;\r\n    this.lLine = [];\r\n    this.tLine = [];\r\n    this.rLine = [];\r\n    this.bLine = [];\r\n    this.bx = bx;\r\n    this.by = by;\r\n  }\r\n\r\n  offsetX({\r\n    sx, ex, row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    if (angle > 0) {\r\n      sx += cell.leftSdistWidth;\r\n      ex += cell.leftSdistWidth;\r\n    } else {\r\n      sx -= cell.rightSdistWidth;\r\n      ex -= cell.rightSdistWidth;\r\n    }\r\n    return {\r\n      osx: sx,\r\n      oex: ex,\r\n    };\r\n  }\r\n\r\n  getBItem() {\r\n    const { bx, by, table } = this;\r\n    const { cols, rows, cells } = table;\r\n    const bLine = [];\r\n    const bRow = {};\r\n    return new XLineIteratorItem({\r\n      newRow: ({ row, y }) => {\r\n        const height = rows.getHeight(row);\r\n        bRow.sx = bx;\r\n        bRow.sy = by + y + height;\r\n        bRow.ex = bRow.sx;\r\n        bRow.ey = bRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new BBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new BBorderPriority(table),\r\n          new MergeBNullEdge(table),\r\n          new RAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        bRow.ex += width;\r\n        const { sx, sy, ex, ey } = bRow;\r\n        bLine.push({ sx, sy, ex, ey, row, col, borderAttr });\r\n        bRow.sx = bRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        bRow.sx = bRow.ex + width;\r\n        bRow.ex = bRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.bLine = bLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getTItem() {\r\n    const { table, bx, by } = this;\r\n    const { cols, cells } = table;\r\n    const tLine = [];\r\n    const tRow = {};\r\n    return new XLineIteratorItem({\r\n      newRow: ({ y }) => {\r\n        tRow.sx = bx;\r\n        tRow.sy = by + y;\r\n        tRow.ex = tRow.sx;\r\n        tRow.ey = tRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new TBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new TBorderPriority(table),\r\n          new MergeTNullEdge(table),\r\n          new RAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        tRow.ex += width;\r\n        const { sx, sy, ex, ey } = tRow;\r\n        const { osx, oex } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        tLine.push({ sx: osx, sy, ex: oex, ey, row, col, borderAttr });\r\n        tRow.sx = tRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        tRow.sx = tRow.ex + width;\r\n        tRow.ex = tRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.tLine = tLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getRItem() {\r\n    const { bx, by, table } = this;\r\n    const { cols, rows, cells } = table;\r\n    const rCols = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const width = cols.getWidth(col);\r\n        const sx = bx + x + width;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const rLine = [];\r\n        rCols[col] = { sx, sy, ex, ey, rLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new RBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new RBorderPriority(table),\r\n          new MergeRNullEdge(table),\r\n          new RAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const cell = cells.getCell(row, col);\r\n        const item = rCols[col];\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, rLine } = item;\r\n        const { osx } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        rLine.push({ sx: osx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = rCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let rLine = [];\r\n        for (let idx = 0; idx < rCols.length; idx++) {\r\n          const item = rCols[idx];\r\n          if (item) {\r\n            rLine = rLine.concat(item.rLine);\r\n          }\r\n        }\r\n        this.rLine = rLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getLItem() {\r\n    const { bx, by, table } = this;\r\n    const { rows, cells } = table;\r\n    const lCols = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const sx = bx + x;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const lLine = [];\r\n        lCols[col] = { sx, sy, ex, ey, lLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new LBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new LBorderPriority(table),\r\n          new MergeLNullEdge(table),\r\n          new RAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const item = lCols[col];\r\n        const cell = cells.getCell(row, col);\r\n        const height = rows.getHeight(row);\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, lLine } = item;\r\n        const { osx } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        lLine.push({ sx: osx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = lCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let lLine = [];\r\n        for (let idx = 0; idx < lCols.length; idx++) {\r\n          const item = lCols[idx];\r\n          if (item) {\r\n            lLine = lLine.concat(item.lLine);\r\n          }\r\n        }\r\n        this.lLine = lLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    return [\r\n      this.getBItem(),\r\n      this.getTItem(),\r\n      this.getRItem(),\r\n      this.getLItem(),\r\n    ];\r\n  }\r\n\r\n  getResult() {\r\n    const { rLine, bLine, lLine, tLine } = this;\r\n    return {\r\n      rLine, bLine, lLine, tLine,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBarROut,\r\n};\r\n","import { XLineIteratorLoop } from './XLineIteratorLoop';\r\nimport { LineGrid } from './linegrids/LineGrid';\r\nimport { LineBorder } from './lineborder/LineBorder';\r\nimport { AngleBar } from './anglebar/AngleBar';\r\nimport { LineIndex } from './lineindex/LineIndex';\r\nimport { AngleBarLOut } from './anglebarout/AngleBarLOut';\r\nimport { AngleBarROut } from './anglebarout/AngleBarROut';\r\n\r\nclass XLinePlainGenerator {\r\n\r\n  static run({\r\n    optimize = true,\r\n    scrollView,\r\n    foldOnOff,\r\n    table,\r\n    by = 0,\r\n    bx = 0,\r\n    getHeight = ri => table.rows.getHeight(ri),\r\n    getWidth = ci => table.cols.getWidth(ci),\r\n    model = XLinePlainGenerator.MODEL.ALL,\r\n  }) {\r\n    switch (model) {\r\n      case XLinePlainGenerator.MODEL.BORDER: {\r\n        const bLine = new LineBorder({\r\n          table, bx, by, optimize,\r\n        });\r\n        const aLine = new AngleBar({\r\n          table, bx, by,\r\n        });\r\n        const xIterator = new XLineIteratorLoop({\r\n          items: bLine.getItems().concat(aLine.getItems()),\r\n          view: scrollView,\r\n          table,\r\n          foldOnOff,\r\n        });\r\n        xIterator.run();\r\n        const bResult = bLine.getResult();\r\n        const aResult = aLine.getResult();\r\n        return {\r\n          bResult, aResult,\r\n        };\r\n      }\r\n      case XLinePlainGenerator.MODEL.ALL: {\r\n        const bLine = new LineBorder({\r\n          table, bx, by, optimize,\r\n        });\r\n        const gLine = new LineGrid({\r\n          table, bx, by, getWidth, getHeight,\r\n        });\r\n        const aLine = new AngleBar({\r\n          table, bx, by,\r\n        });\r\n        const xIterator = new XLineIteratorLoop({\r\n          items: bLine.getItems().concat(gLine.getItems()).concat(aLine.getItems()),\r\n          foldOnOff,\r\n          table,\r\n          view: scrollView,\r\n        });\r\n        xIterator.run();\r\n        const gResult = gLine.getResult();\r\n        const bResult = bLine.getResult();\r\n        const aResult = aLine.getResult();\r\n        return {\r\n          gResult, bResult, aResult,\r\n        };\r\n      }\r\n      case XLinePlainGenerator.MODEL.INDEX: {\r\n        const iLine = new LineIndex({\r\n          bx, by, getWidth, getHeight,\r\n        });\r\n        const xIterator = new XLineIteratorLoop({\r\n          items: iLine.getItems(),\r\n          foldOnOff,\r\n          table,\r\n          view: scrollView,\r\n        });\r\n        xIterator.run();\r\n        const iResult = iLine.getResult();\r\n        return {\r\n          iResult,\r\n        };\r\n      }\r\n      case XLinePlainGenerator.MODEL.GRID: {\r\n        const gLine = new LineGrid({\r\n          table, bx, by, getWidth, getHeight,\r\n        });\r\n        const xIterator = new XLineIteratorLoop({\r\n          items: gLine.getItems(),\r\n          foldOnOff,\r\n          table,\r\n          view: scrollView,\r\n        });\r\n        xIterator.run();\r\n        const gResult = gLine.getResult();\r\n        return {\r\n          gResult,\r\n        };\r\n      }\r\n      case XLinePlainGenerator.MODEL.OUT_ANGLE_BAR_L: {\r\n        const alLine = new AngleBarLOut({\r\n          table, bx, by,\r\n        });\r\n        const xIterator = new XLineIteratorLoop({\r\n          items: alLine.getItems(),\r\n          foldOnOff,\r\n          table,\r\n          view: scrollView,\r\n        });\r\n        xIterator.run();\r\n        const alResult = alLine.getResult();\r\n        return {\r\n          alResult,\r\n        };\r\n      }\r\n      case XLinePlainGenerator.MODEL.OUT_ANGLE_BAR_R: {\r\n        const arLine = new AngleBarROut({\r\n          table, bx, by,\r\n        });\r\n        const xIterator = new XLineIteratorLoop({\r\n          items: arLine.getItems(),\r\n          foldOnOff,\r\n          table,\r\n          view: scrollView,\r\n        });\r\n        xIterator.run();\r\n        const arResult = arLine.getResult();\r\n        return {\r\n          arResult,\r\n        };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\nXLinePlainGenerator.MODEL = {\r\n  BORDER: 1,\r\n  ALL: 3,\r\n  GRID: 2,\r\n  INDEX: 4,\r\n  OUT_ANGLE_BAR_L: 5,\r\n  OUT_ANGLE_BAR_R: 6,\r\n};\r\n\r\nexport {\r\n  XLinePlainGenerator,\r\n};\r\n","class XMergesIndex {\r\n\r\n  constructor(xTableData) {\r\n    this.xTableData = xTableData;\r\n  }\r\n\r\n  set(ri, ci, point) {\r\n    const item = this.xTableData.getOrNew(ri, ci);\r\n    item.setMergeId(point);\r\n  }\r\n\r\n  get(ri, ci) {\r\n    const item = this.xTableData.get(ri, ci);\r\n    return item ? item.getMergeId() : undefined;\r\n  }\r\n\r\n  clear(ri, ci) {\r\n    const item = this.xTableData.get(ri, ci);\r\n    if (item) {\r\n      item.setMergeId(null);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMergesIndex,\r\n};\r\n","class XMergesNo {\r\n\r\n  constructor(no) {\r\n    this.no = no;\r\n  }\r\n\r\n  setNo(no) {\r\n    this.no = no;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMergesNo,\r\n};\r\n","import { XMergesNo } from './XMergesNo';\r\n\r\nclass XMergesNoRow {\r\n\r\n  constructor() {\r\n    this.nos = [];\r\n  }\r\n\r\n  getNo(no) {\r\n    if (this.nos[no]) { return this.nos[no]; }\r\n    this.nos[no] = new XMergesNo(no);\r\n    return this.nos[no];\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMergesNoRow,\r\n};\r\n","class XMergesItems {\r\n\r\n  constructor() {\r\n    this.recovery = [];\r\n    this.items = [];\r\n  }\r\n\r\n  get(point) {\r\n    return this.items[point];\r\n  }\r\n\r\n  add(item) {\r\n    const point = this.recovery.pop();\r\n    if (point) {\r\n      this.items[point] = item;\r\n      return point;\r\n    }\r\n    this.items.push(item);\r\n    return this.items.length - 1;\r\n  }\r\n\r\n  clear(point) {\r\n    this.items[point] = null;\r\n    this.recovery.push(point);\r\n  }\r\n\r\n  getItems() {\r\n    return this.items;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMergesItems,\r\n};\r\n","import { XMergesNo } from './XMergesNo';\r\n\r\nclass XMergesNoCol {\r\n\r\n  constructor() {\r\n    this.nos = [];\r\n  }\r\n\r\n  getNo(no) {\r\n    if (this.nos[no]) { return this.nos[no]; }\r\n    this.nos[no] = new XMergesNo(no);\r\n    return this.nos[no];\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMergesNoCol,\r\n};\r\n","class XMergesRange {\r\n\r\n  constructor(sri, sci, eri, eci, view) {\r\n    this.sri = sri;\r\n    this.sci = sci;\r\n    this.eri = eri;\r\n    this.eci = eci;\r\n    this.view = view;\r\n  }\r\n\r\n  getView() {\r\n    this.view.set(this.sri.no, this.sci.no, this.eri.no, this.eci.no);\r\n    return this.view;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMergesRange,\r\n};\r\n","import { XMergesIndex } from './XMergesIndex';\r\nimport { XMergesNoRow } from './XMergesNoRow';\r\nimport { XMergesItems } from './XMergesItems';\r\nimport { XMergesNoCol } from './XMergesNoCol';\r\nimport { XMergesRange } from './XMergesRange';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { RectRange } from '../tablebase/RectRange';\r\n\r\nclass XMerges {\r\n\r\n  constructor({\r\n    merges = [],\r\n    xTableData,\r\n    xIteratorBuilder,\r\n  }) {\r\n    this.xMergesNoRow = new XMergesNoRow();\r\n    this.xMergesNoCol = new XMergesNoCol();\r\n    this.xMergesIndex = new XMergesIndex(xTableData);\r\n    this.xMergesItems = new XMergesItems();\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n    merges.map(merge => RectRange.valueOf(merge)).forEach(view => this.add(view));\r\n  }\r\n\r\n  getIncludes(view, notify) {\r\n    view.each(this.xIteratorBuilder, (ri, ci) => {\r\n      const view = this.getFirstIncludes(ri, ci);\r\n      if (view) {\r\n        notify(view);\r\n      }\r\n    });\r\n  }\r\n\r\n  getFirstIncludes(ri, ci) {\r\n    const point = this.xMergesIndex.get(ri, ci);\r\n    if (PlainUtils.isUnDef(point)) {\r\n      return PlainUtils.Undef;\r\n    }\r\n    const view = this.xMergesItems.get(point);\r\n    if (PlainUtils.isUnDef(view)) {\r\n      return PlainUtils.Undef;\r\n    }\r\n    return this.xMergesItems.get(point).getView();\r\n  }\r\n\r\n  add(view) {\r\n    const sri = this.xMergesNoRow.getNo(view.sri);\r\n    const sci = this.xMergesNoCol.getNo(view.sci);\r\n    const eri = this.xMergesNoRow.getNo(view.eri);\r\n    const eci = this.xMergesNoCol.getNo(view.eci);\r\n    const point = this.xMergesItems.add(new XMergesRange(sri, sci, eri, eci, view));\r\n    view.each(this.xIteratorBuilder, (ri, ci) => {\r\n      this.xMergesIndex.set(ri, ci, point);\r\n    });\r\n  }\r\n\r\n  union(view) {\r\n    const { top, right, left, bottom } = view.brink();\r\n    let find = null;\r\n    // 上边扫描\r\n    top.each(this.xIteratorBuilder, (ri, ci) => {\r\n      const item = this.getFirstIncludes(ri, ci);\r\n      if (PlainUtils.isUnDef(item)) {\r\n        return true;\r\n      }\r\n      if (view.contains(item)) {\r\n        return true;\r\n      }\r\n      find = item;\r\n      return false;\r\n    });\r\n    if (find) {\r\n      return this.union(find.union(view));\r\n    }\r\n    // 右边扫描\r\n    right.each(this.xIteratorBuilder, (ri, ci) => {\r\n      const item = this.getFirstIncludes(ri, ci);\r\n      if (PlainUtils.isUnDef(item)) {\r\n        return true;\r\n      }\r\n      if (view.contains(item)) {\r\n        return true;\r\n      }\r\n      find = item;\r\n      return false;\r\n    });\r\n    if (find) {\r\n      return this.union(find.union(view));\r\n    }\r\n    // 左边扫描\r\n    left.each(this.xIteratorBuilder, (ri, ci) => {\r\n      const item = this.getFirstIncludes(ri, ci);\r\n      if (PlainUtils.isUnDef(item)) {\r\n        return true;\r\n      }\r\n      if (view.contains(item)) {\r\n        return true;\r\n      }\r\n      find = item;\r\n      return false;\r\n    });\r\n    if (find) {\r\n      return this.union(find.union(view));\r\n    }\r\n    // 底边扫描\r\n    bottom.each(this.xIteratorBuilder, (ri, ci) => {\r\n      const item = this.getFirstIncludes(ri, ci);\r\n      if (PlainUtils.isUnDef(item)) {\r\n        return true;\r\n      }\r\n      if (view.contains(item)) {\r\n        return true;\r\n      }\r\n      find = item;\r\n      return false;\r\n    });\r\n    if (find) {\r\n      return this.union(find.union(view));\r\n    }\r\n    return view;\r\n  }\r\n\r\n  delete(view) {\r\n    const point = this.xMergesIndex.get(view.sri, view.sci);\r\n    view.each(this.xIteratorBuilder, (ri, ci) => {\r\n      this.xMergesIndex.clear(ri, ci);\r\n    });\r\n    this.xMergesItems.clear(point);\r\n  }\r\n\r\n  getData() {\r\n    const data = [];\r\n    this.xMergesItems.getItems().forEach((item) => {\r\n      if (item) {\r\n        data.push(item.getView().toString());\r\n      }\r\n    });\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMerges,\r\n};\r\n","class XTableDataItem {\r\n\r\n  constructor(cell = null, mergeId = null) {\r\n    this.cell = cell;\r\n    this.mergeId = mergeId;\r\n  }\r\n\r\n  setCell(cell) {\r\n    this.cell = cell;\r\n  }\r\n\r\n  setMergeId(mergeId) {\r\n    this.mergeId = mergeId;\r\n  }\r\n\r\n  getCell() {\r\n    return this.cell;\r\n  }\r\n\r\n  getMergeId() {\r\n    return this.mergeId;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableDataItem,\r\n};\r\n","import { XTableDataItem } from './XTableDataItem';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { Cell } from './tablecell/Cell';\r\n\r\nclass XTableDataItems {\r\n\r\n  constructor(items = []) {\r\n    this.items = items;\r\n    this.canWrapAll = true;\r\n  }\r\n\r\n  wrap(line, ci) {\r\n    const ele = line[ci];\r\n    if (ele instanceof XTableDataItem) {\r\n      return ele;\r\n    }\r\n    const item = new XTableDataItem();\r\n    if (PlainUtils.isString(ele)) {\r\n      item.setCell(new Cell({ text: ele }));\r\n    } else {\r\n      item.setCell(new Cell(ele));\r\n    }\r\n    line[ci] = item;\r\n    return item;\r\n  }\r\n\r\n  wrapAll() {\r\n    const { canWrapAll } = this;\r\n    if (canWrapAll) {\r\n      const { items } = this;\r\n      this.canWrapAll = false;\r\n      for (let ri = 0, riLen = items.length; ri < riLen; ri++) {\r\n        const line = items[ri];\r\n        if (line) {\r\n          for (let ci = 0, ciLen = line.length; ci < ciLen; ci++) {\r\n            const item = line[ci];\r\n            if (item) {\r\n              this.wrap(line, ci);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  set(ri, ci, item) {\r\n    const line = this.items[ri] || [];\r\n    line[ci] = item;\r\n    this.items[ri] = line;\r\n  }\r\n\r\n  getItems() {\r\n    return this.items;\r\n  }\r\n\r\n  get(ri, ci) {\r\n    const line = this.items[ri];\r\n    return line && line[ci]\r\n      ? this.wrap(line, ci)\r\n      : undefined;\r\n  }\r\n\r\n  setOrNew(ri, ci, item) {\r\n    const line = this.items[ri];\r\n    if (line) {\r\n      line[ci] = item;\r\n    }\r\n  }\r\n\r\n  getOrNew(ri, ci) {\r\n    const find = this.get(ri, ci);\r\n    if (find) {\r\n      return find;\r\n    }\r\n    const item = new XTableDataItem();\r\n    this.set(ri, ci, item);\r\n    return item;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableDataItems,\r\n};\r\n","class Path {\r\n\r\n  constructor({\r\n    points = [],\r\n  }) {\r\n    this.points = points;\r\n  }\r\n\r\n  set({\r\n    points = [],\r\n  }) {\r\n    this.points = points;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Path,\r\n};\r\n","class Point {\r\n\r\n  constructor(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  setX(x) {\r\n    this.x = x;\r\n  }\r\n\r\n  setY(y) {\r\n    this.y = y;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Point,\r\n};\r\n","import { PlainUtils } from '../../utils/PlainUtils';\r\nimport { Rows } from './tablebase/Rows';\r\nimport { Cols } from './tablebase/Cols';\r\nimport { SCROLL_TYPE } from './tablebase/Scroll';\r\nimport { Widget } from '../../libs/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { XDraw } from '../../canvas/XDraw';\r\nimport { Line } from '../../canvas/Line';\r\nimport { Grid } from '../../canvas/Grid';\r\nimport { Crop } from '../../canvas/Crop';\r\nimport { Rect } from '../../canvas/Rect';\r\nimport { Box } from '../../canvas/Box';\r\nimport { RectRange } from './tablebase/RectRange';\r\nimport { Cells } from './tablecell/Cells';\r\nimport { Scale, ScaleAdapter } from './tablebase/Scale';\r\nimport { Code } from './tablebase/Code';\r\nimport { Text } from './tablebase/Text';\r\nimport { STYLE_BREAK_LOOP, StyleCellsHelper } from './helper/StyleCellsHelper';\r\nimport { TEXT_BREAK_LOOP, TextCellsHelper } from './helper/TextCellsHelper';\r\nimport { XTableHistoryAreaView } from './XTableHistoryAreaView';\r\nimport { OperateCellsHelper } from './helper/OperateCellsHelper';\r\nimport { BaseFont } from '../../canvas/font/BaseFont';\r\nimport { VIEW_MODE, XTableScrollView } from './XTableScrollView';\r\nimport { XFixedMeasure } from './tablebase/XFixedMeasure';\r\nimport { FixedCellIcon } from './cellicon/FixedCellIcon';\r\nimport { StaticCellIcon } from './cellicon/StaticCellIcon';\r\nimport { XLinePlainGenerator } from './xlinehandle/XLinePlainGenerator';\r\nimport { LBorderShow } from './xlinehandle/linefilters/borderdisplay/LBorderShow';\r\nimport { XLineIteratorFilter } from './xlinehandle/XLineIteratorFilter';\r\nimport { RBorderShow } from './xlinehandle/linefilters/borderdisplay/RBorderShow';\r\nimport { TBorderShow } from './xlinehandle/linefilters/borderdisplay/TBorderShow';\r\nimport { BBorderShow } from './xlinehandle/linefilters/borderdisplay/BBorderShow';\r\nimport { XMerges } from './xmerges/XMerges';\r\nimport { XTableDataItems } from './XTableDataItems';\r\nimport { Path } from '../../canvas/Path';\r\nimport { Point } from '../../canvas/Point';\r\nimport { RTCosKit, RTSinKit } from '../../canvas/RTFunction';\r\n\r\nconst RENDER_MODE = {\r\n  SCROLL: Symbol('scroll'),\r\n  RENDER: Symbol('render'),\r\n  SCALE: Symbol('scale'),\r\n};\r\n\r\n//  ============================== 表格细节元素绘制 =============================\r\n\r\nclass XTableFrozenFullRect {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  draw() {\r\n    const dx = 0;\r\n    const dy = 0;\r\n    const { table } = this;\r\n    const { draw } = table;\r\n    const { indexGrid } = table;\r\n    const { index } = table;\r\n    const indexHeight = index.getHeight();\r\n    const indexWidth = index.getWidth();\r\n    draw.save();\r\n    draw.offset(dx, dy);\r\n    // 绘制背景\r\n    draw.attr({\r\n      fillStyle: '#f4f5f8',\r\n    });\r\n    draw.fillRect(0, 0, index.getWidth(), indexHeight);\r\n    draw.offset(0, 0);\r\n    // 绘制边框\r\n    indexGrid.horizonLine(0, indexHeight, indexWidth, indexHeight);\r\n    indexGrid.verticalLine(indexWidth, dy, indexWidth, indexHeight);\r\n    draw.restore();\r\n  }\r\n\r\n  render() {\r\n    const { table } = this;\r\n    const renderMode = table.getRenderMode();\r\n    if (renderMode === RENDER_MODE.RENDER || renderMode === RENDER_MODE.SCALE) {\r\n      this.draw();\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass XTableFixedBar {\r\n\r\n  constructor(table, {\r\n    width, height, background, buttonColor,\r\n  }) {\r\n    this.table = table;\r\n    this.height = height;\r\n    this.width = width;\r\n    this.background = background;\r\n    this.buttonColor = buttonColor;\r\n  }\r\n\r\n  drawBar() {\r\n    const {\r\n      table, height, width, background,\r\n    } = this;\r\n    const {\r\n      xFixedView, draw, index, xFixedMeasure,\r\n    } = table;\r\n    if (xFixedView.hasFixedTop()) {\r\n      const rpxHeight = XDraw.srcTransformStylePx(height);\r\n      const width = table.visualWidth();\r\n      const x = index.getWidth();\r\n      const y = xFixedMeasure.getHeight() + index.getHeight() - rpxHeight / 2;\r\n      draw.attr({ fillStyle: background });\r\n      draw.fillRect(x, y, width, rpxHeight);\r\n    }\r\n    if (xFixedView.hasFixedLeft()) {\r\n      const height = table.visualHeight();\r\n      const rpxWidth = XDraw.srcTransformStylePx(width);\r\n      const x = xFixedMeasure.getWidth() + index.getWidth() - rpxWidth / 2;\r\n      const y = index.getHeight();\r\n      draw.attr({ fillStyle: background });\r\n      draw.fillRect(x, y, rpxWidth, height);\r\n    }\r\n  }\r\n\r\n  drawButton() {\r\n    const {\r\n      table, height, width, buttonColor,\r\n    } = this;\r\n    const {\r\n      xFixedView, draw, index, xFixedMeasure,\r\n    } = table;\r\n    if (xFixedView.hasFixedTop()) {\r\n      const rpxHeight = XDraw.srcTransformStylePx(height);\r\n      const width = index.getWidth();\r\n      const x = 0;\r\n      const y = xFixedMeasure.getHeight() + index.getHeight() - rpxHeight / 2;\r\n      draw.attr({ fillStyle: buttonColor });\r\n      draw.fillRect(x, y, width, rpxHeight);\r\n    }\r\n    if (xFixedView.hasFixedLeft()) {\r\n      const height = index.getHeight();\r\n      const rpxWidth = XDraw.srcTransformStylePx(width);\r\n      const x = xFixedMeasure.getWidth() + index.getWidth() - rpxWidth / 2;\r\n      const y = 0;\r\n      draw.attr({ fillStyle: buttonColor });\r\n      draw.fillRect(x, y, rpxWidth, height);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.drawBar();\r\n    this.drawButton();\r\n  }\r\n\r\n}\r\n\r\n// =============================== 表格绘制抽象类 ==============================\r\n\r\nclass XTableUI {\r\n\r\n  /**\r\n   * XTableUI\r\n   * @param table\r\n   */\r\n  constructor(table) {\r\n    this.table = table;\r\n    this.width = null;\r\n    this.height = null;\r\n    this.x = null;\r\n    this.y = null;\r\n    this.drawX = null;\r\n    this.drawY = null;\r\n    this.mapOriginX = null;\r\n    this.mapOriginY = null;\r\n    this.mapTargetX = null;\r\n    this.mapTargetY = null;\r\n    this.mapWidth = null;\r\n    this.mapHeight = null;\r\n    this.fullScrollView = null;\r\n    this.scrollView = null;\r\n    this.borderView = null;\r\n    this.borderX = null;\r\n    this.borderY = null;\r\n    this.viewMode = null;\r\n  }\r\n\r\n  /**\r\n   * 完整的滚动区域\r\n   * @returns {RectRange}\r\n   */\r\n  getFullScrollView() {\r\n    throw new TypeError('getFullScrollView child impl');\r\n  }\r\n\r\n  /**\r\n   * 滚动区域\r\n   * 网格和背景颜色的绘制区域\r\n   * @returns {RectRange}\r\n   */\r\n  getScrollView() {\r\n    throw new TypeError('getScrollView child impl');\r\n  }\r\n\r\n  /**\r\n   * 边框&网格绘制区域\r\n   * @returns {RectRange}\r\n   */\r\n  getLineView() {\r\n    if (PlainUtils.isNotUnDef(this.borderView)) {\r\n      return this.borderView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { cols, rows } = table;\r\n    const renderMode = table.getRenderMode();\r\n    const viewMode = this.getViewMode();\r\n    const scrollView = this.getScrollView();\r\n    if (viewMode === VIEW_MODE.CHANGE_ADD && renderMode === RENDER_MODE.SCROLL) {\r\n      const { scroll } = table;\r\n      switch (scroll.type) {\r\n        case SCROLL_TYPE.V_TOP: {\r\n          scrollView.eri += 1;\r\n          scrollView.h = rows.rectRangeSumHeight(scrollView);\r\n          break;\r\n        }\r\n        case SCROLL_TYPE.V_BOTTOM: {\r\n          scrollView.sri -= 1;\r\n          scrollView.h = rows.rectRangeSumHeight(scrollView);\r\n          break;\r\n        }\r\n        case SCROLL_TYPE.H_RIGHT: {\r\n          scrollView.sci -= 1;\r\n          scrollView.w = cols.rectRangeSumWidth(scrollView);\r\n          break;\r\n        }\r\n        case SCROLL_TYPE.H_LEFT: {\r\n          scrollView.eci += 1;\r\n          scrollView.w = cols.rectRangeSumWidth(scrollView);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.borderView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n  /**\r\n   * 绘制贴图的目标X坐标\r\n   */\r\n  getMapTargetX() {\r\n    if (PlainUtils.isNumber(this.mapTargetX)) {\r\n      return this.mapTargetX;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { scroll } = table;\r\n    const x = this.getX();\r\n    let mapTargetX = 0;\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.H_LEFT: {\r\n        const enterView = xTableAreaView.getEnterView();\r\n        mapTargetX = enterView.w;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.H_RIGHT: {\r\n        mapTargetX = 0;\r\n        break;\r\n      }\r\n    }\r\n    mapTargetX = x + mapTargetX;\r\n    this.mapTargetX = mapTargetX;\r\n    return mapTargetX;\r\n  }\r\n\r\n  /**\r\n   * 绘制贴图的目标X坐标\r\n   */\r\n  getMapTargetY() {\r\n    if (PlainUtils.isNumber(this.mapTargetY)) {\r\n      return this.mapTargetY;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { scroll } = table;\r\n    const y = this.getY();\r\n    let mapTargetY = 0;\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.V_TOP: {\r\n        const enterView = xTableAreaView.getEnterView();\r\n        mapTargetY = enterView.h;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.V_BOTTOM: {\r\n        mapTargetY = 0;\r\n        break;\r\n      }\r\n    }\r\n    mapTargetY = y + mapTargetY;\r\n    this.mapTargetY = mapTargetY;\r\n    return mapTargetY;\r\n  }\r\n\r\n  /**\r\n   * 绘制贴图的原始X坐标\r\n   */\r\n  getMapOriginX() {\r\n    if (PlainUtils.isNumber(this.mapOriginX)) {\r\n      return this.mapOriginX;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { scroll } = table;\r\n    const x = this.getX();\r\n    let mapOriginX = 0;\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.H_LEFT: {\r\n        mapOriginX = 0;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.H_RIGHT: {\r\n        const leaveView = xTableAreaView.getLeaveView();\r\n        mapOriginX = leaveView.w;\r\n        break;\r\n      }\r\n    }\r\n    mapOriginX = x + mapOriginX;\r\n    this.mapOriginX = mapOriginX;\r\n    return mapOriginX;\r\n  }\r\n\r\n  /**\r\n   * 绘制贴图的原始Y坐标\r\n   */\r\n  getMapOriginY() {\r\n    if (PlainUtils.isNumber(this.mapOriginY)) {\r\n      return this.mapOriginY;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { scroll } = table;\r\n    const y = this.getY();\r\n    let mapOriginY = 0;\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.V_TOP: {\r\n        mapOriginY = 0;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.V_BOTTOM: {\r\n        const leaveView = xTableAreaView.getLeaveView();\r\n        mapOriginY = leaveView.h;\r\n        break;\r\n      }\r\n    }\r\n    mapOriginY = y + mapOriginY;\r\n    this.mapOriginY = mapOriginY;\r\n    return mapOriginY;\r\n  }\r\n\r\n  /**\r\n   * 绘制边框&网格的X坐标\r\n   */\r\n  getLineX() {\r\n    if (PlainUtils.isNumber(this.borderX)) {\r\n      return this.borderX;\r\n    }\r\n    const { table } = this;\r\n    const x = this.getX();\r\n    if (table.getRenderMode() === RENDER_MODE.RENDER) {\r\n      this.borderX = x;\r\n      return x;\r\n    }\r\n    if (table.getRenderMode() === RENDER_MODE.SCALE) {\r\n      this.borderX = x;\r\n      return x;\r\n    }\r\n    if (this.getViewMode() === VIEW_MODE.BOUND_OUT) {\r\n      this.borderX = x;\r\n      return x;\r\n    }\r\n    if (this.getViewMode() === VIEW_MODE.CHANGE_NOT) {\r\n      this.borderX = x;\r\n      return x;\r\n    }\r\n    const { scroll } = table;\r\n    let borderX = 0;\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.H_RIGHT: {\r\n        const borderView = this.getLineView();\r\n        const fullScrollView = this.getFullScrollView();\r\n        borderX = fullScrollView.w - borderView.w;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.H_LEFT: {\r\n        borderX = 0;\r\n        break;\r\n      }\r\n    }\r\n    borderX = x + borderX;\r\n    this.borderX = borderX;\r\n    return borderX;\r\n  }\r\n\r\n  /**\r\n   * 绘制边框 & 网格的Y坐标\r\n   */\r\n  getLineY() {\r\n    if (PlainUtils.isNumber(this.borderY)) {\r\n      return this.borderY;\r\n    }\r\n    const { table } = this;\r\n    const y = this.getY();\r\n    if (table.getRenderMode() === RENDER_MODE.RENDER) {\r\n      this.borderY = y;\r\n      return y;\r\n    }\r\n    if (table.getRenderMode() === RENDER_MODE.SCALE) {\r\n      this.borderY = y;\r\n      return y;\r\n    }\r\n    if (this.getViewMode() === VIEW_MODE.BOUND_OUT) {\r\n      this.borderY = y;\r\n      return y;\r\n    }\r\n    if (this.getViewMode() === VIEW_MODE.CHANGE_NOT) {\r\n      this.borderY = y;\r\n      return y;\r\n    }\r\n    const { scroll } = table;\r\n    let borderY = 0;\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.V_BOTTOM: {\r\n        const borderView = this.getLineView();\r\n        const fullScrollView = this.getFullScrollView();\r\n        borderY = fullScrollView.h - borderView.h;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.V_TOP: {\r\n        borderY = 0;\r\n        break;\r\n      }\r\n    }\r\n    borderY = y + borderY;\r\n    this.borderY = borderY;\r\n    return borderY;\r\n  }\r\n\r\n  /**\r\n   * 绘制区域高度\r\n   * @returns {number}\r\n   */\r\n  getHeight() {\r\n    throw new TypeError('getHeight child impl');\r\n  }\r\n\r\n  /**\r\n   * 绘制区域宽度\r\n   * @returns {number}\r\n   */\r\n  getWidth() {\r\n    throw new TypeError('getWidth child impl');\r\n  }\r\n\r\n  /**\r\n   * 绘制内容的X坐标\r\n   */\r\n  getDrawX() {\r\n    if (PlainUtils.isNumber(this.drawX)) {\r\n      return this.drawX;\r\n    }\r\n    const { table } = this;\r\n    const x = this.getX();\r\n    if (table.getRenderMode() === RENDER_MODE.RENDER) {\r\n      this.drawX = x;\r\n      return x;\r\n    }\r\n    if (table.getRenderMode() === RENDER_MODE.SCALE) {\r\n      this.drawX = x;\r\n      return x;\r\n    }\r\n    if (this.getViewMode() === VIEW_MODE.BOUND_OUT) {\r\n      this.drawX = x;\r\n      return x;\r\n    }\r\n    if (this.getViewMode() === VIEW_MODE.CHANGE_NOT) {\r\n      this.drawX = x;\r\n      return x;\r\n    }\r\n    const { scroll } = table;\r\n    const scrollView = this.getScrollView();\r\n    const fullScrollView = this.getFullScrollView();\r\n    let drawX = 0;\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.H_RIGHT: {\r\n        drawX = fullScrollView.w - scrollView.w;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.H_LEFT: {\r\n        drawX = 0;\r\n        break;\r\n      }\r\n    }\r\n    drawX = x + drawX;\r\n    this.drawX = drawX;\r\n    return drawX;\r\n  }\r\n\r\n  /**\r\n   * 绘制内容的Y坐标\r\n   */\r\n  getDrawY() {\r\n    if (PlainUtils.isNumber(this.drawY)) {\r\n      return this.drawY;\r\n    }\r\n    const { table } = this;\r\n    const y = this.getY();\r\n    if (table.getRenderMode() === RENDER_MODE.RENDER) {\r\n      this.drawY = y;\r\n      return y;\r\n    }\r\n    if (table.getRenderMode() === RENDER_MODE.SCALE) {\r\n      this.drawY = y;\r\n      return y;\r\n    }\r\n    if (this.getViewMode() === VIEW_MODE.BOUND_OUT) {\r\n      this.drawY = y;\r\n      return y;\r\n    }\r\n    if (this.getViewMode() === VIEW_MODE.CHANGE_NOT) {\r\n      this.drawY = y;\r\n      return y;\r\n    }\r\n    const { scroll } = table;\r\n    const scrollView = this.getScrollView();\r\n    const fullScrollView = this.getFullScrollView();\r\n    let drawY = 0;\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.V_BOTTOM: {\r\n        drawY = fullScrollView.h - scrollView.h;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.V_TOP: {\r\n        drawY = 0;\r\n        break;\r\n      }\r\n    }\r\n    drawY = y + drawY;\r\n    this.drawY = drawY;\r\n    return drawY;\r\n  }\r\n\r\n  /**\r\n   * 绘制区域的X坐标\r\n   * @returns {number}\r\n   */\r\n  getX() {\r\n    throw new TypeError('getX child impl');\r\n  }\r\n\r\n  /**\r\n   * 绘制区域Y坐标\r\n   * @returns {number}\r\n   */\r\n  getY() {\r\n    throw new TypeError('getY child impl');\r\n  }\r\n\r\n  /**\r\n   * 视图模式\r\n   * @return {symbol}\r\n   */\r\n  getViewMode() {\r\n    throw new TypeError('getViewMode child impl');\r\n  }\r\n\r\n  /**\r\n   * 重置变量区\r\n   */\r\n  reset() {\r\n    this.width = null;\r\n    this.height = null;\r\n    this.x = null;\r\n    this.y = null;\r\n    this.drawX = null;\r\n    this.drawY = null;\r\n    this.mapOriginX = null;\r\n    this.mapOriginY = null;\r\n    this.mapTargetX = null;\r\n    this.mapTargetY = null;\r\n    this.mapWidth = null;\r\n    this.mapHeight = null;\r\n    this.fullScrollView = null;\r\n    this.scrollView = null;\r\n    this.borderView = null;\r\n    this.borderX = null;\r\n    this.borderY = null;\r\n    this.viewMode = null;\r\n  }\r\n\r\n  /**\r\n   * 绘制贴图的高度\r\n   * @returns {number}\r\n   */\r\n  getMapHeight() {\r\n    if (PlainUtils.isNumber(this.mapHeight)) {\r\n      return this.mapHeight;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { scroll } = table;\r\n    let mapHeight = this.getHeight();\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.V_BOTTOM: {\r\n        const leaveView = xTableAreaView.getLeaveView();\r\n        mapHeight -= leaveView.h;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.V_TOP: {\r\n        const enterView = xTableAreaView.getEnterView();\r\n        mapHeight -= enterView.h;\r\n        break;\r\n      }\r\n    }\r\n    this.mapHeight = mapHeight;\r\n    return mapHeight;\r\n  }\r\n\r\n  /**\r\n   * 绘制贴图的宽度\r\n   * @returns {number}\r\n   */\r\n  getMapWidth() {\r\n    if (PlainUtils.isNumber(this.mapWidth)) {\r\n      return this.mapWidth;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { scroll } = table;\r\n    let mapWidth = this.getWidth();\r\n    switch (scroll.type) {\r\n      case SCROLL_TYPE.H_RIGHT: {\r\n        const leaveView = xTableAreaView.getLeaveView();\r\n        mapWidth -= leaveView.w;\r\n        break;\r\n      }\r\n      case SCROLL_TYPE.H_LEFT: {\r\n        const enterView = xTableAreaView.getEnterView();\r\n        mapWidth -= enterView.w;\r\n        break;\r\n      }\r\n    }\r\n    this.mapWidth = mapWidth;\r\n    return mapWidth;\r\n  }\r\n\r\n  /**\r\n   * 清空重新绘制区域\r\n   */\r\n  drawClear() {\r\n    const { table } = this;\r\n    const {\r\n      scroll, draw, settings,\r\n    } = table;\r\n    const viewMode = this.getViewMode();\r\n    const renderMode = table.getRenderMode();\r\n    const dx = this.getDrawX();\r\n    const dy = this.getDrawY();\r\n    draw.attr({\r\n      fillStyle: settings.table.background,\r\n    });\r\n    if (renderMode === RENDER_MODE.SCROLL) {\r\n      switch (viewMode) {\r\n        case VIEW_MODE.CHANGE_NOT:\r\n        case VIEW_MODE.STATIC:\r\n        case VIEW_MODE.BOUND_OUT: {\r\n          const height = this.getHeight();\r\n          const width = this.getWidth();\r\n          draw.fillRect(dx, dy, width, height);\r\n          break;\r\n        }\r\n        case VIEW_MODE.CHANGE_ADD: {\r\n          switch (scroll.type) {\r\n            case SCROLL_TYPE.V_BOTTOM: {\r\n              const fullScrollView = this.getFullScrollView();\r\n              const scrollView = this.getScrollView();\r\n              const height = table.visualHeight() - (fullScrollView.h - scrollView.h);\r\n              const width = this.getWidth();\r\n              draw.fillRect(dx, dy, width, height);\r\n              break;\r\n            }\r\n            case SCROLL_TYPE.V_TOP: {\r\n              const scrollView = this.getScrollView();\r\n              const height = scrollView.h;\r\n              const width = this.getWidth();\r\n              draw.fillRect(dx, dy, width, height);\r\n              break;\r\n            }\r\n            case SCROLL_TYPE.H_LEFT: {\r\n              const scrollView = this.getScrollView();\r\n              const height = this.getHeight();\r\n              const width = scrollView.w;\r\n              draw.fillRect(dx, dy, width, height);\r\n              break;\r\n            }\r\n            case SCROLL_TYPE.H_RIGHT: {\r\n              const fullScrollView = this.getFullScrollView();\r\n              const scrollView = this.getScrollView();\r\n              const height = this.getHeight();\r\n              const width = table.visualWidth() - (fullScrollView.w - scrollView.w);\r\n              draw.fillRect(dx, dy, width, height);\r\n              break;\r\n            }\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    } else if (RENDER_MODE.RENDER) {\r\n      const height = this.getHeight();\r\n      const width = this.getWidth();\r\n      draw.fillRect(dx, dy, width, height);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绘制贴图\r\n   */\r\n  drawMap() {\r\n    const { table } = this;\r\n    const renderMode = table.getRenderMode();\r\n    const viewMode = this.getViewMode();\r\n    if (viewMode === VIEW_MODE.CHANGE_ADD && renderMode === RENDER_MODE.SCROLL) {\r\n      const { draw } = table;\r\n      const mapWidth = this.getMapWidth();\r\n      const mapHeight = this.getMapHeight();\r\n      const ox = this.getMapOriginX();\r\n      const oy = this.getMapOriginY();\r\n      const tx = this.getMapTargetX();\r\n      const ty = this.getMapTargetY();\r\n      draw.copyImage(ox, oy, mapWidth, mapHeight,\r\n        tx, ty, mapWidth, mapHeight);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass XTableContentUI extends XTableUI {\r\n\r\n  /**\r\n   * 加载绘制静态小图标\r\n   * @param rect\r\n   * @param ri\r\n   * @param ci\r\n   * @param view\r\n   */\r\n  drawStaticXIcon(rect, ri, ci, view) {\r\n    const { table } = this;\r\n    const { draw, staticCellIcon } = table;\r\n    const icons = staticCellIcon.getIcon(ri, ci);\r\n    if (icons) {\r\n      const x = this.getX();\r\n      const y = this.getY();\r\n      rect.x += x;\r\n      rect.y += y;\r\n      for (let i = 0; i < icons.length; i += 1) {\r\n        const icon = icons[i];\r\n        icon.loadImage({\r\n          load: () => {\r\n            if (view.equals(this.getFullScrollView())) {\r\n              icon.drawIcon({\r\n                rect,\r\n                draw,\r\n              });\r\n            }\r\n          },\r\n          sync: () => {\r\n            icon.drawIcon({\r\n              rect,\r\n              draw,\r\n            });\r\n          },\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 加载绘制固定小图标\r\n   * @param rect\r\n   * @param ri\r\n   * @param ci\r\n   * @param view\r\n   */\r\n  drawFixedXIcon(rect, ri, ci, view) {\r\n    const { table } = this;\r\n    const { draw, fixedCellIcon } = table;\r\n    const icons = fixedCellIcon.getIcon(ri, ci);\r\n    if (icons) {\r\n      const x = this.getX();\r\n      const y = this.getY();\r\n      rect.x += x;\r\n      rect.y += y;\r\n      for (let i = 0; i < icons.length; i += 1) {\r\n        const icon = icons[i];\r\n        icon.loadImage({\r\n          load: () => {\r\n            if (view.equals(this.getFullScrollView())) {\r\n              icon.drawIcon({\r\n                rect,\r\n                draw,\r\n              });\r\n            }\r\n          },\r\n          sync: () => {\r\n            icon.drawIcon({\r\n              rect,\r\n              draw,\r\n            });\r\n          },\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 加载绘制单元格小图标\r\n   * @param rect\r\n   * @param cell\r\n   * @param view\r\n   */\r\n  drawCellXIcon(rect, cell, view) {\r\n    const { table } = this;\r\n    const { icons } = cell;\r\n    const { draw } = table;\r\n    const x = this.getX();\r\n    const y = this.getY();\r\n    rect.x += x;\r\n    rect.y += y;\r\n    for (let i = 0; i < icons.length; i += 1) {\r\n      const icon = icons[i];\r\n      icon.loadImage({\r\n        load: () => {\r\n          if (view.equals(this.getFullScrollView())) {\r\n            icon.drawIcon({\r\n              rect,\r\n              draw,\r\n            });\r\n          }\r\n        },\r\n        sync: () => {\r\n          icon.drawIcon({\r\n            rect,\r\n            draw,\r\n          });\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绘制单元格图标\r\n   */\r\n  drawXIcon() {\r\n    const { table } = this;\r\n    const { styleCellsHelper } = table;\r\n    const scrollView = this.getFullScrollView();\r\n    styleCellsHelper.getCellByViewRange({\r\n      view: scrollView,\r\n      cellsINCallback: (row, col, cell, rect) => {\r\n        const staticRect = rect.clone();\r\n        const cellRect = rect.clone();\r\n        this.drawStaticXIcon(staticRect, row, col, scrollView);\r\n        this.drawCellXIcon(cellRect, cell, scrollView);\r\n      },\r\n      loopINCallback: (row, col, rect) => {\r\n        const fixedRect = rect.clone();\r\n        this.drawFixedXIcon(fixedRect, row, col, scrollView);\r\n      },\r\n      mergeCallback: (row, col, cell, rect, merge) => {\r\n        const { sri, sci } = merge;\r\n        const staticRect = rect.clone();\r\n        const cellRect = rect.clone();\r\n        this.drawStaticXIcon(staticRect, sri, sci, scrollView);\r\n        this.drawCellXIcon(cellRect, cell, scrollView);\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 绘制越界文本\r\n   */\r\n  drawBoundOutXFont() {\r\n    const scrollView = this.getScrollView();\r\n    const drawX = this.getDrawX();\r\n    const drawY = this.getDrawY();\r\n    const { table } = this;\r\n    const { draw, cols, textCellsHelper, textFont } = table;\r\n    // 左边区域\r\n    const lView = scrollView.clone();\r\n    lView.sci = 0;\r\n    lView.eci = scrollView.sci - 1;\r\n    if (lView.eci > -1) {\r\n      let max;\r\n      draw.offset(drawX, drawY);\r\n      textCellsHelper.getCellByViewRange({\r\n        reverseCols: true,\r\n        view: lView,\r\n        newCol: (col) => {\r\n          max += cols.getWidth(col);\r\n        },\r\n        newRow: () => {\r\n          max = 0;\r\n        },\r\n        cellsINCallback: (row, col, cell, rect, overflow) => {\r\n          const { text } = cell;\r\n          if (PlainUtils.isBlank(text)) {\r\n            return TEXT_BREAK_LOOP.CONTINUE;\r\n          }\r\n          const { fontAttr } = cell;\r\n          const { align, textWrap, direction } = fontAttr;\r\n          const allowTextAlign = align === BaseFont.ALIGN.left || align === BaseFont.ALIGN.center;\r\n          const allowTextWrap = textWrap === BaseFont.TEXT_WRAP.OVER_FLOW;\r\n          const allowDirection = direction === BaseFont.TEXT_DIRECTION.ANGLE;\r\n          if (allowTextAlign && (allowTextWrap || allowDirection)) {\r\n            const size = table.getCellContentBoundOutWidth(row, col);\r\n            if (size === 0 || size > max) {\r\n              const builder = textFont.getBuilder();\r\n              builder.setDraw(draw);\r\n              builder.setRect(rect);\r\n              builder.setCell(cell);\r\n              builder.setRow(row);\r\n              builder.setCol(col);\r\n              builder.setOverFlow(overflow);\r\n              const font = builder.build();\r\n              const result = font.drawingFont();\r\n              cell.setContentWidth(result.width);\r\n              cell.setLeftSdistWidth(result.leftSdist);\r\n              cell.setRightSdistWidth(result.rightSdist);\r\n            }\r\n          }\r\n          return table.hasAngleCell(row)\r\n            ? TEXT_BREAK_LOOP.CONTINUE\r\n            : TEXT_BREAK_LOOP.ROW;\r\n        },\r\n        mergeCallback: row => (table.hasAngleCell(row)\r\n          ? TEXT_BREAK_LOOP.CONTINUE\r\n          : TEXT_BREAK_LOOP.ROW),\r\n      });\r\n      draw.offset(0, 0);\r\n    }\r\n    // 右边区域\r\n    const rView = scrollView.clone();\r\n    rView.sci = scrollView.eci + 1;\r\n    rView.eci = cols.len - 1;\r\n    if (rView.sci < cols.len) {\r\n      let max;\r\n      draw.offset(drawX + scrollView.w, drawY);\r\n      textCellsHelper.getCellByViewRange({\r\n        startX: scrollView.w,\r\n        view: rView,\r\n        newCol: (col) => {\r\n          max += cols.getWidth(col);\r\n        },\r\n        newRow: () => {\r\n          max = 0;\r\n        },\r\n        cellsINCallback: (row, col, cell, rect, overflow) => {\r\n          const { text } = cell;\r\n          if (PlainUtils.isBlank(text)) {\r\n            return TEXT_BREAK_LOOP.CONTINUE;\r\n          }\r\n          const { fontAttr } = cell;\r\n          const { align, textWrap, direction } = fontAttr;\r\n          const allowTextAlign = align === BaseFont.ALIGN.right || align === BaseFont.ALIGN.center;\r\n          const allowDirection = direction === BaseFont.TEXT_DIRECTION.ANGLE;\r\n          const allowTextWrap = textWrap === BaseFont.TEXT_WRAP.OVER_FLOW;\r\n          if (allowTextAlign && (allowTextWrap || allowDirection)) {\r\n            const size = table.getCellContentBoundOutWidth(row, col);\r\n            if (size === 0 || size > max) {\r\n              const builder = textFont.getBuilder();\r\n              builder.setDraw(draw);\r\n              builder.setRect(rect);\r\n              builder.setCell(cell);\r\n              builder.setRow(row);\r\n              builder.setCol(col);\r\n              builder.setOverFlow(overflow);\r\n              const font = builder.build();\r\n              const result = font.drawingFont();\r\n              cell.setContentWidth(result.width);\r\n              cell.setLeftSdistWidth(result.leftSdist);\r\n              cell.setRightSdistWidth(result.rightSdist);\r\n            }\r\n          }\r\n          return table.hasAngleCell(row)\r\n            ? TEXT_BREAK_LOOP.CONTINUE\r\n            : TEXT_BREAK_LOOP.ROW;\r\n        },\r\n        mergeCallback: row => (table.hasAngleCell(row)\r\n          ? TEXT_BREAK_LOOP.CONTINUE\r\n          : TEXT_BREAK_LOOP.ROW),\r\n      });\r\n      draw.offset(0, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绘制越界边框\r\n   */\r\n  drawBoundOutGridBorder() {\r\n    const scrollView = this.getScrollView();\r\n    const drawX = this.getDrawX();\r\n    const drawY = this.getDrawY();\r\n    const { table } = this;\r\n    const { draw, cols, line } = table;\r\n    // 左边区域\r\n    const lView = scrollView.clone();\r\n    lView.sci = 0;\r\n    lView.eci = scrollView.sci - 1;\r\n    if (lView.eci > -1) {\r\n      const offset = cols.rectRangeSumWidth(lView);\r\n      const { alResult } = XLinePlainGenerator.run({\r\n        scrollView: lView,\r\n        foldOnOff: true,\r\n        table,\r\n        model: XLinePlainGenerator.MODEL.OUT_ANGLE_BAR_L,\r\n      });\r\n      draw.offset(drawX - offset, drawY);\r\n      alResult.tLine.forEach((item) => {\r\n        const { borderAttr, row, col } = item;\r\n        const { top } = borderAttr;\r\n        const { color, widthType, type } = top;\r\n        line.setType(type);\r\n        line.setWidthType(widthType);\r\n        line.setColor(color);\r\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'top');\r\n      });\r\n      alResult.lLine.forEach((item) => {\r\n        const { borderAttr, row, col } = item;\r\n        const { left } = borderAttr;\r\n        const { color, widthType, type } = left;\r\n        line.setType(type);\r\n        line.setWidthType(widthType);\r\n        line.setColor(color);\r\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'left');\r\n      });\r\n      alResult.rLine.forEach((item) => {\r\n        const { borderAttr, row, col } = item;\r\n        const { right } = borderAttr;\r\n        const { color, widthType, type } = right;\r\n        line.setType(type);\r\n        line.setWidthType(widthType);\r\n        line.setColor(color);\r\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'right');\r\n      });\r\n      alResult.bLine.forEach((item) => {\r\n        const { borderAttr, row, col } = item;\r\n        const { bottom } = borderAttr;\r\n        const { color, widthType, type } = bottom;\r\n        line.setType(type);\r\n        line.setWidthType(widthType);\r\n        line.setColor(color);\r\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'bottom');\r\n      });\r\n      draw.offset(0, 0);\r\n    }\r\n    // 右边区域\r\n    const rView = scrollView.clone();\r\n    rView.sci = scrollView.eci + 1;\r\n    rView.eci = cols.len - 1;\r\n    if (rView.sci < cols.len) {\r\n      const offset = scrollView.w;\r\n      const { arResult } = XLinePlainGenerator.run({\r\n        scrollView: rView,\r\n        foldOnOff: true,\r\n        table,\r\n        model: XLinePlainGenerator.MODEL.OUT_ANGLE_BAR_R,\r\n      });\r\n      draw.offset(drawX + offset, drawY);\r\n      arResult.tLine.forEach((item) => {\r\n        const { borderAttr, row, col } = item;\r\n        const { top } = borderAttr;\r\n        const { color, widthType, type } = top;\r\n        line.setType(type);\r\n        line.setWidthType(widthType);\r\n        line.setColor(color);\r\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'top');\r\n      });\r\n      arResult.lLine.forEach((item) => {\r\n        const { borderAttr, row, col } = item;\r\n        const { left } = borderAttr;\r\n        const { color, widthType, type } = left;\r\n        line.setType(type);\r\n        line.setWidthType(widthType);\r\n        line.setColor(color);\r\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'left');\r\n      });\r\n      arResult.rLine.forEach((item) => {\r\n        const { borderAttr, row, col } = item;\r\n        const { right } = borderAttr;\r\n        const { color, widthType, type } = right;\r\n        line.setType(type);\r\n        line.setWidthType(widthType);\r\n        line.setColor(color);\r\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'right');\r\n      });\r\n      arResult.bLine.forEach((item) => {\r\n        const { borderAttr, row, col } = item;\r\n        const { bottom } = borderAttr;\r\n        const { color, widthType, type } = bottom;\r\n        line.setType(type);\r\n        line.setWidthType(widthType);\r\n        line.setColor(color);\r\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'bottom');\r\n      });\r\n      draw.offset(0, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绘制越界背景\r\n   */\r\n  drawBoundOutBackground() {\r\n    const scrollView = this.getScrollView();\r\n    const drawX = this.getDrawX();\r\n    const drawY = this.getDrawY();\r\n    const { table } = this;\r\n    const { draw, cols, styleCellsHelper } = table;\r\n    // 左边区域\r\n    const lView = scrollView.clone();\r\n    lView.sci = 0;\r\n    lView.eci = scrollView.sci - 1;\r\n    if (lView.eci > -1) {\r\n      let max = 0;\r\n      draw.offset(drawX, drawY);\r\n      styleCellsHelper.getCellByViewRange({\r\n        reverseCols: true,\r\n        view: lView,\r\n        newCol: (col) => {\r\n          max += cols.getWidth(col);\r\n        },\r\n        newRow: () => {\r\n          max = 0;\r\n        },\r\n        cellsINCallback: (row, col, cell, rect) => {\r\n          if (table.hasAngleCell(row)) {\r\n            if (table.isAngleBarCell(row, col)) {\r\n              const size = table.getCellStyleBoundOutWidth(row, col);\r\n              const { fontAttr } = cell;\r\n              const { angle } = fontAttr;\r\n              if (size > max && angle > 0) {\r\n                const { background } = cell;\r\n                const box = new Box({\r\n                  draw, background,\r\n                });\r\n                const offset = table.getSdistWidth(row, col);\r\n                const { x, y, width, height } = rect;\r\n                const tl = new Point(x + offset, y);\r\n                const tr = new Point(x + width + offset, y);\r\n                const br = new Point(x + width, y + height);\r\n                const bl = new Point(x, y + height);\r\n                const path = new Path({\r\n                  points: [tl, tr, br, bl],\r\n                });\r\n                box.setPath({ path });\r\n                box.render();\r\n              }\r\n            }\r\n            return STYLE_BREAK_LOOP.CONTINUE;\r\n          }\r\n          return STYLE_BREAK_LOOP.ROW;\r\n        },\r\n        mergeCallback: row => (table.hasAngleCell(row)\r\n          ? STYLE_BREAK_LOOP.CONTINUE\r\n          : STYLE_BREAK_LOOP.ROW),\r\n      });\r\n      draw.offset(0, 0);\r\n    }\r\n    // 右边区域\r\n    const rView = scrollView.clone();\r\n    rView.sci = scrollView.eci + 1;\r\n    rView.eci = cols.len - 1;\r\n    if (rView.sci < cols.len) {\r\n      let max = 0;\r\n      draw.offset(drawX + scrollView.w, drawY);\r\n      styleCellsHelper.getCellByViewRange({\r\n        view: rView,\r\n        newCol: (col) => {\r\n          max += cols.getWidth(col);\r\n        },\r\n        newRow: () => {\r\n          max = 0;\r\n        },\r\n        cellsINCallback: (row, col, cell, rect) => {\r\n          if (table.hasAngleCell(row)) {\r\n            if (table.isAngleBarCell(row, col)) {\r\n              const size = table.getCellStyleBoundOutWidth(row, col);\r\n              const { fontAttr } = cell;\r\n              const { angle } = fontAttr;\r\n              if (size > max && angle < 0) {\r\n                const { background } = cell;\r\n                const box = new Box({\r\n                  draw, background,\r\n                });\r\n                const offset = -table.getSdistWidth(row, col);\r\n                const { x, y, width, height } = rect;\r\n                const tl = new Point(x + offset, y);\r\n                const tr = new Point(x + width + offset, y);\r\n                const br = new Point(x + width, y + height);\r\n                const bl = new Point(x, y + height);\r\n                const path = new Path({\r\n                  points: [tl, tr, br, bl],\r\n                });\r\n                box.setPath({ path });\r\n                box.render();\r\n              }\r\n            }\r\n            return STYLE_BREAK_LOOP.CONTINUE;\r\n          }\r\n          return STYLE_BREAK_LOOP.ROW;\r\n        },\r\n        mergeCallback: row => (table.hasAngleCell(row)\r\n          ? STYLE_BREAK_LOOP.CONTINUE\r\n          : STYLE_BREAK_LOOP.ROW),\r\n      });\r\n      draw.offset(0, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绘制单元格文本\r\n   */\r\n  drawXFont() {\r\n    const scrollView = this.getScrollView();\r\n    const drawX = this.getDrawX();\r\n    const drawY = this.getDrawY();\r\n    const { table } = this;\r\n    const {\r\n      draw, textCellsHelper, textFont,\r\n    } = table;\r\n    draw.offset(drawX, drawY);\r\n    textCellsHelper.getCellByViewRange({\r\n      view: scrollView,\r\n      cellsINCallback: (row, col, cell, rect, overflow) => {\r\n        const builder = textFont.getBuilder();\r\n        builder.setDraw(draw);\r\n        builder.setCell(cell);\r\n        builder.setRect(rect);\r\n        builder.setRow(row);\r\n        builder.setCol(col);\r\n        builder.setOverFlow(overflow);\r\n        const font = builder.build();\r\n        const result = font.drawingFont();\r\n        cell.setContentWidth(result.width);\r\n        cell.setLeftSdistWidth(result.leftSdist);\r\n        cell.setRightSdistWidth(result.rightSdist);\r\n      },\r\n      mergeCallback: (row, col, cell, rect) => {\r\n        const builder = textFont.getBuilder();\r\n        builder.setDraw(draw);\r\n        builder.setRect(rect);\r\n        builder.setCell(cell);\r\n        builder.setRow(row);\r\n        builder.setCol(col);\r\n        builder.setOverFlow(rect);\r\n        const font = builder.build();\r\n        const result = font.drawingFont();\r\n        cell.setContentWidth(result.width);\r\n        cell.setLeftSdistWidth(result.leftSdist);\r\n        cell.setRightSdistWidth(result.rightSdist);\r\n      },\r\n    });\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n  /**\r\n   * 绘制边框\r\n   */\r\n  drawGridBorder() {\r\n    const borderView = this.getLineView();\r\n    const borderX = this.getLineX();\r\n    const borderY = this.getLineY();\r\n    const { table } = this;\r\n    const { settings, draw, grid, line, optimizeEnable } = table;\r\n    draw.offset(borderX, borderY);\r\n    const { gResult, bResult, aResult } = XLinePlainGenerator.run({\r\n      scrollView: borderView,\r\n      foldOnOff: true,\r\n      optimize: optimizeEnable,\r\n      table,\r\n      model: settings.table.showGrid\r\n        ? XLinePlainGenerator.MODEL.ALL\r\n        : XLinePlainGenerator.MODEL.BORDER,\r\n    });\r\n    // 网格\r\n    if (gResult) {\r\n      gResult.bLine.forEach((item) => {\r\n        grid.horizonLine(item.sx, item.sy, item.ex, item.ey);\r\n      });\r\n      gResult.rLine.forEach((item) => {\r\n        grid.verticalLine(item.sx, item.sy, item.ex, item.ey);\r\n      });\r\n    }\r\n    // 边框\r\n    bResult.tLine.forEach((item) => {\r\n      const { borderAttr, row, col } = item;\r\n      const { top } = borderAttr;\r\n      const { color, widthType, type } = top;\r\n      line.setType(type);\r\n      line.setWidthType(widthType);\r\n      line.setColor(color);\r\n      line.horizonLine(item.sx, item.sy, item.ex, item.ey, row, col, 'top');\r\n    });\r\n    bResult.lLine.forEach((item) => {\r\n      const { borderAttr, row, col } = item;\r\n      const { left } = borderAttr;\r\n      const { color, widthType, type } = left;\r\n      line.setType(type);\r\n      line.setWidthType(widthType);\r\n      line.setColor(color);\r\n      line.verticalLine(item.sx, item.sy, item.ex, item.ey, row, col, 'left');\r\n    });\r\n    bResult.rLine.forEach((item) => {\r\n      const { borderAttr, row, col } = item;\r\n      const { right } = borderAttr;\r\n      const { color, widthType, type } = right;\r\n      line.setType(type);\r\n      line.setWidthType(widthType);\r\n      line.setColor(color);\r\n      line.verticalLine(item.sx, item.sy, item.ex, item.ey, row, col, 'right');\r\n    });\r\n    bResult.bLine.forEach((item) => {\r\n      const { borderAttr, row, col } = item;\r\n      const { bottom } = borderAttr;\r\n      const { color, widthType, type } = bottom;\r\n      line.setType(type);\r\n      line.setWidthType(widthType);\r\n      line.setColor(color);\r\n      line.horizonLine(item.sx, item.sy, item.ex, item.ey, row, col, 'bottom');\r\n    });\r\n    // 旋转\r\n    aResult.tLine.forEach((item) => {\r\n      const { borderAttr, row, col } = item;\r\n      const { top } = borderAttr;\r\n      const { color, widthType, type } = top;\r\n      line.setType(type);\r\n      line.setWidthType(widthType);\r\n      line.setColor(color);\r\n      line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'top');\r\n    });\r\n    aResult.lLine.forEach((item) => {\r\n      const { borderAttr, row, col } = item;\r\n      const { left } = borderAttr;\r\n      const { color, widthType, type } = left;\r\n      line.setType(type);\r\n      line.setWidthType(widthType);\r\n      line.setColor(color);\r\n      line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'left');\r\n    });\r\n    aResult.rLine.forEach((item) => {\r\n      const { borderAttr, row, col } = item;\r\n      const { right } = borderAttr;\r\n      const { color, widthType, type } = right;\r\n      line.setType(type);\r\n      line.setWidthType(widthType);\r\n      line.setColor(color);\r\n      line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'right');\r\n    });\r\n    aResult.bLine.forEach((item) => {\r\n      const { borderAttr, row, col } = item;\r\n      const { bottom } = borderAttr;\r\n      const { color, widthType, type } = bottom;\r\n      line.setType(type);\r\n      line.setWidthType(widthType);\r\n      line.setColor(color);\r\n      line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'bottom');\r\n    });\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n  /**\r\n   * 绘制背景\r\n   */\r\n  drawBackground() {\r\n    const scrollView = this.getScrollView();\r\n    const { table } = this;\r\n    const drawX = this.getDrawX();\r\n    const drawY = this.getDrawY();\r\n    const {\r\n      draw, styleCellsHelper,\r\n    } = table;\r\n    draw.offset(drawX, drawY);\r\n    styleCellsHelper.getCellByViewRange({\r\n      view: scrollView,\r\n      cellsINCallback: (row, col, cell, rect) => {\r\n        if (table.hasAngleCell(row)) {\r\n          if (table.isAngleBarCell(row, col)) {\r\n            return;\r\n          }\r\n        }\r\n        const { background } = cell;\r\n        const box = new Box({\r\n          draw, background, rect,\r\n        });\r\n        box.render();\r\n      },\r\n      mergeCallback: (row, col, cell, rect) => {\r\n        const { background } = cell;\r\n        const box = new Box({\r\n          draw, rect, background,\r\n        });\r\n        box.render();\r\n      },\r\n    });\r\n    styleCellsHelper.getCellByViewRange({\r\n      view: scrollView,\r\n      cellsINCallback: (row, col, cell, rect) => {\r\n        if (table.hasAngleCell(row)) {\r\n          if (table.isAngleBarCell(row, col)) {\r\n            const { background } = cell;\r\n            const box = new Box({\r\n              draw, background,\r\n            });\r\n            const { fontAttr } = cell;\r\n            const { angle } = fontAttr;\r\n            const offset = angle > 0\r\n              ? table.getSdistWidth(row, col)\r\n              : -table.getSdistWidth(row, col);\r\n            const { x, y, width, height } = rect;\r\n            const tl = new Point(x + offset, y);\r\n            const tr = new Point(x + width + offset, y);\r\n            const br = new Point(x + width, y + height);\r\n            const bl = new Point(x, y + height);\r\n            const path = new Path({\r\n              points: [tl, tr, br, bl],\r\n            });\r\n            box.setPath({ path });\r\n            box.render();\r\n          }\r\n        }\r\n      },\r\n    });\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n  /**\r\n   * 渲染界面\r\n   */\r\n  render() {\r\n    const { table } = this;\r\n    const renderMode = table.getRenderMode();\r\n    const viewMode = this.getViewMode();\r\n    if (viewMode === VIEW_MODE.STATIC && renderMode === RENDER_MODE.SCROLL) {\r\n      return;\r\n    }\r\n    // 渲染贴图\r\n    this.drawMap();\r\n    // 清空画布\r\n    this.drawClear();\r\n    // 裁剪界面\r\n    const scrollView = this.getScrollView();\r\n    const x = this.getDrawX();\r\n    const y = this.getDrawY();\r\n    const width = scrollView.w;\r\n    const height = scrollView.h;\r\n    const { draw } = table;\r\n    const crop = new Crop({\r\n      rect: new Rect({\r\n        x,\r\n        y,\r\n        width,\r\n        height,\r\n      }),\r\n      draw,\r\n    });\r\n    crop.open();\r\n    // 绘制背景\r\n    this.drawBackground();\r\n    this.drawBoundOutBackground();\r\n    // 绘制文字\r\n    this.drawXFont();\r\n    this.drawBoundOutXFont();\r\n    // 绘制边框\r\n    this.drawGridBorder();\r\n    this.drawBoundOutGridBorder();\r\n    // 绘制小图标\r\n    this.drawXIcon();\r\n    crop.close();\r\n  }\r\n\r\n}\r\n\r\nclass XTableIndexUI extends XTableUI {\r\n\r\n  /**\r\n   * 绘制网格\r\n   */\r\n  drawGridBorder() {\r\n    throw new TypeError('drawGrid child impl');\r\n  }\r\n\r\n  /**\r\n   * 绘制背景颜色\r\n   */\r\n  drawColor() {\r\n    throw new TypeError('drawColor child impl');\r\n  }\r\n\r\n  /**\r\n   * 绘制文字\r\n   */\r\n  drawFont() {\r\n    throw new TypeError('drawFont child impl');\r\n  }\r\n\r\n  /**\r\n   * 渲染界面\r\n   */\r\n  render() {\r\n    const { table } = this;\r\n    const renderMode = table.getRenderMode();\r\n    const viewMode = this.getViewMode();\r\n    if (viewMode === VIEW_MODE.STATIC && renderMode === RENDER_MODE.SCROLL) {\r\n      return;\r\n    }\r\n    this.drawMap();\r\n    this.drawClear();\r\n    this.drawColor();\r\n    this.drawFont();\r\n    this.drawGridBorder();\r\n  }\r\n\r\n}\r\n\r\nclass XTableLeftIndexUI extends XTableIndexUI {\r\n\r\n  /**\r\n   * 绘制网格\r\n   */\r\n  drawGridBorder() {\r\n    const borderView = this.getLineView();\r\n    const borderX = this.getLineX();\r\n    const borderY = this.getLineY();\r\n    const { table } = this;\r\n    const { draw, indexGrid } = table;\r\n    const { iResult } = XLinePlainGenerator.run({\r\n      scrollView: borderView,\r\n      foldOnOff: false,\r\n      model: XLinePlainGenerator.MODEL.INDEX,\r\n      table,\r\n      getWidth: () => table.index.getWidth(),\r\n    });\r\n    draw.offset(borderX, borderY);\r\n    iResult.bLine.forEach((item) => {\r\n      indexGrid.horizonLine(item.sx, item.sy, item.ex, item.ey);\r\n    });\r\n    iResult.rLine.forEach((item) => {\r\n      indexGrid.verticalLine(item.sx, item.sy, item.ex, item.ey);\r\n    });\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n  /**\r\n   * 绘制背景\r\n   */\r\n  drawColor() {\r\n    const dx = this.getDrawX();\r\n    const dy = this.getDrawY();\r\n    const scrollView = this.getScrollView();\r\n    const height = scrollView.h;\r\n    const width = this.getWidth();\r\n    const { table } = this;\r\n    const {\r\n      draw, index,\r\n    } = table;\r\n    draw.offset(dx, dy);\r\n    draw.attr({\r\n      fillStyle: index.getBackground(),\r\n    });\r\n    draw.fillRect(0, 0, width, height);\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n  /**\r\n   *  绘制文字\r\n   */\r\n  drawFont() {\r\n    const dx = this.getDrawX();\r\n    const dy = this.getDrawY();\r\n    const scrollView = this.getScrollView();\r\n    const width = this.getWidth();\r\n    const { table } = this;\r\n    const {\r\n      draw, rows, index,\r\n    } = table;\r\n    const { sri, eri } = scrollView;\r\n    draw.offset(dx, dy);\r\n    draw.attr({\r\n      textAlign: 'center',\r\n      textBaseline: 'middle',\r\n      font: `${index.getSize()}px Arial`,\r\n      fillStyle: index.getColor(),\r\n    });\r\n    rows.eachHeight(sri, eri, (i, ch, y) => {\r\n      draw.fillText(i + 1, width / 2, y + (ch / 2));\r\n    });\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n}\r\n\r\nclass XTableTopIndexUI extends XTableIndexUI {\r\n\r\n  /**\r\n   * 绘制网格\r\n   */\r\n  drawGridBorder() {\r\n    const borderView = this.getLineView();\r\n    const borderX = this.getLineX();\r\n    const borderY = this.getLineY();\r\n    const { table } = this;\r\n    const { draw, indexGrid } = table;\r\n    const { iResult } = XLinePlainGenerator.run({\r\n      scrollView: borderView,\r\n      foldOnOff: false,\r\n      model: XLinePlainGenerator.MODEL.INDEX,\r\n      table,\r\n      getHeight: () => table.index.getHeight(),\r\n    });\r\n    draw.offset(borderX, borderY);\r\n    iResult.bLine.forEach((item) => {\r\n      indexGrid.horizonLine(item.sx, item.sy, item.ex, item.ey);\r\n    });\r\n    iResult.rLine.forEach((item) => {\r\n      indexGrid.verticalLine(item.sx, item.sy, item.ex, item.ey);\r\n    });\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n  /**\r\n   * 绘制背景\r\n   */\r\n  drawColor() {\r\n    const { table } = this;\r\n    const {\r\n      draw, index,\r\n    } = table;\r\n    const scrollView = this.getScrollView();\r\n    const dx = this.getDrawX();\r\n    const dy = this.getDrawY();\r\n    const height = this.getHeight();\r\n    const width = scrollView.w;\r\n    draw.offset(dx, dy);\r\n    draw.attr({\r\n      fillStyle: index.getBackground(),\r\n    });\r\n    draw.fillRect(0, 0, width, height);\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n  /**\r\n   *  绘制文字\r\n   */\r\n  drawFont() {\r\n    const dx = this.getDrawX();\r\n    const dy = this.getDrawY();\r\n    const scrollView = this.getScrollView();\r\n    const height = this.getHeight();\r\n    const { table } = this;\r\n    const {\r\n      draw, cols, index,\r\n    } = table;\r\n    const { sci, eci } = scrollView;\r\n    draw.offset(dx, dy);\r\n    draw.attr({\r\n      textAlign: 'center',\r\n      textBaseline: 'middle',\r\n      font: `${index.getSize()}px Arial`,\r\n      fillStyle: index.getColor(),\r\n    });\r\n    cols.eachWidth(sci, eci, (i, cw, x) => {\r\n      draw.fillText(PlainUtils.stringAt(i), x + (cw / 2), height / 2);\r\n    });\r\n    draw.offset(0, 0);\r\n  }\r\n\r\n}\r\n\r\n// ============================ 表格冻结区域内容绘制 =============================\r\n\r\nclass XTableFrozenLeftIndex extends XTableLeftIndexUI {\r\n\r\n  getWidth() {\r\n    if (PlainUtils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const width = index.getWidth();\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (PlainUtils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { xFixedMeasure } = table;\r\n    const height = xFixedMeasure.getHeight();\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (PlainUtils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const x = 0;\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (PlainUtils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const y = index.getHeight();\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const {\r\n      rows, cols, xFixedView,\r\n    } = table;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const view = new RectRange(fixedView.sri, 0, fixedView.eri, 0);\r\n    view.w = cols.rectRangeSumWidth(view);\r\n    view.h = rows.rectRangeSumHeight(view);\r\n    this.scrollView = view;\r\n    return view.clone();\r\n  }\r\n\r\n  getFullScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\r\n      return this.fullScrollView.clone();\r\n    }\r\n    const fullScrollView = this.getScrollView();\r\n    this.fullScrollView = fullScrollView;\r\n    return fullScrollView.clone();\r\n  }\r\n\r\n  getViewMode() {\r\n    this.viewMode = VIEW_MODE.STATIC;\r\n    return VIEW_MODE.STATIC;\r\n  }\r\n\r\n  render() {\r\n    const { table } = this;\r\n    const renderMode = table.getRenderMode();\r\n    if (renderMode === RENDER_MODE.RENDER || renderMode === RENDER_MODE.SCALE) {\r\n      super.render();\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass XTableFrozenContent extends XTableContentUI {\r\n\r\n  getWidth() {\r\n    if (PlainUtils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { xFixedMeasure } = table;\r\n    const width = xFixedMeasure.getWidth();\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (PlainUtils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { xFixedMeasure } = table;\r\n    const height = xFixedMeasure.getHeight();\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (PlainUtils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const x = index.getWidth();\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (PlainUtils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const y = index.getHeight();\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const {\r\n      rows, cols, xFixedView,\r\n    } = table;\r\n    const view = xFixedView.getFixedView();\r\n    view.w = cols.rectRangeSumWidth(view);\r\n    view.h = rows.rectRangeSumHeight(view);\r\n    this.scrollView = view;\r\n    return view.clone();\r\n  }\r\n\r\n  getFullScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\r\n      return this.fullScrollView.clone();\r\n    }\r\n    const fullScrollView = this.getScrollView();\r\n    this.fullScrollView = fullScrollView;\r\n    return fullScrollView.clone();\r\n  }\r\n\r\n  getViewMode() {\r\n    this.viewMode = VIEW_MODE.STATIC;\r\n    return VIEW_MODE.STATIC;\r\n  }\r\n\r\n  render() {\r\n    const { table } = this;\r\n    const renderMode = table.getRenderMode();\r\n    if (renderMode === RENDER_MODE.RENDER || renderMode === RENDER_MODE.SCALE) {\r\n      super.render();\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass XTableFrozenTopIndex extends XTableTopIndexUI {\r\n\r\n  getWidth() {\r\n    if (PlainUtils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { xFixedMeasure } = table;\r\n    const width = xFixedMeasure.getWidth();\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (PlainUtils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const height = index.getHeight();\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (PlainUtils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const x = index.getWidth();\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (PlainUtils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const y = 0;\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const {\r\n      rows, cols, xFixedView,\r\n    } = table;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const view = new RectRange(0, fixedView.sci, 0, fixedView.eci);\r\n    view.w = cols.rectRangeSumWidth(view);\r\n    view.h = rows.rectRangeSumHeight(view);\r\n    this.scrollView = view;\r\n    return view.clone();\r\n  }\r\n\r\n  getFullScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\r\n      return this.fullScrollView.clone();\r\n    }\r\n    const fullScrollView = this.getScrollView();\r\n    this.fullScrollView = fullScrollView;\r\n    return fullScrollView.clone();\r\n  }\r\n\r\n  getViewMode() {\r\n    this.viewMode = VIEW_MODE.STATIC;\r\n    return VIEW_MODE.STATIC;\r\n  }\r\n\r\n  render() {\r\n    const { table } = this;\r\n    const renderMode = table.getRenderMode();\r\n    if (renderMode === RENDER_MODE.RENDER || renderMode === RENDER_MODE.SCALE) {\r\n      super.render();\r\n    }\r\n  }\r\n\r\n}\r\n\r\n// ============================ 表格动态区域内容绘制 =============================\r\n\r\nclass XTableLeftIndex extends XTableLeftIndexUI {\r\n\r\n  getWidth() {\r\n    if (PlainUtils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const width = index.getWidth();\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (PlainUtils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { xTop } = table;\r\n    const { index } = table;\r\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (PlainUtils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const x = 0;\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (PlainUtils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const { table } = this;\r\n    const { xTop } = table;\r\n    const { index } = table;\r\n    const y = index.getHeight() + xTop.getHeight();\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { index } = table;\r\n    const renderMode = table.getRenderMode();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    const enterView = xTableAreaView.getScrollEnterView();\r\n    const view = PlainUtils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL\r\n      ? enterView\r\n      : scrollView;\r\n    view.sci = 0;\r\n    view.eci = 0;\r\n    view.w = index.getWidth();\r\n    this.scrollView = view;\r\n    return view.clone();\r\n  }\r\n\r\n  getFullScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\r\n      return this.fullScrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const { xTableAreaView } = table;\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    scrollView.sci = 0;\r\n    scrollView.eci = 0;\r\n    scrollView.w = index.getWidth();\r\n    this.fullScrollView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n  getViewMode() {\r\n    if (PlainUtils.isNotUnDef(this.viewMode)) {\r\n      return this.viewMode;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { cols } = table;\r\n    const lastScrollView = xTableAreaView.getLastScrollView();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    if (PlainUtils.isNotUnDef(lastScrollView)) {\r\n      lastScrollView.sci = 0;\r\n      lastScrollView.eci = 0;\r\n      lastScrollView.w = cols.sectionSumWidth(lastScrollView.sci, lastScrollView.eci);\r\n    }\r\n    scrollView.sci = 0;\r\n    scrollView.eci = 0;\r\n    scrollView.w = cols.sectionSumWidth(scrollView.sci, scrollView.eci);\r\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\r\n    this.viewMode = viewMode;\r\n    return viewMode;\r\n  }\r\n\r\n}\r\n\r\nclass XTableLeft extends XTableContentUI {\r\n\r\n  getWidth() {\r\n    if (PlainUtils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { xFixedMeasure } = table;\r\n    const width = xFixedMeasure.getWidth();\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (PlainUtils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { xTop } = table;\r\n    const { index } = table;\r\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (PlainUtils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const x = index.getWidth();\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (PlainUtils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const { table } = this;\r\n    const { xTop } = table;\r\n    const { index } = table;\r\n    const y = index.getHeight() + xTop.getHeight();\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { xFixedView } = table;\r\n    const { cols } = table;\r\n    const { xTableAreaView } = table;\r\n    const renderMode = table.getRenderMode();\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    const enterView = xTableAreaView.getScrollEnterView();\r\n    const view = PlainUtils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL\r\n      ? enterView\r\n      : scrollView;\r\n    view.sci = fixedView.sci;\r\n    view.eci = fixedView.eci;\r\n    view.w = cols.sectionSumWidth(view.sci, view.eci);\r\n    this.scrollView = view;\r\n    return view.clone();\r\n  }\r\n\r\n  getFullScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\r\n      return this.fullScrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { xFixedView } = table;\r\n    const { cols } = table;\r\n    const { xTableAreaView } = table;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    scrollView.sci = fixedView.sci;\r\n    scrollView.eci = fixedView.eci;\r\n    scrollView.w = cols.sectionSumWidth(scrollView.sci, scrollView.eci);\r\n    this.fullScrollView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n  getViewMode() {\r\n    if (PlainUtils.isNotUnDef(this.viewMode)) {\r\n      return this.viewMode;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { cols } = table;\r\n    const { xFixedView } = table;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const lastScrollView = xTableAreaView.getLastScrollView();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    if (PlainUtils.isNotUnDef(lastScrollView)) {\r\n      lastScrollView.sci = fixedView.sci;\r\n      lastScrollView.eci = fixedView.eci;\r\n      lastScrollView.w = cols.sectionSumWidth(lastScrollView.sci, lastScrollView.eci);\r\n    }\r\n    scrollView.sci = fixedView.sci;\r\n    scrollView.eci = fixedView.eci;\r\n    scrollView.w = cols.sectionSumWidth(scrollView.sci, scrollView.eci);\r\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\r\n    this.viewMode = viewMode;\r\n    return viewMode;\r\n  }\r\n\r\n}\r\n\r\nclass XTableTopIndex extends XTableTopIndexUI {\r\n\r\n  getWidth() {\r\n    if (PlainUtils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { xLeft } = table;\r\n    const { index } = table;\r\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (PlainUtils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const height = index.getHeight();\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (PlainUtils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const { table } = this;\r\n    const { xLeft } = table;\r\n    const { index } = table;\r\n    const x = index.getWidth() + xLeft.getWidth();\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (PlainUtils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const y = 0;\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const { xTableAreaView } = table;\r\n    const renderMode = table.getRenderMode();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    const enterView = xTableAreaView.getScrollEnterView();\r\n    const view = PlainUtils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL\r\n      ? enterView\r\n      : scrollView;\r\n    view.sri = 0;\r\n    view.eri = 0;\r\n    view.h = index.getHeight();\r\n    this.scrollView = view;\r\n    return view.clone();\r\n  }\r\n\r\n  getFullScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\r\n      return this.fullScrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const { xTableAreaView } = table;\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    scrollView.sri = 0;\r\n    scrollView.eri = 0;\r\n    scrollView.h = index.getHeight();\r\n    this.fullScrollView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n  getViewMode() {\r\n    if (PlainUtils.isNotUnDef(this.viewMode)) {\r\n      return this.viewMode;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { rows } = table;\r\n    const lastScrollView = xTableAreaView.getLastScrollView();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    if (PlainUtils.isNotUnDef(lastScrollView)) {\r\n      lastScrollView.sri = 0;\r\n      lastScrollView.eri = 0;\r\n      lastScrollView.h = rows.sectionSumHeight(lastScrollView.sri, lastScrollView.eri);\r\n    }\r\n    scrollView.sri = 0;\r\n    scrollView.eri = 0;\r\n    scrollView.h = rows.sectionSumHeight(scrollView.sri, scrollView.eri);\r\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\r\n    this.viewMode = viewMode;\r\n    return viewMode;\r\n  }\r\n\r\n}\r\n\r\nclass XTableTop extends XTableContentUI {\r\n\r\n  getWidth() {\r\n    if (PlainUtils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { xLeft } = table;\r\n    const { index } = table;\r\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (PlainUtils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { xFixedMeasure } = table;\r\n    const height = xFixedMeasure.getHeight();\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (PlainUtils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const { table } = this;\r\n    const { xLeft } = table;\r\n    const { index } = table;\r\n    const x = index.getWidth() + xLeft.getWidth();\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (PlainUtils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const y = index.getHeight();\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { xFixedView } = table;\r\n    const { rows } = table;\r\n    const { xTableAreaView } = table;\r\n    const renderMode = table.getRenderMode();\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    const enterView = xTableAreaView.getScrollEnterView();\r\n    const view = PlainUtils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL\r\n      ? enterView\r\n      : scrollView;\r\n    view.sri = fixedView.sri;\r\n    view.eri = fixedView.eri;\r\n    view.h = rows.sectionSumHeight(view.sri, view.eri);\r\n    this.scrollView = view;\r\n    return view.clone();\r\n  }\r\n\r\n  getFullScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\r\n      return this.fullScrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { xFixedView } = table;\r\n    const { rows } = table;\r\n    const { xTableAreaView } = table;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    scrollView.sri = fixedView.sri;\r\n    scrollView.eri = fixedView.eri;\r\n    scrollView.h = rows.sectionSumHeight(scrollView.sri, scrollView.eri);\r\n    this.fullScrollView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n  getViewMode() {\r\n    if (PlainUtils.isNotUnDef(this.viewMode)) {\r\n      return this.viewMode;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { rows } = table;\r\n    const { xFixedView } = table;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const lastScrollView = xTableAreaView.getLastScrollView();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    if (PlainUtils.isNotUnDef(lastScrollView)) {\r\n      lastScrollView.sri = fixedView.sri;\r\n      lastScrollView.eri = fixedView.eri;\r\n      lastScrollView.h = rows.sectionSumHeight(lastScrollView.sci, lastScrollView.eci);\r\n    }\r\n    scrollView.sri = fixedView.sri;\r\n    scrollView.eri = fixedView.eri;\r\n    scrollView.h = rows.sectionSumHeight(scrollView.sci, scrollView.eci);\r\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\r\n    this.viewMode = viewMode;\r\n    return viewMode;\r\n  }\r\n\r\n}\r\n\r\nclass XTableContent extends XTableContentUI {\r\n\r\n  getWidth() {\r\n    if (PlainUtils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const { xLeft } = table;\r\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (PlainUtils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { xTop } = table;\r\n    const { index } = table;\r\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (PlainUtils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const { table } = this;\r\n    const { xLeft } = table;\r\n    const { index } = table;\r\n    const x = index.getWidth() + xLeft.getWidth();\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (PlainUtils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const { table } = this;\r\n    const { xTop } = table;\r\n    const { index } = table;\r\n    const y = index.getHeight() + xTop.getHeight();\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const renderMode = table.getRenderMode();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    const enterView = xTableAreaView.getScrollEnterView();\r\n    const view = PlainUtils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL\r\n      ? enterView\r\n      : scrollView;\r\n    this.scrollView = view;\r\n    return view.clone();\r\n  }\r\n\r\n  getFullScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\r\n      return this.fullScrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    this.fullScrollView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n  getViewMode() {\r\n    if (PlainUtils.isNotUnDef(this.viewMode)) {\r\n      return this.viewMode;\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const lastScrollView = xTableAreaView.getLastScrollView();\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\r\n    this.viewMode = viewMode;\r\n    return viewMode;\r\n  }\r\n\r\n}\r\n\r\n// =============================== XTableStyle ==============================\r\n\r\nclass XTableStyle extends Widget {\r\n\r\n  /**\r\n   * xTableScrollView\r\n   * @param xTableScrollView\r\n   * @param settings\r\n   * @param xFixedView\r\n   * @param xIteratorBuilder\r\n   * @param scroll\r\n   */\r\n  constructor({\r\n    xTableScrollView,\r\n    settings,\r\n    xFixedView,\r\n    xIteratorBuilder,\r\n    scroll,\r\n  }) {\r\n    super(`${cssPrefix}-table-canvas`, 'canvas');\r\n    // 表格设置\r\n    this.settings = settings;\r\n    // 冻结的视图\r\n    this.xFixedView = xFixedView;\r\n    // 滚动的坐标\r\n    this.scroll = scroll;\r\n    // 渲染模式\r\n    this.renderMode = RENDER_MODE.RENDER;\r\n    // 线段优化\r\n    this.optimizeEnable = true;\r\n    // 迭代器\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n    // 表格数据配置\r\n    this.xTableData = new XTableDataItems(this.settings.data);\r\n    this.scale = new Scale();\r\n    this.index = new Code({\r\n      scaleAdapter: new ScaleAdapter({\r\n        goto: v => XDraw.srcTransformStylePx(this.scale.goto(v)),\r\n      }),\r\n      ...this.settings.index,\r\n    });\r\n    this.rows = new Rows({\r\n      scaleAdapter: new ScaleAdapter({\r\n        goto: v => XDraw.srcTransformStylePx(this.scale.goto(v)),\r\n      }),\r\n      xIteratorBuilder: this.xIteratorBuilder,\r\n      ...this.settings.rows,\r\n    });\r\n    this.cols = new Cols({\r\n      scaleAdapter: new ScaleAdapter({\r\n        goto: v => XDraw.srcTransformStylePx(this.scale.goto(v)),\r\n        back: v => this.scale.back(v),\r\n      }),\r\n      xIteratorBuilder: this.xIteratorBuilder,\r\n      ...this.settings.cols,\r\n    });\r\n    this.cells = new Cells({\r\n      onChange: (ri) => {\r\n        const row = this.rows.getOrNew(ri);\r\n        row.reCkHasAngle = true;\r\n      },\r\n      table: this,\r\n      xTableData: this.xTableData,\r\n      xIteratorBuilder: this.xIteratorBuilder,\r\n    });\r\n    this.merges = new XMerges({\r\n      ...settings.merge,\r\n      xIteratorBuilder: this.xIteratorBuilder,\r\n      xTableData: this.xTableData,\r\n    });\r\n    // 固定区域测量\r\n    this.xFixedMeasure = new XFixedMeasure({\r\n      fixedView: this.xFixedView,\r\n      cols: this.cols,\r\n      rows: this.rows,\r\n    });\r\n    // 静态单元格图标\r\n    this.staticCellIcon = new StaticCellIcon({\r\n      data: [],\r\n      cells: this.cells,\r\n      rows: this.rows,\r\n      cols: this.cols,\r\n    });\r\n    // 固定单元格图标\r\n    this.fixedCellIcon = new FixedCellIcon({\r\n      data: [],\r\n      cells: this.cells,\r\n      rows: this.rows,\r\n      cols: this.cols,\r\n    });\r\n    // 表格视图区域\r\n    this.xTableAreaView = new XTableHistoryAreaView({\r\n      xTableScrollView,\r\n      scroll: this.scroll,\r\n      rows: this.rows,\r\n      cols: this.cols,\r\n    });\r\n    // 单元格辅助类\r\n    this.operateCellsHelper = new OperateCellsHelper(this);\r\n    this.textCellsHelper = new TextCellsHelper(this);\r\n    this.styleCellsHelper = new StyleCellsHelper(this);\r\n    // 边框过滤器\r\n    const lBorderFilter = new XLineIteratorFilter({\r\n      logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n      stack: [\r\n        new LBorderShow({ cells: this.cells }),\r\n      ],\r\n    });\r\n    const rBorderFilter = new XLineIteratorFilter({\r\n      logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n      stack: [\r\n        new RBorderShow({ cells: this.cells }),\r\n      ],\r\n    });\r\n    const tBorderFilter = new XLineIteratorFilter({\r\n      logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n      stack: [\r\n        new TBorderShow({ cells: this.cells }),\r\n      ],\r\n    });\r\n    const bBorderFilter = new XLineIteratorFilter({\r\n      logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n      stack: [\r\n        new BBorderShow({ cells: this.cells }),\r\n      ],\r\n    });\r\n    // 绘制资源\r\n    this.draw = new XDraw(this.el);\r\n    this.line = new Line(this.draw, {\r\n      bottomShow: (row, col) => {\r\n        const result = bBorderFilter.run({\r\n          row,\r\n          col,\r\n        });\r\n        return result === XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n      },\r\n      topShow: (row, col) => {\r\n        const result = tBorderFilter.run({\r\n          row,\r\n          col,\r\n        });\r\n        return result === XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n      },\r\n      leftShow: (row, col) => {\r\n        const result = lBorderFilter.run({\r\n          row,\r\n          col,\r\n        });\r\n        return result === XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n      },\r\n      rightShow: (row, col) => {\r\n        const result = rBorderFilter.run({\r\n          row,\r\n          col,\r\n        });\r\n        return result === XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n      },\r\n      iFMerge: (row, col) => PlainUtils.isNotEmptyObject(this.merges.getFirstIncludes(row, col)),\r\n      iFMergeFirstRow: (row, col) => this.merges.getFirstIncludes(row, col).sri === row,\r\n      iFMergeLastRow: (row, col) => this.merges.getFirstIncludes(row, col).eri === row,\r\n      iFMergeFirstCol: (row, col) => this.merges.getFirstIncludes(row, col).sci === col,\r\n      iFMergeLastCol: (row, col) => this.merges.getFirstIncludes(row, col).eci === col,\r\n    });\r\n    this.indexGrid = new Grid(this.draw, {\r\n      color: this.index.getGridColor(),\r\n    });\r\n    this.grid = new Grid(this.draw, {\r\n      color: this.settings.table.gridColor,\r\n    });\r\n    this.textFont = new Text({\r\n      scaleAdapter: new ScaleAdapter({\r\n        goto: v => this.scale.goto(v),\r\n      }),\r\n      table: this,\r\n    });\r\n    // 冻结内容\r\n    this.xLeftFrozenIndex = new XTableFrozenLeftIndex(this);\r\n    this.xTopFrozenIndex = new XTableFrozenTopIndex(this);\r\n    this.xTableFrozenContent = new XTableFrozenContent(this);\r\n    // 动态内容\r\n    this.xLeftIndex = new XTableLeftIndex(this);\r\n    this.xTopIndex = new XTableTopIndex(this);\r\n    this.xLeft = new XTableLeft(this);\r\n    this.xTop = new XTableTop(this);\r\n    this.xContent = new XTableContent(this);\r\n    // 细节内容\r\n    this.xTableFrozenFullRect = new XTableFrozenFullRect(this);\r\n    this.xTableFixedBar = new XTableFixedBar(this, settings.xFixedBar);\r\n  }\r\n\r\n  /**\r\n   * 获取单元格越界的宽度\r\n   * @param ri\r\n   * @param ci\r\n   * @returns {number}\r\n   */\r\n  getCellContentBoundOutWidth(ri, ci) {\r\n    const { cells } = this;\r\n    const cell = cells.getCell(ri, ci);\r\n    if (!cell) {\r\n      return 0;\r\n    }\r\n    const { cols } = this;\r\n    const { contentWidth, fontAttr } = cell;\r\n    const { align } = fontAttr;\r\n    let boundOutWidth = 0;\r\n    const colWidth = cols.getWidth(ci);\r\n    switch (align) {\r\n      case BaseFont.ALIGN.right:\r\n      case BaseFont.ALIGN.left: {\r\n        boundOutWidth = contentWidth;\r\n        break;\r\n      }\r\n      case BaseFont.ALIGN.center: {\r\n        if (this.isAngleBarCell(ri, ci)) {\r\n          boundOutWidth = contentWidth;\r\n        } else {\r\n          boundOutWidth = colWidth + ((contentWidth - colWidth) / 2);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    return boundOutWidth;\r\n  }\r\n\r\n  /**\r\n   * 获取单元格越界的宽度\r\n   * @param ri\r\n   * @param ci\r\n   * @returns {number}\r\n   */\r\n  getCellStyleBoundOutWidth(ri, ci) {\r\n    const { cells } = this;\r\n    const cell = cells.getCell(ri, ci);\r\n    if (!cell) {\r\n      return 0;\r\n    }\r\n    const { cols } = this;\r\n    let boundOutWidth = 0;\r\n    const colWidth = cols.getWidth(ci);\r\n    if (this.hasAngleCell(ri)) {\r\n      if (this.isAngleBarCell(ri, ci)) {\r\n        const offset = this.getSdistWidth(ri, ci);\r\n        boundOutWidth = colWidth + offset;\r\n      }\r\n    } else {\r\n      boundOutWidth = colWidth;\r\n    }\r\n    return boundOutWidth;\r\n  }\r\n\r\n  /**\r\n   * 获取单元格斜率宽度\r\n   * @param row\r\n   * @param col\r\n   */\r\n  getSdistWidth(row, col) {\r\n    const { cells } = this;\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return 0;\r\n    }\r\n    if (cell.leftSdistWidth > 0) {\r\n      return cell.leftSdistWidth;\r\n    }\r\n    if (cell.rightSdistWidth > 0) {\r\n      return cell.rightSdistWidth;\r\n    }\r\n    const { rows } = this;\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    const tilt = RTSinKit.tilt({\r\n      inverse: rows.getHeight(row),\r\n      angle,\r\n    });\r\n    return RTCosKit.nearby({\r\n      tilt,\r\n      angle,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 渲染模式\r\n   */\r\n  getRenderMode() {\r\n    const { renderMode } = this;\r\n    return renderMode;\r\n  }\r\n\r\n  /**\r\n   * 画布宽度\r\n   * @returns {null|*}\r\n   */\r\n  visualWidth() {\r\n    return this.el.width;\r\n  }\r\n\r\n  /**\r\n   * 画布高度\r\n   * @returns {null|*}\r\n   */\r\n  visualHeight() {\r\n    return this.el.height;\r\n  }\r\n\r\n  /**\r\n   * 重置变量区\r\n   */\r\n  reset() {\r\n    const { xTableAreaView } = this;\r\n    const { xLeftFrozenIndex } = this;\r\n    const { xTopFrozenIndex } = this;\r\n    const { xTableFrozenContent } = this;\r\n    const { xLeftIndex } = this;\r\n    const { xTopIndex } = this;\r\n    const { xLeft } = this;\r\n    const { xTop } = this;\r\n    const { xContent } = this;\r\n    xTableAreaView.reset();\r\n    xLeftFrozenIndex.reset();\r\n    xTopFrozenIndex.reset();\r\n    xTableFrozenContent.reset();\r\n    xLeftIndex.reset();\r\n    xTopIndex.reset();\r\n    xLeft.reset();\r\n    xTop.reset();\r\n    xContent.reset();\r\n  }\r\n\r\n  /**\r\n   * 界面缩放\r\n   * @param val\r\n   */\r\n  setScale(val = 1) {\r\n    // 清空画布\r\n    this.draw.attr({\r\n      fillStyle: this.settings.table.background,\r\n    });\r\n    this.draw.fullRect();\r\n    // 调整缩放级别\r\n    this.scale.setValue(val);\r\n    // 重新渲染界面\r\n    this.renderMode = RENDER_MODE.SCALE;\r\n    this.resize();\r\n    this.renderMode = RENDER_MODE.RENDER;\r\n  }\r\n\r\n  /**\r\n   * 重置界面大小\r\n   */\r\n  resize() {\r\n    const {\r\n      draw, xTableAreaView,\r\n    } = this;\r\n    const box = this.parent()\r\n      .box();\r\n    draw.resize(box.width, box.height);\r\n    xTableAreaView.undo();\r\n    this.reset();\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * 渲染优化\r\n   */\r\n  optimize() {\r\n    const { styleCellsHelper } = this;\r\n    const { xTableAreaView } = this;\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    let enable = true;\r\n    styleCellsHelper.getCellByViewRange({\r\n      view: scrollView,\r\n      cellsINCallback: (row, col, cell) => {\r\n        const { borderAttr } = cell;\r\n        if (borderAttr.hasDouble()) {\r\n          enable = false;\r\n          return STYLE_BREAK_LOOP.RETURN;\r\n        }\r\n        return STYLE_BREAK_LOOP.CONTINUE;\r\n      },\r\n      mergeCallback: (row, col, cell) => {\r\n        const { borderAttr } = cell;\r\n        if (borderAttr.hasDouble()) {\r\n          enable = false;\r\n          return STYLE_BREAK_LOOP.RETURN;\r\n        }\r\n        return STYLE_BREAK_LOOP.CONTINUE;\r\n      },\r\n    });\r\n    this.optimizeEnable = enable;\r\n  }\r\n\r\n  /**\r\n   * 渲染静态界面\r\n   */\r\n  render() {\r\n    const { xFixedView } = this;\r\n    const { xTableFrozenFullRect } = this;\r\n    const { xTableFixedBar } = this;\r\n    const { xLeftFrozenIndex } = this;\r\n    const { xTopFrozenIndex } = this;\r\n    const { xTableFrozenContent } = this;\r\n    const { xLeftIndex } = this;\r\n    const { xTopIndex } = this;\r\n    const { xLeft } = this;\r\n    const { xTop } = this;\r\n    const { xContent } = this;\r\n    this.optimize();\r\n    xTableFrozenFullRect.render();\r\n    if (xFixedView.hasFixedLeft() && xFixedView.hasFixedTop()) {\r\n      xTableFrozenContent.render();\r\n    }\r\n    if (xFixedView.hasFixedTop()) {\r\n      xLeftFrozenIndex.render();\r\n      xTop.render();\r\n    }\r\n    if (xFixedView.hasFixedLeft()) {\r\n      xTopFrozenIndex.render();\r\n      xLeft.render();\r\n    }\r\n    xLeftIndex.render();\r\n    xTopIndex.render();\r\n    xContent.render();\r\n    xTableFixedBar.render();\r\n  }\r\n\r\n  /**\r\n   * 渲染滚动界面\r\n   */\r\n  scrolling() {\r\n    const {\r\n      xTableAreaView,\r\n    } = this;\r\n    this.reset();\r\n    this.renderMode = RENDER_MODE.SCROLL;\r\n    this.render();\r\n    xTableAreaView.record();\r\n    this.renderMode = RENDER_MODE.RENDER;\r\n    this.reset();\r\n  }\r\n\r\n  /**\r\n   * 当前行是否存在旋转单元格\r\n   * @param row\r\n   * @returns {boolean}\r\n   */\r\n  hasAngleCell(row) {\r\n    const { rows } = this;\r\n    const rowObject = rows.getOrNew(row);\r\n    if (rowObject.reCkHasAngle === false) {\r\n      return rowObject.hasAngelCell;\r\n    }\r\n    const { cols, cells } = this;\r\n    const { len } = cols;\r\n    let hasAngelCell = false;\r\n    for (let i = 0; i < len; i += 1) {\r\n      const cell = cells.getCell(row, i);\r\n      if (cell) {\r\n        const { fontAttr } = cell;\r\n        const { direction } = fontAttr;\r\n        if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\r\n          hasAngelCell = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    rowObject.setReCkHasAngle(false);\r\n    rowObject.setHasAngelCell(hasAngelCell);\r\n    return hasAngelCell;\r\n  }\r\n\r\n  /**\r\n   * 单元格是否旋转\r\n   * @returns {boolean|boolean|*}\r\n   */\r\n  isAngleBarCell(row, col) {\r\n    const { cells, merges } = this;\r\n    const merge = merges.getFirstIncludes(row, col);\r\n    if (PlainUtils.isNotUnDef(merge)) {\r\n      return false;\r\n    }\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return false;\r\n    }\r\n    const { fontAttr, borderAttr } = cell;\r\n    if (fontAttr.direction !== BaseFont.TEXT_DIRECTION.ANGLE) {\r\n      return false;\r\n    }\r\n    const lessZero = fontAttr.angle < 0 && fontAttr.angle > -90;\r\n    const moreZero = fontAttr.angle > 0 && fontAttr.angle < 90;\r\n    return (lessZero || moreZero) && borderAttr.isDisplay();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableStyle,\r\n};\r\n","import { Widget } from '../../../../libs/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenZone extends Widget {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-x-screen-zone ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenZone,\r\n};\r\n","import { cssPrefix } from '../../../../const/Constant';\r\nimport { XScreenZone } from './XScreenZone';\r\n\r\nclass XScreenBRZone extends XScreenZone {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-x-screen-br-zone`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenBRZone,\r\n};\r\n","import { cssPrefix } from '../../../../const/Constant';\r\nimport { XScreenZone } from './XScreenZone';\r\n\r\nclass XScreenLTZone extends XScreenZone {\r\n\r\n  constructor(xScreen) {\r\n    super(`${cssPrefix}-x-screen-lt-zone`);\r\n    this.xScreen = xScreen;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenLTZone,\r\n};\r\n","import { cssPrefix } from '../../../../const/Constant';\r\nimport { XScreenZone } from './XScreenZone';\r\n\r\nclass XScreenLZone extends XScreenZone {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-x-screen-l-zone`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenLZone,\r\n};\r\n","import { cssPrefix } from '../../../../const/Constant';\r\nimport { XScreenZone } from './XScreenZone';\r\n\r\nclass XScreenTZone extends XScreenZone {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-x-screen-t-zone`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenTZone,\r\n};\r\n","import { Widget } from '../../../libs/Widget';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { XScreenBRZone } from './zone/XScreenBRZone';\r\nimport { XScreenLTZone } from './zone/XScreenLTZone';\r\nimport { XScreenLZone } from './zone/XScreenLZone';\r\nimport { XScreenTZone } from './zone/XScreenTZone';\r\nimport { XEvent } from '../../../libs/XEvent';\r\nimport { XDraw } from '../../../canvas/XDraw';\r\n\r\nconst DISPLAY_AREA = {\r\n  BRT: Symbol('BRT'),\r\n  BRL: Symbol('BRL'),\r\n  BR: Symbol('br'),\r\n  ALL: Symbol('ALL'),\r\n};\r\n\r\nclass XScreen extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-x-screen`);\r\n    this.pool = [];\r\n    this.table = table;\r\n    this.displayArea = DISPLAY_AREA.BR;\r\n    this.ltZone = new XScreenLTZone();\r\n    this.tZone = new XScreenTZone();\r\n    this.brZone = new XScreenBRZone();\r\n    this.lZone = new XScreenLZone();\r\n    this.children(this.ltZone);\r\n    this.children(this.tZone);\r\n    this.children(this.brZone);\r\n    this.children(this.lZone);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.setZone();\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.SCALE_CHANGE, () => {\r\n      this.setZone();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.setZone();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      this.setZone();\r\n    });\r\n  }\r\n\r\n  addItem(item) {\r\n    this.pool.push(item);\r\n    this.ltZone.attach(item.lt);\r\n    this.tZone.attach(item.t);\r\n    this.lZone.attach(item.l);\r\n    this.brZone.attach(item.br);\r\n    item.setXScreen(this);\r\n    item.onAdd(this);\r\n  }\r\n\r\n  setZone() {\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const fixedHeight = table.getFixedHeight();\r\n    const fixedWidth = table.getFixedWidth();\r\n    const brTop = index.getHeight() + fixedHeight;\r\n    const brLeft = index.getWidth() + fixedWidth;\r\n    this.brZone.offset({ left: brLeft, top: brTop });\r\n    const ltDisplay = fixedWidth > 0 && fixedHeight > 0;\r\n    const tDisplay = fixedHeight > 0;\r\n    const lDisplay = fixedWidth > 0;\r\n    this.ltZone.hide();\r\n    this.lZone.hide();\r\n    this.tZone.hide();\r\n    const width = XDraw.dpr();\r\n    if (ltDisplay) {\r\n      this.displayArea = DISPLAY_AREA.ALL;\r\n      this.ltZone.offset({\r\n        left: index.getWidth(), top: index.getHeight(), width: fixedWidth, height: fixedHeight,\r\n      }).show();\r\n      this.ltZone.css('border-width', `${width}px`);\r\n      this.lZone.offset({\r\n        left: index.getWidth(),\r\n        top: brTop,\r\n        width: fixedWidth,\r\n        height: table.visualHeight() - index.getHeight() - fixedHeight,\r\n      }).show();\r\n      this.lZone.css('border-width', `${width}px`);\r\n      this.tZone.offset({\r\n        left: brLeft,\r\n        top: index.getHeight(),\r\n        width: table.visualWidth() - index.getWidth() - fixedWidth,\r\n        height: fixedHeight,\r\n      }).show();\r\n      this.tZone.css('border-width', `${width}px`);\r\n    } else if (lDisplay) {\r\n      this.displayArea = DISPLAY_AREA.BRL;\r\n      this.lZone.offset({\r\n        left: index.getWidth(),\r\n        top: brTop,\r\n        width: fixedWidth,\r\n        height: table.visualHeight() - index.getHeight() - fixedHeight,\r\n      }).show();\r\n      this.lZone.css('border-width', `${width}px`);\r\n    } else if (tDisplay) {\r\n      this.displayArea = DISPLAY_AREA.BRL;\r\n      this.tZone.offset({\r\n        left: brLeft,\r\n        top: index.getHeight(),\r\n        width: table.visualWidth() - index.getWidth() - fixedWidth,\r\n        height: fixedHeight,\r\n      }).show();\r\n      this.tZone.css('border-width', `${width}px`);\r\n    } else {\r\n      this.displayArea = DISPLAY_AREA.BR;\r\n    }\r\n  }\r\n\r\n  findType(type) {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const item of this.pool) {\r\n      if (item instanceof type) {\r\n        return item;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.pool.forEach((item) => {\r\n      item.destroy();\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreen, DISPLAY_AREA,\r\n};\r\n","import { ELContextMenuItem } from '../contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\n\r\nclass AutoFillTypeMenuItem extends ELContextMenuItem {\r\n\r\n  constructor({ text, value }) {\r\n    super(`${cssPrefix}-auto-fill-menu-item`);\r\n    this.text = text;\r\n    this.value = value;\r\n    this.textEle = h('div', `${cssPrefix}-auto-fill-menu-item-title`);\r\n    this.textEle.text(text);\r\n    this.children(this.textEle);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AutoFillTypeMenuItem,\r\n};\r\n","import { ELContextMenu } from '../contextmenu/ELContextMenu';\r\nimport { Constant, cssPrefix } from '../../const/Constant';\r\nimport { AutoFillTypeMenuItem } from './AutoFillTypeMenuItem';\r\nimport { XEvent } from '../../libs/XEvent';\r\n\r\nclass AutoFillTypeMenu extends ELContextMenu {\r\n\r\n  constructor(options = {\r\n    onUpdate: () => {},\r\n  }) {\r\n    super(`${cssPrefix}-auto-fill-menu`, options);\r\n    this.addItem(new AutoFillTypeMenuItem({ text: '以序列的方式填充', value: AutoFillTypeMenu.FILL_TYPE.SERIALIZE }).attr('title', '只有在起始单元格内容为数字时才生效'));\r\n    this.addItem(new AutoFillTypeMenuItem({ text: '填充单元格内容', value: AutoFillTypeMenu.FILL_TYPE.FILLING }).attr('title', '默认使用内容填充'));\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    this.menus.forEach((menu) => {\r\n      XEvent.unbind(menu);\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    this.menus.forEach((menu) => {\r\n      XEvent.bind(menu, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n        this.options.onUpdate(menu);\r\n      });\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\nAutoFillTypeMenu.FILL_TYPE = {\r\n  SERIALIZE: 1, FILLING: 2,\r\n};\r\n\r\nexport {\r\n  AutoFillTypeMenu,\r\n};\r\n","import { Constant, cssPrefix } from '../../const/Constant';\r\nimport { ELContextMenu } from '../contextmenu/ELContextMenu';\r\nimport { XEvent } from '../../libs/XEvent';\r\nimport { AutoFillTypeMenu } from './AutoFillTypeMenu';\r\n\r\nclass AutoFillType extends ELContextMenu {\r\n\r\n  constructor(options = {\r\n    onUpdate: () => {},\r\n  }) {\r\n    super(`${cssPrefix}-auto-fill-type`, options);\r\n    this.autoFillTypeMenu = new AutoFillTypeMenu({\r\n      el: this,\r\n      onUpdate: (menu) => {\r\n        this.options.onUpdate(menu);\r\n        this.autoFillTypeMenu.close();\r\n        this.close();\r\n      },\r\n    });\r\n    this.bind();\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.autoFillTypeMenu.open();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.autoFillTypeMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AutoFillType,\r\n};\r\n","import { RectRange } from '../tablebase/RectRange';\r\nimport { BaseCellsHelper } from './BaseCellsHelper';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\nclass CopyMerge {\r\n\r\n  constructor({\r\n    targetViewRange,\r\n    originViewRange,\r\n    merge = () => {},\r\n    master = () => {},\r\n    onCopy = () => {},\r\n    xIteratorBuilder,\r\n  }) {\r\n    this.targetViewRange = targetViewRange;\r\n    this.originViewRange = originViewRange;\r\n    this.master = master;\r\n    this.merge = merge;\r\n    this.onCopy = onCopy;\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n  }\r\n\r\n  copyStartRow() {\r\n    const { originViewRange } = this;\r\n    return originViewRange.sri;\r\n  }\r\n\r\n  copyEndRow() {\r\n    const { originViewRange } = this;\r\n    return originViewRange.eri;\r\n  }\r\n\r\n  nextCopyRow(row) {\r\n    const endRow = this.copyEndRow();\r\n    if (row >= endRow) {\r\n      return this.copyStartRow();\r\n    }\r\n    return row + 1;\r\n  }\r\n\r\n  copyStartCol() {\r\n    const { originViewRange } = this;\r\n    return originViewRange.sci;\r\n  }\r\n\r\n  copyEndCol() {\r\n    const { originViewRange } = this;\r\n    return originViewRange.eci;\r\n  }\r\n\r\n  nextCopyCol(col) {\r\n    const endCol = this.copyEndCol();\r\n    if (col >= endCol) {\r\n      return this.copyStartCol();\r\n    }\r\n    return col + 1;\r\n  }\r\n\r\n  pasteStartRow() {\r\n    const { targetViewRange } = this;\r\n    return targetViewRange.sri;\r\n  }\r\n\r\n  pasteEndRow() {\r\n    const { targetViewRange } = this;\r\n    return targetViewRange.eri;\r\n  }\r\n\r\n  pasteStartCol() {\r\n    const { targetViewRange } = this;\r\n    return targetViewRange.sci;\r\n  }\r\n\r\n  pasteEndCol() {\r\n    const { targetViewRange } = this;\r\n    return targetViewRange.eci;\r\n  }\r\n\r\n  executeCopy() {\r\n    let ori = this.copyStartRow();\r\n    this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(this.pasteStartRow())\r\n      .setEnd(this.pasteEndRow())\r\n      .setLoop((tri) => {\r\n        let oci = this.copyStartCol();\r\n        this.xIteratorBuilder.getColIterator()\r\n          .setBegin(this.pasteStartCol())\r\n          .setEnd(this.pasteEndCol())\r\n          .setLoop((tci) => {\r\n            const merge = this.merge(ori, oci);\r\n            if (merge && this.master(ori, oci, merge)) {\r\n              this.onCopy(tri, tci, merge);\r\n            }\r\n          })\r\n          .setNext(() => {\r\n            oci = this.nextCopyCol(oci);\r\n          })\r\n          .execute();\r\n      })\r\n      .setNext(() => {\r\n        ori = this.nextCopyRow(ori);\r\n      })\r\n      .foldOnOff(false)\r\n      .execute();\r\n  }\r\n\r\n}\r\n\r\nclass CopyCellIN {\r\n\r\n  constructor({\r\n    targetViewRange,\r\n    originViewRange,\r\n    onCopy = () => {},\r\n    xIteratorBuilder,\r\n  }) {\r\n    this.targetViewRange = targetViewRange;\r\n    this.originViewRange = originViewRange;\r\n    this.onCopy = onCopy;\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n  }\r\n\r\n  copyStartRow() {\r\n    const { originViewRange } = this;\r\n    const { sri, eri } = originViewRange;\r\n    return this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(sri - 1)\r\n      .setEnd(eri)\r\n      .nextRow();\r\n  }\r\n\r\n  copyEndRow() {\r\n    const { originViewRange } = this;\r\n    const { sri, eri } = originViewRange;\r\n    return this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(eri + 1)\r\n      .setEnd(sri)\r\n      .nextRow();\r\n  }\r\n\r\n  nextCopyRow(row) {\r\n    const endRow = this.copyEndRow();\r\n    if (row >= endRow) {\r\n      return this.copyStartRow();\r\n    }\r\n    return this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(row)\r\n      .setEnd(endRow)\r\n      .nextRow();\r\n  }\r\n\r\n  copyStartCol() {\r\n    const { originViewRange } = this;\r\n    return originViewRange.sci;\r\n  }\r\n\r\n  copyEndCol() {\r\n    const { originViewRange } = this;\r\n    return originViewRange.eci;\r\n  }\r\n\r\n  nextCopyCol(col) {\r\n    const endCol = this.copyEndCol();\r\n    if (col >= endCol) {\r\n      return this.copyStartCol();\r\n    }\r\n    return col + 1;\r\n  }\r\n\r\n  pasteStartRow() {\r\n    const { targetViewRange } = this;\r\n    return targetViewRange.sri;\r\n  }\r\n\r\n  pasteEndRow() {\r\n    const { targetViewRange } = this;\r\n    return targetViewRange.eri;\r\n  }\r\n\r\n  pasteStartCol() {\r\n    const { targetViewRange } = this;\r\n    return targetViewRange.sci;\r\n  }\r\n\r\n  pasteEndCol() {\r\n    const { targetViewRange } = this;\r\n    return targetViewRange.eci;\r\n  }\r\n\r\n  executeCopy() {\r\n    let ori = this.copyStartRow();\r\n    this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(this.pasteStartRow())\r\n      .setEnd(this.pasteEndRow())\r\n      .setLoop((tri) => {\r\n        let oci = this.copyStartCol();\r\n        this.xIteratorBuilder.getColIterator()\r\n          .setBegin(this.pasteStartCol())\r\n          .setEnd(this.pasteEndCol())\r\n          .setLoop((tci) => {\r\n            this.onCopy(tri, tci, ori, oci);\r\n          })\r\n          .setNext(() => {\r\n            oci = this.nextCopyCol(oci);\r\n          })\r\n          .execute();\r\n      })\r\n      .setNext(() => {\r\n        ori = this.nextCopyRow(ori);\r\n      })\r\n      .execute();\r\n  }\r\n\r\n}\r\n\r\nclass Serialize {\r\n\r\n  constructor({\r\n    originViewRange,\r\n    direction,\r\n    getStartIndex,\r\n    onSerialize,\r\n    xIteratorBuilder,\r\n  }) {\r\n    this.originViewRange = originViewRange;\r\n    this.direction = direction;\r\n    this.getStartIndex = getStartIndex;\r\n    this.onSerialize = onSerialize;\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n  }\r\n\r\n  serializeRight() {\r\n    const { originViewRange, onSerialize, getStartIndex } = this;\r\n    const { sri, sci, eri, eci } = originViewRange;\r\n    let ret = true;\r\n    this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(sri)\r\n      .setEnd(eri)\r\n      .setLoop((ri) => {\r\n        let start = PlainUtils.Nul;\r\n        this.xIteratorBuilder.getColIterator()\r\n          .setBegin(sci)\r\n          .setEnd(eci)\r\n          .setLoop((ci) => {\r\n            if (start === PlainUtils.Nul) {\r\n              const index = getStartIndex(ri, ci);\r\n              if (!PlainUtils.isNumber(index)) {\r\n                ret = false;\r\n              } else {\r\n                start = parseInt(index, 10);\r\n              }\r\n            } else {\r\n              start += 1;\r\n              onSerialize(ri, ci, start);\r\n            }\r\n            return ret;\r\n          })\r\n          .execute();\r\n        return ret;\r\n      })\r\n      .execute();\r\n  }\r\n\r\n  serializeBottom() {\r\n    const { originViewRange, onSerialize, getStartIndex } = this;\r\n    const { sri, sci, eri, eci } = originViewRange;\r\n    let ret = true;\r\n    this.xIteratorBuilder.getColIterator()\r\n      .setBegin(sci)\r\n      .setEnd(eci)\r\n      .setLoop((ci) => {\r\n        let start = PlainUtils.Nul;\r\n        this.xIteratorBuilder.getRowIterator()\r\n          .setBegin(sri)\r\n          .setEnd(eri)\r\n          .setLoop((ri) => {\r\n            if (start === PlainUtils.Nul) {\r\n              const index = getStartIndex(ri, ci);\r\n              if (!PlainUtils.isNumber(index)) {\r\n                ret = false;\r\n              } else {\r\n                start = parseInt(index, 10);\r\n              }\r\n            } else {\r\n              start += 1;\r\n              onSerialize(ri, ci, start);\r\n            }\r\n            return ret;\r\n          })\r\n          .execute();\r\n        return ret;\r\n      })\r\n      .execute();\r\n  }\r\n\r\n  serializeTop() {\r\n    const { originViewRange, onSerialize, getStartIndex } = this;\r\n    const { sri, sci, eri, eci } = originViewRange;\r\n    let ret = true;\r\n    this.xIteratorBuilder.getColIterator()\r\n      .setBegin(sci)\r\n      .setEnd(eci)\r\n      .setLoop((ci) => {\r\n        let start = PlainUtils.Nul;\r\n        this.xIteratorBuilder.getRowIterator()\r\n          .setBegin(eri)\r\n          .setEnd(sri)\r\n          .setLoop((ri) => {\r\n            if (start === PlainUtils.Nul) {\r\n              const index = getStartIndex(ri, ci);\r\n              if (!PlainUtils.isNumber(index)) {\r\n                ret = false;\r\n              } else {\r\n                start = parseInt(index, 10);\r\n              }\r\n            } else {\r\n              start -= 1;\r\n              onSerialize(ri, ci, start);\r\n            }\r\n            return ret;\r\n          })\r\n          .execute();\r\n        return ret;\r\n      })\r\n      .execute();\r\n  }\r\n\r\n  serializeLeft() {\r\n    const { originViewRange, onSerialize, getStartIndex } = this;\r\n    const { sri, sci, eri, eci } = originViewRange;\r\n    let ret = true;\r\n    this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(sri)\r\n      .setEnd(eri)\r\n      .setLoop((ri) => {\r\n        let start = PlainUtils.Nul;\r\n        this.xIteratorBuilder.getColIterator()\r\n          .setBegin(eci)\r\n          .setEnd(sci)\r\n          .setLoop((ci) => {\r\n            if (start === PlainUtils.Nul) {\r\n              const index = getStartIndex(ri, ci);\r\n              if (!PlainUtils.isNumber(index)) {\r\n                ret = false;\r\n              } else {\r\n                start = parseInt(index, 10);\r\n              }\r\n            } else {\r\n              start -= 1;\r\n              onSerialize(ri, ci, start);\r\n            }\r\n          })\r\n          .execute();\r\n        return ret;\r\n      })\r\n      .execute();\r\n  }\r\n\r\n  executeSerialize() {\r\n    const { direction } = this;\r\n    switch (direction) {\r\n      case Serialize.SERIALIZE_DIRECTION.LEFT:\r\n        this.serializeLeft();\r\n        break;\r\n      case Serialize.SERIALIZE_DIRECTION.TOP:\r\n        this.serializeTop();\r\n        break;\r\n      case Serialize.SERIALIZE_DIRECTION.RIGHT:\r\n        this.serializeRight();\r\n        break;\r\n      case Serialize.SERIALIZE_DIRECTION.BOTTOM:\r\n        this.serializeBottom();\r\n        break;\r\n    }\r\n  }\r\n\r\n}\r\nSerialize.SERIALIZE_DIRECTION = {\r\n  RIGHT: 3,\r\n  BOTTOM: 4,\r\n  TOP: 1,\r\n  LEFT: 2,\r\n};\r\n\r\nclass CellMergeCopyHelper extends BaseCellsHelper {\r\n\r\n  constructor(table) {\r\n    super();\r\n    this.table = table;\r\n  }\r\n\r\n  getStyleTable() {\r\n    return this.table.xTableStyle;\r\n  }\r\n\r\n  getTableDataSnapshot() {\r\n    return this.table.tableDataSnapshot;\r\n  }\r\n\r\n  getXTableAreaView() {\r\n    return this.table.xTableAreaView;\r\n  }\r\n\r\n  getRows() {\r\n    return this.table.rows;\r\n  }\r\n\r\n  getCols() {\r\n    return this.table.cols;\r\n  }\r\n\r\n  getCells() {\r\n    return this.table.getTableCells();\r\n  }\r\n\r\n  getMerges() {\r\n    return this.table.getTableMerges();\r\n  }\r\n\r\n  getXIteratorBuilder() {\r\n    return this.table.xIteratorBuilder;\r\n  }\r\n\r\n  copyCellINContent({\r\n    originViewRange, targetViewRange,\r\n  }) {\r\n    const { table } = this;\r\n    const { xIteratorBuilder } = table;\r\n    const tableDataSnapshot = this.getTableDataSnapshot();\r\n    const cells = this.getCells();\r\n    const { cellDataProxy } = tableDataSnapshot;\r\n    const copy = new CopyCellIN({\r\n      originViewRange,\r\n      targetViewRange,\r\n      xIteratorBuilder,\r\n      onCopy: (tri, tci, ori, oci) => {\r\n        const src = cells.getCell(ori, oci);\r\n        if (src) {\r\n          const target = src.clone();\r\n          cellDataProxy.setCell(tri, tci, target);\r\n        }\r\n      },\r\n    });\r\n    copy.executeCopy();\r\n  }\r\n\r\n  copyMergeContent({\r\n    originViewRange, targetViewRange,\r\n  }) {\r\n    const { table } = this;\r\n    const { xIteratorBuilder } = table;\r\n    const tableDataSnapshot = this.getTableDataSnapshot();\r\n    const merges = this.getMerges();\r\n    const { mergeDataProxy } = tableDataSnapshot;\r\n    const copy = new CopyMerge({\r\n      originViewRange,\r\n      targetViewRange,\r\n      xIteratorBuilder,\r\n      merge: (ri, ci) => merges.getFirstIncludes(ri, ci),\r\n      master: (ri, ci, m) => m.sri === ri && m.sci === ci,\r\n      onCopy: (ri, ci, m) => {\r\n        let [rSize, cSize] = m.size();\r\n        cSize -= 1;\r\n        rSize -= 1;\r\n        const newMerge = new RectRange(ri, ci, ri + rSize, ci + cSize);\r\n        const hasFold = xIteratorBuilder.getRowIterator()\r\n          .setBegin(newMerge.sri)\r\n          .setEnd(newMerge.eri)\r\n          .hasFold();\r\n        if (hasFold) {\r\n          return;\r\n        }\r\n        newMerge.each(xIteratorBuilder, (ri, ci) => {\r\n          const merge = merges.getFirstIncludes(ri, ci);\r\n          if (merge) {\r\n            mergeDataProxy.deleteMerge(merge);\r\n          }\r\n        });\r\n        mergeDataProxy.addMerge(newMerge);\r\n      },\r\n    });\r\n    copy.executeCopy();\r\n  }\r\n\r\n  copyStylesContent({\r\n    originViewRange, targetViewRange,\r\n  }) {\r\n    const { table } = this;\r\n    const { xIteratorBuilder } = table;\r\n    const tableDataSnapshot = this.getTableDataSnapshot();\r\n    const cells = this.getCells();\r\n    const { cellDataProxy } = tableDataSnapshot;\r\n    const copy = new CopyCellIN({\r\n      originViewRange,\r\n      targetViewRange,\r\n      xIteratorBuilder,\r\n      onCopy: (tri, tci, ori, oci) => {\r\n        const src = cells.getCell(ori, oci);\r\n        if (src) {\r\n          const target = cells.getCellOrNew(tri, tci);\r\n          const clone = src.clone();\r\n          clone.text = target.text;\r\n          cellDataProxy.setCell(tri, tci, clone);\r\n        }\r\n      },\r\n    });\r\n    copy.executeCopy();\r\n  }\r\n\r\n  serializeContent({\r\n    originViewRange, direction,\r\n  }) {\r\n    const { table } = this;\r\n    const { xIteratorBuilder } = table;\r\n    const tableDataSnapshot = this.getTableDataSnapshot();\r\n    const cells = this.getCells();\r\n    const { cellDataProxy } = tableDataSnapshot;\r\n    const serialize = new Serialize({\r\n      originViewRange,\r\n      direction,\r\n      xIteratorBuilder,\r\n      getStartIndex: (ri, ci) => {\r\n        const cell = cells.getCell(ri, ci);\r\n        if (cell) {\r\n          return cell.text;\r\n        }\r\n        return PlainUtils.Nul;\r\n      },\r\n      onSerialize: (ri, ci, index) => {\r\n        const cell = cells.getCellOrNew(ri, ci);\r\n        const clone = cell.clone();\r\n        clone.text = `${index}`;\r\n        cellDataProxy.setCell(ri, ci, clone);\r\n      },\r\n    });\r\n    serialize.executeSerialize();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  CellMergeCopyHelper,\r\n  CopyMerge,\r\n  Serialize,\r\n  CopyCellIN,\r\n};\r\n","/* global document */\r\nimport { SELECT_LOCAL, XSelectItem } from '../xselect/XSelectItem';\r\nimport { XScreenCssBorderItem } from '../../xscreen/item/viewborder/XScreenCssBorderItem';\r\nimport { Widget } from '../../../../libs/Widget';\r\nimport { Constant, cssPrefix } from '../../../../const/Constant';\r\nimport { RectRange } from '../../tablebase/RectRange';\r\nimport { PlainUtils } from '../../../../utils/PlainUtils';\r\nimport { XEvent } from '../../../../libs/XEvent';\r\nimport { XTableMousePointer } from '../../XTableMousePointer';\r\nimport { AutoFillType } from '../../../../component/autofilltype/AutoFillType';\r\nimport { Serialize } from '../../helper/CellMergeCopyHelper';\r\nimport { AutoFillTypeMenu } from '../../../../component/autofilltype/AutoFillTypeMenu';\r\n\r\nclass XAutoFillItem extends XScreenCssBorderItem {\r\n\r\n  constructor(table, options = {}) {\r\n    super({ table });\r\n    this.options = PlainUtils.mergeDeep({\r\n      mergeForceSplit: false,\r\n      onBeforeAutoFill: () => {},\r\n      onAfterAutoFill: () => {},\r\n    }, options);\r\n    this.moveDirection = null;\r\n    this.autoFillRange = RectRange.EMPTY;\r\n    this.display = false;\r\n    this.ltElem = new Widget(`${cssPrefix}-x-autofill-area`);\r\n    this.brElem = new Widget(`${cssPrefix}-x-autofill-area`);\r\n    this.lElem = new Widget(`${cssPrefix}-x-autofill-area`);\r\n    this.tElem = new Widget(`${cssPrefix}-x-autofill-area`);\r\n    this.blt.children(this.ltElem);\r\n    this.bl.children(this.lElem);\r\n    this.bt.children(this.tElem);\r\n    this.bbr.children(this.brElem);\r\n    this.setBorderType('dashed');\r\n  }\r\n\r\n  onAdd() {\r\n    this.bind();\r\n    this.hide();\r\n  }\r\n\r\n  unbind() {\r\n    const { xScreen } = this;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    XEvent.bind([\r\n      xSelect.ltCorner,\r\n      xSelect.tCorner,\r\n      xSelect.lCorner,\r\n      xSelect.brCorner,\r\n    ]);\r\n    XEvent.bind([\r\n      xSelect.ltCorner,\r\n      xSelect.tCorner,\r\n      xSelect.lCorner,\r\n      xSelect.brCorner,\r\n    ]);\r\n    XEvent.bind([\r\n      xSelect.ltCorner,\r\n      xSelect.tCorner,\r\n      xSelect.lCorner,\r\n      xSelect.brCorner,\r\n    ]);\r\n  }\r\n\r\n  bind() {\r\n    const { table, xScreen } = this;\r\n    const { mousePointer } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const autoFillType = new AutoFillType({\r\n      onUpdate: (menu) => {\r\n        const { value } = menu;\r\n        switch (value) {\r\n          case AutoFillTypeMenu.FILL_TYPE.SERIALIZE:\r\n            this.serialize();\r\n            break;\r\n          case AutoFillTypeMenu.FILL_TYPE.FILLING:\r\n            break;\r\n        }\r\n      },\r\n    });\r\n    XEvent.bind([\r\n      xSelect.ltCorner,\r\n      xSelect.tCorner,\r\n      xSelect.lCorner,\r\n      xSelect.brCorner,\r\n    ], Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      mousePointer.free(XAutoFillItem);\r\n    });\r\n    XEvent.bind([\r\n      xSelect.ltCorner,\r\n      xSelect.tCorner,\r\n      xSelect.lCorner,\r\n      xSelect.brCorner,\r\n    ], Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, () => {\r\n      mousePointer.lock(XAutoFillItem);\r\n      mousePointer.set(XTableMousePointer.KEYS.crosshair, XAutoFillItem);\r\n    });\r\n    XEvent.bind([\r\n      xSelect.ltCorner,\r\n      xSelect.tCorner,\r\n      xSelect.lCorner,\r\n      xSelect.brCorner,\r\n    ], Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\r\n      this.display = true;\r\n      mousePointer.lock(XAutoFillItem);\r\n      mousePointer.set(XTableMousePointer.KEYS.crosshair, XAutoFillItem);\r\n      const { x, y } = table.eventXy(e1);\r\n      this.rangeHandle(x, y);\r\n      this.offsetHandle();\r\n      this.borderHandle();\r\n      XEvent.mouseMoveUp(document, (e2) => {\r\n        const { x, y } = table.eventXy(e2);\r\n        this.rangeHandle(x, y);\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }, () => {\r\n        this.display = false;\r\n        mousePointer.free(XAutoFillItem);\r\n        this.autoFill();\r\n        this.hide();\r\n        const { autoFillRange } = this;\r\n        if (!autoFillRange.equals(RectRange.EMPTY)) {\r\n          const { selectRange } = xSelect;\r\n          xSelect.setRange(selectRange.union(autoFillRange));\r\n          const { activeCorner } = xSelect;\r\n          autoFillType.setEL(activeCorner);\r\n          autoFillType.open();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  rangeHandle(x, y) {\r\n    const { table } = this;\r\n    const { xIteratorBuilder, xScreen } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const merges = table.getTableMerges();\r\n    const { selectRange, selectLocal } = xSelect;\r\n    const { cols, rows } = table;\r\n    const { sri, sci, eri, eci } = selectRange;\r\n    const { ri, ci } = table.getRiCiByXy(x, y);\r\n\r\n    const merge = merges.getFirstIncludes(sri, sci);\r\n    const zone = SELECT_LOCAL.BR !== selectLocal;\r\n    const hasFull = zone || PlainUtils.isNotUnDef(merge);\r\n    const [rSize, cSize] = selectRange.size();\r\n\r\n    let originSRi = ri;\r\n    let originSCi = ci;\r\n\r\n    // 检测边界\r\n    if (originSRi < 0) {\r\n      originSRi = 0;\r\n    } else if (originSRi > rows.len) {\r\n      originSRi = rows.len - 1;\r\n    }\r\n    if (originSCi < 0) {\r\n      originSCi = 0;\r\n    } else if (originSCi > cols.len) {\r\n      originSCi = cols.len - 1;\r\n    }\r\n\r\n    let autoFillRange = RectRange.EMPTY;\r\n    let moveDirection = PlainUtils.Undef;\r\n\r\n    // 选择区域\r\n    if (originSRi < sri || ri > eri) {\r\n      // 上下\r\n      if (originSRi < sri) {\r\n        moveDirection = Serialize.SERIALIZE_DIRECTION.TOP;\r\n        if (hasFull) {\r\n          let minRi = sri;\r\n          let number = 0;\r\n          xIteratorBuilder.getRowIterator()\r\n            .setBegin(sri - 1)\r\n            .setEnd(0)\r\n            .setLoop((i) => {\r\n              if (i < ri) {\r\n                return false;\r\n              }\r\n              if (number % rSize === 0) {\r\n                const value = minRi - rSize;\r\n                if (value >= 0) {\r\n                  minRi = value;\r\n                }\r\n              }\r\n              number += 1;\r\n              return true;\r\n            })\r\n            .foldOnOff(false)\r\n            .execute();\r\n          if (minRi !== sri) {\r\n            autoFillRange = new RectRange(minRi, sci, sri - 1, eci);\r\n          }\r\n        } else {\r\n          const nextRow = xIteratorBuilder.getRowIterator()\r\n            .setBegin(sri)\r\n            .setEnd(0)\r\n            .nextRow();\r\n          autoFillRange = new RectRange(ri, sci, nextRow, eci);\r\n        }\r\n      }\r\n      if (originSRi > eri) {\r\n        moveDirection = Serialize.SERIALIZE_DIRECTION.BOTTOM;\r\n        if (hasFull) {\r\n          let maxRi = eri;\r\n          let number = 0;\r\n          xIteratorBuilder.getRowIterator()\r\n            .setBegin(eri + 1)\r\n            .setEnd(rows.len - 1)\r\n            .setLoop((i) => {\r\n              if (i > ri) {\r\n                return false;\r\n              }\r\n              if (number % rSize === 0) {\r\n                const value = maxRi + rSize;\r\n                if (value >= 0) {\r\n                  maxRi = value;\r\n                }\r\n              }\r\n              number += 1;\r\n              return true;\r\n            })\r\n            .foldOnOff(false)\r\n            .execute();\r\n          if (maxRi !== eri) {\r\n            autoFillRange = new RectRange(eri + 1, sci, maxRi, eci);\r\n          }\r\n        } else {\r\n          const nextRow = xIteratorBuilder.getRowIterator()\r\n            .setBegin(eri)\r\n            .setEnd(rows.len - 1)\r\n            .nextRow();\r\n          autoFillRange = new RectRange(nextRow, sci, ri, eci);\r\n        }\r\n      }\r\n    } else if (originSCi < sci || ci > eci) {\r\n      // 左右\r\n      if (originSCi < sci) {\r\n        moveDirection = Serialize.SERIALIZE_DIRECTION.LEFT;\r\n        if (hasFull) {\r\n          let minCi = sci;\r\n          let number = 0;\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(sci - 1)\r\n            .setEnd(0)\r\n            .setLoop((i) => {\r\n              if (i < ci) {\r\n                return false;\r\n              }\r\n              if (number % cSize === 0) {\r\n                const value = minCi - cSize;\r\n                if (value >= 0) {\r\n                  minCi = value;\r\n                }\r\n              }\r\n              number += 1;\r\n              return true;\r\n            })\r\n            .execute();\r\n          if (minCi !== sci) {\r\n            autoFillRange = new RectRange(sri, minCi, eri, sci - 1);\r\n          }\r\n        } else {\r\n          const nextCol = xIteratorBuilder.getColIterator()\r\n            .setBegin(sci)\r\n            .setEnd(0)\r\n            .nextRow();\r\n          autoFillRange = new RectRange(sri, ci, eri, nextCol);\r\n        }\r\n      }\r\n      if (originSCi > eci) {\r\n        moveDirection = Serialize.SERIALIZE_DIRECTION.RIGHT;\r\n        if (hasFull) {\r\n          let maxCi = eci;\r\n          let number = 0;\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(eci + 1)\r\n            .setEnd(cols.len - 1)\r\n            .setLoop((i) => {\r\n              if (i > ci) {\r\n                return false;\r\n              }\r\n              if (number % cSize === 0) {\r\n                const value = maxCi + cSize;\r\n                if (value >= 0) {\r\n                  maxCi = value;\r\n                }\r\n              }\r\n              number += 1;\r\n              return true;\r\n            })\r\n            .execute();\r\n          if (maxCi !== eci) {\r\n            autoFillRange = new RectRange(sri, eci + 1, eri, maxCi);\r\n          }\r\n        } else {\r\n          const nextCol = xIteratorBuilder.getColIterator()\r\n            .setBegin(eci)\r\n            .setEnd(cols.len - 1)\r\n            .nextRow();\r\n          autoFillRange = new RectRange(sri, nextCol, eri, ci);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (autoFillRange) {\r\n      const width = cols.sectionSumWidth(autoFillRange.sci, autoFillRange.eci);\r\n      const height = rows.sectionSumHeight(autoFillRange.sri, autoFillRange.eri);\r\n      autoFillRange.w = width;\r\n      autoFillRange.h = height;\r\n    }\r\n    this.autoFillRange = autoFillRange;\r\n    this.moveDirection = moveDirection;\r\n  }\r\n\r\n  borderHandle() {\r\n    const { xScreen, autoFillRange, display } = this;\r\n    if (display === false || autoFillRange.equals(RectRange.EMPTY)) {\r\n      this.hideBorder();\r\n    } else {\r\n      const xSelect = xScreen.findType(XSelectItem);\r\n      const { selectRange } = xSelect;\r\n      const unionRange = selectRange.union(autoFillRange);\r\n      this.showBorder(unionRange);\r\n    }\r\n  }\r\n\r\n  offsetHandle() {\r\n    const { xScreen, autoFillRange, display } = this;\r\n    if (display === false || autoFillRange.equals(RectRange.EMPTY)) {\r\n      this.hide();\r\n    } else {\r\n      const xSelect = xScreen.findType(XSelectItem);\r\n      const { selectRange } = xSelect;\r\n      const unionRange = selectRange.union(autoFillRange);\r\n      this.show();\r\n      this.setDisplay(unionRange);\r\n      this.setSizer(unionRange);\r\n      this.setLocal(unionRange);\r\n    }\r\n  }\r\n\r\n  serialize() {\r\n    const { table, xScreen, autoFillRange, moveDirection } = this;\r\n    const { cellMergeCopyHelper } = table;\r\n    const { tableDataSnapshot } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    tableDataSnapshot.begin();\r\n    cellMergeCopyHelper.serializeContent({\r\n      originViewRange: autoFillRange.union(xSelect.selectRange),\r\n      direction: moveDirection,\r\n    });\r\n    tableDataSnapshot.end();\r\n    table.render();\r\n  }\r\n\r\n  autoFill() {\r\n    const { autoFillRange } = this;\r\n    if (autoFillRange.equals(RectRange.EMPTY)) {\r\n      return;\r\n    }\r\n    const { table, options } = this;\r\n    const { tableDataSnapshot } = table;\r\n    options.onBeforeAutoFill();\r\n    tableDataSnapshot.begin();\r\n    this.splitMerge();\r\n    this.fillMerge();\r\n    this.fillCellIN();\r\n    tableDataSnapshot.end();\r\n    options.onAfterAutoFill();\r\n    table.render();\r\n  }\r\n\r\n  fillMerge() {\r\n    const { table, xScreen, autoFillRange } = this;\r\n    const { cellMergeCopyHelper } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    cellMergeCopyHelper.copyMergeContent({\r\n      targetViewRange: autoFillRange,\r\n      originViewRange: xSelect.selectRange,\r\n    });\r\n  }\r\n\r\n  fillCellIN() {\r\n    const { table, xScreen, autoFillRange } = this;\r\n    const { cellMergeCopyHelper } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    cellMergeCopyHelper.copyCellINContent({\r\n      targetViewRange: autoFillRange,\r\n      originViewRange: xSelect.selectRange,\r\n    });\r\n  }\r\n\r\n  splitMerge() {\r\n    const { table, autoFillRange } = this;\r\n    const merges = table.getTableMerges();\r\n    const { tableDataSnapshot } = table;\r\n    const { mergeDataProxy } = tableDataSnapshot;\r\n    merges.getIncludes(autoFillRange, (merge) => {\r\n      mergeDataProxy.deleteMerge(merge);\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XAutoFillItem,\r\n};\r\n","import { Widget } from '../../../../libs/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\nimport { h } from '../../../../libs/Element';\r\n\r\nclass DropRowFixed extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-drop-row-fixed-bar`);\r\n    this.block = h('div', `${cssPrefix}-table-drop-row-fixed-block`);\r\n    this.children(this.block);\r\n    this.table = table;\r\n  }\r\n\r\n  onAttach() {\r\n    this.setSize();\r\n    this.hide();\r\n  }\r\n\r\n  setSize() {\r\n    const { table, block } = this;\r\n    const width = table.visualWidth();\r\n    const height = 6;\r\n    block.offset({\r\n      width: table.getIndexWidth(), height,\r\n    });\r\n    this.offset({\r\n      height, width, left: 0,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  DropRowFixed,\r\n};\r\n","import { Widget } from '../../../../libs/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\nimport { h } from '../../../../libs/Element';\r\n\r\nclass DropColFixed extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-drop-col-fixed-bar`);\r\n    this.block = h('div', `${cssPrefix}-table-drop-col-fixed-block`);\r\n    this.children(this.block);\r\n    this.table = table;\r\n  }\r\n\r\n  onAttach() {\r\n    this.setSize();\r\n    this.hide();\r\n  }\r\n\r\n  setSize() {\r\n    const { table, block } = this;\r\n    const height = table.visualHeight();\r\n    const width = 6;\r\n    block.offset({\r\n      height: table.getIndexHeight(), width,\r\n    });\r\n    this.offset({\r\n      height, width, top: 0,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  DropColFixed,\r\n};\r\n","import { RectRange } from './RectRange';\r\n\r\nclass XFixedView {\r\n\r\n  constructor({\r\n    fixedView = new RectRange(0, 0, -1, -1),\r\n    fxLeft = -1,\r\n    fxTop = -1,\r\n  }) {\r\n    this.fixedView = fixedView;\r\n    if (fxLeft > -1) {\r\n      this.fixedView.eci = fxLeft;\r\n    }\r\n    if (fxTop > -1) {\r\n      this.fixedView.eri = fxTop;\r\n    }\r\n  }\r\n\r\n  setFixedView(fixedView) {\r\n    this.fixedView = fixedView.clone();\r\n  }\r\n\r\n  getFixedView() {\r\n    return this.fixedView.clone();\r\n  }\r\n\r\n  hasFixedLeft() {\r\n    return this.fixedView.eci > -1;\r\n  }\r\n\r\n  hasFixedTop() {\r\n    return this.fixedView.eri > -1;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XFixedView,\r\n};\r\n","class DataProxy {\r\n\r\n  constructor() {\r\n    this.change = false;\r\n  }\r\n\r\n  endNotice() {\r\n    if (this.change) {\r\n      this.change = false;\r\n    }\r\n  }\r\n\r\n  backNotice() {\r\n    if (this.change) {\r\n      this.change = false;\r\n    }\r\n  }\r\n\r\n  goNotice() {\r\n    if (this.change) {\r\n      this.change = false;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { DataProxy };\r\n","import { DataProxy } from '../DataProxy';\r\nimport { Constant } from '../../../../const/Constant';\r\n\r\nclass TableCellDataProxy extends DataProxy {\r\n\r\n  constructor(snapshot, option = {\r\n    on: { setCell() {} },\r\n  }) {\r\n    super();\r\n    this.snapshot = snapshot;\r\n    this.option = option;\r\n  }\r\n\r\n  $setCell(ri, ci, newCell) {\r\n    this.change = true;\r\n    const { snapshot } = this;\r\n    const { cells } = snapshot;\r\n    cells.setCellOrNew(ri, ci, newCell);\r\n  }\r\n\r\n  setCell(ri, ci, newCell) {\r\n    const { option, snapshot } = this;\r\n    const { on } = option;\r\n    const { setCell } = on;\r\n    const { cells } = snapshot;\r\n    const oldCell = cells.getCell(ri, ci);\r\n    this.$setCell(ri, ci, newCell);\r\n    setCell(ri, ci, oldCell, newCell);\r\n  }\r\n\r\n  endNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.endNotice();\r\n  }\r\n\r\n  goNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.goNotice();\r\n  }\r\n\r\n  backNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.backNotice();\r\n  }\r\n}\r\n\r\nexport {\r\n  TableCellDataProxy,\r\n};\r\n","class CellDataRecord {\r\n  constructor({ ri, ci, oldCell, newCell }) {\r\n    this.ri = ri;\r\n    this.ci = ci;\r\n    this.oldCell = oldCell;\r\n    this.newCell = newCell;\r\n  }\r\n}\r\n\r\nexport { CellDataRecord };\r\n","const MERGE_RECORD_TYPE = {\r\n  ADD: Symbol('添加一个合并单元格'),\r\n  DELETE: Symbol('删除一个合并单元格'),\r\n};\r\n\r\nclass MergeDataRecord {\r\n  constructor({ merge, recordType }) {\r\n    this.merge = merge;\r\n    this.recordType = recordType;\r\n  }\r\n}\r\n\r\nexport {\r\n  MergeDataRecord,\r\n  MERGE_RECORD_TYPE,\r\n};\r\n","import { DataProxy } from '../DataProxy';\r\nimport { Constant } from '../../../../const/Constant';\r\n\r\nclass TableMergeDataProxy extends DataProxy {\r\n\r\n  constructor(snapshot, option = {\r\n    on: {\r\n      addMerge() {}, deleteMerge() {},\r\n    },\r\n  }) {\r\n    super();\r\n    this.snapshot = snapshot;\r\n    this.option = option;\r\n  }\r\n\r\n  $addMerge(merge) {\r\n    this.change = true;\r\n    const { snapshot } = this;\r\n    const { merges } = snapshot;\r\n    merges.getIncludes(merge, merge => this.deleteMerge(merge));\r\n    merges.add(merge, false);\r\n  }\r\n\r\n  $deleteMerge(merge) {\r\n    this.change = true;\r\n    const { snapshot } = this;\r\n    const { merges } = snapshot;\r\n    merges.delete(merge);\r\n  }\r\n\r\n  deleteMerge(merge) {\r\n    const { option } = this;\r\n    const { on } = option;\r\n    const { deleteMerge } = on;\r\n    this.$deleteMerge(merge);\r\n    deleteMerge(merge);\r\n  }\r\n\r\n  addMerge(merge) {\r\n    const { option } = this;\r\n    const { on } = option;\r\n    const { addMerge } = on;\r\n    this.$addMerge(merge);\r\n    addMerge(merge);\r\n  }\r\n\r\n  endNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.endNotice();\r\n  }\r\n\r\n  goNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.goNotice();\r\n  }\r\n\r\n  backNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.backNotice();\r\n  }\r\n\r\n}\r\n\r\nexport { TableMergeDataProxy };\r\n","import { DataProxy } from '../DataProxy';\r\nimport { Constant } from '../../../../const/Constant';\r\n\r\nclass TableColsDataProxy extends DataProxy {\r\n\r\n  constructor(snapshot, option = {\r\n    on: { setWidth() {} },\r\n  }) {\r\n    super();\r\n    this.snapshot = snapshot;\r\n    this.option = option;\r\n  }\r\n\r\n  $setWidth(ci, width) {\r\n    this.change = true;\r\n    const { snapshot } = this;\r\n    const { cols } = snapshot;\r\n    cols.setWidth(ci, width);\r\n  }\r\n\r\n  setWidth(ci, newWidth) {\r\n    const { option, snapshot } = this;\r\n    const { on } = option;\r\n    const { setWidth } = on;\r\n    const { cols } = snapshot;\r\n    const oldWidth = cols.getWidth(ci);\r\n    this.$setWidth(ci, newWidth);\r\n    setWidth(ci, oldWidth, newWidth);\r\n  }\r\n\r\n  endNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH);\r\n    }\r\n    super.endNotice();\r\n  }\r\n\r\n  backNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH);\r\n    }\r\n    super.backNotice();\r\n  }\r\n\r\n  goNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH);\r\n    }\r\n    super.goNotice();\r\n  }\r\n}\r\n\r\nexport { TableColsDataProxy };\r\n","class ColsDataRecord {\r\n  constructor({ ci, oldWidth, newWidth }) {\r\n    this.ci = ci;\r\n    this.oldWidth = oldWidth;\r\n    this.newWidth = newWidth;\r\n  }\r\n}\r\n\r\nexport { ColsDataRecord };\r\n","import { DataProxy } from '../DataProxy';\r\nimport { Constant } from '../../../../const/Constant';\r\n\r\nclass TableRowsDataProxy extends DataProxy {\r\n\r\n  constructor(snapshot, option = {\r\n    on: {\r\n      setHeight() {},\r\n    },\r\n  }) {\r\n    super();\r\n    this.snapshot = snapshot;\r\n    this.option = option;\r\n  }\r\n\r\n  $setHeight(ri, height) {\r\n    this.change = true;\r\n    const { snapshot } = this;\r\n    const { rows } = snapshot;\r\n    rows.setHeight(ri, height);\r\n  }\r\n\r\n  setHeight(ri, newHeight) {\r\n    const { option, snapshot } = this;\r\n    const { on } = option;\r\n    const { setHeight } = on;\r\n    const { rows } = snapshot;\r\n    const oldHeight = rows.getHeight(ri);\r\n    this.$setHeight(ri, newHeight);\r\n    setHeight(ri, oldHeight, newHeight);\r\n  }\r\n\r\n  endNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT);\r\n    }\r\n    super.endNotice();\r\n  }\r\n\r\n  backNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT);\r\n    }\r\n    super.backNotice();\r\n  }\r\n\r\n  goNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT);\r\n    }\r\n    super.goNotice();\r\n  }\r\n}\r\n\r\nexport { TableRowsDataProxy };\r\n","class RowsDataRecord {\r\n  constructor({ ri, oldHeight, newHeight }) {\r\n    this.ri = ri;\r\n    this.oldHeight = oldHeight;\r\n    this.newHeight = newHeight;\r\n  }\r\n}\r\n\r\nexport { RowsDataRecord };\r\n","import { TableCellDataProxy } from './proxy/TableCellDataProxy';\r\nimport { CellDataRecord } from './record/CellDataRecord';\r\nimport { MERGE_RECORD_TYPE, MergeDataRecord } from './record/MergeDataRecord';\r\nimport { ChartDataRecord } from './record/ChartDataRecord';\r\nimport { TableMergeDataProxy } from './proxy/TableMergeDataProxy';\r\nimport { TableColsDataProxy } from './proxy/TableColsDataProxy';\r\nimport { ColsDataRecord } from './record/ColsDataRecord';\r\nimport { TableRowsDataProxy } from './proxy/TableRowsDataProxy';\r\nimport { RowsDataRecord } from './record/RowsDataRecord';\r\n\r\nclass TableDataSnapshot {\r\n\r\n  constructor({\r\n    table, cells, merges, cols, rows,\r\n  }) {\r\n    this.record = false;\r\n    this.backLayerStack = [];\r\n    this.recordLayer = [];\r\n    this.goLayerStack = [];\r\n    this.table = table;\r\n    this.cells = cells;\r\n    this.merges = merges;\r\n    this.cols = cols;\r\n    this.rows = rows;\r\n    this.mergeDataProxy = new TableMergeDataProxy(this, {\r\n      on: {\r\n        deleteMerge: (merge) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new MergeDataRecord({ merge, recordType: MERGE_RECORD_TYPE.DELETE }));\r\n        },\r\n        addMerge: (merge) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new MergeDataRecord({ merge, recordType: MERGE_RECORD_TYPE.ADD }));\r\n        },\r\n      },\r\n    });\r\n    this.cellDataProxy = new TableCellDataProxy(this, {\r\n      on: {\r\n        setCell: (ri, ci, oldCell, newCell) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new CellDataRecord({ ri, ci, oldCell, newCell }));\r\n        },\r\n      },\r\n    });\r\n    this.colsDataProxy = new TableColsDataProxy(this, {\r\n      on: {\r\n        setWidth: (ci, oldWidth, newWidth) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new ColsDataRecord({ ci, oldWidth, newWidth }));\r\n        },\r\n      },\r\n    });\r\n    this.rowsDataProxy = new TableRowsDataProxy(this, {\r\n      on: {\r\n        setHeight: (ri, oldHeight, newHeight) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new RowsDataRecord({ ri, oldHeight, newHeight }));\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  back() {\r\n    const { backLayerStack, goLayerStack, table } = this;\r\n    const layer = backLayerStack.pop();\r\n    for (let i = layer.length - 1; i >= 0; i -= 1) {\r\n      const item = layer[i];\r\n      // 单元格元素\r\n      if (item instanceof CellDataRecord) {\r\n        const { ri, ci, oldCell } = item;\r\n        this.cellDataProxy.$setCell(ri, ci, oldCell);\r\n        continue;\r\n      }\r\n      // 合并单元格元素\r\n      if (item instanceof MergeDataRecord) {\r\n        const { recordType } = item;\r\n        switch (recordType) {\r\n          case MERGE_RECORD_TYPE.DELETE: {\r\n            const { merge } = item;\r\n            this.mergeDataProxy.$addMerge(merge);\r\n            break;\r\n          }\r\n          case MERGE_RECORD_TYPE.ADD: {\r\n            const { merge } = item;\r\n            this.mergeDataProxy.$deleteMerge(merge);\r\n            break;\r\n          }\r\n          default: break;\r\n        }\r\n        continue;\r\n      }\r\n      // 图表元素\r\n      if (item instanceof ChartDataRecord) {\r\n        // TODO...\r\n        // ...\r\n      }\r\n      //  列宽元素\r\n      if (item instanceof ColsDataRecord) {\r\n        const { ci, oldWidth } = item;\r\n        this.colsDataProxy.$setWidth(ci, oldWidth);\r\n        continue;\r\n      }\r\n      // 行高元素\r\n      if (item instanceof RowsDataRecord) {\r\n        const { ri, oldHeight } = item;\r\n        this.rowsDataProxy.$setHeight(ri, oldHeight);\r\n      }\r\n    }\r\n    goLayerStack.push(layer);\r\n    this.mergeDataProxy.backNotice();\r\n    this.cellDataProxy.backNotice();\r\n    this.colsDataProxy.backNotice();\r\n    this.rowsDataProxy.backNotice();\r\n    table.render();\r\n  }\r\n\r\n  go() {\r\n    const { backLayerStack, goLayerStack, table } = this;\r\n    const layer = goLayerStack.pop();\r\n    for (let i = 0, len = layer.length; i < len; i += 1) {\r\n      const item = layer[i];\r\n      // 单元格元素\r\n      if (item instanceof CellDataRecord) {\r\n        const { ri, ci, newCell } = item;\r\n        this.cellDataProxy.$setCell(ri, ci, newCell);\r\n        continue;\r\n      }\r\n      // 合并单元格元素\r\n      if (item instanceof MergeDataRecord) {\r\n        const { recordType } = item;\r\n        switch (recordType) {\r\n          case MERGE_RECORD_TYPE.DELETE: {\r\n            const { merge } = item;\r\n            this.mergeDataProxy.$deleteMerge(merge);\r\n            break;\r\n          }\r\n          case MERGE_RECORD_TYPE.ADD: {\r\n            const { merge } = item;\r\n            this.mergeDataProxy.$addMerge(merge);\r\n            break;\r\n          }\r\n          default: break;\r\n        }\r\n        continue;\r\n      }\r\n      // 图表元素\r\n      if (item instanceof ChartDataRecord) {\r\n        // TODO...\r\n        // ...\r\n      }\r\n      //  列宽元素\r\n      if (item instanceof ColsDataRecord) {\r\n        const { ci, newWidth } = item;\r\n        this.colsDataProxy.$setWidth(ci, newWidth);\r\n        continue;\r\n      }\r\n      // 行高元素\r\n      if (item instanceof RowsDataRecord) {\r\n        const { ri, newHeight } = item;\r\n        this.rowsDataProxy.$setHeight(ri, newHeight);\r\n      }\r\n    }\r\n    backLayerStack.push(layer);\r\n    this.mergeDataProxy.goNotice();\r\n    this.cellDataProxy.goNotice();\r\n    this.colsDataProxy.goNotice();\r\n    this.rowsDataProxy.goNotice();\r\n    table.render();\r\n  }\r\n\r\n  end() {\r\n    const { recordLayer, backLayerStack } = this;\r\n    this.record = false;\r\n    if (recordLayer.length) {\r\n      backLayerStack.push(recordLayer);\r\n    }\r\n    this.recordLayer = [];\r\n    this.mergeDataProxy.endNotice();\r\n    this.cellDataProxy.endNotice();\r\n    this.colsDataProxy.endNotice();\r\n    this.rowsDataProxy.endNotice();\r\n  }\r\n\r\n  begin() {\r\n    this.record = true;\r\n    this.goLayerStack = [];\r\n  }\r\n\r\n  canBack() {\r\n    const { backLayerStack } = this;\r\n    return backLayerStack.length !== 0;\r\n  }\r\n\r\n  canGo() {\r\n    const { goLayerStack } = this;\r\n    return goLayerStack.length !== 0;\r\n  }\r\n\r\n}\r\n\r\nexport { TableDataSnapshot };\r\n","import { XEvent } from './XEvent';\r\n\r\nclass Clipboard {\r\n\r\n  constructor({\r\n    target = document.body,\r\n    filter = () => false,\r\n    paste = () => {},\r\n  } = {}) {\r\n    this.target = target;\r\n    this.filter = filter;\r\n    this.paste = paste;\r\n    this.bind();\r\n  }\r\n\r\n  bind() {\r\n    const { target, paste, filter } = this;\r\n    XEvent.bind(target, \"paste\", (e) => {\r\n      if (filter()) {\r\n        paste(e);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Clipboard\r\n}\r\n","\r\n/**\r\n * XIconFocus\r\n */\r\nclass XIconFocus {\r\n\r\n  constructor(icon = null) {\r\n    this.activate = icon;\r\n  }\r\n\r\n  setActivate(icon) {\r\n    this.activate = icon;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XIconFocus,\r\n};\r\n","import { XIcon } from './XIcon';\r\nimport { XIconFocus } from './XIconFocus';\r\n\r\n/**\r\n * XIconBuilder\r\n */\r\nclass XIconBuilder {\r\n\r\n  /**\r\n   * 图标事件处理\r\n   * @param type\r\n   * @param native\r\n   * @param staticIcons\r\n   * @param fixedIcons\r\n   * @param sx\r\n   * @param sy\r\n   * @param fx\r\n   * @param fy\r\n   */\r\n  xIconsEvent({\r\n    type,\r\n    native,\r\n    sx,\r\n    sy,\r\n    fx,\r\n    fy,\r\n    staticIcons = [],\r\n    fixedIcons = [],\r\n  }) {\r\n    if (staticIcons.length + fixedIcons.length === 0) {\r\n      this.clearFocus();\r\n    } else {\r\n      staticIcons.forEach((icon) => {\r\n        icon.eventHandle({\r\n          type, x: sx, y: sy, native,\r\n        });\r\n      });\r\n      fixedIcons.forEach((icon) => {\r\n        icon.eventHandle({\r\n          type, x: fx, y: fy, native,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清空焦点元素\r\n   */\r\n  clearFocus() {\r\n    const { focus } = this;\r\n    const { activate } = focus;\r\n    if (activate) {\r\n      focus.setActivate(null);\r\n      activate.onLeave();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * XIconBuilder\r\n   * @param focus\r\n   */\r\n  constructor({\r\n    focus = new XIconFocus(),\r\n  } = {}) {\r\n    this.focus = focus;\r\n  }\r\n\r\n  /**\r\n   * 构建小图标\r\n   * @param options\r\n   * @returns {XIcon}\r\n   */\r\n  build(options = {}) {\r\n    const { focus } = this;\r\n    const xIcon = new XIcon(options);\r\n    xIcon.setFocus(focus);\r\n    return xIcon;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XIconBuilder,\r\n};\r\n","class BaseIterator {\r\n\r\n  constructor() {\r\n    this.finishCallback = () => {};\r\n    this.loopCallback = () => {};\r\n    this.nextCallback = () => {};\r\n    this.end = 0;\r\n    this.begin = 0;\r\n  }\r\n\r\n  execute() {\r\n    const {\r\n      loopCallback, nextCallback,\r\n    } = this;\r\n    const {\r\n      begin, end,\r\n    } = this;\r\n    let i;\r\n    if (begin > end) {\r\n      i = begin;\r\n      for (; i >= end; i -= 1, nextCallback(i)) {\r\n        const res = loopCallback(i);\r\n        if (res === false) {\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      i = begin;\r\n      for (; i <= end; i += 1, nextCallback(i)) {\r\n        const res = loopCallback(i);\r\n        if (res === false) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.finishCallback(i);\r\n    return this;\r\n  }\r\n\r\n  setLoop(callback) {\r\n    this.loopCallback = callback;\r\n    return this;\r\n  }\r\n\r\n  setNext(callback) {\r\n    this.nextCallback = callback;\r\n    return this;\r\n  }\r\n\r\n  setFinish(callback) {\r\n    this.finishCallback = callback;\r\n    return this;\r\n  }\r\n\r\n  setEnd(end) {\r\n    this.end = end;\r\n    return this;\r\n  }\r\n\r\n  setBegin(begin) {\r\n    this.begin = begin;\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  BaseIterator,\r\n};\r\n","import { BaseIterator } from './BaseIterator';\r\n\r\nlet fold = [];\r\n\r\nclass RowsIterator extends BaseIterator {\r\n\r\n  static getInstance() {\r\n    return new RowsIterator();\r\n  }\r\n\r\n  static setFold(value) {\r\n    fold = value;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.skipCallback = () => {};\r\n    this.useFold = true;\r\n  }\r\n\r\n  execute() {\r\n    const {\r\n      loopCallback, nextCallback, skipCallback,\r\n    } = this;\r\n    const {\r\n      begin, end, useFold,\r\n    } = this;\r\n    let i;\r\n    if (begin > end) {\r\n      i = begin;\r\n      for (; i >= end; i -= 1, nextCallback(i)) {\r\n        if (useFold && fold[i]) {\r\n          skipCallback(i);\r\n          continue;\r\n        }\r\n        const res = loopCallback(i);\r\n        if (res === false) {\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      i = begin;\r\n      for (; i <= end; i += 1, nextCallback(i)) {\r\n        if (useFold && fold[i]) {\r\n          skipCallback(i);\r\n          continue;\r\n        }\r\n        const res = loopCallback(i);\r\n        if (res === false) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.finishCallback(i);\r\n    return this;\r\n  }\r\n\r\n  setSkip(callback) {\r\n    this.skipCallback = callback;\r\n    return this;\r\n  }\r\n\r\n  nextRow() {\r\n    const { begin } = this;\r\n    let ri = -1;\r\n    this.setLoop((i) => {\r\n      if (i !== begin) {\r\n        ri = i;\r\n        return false;\r\n      }\r\n      return true;\r\n    }).execute();\r\n    return ri;\r\n  }\r\n\r\n  hasFold() {\r\n    let find = false;\r\n    this.setLoop((i) => {\r\n      if (fold[i]) {\r\n        find = true;\r\n        return false;\r\n      }\r\n      return true;\r\n    }).foldOnOff(false).execute();\r\n    return find;\r\n  }\r\n\r\n  foldOnOff(onOff) {\r\n    this.useFold = onOff;\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RowsIterator,\r\n};\r\n","import { BaseIterator } from './BaseIterator';\r\n\r\nclass ColsIterator extends BaseIterator {\r\n\r\n  nextRow() {\r\n    const { begin } = this;\r\n    let ci = -1;\r\n    this.setLoop((i) => {\r\n      if (i !== begin) {\r\n        ci = i;\r\n        return false;\r\n      }\r\n      return true;\r\n    }).execute();\r\n    return ci;\r\n  }\r\n\r\n  static getInstance() {\r\n    return new ColsIterator();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  ColsIterator,\r\n};\r\n","import { RowsIterator } from './RowsIterator';\r\nimport { ColsIterator } from './ColsIterator';\r\n\r\nclass XIteratorBuilder {\r\n\r\n  getRowIterator() {\r\n    return RowsIterator.getInstance();\r\n  }\r\n\r\n  getColIterator() {\r\n    return ColsIterator.getInstance();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XIteratorBuilder,\r\n};\r\n","class RowHeightGroupIndex {\r\n\r\n  constructor({\r\n    group = 1000,\r\n    xFixedView,\r\n    rows,\r\n    xIteratorBuilder,\r\n  }) {\r\n    this.groupIndex = [];\r\n    this.rows = rows;\r\n    this.group = group;\r\n    this.xFixedView = xFixedView;\r\n    this.xIteratorBuilder = xIteratorBuilder;\r\n    this.clear();\r\n  }\r\n\r\n  min() {\r\n    let { xFixedView } = this;\r\n    let fixedView = xFixedView.getFixedView();\r\n    let min = 0;\r\n    if (xFixedView.hasFixedTop()) {\r\n      min = fixedView.eri + 1;\r\n    }\r\n    return min;\r\n  }\r\n\r\n  limit(ri, top, max) {\r\n    let { groupIndex, group, rows } = this;\r\n    let find = groupIndex[0];\r\n    let end = rows.len - 1;\r\n    top += rows.getHeight(ri);\r\n    ri += 1;\r\n    this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(ri)\r\n      .setEnd(end)\r\n      .setSkip((ri) => {\r\n        if (ri % group === 0) {\r\n          groupIndex.push({ ri, top });\r\n        }\r\n      })\r\n      .setLoop((ri) => {\r\n        if (ri % group === 0) {\r\n          groupIndex.push({\r\n            ri, top,\r\n          });\r\n          if (top > max) {\r\n            let { length } = groupIndex;\r\n            find = groupIndex[length - 2];\r\n            return false;\r\n          }\r\n        }\r\n        top += rows.getHeight(ri);\r\n        return true;\r\n      })\r\n      .execute();\r\n    return find;\r\n  }\r\n\r\n  clear() {\r\n    let min = this.min();\r\n    this.groupIndex = [{ ri: min, top: 0 }];\r\n  }\r\n\r\n  get(scroll) {\r\n    let { groupIndex, group, rows } = this;\r\n    let { length } = groupIndex;\r\n    if (rows.len <= group) {\r\n      return groupIndex[0];\r\n    }\r\n    if (scroll === 0) {\r\n      return groupIndex[0];\r\n    }\r\n    for (let i = 0; i < length; i++) {\r\n      let item = groupIndex[i];\r\n      if (item.top > scroll) {\r\n        return groupIndex[i - 1];\r\n      }\r\n    }\r\n    let last = groupIndex[length - 1];\r\n    let { ri, top } = last;\r\n    return this.limit(ri, top, scroll);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RowHeightGroupIndex,\r\n};\r\n","import { PlainUtils } from '../../utils/PlainUtils';\r\nimport { Code } from './tablebase/Code';\r\nimport { Rows } from './tablebase/Rows';\r\nimport { Cols } from './tablebase/Cols';\r\nimport { Scroll, SCROLL_TYPE } from './tablebase/Scroll';\r\nimport { Widget } from '../../libs/Widget';\r\nimport { Constant, cssPrefix } from '../../const/Constant';\r\nimport { XEvent } from '../../libs/XEvent';\r\nimport { Scale, ScaleAdapter } from './tablebase/Scale';\r\nimport { XTableMousePointer } from './XTableMousePointer';\r\nimport { XTableKeyboard } from './XTableKeyboard';\r\nimport { XReSizer } from './resizer/XReSizer';\r\nimport { YReSizer } from './resizer/YReSizer';\r\nimport { XHeightLight } from './highlight/XHeightLight';\r\nimport { YHeightLight } from './highlight/YHeightLight';\r\nimport { XTableFocus } from './XTableFocus';\r\nimport { XDraw } from '../../canvas/XDraw';\r\nimport { RectRange } from './tablebase/RectRange';\r\nimport { XTableScrollView } from './XTableScrollView';\r\nimport { XTableAreaView } from './XTableAreaView';\r\nimport { XTableEdit } from './XTableEdit';\r\nimport { XTableStyle } from './XTableStyle';\r\nimport { XScreen } from './xscreen/XScreen';\r\nimport { XSelectItem } from './xscreenitems/xselect/XSelectItem';\r\nimport { XAutoFillItem } from './xscreenitems/xautofill/XAutoFillItem';\r\nimport { XCopyStyle } from './xscreenitems/xcopystyle/XCopyStyle';\r\nimport { RowFixed } from './tablefixed/RowFixed';\r\nimport { ColFixed } from './tablefixed/ColFixed';\r\nimport { DropRowFixed } from './tablefixed/drop/DropRowFixed';\r\nimport { DropColFixed } from './tablefixed/drop/DropColFixed';\r\nimport { XFixedMeasure } from './tablebase/XFixedMeasure';\r\nimport { XFixedView } from './tablebase/XFixedView';\r\nimport { XFilter } from './xscreenitems/xfilter/XFilter';\r\nimport { TableDataSnapshot } from './datasnapshot/TableDataSnapshot';\r\nimport { CellMergeCopyHelper } from './helper/CellMergeCopyHelper';\r\nimport { Clipboard } from '../../libs/Clipboard';\r\nimport { XIcon } from './xicon/XIcon';\r\nimport { XIconBuilder } from './xicon/XIconBuilder';\r\nimport { BaseFont } from '../../canvas/font/BaseFont';\r\nimport { XIteratorBuilder } from './iterator/XIteratorBuilder';\r\nimport { RowHeightGroupIndex } from './tablebase/RowHeightGroupIndex';\r\n\r\nclass Dimensions {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n    this.scrollView = null;\r\n    this.width = null;\r\n    this.height = null;\r\n    this.x = null;\r\n    this.y = null;\r\n  }\r\n\r\n  reset() {\r\n    this.scrollView = null;\r\n    this.width = null;\r\n    this.height = null;\r\n    this.x = null;\r\n    this.y = null;\r\n  }\r\n\r\n  getX() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getY() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getHeight() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getWidth() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n}\r\n\r\n// ============================== 表格区域信息 ===============================\r\n\r\nclass XTableFrozenContent extends Dimensions {\r\n\r\n  getWidth() {\r\n    if (PlainUtils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { xFixedMeasure } = table;\r\n    const width = xFixedMeasure.getWidth();\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (PlainUtils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { xFixedMeasure } = table;\r\n    const height = xFixedMeasure.getHeight();\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (PlainUtils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const x = index.getWidth();\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (PlainUtils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const y = index.getHeight();\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { rows, cols } = table;\r\n    const { xFixedView } = table;\r\n    const view = xFixedView.getFixedView();\r\n    view.w = cols.rectRangeSumWidth(view);\r\n    view.h = rows.rectRangeSumHeight(view);\r\n    this.scrollView = view;\r\n    return view.clone();\r\n  }\r\n\r\n}\r\n\r\nclass XTableTopIndex extends Dimensions {\r\n\r\n  getWidth() {\r\n    if (PlainUtils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { xLeft } = table;\r\n    const { index } = table;\r\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (PlainUtils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const height = index.getHeight();\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (PlainUtils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const { table } = this;\r\n    const { xLeft } = table;\r\n    const { index } = table;\r\n    const x = index.getWidth() + xLeft.getWidth();\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (PlainUtils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const y = 0;\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const { xTableAreaView } = table;\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    scrollView.sri = 0;\r\n    scrollView.eri = 0;\r\n    scrollView.h = index.getHeight();\r\n    this.scrollView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n}\r\n\r\nclass XTableLeftIndex extends Dimensions {\r\n\r\n  getWidth() {\r\n    if (PlainUtils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const width = index.getWidth();\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (PlainUtils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { xTop } = table;\r\n    const { index } = table;\r\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (PlainUtils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const x = 0;\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (PlainUtils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const { table } = this;\r\n    const { xTop } = table;\r\n    const { index } = table;\r\n    const y = index.getHeight() + xTop.getHeight();\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const { index } = table;\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    scrollView.sci = 0;\r\n    scrollView.eci = 0;\r\n    scrollView.w = index.getWidth();\r\n    this.scrollView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n}\r\n\r\nclass XTableLeft extends Dimensions {\r\n\r\n  getWidth() {\r\n    if (PlainUtils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { xFixedMeasure } = table;\r\n    const width = xFixedMeasure.getWidth();\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (PlainUtils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { xTop } = table;\r\n    const { index } = table;\r\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (PlainUtils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const x = index.getWidth();\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (PlainUtils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const { table } = this;\r\n    const { xTop } = table;\r\n    const { index } = table;\r\n    const y = index.getHeight() + xTop.getHeight();\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { xFixedView } = table;\r\n    const { cols } = table;\r\n    const { xTableAreaView } = table;\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    const fixedView = xFixedView.getFixedView();\r\n    scrollView.sci = fixedView.sci;\r\n    scrollView.eci = fixedView.eci;\r\n    scrollView.w = cols.sectionSumWidth(scrollView.sci, scrollView.eci);\r\n    this.scrollView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n}\r\n\r\nclass XTableTop extends Dimensions {\r\n\r\n  getWidth() {\r\n    if (PlainUtils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { xLeft } = table;\r\n    const { index } = table;\r\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (PlainUtils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { xFixedMeasure } = table;\r\n    const height = xFixedMeasure.getHeight();\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (PlainUtils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const { table } = this;\r\n    const { xLeft } = table;\r\n    const { index } = table;\r\n    const x = index.getWidth() + xLeft.getWidth();\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (PlainUtils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const y = index.getHeight();\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { xFixedView } = table;\r\n    const { rows } = table;\r\n    const { xTableAreaView } = table;\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    const fixedView = xFixedView.getFixedView();\r\n    scrollView.sri = fixedView.sri;\r\n    scrollView.eri = fixedView.eri;\r\n    scrollView.h = rows.sectionSumHeight(scrollView.sri, scrollView.eri);\r\n    this.scrollView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n}\r\n\r\nclass XTableContent extends Dimensions {\r\n\r\n  getWidth() {\r\n    if (PlainUtils.isNumber(this.width)) {\r\n      return this.width;\r\n    }\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const { xLeft } = table;\r\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\r\n    this.width = width;\r\n    return width;\r\n  }\r\n\r\n  getHeight() {\r\n    if (PlainUtils.isNumber(this.height)) {\r\n      return this.height;\r\n    }\r\n    const { table } = this;\r\n    const { xTop } = table;\r\n    const { index } = table;\r\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\r\n    this.height = height;\r\n    return height;\r\n  }\r\n\r\n  getX() {\r\n    if (PlainUtils.isNumber(this.x)) {\r\n      return this.x;\r\n    }\r\n    const { table } = this;\r\n    const { xLeft } = table;\r\n    const { index } = table;\r\n    const x = index.getWidth() + xLeft.getWidth();\r\n    this.x = x;\r\n    return x;\r\n  }\r\n\r\n  getY() {\r\n    if (PlainUtils.isNumber(this.y)) {\r\n      return this.y;\r\n    }\r\n    const { table } = this;\r\n    const { xTop } = table;\r\n    const { index } = table;\r\n    const y = index.getHeight() + xTop.getHeight();\r\n    this.y = y;\r\n    return y;\r\n  }\r\n\r\n  getScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { table } = this;\r\n    const { xTableAreaView } = table;\r\n    const scrollView = xTableAreaView.getScrollView();\r\n    this.scrollView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n}\r\n\r\n// ================================= 快捷键 =================================\r\n\r\nclass KeyBoardTabCode {\r\n\r\n  static register(table) {\r\n    const {\r\n      keyboard, cols, rows, xScreen, edit,\r\n    } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const merges = table.getTableMerges();\r\n    let $tabNext = null;\r\n    keyboard.register({\r\n      target: table,\r\n      keyCode: 9,\r\n      callback: () => {\r\n        edit.hideEdit();\r\n        const { selectRange } = xSelect;\r\n        const { tabNext } = selectRange;\r\n        const rect = selectRange.clone();\r\n        if (!tabNext) {\r\n          const { sri, sci } = rect;\r\n          $tabNext = { sri, sci };\r\n        }\r\n        const cLen = cols.len - 1;\r\n        const rLen = rows.len - 1;\r\n        let { sri, sci } = $tabNext;\r\n        const srcMerges = merges.getFirstIncludes(sri, sci);\r\n        if (srcMerges) {\r\n          sci = srcMerges.eci;\r\n        }\r\n        if (sci >= cLen && sri >= rLen) {\r\n          return;\r\n        }\r\n        if (sci >= cLen) {\r\n          sri += 1;\r\n          sci = 0;\r\n        } else {\r\n          sci += 1;\r\n        }\r\n        $tabNext.sri = sri;\r\n        $tabNext.sci = sci;\r\n        let eri = sri;\r\n        let eci = sci;\r\n        const targetMerges = merges.getFirstIncludes(sri, sci);\r\n        if (targetMerges) {\r\n          sri = targetMerges.sri;\r\n          sci = targetMerges.sci;\r\n          eri = targetMerges.eri;\r\n          eci = targetMerges.eci;\r\n        }\r\n        rect.tabNext = true;\r\n        rect.sri = sri;\r\n        rect.sci = sci;\r\n        rect.eri = eri;\r\n        rect.eci = eci;\r\n        xSelect.setRange(rect);\r\n        edit.showEdit();\r\n      },\r\n    });\r\n  }\r\n\r\n}\r\n\r\n// ================================= XTable ================================\r\n\r\n/**\r\n * XTable\r\n */\r\nclass XTableDimensions extends Widget {\r\n\r\n  /**\r\n   * XTable\r\n   * @param settings\r\n   */\r\n  constructor({ settings }) {\r\n    super(`${cssPrefix}-table`);\r\n    // 表格设置\r\n    this.settings = PlainUtils.mergeDeep({\r\n      index: {\r\n        height: 30,\r\n        width: 50,\r\n        gridColor: '#c1c1c1',\r\n        size: 11,\r\n        color: '#000000',\r\n      },\r\n      table: {\r\n        showGrid: true,\r\n        background: '#ffffff',\r\n        borderColor: '#000000',\r\n        gridColor: '#e1e1e1',\r\n      },\r\n      rows: {\r\n        len: 1000,\r\n        height: 30,\r\n        data: [],\r\n      },\r\n      cols: {\r\n        len: 36,\r\n        width: 110,\r\n        data: [],\r\n      },\r\n      xFixedView: {\r\n        fixedView: new RectRange(0, 0, -1, -1),\r\n        fxLeft: -1,\r\n        fxTop: -1,\r\n      },\r\n      xFixedBar: {\r\n        height: RowFixed.HEIGHT,\r\n        width: ColFixed.WIDTH,\r\n        background: '#eaeaea',\r\n        buttonColor: '#c1c1c1',\r\n      },\r\n      data: [],\r\n      merge: {\r\n        merges: [],\r\n      },\r\n    }, settings);\r\n    // 视口区域大小\r\n    this.visualHeightCache = null;\r\n    this.visualWidthCache = null;\r\n    // 图标创建器\r\n    this.xIconBuilder = new XIconBuilder();\r\n    // 行列迭代器\r\n    this.xIteratorBuilder = new XIteratorBuilder();\r\n    // 表格数据配置\r\n    this.scale = new Scale();\r\n    this.index = new Code({\r\n      scaleAdapter: new ScaleAdapter({\r\n        goto: v => XDraw.srcTransformCssPx(this.scale.goto(v)),\r\n      }),\r\n      ...this.settings.index,\r\n    });\r\n    this.rows = new Rows({\r\n      scaleAdapter: new ScaleAdapter({\r\n        goto: v => XDraw.srcTransformCssPx(this.scale.goto(v)),\r\n      }),\r\n      xIteratorBuilder: this.xIteratorBuilder,\r\n      ...this.settings.rows,\r\n    });\r\n    this.cols = new Cols({\r\n      scaleAdapter: new ScaleAdapter({\r\n        goto: v => XDraw.srcTransformCssPx(this.scale.goto(v)),\r\n      }),\r\n      xIteratorBuilder: this.xIteratorBuilder,\r\n      ...this.settings.cols,\r\n    });\r\n    // 冻结视图坐标\r\n    this.xFixedView = new XFixedView(this.settings.xFixedView);\r\n    this.xFixedMeasure = new XFixedMeasure({\r\n      fixedView: this.xFixedView,\r\n      cols: this.cols,\r\n      rows: this.rows,\r\n    });\r\n    // 滚动视图的坐标\r\n    this.scroll = new Scroll({\r\n      xFixedView: this.xFixedView,\r\n    });\r\n    // 表格滚动视图\r\n    this.xTableScrollView = new XTableScrollView({\r\n      scroll: this.scroll,\r\n      rows: this.rows,\r\n      cols: this.cols,\r\n      xIteratorBuilder: this.xIteratorBuilder,\r\n      getHeight: () => this.xContent.getHeight(),\r\n      getWidth: () => this.xContent.getWidth(),\r\n    });\r\n    // 表格视图区域\r\n    this.xTableAreaView = new XTableAreaView({\r\n      xTableScrollView: this.xTableScrollView,\r\n      rows: this.rows,\r\n      cols: this.cols,\r\n      scroll: this.scroll,\r\n    });\r\n    // 表格界面\r\n    this.xTableStyle = new XTableStyle({\r\n      xTableScrollView: this.xTableScrollView,\r\n      scroll: this.scroll,\r\n      xIteratorBuilder: this.xIteratorBuilder,\r\n      settings: this.settings,\r\n      xFixedView: this.xFixedView,\r\n    });\r\n    // 数据快照\r\n    this.tableDataSnapshot = new TableDataSnapshot({\r\n      merges: this.getTableMerges(),\r\n      cells: this.getTableCells(),\r\n      table: this,\r\n      cols: this.cols,\r\n      rows: this.rows,\r\n    });\r\n    // table区域\r\n    this.xTableFrozenContent = new XTableFrozenContent(this);\r\n    this.xLeftIndex = new XTableLeftIndex(this);\r\n    this.xTopIndex = new XTableTopIndex(this);\r\n    this.xLeft = new XTableLeft(this);\r\n    this.xTop = new XTableTop(this);\r\n    this.xContent = new XTableContent(this);\r\n    // table组件\r\n    this.focus = new XTableFocus(this);\r\n    this.mousePointer = new XTableMousePointer(this);\r\n    this.keyboard = new XTableKeyboard(this);\r\n    this.xScreen = new XScreen(this);\r\n    this.xReSizer = new XReSizer(this);\r\n    this.yReSizer = new YReSizer(this);\r\n    this.xHeightLight = new XHeightLight(this);\r\n    this.yHeightLight = new YHeightLight(this);\r\n    this.edit = new XTableEdit(this);\r\n    this.rowFixed = new RowFixed(this);\r\n    this.colFixed = new ColFixed(this);\r\n    this.dropColFixed = new DropColFixed(this);\r\n    this.dropRowFixed = new DropRowFixed(this);\r\n    // 单元格辅助类\r\n    this.cellMergeCopyHelper = new CellMergeCopyHelper(this);\r\n    // 粘贴板\r\n    this.clipboard = new Clipboard({\r\n      filter: () => {\r\n        const { focus } = this;\r\n        const { activate } = focus;\r\n        const { target } = activate;\r\n        return target === this;\r\n      },\r\n      paste: () => {},\r\n    });\r\n    // 表格行高索引\r\n    this.rowHeightGroupIndex = new RowHeightGroupIndex({\r\n      rows: this.rows,\r\n      xFixedView: this.xFixedView,\r\n      xIteratorBuilder: this.xIteratorBuilder,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 滚动行区间\r\n   * @param min\r\n   * @param max\r\n   * @param initS\r\n   * @param initV\r\n   * @param ifv\r\n   * @param getV\r\n   * @return {(*|number)[]}\r\n   */\r\n  rowsReduceIf(min, max, initS, initV, ifv, getV) {\r\n    let s = initS;\r\n    let v = initV;\r\n    let ri = min;\r\n    this.xIteratorBuilder.getRowIterator()\r\n      .setBegin(ri)\r\n      .setEnd(max - 1)\r\n      .setLoop((i) => {\r\n        if (s >= ifv) {\r\n          return false;\r\n        }\r\n        v = getV(i);\r\n        s += v;\r\n        return true;\r\n      })\r\n      .setFinish((i) => {\r\n        ri = i;\r\n      })\r\n      .execute();\r\n    return [ri, s - v, v];\r\n  }\r\n\r\n  /**\r\n   * 滚动列区间\r\n   * @param min\r\n   * @param max\r\n   * @param initS\r\n   * @param initV\r\n   * @param ifv\r\n   * @param getV\r\n   * @return {(*|number)[]}\r\n   */\r\n  colsReduceIf(min, max, initS, initV, ifv, getV) {\r\n    let s = initS;\r\n    let v = initV;\r\n    let ri = min;\r\n    this.xIteratorBuilder.getColIterator()\r\n      .setBegin(ri)\r\n      .setEnd(max - 1)\r\n      .setLoop((i) => {\r\n        if (s >= ifv) {\r\n          return false;\r\n        }\r\n        v = getV(i);\r\n        s += v;\r\n        return true;\r\n      })\r\n      .setFinish((i) => {\r\n        ri = i;\r\n      })\r\n      .execute();\r\n    return [ri, s - v, v];\r\n  }\r\n\r\n  /**\r\n   * 单元辅助实例\r\n   * @returns {OperateCellsHelper}\r\n   */\r\n  getOperateCellsHelper() {\r\n    const { xTableStyle } = this;\r\n    const { operateCellsHelper } = xTableStyle;\r\n    return operateCellsHelper;\r\n  }\r\n\r\n  /**\r\n   * 单元辅助实例\r\n   * @returns {StyleCellsHelper}\r\n   */\r\n  getStyleCellsHelper() {\r\n    const { xTableStyle } = this;\r\n    const { styleCellsHelper } = xTableStyle;\r\n    return styleCellsHelper;\r\n  }\r\n\r\n  /**\r\n   * 获取表格渲染对象\r\n   * @returns {XTableStyle}\r\n   */\r\n  getXTableStyle() {\r\n    const { xTableStyle } = this;\r\n    return xTableStyle;\r\n  }\r\n\r\n  /**\r\n   * 读取合并单元格\r\n   */\r\n  getTableMerges() {\r\n    const { xTableStyle } = this;\r\n    const { merges } = xTableStyle;\r\n    return merges;\r\n  }\r\n\r\n  /**\r\n   * 获取表格单元格\r\n   * @returns {Cells}\r\n   */\r\n  getTableCells() {\r\n    const { xTableStyle } = this;\r\n    const { cells } = xTableStyle;\r\n    return cells;\r\n  }\r\n\r\n  /**\r\n   * 滚动视图的高度\r\n   * @returns {*}\r\n   */\r\n  getScrollTotalHeight() {\r\n    const {\r\n      xFixedView,\r\n    } = this;\r\n    const { rows } = this;\r\n    let height;\r\n    if (xFixedView.hasFixedTop()) {\r\n      const fixedView = xFixedView.getFixedView();\r\n      height = rows.sectionSumHeight(fixedView.eri, rows.len - 1);\r\n    } else {\r\n      height = rows.sectionSumHeight(0, rows.len - 1);\r\n    }\r\n    return height;\r\n  }\r\n\r\n  /**\r\n   * 滚动视图的宽度\r\n   * @returns {*}\r\n   */\r\n  getScrollTotalWidth() {\r\n    const {\r\n      xFixedView,\r\n    } = this;\r\n    const { cols } = this;\r\n    let width;\r\n    if (xFixedView.hasFixedLeft()) {\r\n      const fixedView = xFixedView.getFixedView();\r\n      width = cols.sectionSumWidth(fixedView.eci, cols.len - 1);\r\n    } else {\r\n      width = cols.sectionSumWidth(0, cols.len - 1);\r\n    }\r\n    return width;\r\n  }\r\n\r\n  /**\r\n   * 获取单元格CSS样式\r\n   * @param row\r\n   * @param col\r\n   */\r\n  getCellCssStyle(row, col) {\r\n    const cells = this.getTableCells();\r\n    const cell = cells.getCell(row, col);\r\n    const { fontAttr, background } = cell;\r\n    const { align, size, color, bold, italic, name } = fontAttr;\r\n    const fontSize = XDraw.srcTransformCssPx(this.scale.goto(size));\r\n    let textAlign = 'left';\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left:\r\n        textAlign = 'left';\r\n        break;\r\n      case BaseFont.ALIGN.center:\r\n        textAlign = 'center';\r\n        break;\r\n      case BaseFont.ALIGN.right:\r\n        textAlign = 'right';\r\n        break;\r\n    }\r\n    const css = `\r\n      text-align:${textAlign};\r\n      color: ${color};\r\n      background:${background};\r\n      font-style: ${italic ? 'italic' : 'initial'};\r\n      font-weight: ${bold ? 'bold' : 'initial'};\r\n      font-size: ${XDraw.srcTransformCssPx(fontSize)}px;\r\n      font-family: ${name};\r\n    `;\r\n    return css.replace(/\\s/g, '');\r\n  }\r\n\r\n  /**\r\n   * 索引栏高度\r\n   * @returns {*}\r\n   */\r\n  getIndexHeight() {\r\n    const { index } = this;\r\n    return index.getHeight();\r\n  }\r\n\r\n  /**\r\n   * 索引栏宽度\r\n   * @returns {*}\r\n   */\r\n  getIndexWidth() {\r\n    const { index } = this;\r\n    return index.getWidth();\r\n  }\r\n\r\n  /**\r\n   * 获取内容区域高度\r\n   */\r\n  getContentHeight() {\r\n    const { xContent } = this;\r\n    return xContent.getHeight();\r\n  }\r\n\r\n  /**\r\n   * 获取内容区域宽度\r\n   */\r\n  getContentWidth() {\r\n    const { xContent } = this;\r\n    return xContent.getWidth();\r\n  }\r\n\r\n  /**\r\n   * 固定区域宽度\r\n   */\r\n  getFixedWidth() {\r\n    const { xLeft } = this;\r\n    return xLeft.getWidth();\r\n  }\r\n\r\n  /**\r\n   * 固定区域高度\r\n   * @returns {*}\r\n   */\r\n  getFixedHeight() {\r\n    const { xTop } = this;\r\n    return xTop.getHeight();\r\n  }\r\n\r\n  /**\r\n   * 可视区域宽度\r\n   * @return {*}\r\n   */\r\n  visualWidth() {\r\n    if (PlainUtils.isNumber(this.visualWidthCache)) {\r\n      return this.visualWidthCache;\r\n    }\r\n    const width = this.box().width;\r\n    this.visualWidthCache = width;\r\n    return width;\r\n  }\r\n\r\n  /**\r\n   * 可视区域高度\r\n   * @return {*}\r\n   */\r\n  visualHeight() {\r\n    if (PlainUtils.isNumber(this.visualHeightCache)) {\r\n      return this.visualHeightCache;\r\n    }\r\n    const height = this.box().height;\r\n    this.visualHeightCache = height;\r\n    return height;\r\n  }\r\n\r\n  /**\r\n   * 表格图标事件处理\r\n   * @param type\r\n   * @param info\r\n   * @param native\r\n   */\r\n  xIconsEvent(type, info, native) {\r\n    const { xIconBuilder } = this;\r\n    const style = this.getXTableStyle();\r\n    const cells = this.getTableCells();\r\n    const {\r\n      fixedCellIcon, staticCellIcon,\r\n    } = style;\r\n    const {\r\n      ri, ci, mri, mci, fx, fy, sx, sy,\r\n    } = info;\r\n\r\n    let staticIconArray = [];\r\n    let fixedIconArray = [];\r\n\r\n    // 单元格固定小图标\r\n    const fixedIcon = fixedCellIcon.getIcon(ri, ci);\r\n    if (fixedIcon) {\r\n      fixedIconArray = fixedIconArray.concat(fixedIcon);\r\n    }\r\n\r\n    // 单元格内容小图标\r\n    const cell = cells.getCell(mri, mci);\r\n    if (cell) {\r\n      staticIconArray = staticIconArray.concat(cell.icons);\r\n    }\r\n\r\n    // 单元格固定小图标\r\n    const staticIcon = staticCellIcon.getIcon(mri, mci);\r\n    if (staticIcon) {\r\n      staticIconArray = staticIconArray.concat(staticIcon);\r\n    }\r\n\r\n    // 触发单元格小图标事件\r\n    xIconBuilder.xIconsEvent({\r\n      native,\r\n      type,\r\n      staticIcons: staticIconArray,\r\n      fixedIcons: fixedIconArray,\r\n      sx: XDraw.srcTransformStylePx(sx),\r\n      sy: XDraw.srcTransformStylePx(sy),\r\n      fx: XDraw.srcTransformStylePx(fx),\r\n      fy: XDraw.srcTransformStylePx(fy),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 更新表格的指针\r\n   */\r\n  pointerEvent(info) {\r\n    const { mousePointer } = this;\r\n    const { ri, ci } = info;\r\n    if (ri === -1 && ci === -1) {\r\n      mousePointer.set(XTableMousePointer.KEYS.default);\r\n      return;\r\n    }\r\n    if (ri === -1) {\r\n      mousePointer.set(XTableMousePointer.KEYS.sResize);\r\n      return;\r\n    }\r\n    if (ci === -1) {\r\n      mousePointer.set(XTableMousePointer.KEYS.eResize);\r\n      return;\r\n    }\r\n    mousePointer.set(XTableMousePointer.KEYS.cell);\r\n  }\r\n\r\n  /**\r\n   * 获取指定单元格下的行列\r\n   * @param x\r\n   * @param y\r\n   * @returns {{ci: number, ri: number}}\r\n   */\r\n  getRiCiByXy(x, y) {\r\n    const {\r\n      xFixedView, rows, cols,\r\n    } = this;\r\n\r\n    const { index } = this;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const merges = this.getTableMerges();\r\n    const fixedWidth = this.getFixedWidth();\r\n    const fixedHeight = this.getFixedHeight();\r\n\r\n    let [left, top] = [x, y];\r\n    let [ci, ri] = [-1, -1];\r\n    left -= index.getWidth();\r\n    top -= index.getHeight();\r\n\r\n    let fx = 0;\r\n    if (left <= fixedWidth && x > index.getWidth()) {\r\n      let total = 0;\r\n      this.xIteratorBuilder.getColIterator()\r\n        .setBegin(fixedView.sci)\r\n        .setEnd(fixedView.eci)\r\n        .setLoop((i) => {\r\n          const width = cols.getWidth(i);\r\n          total += width;\r\n          ci = i;\r\n          return total < left;\r\n        })\r\n        .execute();\r\n      fx = (total - cols.getWidth(ci) - left) * -1;\r\n    } else if (x > index.getWidth()) {\r\n      let total = fixedWidth;\r\n      const viewRange = this.getScrollView();\r\n      this.xIteratorBuilder.getColIterator()\r\n        .setBegin(viewRange.sci)\r\n        .setEnd(viewRange.eci)\r\n        .setLoop((i) => {\r\n          const width = cols.getWidth(i);\r\n          total += width;\r\n          ci = i;\r\n          return total < left;\r\n        })\r\n        .execute();\r\n      fx = (total - cols.getWidth(ci) - left) * -1;\r\n    }\r\n\r\n    let fy = 0;\r\n    if (top < fixedHeight && y > index.getHeight()) {\r\n      let total = 0;\r\n      this.xIteratorBuilder.getRowIterator()\r\n        .setBegin(fixedView.sri)\r\n        .setEnd(fixedView.eri)\r\n        .setLoop((i) => {\r\n          const height = rows.getHeight(i);\r\n          total += height;\r\n          ri = i;\r\n          return total <= top;\r\n        })\r\n        .execute();\r\n      fy = (total - rows.getHeight(ri) - top) * -1;\r\n    } else if (y > index.getHeight()) {\r\n      let total = fixedHeight;\r\n      const viewRange = this.getScrollView();\r\n      this.xIteratorBuilder.getRowIterator()\r\n        .setBegin(viewRange.sri)\r\n        .setEnd(viewRange.eri)\r\n        .setLoop((i) => {\r\n          const height = rows.getHeight(i);\r\n          total += height;\r\n          ri = i;\r\n          return total <= top;\r\n        })\r\n        .execute();\r\n      fy = (total - rows.getHeight(ri) - top) * -1;\r\n    }\r\n\r\n    const merge = merges.getFirstIncludes(ri, ci);\r\n    let mci = ci;\r\n    let mri = ri;\r\n    let sx = fx;\r\n    let sy = fy;\r\n    if (merge) {\r\n      mri = merge.sri;\r\n      mci = merge.sci;\r\n      const { rows, cols } = this;\r\n      const height = rows.sectionSumHeight(mri, ri - 1);\r\n      const width = cols.sectionSumWidth(mci, ci - 1);\r\n      sy += height;\r\n      sx += width;\r\n    }\r\n\r\n    return {\r\n      ri, ci, mri, mci, fx, fy, sx, sy,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * onAttach\r\n   */\r\n  onAttach() {\r\n    // 注册焦点元素\r\n    this.focus.register({ target: this });\r\n    // 表格渲染组件\r\n    const { xTableStyle } = this;\r\n    this.attach(xTableStyle);\r\n    // 添加屏幕组件\r\n    this.attach(this.xScreen);\r\n    this.xScreen.addItem(new XFilter(this));\r\n    this.xScreen.addItem(new XSelectItem(this));\r\n    this.xScreen.addItem(new XCopyStyle(this));\r\n    this.xScreen.addItem(new XAutoFillItem(this));\r\n    // 添加表格组件\r\n    this.attach(this.xHeightLight);\r\n    this.attach(this.yHeightLight);\r\n    this.attach(this.edit);\r\n    this.attach(this.rowFixed);\r\n    this.attach(this.colFixed);\r\n    this.attach(this.xReSizer);\r\n    this.attach(this.yReSizer);\r\n    this.attach(this.dropRowFixed);\r\n    this.attach(this.dropColFixed);\r\n    // 绑定表格事件\r\n    this.bind();\r\n    // 注册快捷键\r\n    KeyBoardTabCode.register(this);\r\n  }\r\n\r\n  /**\r\n   * 事件绑定\r\n   */\r\n  bind() {\r\n    XEvent.bind(this, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.resize();\r\n    });\r\n    XEvent.bind(this, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      this.resize();\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, (e) => {\r\n      const { x, y } = this.eventXy(e);\r\n      const info = this.getRiCiByXy(x, y);\r\n      this.pointerEvent(info);\r\n      this.xIconsEvent(XIcon.ICON_EVENT_TYPE.MOUSE_MOVE, info, e);\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { activate } = this.focus;\r\n      const { target } = activate;\r\n      if (target === this) {\r\n        const { x, y } = this.eventXy(e);\r\n        const info = this.getRiCiByXy(x, y);\r\n        this.xIconsEvent(XIcon.ICON_EVENT_TYPE.MOUSE_DOWN, info, e);\r\n      }\r\n    });\r\n    XEvent.bind(this, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.rowHeightGroupIndex.clear();\r\n    });\r\n    XEvent.bind(this, Constant.TABLE_EVENT_TYPE.FIXED_ROW_CHANGE, () => {\r\n      this.rowHeightGroupIndex.clear();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 移除事件绑定\r\n   */\r\n  unbind() {\r\n    this.keyboard.unbind();\r\n    this.focus.unbind();\r\n  }\r\n\r\n  /**\r\n   * 获取滚动视图\r\n   * @returns {RectRange}\r\n   */\r\n  getScrollView() {\r\n    const { xTableAreaView } = this;\r\n    return xTableAreaView.getScrollView();\r\n  }\r\n\r\n  /**\r\n   * 水平滚动\r\n   * @param x\r\n   */\r\n  scrollX(x) {\r\n    const {\r\n      cols, xFixedView, scroll,\r\n    } = this;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const [\r\n      ci, left, width,\r\n    ] = this.colsReduceIf(fixedView.eci + 1, cols.len, 0, 0, x, i => cols.getWidth(i));\r\n    let x1 = left;\r\n    if (x > 0) x1 += width;\r\n    let type;\r\n    if (scroll.x > x1) {\r\n      type = SCROLL_TYPE.H_LEFT;\r\n    } else if (scroll.x < x1) {\r\n      type = SCROLL_TYPE.H_RIGHT;\r\n    }\r\n    scroll.type = type;\r\n    scroll.ci = ci;\r\n    scroll.x = x1;\r\n    this.scrolling();\r\n    scroll.type = SCROLL_TYPE.UN;\r\n  }\r\n\r\n  /**\r\n   * 垂直滚动\r\n   * @param y\r\n   */\r\n  scrollY(y) {\r\n    const { rows, scroll, rowHeightGroupIndex } = this;\r\n    const find = rowHeightGroupIndex.get(y);\r\n    const [\r\n      ri, top, height,\r\n    ] = this.rowsReduceIf(find.ri, rows.len, find.top, 0, y, i => rows.getHeight(i));\r\n    let y1 = top;\r\n    if (y > 0) y1 += height;\r\n    let type;\r\n    if (scroll.y > y1) {\r\n      type = SCROLL_TYPE.V_TOP;\r\n    } else if (scroll.y < y1) {\r\n      type = SCROLL_TYPE.V_BOTTOM;\r\n    }\r\n    scroll.type = type;\r\n    scroll.ri = ri;\r\n    scroll.y = y1;\r\n    this.scrolling();\r\n    scroll.type = SCROLL_TYPE.UN;\r\n  }\r\n\r\n  /**\r\n   * 获取向上滚动的距离\r\n   * @returns {*}\r\n   */\r\n  getTop() {\r\n    const {\r\n      rows, xFixedView,\r\n    } = this;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const view = this.getScrollView();\r\n    return rows.sectionSumHeight(fixedView.eri + 1, view.sri - 1);\r\n  }\r\n\r\n  /**\r\n   * 获取向左滚动的距离\r\n   * @returns {*}\r\n   */\r\n  getLeft() {\r\n    const {\r\n      cols, xFixedView,\r\n    } = this;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const view = this.getScrollView();\r\n    return cols.sectionSumWidth(fixedView.eci + 1, view.sci - 1);\r\n  }\r\n\r\n  /**\r\n   * 设置固定行视图\r\n   * @param end\r\n   * @param start\r\n   */\r\n  setFixedRow(end, start = -1) {\r\n    const {\r\n      xFixedView,\r\n      rows,\r\n      scroll,\r\n      rowFixed,\r\n    } = this;\r\n    // 更新视图\r\n    const fixedView = xFixedView.getFixedView();\r\n    fixedView.eri = end;\r\n    if (start > -1) {\r\n      fixedView.sri = start;\r\n    }\r\n    xFixedView.setFixedView(fixedView);\r\n    // 更新滚动距离\r\n    const { sri, eri } = fixedView;\r\n    if (xFixedView.hasFixedTop()) {\r\n      scroll.y = 0;\r\n      scroll.ri = eri + 1;\r\n    } else {\r\n      scroll.y = rows.sectionSumHeight(0, sri - 1);\r\n      scroll.ri = sri;\r\n    }\r\n    // 更新固定条\r\n    rowFixed.fxSri = fixedView.sri;\r\n    rowFixed.fxEri = fixedView.eri;\r\n    // 更新视图\r\n    this.resize();\r\n    // 发送更新通知\r\n    this.trigger(Constant.TABLE_EVENT_TYPE.FIXED_CHANGE);\r\n    this.trigger(Constant.TABLE_EVENT_TYPE.FIXED_ROW_CHANGE);\r\n  }\r\n\r\n  /**\r\n   * 设置固定列视图\r\n   * @param end\r\n   * @param start\r\n   */\r\n  setFixedCol(end, start = -1) {\r\n    const {\r\n      xFixedView,\r\n      rows,\r\n      scroll,\r\n      colFixed,\r\n    } = this;\r\n    // 更新视图\r\n    const fixedView = xFixedView.getFixedView();\r\n    fixedView.eci = end;\r\n    if (start > -1) {\r\n      fixedView.sci = start;\r\n    }\r\n    xFixedView.setFixedView(fixedView);\r\n    // 更新滚动距离\r\n    const { sci, eci } = fixedView;\r\n    if (xFixedView.hasFixedLeft()) {\r\n      scroll.x = 0;\r\n      scroll.ci = eci + 1;\r\n    } else {\r\n      scroll.x = rows.sectionSumHeight(0, sci - 1);\r\n      scroll.ci = sci;\r\n    }\r\n    // 跟新固定条\r\n    colFixed.fxSci = fixedView.sci;\r\n    colFixed.fxEci = fixedView.eci;\r\n    // 更新视图\r\n    this.resize();\r\n    // 发送更新通知\r\n    this.trigger(Constant.TABLE_EVENT_TYPE.FIXED_CHANGE);\r\n  }\r\n\r\n  /**\r\n   * 设置缩放比\r\n   */\r\n  setScale(val = 1) {\r\n    const {\r\n      yHeightLight,\r\n      xHeightLight,\r\n      xTableStyle,\r\n      xScreen,\r\n      scale,\r\n      rowFixed,\r\n      colFixed,\r\n    } = this;\r\n    this.reset();\r\n    scale.setValue(val);\r\n    xScreen.setZone();\r\n    xHeightLight.offsetHandle();\r\n    yHeightLight.offsetHandle();\r\n    rowFixed.setSize();\r\n    colFixed.setSize();\r\n    xTableStyle.setScale(val);\r\n    this.trigger(Constant.TABLE_EVENT_TYPE.SCALE_CHANGE);\r\n  }\r\n\r\n  /**\r\n   * 重置变量区\r\n   */\r\n  reset() {\r\n    const { xTableAreaView } = this;\r\n    const { xTableFrozenContent } = this;\r\n    const { xLeftIndex } = this;\r\n    const { xTopIndex } = this;\r\n    const { xLeft } = this;\r\n    const { xTop } = this;\r\n    const { xContent } = this;\r\n    this.visualHeightCache = null;\r\n    this.visualWidthCache = null;\r\n    xTableAreaView.reset();\r\n    xTableFrozenContent.reset();\r\n    xLeftIndex.reset();\r\n    xTopIndex.reset();\r\n    xLeft.reset();\r\n    xTop.reset();\r\n    xContent.reset();\r\n  }\r\n\r\n  /**\r\n   * 重置界面大小\r\n   */\r\n  resize() {\r\n    const {\r\n      xTableStyle, xScreen, rowFixed, colFixed,\r\n    } = this;\r\n    this.reset();\r\n    xScreen.setZone();\r\n    rowFixed.setSize();\r\n    colFixed.setSize();\r\n    xTableStyle.resize();\r\n    this.trigger(Constant.TABLE_EVENT_TYPE.RESIZE_CHANGE);\r\n  }\r\n\r\n  /**\r\n   * 渲染静态界面\r\n   */\r\n  render() {\r\n    const { xTableStyle } = this;\r\n    xTableStyle.render();\r\n    this.trigger(Constant.TABLE_EVENT_TYPE.RENDER);\r\n  }\r\n\r\n  /**\r\n   * 渲染滚动界面\r\n   */\r\n  scrolling() {\r\n    const {\r\n      xTableStyle, xFixedView, scroll,\r\n    } = this;\r\n    const fixedView = xFixedView.getFixedView();\r\n    if (!xFixedView.hasFixedTop()) {\r\n      fixedView.sri = scroll.ri;\r\n    }\r\n    if (!xFixedView.hasFixedLeft()) {\r\n      fixedView.sci = scroll.ci;\r\n    }\r\n    this.reset();\r\n    xFixedView.setFixedView(fixedView);\r\n    xTableStyle.scrolling();\r\n    this.trigger(Constant.SYSTEM_EVENT_TYPE.SCROLL);\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.xScreen.destroy();\r\n    this.xReSizer.destroy();\r\n    this.yReSizer.destroy();\r\n    this.xHeightLight.destroy();\r\n    this.yHeightLight.destroy();\r\n    this.edit.destroy();\r\n    this.rowFixed.destroy();\r\n    this.colFixed.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableDimensions,\r\n};\r\n","import { Widget } from '../../libs/Widget';\r\nimport { XTableDimensions } from '../table/XTableDimensions';\r\nimport { cssPrefix } from '../../const/Constant';\r\n\r\nclass Sheet extends Widget {\r\n\r\n  constructor(options = {\r\n    tableConfig: {\r\n      data: [],\r\n    },\r\n  }) {\r\n    super(`${cssPrefix}-sheet`);\r\n    this.options = options;\r\n    this.table = new XTableDimensions({\r\n      settings: this.options.tableConfig,\r\n    });\r\n  }\r\n\r\n  onAttach() {\r\n    const { table } = this;\r\n    this.attach(table);\r\n  }\r\n\r\n}\r\n\r\nexport { Sheet };\r\n","/* global window */\r\nimport { Widget } from '../../libs/Widget';\r\nimport { cssPrefix, Constant, XSheetVersion } from '../../const/Constant';\r\nimport { VerticalLayer } from '../../libs/layer/VerticalLayer';\r\nimport { HorizontalLayer } from '../../libs/layer/HorizontalLayer';\r\nimport { VerticalLayerElement } from '../../libs/layer/VerticalLayerElement';\r\nimport { ScrollBarX } from '../../component/scrollbar/ScrollBarX';\r\nimport { ScrollBarY } from '../../component/scrollbar/ScrollBarY';\r\nimport { HorizontalLayerElement } from '../../libs/layer/HorizontalLayerElement';\r\nimport { VerticalCenterElement } from '../../libs/layer/center/VerticalCenterElement';\r\nimport { VerticalCenter } from '../../libs/layer/center/VerticalCenter';\r\nimport { SheetView } from './SheetView';\r\nimport { TabView } from './TabView';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { XEvent } from '../../libs/XEvent';\r\nimport { h } from '../../libs/Element';\r\nimport { Tab } from './Tab';\r\nimport { Sheet } from './Sheet';\r\nimport Download from '../../libs/donwload/Download';\r\nimport { Throttle } from '../../libs/Throttle';\r\nimport { XDraw } from '../../canvas/XDraw';\r\n\r\nclass WorkBody extends Widget {\r\n\r\n  constructor(work, options = { sheets: [] }) {\r\n    super(`${cssPrefix}-work-body`);\r\n    this.work = work;\r\n    this.workConfig = options;\r\n    this.sheets = this.workConfig.sheets;\r\n    this.tabSheet = [];\r\n    this.activeIndex = -1;\r\n    // 版本标识\r\n    this.version = h('div', `${cssPrefix}-version-tips`);\r\n    this.version.html(`<a target=\"_blank\" href=\"https://gitee.com/eigi/x-sheet\">${XSheetVersion}</a>`);\r\n    this.children(this.version);\r\n    // sheet表\r\n    this.sheetViewLayer = new HorizontalLayerElement({\r\n      style: {\r\n        flexGrow: 1,\r\n      },\r\n    });\r\n    // 垂直滚动条\r\n    this.scrollBarYLayer = new HorizontalLayerElement({\r\n      style: {\r\n        overflow: 'inherit',\r\n      },\r\n    });\r\n    // 水平滚动条\r\n    this.scrollBarXLayer = new VerticalCenterElement();\r\n    this.scrollBarXVerticalCenter = new VerticalCenter();\r\n    this.scrollBarXHorizontalLayer = new HorizontalLayerElement({\r\n      style: {\r\n        flexGrow: 2,\r\n      },\r\n    });\r\n    this.scrollBarXVerticalCenter.children(this.scrollBarXLayer);\r\n    this.scrollBarXHorizontalLayer.children(this.scrollBarXVerticalCenter);\r\n    // 选项卡\r\n    this.sheetSwitchTabLayer = new HorizontalLayerElement({\r\n      style: {\r\n        flexGrow: 3,\r\n      },\r\n    });\r\n    // 水平布局\r\n    this.horizontalLayer1 = new HorizontalLayer();\r\n    this.horizontalLayer2 = new HorizontalLayer();\r\n    this.horizontalLayer1.children(this.sheetViewLayer);\r\n    this.horizontalLayer1.children(this.scrollBarYLayer);\r\n    this.horizontalLayer2.children(this.sheetSwitchTabLayer);\r\n    this.horizontalLayer2.children(this.scrollBarXHorizontalLayer);\r\n    // 根布局\r\n    this.horizontalLayer1Layer = new VerticalLayerElement({\r\n      style: {\r\n        flexGrow: 1,\r\n      },\r\n    });\r\n    this.horizontalLayer2Layer = new VerticalLayerElement();\r\n    this.layerVerticalLayer = new VerticalLayer();\r\n    this.horizontalLayer1Layer.children(this.horizontalLayer1);\r\n    this.horizontalLayer2Layer.children(this.horizontalLayer2);\r\n    this.layerVerticalLayer.children(this.horizontalLayer1Layer);\r\n    this.layerVerticalLayer.children(this.horizontalLayer2Layer);\r\n    this.children(this.layerVerticalLayer);\r\n    // 组件\r\n    this.scrollBarY = new ScrollBarY({\r\n      scroll: (move) => {\r\n        const sheet = this.sheetView.getActiveSheet();\r\n        sheet.table.scrollY(move);\r\n      },\r\n    });\r\n    this.scrollBarX = new ScrollBarX({\r\n      scroll: (move) => {\r\n        const sheet = this.sheetView.getActiveSheet();\r\n        sheet.table.scrollX(move);\r\n      },\r\n    });\r\n    this.sheetView = new SheetView();\r\n    this.tabView = new TabView({\r\n      onAdd: () => {\r\n        const sheet = new Sheet();\r\n        const tab = new Tab();\r\n        this.addTabSheet({ tab, sheet });\r\n      },\r\n      onSwitch: (tab) => {\r\n        this.setActiveTab(tab);\r\n      },\r\n    });\r\n  }\r\n\r\n  onAttach() {\r\n    const {\r\n      sheetViewLayer, scrollBarYLayer, sheetSwitchTabLayer, scrollBarXLayer,\r\n    } = this;\r\n    scrollBarYLayer.attach(this.scrollBarY);\r\n    scrollBarXLayer.attach(this.scrollBarX);\r\n    sheetSwitchTabLayer.attach(this.tabView);\r\n    sheetViewLayer.attach(this.sheetView);\r\n    this.bind();\r\n    this.createSheet();\r\n  }\r\n\r\n  bind() {\r\n    const exploreInfo = PlainUtils.getExplorerInfo();\r\n    const throttle = new Throttle();\r\n    XEvent.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.scrollBarLocal();\r\n      this.scrollBarSize();\r\n    });\r\n    XEvent.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      this.scrollBarLocal();\r\n      this.scrollBarSize();\r\n    });\r\n    XEvent.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.FIXED_CHANGE, () => {\r\n      const table = this.getActiveTable();\r\n      if (table) {\r\n        this.scrollBarLocal();\r\n        this.scrollBarSize();\r\n      }\r\n    });\r\n    XEvent.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.DATA_CHANGE, (e) => {\r\n      this.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      e.stopPropagation();\r\n    });\r\n    XEvent.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.SELECT_CHANGE, (e) => {\r\n      this.trigger(Constant.TABLE_EVENT_TYPE.SELECT_CHANGE);\r\n      e.stopPropagation();\r\n    });\r\n    XEvent.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.SELECT_DOWN, (e) => {\r\n      this.trigger(Constant.TABLE_EVENT_TYPE.SELECT_DOWN, this);\r\n      e.stopPropagation();\r\n    });\r\n    XEvent.bind(this.sheetView, Constant.SYSTEM_EVENT_TYPE.MOUSE_WHEEL, (e) => {\r\n      const sheet = this.sheetView.getActiveSheet();\r\n      if (PlainUtils.isUnDef(sheet)) return;\r\n      const { table } = sheet;\r\n      const {\r\n        scroll, rows,\r\n      } = table;\r\n      const scrollView = table.getScrollView();\r\n      const { scrollTo } = this.scrollBarY;\r\n      const { deltaY } = e;\r\n      switch (exploreInfo.type) {\r\n        case 'Chrome': {\r\n          if (deltaY > 0) {\r\n            this.scrollBarY.scrollMove(scrollTo + Math.abs(deltaY));\r\n          } else {\r\n            this.scrollBarY.scrollMove(scrollTo - Math.abs(deltaY));\r\n          }\r\n          break;\r\n        }\r\n        case 'Firefox': {\r\n          if (deltaY > 0) {\r\n            const dis = rows.getHeight(scrollView.sri + 1);\r\n            this.scrollBarY.scrollMove(scrollTo + dis);\r\n          } else {\r\n            const dis = rows.getHeight(scrollView.sri - 1);\r\n            this.scrollBarY.scrollMove(scrollTo - dis);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n      if (scroll.blockTop < scroll.maxBlockTop && scroll.blockTop > 0) {\r\n        e.stopPropagation();\r\n      }\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(window, Constant.SYSTEM_EVENT_TYPE.RESIZE, () => {\r\n      throttle.action(() => {\r\n        XDraw.dprUpdate();\r\n        const table = this.getActiveTable();\r\n        if (table) {\r\n          table.reset();\r\n          this.scrollBarLocal();\r\n          this.scrollBarSize();\r\n          table.resize();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.sheetView);\r\n    XEvent.unbind(window);\r\n  }\r\n\r\n  addTabSheet({ tab, sheet }) {\r\n    const {\r\n      tabSheet, sheetView, tabView,\r\n    } = this;\r\n    sheetView.attach(sheet);\r\n    tabView.attach(tab);\r\n    tabSheet.push({\r\n      tab, sheet,\r\n    });\r\n  }\r\n\r\n  scrollBarSize() {\r\n    const table = this.getActiveTable();\r\n    const {\r\n      scrollBarXHorizontalLayer, scrollBarY, scrollBarX,\r\n    } = this;\r\n    // 获取表格大小\r\n    const totalHeight = table.getScrollTotalHeight();\r\n    const totalWidth = table.getScrollTotalWidth();\r\n    // 是否显示水平滚动条\r\n    if (totalWidth > table.getContentWidth()) {\r\n      scrollBarXHorizontalLayer.show();\r\n    } else {\r\n      scrollBarXHorizontalLayer.hide();\r\n    }\r\n    // 调整滚动条尺寸\r\n    scrollBarY.setSize(table.getContentHeight(), totalHeight);\r\n    scrollBarX.setSize(table.getContentWidth(), totalWidth);\r\n  }\r\n\r\n  scrollBarLocal() {\r\n    const table = this.getActiveTable();\r\n    this.scrollBarY.setLocal(table.getTop());\r\n    this.scrollBarX.setLocal(table.getLeft());\r\n  }\r\n\r\n  createSheet() {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const item of this.sheets) {\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      const { name } = item;\r\n      const sheet = new Sheet(item);\r\n      const tab = new Tab(name);\r\n      this.addTabSheet({ tab, sheet });\r\n    }\r\n    if (this.tabSheet.length) {\r\n      this.setActiveIndex(0);\r\n    }\r\n  }\r\n\r\n  setActiveIndex(index) {\r\n    const {\r\n      sheetView, tabView,\r\n    } = this;\r\n    sheetView.setActiveSheet(index);\r\n    tabView.setActiveTab(index);\r\n    const table = this.getActiveTable();\r\n    if (table) {\r\n      table.reset();\r\n      this.scrollBarLocal();\r\n      this.scrollBarSize();\r\n      table.resize();\r\n    }\r\n    this.trigger(Constant.WORK_BODY_EVENT_TYPE.CHANGE_ACTIVE);\r\n    this.activeIndex = index;\r\n  }\r\n\r\n  setScale(value) {\r\n    const { sheetView } = this;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    table.setScale(value);\r\n    this.scrollBarLocal();\r\n    this.scrollBarSize();\r\n  }\r\n\r\n  setActiveTab(tab) {\r\n    this.tabSheet.forEach((item, index) => {\r\n      if (item.tab === tab) {\r\n        this.setActiveIndex(index);\r\n      }\r\n    });\r\n  }\r\n\r\n  getActiveSheet() {\r\n    return this.sheetView.getActiveSheet();\r\n  }\r\n\r\n  getActiveTable() {\r\n    const sheet = this.getActiveSheet();\r\n    if (sheet) {\r\n      return sheet.table;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  toJSONTemplate() {\r\n    const { activeIndex, sheetView, tabView } = this;\r\n    const sheet = sheetView.sheetList[activeIndex];\r\n    const tab = tabView.tabList[activeIndex];\r\n    if (sheet && tab) {\r\n      const { table } = sheet;\r\n      const {\r\n        rows, cols, settings,\r\n      } = table;\r\n      const cells = table.getTableCells();\r\n      const merges = table.getTableMerges();\r\n      const data = {\r\n        name: tab.name,\r\n        tableConfig: {\r\n          table: {\r\n            showGrid: settings.table.showGrid,\r\n            background: settings.table.background,\r\n          },\r\n          rows: {\r\n            len: rows.len,\r\n            height: rows.height,\r\n            data: rows.getData(),\r\n          },\r\n          cols: {\r\n            len: cols.len,\r\n            width: cols.width,\r\n            data: cols.getData(),\r\n          },\r\n          merge: {\r\n            merges: merges.getData(),\r\n          },\r\n          data: cells.getData(),\r\n        },\r\n      };\r\n      const text = `window['${tab.name}'] = ${JSON.stringify(data)}`;\r\n      Download(text, `${tab.name}.js`, 'application/x-javascript');\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { WorkBody };\r\n","import { Widget } from '../../libs/Widget';\r\nimport { Constant, cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../libs/Element';\r\nimport { XEvent } from '../../libs/XEvent';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { XSelectItem } from '../table/xscreenitems/xselect/XSelectItem';\r\nimport { Throttle } from '../../libs/Throttle';\r\nimport { Cell } from '../table/tablecell/Cell';\r\n\r\nclass BottomMenu extends Widget {\r\n\r\n  constructor(workBottom) {\r\n    super(`${cssPrefix}-bottom-menu`);\r\n    this.workBottom = workBottom;\r\n    this.sum = h('div', `${cssPrefix}-bottom-sum`);\r\n    this.avg = h('div', `${cssPrefix}-bottom-avg`);\r\n    this.number = h('div', `${cssPrefix}-bottom-number`);\r\n    this.fullScreen = h('div', `${cssPrefix}-bottom-full-screen`);\r\n    this.grid = h('div', `${cssPrefix}-bottom-grid`);\r\n    this.throttle = new Throttle({ time: 800 });\r\n    this.children(this.grid);\r\n    this.children(this.fullScreen);\r\n    this.children(this.sum);\r\n    this.children(this.avg);\r\n    this.children(this.number);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n  }\r\n\r\n  computer() {\r\n    const { workBottom } = this;\r\n    const { work } = workBottom;\r\n    const { body } = work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen, xIteratorBuilder } = table;\r\n    const merges = table.getTableMerges();\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    if (selectRange) {\r\n      const { sri, sci, eri, eci } = selectRange;\r\n      let number = 0;\r\n      let total = 0;\r\n      // 性能杀手(后续优化)\r\n      xIteratorBuilder.getRowIterator()\r\n        .setBegin(sri)\r\n        .setEnd(eri)\r\n        .setLoop((ri) => {\r\n          xIteratorBuilder.getColIterator()\r\n            .setBegin(sci)\r\n            .setEnd(eci)\r\n            .setLoop((ci) => {\r\n              const merge = merges.getFirstIncludes(ri, ci);\r\n              if (merge) {\r\n                if (merge.sri !== ri || merge.sci !== ci) {\r\n                  return;\r\n                }\r\n              }\r\n              const cell = cells.getCell(ri, ci);\r\n              if (cell) {\r\n                const { text, contentType } = cell;\r\n                number += 1;\r\n                if (contentType === Cell.CONTENT_TYPE.NUMBER) {\r\n                  total += text;\r\n                }\r\n              }\r\n            })\r\n            .execute();\r\n        })\r\n        .execute();\r\n      const avg = total / number;\r\n      this.setSum(total);\r\n      this.setAvg(avg);\r\n      this.setNumber(number);\r\n    } else {\r\n      this.setSum(0);\r\n      this.setAvg(0);\r\n      this.setNumber(0);\r\n    }\r\n  }\r\n\r\n  unbind() {\r\n    const { workBottom, grid, fullScreen } = this;\r\n    const { work } = workBottom;\r\n    const { body } = work;\r\n    XEvent.unbind(grid);\r\n    XEvent.unbind(fullScreen);\r\n    XEvent.unbind(body);\r\n  }\r\n\r\n  bind() {\r\n    const { workBottom, grid, fullScreen, throttle } = this;\r\n    const { work } = workBottom;\r\n    const { body } = work;\r\n    const { sheetView } = body;\r\n    XEvent.bind(body, Constant.WORK_BODY_EVENT_TYPE.CHANGE_ACTIVE, () => {\r\n      throttle.action(() => {\r\n        this.computer();\r\n      });\r\n    });\r\n    XEvent.bind(body, Constant.TABLE_EVENT_TYPE.SELECT_CHANGE, () => {\r\n      throttle.action(() => {\r\n        this.computer();\r\n      });\r\n    });\r\n    XEvent.bind(body, Constant.TABLE_EVENT_TYPE.DATA_CHANGE, () => {\r\n      throttle.action(() => {\r\n        this.computer();\r\n      });\r\n    });\r\n    XEvent.bind(fullScreen, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      if (PlainUtils.isFull()) {\r\n        PlainUtils.exitFullscreen();\r\n      } else {\r\n        PlainUtils.fullScreen(work.root);\r\n      }\r\n    });\r\n    XEvent.bind(grid, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      table.settings.table.showGrid = !table.settings.table.showGrid;\r\n      table.render();\r\n    });\r\n  }\r\n\r\n  setSum(val) {\r\n    this.sum.text(`求和: ${val}`);\r\n  }\r\n\r\n  setAvg(val) {\r\n    this.avg.text(`平均数: ${val}`);\r\n  }\r\n\r\n  setNumber(val) {\r\n    this.number.text(`数量: ${val}`);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { BottomMenu };\r\n","import { Widget } from '../../libs/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { BottomMenu } from './BottomMenu';\r\n\r\nclass WorkBottom extends Widget {\r\n\r\n  constructor(work) {\r\n    super(`${cssPrefix}-work-bottom`);\r\n    this.work = work;\r\n  }\r\n\r\n  onAttach() {\r\n    this.bottomMenu = new BottomMenu(this);\r\n    this.attach(this.bottomMenu);\r\n  }\r\n\r\n}\r\n\r\nexport { WorkBottom };\r\n","import { Widget } from '../../libs/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { VerticalLayer } from '../../libs/layer/VerticalLayer';\r\nimport { VerticalLayerElement } from '../../libs/layer/VerticalLayerElement';\r\nimport { WorkTop } from './WorkTop';\r\nimport { WorkBody } from './WorkBody';\r\nimport { WorkBottom } from './WorkBottom';\r\n\r\nclass Work extends Widget {\r\n\r\n  constructor(options = {\r\n    body: {},\r\n  }) {\r\n    super(`${cssPrefix}-work`);\r\n    this.options = options.workConfig;\r\n    this.root = null;\r\n    // 布局\r\n    this.topLayer = new VerticalLayerElement();\r\n    this.bodyLayer = new VerticalLayerElement({\r\n      style: {\r\n        flexGrow: 1,\r\n      },\r\n    });\r\n    this.bottomLayer = new VerticalLayerElement();\r\n    this.verticalLayer = new VerticalLayer();\r\n    this.verticalLayer.children(this.topLayer);\r\n    this.verticalLayer.children(this.bodyLayer);\r\n    this.verticalLayer.children(this.bottomLayer);\r\n    this.children(this.verticalLayer);\r\n    // 组件\r\n    this.top = new WorkTop(this);\r\n    this.body = new WorkBody(this, this.options.body);\r\n    this.bottom = new WorkBottom(this);\r\n  }\r\n\r\n  onAttach(element) {\r\n    this.root = element;\r\n    const {\r\n      bodyLayer, topLayer, bottomLayer,\r\n    } = this;\r\n    topLayer.attach(this.top);\r\n    bottomLayer.attach(this.bottom);\r\n    bodyLayer.attach(this.body);\r\n    this.bottom.bottomMenu.setSum(0);\r\n    this.bottom.bottomMenu.setAvg(0);\r\n    this.bottom.bottomMenu.setNumber(0);\r\n  }\r\n\r\n}\r\n\r\nexport { Work };\r\n","/* global window, document */\r\nimport { cssPrefix, XSheetVersion } from './const/Constant';\r\nimport { h } from './libs/Element';\r\nimport { Work } from './core/work/Work';\r\nimport { Widget } from './libs/Widget';\r\nimport { DragPanel } from './component/dragpanel/DragPanel';\r\nimport { ElPopUp } from './component/elpopup/ElPopUp';\r\nimport { XDraw } from './canvas/XDraw';\r\nimport { PlainUtils } from './utils/PlainUtils';\r\nimport { RectRange } from './core/table/tablebase/RectRange';\r\nimport { BaseFont } from './canvas/font/BaseFont';\r\nimport { XIcon } from './core/table/xicon/XIcon';\r\nimport './styles/base.less';\r\nimport './styles/index.less';\r\n\r\nclass XSheet extends Widget {\r\n  constructor(selectors, options = {\r\n    workConfig: {\r\n      body: {\r\n        sheets: [{\r\n          tableConfig: {},\r\n        }],\r\n      },\r\n    },\r\n  }) {\r\n    super(`${cssPrefix}`);\r\n    let root = selectors;\r\n    if (typeof selectors === 'string') {\r\n      root = document.querySelector(selectors);\r\n    }\r\n    root = h(root);\r\n    root.children(this);\r\n    this.work = new Work(options);\r\n    this.attach(this.work);\r\n    ElPopUp.setRoot(this);\r\n    DragPanel.setRoot(this);\r\n  }\r\n}\r\nXSheet.version = XSheetVersion;\r\nXSheet.PlainUtils = PlainUtils;\r\nXSheet.XDraw = XDraw;\r\nXSheet.XIcon = XIcon;\r\nXSheet.RectRange = RectRange;\r\nXSheet.BaseFont = BaseFont;\r\nif (window) {\r\n  window.XSheet = XSheet;\r\n}\r\n\r\nexport { XSheet };\r\n"],"sourceRoot":""}