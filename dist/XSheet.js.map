{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/svg/cell.png","webpack:///./assets/svg/s-resize.png","webpack:///./assets/svg/e-resize.png","webpack:///./assets/svg/filter-dark.svg","webpack:///./src/lib/donwload/Download.js","webpack:///./src/const/Constant.js","webpack:///./src/utils/PlainUtils.js","webpack:///./src/lib/Element.js","webpack:///./src/lib/XEvent.js","webpack:///./src/lib/Widget.js","webpack:///./src/lib/Layer.js","webpack:///./src/lib/layer/VerticalLayer.js","webpack:///./src/lib/layer/VerticalLayerElement.js","webpack:///./src/core/work/tools/Icon.js","webpack:///./src/core/work/tools/base/Item.js","webpack:///./src/core/work/tools/Undo.js","webpack:///./src/core/work/tools/Redo.js","webpack:///./src/core/work/tools/PaintFormat.js","webpack:///./src/core/work/tools/ClearFormat.js","webpack:///./src/core/work/tools/base/DropDownItem.js","webpack:///./src/component/elpopup/ElPopUp.js","webpack:///./src/component/contextmenu/ELContextMenu.js","webpack:///./src/component/contextmenu/ELContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/format/FormatContextMenuItem.js","webpack:///./src/component/contextmenu/ELContextMenuDivider.js","webpack:///./src/core/work/tools/contextmenu/format/FormatContextMenu.js","webpack:///./src/core/work/tools/Format.js","webpack:///./src/core/work/tools/contextmenu/font/FontContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/font/FontContextMenu.js","webpack:///./src/core/work/tools/Font.js","webpack:///./src/core/work/tools/contextmenu/fontsize/FontSizeContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/fontsize/FontSizeContextMenu.js","webpack:///./src/core/work/tools/FontSize.js","webpack:///./src/core/work/tools/FontBold.js","webpack:///./src/core/work/tools/FontItalic.js","webpack:///./src/core/work/tools/UnderLine.js","webpack:///./src/core/work/tools/FontStrike.js","webpack:///./src/core/work/tools/contextmenu/fontcolor/FontColorContextMenuItem.js","webpack:///./src/component/dragpanel/DragPanel.js","webpack:///./src/component/colorpicker/ColorPicker.js","webpack:///./src/component/colorpicker/colorarray/ColorItem.js","webpack:///./src/component/colorpicker/colorarray/ColorArray.js","webpack:///./src/core/work/tools/contextmenu/fontcolor/FontColorContextMenu.js","webpack:///./src/core/work/tools/FontColor.js","webpack:///./src/core/work/tools/contextmenu/fillcolor/FillColorContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/fillcolor/FillColorContextMenu.js","webpack:///./src/core/work/tools/FillColor.js","webpack:///./src/core/work/tools/contextmenu/border/bordertype/BorderTypeContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon1.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon2.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon3.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon4.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon5.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon6.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon7.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon8.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon9.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderIcon10.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderColor.js","webpack:///./src/core/work/tools/contextmenu/icon/border/BorderType.js","webpack:///./src/core/work/tools/contextmenu/border/bordercolor/BorderColorContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/border/bordercolor/BorderColorContextMenu.js","webpack:///./src/core/work/tools/contextmenu/border/linetype/LineTypeContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/border/linetype/LineTypeContextMenu.js","webpack:///./src/canvas/XDraw.js","webpack:///./src/canvas/Line.js","webpack:///./src/core/work/tools/contextmenu/border/bordertype/BorderTypeContextMenu.js","webpack:///./src/core/work/tools/Border.js","webpack:///./src/core/work/tools/Merge.js","webpack:///./src/core/work/tools/contextmenu/icon/horizontal/HorizontalIcon1.js","webpack:///./src/core/work/tools/contextmenu/icon/horizontal/HorizontalIcon2.js","webpack:///./src/core/work/tools/contextmenu/icon/horizontal/HorizontalIcon3.js","webpack:///./src/core/work/tools/contextmenu/horizontal/HorizontalContextMenuItem.js","webpack:///./src/canvas/font/BaseFont.js","webpack:///./src/core/work/tools/contextmenu/horizontal/HorizontalContextMenu.js","webpack:///./src/core/work/tools/HorizontalAlign.js","webpack:///./src/core/work/tools/contextmenu/vertical/VerticalContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/icon/vertical/VerticalIcon1.js","webpack:///./src/core/work/tools/contextmenu/icon/vertical/VerticalIcon2.js","webpack:///./src/core/work/tools/contextmenu/icon/vertical/VerticalIcon3.js","webpack:///./src/core/work/tools/contextmenu/vertical/VerticalContextMenu.js","webpack:///./src/core/work/tools/VerticalAlign.js","webpack:///./src/core/work/tools/contextmenu/icon/textwrapping/TextWrappingIcon1.js","webpack:///./src/core/work/tools/contextmenu/icon/textwrapping/TextWrappingIcon2.js","webpack:///./src/core/work/tools/contextmenu/icon/textwrapping/TextWrappingIcon3.js","webpack:///./src/core/work/tools/contextmenu/textwrapping/TextWrappingContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/textwrapping/TextWrappingContextMenu.js","webpack:///./src/core/work/tools/TextWrapping.js","webpack:///./src/core/work/tools/contextmenu/fixed/FixedContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/fixed/FixedContextMenu.js","webpack:///./src/core/work/tools/Fixed.js","webpack:///./src/core/work/tools/Filter.js","webpack:///./src/core/work/tools/Functions.js","webpack:///./src/core/table/tablecell/CellFont.js","webpack:///./src/core/table/tablecell/Border.js","webpack:///./src/core/table/tablecell/CellBorder.js","webpack:///./src/canvas/Rect.js","webpack:///./src/core/table/xicon/XIconOffset.js","webpack:///./src/canvas/Crop.js","webpack:///./src/core/table/xicon/XIcon.js","webpack:///./src/core/table/tablecell/Cell.js","webpack:///./src/core/work/tools/contextmenu/scale/ScaleContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/scale/ScaleContextMenu.js","webpack:///./src/core/work/tools/Scale.js","webpack:///./src/core/table/tablebase/RectRange.js","webpack:///./src/core/table/xscreen/part/XScreenPart.js","webpack:///./src/core/table/xscreen/part/XScreenLTPart.js","webpack:///./src/core/table/xscreen/part/XScreenTPart.js","webpack:///./src/core/table/xscreen/part/XScreenLPart.js","webpack:///./src/core/table/xscreen/part/XScreenBRPart.js","webpack:///./src/core/table/xscreen/item/XScreenItem.js","webpack:///./src/core/table/xscreen/item/viewdisplay/XScreenViewEyes.js","webpack:///./src/core/table/xscreen/item/viewdisplay/XScreenViewLocal.js","webpack:///./src/core/table/xscreen/item/viewdisplay/XScreenViewSizer.js","webpack:///./src/core/table/xscreen/item/viewborder/XScreenStyleBorderItem.js","webpack:///./src/core/table/xscreen/item/viewborder/XScreenCssBorderItem.js","webpack:///./src/core/table/XTableMousePointer.js","webpack:///./src/core/table/xscreenitems/xselect/XSelectItem.js","webpack:///./src/component/alert/Alert.js","webpack:///./src/component/mask/Mask.js","webpack:///./src/component/filterdata/OrderAZ.js","webpack:///./src/component/filterdata/OrderZA.js","webpack:///./src/component/form/select/SelectContextMenu.js","webpack:///./src/component/form/select/SelectContextMenuItem.js","webpack:///./src/component/form/select/Select.js","webpack:///./src/component/form/input/PlainInput.js","webpack:///./src/component/filterdata/IFFilter.js","webpack:///./src/component/form/input/SearchInput.js","webpack:///./src/component/filterdata/valuefilter/ValueFilter.js","webpack:///./src/component/filterdata/FilterData.js","webpack:///./src/component/filterdata/valuefilter/ValueItem.js","webpack:///./src/core/table/xscreenitems/xfilter/XFilter.js","webpack:///./src/core/table/xscreen/item/viewborder/XScreenSvgBorderItem.js","webpack:///./src/core/table/xscreenitems/xcopystyle/XCopyStyle.js","webpack:///./src/component/confirm/Confirm.js","webpack:///./src/core/work/tools/contextmenu/fontangle/FontAngleContextMenuItem.js","webpack:///./src/core/work/tools/base/Divider.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngleDivider.js","webpack:///./src/core/work/tools/base/DropInputItem.js","webpack:///./src/core/work/tools/contextmenu/fontanglevalue/FontAngleValueContextMenuItem.js","webpack:///./src/core/work/tools/contextmenu/fontanglevalue/FontAngleValueContextMenu.js","webpack:///./src/core/work/tools/FontAngleValue.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngle1.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngle2.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngle3.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngle4.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngle5.js","webpack:///./src/core/work/tools/contextmenu/icon/fontangle/FontAngle6.js","webpack:///./src/core/work/tools/contextmenu/fontangle/FontAngleContextMenu.js","webpack:///./src/core/work/tools/FontAngle.js","webpack:///./src/core/work/TopMenu.js","webpack:///./src/core/work/options/base/Item.js","webpack:///./src/core/work/options/File.js","webpack:///./src/core/work/options/ForMart.js","webpack:///./src/core/work/options/Insert.js","webpack:///./src/core/work/options/Look.js","webpack:///./src/core/work/options/Update.js","webpack:///./src/core/work/TopOption.js","webpack:///./src/core/work/WorkTop.js","webpack:///./src/lib/layer/HorizontalLayer.js","webpack:///./src/component/scrollbar/ScrollBarX.js","webpack:///./src/component/scrollbar/ScrollBarY.js","webpack:///./src/lib/layer/HorizontalLayerElement.js","webpack:///./src/lib/layer/center/VerticalCenterElement.js","webpack:///./src/lib/layer/center/VerticalCenter.js","webpack:///./src/core/work/SheetView.js","webpack:///./src/core/work/TabView.js","webpack:///./src/core/work/Tab.js","webpack:///./src/core/table/tablebase/Scale.js","webpack:///./src/core/table/tablebase/Code.js","webpack:///./src/core/table/tablebase/Row.js","webpack:///./src/core/table/tablebase/Rows.js","webpack:///./src/core/table/tablebase/Col.js","webpack:///./src/core/table/tablebase/Cols.js","webpack:///./src/core/table/tablebase/Scroll.js","webpack:///./src/core/table/XTableKeyboard.js","webpack:///./src/core/table/tablefixed/ColFixed.js","webpack:///./src/core/table/resizer/XReSizer.js","webpack:///./src/core/table/tablefixed/RowFixed.js","webpack:///./src/core/table/resizer/YReSizer.js","webpack:///./src/core/table/highlight/XHeightLight.js","webpack:///./src/core/table/highlight/YHeightLight.js","webpack:///./src/core/table/XTableFocus.js","webpack:///./src/core/table/XTableScrollView.js","webpack:///./src/core/table/XTableAreaView.js","webpack:///./src/lib/Throttle.js","webpack:///./src/core/table/XTableEdit.js","webpack:///./src/canvas/Grid.js","webpack:///./src/canvas/Box.js","webpack:///./src/core/table/tablecell/Cells.js","webpack:///./src/utils/DateUtils.js","webpack:///./src/core/table/XTableFormat.js","webpack:///./src/canvas/RTFunction.js","webpack:///./src/canvas/Angle.js","webpack:///./src/canvas/font/DrawResult.js","webpack:///./src/canvas/font/draw/AngleBoxDraw.js","webpack:///./src/canvas/font/draw/AngleBarDraw.js","webpack:///./src/canvas/font/draw/HorizonDraw.js","webpack:///./src/canvas/font/draw/VerticalDraw.js","webpack:///./src/canvas/font/BaseRuler.js","webpack:///./src/canvas/font/PlainRuler.js","webpack:///./src/canvas/font/ruler/AngleBoxRuler.js","webpack:///./src/canvas/font/ruler/AngleBarRuler.js","webpack:///./src/canvas/font/ruler/HorizonRuler.js","webpack:///./src/canvas/font/ruler/HorizonVisual.js","webpack:///./src/canvas/font/ruler/VerticalRuler.js","webpack:///./src/canvas/font/ruler/VerticalVisual.js","webpack:///./src/canvas/font/build/DrawFontBuilder.js","webpack:///./src/core/table/tablebase/Text.js","webpack:///./src/core/table/helper/BaseCellsHelper.js","webpack:///./src/core/table/helper/StyleCellsHelper.js","webpack:///./src/core/table/helper/TextCellsHelper.js","webpack:///./src/core/table/XTableHistoryAreaView.js","webpack:///./src/core/table/helper/OperateCellsHelper.js","webpack:///./src/core/table/tablebase/XFixedMeasure.js","webpack:///./src/core/table/cellicon/CellIcon.js","webpack:///./src/core/table/cellicon/FixedCellIcon.js","webpack:///./src/core/table/cellicon/StaticCellIcon.js","webpack:///./src/core/table/xlinehandle/XLineIteratorFilter.js","webpack:///./src/core/table/xlinehandle/XLineIteratorLoop.js","webpack:///./src/core/table/xlinehandle/XLineIteratorItem.js","webpack:///./src/core/table/xlinehandle/linefilters/borderhidden/BBorderHide.js","webpack:///./src/core/table/xlinehandle/linefilters/mergenulledge/MergeBNullEdge.js","webpack:///./src/core/table/xlinehandle/linefilters/borderhidden/RBorderHide.js","webpack:///./src/core/table/xlinehandle/linefilters/mergenulledge/MergeRNullEdge.js","webpack:///./src/core/table/xlinehandle/linefilters/celloutrange/CellOutRange.js","webpack:///./src/core/table/xlinehandle/linefilters/celloutrange/RCellOutRange.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarhidden/AngleBarHide.js","webpack:///./src/core/table/xlinehandle/linegrids/LineGrid.js","webpack:///./src/core/table/xlinehandle/XLineOptimizeJoin.js","webpack:///./src/core/table/xlinehandle/linefilters/borderdisplay/BBorderShow.js","webpack:///./src/core/table/xlinehandle/linefilters/borderpriority/BBorderPriority.js","webpack:///./src/core/table/xlinehandle/linefilters/borderdisplay/TBorderShow.js","webpack:///./src/core/table/xlinehandle/linefilters/borderpriority/TBorderPriority.js","webpack:///./src/core/table/xlinehandle/linefilters/mergenulledge/MergeTNullEdge.js","webpack:///./src/core/table/xlinehandle/linefilters/borderdisplay/RBorderShow.js","webpack:///./src/core/table/xlinehandle/linefilters/borderpriority/RBorderPriority.js","webpack:///./src/core/table/xlinehandle/linefilters/borderpriority/LBorderPriority.js","webpack:///./src/core/table/xlinehandle/linefilters/borderdisplay/LBorderShow.js","webpack:///./src/core/table/xlinehandle/linefilters/mergenulledge/MergeLNullEdge.js","webpack:///./src/core/table/xlinehandle/linefilters/celloutrange/LCellOutRange.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarhidden/LAngleBarHide.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarhidden/RAngleBarHide.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarhidden/TAngleBarHide.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarhidden/BAngleBarHide.js","webpack:///./src/core/table/xlinehandle/lineborder/LineBorder.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebardisplay/AngleBarShow.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarinrow/AngleBarInRow.js","webpack:///./src/core/table/xlinehandle/anglebar/AngleBar.js","webpack:///./src/core/table/xlinehandle/lineindex/LineIndex.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarout/LAngleBarOut.js","webpack:///./src/core/table/xlinehandle/anglebarout/AngleBarLOut.js","webpack:///./src/core/table/xlinehandle/linefilters/anglebarout/RAngleBarOut.js","webpack:///./src/core/table/xlinehandle/anglebarout/AngleBarROut.js","webpack:///./src/core/table/xlinehandle/XLinePlainGenerator.js","webpack:///./src/core/table/xmerges/XMergesIndex.js","webpack:///./src/core/table/xmerges/XMergesNo.js","webpack:///./src/core/table/xmerges/XMergesNoRow.js","webpack:///./src/core/table/xmerges/XMergesItems.js","webpack:///./src/core/table/xmerges/XMergesNoCol.js","webpack:///./src/core/table/xmerges/XMergesRange.js","webpack:///./src/core/table/xmerges/XMerges.js","webpack:///./src/core/table/XTableDataItem.js","webpack:///./src/core/table/XTableDataItems.js","webpack:///./src/canvas/Path.js","webpack:///./src/canvas/Point.js","webpack:///./src/core/table/XTableStyle.js","webpack:///./src/core/table/xscreen/zone/XScreenZone.js","webpack:///./src/core/table/xscreen/zone/XScreenBRZone.js","webpack:///./src/core/table/xscreen/zone/XScreenLTZone.js","webpack:///./src/core/table/xscreen/zone/XScreenLZone.js","webpack:///./src/core/table/xscreen/zone/XScreenTZone.js","webpack:///./src/core/table/xscreen/XScreen.js","webpack:///./src/component/autofilltype/AutoFillTypeMenuItem.js","webpack:///./src/component/autofilltype/AutoFillTypeMenu.js","webpack:///./src/component/autofilltype/AutoFillType.js","webpack:///./src/core/table/helper/CellMergeCopyHelper.js","webpack:///./src/core/table/xscreenitems/xautofill/XAutoFillItem.js","webpack:///./src/core/table/tablefixed/drop/DropRowFixed.js","webpack:///./src/core/table/tablefixed/drop/DropColFixed.js","webpack:///./src/core/table/tablebase/XFixedView.js","webpack:///./src/core/table/datasnapshot/DataProxy.js","webpack:///./src/core/table/datasnapshot/proxy/TableCellDataProxy.js","webpack:///./src/core/table/datasnapshot/record/CellDataRecord.js","webpack:///./src/core/table/datasnapshot/record/MergeDataRecord.js","webpack:///./src/core/table/datasnapshot/proxy/TableMergeDataProxy.js","webpack:///./src/core/table/datasnapshot/proxy/TableColsDataProxy.js","webpack:///./src/core/table/datasnapshot/record/ColsDataRecord.js","webpack:///./src/core/table/datasnapshot/proxy/TableRowsDataProxy.js","webpack:///./src/core/table/datasnapshot/record/RowsDataRecord.js","webpack:///./src/core/table/datasnapshot/TableDataSnapshot.js","webpack:///./src/lib/Clipboard.js","webpack:///./src/core/table/xicon/XIconFocus.js","webpack:///./src/core/table/xicon/XIconBuilder.js","webpack:///./src/core/table/tablebase/RowHeightIndex.js","webpack:///./src/core/table/iterator/BaseIterator.js","webpack:///./src/core/table/iterator/RowsIterator.js","webpack:///./src/core/table/iterator/ColsIterator.js","webpack:///./src/core/table/iterator/XIteratorBuilder.js","webpack:///./src/core/table/XTableDimensions.js","webpack:///./src/core/work/Sheet.js","webpack:///./src/core/work/WorkBody.js","webpack:///./src/core/work/BottomMenu.js","webpack:///./src/core/work/WorkBottom.js","webpack:///./src/core/work/Work.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","define","download","data","strFileName","strMimeType","blob","reader","self","window","defaultMime","mimeType","payload","url","anchor","document","createElement","toString","a","String","myBlob","Blob","MozBlob","WebKitBlob","fileName","this","length","split","pop","href","indexOf","ajax","XMLHttpRequest","open","responseType","onload","e","target","response","setTimeout","send","test","navigator","msSaveBlob","dataUrlToBlob","saver","type","strUrl","parts","binData","atob","decodeURIComponent","mx","uiArr","Uint8Array","charCodeAt","winMode","setAttribute","className","innerHTML","style","display","body","appendChild","click","removeChild","URL","revokeObjectURL","userAgent","replace","confirm","location","f","src","createObjectURL","constructor","btoa","y","encodeURIComponent","FileReader","result","readAsDataURL","Constant","cssPrefix","XSheetVersion","S4","Math","random","substring","WORK_BODY_EVENT_TYPE","CHANGE_ACTIVE","SYSTEM_EVENT_TYPE","MOUSE_MOVE","MOUSE_DOWN","SCROLL","RESIZE","MOUSE_UP","KEY_UP","INPUT","KEY_DOWN","MOUSE_OVER","MOUSE_LEAVE","MOUSE_WHEEL","MOUSE_ENTER","CLICK","DRAG_START","CHANGE","VISIBILITY_CHANGE","TABLE_EVENT_TYPE","CHANGE_HEIGHT","SELECT_OVER","SCALE_CHANGE","FIXED_CHANGE","FIXED_ROW_CHANGE","SELECT_DOWN","SELECT_CHANGE","DATA_CHANGE","CHANGE_WIDTH","RESIZE_CHANGE","RENDER","FORM_EVENT_TYPE","SEARCH_INPUT_CHANGE","PLAIN_INPUT_CHANGE","FORM_SELECT_CHANGE","alphabets","DATA_TYPE","PlainUtils","isEmptyObject","isUnDef","trim","obj","getPrototypeOf","parent","sources","forEach","source","keys","v","Array","isArray","isPlainObject","mergeDeep","str","toLowerCase","arg","json","JSON","stringify","parse","assign","objOrAry","cb","total","size","val","isNumber","parseFloat","parseInt","index","idx","ret","expoNet","x","charAt","indexAt","stringAt","xn","yn","expr2xy","xy2expr","min","getSelection","focus","range","selectAllChildren","collapseToEnd","selection","createRange","moveToElementText","collapse","select","isBlank","Date","now","width","innerWidth","height","innerHeight","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","element","el","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","explorer","version","match","EMPTY","Nul","Undef","undefined","noop","Element","tag","args","elements","item","push","arguments","wrap","childNodes","ele","append","classList","remove","add","contains","k","css","top","offsetTop","left","offsetLeft","offsetHeight","offsetWidth","parentNode","getBoundingClientRect","firstChild","lastChild","previousSibling","nextSibling","flag","cls","addClass","removeClass","text","innerText","html","removeAttribute","getAttribute","removeProperty","getComputedStyle","computedStyle","message","event","CustomEvent","detail","bubbles","cancelable","dispatchEvent","querySelectorAll","eleArray","sibling","previousElementSibling","nextElementSibling","after","before","h","pool","callback","option","removeEventListener","addEventListener","rem","eqElem","eqOpt","eqType","eqCall","eles","unbind","XEvent","fn","multipleUnbind","multipleBind","doubleFunc","last","evt","current","pageX","pageY","moveFunc","upFunc","xEvtMove","stopPropagation","xEvtUp","XEventPool","Widget","nodeType","box","widget","children","onAttach","clazz","node","is","hasClass","Layer","VerticalLayer","options","VerticalLayerElement","flexGrow","Icon","iconNameEl","Item","Undo","icon","Redo","PaintFormat","sheets","sheet","splice","ClearFormat","DropDownItem","drop","title","px","cssRemoveKeys","root","instances","ElPopUp","autoWidth","autoHeight","position","POPUP_POSTION","TB","direction","status","spaces","elPopUpDownHandle","close","instance","filter","elPopUpPosition","elPopUpAutosize","elPopUpLocation","elBox","winWidth","winHeight","LR","elLeft","leftDiff","rightDiff","elTop","topDiff","bottomDIff","ELContextMenu","menus","elPopUp","setEL","destroy","ELContextMenuItem","FormatContextMenuItem","desc","iconElement","titleElement","descElement","ELContextMenuDivider","FormatContextMenu","onUpdate","items","addItem","init","first","setTitle","setActive","format","update","Format","contextMenu","setWidth","setEllipsis","formatContextMenu","FontContextMenuItem","FontContextMenu","setActiveByType","Font","fontContextMenu","FontSizeContextMenuItem","FontSizeContextMenu","FontSize","fontSizeContextMenu","FontBold","FontItalic","UnderLine","FontStrike","FontColorContextMenuItem","DragPanel","DRAG_PANEL_POSITION","CENTER","mask","content","dragPanelLocation","evt1","button","downEventXy","eventXy","mouseMoveUp","evt2","offset","viewPort","LEFT","RIGHT","TOP","removeInstance","ColorPicker","selectCb","dragPanel","color","preViewColorPoint","colorValueTips","colorInput","selectColorPoint","selectColorArea1","selectColorArea2","selectColorArea3","center","colorHuxTips","colorBar","colorBarPoint","bottom","cancelButton","selectButton","buttons","hex","len","join","hsx","max","g","b","rgbToHsb","hexToRgb","rgb","hsb","delta","t1","t2","t3","round","nr","rgbToHex","hsbToRgb","startsWith","isHex","parseRgb","e1","hexColor","xy","colorBarBox","downHue","e2","moveHue","centerBox","downSelect","moveSelect","fixHsx","colorValue","hsbToHex","isRgb","change","colorBarPointBox","colorBarPointLeft","selectColorPointBox","selectColorPointLeft","selectColorPointTop","areaColorValue","sliderPosition","hueChange","selectChange","hexToHsb","fixHex","ColorItem","isDark","checkedIcon","hide","active","show","ColorArray","colors","activeColor","setActiveByColor","FontColorContextMenu","colorPicker","customizeColorArray","colorArray","reset","array","plus","customize","FontColor","setIcon","setColor","fontColorContextMenu","FillColorContextMenuItem","FillColorContextMenu","FillColor","fillColorContextMenu","BorderTypeContextMenuItem","BorderIcon1","BorderIcon2","BorderIcon3","BorderIcon4","BorderIcon5","BorderIcon6","BorderIcon7","BorderIcon8","BorderIcon9","BorderIcon10","BorderColor","BorderType","BorderColorContextMenuItem","BorderColorContextMenu","LineTypeContextMenuItem","typeIcon","LineTypeContextMenu","DPR","devicePixelRatio","LINE_WIDTH_LOW","LINE_WIDTH_MEDIUM","LINE_WIDTH_HIGH","LINE_PIXEL_OFFSET","Base","canvas","ctx","getContext","dpr","styleTransformCssPx","srcTransformStylePx","rounding","angle","PI","CorsLine","lineWidthType","LINE_WIDTH_TYPE","low","lineColor","sx","sy","ex","ey","lineWidth","medium","high","attr","strokeStyle","polyStroke","xys","getOffsetX","getOffsetY","TypeError","corsLine","transformLinePx","pixel","offsetX","offsetY","interpolation","beginPath","moveTo","lineTo","stroke","fill","fillRect","radian","dash","measureText","save","restore","clip","setLineDash","scale","translate","deg","rotate","XDraw","fillText","path","polyInFill","points","w","rect","sw","sh","tx","ty","tw","th","drawImage","LINE_TYPE","SOLID_LINE","DOTTED_LINE","POINT_LINE","DOUBLE_LINE","SolidLine","draw","widthType","setLineColor","setLineWidthType","horizonLine","verticalLine","DottedLine","DoubleLine","padding","spacing","leftShow","topShow","rightShow","bottomShow","iFMerge","iFMergeFirstRow","iFMergeLastRow","iFMergeFirstCol","iFMergeLastCol","row","col","pos","external","ifMerge","firstRow","lastRow","firstCol","lastCol","sTopLeftCorner","sTop","sBottom","eBottomLeftCorner","eBottom","eTop","sLeft","sRight","eTopRightCorner","eRight","eLeft","sTopRightCorner","eBottomRightCorner","sBottomLeftCorner","internal","handleExternal","handleInternal","Line","solidLine","dottedLine","pointLine","doubleLine","setWidthType","tiltingLine","BorderTypeContextMenu","borderIcon1","borderIcon2","borderIcon3","borderIcon4","borderIcon5","div1","borderIcon6","borderIcon7","borderIcon8","borderIcon9","borderIcon10","div2","borderIcons","borderColor","borderType","div3","borderColorAndType","borderColorContextMenu","copyProp","lineTypeContextMenu","closeAll","isClose","preventDefault","Border","borderTypeContextMenu","Merge","HorizontalIcon1","HorizontalIcon2","HorizontalIcon3","HorizontalContextMenuItem","BaseFont","ruler","align","ALIGN","verticalAlign","VERTICAL_ALIGN","right","TEXT_WRAP","OVER_FLOW","WORD_WRAP","TRUNCATE","TEXT_DIRECTION","HORIZONTAL","VERTICAL","ANGLE","ANGLE_BAR","HorizontalContextMenu","horizontalIcon1","horizontalIcon2","horizontalIcon3","horizontalIcons","HorizontalAlign","horizontalContextMenu","VerticalContextMenuItem","VerticalIcon1","VerticalIcon2","VerticalIcon3","VerticalContextMenu","verticalIcon1","verticalIcon2","verticalIcon3","verticalIcons","VerticalAlign","verticalContextMenu","TextWrappingIcon1","TextWrappingIcon2","TextWrappingIcon3","TextWrappingContextMenuItem","TextWrappingContextMenu","textWrappingIcon1","textWrappingIcon2","textWrappingIcon3","textWrappingIcons","TextWrapping","textWrappingContextMenu","FixedContextMenuItem","FixedContextMenu","row1","row2","col1","col2","Fixed","rowStatus","colStatus","fixedContextMenu","Filter","Functions","CellFont","textWrap","strikethrough","underline","bold","italic","scaleAdapter","zIndexID","zIndex","$zIndex","$display","$color","$type","$widthType","border","origin","getZIndex","CellBorder","setBDisplay","setLDisplay","setTDisplay","setRDisplay","setBColor","setLColor","setTColor","setRColor","setBWidthType","setLWidthType","setTWidthType","setRWidthType","setBType","setLType","setTType","setRType","Rect","other","XIconOffset","Crop","XIcon","vertical","ICON_VERTICAL","horizontal","ICON_HORIZONTAL","ICON_TYPE","image","onDraw","onLeave","onMove","onDown","onEnter","icons","iconHorizontal","iconVertical","iconOffsetX","iconOffsetY","iconWidth","iconHeight","rectX","rectY","rectWidth","rectHeight","py","BOTTOM","load","sync","Image","loadImg","complete","onerror","console","error","drawCustom","positionRect","include","includeRect","crop","fillStyle","native","inRectPosition","activate","ICON_EVENT_TYPE","includePoint","setActivate","custom","Cell","background","borderAttr","fontAttr","contentWidth","leftSdistWidth","rightSdistWidth","newInstances","setContentWidth","setLeftSdistWidth","setRightSdistWidth","ScaleContextMenuItem","ScaleContextMenu","Scale","scaleContextMenu","RectRange","sri","sci","eri","eci","ref","refs","iteratorBuilder","rowFilter","getRowIterator","setBegin","setEnd","setLoop","getColIterator","j","execute","ri","ci","disjoint","coincide","equals","difference","addRet","dsr","dsc","der","dec","multiple","XScreenPart","xScreenZone","XScreenLTPart","XScreenTPart","XScreenLPart","XScreenBRPart","XScreenItem","table","lt","br","xScreen","Display","viewEyes","targetViewRange","getXScreenViewRange","part","getPart","LTDisplay","xFixedView","hasFixedTop","hasFixedLeft","getFixedView","TDisplay","fixedView","scrollView","getScrollView","BRDisplay","LDisplay","XScreenViewEyes","ltDisplay","tDisplay","brDisplay","lDisplay","setDisplay","Local","viewLocal","cols","screenView","sectionSumWidth","rows","sectionSumHeight","setTop","setLeft","LTLocal","TLocal","BRLocal","LLocal","XScreenViewLocal","tlLocal","tLocal","brLocal","lLocal","view","setLocal","Sizer","viewSizer","rectRangeSumWidth","rectRangeSumHeight","offsetToLineInside","LTSizer","TSizer","BRSizer","LSizer","XScreenViewSizer","ltSizer","tSizer","brSizer","lSizer","setSizer","RANGE_OVER_GO","LT","T","BR","L","LTT","LTL","BRT","BRL","ALL","XScreenStyleBorderItem","blt","bt","bl","bbr","overGo","getOverGo","getBorderDisplay","showBBorder","showTBorder","showLBorder","showRBorder","rowsLen","colsLen","ltt","ltl","brt","brl","XScreenCssBorderItem","setBorderType","XTableMousePointer","token","sResize","cell","eResize","KEYS","crosshair","grab","default","rowResize","colResize","pointer","SELECT_LOCAL","XSelectItem","selectLocal","activeCorner","selectRange","downRange","moveRange","ltElem","brElem","lElem","tElem","ltHighLight","lHighLight","tHighLight","brHighLight","ltCorner","lCorner","tCorner","brCorner","merges","getTableMerges","viewRange","getRiCiByXy","union","offsetHandle","borderHandle","cornerHandle","getFirstIncludes","register","mousePointer","downHandle","lock","set","trigger","moveHandle","free","hideBorder","showBorder","Alert","closeEle","titleEle","contentEle","okEle","buttonsEle","Mask","OrderAZ","OrderZA","SelectContextMenu","SelectContextMenuItem","textEle","Select","selectValue","selectText","selectIcon","setSelect","find","PlainInput","inputWrapEle","inputInnerEle","inputEle","setValue","IFFilter","IF_TYPE","NOT","titleTextEle","titleIconEle","selectEleBox","selectEle","valueInputEleBox","valueInput","addValue","addDivider","CT_EMPTY","CT_NOT_EMPTY","STR_INCLUDE","STR_NOT_INCLUDE","STR_START","STR_END","STR_EQ","DAT_EQ","DAT_BEFORE","DAT_AFTER","NUM_BEFORE","NUM_BEFORE_EQ","NUM_AFTER","NUM_AFTER_EQ","NUM_EQ","NUM_NOT_EQ","switchInput","setType","SearchInput","searchEle","ValueFilter","filterExp","filters","optionBoxEle","flagEle","clearEle","searchBoxEle","searchInput","itemsBox","selectAll","closestClass","setStatus","clearAll","RegExp","filterItems","valueItem","setIndex","empty","selectItems","FilterData","ok","no","valueFilter","ifFilter","orderAz","orderZa","noEle","okHandle","valueFilterItems","getSelectItems","valueFilterValue","getValue","ifFilterType","getType","ifFilterValue","noHandle","filterDataHandle","ValueItem","iconEle","XFilter","activeIcon","setRoot","filterFoldRow","flt","ft","fbr","fl","setBorderColor","xFilterOffset","brink","xIconBuilder","xIteratorBuilder","fixedCellIcon","getXTableStyle","each","build","darkFilter","setOnEnter","cssHeight","cssWidth","cssLeft","cssTop","setHeight","setOnDown","filterOpen","setOnMove","setOnLeave","addOrNewCell","render","findType","cells","getTableCells","targetRange","clone","rowLen","colLen","merge","getCellOrMergeCell","emptyCol","emptyRow","Set","emptyAll","getCell","clearFilterIcon","xFilterHandle","emptyRectRange","createFilterIcon","SVG","XCopyStyle","hideCopyStyle","Confirm","FontAngleContextMenuItem","Divider","FontAngleDivider","DropInputItem","input","FontAngleValueContextMenuItem","angleValue","FontAngleValueContextMenu","FontAngleValue","onChange","fontAngleValueContextMenu","FontAngle1","FontAngle2","FontAngle3","FontAngle4","FontAngle5","FontAngle6","FontAngleContextMenu","onUpdateAngle","onUpdateType","angle1","angle2","angle3","angle4","angle5","angle6","FontAngle","fontAngleContextMenu","TopMenu","workTop","sheetView","work","undo","redo","setScale","paintFormat","clearFormat","getActiveSheet","operateCellsHelper","getOperateCellsHelper","tableDataSnapshot","begin","cellDataProxy","getCellOrNewCellByViewRange","rectRange","setCell","end","font","dprFontSize","fontColor","fillColor","lineType","xTableStyle","angleCells","newCell","hasAngleCell","isAngleBarCell","setAllDisplay","setAllColor","setAllWidthType","setAllType","fontBold","fontItalic","underLine","fontStrike","horizontalAlign","textWrapping","fixed","setFixedRow","setFixedCol","functions","fontAngle","updateMaxIndex","setFormatStatus","setFontStatus","setFontSizeStatus","setFontBoldStatus","setFontItalicStatus","setUnderLineStatus","setFontStrikeStatus","setFontColorStatus","setFillColorStatus","setHorizontalAlignStatus","setVerticalAlignStatus","setTextWrappingStatus","setFontAngleStatus","setFixedStatus","canBack","back","canGo","go","xSelect","cellMergeCopyHelper","xCopyStyle","removeSheet","originViewRange","orSize","ocSize","trSize","tcSize","rSize","cSize","copyMergeContent","copyStylesContent","includeSheet","showCopyStyle","addSheet","getCellOrNew","mergeDataProxy","isNotUnDef","deleteMerge","addMerge","hideFilter","openFilter","setUndoStatus","setRedoStatus","setScaleStatus","setPaintFormatStatus","setFilterStatus","setFixedRowStatus","setFixedColStatus","firstCell","File","ForMart","Insert","Look","Update","TopOption","logoEle","optionsEle","leftEle","rightEle","file","insert","look","WorkTop","toolsMenu","attach","HorizontalLayer","ScrollBarX","scroll","to","lastBut","nextBut","block","blockLeft","maxBlockLeft","blockWidth","minBlockWidth","scrollTo","viewPortWidth","isHide","contentBox","computeScrollTo","move","maxTo","ScrollBarY","blockTop","maxBlockTop","blockHeight","minBlockHeight","contentHeight","viewPortHeight","HorizontalLayerElement","VerticalCenterElement","VerticalCenter","SheetView","sheetList","activeIndex","TabView","next","tabs","optiions","onAdd","tab","onSwitch","tabList","maxWidth","offsetSizeLeft","number","Tab","setName","ScaleAdapter","goto","Code","gridColor","Row","reCkHasAngle","hasAngelCell","Rows","minIf","getHeight","ei","rowHeight","getOrNew","Col","Cols","getWidth","colWidth","SCROLL_TYPE","H_LEFT","H_RIGHT","V_TOP","V_BOTTOM","UN","Scroll","XTableKeyboard","xTableKeyBoardDownHandle","keyCode","ColFixed","fxSci","fxEci","dropColFixed","moveOff","setSize","resize","stop","WIDTH","visualHeight","getIndexHeight","getIndexWidth","XReSizer","hoverEl","lineEl","colsDataProxy","getEventLeft","ceil","newLeft","visualWidth","xFixedMeasure","fixedWidth","indexWidth","RowFixed","fxSri","fxEri","dropRowFixed","HEIGHT","outer","YReSizer","rowsDataProxy","getEventTop","my","newTop","fixedHeight","indexHeight","XHeightLight","getLeft","YHeightLight","getTop","XTableFocus","xTableFocusDownHandle","findByNode","alike","findByChild","VIEW_MODE","CHANGE_ADD","CHANGE_NOT","STATIC","BOUND_OUT","XTableScrollView","lastView","within","XTableAreaView","xTableScrollView","Throttle","time","handle","clearTimeout","XTableEdit","throttle","xHeightLight","yHeightLight","maxHeight","realLeft","editOffset","hideEdit","mouseDoubleClick","showEdit","intersects","getCellCssStyle","action","keepLastIndex","setText","Grid","Box","fillPath","Cells","xTableData","isNotEmptyObject","getItems","map","DateUtils","dateText","defaultVal","reg","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","milliseconds","getMilliseconds","oneChar","onePart","onePartReg","res","exec","formatPart","replaceVal","dataInfo","fmt","date","floor","S","resultYear","yearFormatPart","yearVal","substr","Val","parserToDate","lastIndex","lastIndexOf","isFraction","toExponential","dateFormat","RTSinKit","tilt","abs","sin","inverse","RTCosKit","cos","nearby","ANGLE_ORIGIN","TOP_LEFT","TOP_CENTER","TOP_RIGHT","MIDDLE_LEFT","MIDDLE_CENTER","MIDDLE_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","Angle","DrawResult","rightSdist","leftSdist","AngleBoxDraw","overflow","lineHeight","textAlign","textBaseline","hasBreak","textWrapDraw","overflowDraw","truncateDraw","textWidth","line","verticalAlignPadding","getVerticalAlignPadding","alignPadding","getAlignPadding","overflowRuler","overflowText","overflowTextWidth","trigonometricWidth","trigonometricHeight","limitHeight","rtx","rty","outboundsHeight","outboundsWidth","dwAngle","drawingLine","revert","textHaveWidth","textWrapRuler","textArray","textWrapTextArray","maxLen","textWrapMaxLen","textArrayLen","textHeight","totalWidth","bx","by","jj","rx","ry","ax","ay","textWrapText","textWrapTextWidth","AngleBarDraw","trigonometricTilt","trigonometricTiltWidth","pointOffset","haveWidth","HorizonDraw","truncateRuler","truncateText","truncateTextWidth","diff","hOffset","textWrapHOffset","textLen","ti","VerticalDraw","truncateTextArray","truncateMaxLen","wOffset","textWrapWOffset","BaseRuler","USED","DEFAULT_INI","PlainRuler","AngleBoxRuler","notWidth","notHeight","used","textHypotenuseWidth","breakArray","textBreak","breakLen","bi","start","ii","AngleBarRuler","HorizonRuler","displayFont","lOffset","temp","over","VerticalRuler","char","DrawFontBuilder","TextBuilder","builder","setPadding","setDirection","buildRuler","buildFont","setRuler","Text","BaseCellsHelper","xTableAreaView","getXTableAreaView","getMerges","getCols","getCells","getXIteratorBuilder","blank","rightWidth","leftWidth","tmp","getRows","half","styleTable","getStyleTable","getHorizontalMaxWidth","getAngleBarMaxWidth","getAngleBarWrapWidth","getAngleMaxWidth","STYLE_BREAK_LOOP","StyleCellsHelper","reverseRows","reverseCols","startX","startY","newRow","newCol","cellsINCallback","mergeCallback","loopINCallback","mergeInfo","minSri","minSci","maxSri","maxSci","TEXT_BREAK_LOOP","TextCellsHelper","cellsINInfo","getCellOverFlow","XTableHistoryAreaView","lastScrollView","enterView","scrollEnterView","leaveView","getLastScrollView","coincideDifference","getEnterView","OperateCellsHelper","XFixedMeasure","CellIcon","xIcon","xIcons","getIcon","getOffset","FixedCellIcon","StaticCellIcon","XLineIteratorFilter","logic","stack","RETURN_TYPE","EXEC","FILTER_LOGIC","AND","run","JUMP","OR","XLineIteratorLoop","foldOnOff","runNewRow","runNewCol","runFilter","runEndCol","runEndRow","runComplete","endRow","endCol","jump","XLineIteratorItem","BBorderHide","MergeBNullEdge","RBorderHide","MergeRNullEdge","CellOutRange","RCellOutRange","master","getCellContentBoundOutWidth","masterBlank","nextBlank","setNext","AngleBarHide","LineGrid","bLine","rLine","bRow","breakpoint","rCols","getBItem","getRItem","XLineOptimizeJoin","ck1","equal","ck2","ck3","nextRow","BBorderShow","BBorderPriority","priority","TBorderShow","TBorderPriority","MergeTNullEdge","RBorderShow","RBorderPriority","LBorderPriority","LBorderShow","MergeLNullEdge","LCellOutRange","LAngleBarHide","RAngleBarHide","TAngleBarHide","BAngleBarHide","LineBorder","optimize","lLine","tLine","osx","oex","optimizeJoin","hbJoin","tRow","htJoin","concat","vrJoin","lCols","vlJoin","getTItem","getLItem","AngleBarShow","AngleBarInRow","AngleBar","LineIndex","LAngleBarOut","AngleBarLOut","RAngleBarOut","AngleBarROut","XLinePlainGenerator","model","MODEL","BORDER","aLine","bResult","getResult","aResult","gLine","gResult","INDEX","iLine","iResult","GRID","OUT_ANGLE_BAR_L","alLine","alResult","OUT_ANGLE_BAR_R","arLine","arResult","XMergesIndex","point","setMergeId","getMergeId","XMergesNo","XMergesNoRow","nos","XMergesItems","recovery","XMergesNoCol","XMergesRange","XMerges","xMergesNoRow","xMergesNoCol","xMergesIndex","xMergesItems","valueOf","notify","getView","getNo","clear","XTableDataItem","mergeId","XTableDataItems","isString","Path","Point","RENDER_MODE","SCALE","XTableFrozenFullRect","indexGrid","renderMode","getRenderMode","XTableFixedBar","buttonColor","rpxHeight","rpxWidth","drawBar","drawButton","XTableUI","drawX","drawY","mapOriginX","mapOriginY","mapTargetX","mapTargetY","mapWidth","mapHeight","fullScrollView","borderView","borderX","borderY","viewMode","getViewMode","getX","getY","getLeaveView","getLineView","getFullScrollView","settings","dx","getDrawX","dy","getDrawY","getMapWidth","getMapHeight","ox","getMapOriginX","oy","getMapOriginY","getMapTargetX","getMapTargetY","copyImage","XTableContentUI","staticCellIcon","loadImage","drawIcon","styleCellsHelper","getCellByViewRange","staticRect","cellRect","drawStaticXIcon","drawCellXIcon","fixedRect","drawFixedXIcon","textCellsHelper","textFont","lView","allowTextAlign","allowTextWrap","allowDirection","getBuilder","setDraw","setRect","setRow","setCol","setOverFlow","drawingFont","rView","getCellStyleBoundOutWidth","getSdistWidth","tl","tr","setPath","getLineX","getLineY","grid","optimizeEnable","showGrid","drawMap","drawClear","drawBackground","drawBoundOutBackground","drawXFont","drawBoundOutXFont","drawGridBorder","drawBoundOutGridBorder","drawXIcon","XTableIndexUI","drawColor","drawFont","XTableLeftIndexUI","getBackground","getSize","getColor","eachHeight","ch","XTableTopIndexUI","eachWidth","cw","XTableFrozenLeftIndex","XTableFrozenContent","XTableFrozenTopIndex","XTableLeftIndex","xTop","getScrollEnterView","XTableLeft","XTableTopIndex","xLeft","XTableTop","XTableContent","XTableStyle","lBorderFilter","rBorderFilter","tBorderFilter","bBorderFilter","getGridColor","xLeftFrozenIndex","xTopFrozenIndex","xTableFrozenContent","xLeftIndex","xTopIndex","xContent","xTableFrozenFullRect","xTableFixedBar","xFixedBar","boundOutWidth","fullRect","enable","hasDouble","record","rowObject","setReCkHasAngle","setHasAngelCell","lessZero","moreZero","isDisplay","XScreenZone","XScreenBRZone","XScreenLTZone","XScreenLZone","XScreenTZone","DISPLAY_AREA","XScreen","displayArea","ltZone","tZone","brZone","lZone","setZone","setXScreen","getFixedHeight","getFixedWidth","brTop","brLeft","AutoFillTypeMenuItem","AutoFillTypeMenu","FILL_TYPE","SERIALIZE","FILLING","menu","AutoFillType","autoFillTypeMenu","CopyMerge","onCopy","copyEndRow","copyStartRow","copyEndCol","copyStartCol","ori","pasteStartRow","pasteEndRow","tri","oci","pasteStartCol","pasteEndCol","tci","nextCopyCol","nextCopyRow","CopyCellIN","Serialize","getStartIndex","onSerialize","SERIALIZE_DIRECTION","serializeLeft","serializeTop","serializeRight","serializeBottom","CellMergeCopyHelper","getTableDataSnapshot","executeCopy","newMerge","hasFold","executeSerialize","XAutoFillItem","mergeForceSplit","onBeforeAutoFill","onAfterAutoFill","moveDirection","autoFillRange","autoFillType","serialize","rangeHandle","autoFill","setRange","hasFull","originSRi","originSCi","minRi","maxRi","minCi","nextCol","maxCi","unionRange","serializeContent","splitMerge","fillMerge","fillCellIN","copyCellINContent","getIncludes","DropRowFixed","DropColFixed","XFixedView","fxLeft","fxTop","DataProxy","TableCellDataProxy","snapshot","on","setCellOrNew","oldCell","$setCell","CellDataRecord","MERGE_RECORD_TYPE","ADD","DELETE","MergeDataRecord","recordType","TableMergeDataProxy","$deleteMerge","$addMerge","TableColsDataProxy","newWidth","oldWidth","$setWidth","ColsDataRecord","TableRowsDataProxy","newHeight","oldHeight","$setHeight","RowsDataRecord","TableDataSnapshot","backLayerStack","recordLayer","goLayerStack","layer","backNotice","goNotice","endNotice","Clipboard","paste","XIconFocus","XIconBuilder","fx","fy","staticIcons","fixedIcons","clearFocus","eventHandle","setFocus","RowHeightIndex","group","setSkip","BaseIterator","finishCallback","loopCallback","nextCallback","fold","RowsIterator","skipCallback","useFold","onOff","ColsIterator","XIteratorBuilder","getInstance","Dimensions","KeyBoardTabCode","keyboard","edit","$tabNext","tabNext","cLen","rLen","srcMerges","targetMerges","XTableDimensions","visualHeightCache","visualWidthCache","srcTransformCssPx","xReSizer","yReSizer","rowFixed","colFixed","clipboard","rowHeightIndex","computeIndex","initS","initV","ifv","getV","setFinish","fontSize","info","mri","mci","staticIconArray","fixedIconArray","fixedIcon","staticIcon","xIconsEvent","pointerEvent","colsReduceIf","x1","scrolling","rowsReduceIf","y1","setFixedView","Sheet","tableConfig","WorkBody","workConfig","tabSheet","sheetViewLayer","scrollBarYLayer","scrollBarXLayer","scrollBarXVerticalCenter","scrollBarXHorizontalLayer","sheetSwitchTabLayer","horizontalLayer1","horizontalLayer2","horizontalLayer1Layer","horizontalLayer2Layer","layerVerticalLayer","scrollBarY","scrollY","scrollBarX","scrollX","tabView","addTabSheet","setActiveTab","createSheet","exploreInfo","getExplorerInfo","scrollBarLocal","scrollBarSize","getActiveTable","deltaY","scrollMove","dis","dprUpdate","totalHeight","getScrollTotalHeight","getScrollTotalWidth","getContentWidth","getContentHeight","setActiveIndex","setActiveSheet","getData","Download","BottomMenu","workBottom","sum","avg","fullScreen","setNumber","setSum","setAvg","computer","isFull","WorkBottom","bottomMenu","Work","topLayer","bodyLayer","bottomLayer","verticalLayer","XSheet","selectors","querySelector"],"mappings":"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","file":"XSheet.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = __webpack_public_path__ + \"c4ab8001e109540f7ae6a34181d695d3.png\";","module.exports = __webpack_public_path__ + \"42b436e7c64603182355d52d31ea49f1.png\";","module.exports = __webpack_public_path__ + \"9dfd8685ea7e1e5c025514eec46a4547.png\";","module.exports = __webpack_public_path__ + \"51859b5219dccb48ef2a5659717d0a1b.svg\";","//download.js v4.2, by dandavis; 2008-2016. [CCBY2] see http://danml.com/download.html for tests/usage\r\n// v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\r\n// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs\r\n// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.\r\n// v4 adds AMD/UMD, commonJS, and plain browser support\r\n// v4.1 adds url download capability via solo URL argument (same domain/CORS only)\r\n// v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors\r\n// https://github.com/rndme/download\r\n\r\n(function (root, factory) {\r\n  if (typeof define === 'function' && define.amd) {\r\n    // AMD. Register as an anonymous module.\r\n    define([], factory);\r\n  } else if (typeof exports === 'object') {\r\n    // Node. Does not work with strict CommonJS, but\r\n    // only CommonJS-like environments that support module.exports,\r\n    // like Node.\r\n    module.exports = factory();\r\n  } else {\r\n    // Browser globals (root is window)\r\n    root.download = factory();\r\n  }\r\n}(this, function () {\r\n\r\n  return function download(data, strFileName, strMimeType) {\r\n\r\n    var self = window, // this script is only for browsers anyway...\r\n      defaultMime = \"application/octet-stream\", // this default mime also triggers iframe downloads\r\n      mimeType = strMimeType || defaultMime,\r\n      payload = data,\r\n      url = !strFileName && !strMimeType && payload,\r\n      anchor = document.createElement(\"a\"),\r\n      toString = function(a){return String(a);},\r\n      myBlob = (self.Blob || self.MozBlob || self.WebKitBlob || toString),\r\n      fileName = strFileName || \"download\",\r\n      blob,\r\n      reader;\r\n    myBlob= myBlob.call ? myBlob.bind(self) : Blob ;\r\n\r\n    if(String(this)===\"true\"){ //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\r\n      payload=[payload, mimeType];\r\n      mimeType=payload[0];\r\n      payload=payload[1];\r\n    }\r\n\r\n\r\n    if(url && url.length< 2048){ // if no filename and no mime, assume a url was passed as the only argument\r\n      fileName = url.split(\"/\").pop().split(\"?\")[0];\r\n      anchor.href = url; // assign href prop to temp anchor\r\n      if(anchor.href.indexOf(url) !== -1){ // if the browser determines that it's a potentially valid url path:\r\n        var ajax=new XMLHttpRequest();\r\n        ajax.open( \"GET\", url, true);\r\n        ajax.responseType = 'blob';\r\n        ajax.onload= function(e){\r\n          download(e.target.response, fileName, defaultMime);\r\n        };\r\n        setTimeout(function(){ ajax.send();}, 0); // allows setting custom ajax headers using the return:\r\n        return ajax;\r\n      } // end if valid url?\r\n    } // end if url?\r\n\r\n\r\n    //go ahead and download dataURLs right away\r\n    if(/^data\\:[\\w+\\-]+\\/[\\w+\\-]+[,;]/.test(payload)){\r\n\r\n      if(payload.length > (1024*1024*1.999) && myBlob !== toString ){\r\n        payload=dataUrlToBlob(payload);\r\n        mimeType=payload.type || defaultMime;\r\n      }else{\r\n        return navigator.msSaveBlob ?  // IE10 can't do a[download], only Blobs:\r\n          navigator.msSaveBlob(dataUrlToBlob(payload), fileName) :\r\n          saver(payload) ; // everyone else can save dataURLs un-processed\r\n      }\r\n\r\n    }//end if dataURL passed?\r\n\r\n    blob = payload instanceof myBlob ?\r\n      payload :\r\n      new myBlob([payload], {type: mimeType}) ;\r\n\r\n\r\n    function dataUrlToBlob(strUrl) {\r\n      var parts= strUrl.split(/[:;,]/),\r\n        type= parts[1],\r\n        decoder= parts[2] == \"base64\" ? atob : decodeURIComponent,\r\n        binData= decoder( parts.pop() ),\r\n        mx= binData.length,\r\n        i= 0,\r\n        uiArr= new Uint8Array(mx);\r\n\r\n      for(i;i<mx;++i) uiArr[i]= binData.charCodeAt(i);\r\n\r\n      return new myBlob([uiArr], {type: type});\r\n    }\r\n\r\n    function saver(url, winMode){\r\n\r\n      if ('download' in anchor) { //html5 A[download]\r\n        anchor.href = url;\r\n        anchor.setAttribute(\"download\", fileName);\r\n        anchor.className = \"download-js-link\";\r\n        anchor.innerHTML = \"downloading...\";\r\n        anchor.style.display = \"none\";\r\n        document.body.appendChild(anchor);\r\n        setTimeout(function() {\r\n          anchor.click();\r\n          document.body.removeChild(anchor);\r\n          if(winMode===true){setTimeout(function(){ self.URL.revokeObjectURL(anchor.href);}, 250 );}\r\n        }, 66);\r\n        return true;\r\n      }\r\n\r\n      // handle non-a[download] safari as best we can:\r\n      if(/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\r\n        url=url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\r\n        if(!window.open(url)){ // popup blocked, offer direct download:\r\n          if(confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")){ location.href=url; }\r\n        }\r\n        return true;\r\n      }\r\n\r\n      //do iframe dataURL download (old ch+FF):\r\n      var f = document.createElement(\"iframe\");\r\n      document.body.appendChild(f);\r\n\r\n      if(!winMode){ // force a mime that will download:\r\n        url=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\r\n      }\r\n      f.src=url;\r\n      setTimeout(function(){ document.body.removeChild(f); }, 333);\r\n\r\n    }//end saver\r\n\r\n\r\n\r\n\r\n    if (navigator.msSaveBlob) { // IE10+ : (has Blob, but not a[download] or URL)\r\n      return navigator.msSaveBlob(blob, fileName);\r\n    }\r\n\r\n    if(self.URL){ // simple fast and modern way using Blob and URL:\r\n      saver(self.URL.createObjectURL(blob), true);\r\n    }else{\r\n      // handle non-Blob()+non-URL browsers:\r\n      if(typeof blob === \"string\" || blob.constructor===toString ){\r\n        try{\r\n          return saver( \"data:\" +  mimeType   + \";base64,\"  +  self.btoa(blob)  );\r\n        }catch(y){\r\n          return saver( \"data:\" +  mimeType   + \",\" + encodeURIComponent(blob)  );\r\n        }\r\n      }\r\n\r\n      // Blob but not URL support:\r\n      reader=new FileReader();\r\n      reader.onload=function(e){\r\n        saver(this.result);\r\n      };\r\n      reader.readAsDataURL(blob);\r\n    }\r\n    return true;\r\n  }; /* end download() */\r\n}));\r\n","const Constant = {};\nconst cssPrefix = 'x-sheet';\nconst XSheetVersion = `${cssPrefix} 1.0.0-develop`;\nConstant.WORK_BODY_EVENT_TYPE = {\n  CHANGE_ACTIVE: 'changeactive',\n};\nConstant.SYSTEM_EVENT_TYPE = {\n  MOUSE_MOVE: 'mousemove',\n  MOUSE_DOWN: 'mousedown',\n  SCROLL: 'scroll',\n  RESIZE: 'resize',\n  MOUSE_UP: 'mouseup',\n  KEY_UP: 'keyup',\n  INPUT: 'input',\n  KEY_DOWN: 'keydown',\n  MOUSE_OVER: 'mouseover',\n  MOUSE_LEAVE: 'mouseleave',\n  MOUSE_WHEEL: 'wheel',\n  MOUSE_ENTER: 'mouseenter',\n  CLICK: 'click',\n  DRAG_START: 'dragstart',\n  CHANGE: 'change',\n  VISIBILITY_CHANGE: 'visibilitychange',\n};\nConstant.TABLE_EVENT_TYPE = {\n  CHANGE_HEIGHT: 'changeheight',\n  SELECT_OVER: 'selectover',\n  SCALE_CHANGE: 'scalechange',\n  FIXED_CHANGE: 'fixedchange',\n  FIXED_ROW_CHANGE: 'fixedrowchange',\n  SELECT_DOWN: 'selectdown',\n  SELECT_CHANGE: 'selectchange',\n  DATA_CHANGE: 'datachange',\n  CHANGE_WIDTH: 'changewidth',\n  RESIZE_CHANGE: 'resizechange',\n  RENDER: 'render',\n};\nConstant.FORM_EVENT_TYPE = {\n  SEARCH_INPUT_CHANGE: 'searchinputchange',\n  PLAIN_INPUT_CHANGE: 'plaininputchange',\n  FORM_SELECT_CHANGE: 'formselectchange',\n};\nexport {\n  XSheetVersion,\n  cssPrefix,\n  Constant,\n};\n","/* global navigator document window */\r\n\r\nfunction S4() {\r\n  // eslint-disable-next-line no-bitwise\r\n  return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n}\r\n\r\nconst alphabets = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\nconst DATA_TYPE = {\r\n  String: 1,\r\n  Boolean: 2,\r\n  Number: 3,\r\n  Object: 4,\r\n  Array: 5,\r\n  Function: 6,\r\n  Null: 7,\r\n  Undefined: 8,\r\n  Promise: 9,\r\n  GeneratorFunction: 10,\r\n  AsyncFunction: 11,\r\n  BigInt: 12,\r\n  Symbol: 13,\r\n  Un: 14,\r\n};\r\n\r\nclass PlainUtils {\r\n\r\n  static isWindows() {\r\n    return /windows|win32/i.test(navigator.userAgent);\r\n  }\r\n\r\n  static isMac() {\r\n    return /macintosh|mac os x/i.test(navigator.userAgent);\r\n  }\r\n\r\n  static isNotEmptyObject(object) {\r\n    return !PlainUtils.isEmptyObject(object);\r\n  }\r\n\r\n  static isEmptyObject(object) {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const key in object) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (object.hasOwnProperty(key)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  static isUnDef(e) {\r\n    return e === undefined || e === null;\r\n  }\r\n\r\n  static isNotUnDef(e) {\r\n    return !this.isUnDef(e);\r\n  }\r\n\r\n  static isNumber(e) {\r\n    return /^(-?\\d+.\\d+)$|^(-?\\d+)$/.test(e);\r\n  }\r\n\r\n  static isFraction(e) {\r\n    return /^\\d+\\/\\d+$/.test(e);\r\n  }\r\n\r\n  static isFunction(e) {\r\n    const type = PlainUtils.type(e);\r\n    return type === DATA_TYPE.Function;\r\n  }\r\n\r\n  static isArray(e) {\r\n    return PlainUtils.type(e) === DATA_TYPE.Array;\r\n  }\r\n\r\n  static isBlank(s) {\r\n    if (PlainUtils.isUnDef(s)) {\r\n      return true;\r\n    }\r\n    return s.toString().trim() === '';\r\n  }\r\n\r\n  static isPlainObject(obj) {\r\n    if (PlainUtils.isUnDef(obj)) {\r\n      return false;\r\n    }\r\n    return Object.getPrototypeOf(obj) === Object.getPrototypeOf({});\r\n  }\r\n\r\n  static isString(obj) {\r\n    return PlainUtils.type(obj) === DATA_TYPE.String;\r\n  }\r\n\r\n  static isChildType(obj, parent) {\r\n    return obj instanceof parent;\r\n  }\r\n\r\n  static mergeDeep(object = {}, ...sources) {\r\n    if (PlainUtils.isUnDef(object)) {\r\n      return {};\r\n    }\r\n    if (PlainUtils.isUnDef(sources) || sources.length === 0) {\r\n      return object;\r\n    }\r\n    sources.forEach((source) => {\r\n      if (PlainUtils.isUnDef(source)) return;\r\n      Object.keys(source).forEach((key) => {\r\n        const v = source[key];\r\n        if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean') {\r\n          object[key] = v;\r\n        } else if (typeof v !== 'function' && !Array.isArray(v) && PlainUtils.isPlainObject(v)) {\r\n          object[key] = object[key] || {};\r\n          PlainUtils.mergeDeep(object[key], v);\r\n        } else {\r\n          object[key] = v;\r\n        }\r\n      });\r\n    });\r\n    return object;\r\n  }\r\n\r\n  static toLowCase(str) {\r\n    return str.toLowerCase();\r\n  }\r\n\r\n  static type(arg) {\r\n    const type = Object.prototype.toString.call(arg);\r\n    switch (type) {\r\n      case '[object Null]':\r\n        return DATA_TYPE.Null;\r\n      case '[object Undefined]':\r\n        return DATA_TYPE.Undefined;\r\n      case '[object String]':\r\n        return DATA_TYPE.String;\r\n      case '[object Boolean]':\r\n        return DATA_TYPE.Boolean;\r\n      case '[object Number]':\r\n        return DATA_TYPE.Number;\r\n      case '[object Function]':\r\n        return DATA_TYPE.Function;\r\n      case '[object Array]':\r\n        return DATA_TYPE.Array;\r\n      case '[object Promise]':\r\n        return DATA_TYPE.Promise;\r\n      case '[object GeneratorFunction]':\r\n        return DATA_TYPE.GeneratorFunction;\r\n      case '[object AsyncFunction]':\r\n        return DATA_TYPE.AsyncFunction;\r\n      case '[object BigInt]':\r\n        return DATA_TYPE.BigInt;\r\n      case '[object Symbol]':\r\n        return DATA_TYPE.Symbol;\r\n      default:\r\n        return DATA_TYPE.Un;\r\n    }\r\n  }\r\n\r\n  static cloneDeep(object) {\r\n    const json = JSON.stringify(object);\r\n    return JSON.parse(json);\r\n  }\r\n\r\n  static copyProp(t, s) {\r\n    return Object.assign(t, s);\r\n  }\r\n\r\n  static sum(objOrAry, cb = value => value) {\r\n    let total = 0;\r\n    let size = 0;\r\n    Object.keys(objOrAry).forEach((key) => {\r\n      total += cb(objOrAry[key], key);\r\n      size += 1;\r\n    });\r\n    return [total, size];\r\n  }\r\n\r\n  static parseFloat(val) {\r\n    if (PlainUtils.isNumber(val)) return parseFloat(val);\r\n    return 0;\r\n  }\r\n\r\n  static parseInt(val) {\r\n    if (PlainUtils.isNumber(val)) return parseInt(val, 10);\r\n    return 0;\r\n  }\r\n\r\n  static stringAt(index) {\r\n    let str = '';\r\n    let idx = index;\r\n    while (idx >= alphabets.length) {\r\n      idx /= alphabets.length;\r\n      idx -= 1;\r\n      str += alphabets[parseInt(idx, 10) % alphabets.length];\r\n    }\r\n    const last = index % alphabets.length;\r\n    str += alphabets[last];\r\n    return str;\r\n  }\r\n\r\n  static indexAt(str) {\r\n    let ret = 0;\r\n    for (let i = 0; i < str.length - 1; i += 1) {\r\n      const idx = str.charCodeAt(i) - 65;\r\n      const expoNet = str.length - 1 - i;\r\n      ret += (alphabets.length ** expoNet) + (alphabets.length * idx);\r\n    }\r\n    ret += str.charCodeAt(str.length - 1) - 65;\r\n    return ret;\r\n  }\r\n\r\n  static expr2xy(src) {\r\n    let x = '';\r\n    let y = '';\r\n    for (let i = 0; i < src.length; i += 1) {\r\n      if (src.charAt(i) >= '0' && src.charAt(i) <= '9') {\r\n        y += src.charAt(i);\r\n      } else {\r\n        x += src.charAt(i);\r\n      }\r\n    }\r\n    return [PlainUtils.indexAt(x), parseInt(y, 10) - 1];\r\n  }\r\n\r\n  static xy2expr(x, y) {\r\n    return `${PlainUtils.stringAt(x)}${y + 1}`;\r\n  }\r\n\r\n  static expr2expr(src, xn, yn) {\r\n    const [x, y] = PlainUtils.expr2xy(src);\r\n    return PlainUtils.xy2expr(x + xn, y + yn);\r\n  }\r\n\r\n  static minIf(v, min) {\r\n    if (v < min) return min;\r\n    return v;\r\n  }\r\n\r\n  static keepLastIndex(obj) {\r\n    if (window.getSelection) {\r\n      obj.focus();\r\n      const range = window.getSelection();\r\n      range.selectAllChildren(obj);\r\n      range.collapseToEnd();\r\n    } else if (document.selection) {\r\n      const range = document.selection.createRange();\r\n      range.moveToElementText(obj);\r\n      range.collapse(false);\r\n      range.select();\r\n    }\r\n  }\r\n\r\n  static trim(s) {\r\n    if (this.isBlank(s)) return '';\r\n    return s.trim();\r\n  }\r\n\r\n  static now() {\r\n    return Date.now().toString();\r\n  }\r\n\r\n  static viewPort() {\r\n    return {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    };\r\n  }\r\n\r\n  static exitFullscreen() {\r\n    if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.msExitFullscreen) {\r\n      document.msExitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    }\r\n  }\r\n\r\n  static fullScreen(element) {\r\n    if (element.el) {\r\n      element = element.el;\r\n    }\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen();\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen();\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen();\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen();\r\n    }\r\n  }\r\n\r\n  static isFull() {\r\n    return !!(document.webkitIsFullScreen || document.mozFullScreen\r\n      || document.msFullscreenElement || document.fullscreenElement);\r\n  }\r\n\r\n  static uuid() {\r\n    return (`${S4() + S4()}${S4()}${S4()}${S4()}${S4()}${S4()}${S4()}`);\r\n  }\r\n\r\n  static getExplorerInfo() {\r\n    const explorer = window.navigator.userAgent.toLowerCase();\r\n    // firefox\r\n    if (explorer.indexOf('firefox') >= 0) {\r\n      const ver = explorer.match(/firefox\\/([\\d.]+)/)[1];\r\n      return { type: 'Firefox', version: ver };\r\n    }\r\n    // Chrome\r\n    if (explorer.indexOf('chrome') >= 0) {\r\n      const ver = explorer.match(/chrome\\/([\\d.]+)/)[1];\r\n      return { type: 'Chrome', version: ver };\r\n    }\r\n    // Opera\r\n    if (explorer.indexOf('opera') >= 0) {\r\n      const ver = explorer.match(/opera.([\\d.]+)/)[1];\r\n      return { type: 'Opera', version: ver };\r\n    }\r\n    // Safari\r\n    if (explorer.indexOf('Safari') >= 0) {\r\n      const ver = explorer.match(/version\\/([\\d.]+)/)[1];\r\n      return { type: 'Safari', version: ver };\r\n    }\r\n    // ie\r\n    if (explorer.indexOf('msie') >= 0) {\r\n      const ver = explorer.match(/msie ([\\d.]+)/)[1];\r\n      return { type: 'IE', version: ver };\r\n    }\r\n    // undefined\r\n    return undefined;\r\n  }\r\n\r\n}\r\nPlainUtils.EMPTY = '';\r\nPlainUtils.Nul = null;\r\nPlainUtils.Undef = undefined;\r\nPlainUtils.noop = () => {};\r\n\r\nexport {\r\n  PlainUtils,\r\n};\r\n","/* global document CustomEvent window */\r\nimport { PlainUtils } from '../utils/PlainUtils';\r\n\r\n/**\r\n * Element\r\n */\r\nclass Element {\r\n\r\n  /**\r\n   * 包装元素\r\n   */\r\n  static wrap(args) {\r\n    if (PlainUtils.isArray(args)) {\r\n      const elements = [];\r\n      args.forEach((item) => {\r\n        if (item instanceof Element) {\r\n          elements.push(item);\r\n        } else {\r\n          elements.push(new Element(item));\r\n        }\r\n      });\r\n      return elements;\r\n    }\r\n    return new Element(args);\r\n  }\r\n\r\n  /**\r\n   * Element\r\n   * @param tag\r\n   * @param className\r\n   */\r\n  constructor(tag, className = '') {\r\n    if (typeof tag === 'string') {\r\n      this.el = document.createElement(tag);\r\n      this.el.className = className;\r\n    } else {\r\n      this.el = tag;\r\n    }\r\n    this.el.data = [];\r\n  }\r\n\r\n  /**\r\n   * 空参数时返回子节点, 有参数时插入子节点\r\n   * @param args\r\n   * @returns {Element|NodeListOf<ChildNode>|ActiveX.IXMLDOMNodeList}\r\n   */\r\n  children(...args) {\r\n    if (arguments.length === 0) {\r\n      return Element.wrap(this.el.childNodes);\r\n    }\r\n    args.forEach(ele => this.append(ele));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 在当前元素中插入指定节点\r\n   * @param ele\r\n   */\r\n  append(ele) {\r\n    this.el.appendChild(ele.el);\r\n  }\r\n\r\n  /**\r\n   * 删除Class名称\r\n   * @param name\r\n   * @returns {Element}\r\n   */\r\n  removeClass(name) {\r\n    this.el.classList.remove(name);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 添加Class名称\r\n   * @param name\r\n   * @returns {Element}\r\n   */\r\n  addClass(name) {\r\n    this.el.classList.add(name);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 是否具有指定Class名称\r\n   * @param name\r\n   * @returns {boolean}\r\n   */\r\n  hasClass(name) {\r\n    return this.el.classList.contains(name);\r\n  }\r\n\r\n  /**\r\n   * 数据绑定\r\n   * @param key\r\n   * @param value\r\n   * @returns {Element|*}\r\n   */\r\n  data(key, value) {\r\n    if (value !== undefined) {\r\n      this.el.data[key] = value;\r\n      return this;\r\n    }\r\n    return this.el.data[key];\r\n  }\r\n\r\n  /**\r\n   * 元素定位\r\n   * @param value\r\n   * @returns {{top: *, left: *, width: *, height: *}|Element}\r\n   */\r\n  offset(value) {\r\n    if (value !== undefined) {\r\n      Object.keys(value).forEach((k) => {\r\n        this.css(k, `${value[k]}px`);\r\n      });\r\n      return this;\r\n    }\r\n    const {\r\n      offsetTop, offsetLeft, offsetHeight, offsetWidth,\r\n    } = this.el;\r\n    return {\r\n      top: offsetTop,\r\n      left: offsetLeft,\r\n      height: offsetHeight,\r\n      width: offsetWidth,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 获取当前元素的父节点\r\n   * @returns {Element}\r\n   */\r\n  parent() {\r\n    return Element.wrap(this.el.parentNode)\r\n  }\r\n\r\n  /**\r\n   * 获取元素坐标信息\r\n   * getBoundingClientRect\r\n   * @returns {DOMRect}\r\n   */\r\n  box() {\r\n    return this.el.getBoundingClientRect();\r\n  }\r\n\r\n  /**\r\n   * 获取当前第一个子元素\r\n   * @returns {*}\r\n   */\r\n  first() {\r\n    return Element.wrap(this.el.firstChild);\r\n  }\r\n\r\n  /**\r\n   * 获取最后一个子元素\r\n   * @returns {*}\r\n   */\r\n  last() {\r\n    return Element.wrap(this.el.lastChild);\r\n  }\r\n\r\n  /**\r\n   * 删除当前元素下的子元素\r\n   * @param ele\r\n   * @returns {boolean|ActiveX.IXMLDOMNode|*}\r\n   */\r\n  remove(ele) {\r\n    this.el.removeChild(ele.el || ele);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 当前元素是否包含指定节点\r\n   * @param ele\r\n   * @returns {boolean|*}\r\n   */\r\n  contains(ele) {\r\n    return this.el.contains(ele.el);\r\n  }\r\n\r\n  /**\r\n   * 获取当前元素的上一个元素\r\n   * @returns {*}\r\n   */\r\n  prev() {\r\n    return Element.wrap(this.el.previousSibling);\r\n  }\r\n\r\n  /**\r\n   * 获取当前元素的下一个元素\r\n   * @returns {*}\r\n   */\r\n  next() {\r\n    return Element.wrap(this.el.nextSibling);\r\n  }\r\n\r\n  /**\r\n   * 设置元素的激活状态\r\n   * @param flag\r\n   * @param cls\r\n   * @returns {Element}\r\n   */\r\n  active(flag = true, cls = 'active') {\r\n    if (flag) this.addClass(cls);\r\n    else this.removeClass(cls);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 设置元素文本\r\n   * @param text\r\n   * @returns {string|Element}\r\n   */\r\n  text(text) {\r\n    if (text !== undefined) {\r\n      this.el.innerText = text;\r\n      return this;\r\n    }\r\n    return this.el.innerText;\r\n  }\r\n\r\n  /**\r\n   * 设置元素html内容\r\n   * @param html\r\n   * @returns {Element|*}\r\n   */\r\n  html(html) {\r\n    if (html !== undefined) {\r\n      this.el.innerHTML = html;\r\n      return this;\r\n    }\r\n    return this.el.innerHTML;\r\n  }\r\n\r\n  /**\r\n   * 当前元素设置焦点\r\n   */\r\n  focus() {\r\n    this.el.focus();\r\n  }\r\n\r\n  /**\r\n   * 删除元素属性\r\n   * @param key\r\n   * @returns {Element}\r\n   */\r\n  removeAttr(key) {\r\n    this.el.removeAttribute(key);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 添加元素属性\r\n   * @param key\r\n   * @param value\r\n   * @returns {string|Element}\r\n   */\r\n  attr(key, value) {\r\n    if (value !== undefined) {\r\n      this.el.setAttribute(key, value);\r\n    } else {\r\n      if (typeof key === 'string') {\r\n        return this.el.getAttribute(key);\r\n      }\r\n      Object.keys(key).forEach((k) => {\r\n        this.el.setAttribute(k, key[k]);\r\n      });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 设置元素Value\r\n   * @param v\r\n   * @returns {Element|*}\r\n   */\r\n  val(v) {\r\n    if (v !== undefined) {\r\n      this.el.value = v;\r\n      return this;\r\n    }\r\n    return this.el.value;\r\n  }\r\n\r\n  /**\r\n   * 删除元素style属性\r\n   * @param keys\r\n   * @returns {Element}\r\n   */\r\n  cssRemoveKeys(...keys) {\r\n    keys.forEach(k => this.el.style.removeProperty(k));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 设置元素属性\r\n   * @param name\r\n   * @param value\r\n   * @returns {Element|*}\r\n   */\r\n  css(name, value) {\r\n    if (value === undefined && typeof name !== 'string') {\r\n      Object.keys(name).forEach((k) => {\r\n        this.el.style[k] = name[k];\r\n      });\r\n      return this;\r\n    }\r\n    if (value !== undefined) {\r\n      this.el.style[name] = value;\r\n      return this;\r\n    }\r\n    return this.el.style[name];\r\n  }\r\n\r\n  /**\r\n   * 获取元素计算完成的样式\r\n   * @returns {CSSStyleDeclaration}\r\n   */\r\n  computedStyle() {\r\n    return window.getComputedStyle(this.el, null);\r\n  }\r\n\r\n  /**\r\n   * 显示\r\n   * @returns {Element}\r\n   */\r\n  show() {\r\n    const style = this.computedStyle();\r\n    if (style && style.display !== 'block') {\r\n      this.css('display', 'block');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 隐藏\r\n   * @returns {Element}\r\n   */\r\n  hide() {\r\n    const style = this.computedStyle();\r\n    if (style && style.display !== 'none') {\r\n      this.css('display', 'none');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 事件触发\r\n   * @param type\r\n   * @param message\r\n   */\r\n  trigger(type, message) {\r\n    const event = new CustomEvent(type, {\r\n      detail: message,\r\n      bubbles: true,\r\n      cancelable: false,\r\n    });\r\n    this.el.dispatchEvent(event);\r\n  }\r\n\r\n  /**\r\n   * 查找子元素\r\n   * @param select\r\n   * @returns {[]|Element}\r\n   */\r\n  find(select) {\r\n    const result = this.el.querySelectorAll(select);\r\n    if (result && result.length === 1) {\r\n      return new Element(result[0]);\r\n    }\r\n    const eleArray = [];\r\n    if (result) {\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      for (const item of result) {\r\n        eleArray.push(new Element(item));\r\n      }\r\n    }\r\n    return eleArray;\r\n  }\r\n\r\n  /**\r\n   * 获取当前元素的兄弟节点\r\n   * @returns {[]}\r\n   */\r\n  sibling() {\r\n    let sibling = this.el;\r\n    const result = [];\r\n    // eslint-disable-next-line no-cond-assign\r\n    while ((sibling = sibling.previousElementSibling) !== null) result.push(new Element(sibling));\r\n    sibling = this.el;\r\n    // eslint-disable-next-line no-cond-assign\r\n    while ((sibling = sibling.nextElementSibling) !== null) result.push(new Element(sibling));\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * 比较dom是否相同\r\n   * @param ele\r\n   * @returns {boolean}\r\n   */\r\n  is(ele) {\r\n    return this.el === ele.el;\r\n  }\r\n\r\n  /**\r\n   * 在当前元素之后插入新元素\r\n   * @param ele\r\n   */\r\n  after(ele) {\r\n    this.el.after(ele.el);\r\n  }\r\n\r\n  /**\r\n   * 在当前元素之前插入新元素\r\n   * @param ele\r\n   */\r\n  before(ele) {\r\n    this.el.before(ele.el);\r\n  }\r\n\r\n  /**\r\n   * 清空元素中的所有内容\r\n   */\r\n  empty() {\r\n    this.html('');\r\n  }\r\n\r\n}\r\n\r\nconst h = (tag, className = '') => new Element(tag, className);\r\n\r\nexport {\r\n  Element,\r\n  h,\r\n};\r\n","import { Constant } from '../const/Constant';\r\nimport { Element } from './Element';\r\n\r\nclass BindPool {\r\n\r\n  constructor() {\r\n    this.pool = [];\r\n  }\r\n\r\n  unbind(ele, type, callback, option) {\r\n    if (ele instanceof Element) {\r\n      ele = ele.el;\r\n    }\r\n    const result = this.remove(ele, type, callback, option);\r\n    if (result.length) {\r\n      result.forEach((item) => {\r\n        ele.removeEventListener(item.type, item.callback, item.option);\r\n      });\r\n    } else {\r\n      ele.removeEventListener(type, callback, option);\r\n    }\r\n  }\r\n\r\n  bind(ele, type, callback, option) {\r\n    if (ele instanceof Element) {\r\n      ele = ele.el;\r\n    }\r\n    this.pool.push({\r\n      ele, type, callback, option,\r\n    });\r\n    ele.addEventListener(type, callback, option);\r\n  }\r\n\r\n  remove(ele, type = '*', callback = null, option = null) {\r\n    const pool = [];\r\n    const rem = [];\r\n    this.pool.forEach((item) => {\r\n      const eqElem = ele === item.ele;\r\n      const eqOpt = option === null || option === item.option;\r\n      const eqType = type === '*' || type === item.type;\r\n      const eqCall = callback === null || callback === item.callback;\r\n      if (eqElem && eqType && eqCall && eqOpt) {\r\n        rem.push(item);\r\n      } else {\r\n        pool.push(item);\r\n      }\r\n    });\r\n    this.pool = pool;\r\n    return rem;\r\n  }\r\n\r\n  multipleUnbind(eles, type, callback, option) {\r\n    eles.forEach((item) => {\r\n      this.unbind(item, type, callback, option);\r\n    });\r\n  }\r\n\r\n  multipleBind(eles, type, callback, option) {\r\n    eles.forEach((item) => {\r\n      this.bind(item, type, callback, option);\r\n    });\r\n  }\r\n\r\n}\r\nconst pool = new BindPool();\r\n\r\nclass XEvent {\r\n\r\n  static unbind(target, name, fn, option = false) {\r\n    if (Array.isArray(target)) {\r\n      pool.multipleUnbind(target, name, fn, option);\r\n    } else {\r\n      pool.unbind(target, name, fn, option);\r\n    }\r\n  }\r\n\r\n  static bind(target, name, fn, option = false) {\r\n    if (Array.isArray(target)) {\r\n      pool.multipleBind(target, name, fn, option);\r\n    } else {\r\n      pool.bind(target, name, fn, option);\r\n    }\r\n  }\r\n\r\n  static mouseDoubleClick(target, doubleFunc = () => {}) {\r\n    let last = 0;\r\n    let x = 0;\r\n    let y = 0;\r\n    XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (evt) => {\r\n      const current = Date.now();\r\n      const { pageX, pageY } = evt;\r\n      const diff = current - last <= 300\r\n      if (diff && pageX === x && pageY === y) {\r\n        doubleFunc(evt);\r\n        last = 0;\r\n        x = 0;\r\n        y = 0;\r\n      } else {\r\n        x = pageX;\r\n        y = pageY;\r\n        last = current;\r\n      }\r\n    });\r\n  }\r\n\r\n  static mouseMoveUp(target, moveFunc = () => {}, upFunc = () => {}) {\r\n    const xEvtMove = (evt) => {\r\n      moveFunc(evt);\r\n      evt.stopPropagation();\r\n    };\r\n    const xEvtUp = (evt) => {\r\n      XEvent.unbind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, xEvtMove, true);\r\n      XEvent.unbind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp, true);\r\n      upFunc(evt);\r\n      evt.stopPropagation();\r\n    };\r\n    XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, xEvtMove, true);\r\n    XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp, true);\r\n  }\r\n\r\n}\r\nwindow.XEventPool = pool;\r\n\r\nexport {\r\n  XEvent\r\n};\r\n","import { Element, h } from './Element';\r\nimport { cssPrefix } from '../const/Constant';\r\nimport { XEvent } from './XEvent';\r\n\r\n/**\r\n * Life\r\n */\r\nclass Life extends Element {\r\n\r\n  onAttach() { }\r\n\r\n}\r\n\r\n/**\r\n * Widget\r\n */\r\nclass Widget extends Life {\r\n\r\n  /**\r\n   * Widget\r\n   * @param className\r\n   * @param nodeType\r\n   */\r\n  constructor(className = '', nodeType = \"div\") {\r\n    if (typeof className === 'string') {\r\n      super(nodeType, `${cssPrefix}-widget ${className}`);\r\n    } else {\r\n      super(className);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 计算鼠标在当前\r\n   * 元素中的位置\r\n   * @param event\r\n   * @param ele\r\n   * @returns {{x: number, y: number}}\r\n   */\r\n  eventXy(event, ele = this) {\r\n    const { top, left } = ele.box();\r\n    return {\r\n      x: event.pageX - left,\r\n      y: event.pageY - top,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 追加节点\r\n   * 触发onAttach事件\r\n   * @param widget\r\n   */\r\n  attach(widget) {\r\n    this.children(widget);\r\n    widget.onAttach(this);\r\n  }\r\n\r\n  /**\r\n   * 查找最邻近\r\n   * 的class元素\r\n   * @param clazz\r\n   */\r\n  closestClass(clazz) {\r\n    let node = this;\r\n    while (!h(document.body).is(node)) {\r\n      if (node.hasClass(clazz)) {\r\n        return node;\r\n      }\r\n      node = node.parent();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    XEvent.unbind(this);\r\n  }\r\n\r\n}\r\n\r\nconst w = (className = '', nodeType = \"div\") => new Widget(className, nodeType);\r\n\r\nexport {\r\n  Widget,\r\n  w\r\n};\r\n","import { Widget } from './Widget';\r\nimport { cssPrefix } from '../const/Constant';\r\n\r\nclass Layer extends Widget {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-layer ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {Layer}\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { Layer } from '../Layer';\r\n\r\nclass VerticalLayer extends Layer {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-vertical-layer`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      style: {},\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { VerticalLayer };\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { Layer } from '../Layer';\r\n\r\nclass VerticalLayerElement extends Layer {\r\n  constructor(options) {\r\n    super(`${cssPrefix}-vertical-layer-element`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      style: {\r\n        flexGrow: '0',\r\n      },\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { VerticalLayerElement };\r\n","import { Widget } from '../../../lib/Widget';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { h } from '../../../lib/Element';\r\n\r\nclass Icon extends Widget {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-icon`);\r\n    this.iconNameEl = h('div', `${cssPrefix}-icon-img ${className}`);\r\n    this.children(this.iconNameEl);\r\n  }\r\n\r\n  setWidth(width) {\r\n    this.iconNameEl.css('width', `${width}px`);\r\n  }\r\n\r\n  setHeight(height) {\r\n    this.iconNameEl.css('height', `${height}px`);\r\n  }\r\n\r\n}\r\n\r\nexport { Icon };\r\n","import { Widget } from '../../../../lib/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass Item extends Widget {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-tools-item ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport { Item };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass Undo extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-undo`);\r\n    this.icon = new Icon('undo');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { Undo };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass Redo extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-redo`);\r\n    this.icon = new Icon('redo');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { Redo };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\n\r\nclass PaintFormat extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-point-format`);\r\n    this.icon = new Icon('point-format');\r\n    this.sheets = [];\r\n    this.children(this.icon);\r\n  }\r\n\r\n  addSheet(sheet) {\r\n    this.sheets.push(sheet);\r\n  }\r\n\r\n  removeSheet(sheet) {\r\n    for (let i = 0; i < this.sheets.length; i += 1) {\r\n      if (this.sheets[i] === sheet) {\r\n        this.sheets.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  includeSheet(sheet) {\r\n    for (let i = 0; i < this.sheets.length; i += 1) {\r\n      if (this.sheets[i] === sheet) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\nexport { PaintFormat };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\n\r\nclass ClearFormat extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-clear-format`);\r\n    this.icon = new Icon('clear-format');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { ClearFormat };\r\n","import { Item } from './Item';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\nimport { h } from '../../../../lib/Element';\r\nimport { Icon } from '../Icon';\r\n\r\nclass DropDownItem extends Item {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-tools-drop-down-item ${className}`);\r\n    this.drop = h('div', `${cssPrefix}-tools-drop-down-item-mark`);\r\n    this.title = h('div', `${cssPrefix}-tools-drop-down-item-title`);\r\n    this.drop.children(new Icon('arrow-down'));\r\n    this.children(this.title);\r\n    this.children(this.drop);\r\n  }\r\n\r\n  setTitle(text) {\r\n    this.title.text(text);\r\n  }\r\n\r\n  setIcon(icon) {\r\n    this.title.html('');\r\n    this.title.children(icon);\r\n  }\r\n\r\n  setWidth(px) {\r\n    this.title.css('width', `${px}px`);\r\n  }\r\n\r\n  setEllipsis() {\r\n    this.title.css('overflow', 'hidden');\r\n    this.title.css('text-overflow', 'ellipsis');\r\n    this.title.css('white-space', 'nowrap');\r\n  }\r\n\r\n  removeEllipsis() {\r\n    this.title.cssRemoveKeys('overflow');\r\n    this.title.cssRemoveKeys('text-overflow');\r\n    this.title.cssRemoveKeys('white-space');\r\n  }\r\n\r\n}\r\n\r\nexport { DropDownItem };\r\n","/* global window document */\r\nimport { Widget } from '../../lib/Widget';\r\nimport { Constant, cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../lib/Element';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { XEvent } from '../../lib/XEvent';\r\n\r\nlet root = PlainUtils.Nul;\r\nlet instances = [];\r\n\r\n/**\r\n * ElPopUp\r\n * @author jerry\r\n * @date 2020/10/19\r\n */\r\nclass ElPopUp extends Widget {\r\n\r\n  /**\r\n   * ElPopUp\r\n   * @param options\r\n   */\r\n  constructor(options) {\r\n    super(`${cssPrefix}-el-pop-up`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      el: PlainUtils.Nul,\r\n      autoWidth: false,\r\n      autoHeight: false,\r\n      position: ElPopUp.POPUP_POSTION.TB,\r\n    }, options);\r\n    this.direction = PlainUtils.Undef;\r\n    this.status = false;\r\n    this.location = 0;\r\n    this.spaces = 0;\r\n    this.elPopUpDownHandle = () => {\r\n      this.close();\r\n    };\r\n    instances.push(this);\r\n    this.bind();\r\n  }\r\n\r\n  /**\r\n   * 显示弹框\r\n   */\r\n  open() {\r\n    if (this.status === false && root) {\r\n      root.children(this);\r\n      this.status = true;\r\n    }\r\n    this.elPopUpPosition();\r\n    this.elPopUpAutosize();\r\n    this.elPopUpLocation();\r\n  }\r\n\r\n  /**\r\n   * 关闭弹框\r\n   */\r\n  close() {\r\n    if (this.status === true && root) {\r\n      root.remove(this);\r\n      this.status = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 卸载事件\r\n   */\r\n  unbind() {\r\n    XEvent.unbind(this);\r\n    XEvent.unbind(document, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, this.elPopUpDownHandle);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件\r\n   */\r\n  bind() {\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      e.stopPropagation();\r\n    });\r\n    XEvent.bind(document, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, this.elPopUpDownHandle);\r\n  }\r\n\r\n  /**\r\n   * 计算显示的大小\r\n   */\r\n  elPopUpAutosize() {\r\n    const { options, direction, spaces } = this;\r\n    const { autoWidth, autoHeight } = options;\r\n    if (autoWidth) {\r\n      this.css('width', 'initial');\r\n      this.css('overflow-x', 'initial');\r\n      const box = this.box();\r\n      const { width } = box;\r\n      switch (direction) {\r\n        case 'left':\r\n        case 'right':\r\n          if (width > spaces) {\r\n            this.css('overflow-x', 'auto');\r\n            this.css('width', `${spaces}px`);\r\n          }\r\n          break;\r\n      }\r\n    }\r\n    if (autoHeight) {\r\n      this.css('height', 'initial');\r\n      this.css('overflow-y', 'initial');\r\n      const box = this.box();\r\n      const { height } = box;\r\n      switch (direction) {\r\n        case 'top':\r\n        case 'bottom':\r\n          if (height > spaces) {\r\n            this.css('overflow-y', 'auto');\r\n            this.css('height', `${spaces}px`);\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 计算显示的位置\r\n   */\r\n  elPopUpPosition() {\r\n    const { options } = this;\r\n    const { position } = options;\r\n    const { el } = options;\r\n    const elBox = el.box();\r\n    const winWidth = window.innerWidth;\r\n    const winHeight = window.innerHeight;\r\n    this.direction = PlainUtils.Undef;\r\n    this.spaces = 0;\r\n    this.location = 0;\r\n    switch (position) {\r\n      case ElPopUp.POPUP_POSTION.LR: {\r\n        const width = elBox.width;\r\n        const elLeft = elBox.left;\r\n        const leftDiff = elLeft;\r\n        const rightDiff = winWidth - (elLeft + width);\r\n        if (leftDiff > rightDiff) {\r\n          this.direction = 'left';\r\n          this.spaces = leftDiff;\r\n          this.location = elLeft;\r\n        } else {\r\n          this.direction = 'right';\r\n          this.spaces = rightDiff;\r\n          this.location = elLeft + width;\r\n        }\r\n        break;\r\n      }\r\n      case ElPopUp.POPUP_POSTION.TB: {\r\n        const height = elBox.height;\r\n        const elTop = elBox.top;\r\n        const topDiff = elTop;\r\n        const bottomDIff = winHeight - (elTop + height);\r\n        if (topDiff > bottomDIff) {\r\n          this.direction = 'top';\r\n          this.spaces = topDiff;\r\n          this.location = elTop;\r\n        } else {\r\n          this.direction = 'bottom';\r\n          this.spaces = bottomDIff;\r\n          this.location = elTop + height;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置显示位置\r\n   */\r\n  elPopUpLocation() {\r\n    const { direction, location, options } = this;\r\n    const { el } = options;\r\n    const box = this.box();\r\n    const elBox = el.box();\r\n    const elLeft = elBox.left;\r\n    const elTop = elBox.top;\r\n    const { width, height } = box;\r\n    switch (direction) {\r\n      case 'left':\r\n        this.css('top', `${elTop}px`);\r\n        this.css('left', `${location - width}px`);\r\n        break;\r\n      case 'right':\r\n        this.css('top', `${elTop}px`);\r\n        this.css('left', `${location}px`);\r\n        break;\r\n      case 'top':\r\n        this.css('left', `${elLeft}px`);\r\n        this.css('top', `${location - height}px`);\r\n        break;\r\n      case 'bottom':\r\n        this.css('left', `${elLeft}px`);\r\n        this.css('top', `${location}px`);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置环绕元素\r\n   * @param el\r\n   */\r\n  setEL(el) {\r\n    this.options.el = el;\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n  /**\r\n   * 删除实例\r\n   * @param instance\r\n   */\r\n  static removeInstance(instance) {\r\n    const filter = [];\r\n    instances.forEach((item) => {\r\n      if (item !== instance) {\r\n        filter.push(item);\r\n      }\r\n    });\r\n    instances = filter;\r\n  }\r\n\r\n  /**\r\n   * 关闭所有实例\r\n   * @param filter\r\n   */\r\n  static closeAll(filter = []) {\r\n    instances.forEach((item) => {\r\n      if (filter.indexOf(item) === -1) {\r\n        item.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 设置根节点\r\n   * @param element\r\n   */\r\n  static setRoot(element) {\r\n    if (element.el) {\r\n      element = h(element.el);\r\n    } else {\r\n      element = h(element);\r\n    }\r\n    root = element;\r\n  }\r\n\r\n}\r\nElPopUp.POPUP_POSTION = {\r\n  TB: Symbol('上下位置'),\r\n  LR: Symbol('左右位置'),\r\n};\r\n\r\nexport {\r\n  ElPopUp,\r\n};\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { Widget } from '../../lib/Widget';\r\nimport { ElPopUp } from '../elpopup/ElPopUp';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\n\r\nclass ELContextMenu extends Widget {\r\n\r\n  constructor(className = '', options = {}) {\r\n    super(`${cssPrefix}-el-context-menu ${className}`);\r\n    this.options = PlainUtils.mergeDeep({}, options);\r\n    this.menus = [];\r\n    this.elPopUp = new ElPopUp(this.options);\r\n    this.elPopUp.children(this);\r\n  }\r\n\r\n  isClose() {\r\n    return this.elPopUp.status === false;\r\n  }\r\n\r\n  addItem(item) {\r\n    const { menus } = this;\r\n    menus.push(item);\r\n    this.children(item);\r\n    return this;\r\n  }\r\n\r\n  open() {\r\n    this.elPopUp.open();\r\n    return this;\r\n  }\r\n\r\n  close() {\r\n    this.elPopUp.close();\r\n    return this;\r\n  }\r\n\r\n  setEL(el) {\r\n    this.elPopUp.setEL(el);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.elPopUp.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { ELContextMenu };\r\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\n\r\nclass ELContextMenuItem extends Widget {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-el-context-menu-item hover ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport { ELContextMenuItem };\r\n","import { h } from '../../../../../lib/Element';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { Icon } from '../../Icon';\r\n\r\nconst pool = [];\r\n\r\nclass FormatContextMenuItem extends ELContextMenuItem {\r\n  constructor(title, desc) {\r\n    super(`${cssPrefix}-format-context-menu-item`);\r\n    this.title = title;\r\n    this.desc = desc;\r\n    this.icon = new Icon('checked');\r\n    this.iconElement = h('div', `${cssPrefix}-format-context-menu-item-icon`);\r\n    this.iconElement.children(this.icon);\r\n    this.titleElement = h('div', `${cssPrefix}-format-context-menu-item-title`);\r\n    this.descElement = h('div', `${cssPrefix}-format-context-menu-item-desc`);\r\n    this.titleElement.text(title);\r\n    this.descElement.text(desc);\r\n    this.children(this.iconElement);\r\n    this.children(this.titleElement);\r\n    this.children(this.descElement);\r\n    pool.push(this);\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.titleElement.text(title);\r\n  }\r\n\r\n  setDesc(desc) {\r\n    this.descElement.text(desc);\r\n  }\r\n\r\n  setActive() {\r\n    pool.forEach((item) => {\r\n      item.removeClass('active');\r\n    });\r\n    this.addClass('active');\r\n  }\r\n}\r\n\r\nexport { FormatContextMenuItem };\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { Widget } from '../../lib/Widget';\r\n\r\nclass ELContextMenuDivider extends Widget {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-el-context-menu-item-divider`);\r\n  }\r\n\r\n}\r\n\r\nexport { ELContextMenuDivider };\r\n","import { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { FormatContextMenuItem } from './FormatContextMenuItem';\r\nimport { ELContextMenuDivider } from '../../../../../component/contextmenu/ELContextMenuDivider';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { XEvent } from '../../../../../lib/XEvent';\r\n\r\nclass FormatContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-format-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new FormatContextMenuItem('常规', '').data('type', 'default'),\r\n      new FormatContextMenuItem('文本', '').data('type', 'text'),\r\n      new ELContextMenuDivider(),\r\n      new FormatContextMenuItem('数值', '0.59').data('type', 'number'),\r\n      new FormatContextMenuItem('百分比', '90.00%').data('type', 'percentage'),\r\n      new FormatContextMenuItem('分数', '1/2').data('type', 'fraction'),\r\n      new FormatContextMenuItem('科学计数', '9.50e-01').data('type', 'ENotation'),\r\n      new ELContextMenuDivider(),\r\n      new FormatContextMenuItem('人民币', '￥5.00').data('type', 'rmb'),\r\n      new FormatContextMenuItem('港币', 'HK5.00').data('type', 'hk'),\r\n      new FormatContextMenuItem('美元', '$5.00').data('type', 'dollar'),\r\n      new ELContextMenuDivider(),\r\n      new FormatContextMenuItem('日期', '2018/4/18').data('type', 'date1'),\r\n      new FormatContextMenuItem('日期', '4月18日').data('type', 'date2'),\r\n      new FormatContextMenuItem('日期', '2018年4月').data('type', 'date3'),\r\n      new FormatContextMenuItem('日期', '2018年4月18日').data('type', 'date4'),\r\n      new FormatContextMenuItem('日期', '2018/4/18 14:30:30').data('type', 'date5'),\r\n      new FormatContextMenuItem('时间', '14:30:30').data('type', 'time'),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      this.addItem(item);\r\n    });\r\n    this.init();\r\n    this.bind();\r\n  }\r\n\r\n  init() {\r\n    const { options, items } = this;\r\n    const { el } = options;\r\n    const first = items[0];\r\n    el.setTitle(first.title);\r\n    first.setActive();\r\n  }\r\n\r\n  update(format, title) {\r\n    const { options } = this;\r\n    options.onUpdate(format, title);\r\n    this.close();\r\n  }\r\n\r\n  unbind() {\r\n    this.items.forEach((item) => {\r\n      if (item instanceof FormatContextMenuItem && item.data('type')) {\r\n        XEvent.unbind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n      }\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    this.items.forEach((item) => {\r\n      if (item instanceof FormatContextMenuItem && item.data('type')) {\r\n        XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n          this.update(item.data('type'), item.title);\r\n          item.setActive();\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  setActiveByType(type) {\r\n    this.items.forEach((item) => {\r\n      if (item.data('type') === type) {\r\n        item.setActive();\r\n      }\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { FormatContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { FormatContextMenu } from './contextmenu/format/FormatContextMenu';\r\n\r\nclass Format extends DropDownItem {\r\n\r\n  constructor(options = {\r\n    contextMenu: {},\r\n  }) {\r\n    super(`${cssPrefix}-tools-format`);\r\n    this.options = options;\r\n    this.setTitle('常规');\r\n    this.setWidth(50);\r\n    this.setEllipsis();\r\n    this.formatContextMenu = new FormatContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.formatContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { Format };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../lib/Element';\r\nimport { Icon } from '../../Icon';\r\n\r\nconst pool = [];\r\n\r\nclass FontContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(title) {\r\n    super(`${cssPrefix}-font-context-menu-item`);\r\n    this.title = title;\r\n    this.icon = new Icon('checked');\r\n    this.iconElement = h('div', `${cssPrefix}-font-context-menu-item-icon`);\r\n    this.iconElement.children(this.icon);\r\n    this.titleElement = h('div', `${cssPrefix}-font-context-menu-item-title`);\r\n    this.titleElement.text(title);\r\n    this.titleElement.css('font-family', title);\r\n    this.children(this.iconElement);\r\n    this.children(this.titleElement);\r\n    pool.push(this);\r\n  }\r\n\r\n  setActive() {\r\n    pool.forEach((item) => {\r\n      item.removeClass('active');\r\n    });\r\n    this.addClass('active');\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title;\r\n    this.titleElement.text(title);\r\n  }\r\n\r\n}\r\n\r\nexport { FontContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { FontContextMenuItem } from './FontContextMenuItem';\r\nimport { XEvent } from '../../../../../lib/XEvent';\r\n\r\nclass FontContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new FontContextMenuItem('Arial'),\r\n      new FontContextMenuItem('Helvetica'),\r\n      new FontContextMenuItem('Source Sans Pro'),\r\n      new FontContextMenuItem('Comic Sans Ms'),\r\n      new FontContextMenuItem('Courier New'),\r\n      new FontContextMenuItem('Verdana'),\r\n      new FontContextMenuItem('Lalo'),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      this.addItem(item);\r\n    });\r\n    this.setActiveByType(this.items[0].title);\r\n    this.bind();\r\n  }\r\n\r\n  update(type) {\r\n    const { options } = this;\r\n    options.onUpdate(type);\r\n    this.close();\r\n  }\r\n\r\n  unbind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.unbind(item);\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n        this.update(item.title);\r\n        item.setActive();\r\n      });\r\n    });\r\n  }\r\n\r\n  setActiveByType(type) {\r\n    this.items.forEach((item) => {\r\n      if (item.title === type) {\r\n        item.setActive();\r\n      }\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { FontContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { FontContextMenu } from './contextmenu/font/FontContextMenu';\r\n\r\nclass Font extends DropDownItem {\r\n\r\n  constructor(options = {\r\n    contextMenu: {},\r\n  }) {\r\n    super(`${cssPrefix}-tools-font`);\r\n    this.options = options;\r\n    this.setTitle('Arial');\r\n    this.setWidth(50);\r\n    this.setEllipsis();\r\n    this.fontContextMenu = new FontContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.fontContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { Font };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../lib/Element';\r\n\r\nclass FontSizeContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(size) {\r\n    super(`${cssPrefix}-font-size-context-menu-item`);\r\n    this.size = size;\r\n    this.titleElement = h('div', `${cssPrefix}-font-size-context-menu-item-title`);\r\n    this.titleElement.text(size);\r\n    this.titleElement.css('text-align', 'center');\r\n    this.children(this.titleElement);\r\n  }\r\n\r\n}\r\n\r\nexport { FontSizeContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { FontSizeContextMenuItem } from './FontSizeContextMenuItem';\r\nimport { XEvent } from '../../../../../lib/XEvent';\r\n\r\nclass FontSizeContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-size-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new FontSizeContextMenuItem(6),\r\n      new FontSizeContextMenuItem(7),\r\n      new FontSizeContextMenuItem(8),\r\n      new FontSizeContextMenuItem(9),\r\n      new FontSizeContextMenuItem(10),\r\n      new FontSizeContextMenuItem(11),\r\n      new FontSizeContextMenuItem(12),\r\n      new FontSizeContextMenuItem(14),\r\n      new FontSizeContextMenuItem(15),\r\n      new FontSizeContextMenuItem(18),\r\n      new FontSizeContextMenuItem(24),\r\n      new FontSizeContextMenuItem(36),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      this.addItem(item);\r\n    });\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.unbind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n        this.update(item.size);\r\n      });\r\n    });\r\n  }\r\n\r\n  update(size) {\r\n    const { options } = this;\r\n    options.onUpdate(size);\r\n    this.close();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { FontSizeContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { FontSizeContextMenu } from './contextmenu/fontsize/FontSizeContextMenu';\r\n\r\nclass FontSize extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-font-size`);\r\n    this.options = options;\r\n    this.setTitle('10');\r\n    this.setWidth(30);\r\n    this.setEllipsis();\r\n    this.fontSizeContextMenu = new FontSizeContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.fontSizeContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { FontSize };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass FontBold extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-bold`);\r\n    this.icon = new Icon('font-bold');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { FontBold };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass FontItalic extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-italic`);\r\n    this.icon = new Icon('font-italic');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { FontItalic };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass UnderLine extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-under-line`);\r\n    this.icon = new Icon('under-line');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { UnderLine };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\n\r\nclass FontStrike extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-strike`);\r\n    this.icon = new Icon('font-strike');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { FontStrike };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../lib/Element';\r\n\r\nclass FontColorContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(title, icon) {\r\n    super(`${cssPrefix}-font-color-context-menu-item`);\r\n    this.title = title;\r\n    this.icon = icon;\r\n    if (icon) {\r\n      this.iconElement = h('div', `${cssPrefix}-font-color-context-menu-item-icon`);\r\n      this.iconElement.children(this.icon);\r\n      this.children(this.iconElement);\r\n    }\r\n    if (title) {\r\n      this.titleElement = h('div', `${cssPrefix}-font-color-context-menu-item-title`);\r\n      this.titleElement.text(title);\r\n      this.children(this.titleElement);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { FontColorContextMenuItem };\r\n","/* global document */\r\nimport { Widget } from '../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { XEvent } from '../../lib/XEvent';\r\n\r\nimport { h } from '../../lib/Element';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\n\r\nlet root = PlainUtils.Undef;\r\nlet instances = [];\r\n\r\n/**\r\n * DragPanel\r\n * @author jerry\r\n * @date 2020/10/19\r\n */\r\nclass DragPanel extends Widget {\r\n\r\n  /**\r\n   * DragPanel\r\n   * @param options\r\n   */\r\n  constructor(options) {\r\n    super(`${cssPrefix}-drag-panel`);\r\n    instances.push(this);\r\n    this.options = PlainUtils.mergeDeep({\r\n      position: DragPanel.DRAG_PANEL_POSITION.CENTER,\r\n    }, options);\r\n    this.status = false;\r\n    this.mask = h('div', `${cssPrefix}-drag-panel-mask`);\r\n    this.content = h('div', `${cssPrefix}-drag-panel-content`);\r\n    super.children(this.content);\r\n    this.bind();\r\n  }\r\n\r\n  /**\r\n   * 显示弹框\r\n   */\r\n  open() {\r\n    if (this.status === false && root) {\r\n      const { mask } = this;\r\n      root.children(mask);\r\n      root.children(this);\r\n      this.dragPanelLocation();\r\n      this.status = true;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 关闭弹框\r\n   */\r\n  close() {\r\n    if (this.status === true && root) {\r\n      const { mask } = this;\r\n      root.remove(this);\r\n      root.remove(mask);\r\n      this.status = false;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 卸载事件\r\n   */\r\n  unbind() {\r\n    const { mask } = this;\r\n    XEvent.unbind(mask);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件\r\n   */\r\n  bind() {\r\n    const { mask } = this;\r\n    XEvent.bind(mask, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.close();\r\n      e.stopPropagation();\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (evt1) => {\r\n      if (evt1.button !== 0) return;\r\n      const downEventXy = this.eventXy(evt1, this);\r\n      XEvent.mouseMoveUp(h(document), (evt2) => {\r\n        // 计算移动的距离\r\n        const top = evt2.pageY - downEventXy.y;\r\n        const left = evt2.pageX - downEventXy.x;\r\n        this.offset({ top, left });\r\n        evt2.stopPropagation();\r\n      });\r\n      evt1.stopPropagation();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 设置显示位置\r\n   */\r\n  dragPanelLocation() {\r\n    const { options } = this;\r\n    const { position } = options;\r\n    const { width, height } = PlainUtils.viewPort();\r\n    const box = this.box();\r\n    switch (position) {\r\n      case DragPanel.DRAG_PANEL_POSITION.LEFT:\r\n        break;\r\n      case DragPanel.DRAG_PANEL_POSITION.RIGHT:\r\n        break;\r\n      case DragPanel.DRAG_PANEL_POSITION.TOP:\r\n        break;\r\n      case DragPanel.DRAG_PANEL_POSITION.CENTER:\r\n        this.offset({\r\n          left: width / 2 - box.width / 2,\r\n          top: height / 2 - box.height / 2,\r\n        });\r\n        break;\r\n      default: break;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 添加子元素\r\n   * @param args\r\n   * @returns {DragPanel}\r\n   */\r\n  children(...args) {\r\n    this.content.children(...args);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    DragPanel.removeInstance(this);\r\n  }\r\n\r\n  /**\r\n   * 删除实例\r\n   * @param instance\r\n   */\r\n  static removeInstance(instance) {\r\n    const filter = [];\r\n    instances.forEach((item) => {\r\n      if (item !== instance) {\r\n        filter.push(item);\r\n      }\r\n    });\r\n    instances = filter;\r\n  }\r\n\r\n  /**\r\n   * 关闭所有实例\r\n   * @param filter\r\n   */\r\n  static closeAll(filter = []) {\r\n    instances.forEach((item) => {\r\n      if (filter.indexOf(item) === -1) {\r\n        item.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 设置根节点\r\n   * @param element\r\n   */\r\n  static setRoot(element) {\r\n    if (element.el) {\r\n      element = h(element.el);\r\n    } else {\r\n      element = h(element);\r\n    }\r\n    root = element;\r\n  }\r\n\r\n}\r\nDragPanel.DRAG_PANEL_POSITION = {\r\n  LEFT: 1,\r\n  TOP: 2,\r\n  RIGHT: 3,\r\n  CENTER: 4,\r\n};\r\n\r\nexport { DragPanel };\r\n","/* global document */\r\nimport { h } from '../../lib/Element';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { Widget } from '../../lib/Widget';\r\nimport { DragPanel } from '../dragpanel/DragPanel';\r\nimport { XEvent } from '../../lib/XEvent';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\n\r\nclass ColorPicker extends Widget {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-color-picker`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      selectCb: () => {},\r\n    }, options);\r\n    // 拖拽组件\r\n    this.dragPanel = new DragPanel();\r\n    this.color = [360, 0, 100];\r\n    // 头部\r\n    this.preViewColorPoint = h('div', `${cssPrefix}-color-picker-pre-view-color-point`);\r\n    this.colorValueTips = h('div', `${cssPrefix}-color-picker-color-value-tips`);\r\n    this.colorValueTips.text('十六进制颜色值');\r\n    this.colorInput = h('input', `${cssPrefix}-color-picker-color-input`);\r\n    this.top = h('div', `${cssPrefix}-color-picker-top`);\r\n    this.top.children(this.preViewColorPoint);\r\n    this.top.children(this.colorValueTips);\r\n    this.top.children(this.colorInput);\r\n    // 中间部分\r\n    this.selectColorPoint = h('div', `${cssPrefix}-color-picker-select-color-point`);\r\n    this.selectColorArea1 = h('div', `${cssPrefix}-color-picker-select-color-area area1`);\r\n    this.selectColorArea2 = h('div', `${cssPrefix}-color-picker-select-color-area area2`);\r\n    this.selectColorArea3 = h('div', `${cssPrefix}-color-picker-select-color-area area3`);\r\n    this.center = h('div', `${cssPrefix}-color-picker-center`);\r\n    this.center.children(this.selectColorArea1);\r\n    this.center.children(this.selectColorArea2);\r\n    this.center.children(this.selectColorArea3);\r\n    this.center.children(this.selectColorPoint);\r\n    // 底部\r\n    this.colorHuxTips = h('div', `${cssPrefix}-color-picker-color-hux-tips`);\r\n    this.colorBar = h('div', `${cssPrefix}-color-picker-color-bar`);\r\n    this.colorBarPoint = h('div', `${cssPrefix}-color-picker-bar-point`);\r\n    this.bottom = h('div', `${cssPrefix}-color-picker-bottom`);\r\n    this.colorHuxTips.text('HUE');\r\n    this.colorBar.children(this.colorBarPoint);\r\n    this.bottom.children(this.colorHuxTips);\r\n    this.bottom.children(this.colorBar);\r\n    // 按钮\r\n    this.cancelButton = h('div', `${cssPrefix}-color-picker-button cancel`);\r\n    this.selectButton = h('div', `${cssPrefix}-color-picker-button select`);\r\n    this.buttons = h('div', `${cssPrefix}-color-picker-buttons`);\r\n    this.cancelButton.text('取消');\r\n    this.selectButton.text('确定');\r\n    this.buttons.children(this.selectButton);\r\n    this.buttons.children(this.cancelButton);\r\n    this.children(this.top);\r\n    this.children(this.center);\r\n    this.children(this.bottom);\r\n    this.children(this.buttons);\r\n    this.dragPanel.children(this);\r\n    this.dragPanel.css('background', '#ffffff');\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { selectColorPoint } = this;\r\n    const { colorBarPoint } = this;\r\n    const {\r\n      colorInput, cancelButton, selectButton,\r\n    } = this;\r\n    XEvent.unbind(colorInput);\r\n    XEvent.unbind(colorInput);\r\n    XEvent.unbind(colorBarPoint);\r\n    XEvent.unbind(selectColorPoint);\r\n    XEvent.unbind(cancelButton);\r\n    XEvent.unbind(selectButton);\r\n  }\r\n\r\n  bind() {\r\n    const { selectColorPoint, center } = this;\r\n    const { colorBarPoint, colorBar } = this;\r\n    const {\r\n      colorInput, cancelButton, selectButton,\r\n    } = this;\r\n    XEvent.bind(colorInput, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\r\n      e1.stopPropagation();\r\n    });\r\n    XEvent.bind(colorInput, Constant.SYSTEM_EVENT_TYPE.CHANGE, () => {\r\n      const value = colorInput.val();\r\n      if (value) {\r\n        this.hexColor(value);\r\n      }\r\n    });\r\n    XEvent.bind(colorBarPoint, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\r\n      const xy = this.eventXy(e1, colorBar);\r\n      const colorBarBox = colorBar.box();\r\n      if (xy.x < 0) xy.x = 0;\r\n      if (xy.x > colorBarBox.width) xy.x = colorBarBox.width;\r\n      this.downHue(xy.x, colorBarBox.width);\r\n      XEvent.mouseMoveUp(h(document), (e2) => {\r\n        const xy = this.eventXy(e2, colorBar);\r\n        const colorBarBox = colorBar.box();\r\n        if (xy.x < 0) xy.x = 0;\r\n        if (xy.x > colorBarBox.width) xy.x = colorBarBox.width;\r\n        this.moveHue(xy.x, colorBarBox.width);\r\n      });\r\n      e1.stopPropagation();\r\n    });\r\n    XEvent.bind(selectColorPoint, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\r\n      const xy = this.eventXy(e1, center);\r\n      const centerBox = center.box();\r\n      if (xy.x < 0) xy.x = 0;\r\n      if (xy.x > centerBox.width) xy.x = centerBox.width;\r\n      if (xy.y < 0) xy.y = 0;\r\n      if (xy.y > centerBox.height) xy.y = centerBox.height;\r\n      this.downSelect(xy.x, xy.y, centerBox.width, centerBox.height);\r\n      XEvent.mouseMoveUp(h(document), (e2) => {\r\n        const xy = this.eventXy(e2, center);\r\n        if (xy.x < 0) xy.x = 0;\r\n        if (xy.x > centerBox.width) xy.x = centerBox.width;\r\n        if (xy.y < 0) xy.y = 0;\r\n        if (xy.y > centerBox.height) xy.y = centerBox.height;\r\n        this.moveSelect(xy.x, xy.y, centerBox.width, centerBox.height);\r\n      });\r\n      e1.stopPropagation();\r\n    });\r\n    XEvent.bind(cancelButton, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.close();\r\n    });\r\n    XEvent.bind(selectButton, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      const { color } = this;\r\n      const hsb = ColorPicker.fixHsx({\r\n        h: parseInt(color[0], 10),\r\n        s: parseInt(color[1], 10),\r\n        x: parseInt(color[2], 10),\r\n      });\r\n      const colorValue = ColorPicker.hsbToHex(hsb);\r\n      this.options.selectCb(`#${colorValue}`);\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  open(hex) {\r\n    const { dragPanel } = this;\r\n    dragPanel.open();\r\n    if (hex) {\r\n      if (ColorPicker.isRgb(hex)) {\r\n        const rgb = ColorPicker.parseRgb(hex);\r\n        // eslint-disable-next-line no-param-reassign\r\n        hex = ColorPicker.rgbToHex(rgb);\r\n      }\r\n      this.hexColor(hex);\r\n    } else {\r\n      this.change();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  close() {\r\n    const { dragPanel } = this;\r\n    dragPanel.close();\r\n    return this;\r\n  }\r\n\r\n  sliderPosition(hsb) {\r\n    // hue 滑块位置\r\n    const { colorBar, colorBarPoint } = this;\r\n    const colorBarPointBox = colorBarPoint.box();\r\n    const colorBarBox = colorBar.box();\r\n    let colorBarPointLeft = parseInt(colorBarBox.width - colorBarBox.width * hsb.h / 360, 10);\r\n    colorBarPointLeft -= colorBarPointBox.width / 2;\r\n    colorBarPoint.offset({\r\n      left: colorBarPointLeft,\r\n    });\r\n    // select color 滑块位置\r\n    const { center, selectColorPoint } = this;\r\n    const selectColorPointBox = selectColorPoint.box();\r\n    const centerBox = center.box();\r\n    let selectColorPointLeft = parseInt(centerBox.width * hsb.s / 100, 10);\r\n    let selectColorPointTop = parseInt(centerBox.height * (100 - hsb.x) / 100, 10);\r\n    selectColorPointLeft -= selectColorPointBox.width / 2;\r\n    selectColorPointTop -= selectColorPointBox.height / 2;\r\n    selectColorPoint.offset({\r\n      left: selectColorPointLeft,\r\n      top: selectColorPointTop,\r\n    });\r\n  }\r\n\r\n  hueChange() {\r\n    const { color } = this;\r\n    const hsb = ColorPicker.fixHsx({\r\n      h: parseInt(color[0], 10),\r\n      s: parseInt(color[1], 10),\r\n      x: parseInt(color[2], 10),\r\n    });\r\n    const {\r\n      colorBarPoint, selectColorPoint, preViewColorPoint, selectColorArea1, colorInput,\r\n    } = this;\r\n    const colorValue = ColorPicker.hsbToHex(hsb);\r\n    const areaColorValue = ColorPicker.hsbToHex({ h: hsb.h, s: 100, x: 100 });\r\n    selectColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    preViewColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    colorBarPoint.css('backgroundColor', `#${areaColorValue}`);\r\n    selectColorArea1.css('backgroundColor', `#${areaColorValue}`);\r\n    colorInput.val(`#${colorValue}`);\r\n    this.sliderPosition(hsb);\r\n  }\r\n\r\n  selectChange() {\r\n    const { color } = this;\r\n    const hsb = ColorPicker.fixHsx({\r\n      h: parseInt(color[0], 10),\r\n      s: parseInt(color[1], 10),\r\n      x: parseInt(color[2], 10),\r\n    });\r\n    const {\r\n      preViewColorPoint, selectColorPoint, colorInput,\r\n    } = this;\r\n    const colorValue = ColorPicker.hsbToHex(hsb);\r\n    selectColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    preViewColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    colorInput.val(`#${colorValue}`);\r\n    this.sliderPosition(hsb);\r\n  }\r\n\r\n  change() {\r\n    this.hueChange();\r\n    this.selectChange();\r\n  }\r\n\r\n  downSelect(x, y, width, height) {\r\n    const { color } = this;\r\n    color[1] = parseInt(100 * x / width, 10);\r\n    color[2] = parseInt(100 * (height - y) / height, 10);\r\n    this.selectChange();\r\n  }\r\n\r\n  moveSelect(x, y, width, height) {\r\n    const { color } = this;\r\n    color[1] = parseInt(100 * (Math.max(0, Math.min(width, x))) / width, 10);\r\n    color[2] = parseInt(100 * (height - Math.max(0, Math.min(height, y))) / height, 10);\r\n    this.selectChange();\r\n  }\r\n\r\n  downHue(x, width) {\r\n    const { color } = this;\r\n    color[0] = parseInt(360 * (width - x) / width, 10);\r\n    this.hueChange();\r\n  }\r\n\r\n  moveHue(x, width) {\r\n    const { color } = this;\r\n    color[0] = parseInt(360 * (width - Math.max(0, Math.min(width, x))) / width, 10);\r\n    this.hueChange();\r\n  }\r\n\r\n  hexColor(hex) {\r\n    const { color } = this;\r\n    const result = ColorPicker.hexToHsb(ColorPicker.fixHex(hex));\r\n    color[0] = result.h;\r\n    color[1] = result.s;\r\n    color[2] = result.x;\r\n    this.change();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.dragPanel.destroy();\r\n  }\r\n\r\n  static fixHex(hex) {\r\n    const len = 6 - hex.length;\r\n    if (len > 0) {\r\n      const o = [];\r\n      for (let i = 0; i < len; i += 1) {\r\n        o.push('0');\r\n      }\r\n      o.push(hex);\r\n      // eslint-disable-next-line no-param-reassign\r\n      hex = o.join('');\r\n    }\r\n    return hex;\r\n  }\r\n\r\n  static fixHsx(hsx) {\r\n    return {\r\n      h: Math.min(360, Math.max(0, hsx.h)),\r\n      s: Math.min(100, Math.max(0, hsx.s)),\r\n      x: Math.min(100, Math.max(0, hsx.x)),\r\n    };\r\n  }\r\n\r\n  static hexToRgb(hex) {\r\n    // eslint-disable-next-line no-redeclare,no-param-reassign\r\n    hex = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\r\n    // eslint-disable-next-line no-bitwise\r\n    return { r: hex >> 16, g: (hex & 0x00FF00) >> 8, b: (hex & 0x0000FF) };\r\n  }\r\n\r\n  static hexToHsb(hex) {\r\n    return this.rgbToHsb(this.hexToRgb(hex));\r\n  }\r\n\r\n  static rgbToHsb(rgb) {\r\n    const hsb = { h: 0, s: 0, x: 0 };\r\n    const min = Math.min(rgb.r, rgb.g, rgb.b);\r\n    const max = Math.max(rgb.r, rgb.g, rgb.b);\r\n    const delta = max - min;\r\n    hsb.x = max;\r\n    hsb.s = max !== 0 ? 255 * delta / max : 0;\r\n    if (hsb.s !== 0) {\r\n      if (rgb.r === max) hsb.h = (rgb.g - rgb.b) / delta;\r\n      else if (rgb.g === max) hsb.h = 2 + (rgb.b - rgb.r) / delta;\r\n      else hsb.h = 4 + (rgb.r - rgb.g) / delta;\r\n    } else hsb.h = -1;\r\n    hsb.h *= 60;\r\n    if (hsb.h < 0) hsb.h += 360;\r\n    hsb.s *= 100 / 255;\r\n    hsb.x *= 100 / 255;\r\n    return hsb;\r\n  }\r\n\r\n  static hsbToRgb(hsb) {\r\n    const rgb = {};\r\n    let { h } = hsb;\r\n    const s = hsb.s * 255 / 100;\r\n    const v = hsb.x * 255 / 100;\r\n    if (s === 0) {\r\n      rgb.r = v;\r\n      rgb.g = v;\r\n      rgb.b = v;\r\n    } else {\r\n      const t1 = v;\r\n      const t2 = (255 - s) * v / 255;\r\n      const t3 = (t1 - t2) * (h % 60) / 60;\r\n      if (h === 360) h = 0;\r\n      if (h < 60) {\r\n        rgb.r = t1;\r\n        rgb.b = t2;\r\n        rgb.g = t2 + t3;\r\n      } else if (h < 120) {\r\n        rgb.g = t1;\r\n        rgb.b = t2;\r\n        rgb.r = t1 - t3;\r\n      } else if (h < 180) {\r\n        rgb.g = t1;\r\n        rgb.r = t2;\r\n        rgb.b = t2 + t3;\r\n      } else if (h < 240) {\r\n        rgb.b = t1;\r\n        rgb.r = t2;\r\n        rgb.g = t1 - t3;\r\n      } else if (h < 300) {\r\n        rgb.b = t1;\r\n        rgb.g = t2;\r\n        rgb.r = t2 + t3;\r\n      } else if (h < 360) {\r\n        rgb.r = t1;\r\n        rgb.g = t2;\r\n        rgb.b = t1 - t3;\r\n      } else {\r\n        rgb.r = 0;\r\n        rgb.g = 0;\r\n        rgb.b = 0;\r\n      }\r\n    }\r\n    return { r: Math.round(rgb.r), g: Math.round(rgb.g), b: Math.round(rgb.b) };\r\n  }\r\n\r\n  static rgbToHex(rgb) {\r\n    const hex = [\r\n      rgb.r.toString(16),\r\n      rgb.g.toString(16),\r\n      rgb.b.toString(16),\r\n    ];\r\n    hex.forEach((val, nr) => {\r\n      if (val.length === 1) {\r\n        hex[nr] = `0${val}`;\r\n      }\r\n    });\r\n    return hex.join('');\r\n  }\r\n\r\n  static hsbToHex(hsb) {\r\n    return this.rgbToHex(this.hsbToRgb(hsb));\r\n  }\r\n\r\n  static isRgb(rgb) {\r\n    return rgb.startsWith('rgb');\r\n  }\r\n\r\n  static isHex(hex) {\r\n    return hex.startsWith('#');\r\n  }\r\n\r\n  static parseRgb(rgb) {\r\n    const rxp = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/;\r\n    const result = rgb.match(rxp);\r\n    return {\r\n      r: result[1],\r\n      g: result[2],\r\n      b: result[3],\r\n    };\r\n  }\r\n\r\n  static isDark(rgb) {\r\n    if (PlainUtils.isBlank(rgb)) {\r\n      return false;\r\n    }\r\n    if (this.isHex(rgb)) {\r\n      const v = ColorPicker.hexToRgb(rgb);\r\n      rgb = `rgb(${v.r}, ${v.g}, ${v.b})`;\r\n    }\r\n    const result = ColorPicker.parseRgb(rgb);\r\n    const r = parseInt(result.r, 10);\r\n    const g = parseInt(result.g, 10);\r\n    const b = parseInt(result.b, 10);\r\n    return (r * 0.299) + (g * 0.578) + (b * 0.114) >= 192;\r\n  }\r\n\r\n}\r\n\r\nexport { ColorPicker };\r\n","import { Widget } from '../../../lib/Widget';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { Icon } from '../../../core/work/tools/Icon';\r\nimport { ColorPicker } from '../ColorPicker';\r\n\r\nclass ColorItem extends Widget {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-color-array-item`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      color: null,\r\n      icon: null,\r\n    }, options);\r\n    this.color = this.options.color;\r\n    this.icon = this.options.icon;\r\n    if (this.color) {\r\n      this.css('backgroundColor', this.color);\r\n      if (ColorPicker.isDark(this.options.color)) {\r\n        this.checkedIcon = new Icon('checked-dark');\r\n        this.children(this.checkedIcon);\r\n      } else {\r\n        this.checkedIcon = new Icon('checked-light');\r\n        this.children(this.checkedIcon);\r\n      }\r\n      this.checkedIcon.hide();\r\n    }\r\n    if (this.icon) {\r\n      this.children(this.options.icon);\r\n    }\r\n  }\r\n\r\n  setActive(active) {\r\n    if (this.checkedIcon) {\r\n      if (active) {\r\n        this.checkedIcon.show();\r\n      } else {\r\n        this.checkedIcon.hide();\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { ColorItem };\r\n","import { Widget } from '../../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../../const/Constant';\r\nimport { ColorItem } from './ColorItem';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XEvent } from '../../../lib/XEvent';\r\n\r\nclass ColorArray extends Widget {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-color-array`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      colors: [\r\n        new ColorItem({ color: 'rgb(0,0,0)' }),\r\n        new ColorItem({ color: 'rgb(67, 67, 67)' }),\r\n        new ColorItem({ color: 'rgb(102, 102, 102)' }),\r\n        new ColorItem({ color: 'rgb(153, 153, 153)' }),\r\n        new ColorItem({ color: 'rgb(183, 183, 183)' }),\r\n        new ColorItem({ color: 'rgb(204, 204, 204)' }),\r\n        new ColorItem({ color: 'rgb(217, 217, 217)' }),\r\n        new ColorItem({ color: 'rgb(239, 239, 239)' }),\r\n        new ColorItem({ color: 'rgb(255, 255, 255)' }),\r\n\r\n        new ColorItem({ color: 'rgb(152, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(255, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(255, 153, 0)' }),\r\n        new ColorItem({ color: 'rgb(255, 255, 0)' }),\r\n        new ColorItem({ color: 'rgb(0, 255, 0)' }),\r\n        new ColorItem({ color: 'rgb(0, 255, 255)' }),\r\n        new ColorItem({ color: 'rgb(74, 134, 232)' }),\r\n        new ColorItem({ color: 'rgb(0, 0, 255)' }),\r\n        new ColorItem({ color: 'rgb(153, 0, 255)' }),\r\n        new ColorItem({ color: 'rgb(255, 0, 255)' }),\r\n\r\n        new ColorItem({ color: 'rgb(230, 184, 175)' }),\r\n        new ColorItem({ color: 'rgb(244, 204, 204)' }),\r\n        new ColorItem({ color: 'rgb(252, 229, 205)' }),\r\n        new ColorItem({ color: 'rgb(255, 242, 204)' }),\r\n        new ColorItem({ color: 'rgb(217, 234, 211)' }),\r\n        new ColorItem({ color: 'rgb(208, 224, 227)' }),\r\n        new ColorItem({ color: 'rgb(201, 218, 248)' }),\r\n        new ColorItem({ color: 'rgb(207, 226, 243)' }),\r\n        new ColorItem({ color: 'rgb(217, 210, 233)' }),\r\n        new ColorItem({ color: 'rgb(234, 209, 220)' }),\r\n\r\n        new ColorItem({ color: 'rgb(221, 126, 107)' }),\r\n        new ColorItem({ color: 'rgb(234, 153, 153)' }),\r\n        new ColorItem({ color: 'rgb(249, 203, 156)' }),\r\n        new ColorItem({ color: 'rgb(255, 229, 153)' }),\r\n        new ColorItem({ color: 'rgb(182, 215, 168)' }),\r\n        new ColorItem({ color: 'rgb(162, 196, 201)' }),\r\n        new ColorItem({ color: 'rgb(164, 194, 244)' }),\r\n        new ColorItem({ color: 'rgb(159, 197, 232)' }),\r\n        new ColorItem({ color: 'rgb(180, 167, 214)' }),\r\n        new ColorItem({ color: 'rgb(213, 166, 189)' }),\r\n\r\n        new ColorItem({ color: 'rgb(204, 65, 37)' }),\r\n        new ColorItem({ color: 'rgb(224, 102, 102)' }),\r\n        new ColorItem({ color: 'rgb(246, 178, 107)' }),\r\n        new ColorItem({ color: 'rgb(255, 217, 102)' }),\r\n        new ColorItem({ color: 'rgb(147, 196, 125)' }),\r\n        new ColorItem({ color: 'rgb(118, 165, 175)' }),\r\n        new ColorItem({ color: 'rgb(109, 158, 235)' }),\r\n        new ColorItem({ color: 'rgb(111, 168, 220)' }),\r\n        new ColorItem({ color: 'rgb(142, 124, 195)' }),\r\n        new ColorItem({ color: 'rgb(194, 123, 160)' }),\r\n\r\n        new ColorItem({ color: 'rgb(166, 28, 0)' }),\r\n        new ColorItem({ color: 'rgb(204, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(230, 145, 56)' }),\r\n        new ColorItem({ color: 'rgb(241, 194, 50)' }),\r\n        new ColorItem({ color: 'rgb(106, 168, 79)' }),\r\n        new ColorItem({ color: 'rgb(69, 129, 142)' }),\r\n        new ColorItem({ color: 'rgb(60, 120, 216)' }),\r\n        new ColorItem({ color: 'rgb(61, 133, 198)' }),\r\n        new ColorItem({ color: 'rgb(103, 78, 167)' }),\r\n        new ColorItem({ color: 'rgb(166, 77, 121)' }),\r\n\r\n        new ColorItem({ color: 'rgb(133, 32, 12)' }),\r\n        new ColorItem({ color: 'rgb(153, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(180, 95, 6)' }),\r\n        new ColorItem({ color: 'rgb(191, 144, 0)' }),\r\n        new ColorItem({ color: 'rgb(56, 118, 29)' }),\r\n        new ColorItem({ color: 'rgb(19, 79, 92)' }),\r\n        new ColorItem({ color: 'rgb(17, 85, 204)' }),\r\n        new ColorItem({ color: 'rgb(11, 83, 148)' }),\r\n        new ColorItem({ color: 'rgb(53, 28, 117)' }),\r\n        new ColorItem({ color: 'rgb(116, 27, 71)' }),\r\n\r\n        new ColorItem({ color: 'rgb(91, 15, 0)' }),\r\n        new ColorItem({ color: 'rgb(102, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(120, 63, 4)' }),\r\n        new ColorItem({ color: 'rgb(127, 96, 0)' }),\r\n        new ColorItem({ color: 'rgb(39, 78, 19)' }),\r\n        new ColorItem({ color: 'rgb(12, 52, 61)' }),\r\n        new ColorItem({ color: 'rgb(28, 69, 135)' }),\r\n        new ColorItem({ color: 'rgb(7, 55, 99)' }),\r\n        new ColorItem({ color: 'rgb(32, 18, 77)' }),\r\n        new ColorItem({ color: 'rgb(76, 17, 48)' }),\r\n      ],\r\n      selectCb: () => {},\r\n    }, options);\r\n    this.colors = [];\r\n    this.activeColor = null;\r\n    this.options.colors.forEach((item) => {\r\n      this.add(item);\r\n    });\r\n    if (this.colors.length > 0) {\r\n      this.setActiveByColor(this.colors[0].options.color);\r\n    }\r\n  }\r\n\r\n  add(item) {\r\n    this.colors.push(item);\r\n    this.children(item);\r\n    this.bind(item);\r\n  }\r\n\r\n  unbind() {\r\n    this.colors.forEach((item) => {\r\n      XEvent.unbind(item);\r\n    });\r\n  }\r\n\r\n  bind(item) {\r\n    XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.selectCb(item);\r\n      if (item.options.color) {\r\n        this.setActiveByColor(item.options.color);\r\n      }\r\n    });\r\n  }\r\n\r\n  setActiveByColor(color) {\r\n    this.colors.forEach((item) => {\r\n      const { options } = item;\r\n      if (options.color === color) {\r\n        item.setActive(true);\r\n        this.activeColor = options.color;\r\n      } else {\r\n        item.setActive(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { ColorArray };\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { FontColorContextMenuItem } from './FontColorContextMenuItem';\r\nimport { ColorArray } from '../../../../../component/colorpicker/colorarray/ColorArray';\r\nimport { h } from '../../../../../lib/Element';\r\nimport { ColorItem } from '../../../../../component/colorpicker/colorarray/ColorItem';\r\nimport { ELContextMenuDivider } from '../../../../../component/contextmenu/ELContextMenuDivider';\r\nimport { Icon } from '../../Icon';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { ColorPicker } from '../../../../../component/colorpicker/ColorPicker';\r\nimport { XEvent } from '../../../../../lib/XEvent';\r\n\r\nclass FontColorContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-color-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.colorPicker = new ColorPicker({\r\n      selectCb: (color) => {\r\n        const item = new ColorItem({ color });\r\n        this.customizeColorArray.add(item);\r\n        this.customizeColorArray.setActiveByColor(color);\r\n        this.colorArray.setActiveByColor(null);\r\n        this.options.onUpdate(color);\r\n        this.close();\r\n      },\r\n    });\r\n    // 重置\r\n    this.reset = new FontColorContextMenuItem('重置', new Icon('clear-color'));\r\n    // 颜色筛选\r\n    this.array = new FontColorContextMenuItem();\r\n    this.array.removeClass('hover');\r\n    this.colorArray = new ColorArray({\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) this.options.onUpdate(color);\r\n        this.customizeColorArray.setActiveByColor(null);\r\n        this.close();\r\n      },\r\n    });\r\n    this.array.children(this.colorArray);\r\n    // 历史选中\r\n    this.title = h('div', `${cssPrefix}-font-color-context-menu-color-title`);\r\n    this.title.text('自定义');\r\n    this.plus = new Icon('plus');\r\n    this.customizeColorArray = new ColorArray({\r\n      colors: [\r\n        new ColorItem({ icon: this.plus }),\r\n      ],\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) {\r\n          this.options.onUpdate(color);\r\n          this.colorArray.setActiveByColor(null);\r\n          this.close();\r\n        } else {\r\n          this.colorPicker.open(this.customizeColorArray.activeColor);\r\n        }\r\n      },\r\n    });\r\n    this.customize = new FontColorContextMenuItem();\r\n    this.customize.removeClass('hover');\r\n    this.customize.children(this.title);\r\n    this.customize.children(this.customizeColorArray);\r\n    // 菜单元素追加子节点\r\n    this.addItem(this.reset);\r\n    this.addItem(this.array);\r\n    this.addItem(new ELContextMenuDivider());\r\n    this.addItem(this.customize);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.reset);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.reset, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdate('rgb(0,0,0)');\r\n      this.customizeColorArray.setActiveByColor(null);\r\n      this.colorArray.setActiveByColor(null);\r\n    });\r\n  }\r\n\r\n  setActiveByColor(color) {\r\n    this.customizeColorArray.setActiveByColor(color);\r\n    this.colorArray.setActiveByColor(color);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { FontColorContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { FontColorContextMenu } from './contextmenu/fontcolor/FontColorContextMenu';\r\n\r\nclass FontColor extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-font-color`);\r\n    this.options = options;\r\n    this.icon = new Icon('color');\r\n    this.setIcon(this.icon);\r\n    this.setColor('rgb(0,0,0)');\r\n    this.fontColorContextMenu = new FontColorContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n    this.fontColorContextMenu.setActiveByColor('rgb(0,0,0)');\r\n  }\r\n\r\n  setColor(color) {\r\n    this.icon.css('border-bottom', `3px solid ${color}`);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.fontColorContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { FontColor };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../lib/Element';\r\n\r\nclass FillColorContextMenuItem extends ELContextMenuItem {\r\n  constructor(title, icon) {\r\n    super(`${cssPrefix}-fill-color-context-menu-item`);\r\n    this.title = title;\r\n    this.icon = icon;\r\n    if (icon) {\r\n      this.iconElement = h('div', `${cssPrefix}-fill-color-context-menu-item-icon`);\r\n      this.iconElement.children(this.icon);\r\n      this.children(this.iconElement);\r\n    }\r\n    if (title) {\r\n      this.titleElement = h('div', `${cssPrefix}-fill-color-context-menu-item-title`);\r\n      this.titleElement.text(title);\r\n      this.children(this.titleElement);\r\n    }\r\n  }\r\n}\r\n\r\nexport { FillColorContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { ColorArray } from '../../../../../component/colorpicker/colorarray/ColorArray';\r\nimport { h } from '../../../../../lib/Element';\r\nimport { ColorItem } from '../../../../../component/colorpicker/colorarray/ColorItem';\r\nimport { ELContextMenuDivider } from '../../../../../component/contextmenu/ELContextMenuDivider';\r\nimport { Icon } from '../../Icon';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nimport { FillColorContextMenuItem } from './FillColorContextMenuItem';\r\nimport { ColorPicker } from '../../../../../component/colorpicker/ColorPicker';\r\nimport { XEvent } from '../../../../../lib/XEvent';\r\n\r\nclass FillColorContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-color-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.colorPicker = new ColorPicker({\r\n      selectCb: (color) => {\r\n        const item = new ColorItem({ color });\r\n        this.customizeColorArray.add(item);\r\n        this.customizeColorArray.setActiveByColor(color);\r\n        this.colorArray.setActiveByColor(null);\r\n        this.options.onUpdate(color);\r\n        this.close();\r\n      },\r\n    });\r\n    // 重置\r\n    this.reset = new FillColorContextMenuItem('重置', new Icon('clear-color'));\r\n    // 颜色筛选\r\n    this.array = new FillColorContextMenuItem();\r\n    this.array.removeClass('hover');\r\n    this.colorArray = new ColorArray({\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) this.options.onUpdate(color);\r\n        this.customizeColorArray.setActiveByColor(null);\r\n        this.close();\r\n      },\r\n    });\r\n    this.array.children(this.colorArray);\r\n    // 历史选中\r\n    this.title = h('div', `${cssPrefix}-font-color-context-menu-color-title`);\r\n    this.title.text('自定义');\r\n    this.plus = new Icon('plus');\r\n    this.customizeColorArray = new ColorArray({\r\n      colors: [\r\n        new ColorItem({ icon: this.plus }),\r\n      ],\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) {\r\n          this.options.onUpdate(color);\r\n          this.colorArray.setActiveByColor(null);\r\n          this.close();\r\n        } else {\r\n          this.colorPicker.open(this.customizeColorArray.activeColor);\r\n        }\r\n      },\r\n    });\r\n    this.customize = new FillColorContextMenuItem();\r\n    this.customize.removeClass('hover');\r\n    this.customize.children(this.title);\r\n    this.customize.children(this.customizeColorArray);\r\n    // 菜单元素追加子节点\r\n    this.addItem(this.reset);\r\n    this.addItem(this.array);\r\n    this.addItem(new ELContextMenuDivider());\r\n    this.addItem(this.customize);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.bind(this.reset);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.reset, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdate(null);\r\n      this.customizeColorArray.setActiveByColor(null);\r\n      this.colorArray.setActiveByColor(null);\r\n    });\r\n  }\r\n\r\n  setActiveByColor(color) {\r\n    this.customizeColorArray.setActiveByColor(color);\r\n    this.colorArray.setActiveByColor(color);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { FillColorContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { FillColorContextMenu } from './contextmenu/fillcolor/FillColorContextMenu';\r\n\r\nclass FillColor extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-fill-color`);\r\n    this.options = options;\r\n    this.icon = new Icon('fill-color');\r\n    this.setIcon(this.icon);\r\n    this.setColor('rgb(255, 255, 255)');\r\n    this.fillColorContextMenu = new FillColorContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n    this.fillColorContextMenu.setActiveByColor('rgb(255, 255, 255)');\r\n  }\r\n\r\n  setColor(color) {\r\n    this.icon.css('border-bottom', `3px solid ${color}`);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.fillColorContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { FillColor };\r\n","import { ELContextMenuItem } from '../../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\n\r\nclass BorderTypeContextMenuItem extends ELContextMenuItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-border-type-context-menu-item`);\r\n  }\r\n}\r\n\r\nexport { BorderTypeContextMenuItem };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon1 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border1`);\r\n    this.icon = new Icon('border1');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon1 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon2 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border2`);\r\n    this.icon = new Icon('border2');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon2 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon3 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border3`);\r\n    this.icon = new Icon('border3');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon3 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon4 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border4`);\r\n    this.icon = new Icon('border4');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon4 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon5 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border5`);\r\n    this.icon = new Icon('border5');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon5 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon6 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border6`);\r\n    this.icon = new Icon('border6');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon6 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon7 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border7`);\r\n    this.icon = new Icon('border7');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon7 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon8 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border8`);\r\n    this.icon = new Icon('border8');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon8 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon9 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border9`);\r\n    this.icon = new Icon('border9');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon9 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass BorderIcon10 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border10`);\r\n    this.icon = new Icon('border10');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderIcon10 };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { DropDownItem } from '../../../base/DropDownItem';\r\n\r\nclass BorderColor extends DropDownItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border-color`);\r\n    this.icon = new Icon('border-color');\r\n    this.setIcon(this.icon);\r\n    this.setColor('#000000');\r\n  }\r\n\r\n  setColor(color) {\r\n    this.icon.css('border-bottom', `3px solid ${color}`);\r\n  }\r\n}\r\n\r\nexport { BorderColor };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { DropDownItem } from '../../../base/DropDownItem';\r\n\r\nclass BorderType extends DropDownItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-border-type`);\r\n    this.icon = new Icon('border-type');\r\n    this.setIcon(this.icon);\r\n  }\r\n}\r\n\r\nexport { BorderType };\r\n","import { ELContextMenuItem } from '../../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { h } from '../../../../../../lib/Element';\r\n\r\nclass BorderColorContextMenuItem extends ELContextMenuItem {\r\n  constructor(title, icon) {\r\n    super(`${cssPrefix}-border-color-context-menu-item`);\r\n    this.title = title;\r\n    this.icon = icon;\r\n    if (icon) {\r\n      this.iconElement = h('div', `${cssPrefix}-border-color-context-menu-item-icon`);\r\n      this.iconElement.children(this.icon);\r\n      this.children(this.iconElement);\r\n    }\r\n    if (title) {\r\n      this.titleElement = h('div', `${cssPrefix}-border-color-context-menu-item-title`);\r\n      this.titleElement.text(title);\r\n      this.children(this.titleElement);\r\n    }\r\n  }\r\n}\r\n\r\nexport { BorderColorContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../../utils/PlainUtils';\r\nimport { ColorPicker } from '../../../../../../component/colorpicker/ColorPicker';\r\nimport { ColorItem } from '../../../../../../component/colorpicker/colorarray/ColorItem';\r\nimport { Icon } from '../../../Icon';\r\nimport { ColorArray } from '../../../../../../component/colorpicker/colorarray/ColorArray';\r\nimport { ELContextMenuDivider } from '../../../../../../component/contextmenu/ELContextMenuDivider';\r\nimport { BorderColorContextMenuItem } from './BorderColorContextMenuItem';\r\nimport { h } from '../../../../../../lib/Element';\r\nimport { XEvent } from '../../../../../../lib/XEvent';\r\n\r\nclass BorderColorContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-border-color-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.colorPicker = new ColorPicker({\r\n      selectCb: (color) => {\r\n        const item = new ColorItem({ color });\r\n        this.customizeColorArray.add(item);\r\n        this.customizeColorArray.setActiveByColor(color);\r\n        this.colorArray.setActiveByColor(null);\r\n        this.options.onUpdate(color);\r\n        this.close();\r\n      },\r\n    });\r\n    // 重置\r\n    this.reset = new BorderColorContextMenuItem('重置', new Icon('clear-color'));\r\n    // 颜色筛选\r\n    this.array = new BorderColorContextMenuItem();\r\n    this.array.removeClass('hover');\r\n    this.colorArray = new ColorArray({\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) this.options.onUpdate(color);\r\n        this.customizeColorArray.setActiveByColor(null);\r\n        this.close();\r\n      },\r\n    });\r\n    this.array.children(this.colorArray);\r\n    // 历史选中\r\n    this.title = h('div', `${cssPrefix}-border-color-context-menu-color-title`);\r\n    this.title.text('自定义');\r\n    this.plus = new Icon('plus');\r\n    this.customizeColorArray = new ColorArray({\r\n      colors: [\r\n        new ColorItem({ icon: this.plus }),\r\n      ],\r\n      selectCb: (item) => {\r\n        const { color } = item.options;\r\n        if (color) {\r\n          this.options.onUpdate(color);\r\n          this.colorArray.setActiveByColor(null);\r\n          this.close();\r\n        } else {\r\n          this.colorPicker.open(this.customizeColorArray.activeColor);\r\n        }\r\n      },\r\n    });\r\n    this.customize = new BorderColorContextMenuItem();\r\n    this.customize.removeClass('hover');\r\n    this.customize.children(this.title);\r\n    this.customize.children(this.customizeColorArray);\r\n    // 菜单元素追加子节点\r\n    this.addItem(this.reset);\r\n    this.addItem(this.array);\r\n    this.addItem(new ELContextMenuDivider());\r\n    this.addItem(this.customize);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.reset);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.reset, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdate('rgb(0,0,0)');\r\n      this.customizeColorArray.setActiveByColor(null);\r\n      this.colorArray.setActiveByColor(null);\r\n    });\r\n  }\r\n\r\n  setActiveByColor(color) {\r\n    this.customizeColorArray.setActiveByColor(color);\r\n    this.colorArray.setActiveByColor(color);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { BorderColorContextMenu };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { h } from '../../../../../../lib/Element';\r\nimport { ELContextMenuItem } from '../../../../../../component/contextmenu/ELContextMenuItem';\r\n\r\nconst pool = [];\r\n\r\nclass LineTypeContextMenuItem extends ELContextMenuItem {\r\n  constructor(type) {\r\n    super(`${cssPrefix}-font-context-menu-item`);\r\n    this.type = type;\r\n    this.icon = new Icon('checked');\r\n    this.typeIcon = new Icon(type);\r\n    this.typeIcon.setWidth(50);\r\n    this.iconElement = h('div', `${cssPrefix}-font-context-menu-item-icon`);\r\n    this.titleElement = h('div', `${cssPrefix}-font-context-menu-item-title`);\r\n    this.iconElement.children(this.icon);\r\n    this.titleElement.children(this.typeIcon);\r\n    this.children(this.iconElement);\r\n    this.children(this.titleElement);\r\n    pool.push(this);\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title;\r\n    this.titleElement.text(title);\r\n  }\r\n\r\n  setActive() {\r\n    pool.forEach((item) => {\r\n      item.removeClass('active');\r\n    });\r\n    this.addClass('active');\r\n  }\r\n}\r\n\r\nexport { LineTypeContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../../component/contextmenu/ELContextMenu';\r\nimport { PlainUtils } from '../../../../../../utils/PlainUtils';\r\nimport { cssPrefix, Constant } from '../../../../../../const/Constant';\r\nimport { LineTypeContextMenuItem } from './LineTypeContextMenuItem';\r\nimport { XEvent } from '../../../../../../lib/XEvent';\r\n\r\nclass LineTypeContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-line-type-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new LineTypeContextMenuItem('line1'),\r\n      new LineTypeContextMenuItem('line2'),\r\n      new LineTypeContextMenuItem('line3'),\r\n      new LineTypeContextMenuItem('line4'),\r\n      new LineTypeContextMenuItem('line5'),\r\n      new LineTypeContextMenuItem('line6'),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      this.addItem(item);\r\n    });\r\n    this.setActiveByType(this.items[0].type);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.unbind(item);\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n        this.update(item.type);\r\n        item.setActive();\r\n      });\r\n    });\r\n  }\r\n\r\n  update(type) {\r\n    const { options } = this;\r\n    options.onUpdate(type);\r\n    this.close();\r\n  }\r\n\r\n  setActiveByType(type) {\r\n    this.items.forEach((item) => {\r\n      if (item.type === type) {\r\n        item.setActive();\r\n      }\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { LineTypeContextMenu };\r\n","/* global window */\r\n\r\nlet DPR = window.devicePixelRatio || 1;\r\nlet LINE_WIDTH_LOW = Math.round(DPR);\r\nlet LINE_WIDTH_MEDIUM = LINE_WIDTH_LOW + 2;\r\nlet LINE_WIDTH_HIGH = LINE_WIDTH_MEDIUM + 2;\r\nlet LINE_PIXEL_OFFSET = LINE_WIDTH_LOW / 2;\r\n\r\nclass Base {\r\n\r\n  static styleTransformCssPx(px) {\r\n    return px / this.dpr();\r\n  }\r\n\r\n  static srcTransformCssPx(px) {\r\n    return this.styleTransformCssPx(this.srcTransformStylePx(px));\r\n  }\r\n\r\n  static srcTransformStylePx(px) {\r\n    return this.rounding(px * this.dpr());\r\n  }\r\n\r\n  static rounding(val) {\r\n    return Math.round(val);\r\n  }\r\n\r\n  static radian(angle) {\r\n    return -angle * (Math.PI / 180);\r\n  }\r\n\r\n  static dpr() {\r\n    return DPR;\r\n  }\r\n\r\n  static dprUpdate() {\r\n    DPR = window.devicePixelRatio || 1;\r\n    LINE_WIDTH_LOW = Math.round(DPR);\r\n    LINE_WIDTH_MEDIUM = LINE_WIDTH_LOW + 2;\r\n    LINE_WIDTH_HIGH = LINE_WIDTH_MEDIUM + 2;\r\n    LINE_PIXEL_OFFSET = LINE_WIDTH_LOW / 2;\r\n  }\r\n\r\n  constructor(canvas) {\r\n    this.canvas = canvas;\r\n    this.ctx = canvas.getContext('2d');\r\n  }\r\n\r\n  attr(options) {\r\n    // eslint-disable-next-line guard-for-in,no-restricted-syntax\r\n    for (const key in options) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (options.hasOwnProperty(key)) {\r\n        let value = options[key];\r\n        if (typeof value === 'string' || value instanceof String) {\r\n          value = value.trim();\r\n        }\r\n        if (this.ctx[key] !== value) {\r\n          this.ctx[key] = value;\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  resize(width, height) {\r\n    const { canvas } = this;\r\n    canvas.width = Base.srcTransformStylePx(width);\r\n    canvas.height = Base.srcTransformStylePx(height);\r\n    canvas.style.width = `${canvas.width / Base.dpr()}px`;\r\n    canvas.style.height = `${canvas.height / Base.dpr()}px`;\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nclass Wrapping extends Base {\r\n\r\n  constructor(canvas) {\r\n    super(canvas);\r\n    this.dash = [];\r\n  }\r\n\r\n  beginPath() {\r\n    const { ctx } = this;\r\n    ctx.beginPath();\r\n    return this;\r\n  }\r\n\r\n  measureText(text) {\r\n    const { ctx } = this;\r\n    return ctx.measureText(text);\r\n  }\r\n\r\n  save() {\r\n    const { ctx } = this;\r\n    ctx.save();\r\n    return this;\r\n  }\r\n\r\n  restore() {\r\n    const { ctx } = this;\r\n    ctx.restore();\r\n    return this;\r\n  }\r\n\r\n  fill() {\r\n    const { ctx } = this;\r\n    ctx.fill();\r\n    return this;\r\n  }\r\n\r\n  clip() {\r\n    const { ctx } = this;\r\n    ctx.clip();\r\n    return this;\r\n  }\r\n\r\n  setLineDash(dash = []) {\r\n    const { ctx } = this;\r\n    this.dash = dash;\r\n    ctx.setLineDash(dash);\r\n    return this;\r\n  }\r\n\r\n  scale(x, y) {\r\n    const { ctx } = this;\r\n    ctx.scale(x, y);\r\n    return this;\r\n  }\r\n\r\n  translate(x, y) {\r\n    const { ctx } = this;\r\n    ctx.translate(x, y);\r\n    return this;\r\n  }\r\n\r\n  rotate(deg) {\r\n    const { ctx } = this;\r\n    ctx.rotate(deg);\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nclass Extends extends Wrapping {\r\n\r\n  polyStroke(interpolation = xys => xys, ...xys) {\r\n    const { ctx } = this;\r\n    if (xys.length > 1) {\r\n      this.beginPath();\r\n      const [x, y] = interpolation(xys[0]);\r\n      ctx.moveTo(x, y);\r\n      for (let i = 1, len = xys.length; i < len; i += 1) {\r\n        const [x, y] = interpolation(xys[i]);\r\n        ctx.lineTo(x, y);\r\n      }\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  polyInFill(interpolation = xys => xys, ...xys) {\r\n    const { ctx } = this;\r\n    if (xys.length > 1) {\r\n      this.beginPath();\r\n      const [x, y] = interpolation(xys[0]);\r\n      ctx.moveTo(x, y);\r\n      for (let i = 1, len = xys.length; i < len; i += 1) {\r\n        const [x, y] = interpolation(xys[i]);\r\n        ctx.lineTo(x, y);\r\n      }\r\n      ctx.fill();\r\n    }\r\n  }\r\n\r\n  fullRect() {\r\n    const { canvas } = this;\r\n    const { width, height } = canvas;\r\n    this.ctx.fillRect(0, 0, width, height);\r\n    return this;\r\n  }\r\n\r\n  rotate(angle) {\r\n    super.rotate(Base.radian(angle));\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nclass Position extends Extends {\r\n\r\n  constructor(canvas) {\r\n    super(canvas);\r\n    this.offsetX = 0;\r\n    this.offsetY = 0;\r\n  }\r\n\r\n  offset(x, y) {\r\n    this.offsetX = x;\r\n    this.offsetY = y;\r\n  }\r\n\r\n  getOffsetX() {\r\n    return this.offsetX;\r\n  }\r\n\r\n  getOffsetY() {\r\n    return this.offsetY;\r\n  }\r\n\r\n  fillText() {\r\n    throw TypeError('child impl');\r\n  }\r\n\r\n  fillRect() {\r\n    throw TypeError('child impl');\r\n  }\r\n\r\n  rect() {\r\n    throw TypeError('child impl');\r\n  }\r\n\r\n  drawImage() {\r\n    throw TypeError('child impl');\r\n  }\r\n\r\n}\r\n\r\nclass BaseLine extends Position {\r\n\r\n  line(...xys) {\r\n    this.polyStroke((xys) => {\r\n      const [x, y] = xys;\r\n      return [this.transformLinePx(Base.rounding(x + this.getOffsetX())),\r\n        this.transformLinePx(Base.rounding(y + this.getOffsetY()))];\r\n    }, ...xys);\r\n    return this;\r\n  }\r\n\r\n  transformLinePx(pixel) {\r\n    const { ctx } = this;\r\n    const {\r\n      lineWidth,\r\n    } = ctx;\r\n    return lineWidth % 2 === 0\r\n      ? pixel : pixel - 0.5;\r\n  }\r\n\r\n}\r\n\r\nclass CorsLine extends BaseLine {\r\n\r\n  static offsetToLineInside(val) {\r\n    return LINE_WIDTH_LOW > 1\r\n      ? val - LINE_WIDTH_LOW / 2\r\n      : val - 1;\r\n  }\r\n\r\n  constructor(canvas) {\r\n    super(canvas);\r\n    this.lineWidthType = CorsLine.LINE_WIDTH_TYPE.low;\r\n    this.lineColor = '#000000';\r\n  }\r\n\r\n  corsLine([sx, sy], [ex, ey]) {\r\n    const {\r\n      lineWidthType, lineColor,\r\n    } = this;\r\n    let lineWidth = LINE_WIDTH_LOW;\r\n    switch (lineWidthType) {\r\n      case CorsLine.LINE_WIDTH_TYPE.medium:\r\n        lineWidth = LINE_WIDTH_MEDIUM;\r\n        break;\r\n      case CorsLine.LINE_WIDTH_TYPE.low:\r\n        lineWidth = LINE_WIDTH_LOW;\r\n        break;\r\n      case CorsLine.LINE_WIDTH_TYPE.high:\r\n        lineWidth = LINE_WIDTH_HIGH;\r\n        break;\r\n    }\r\n    this.attr({\r\n      strokeStyle: lineColor,\r\n      lineWidth,\r\n    });\r\n    this.polyStroke((xys) => {\r\n      const [x, y] = xys;\r\n      return [\r\n        Base.rounding(x + this.getOffsetX()) - LINE_PIXEL_OFFSET,\r\n        Base.rounding(y + this.getOffsetY()) - LINE_PIXEL_OFFSET,\r\n      ];\r\n    }, [sx, sy], [ex, ey]);\r\n  }\r\n\r\n  setLineColor(color) {\r\n    this.lineColor = color;\r\n  }\r\n\r\n  setLineWidthType(type) {\r\n    this.lineWidthType = type;\r\n  }\r\n\r\n  horizonLine([sx, sy], [ex, ey]) {\r\n    if (sy !== ey) {\r\n      throw new TypeError('Error Horizon Line');\r\n    }\r\n    this.corsLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  verticalLine([sx, sy], [ex, ey]) {\r\n    if (sx !== ex) {\r\n      throw new TypeError('Error Vertical Line');\r\n    }\r\n    this.corsLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n}\r\nCorsLine.LINE_WIDTH_TYPE = {\r\n  low: 'low',\r\n  medium: 'medium',\r\n  high: 'high',\r\n};\r\n\r\nclass XDraw extends CorsLine {\r\n\r\n  fillText(text, x, y) {\r\n    x += this.getOffsetX();\r\n    y += this.getOffsetY();\r\n    this.ctx.fillText(text, XDraw.rounding(x), XDraw.rounding(y));\r\n    return this;\r\n  }\r\n\r\n  fillPath(path) {\r\n    this.polyInFill((xys) => {\r\n      const { x, y } = xys;\r\n      return [Base.rounding(x + this.getOffsetX()), Base.rounding(y + this.getOffsetY())];\r\n    }, ...path.points);\r\n    return this;\r\n  }\r\n\r\n  fillRect(x, y, w, h) {\r\n    x += this.getOffsetX();\r\n    y += this.getOffsetY();\r\n    this.ctx.fillRect(XDraw.rounding(x), XDraw.rounding(y),\r\n      XDraw.rounding(w), XDraw.rounding(h));\r\n    return this;\r\n  }\r\n\r\n  rect(x, y, w, h) {\r\n    x += this.getOffsetX();\r\n    y += this.getOffsetY();\r\n    this.ctx.rect(XDraw.rounding(x), XDraw.rounding(y),\r\n      XDraw.rounding(w), XDraw.rounding(h));\r\n    return this;\r\n  }\r\n\r\n  copyImage(sx, sy, sw, sh, tx, ty, tw, th) {\r\n    const { ctx } = this;\r\n    tx += this.getOffsetX();\r\n    sx += this.getOffsetX();\r\n    ty += this.getOffsetY();\r\n    sy += this.getOffsetY();\r\n    ctx.drawImage(this.canvas,\r\n      XDraw.rounding(sx), XDraw.rounding(sy),\r\n      XDraw.rounding(sw), XDraw.rounding(sh),\r\n      XDraw.rounding(tx), XDraw.rounding(ty),\r\n      XDraw.rounding(tw), XDraw.rounding(th));\r\n    return this;\r\n  }\r\n\r\n  drawImage(el, sx, sy, sw, sh, tx, ty, tw, th) {\r\n    const { ctx } = this;\r\n    tx += this.getOffsetX();\r\n    ty += this.getOffsetY();\r\n    ctx.drawImage(el,\r\n      XDraw.rounding(sx), XDraw.rounding(sy),\r\n      XDraw.rounding(sw), XDraw.rounding(sh),\r\n      XDraw.rounding(tx), XDraw.rounding(ty),\r\n      XDraw.rounding(tw), XDraw.rounding(th));\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XDraw,\r\n};\r\n","import { PlainUtils } from '../utils/PlainUtils';\r\nimport { XDraw } from './XDraw';\r\n\r\nconst LINE_TYPE = {\r\n  SOLID_LINE: 0,\r\n  DOTTED_LINE: 1,\r\n  POINT_LINE: 2,\r\n  DOUBLE_LINE: 3,\r\n};\r\n\r\nclass SolidLine {\r\n\r\n  constructor(draw, attr) {\r\n    this.draw = draw;\r\n    PlainUtils.mergeDeep(this, {\r\n      color: '#000000',\r\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\r\n    }, attr);\r\n  }\r\n\r\n  setWidthType(widthType) {\r\n    this.widthType = widthType;\r\n  }\r\n\r\n  setColor(color) {\r\n    this.color = color;\r\n  }\r\n\r\n  horizonLine(sx, sy, ex, ey) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    draw.horizonLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  verticalLine(sx, sy, ex, ey) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    draw.verticalLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  tiltingLine(sx, sy, ex, ey) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    draw.corsLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n}\r\n\r\nclass DottedLine {\r\n\r\n  constructor(draw, attr) {\r\n    this.draw = draw;\r\n    PlainUtils.mergeDeep(this, {\r\n      color: '#000000',\r\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\r\n      dash: [5],\r\n    }, attr);\r\n  }\r\n\r\n  setWidthType(widthType) {\r\n    this.widthType = widthType;\r\n  }\r\n\r\n  setColor(color) {\r\n    this.color = color;\r\n  }\r\n\r\n  horizonLine(sx, sy, ex, ey) {\r\n    const { draw, dash } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash(dash);\r\n    draw.horizonLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  verticalLine(sx, sy, ex, ey) {\r\n    const { draw, dash } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash(dash);\r\n    draw.verticalLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  tiltingLine(sx, sy, ex, ey) {\r\n    const { draw, dash } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash(dash);\r\n    draw.corsLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n}\r\n\r\nclass DoubleLine {\r\n\r\n  constructor(draw, attr) {\r\n    this.draw = draw;\r\n    PlainUtils.mergeDeep(this, {\r\n      color: '#000000',\r\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\r\n      padding: 1,\r\n      spacing: DoubleLine.spacing,\r\n      leftShow: () => false,\r\n      topShow: () => false,\r\n      rightShow: () => false,\r\n      bottomShow: () => false,\r\n      iFMerge: () => false,\r\n      iFMergeFirstRow: () => false,\r\n      iFMergeLastRow: () => false,\r\n      iFMergeFirstCol: () => false,\r\n      iFMergeLastCol: () => false,\r\n    }, attr);\r\n  }\r\n\r\n  setWidthType(widthType) {\r\n    this.widthType = widthType;\r\n  }\r\n\r\n  setColor(color) {\r\n    this.color = color;\r\n  }\r\n\r\n  handleExternal(sx, sy, ex, ey, row, col, pos) {\r\n    const external = {};\r\n    const { leftShow, topShow, rightShow, bottomShow } = this;\r\n    const { iFMerge, iFMergeFirstRow, iFMergeLastRow, iFMergeFirstCol, iFMergeLastCol } = this;\r\n    const { spacing } = this;\r\n    let ifMerge = null;\r\n    let firstRow = null;\r\n    let lastRow = null;\r\n    let firstCol = null;\r\n    let lastCol = null;\r\n    switch (pos) {\r\n      case 'left':\r\n        ifMerge = iFMerge(row, col - 1);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row, col - 1);\r\n          lastRow = iFMergeLastRow(row, col - 1);\r\n          firstCol = iFMergeFirstCol(row, col - 1);\r\n          lastCol = iFMergeLastCol(row, col - 1);\r\n        }\r\n        break;\r\n      case 'top':\r\n        ifMerge = iFMerge(row - 1, col);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row - 1, col);\r\n          lastRow = iFMergeLastRow(row - 1, col);\r\n          firstCol = iFMergeFirstCol(row - 1, col);\r\n          lastCol = iFMergeLastCol(row - 1, col);\r\n        }\r\n        break;\r\n      case 'right':\r\n        ifMerge = iFMerge(row, col + 1);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row, col + 1);\r\n          lastRow = iFMergeLastRow(row, col + 1);\r\n          firstCol = iFMergeFirstCol(row, col + 1);\r\n          lastCol = iFMergeLastCol(row, col + 1);\r\n        }\r\n        break;\r\n      case 'bottom':\r\n        ifMerge = iFMerge(row + 1, col);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row + 1, col);\r\n          lastRow = iFMergeLastRow(row + 1, col);\r\n          firstCol = iFMergeFirstCol(row + 1, col);\r\n          lastCol = iFMergeLastCol(row + 1, col);\r\n        }\r\n        break;\r\n      default: break;\r\n    }\r\n    if (ifMerge) {\r\n      switch (pos) {\r\n        case 'left': {\r\n          external.sx = sx - spacing;\r\n          external.ex = ex - spacing;\r\n          // 检查顶边和上底边及左上角底边及左顶边\r\n          const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          external.sy = sy;\r\n          if (sTop || sBottom) external.sy = sy - spacing;\r\n          if (sTopLeftCorner && firstRow) external.sy = sy + spacing;\r\n          // 检查底边和下顶边及左下角顶边和左底边\r\n          const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          external.ey = ey;\r\n          if (eBottom || eTop) external.ey = ey + spacing;\r\n          if (eBottomLeftCorner && lastRow) external.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'top': {\r\n          external.sy = sy - spacing;\r\n          external.ey = ey - spacing;\r\n          // 检查左边和左右边及左上角右边及上左边\r\n          const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          external.sx = sx;\r\n          if (sLeft || sRight) external.sx = sx - spacing;\r\n          if (sTopLeftCorner && firstCol) external.sx = sx + spacing;\r\n          // 检查右边和右左边及右上角左边及上右边\r\n          const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          external.ex = ex;\r\n          if (eRight || eLeft) external.ex = ex + spacing;\r\n          if (eTopRightCorner && lastCol) external.ex = ex - spacing;\r\n          break;\r\n        }\r\n        case 'right': {\r\n          external.sx = sx + spacing;\r\n          external.ex = ex + spacing;\r\n          // 检查顶边和上底边及右上角底边及右顶边\r\n          const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          external.sy = sy;\r\n          if (sTop || sBottom) external.sy = sy - spacing;\r\n          if (sTopRightCorner && firstRow) external.sy = sy + spacing;\r\n          // 检查底边和下顶边及右下角顶边及右底边\r\n          const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          external.ey = ey;\r\n          if (eBottom || eTop) external.ey = ey + spacing;\r\n          if (eBottomRightCorner && lastRow) external.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'bottom': {\r\n          external.sy = sy + spacing;\r\n          external.ey = ey + spacing;\r\n          // 检查左边和左右边及左下角右边及下左边\r\n          const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          external.sx = sx;\r\n          if (sLeft || sRight) external.sx = sx - spacing;\r\n          if (sBottomLeftCorner && firstCol) external.sx = sx + spacing;\r\n          // 检查右边和右左边及右下角左边及下右边\r\n          const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          external.ex = ex;\r\n          if (eRight || eLeft) external.ex = ex + spacing;\r\n          if (eBottomRightCorner && lastCol) external.ex = ex - spacing;\r\n          break;\r\n        }\r\n        default: break;\r\n      }\r\n      return external;\r\n    }\r\n    switch (pos) {\r\n      case 'left': {\r\n        external.sx = sx - spacing;\r\n        external.ex = ex - spacing;\r\n        // 检查顶边和上底边及左上角底边及左顶边\r\n        const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        external.sy = sy;\r\n        if (sTop || sBottom) external.sy = sy - spacing;\r\n        if (sTopLeftCorner) external.sy = sy + spacing;\r\n        // 检查底边和下顶边及左下角顶边和左底边\r\n        const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        external.ey = ey;\r\n        if (eBottom || eTop) external.ey = ey + spacing;\r\n        if (eBottomLeftCorner) external.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'top': {\r\n        external.sy = sy - spacing;\r\n        external.ey = ey - spacing;\r\n        // 检查左边和左右边及左上角右边及上左边\r\n        const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        external.sx = sx;\r\n        if (sLeft || sRight) external.sx = sx - spacing;\r\n        if (sTopLeftCorner) external.sx = sx + spacing;\r\n        // 检查右边和右左边及右上角左边及上右边\r\n        const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        external.ex = ex;\r\n        if (eRight || eLeft) external.ex = ex + spacing;\r\n        if (eTopRightCorner) external.ex = ex - spacing;\r\n        break;\r\n      }\r\n      case 'right': {\r\n        external.sx = sx + spacing;\r\n        external.ex = ex + spacing;\r\n        // 检查顶边和上底边及右上角底边及右顶边\r\n        const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        external.sy = sy;\r\n        if (sTop || sBottom) external.sy = sy - spacing;\r\n        if (sTopRightCorner) external.sy = sy + spacing;\r\n        // 检查底边和下顶边及右下角顶边及右底边\r\n        const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        external.ey = ey;\r\n        if (eBottom || eTop) external.ey = ey + spacing;\r\n        if (eBottomRightCorner) external.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'bottom': {\r\n        external.sy = sy + spacing;\r\n        external.ey = ey + spacing;\r\n        // 检查左边和左右边及左下角右边及下左边\r\n        const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        external.sx = sx;\r\n        if (sLeft || sRight) external.sx = sx - spacing;\r\n        if (sBottomLeftCorner) external.sx = sx + spacing;\r\n        // 检查右边和右左边及右下角左边及下右边\r\n        const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        external.ex = ex;\r\n        if (eRight || eLeft) external.ex = ex + spacing;\r\n        if (eBottomRightCorner) external.ex = ex - spacing;\r\n        break;\r\n      }\r\n      default: break;\r\n    }\r\n    return external;\r\n  }\r\n\r\n  handleInternal(sx, sy, ex, ey, row, col, pos) {\r\n    const internal = {};\r\n    const { leftShow, topShow, rightShow, bottomShow } = this;\r\n    const { iFMerge, iFMergeFirstRow, iFMergeLastRow, iFMergeFirstCol, iFMergeLastCol } = this;\r\n    const { spacing } = this;\r\n    const ifMerge = iFMerge(row, col);\r\n    // merge\r\n    if (ifMerge) {\r\n      const firstRow = iFMergeFirstRow(row, col);\r\n      const lastRow = iFMergeLastRow(row, col);\r\n      const firstCol = iFMergeFirstCol(row, col);\r\n      const lastCol = iFMergeLastCol(row, col);\r\n      switch (pos) {\r\n        case 'left': {\r\n          internal.sx = sx + spacing;\r\n          internal.ex = ex + spacing;\r\n          // 检查顶边和上底边及左上角底边及左顶边\r\n          const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          internal.sy = sy;\r\n          if (sTopLeftCorner) internal.sy = sy - spacing;\r\n          if ((sTop || sBottom) && firstRow) internal.sy = sy + spacing;\r\n          // 检查底边和下顶边及左下角顶边和左底边\r\n          const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          internal.ey = ey;\r\n          if (eBottomLeftCorner) internal.ey = ey + spacing;\r\n          if ((eBottom || eTop) && lastRow) internal.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'top': {\r\n          internal.sy = sy + spacing;\r\n          internal.ey = ey + spacing;\r\n          // 检查左边和左右边及左上角右边及上左边\r\n          const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          internal.sx = sx;\r\n          if (sTopLeftCorner) internal.sx = sx - spacing;\r\n          if ((sLeft || sRight) && firstCol) internal.sx = sx + spacing;\r\n          // 检查右边和右左边及右上角左边及上右边\r\n          const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          internal.ex = ex;\r\n          if (eTopRightCorner) internal.ex = ex + spacing;\r\n          if ((eRight || eLeft) && lastCol) internal.ex = ex - spacing;\r\n          break;\r\n        }\r\n        case 'right': {\r\n          internal.sx = sx - spacing;\r\n          internal.ex = ex - spacing;\r\n          // 检查顶边和上底边及右上角底边及右上边\r\n          const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          internal.sy = sy;\r\n          if (sTopRightCorner) internal.sy = sy - spacing;\r\n          if ((sTop || sBottom) && firstRow) internal.sy = sy + spacing;\r\n          // 检查底边和下顶边右下角顶边及右下边\r\n          const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          internal.ey = ey;\r\n          if (eBottomRightCorner) internal.ey = ey + spacing;\r\n          if ((eBottom || eTop) && lastRow) internal.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'bottom': {\r\n          internal.sy = sy - spacing;\r\n          internal.ey = ey - spacing;\r\n          // 检查左边和左右边及左下角右边及下左边\r\n          const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          internal.sx = sx;\r\n          if (sBottomLeftCorner) internal.sx = sx - spacing;\r\n          if ((sLeft || sRight) && firstCol) internal.sx = sx + spacing;\r\n          // 检查右边和右左边及右下角左边及下右边\r\n          const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          internal.ex = ex;\r\n          if (eBottomRightCorner) internal.ex = ex + spacing;\r\n          if ((eRight || eLeft) && lastCol) internal.ex = ex - spacing;\r\n          break;\r\n        }\r\n        default: break;\r\n      }\r\n      return internal;\r\n    }\r\n    switch (pos) {\r\n      case 'left': {\r\n        internal.sx = sx + spacing;\r\n        internal.ex = ex + spacing;\r\n        // 检查顶边和上底边及左上角底边及左顶边\r\n        const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        internal.sy = sy;\r\n        if (sTopLeftCorner) internal.sy = sy - spacing;\r\n        if (sTop || sBottom) internal.sy = sy + spacing;\r\n        // 检查底边和下顶边及左下角顶边和左底边\r\n        const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        internal.ey = ey;\r\n        if (eBottomLeftCorner) internal.ey = ey + spacing;\r\n        if (eBottom || eTop) internal.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'top': {\r\n        internal.sy = sy + spacing;\r\n        internal.ey = ey + spacing;\r\n        // 检查左边和左右边及左上角右边及上左边\r\n        const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        internal.sx = sx;\r\n        if (sTopLeftCorner) internal.sx = sx - spacing;\r\n        if (sLeft || sRight) internal.sx = sx + spacing;\r\n        // 检查右边和右左边及右上角左边及上右边\r\n        const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        internal.ex = ex;\r\n        if (eTopRightCorner) internal.ex = ex + spacing;\r\n        if (eRight || eLeft) internal.ex = ex - spacing;\r\n        break;\r\n      }\r\n      case 'right': {\r\n        internal.sx = sx - spacing;\r\n        internal.ex = ex - spacing;\r\n        // 检查顶边和上底边及右上角底边及右上边\r\n        const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        internal.sy = sy;\r\n        if (sTopRightCorner) internal.sy = sy - spacing;\r\n        if (sTop || sBottom) internal.sy = sy + spacing;\r\n        // 检查底边和下顶边右下角顶边及右下边\r\n        const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        internal.ey = ey;\r\n        if (eBottomRightCorner) internal.ey = ey + spacing;\r\n        if (eBottom || eTop) internal.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'bottom': {\r\n        internal.sy = sy - spacing;\r\n        internal.ey = ey - spacing;\r\n        // 检查左边和左右边及左下角右边及下左边\r\n        const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        internal.sx = sx;\r\n        if (sBottomLeftCorner) internal.sx = sx - spacing;\r\n        if (sLeft || sRight) internal.sx = sx + spacing;\r\n        // 检查右边和右左边及右下角左边及下右边\r\n        const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        internal.ex = ex;\r\n        if (eBottomRightCorner) internal.ex = ex + spacing;\r\n        if (eRight || eLeft) internal.ex = ex - spacing;\r\n        break;\r\n      }\r\n      default: break;\r\n    }\r\n    return internal;\r\n  }\r\n\r\n  horizonLine(sx, sy, ex, ey, row, col, pos) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    const external = this.handleExternal(sx, sy, ex, ey, row, col, pos);\r\n    const internal = this.handleInternal(sx, sy, ex, ey, row, col, pos);\r\n    if (!PlainUtils.isEmptyObject(internal)) {\r\n      draw.horizonLine([internal.sx, internal.sy], [internal.ex, internal.ey]);\r\n    }\r\n    if (!PlainUtils.isEmptyObject(external)) {\r\n      draw.horizonLine([external.sx, external.sy], [external.ex, external.ey]);\r\n    }\r\n  }\r\n\r\n  verticalLine(sx, sy, ex, ey, row, col, pos) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    const external = this.handleExternal(sx, sy, ex, ey, row, col, pos);\r\n    const internal = this.handleInternal(sx, sy, ex, ey, row, col, pos);\r\n    if (!PlainUtils.isEmptyObject(internal)) {\r\n      draw.verticalLine([internal.sx, internal.sy], [internal.ex, internal.ey]);\r\n    }\r\n    if (!PlainUtils.isEmptyObject(external)) {\r\n      draw.verticalLine([external.sx, external.sy], [external.ex, external.ey]);\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  tiltingLine(sx, sy, ex, ey, row, col, pos) {\r\n    // TODO ..\r\n    // ...\r\n  }\r\n\r\n}\r\nDoubleLine.spacing = XDraw.dpr() >= 2 ? 3 : 2;\r\n\r\nclass Line {\r\n\r\n  constructor(draw, attr = {}) {\r\n    this.widthType = XDraw.LINE_WIDTH_TYPE.low;\r\n    this.type = LINE_TYPE.SOLID_LINE;\r\n    this.solidLine = new SolidLine(draw, PlainUtils.mergeDeep({}, attr));\r\n    this.dottedLine = new DottedLine(draw, PlainUtils.mergeDeep({\r\n      dash: [5],\r\n    }, attr));\r\n    this.pointLine = new DottedLine(draw, PlainUtils.mergeDeep({\r\n      dash: [2, 2],\r\n    }, attr));\r\n    this.doubleLine = new DoubleLine(draw, PlainUtils.mergeDeep({}, attr));\r\n  }\r\n\r\n  setWidthType(widthType) {\r\n    if (widthType) {\r\n      if (this.type === LINE_TYPE.SOLID_LINE) {\r\n        this.solidLine.setWidthType(widthType);\r\n      }\r\n    }\r\n  }\r\n\r\n  setColor(color) {\r\n    if (color) {\r\n      this.solidLine.setColor(color);\r\n      this.dottedLine.setColor(color);\r\n      this.pointLine.setColor(color);\r\n      this.doubleLine.setColor(color);\r\n    }\r\n  }\r\n\r\n  setType(type) {\r\n    this.type = type;\r\n  }\r\n\r\n  horizonLine(sx, sy, ex, ey, row, col, pos) {\r\n    const {\r\n      type,\r\n      solidLine,\r\n      dottedLine,\r\n      pointLine,\r\n      doubleLine,\r\n    } = this;\r\n    switch (type) {\r\n      case LINE_TYPE.SOLID_LINE:\r\n        solidLine.horizonLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOTTED_LINE:\r\n        dottedLine.horizonLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.POINT_LINE:\r\n        pointLine.horizonLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOUBLE_LINE:\r\n        doubleLine.horizonLine(sx, sy, ex, ey, row, col, pos);\r\n        break;\r\n    }\r\n  }\r\n\r\n  verticalLine(sx, sy, ex, ey, row, col, pos) {\r\n    const {\r\n      type,\r\n      solidLine,\r\n      dottedLine,\r\n      pointLine,\r\n      doubleLine,\r\n    } = this;\r\n    switch (type) {\r\n      case LINE_TYPE.SOLID_LINE:\r\n        solidLine.verticalLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOTTED_LINE:\r\n        dottedLine.verticalLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.POINT_LINE:\r\n        pointLine.verticalLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOUBLE_LINE:\r\n        doubleLine.verticalLine(sx, sy, ex, ey, row, col, pos);\r\n        break;\r\n    }\r\n  }\r\n\r\n  tiltingLine(sx, sy, ex, ey, row, col, pos) {\r\n    const {\r\n      type,\r\n      solidLine,\r\n      dottedLine,\r\n      pointLine,\r\n      doubleLine,\r\n    } = this;\r\n    switch (type) {\r\n      case LINE_TYPE.SOLID_LINE:\r\n        solidLine.tiltingLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOTTED_LINE:\r\n        dottedLine.tiltingLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.POINT_LINE:\r\n        pointLine.tiltingLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOUBLE_LINE:\r\n        doubleLine.tiltingLine(sx, sy, ex, ey, row, col, pos);\r\n        break;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Line, LINE_TYPE, SolidLine,\r\n};\r\n","import { ELContextMenu } from '../../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../../utils/PlainUtils';\r\nimport { BorderTypeContextMenuItem } from './BorderTypeContextMenuItem';\r\nimport { ELContextMenuDivider } from '../../../../../../component/contextmenu/ELContextMenuDivider';\r\nimport { h } from '../../../../../../lib/Element';\r\nimport { BorderIcon1 } from '../../icon/border/BorderIcon1';\r\nimport { BorderIcon2 } from '../../icon/border/BorderIcon2';\r\nimport { BorderIcon3 } from '../../icon/border/BorderIcon3';\r\nimport { BorderIcon4 } from '../../icon/border/BorderIcon4';\r\nimport { BorderIcon5 } from '../../icon/border/BorderIcon5';\r\nimport { BorderIcon6 } from '../../icon/border/BorderIcon6';\r\nimport { BorderIcon7 } from '../../icon/border/BorderIcon7';\r\nimport { BorderIcon8 } from '../../icon/border/BorderIcon8';\r\nimport { BorderIcon9 } from '../../icon/border/BorderIcon9';\r\nimport { BorderIcon10 } from '../../icon/border/BorderIcon10';\r\nimport { BorderColor } from '../../icon/border/BorderColor';\r\nimport { BorderType } from '../../icon/border/BorderType';\r\nimport { XEvent } from '../../../../../../lib/XEvent';\r\nimport { BorderColorContextMenu } from '../bordercolor/BorderColorContextMenu';\r\nimport { LineTypeContextMenu } from '../linetype/LineTypeContextMenu';\r\nimport { LINE_TYPE } from '../../../../../../canvas/Line';\r\nimport { ElPopUp } from '../../../../../../component/elpopup/ElPopUp';\r\n\r\nclass BorderTypeContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-border-type-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.type = LINE_TYPE.SOLID_LINE;\r\n    this.color = '#000000';\r\n    // 边框样式\r\n    this.borderIcon1 = new BorderIcon1();\r\n    this.borderIcon2 = new BorderIcon2();\r\n    this.borderIcon3 = new BorderIcon3();\r\n    this.borderIcon4 = new BorderIcon4();\r\n    this.borderIcon5 = new BorderIcon5();\r\n    const div1 = h('div', `${cssPrefix}-border-type-context-menu-type-icon-line`);\r\n    div1.children(this.borderIcon1);\r\n    div1.children(this.borderIcon2);\r\n    div1.children(this.borderIcon3);\r\n    div1.children(this.borderIcon4);\r\n    div1.children(this.borderIcon5);\r\n    this.borderIcon6 = new BorderIcon6();\r\n    this.borderIcon7 = new BorderIcon7();\r\n    this.borderIcon8 = new BorderIcon8();\r\n    this.borderIcon9 = new BorderIcon9();\r\n    this.borderIcon10 = new BorderIcon10();\r\n    const div2 = h('div', `${cssPrefix}-border-type-context-menu-type-icon-line`);\r\n    div2.children(this.borderIcon6);\r\n    div2.children(this.borderIcon7);\r\n    div2.children(this.borderIcon8);\r\n    div2.children(this.borderIcon9);\r\n    div2.children(this.borderIcon10);\r\n    this.borderIcons = new BorderTypeContextMenuItem();\r\n    this.borderIcons.removeClass('hover');\r\n    this.borderIcons.children(div1);\r\n    this.borderIcons.children(div2);\r\n    // 子菜单\r\n    this.borderColor = new BorderColor();\r\n    this.borderType = new BorderType();\r\n    const div3 = h('div', `${cssPrefix}-border-type-context-menu-type-icon-line`);\r\n    div3.children(this.borderColor);\r\n    div3.children(this.borderType);\r\n    this.borderColorAndType = new BorderTypeContextMenuItem();\r\n    this.borderColorAndType.removeClass('hover');\r\n    this.borderColorAndType.children(div3);\r\n    // 追加子菜单\r\n    this.addItem(this.borderIcons);\r\n    this.addItem(new ELContextMenuDivider());\r\n    this.addItem(this.borderColorAndType);\r\n    // 边框颜色菜单\r\n    this.borderColorContextMenu = new BorderColorContextMenu(PlainUtils.copyProp({\r\n      el: this.borderColor,\r\n    }, {\r\n      onUpdate: (color) => {\r\n        this.color = color;\r\n        this.borderColor.setColor(color);\r\n      },\r\n    }));\r\n    // 边框类型\r\n    this.lineTypeContextMenu = new LineTypeContextMenu(PlainUtils.copyProp({\r\n      el: this.borderType,\r\n    }, {\r\n      onUpdate: (type) => {\r\n        this.type = type;\r\n      },\r\n    }));\r\n    // 添加事件\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.borderColor, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderType, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon4, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon5, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon6, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon7, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon8, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon9, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.borderIcon10, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.borderColor, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { borderColorContextMenu } = this;\r\n      const { elPopUp } = borderColorContextMenu;\r\n      ElPopUp.closeAll([elPopUp, this.elPopUp]);\r\n      if (borderColorContextMenu.isClose()) {\r\n        borderColorContextMenu.open();\r\n      } else {\r\n        borderColorContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderType, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { lineTypeContextMenu } = this;\r\n      const { elPopUp } = lineTypeContextMenu;\r\n      ElPopUp.closeAll([elPopUp, this.elPopUp]);\r\n      if (lineTypeContextMenu.isClose()) {\r\n        lineTypeContextMenu.open();\r\n      } else {\r\n        lineTypeContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border1', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border2', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border3', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon4, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border4', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon5, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border5', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon6, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border6', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon7, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border7', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon8, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border8', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon9, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border9', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.borderIcon10, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate('border10', this.color, this.type);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { BorderTypeContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { BorderTypeContextMenu } from './contextmenu/border/bordertype/BorderTypeContextMenu';\r\n\r\nclass Border extends DropDownItem {\r\n\r\n  constructor(options = {\r\n    contextMenu: {},\r\n  }) {\r\n    super(`${cssPrefix}-tools-border`);\r\n    this.options = options;\r\n    this.icon = new Icon('border');\r\n    this.setIcon(this.icon);\r\n    this.borderTypeContextMenu = new BorderTypeContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport { Border };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass Merge extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-merge`);\r\n    this.icon = new Icon('merge');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { Merge };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass HorizontalIcon1 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-horizontal1`);\r\n    this.icon = new Icon('align-left');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { HorizontalIcon1 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass HorizontalIcon2 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-horizontal2`);\r\n    this.icon = new Icon('align-center');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { HorizontalIcon2 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass HorizontalIcon3 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-horizontal3`);\r\n    this.icon = new Icon('align-right');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { HorizontalIcon3 };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\n\r\nclass HorizontalContextMenuItem extends ELContextMenuItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-horizontal-type-context-menu-item`);\r\n  }\r\n}\r\n\r\nexport { HorizontalContextMenuItem };\r\n","class BaseFont {\r\n\r\n  constructor({\r\n    draw, ruler, attr,\r\n  }) {\r\n    this.draw = draw;\r\n    this.ruler = ruler;\r\n    this.attr = attr;\r\n  }\r\n\r\n  setRuler(ruler) {\r\n    this.ruler = ruler;\r\n  }\r\n\r\n  getAlignPadding() {\r\n    if (this.attr.align === BaseFont.ALIGN.center) {\r\n      return 0;\r\n    }\r\n    return this.attr.padding;\r\n  }\r\n\r\n  isBlank(text) {\r\n    return text === null || text === undefined || text.toString().trim() === '';\r\n  }\r\n\r\n  hasBreak(text) {\r\n    return text.indexOf('\\n') > -1;\r\n  }\r\n\r\n  getVerticalAlignPadding() {\r\n    if (this.attr.verticalAlign === BaseFont.VERTICAL_ALIGN.center) {\r\n      return 0;\r\n    }\r\n    return this.attr.padding;\r\n  }\r\n\r\n}\r\nBaseFont.VERTICAL_ALIGN = {\r\n  top: 'top',\r\n  center: 'middle',\r\n  bottom: 'bottom',\r\n};\r\nBaseFont.ALIGN = {\r\n  left: 'left',\r\n  center: 'center',\r\n  right: 'right',\r\n};\r\nBaseFont.TEXT_WRAP = {\r\n  OVER_FLOW: 1,\r\n  WORD_WRAP: 2,\r\n  TRUNCATE: 3,\r\n};\r\nBaseFont.TEXT_DIRECTION = {\r\n  HORIZONTAL: 'horizontal',\r\n  VERTICAL: 'vertical',\r\n  ANGLE: 'angle',\r\n  ANGLE_BAR: 'bar',\r\n};\r\nexport {\r\n  BaseFont,\r\n};\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { h } from '../../../../../lib/Element';\r\nimport { HorizontalIcon1 } from '../icon/horizontal/HorizontalIcon1';\r\nimport { HorizontalIcon2 } from '../icon/horizontal/HorizontalIcon2';\r\nimport { HorizontalIcon3 } from '../icon/horizontal/HorizontalIcon3';\r\nimport { HorizontalContextMenuItem } from './HorizontalContextMenuItem';\r\nimport { XEvent } from '../../../../../lib/XEvent';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass HorizontalContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-horizontal-type-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.horizontalIcon1 = new HorizontalIcon1();\r\n    this.horizontalIcon2 = new HorizontalIcon2();\r\n    this.horizontalIcon3 = new HorizontalIcon3();\r\n    const div2 = h('div', `${cssPrefix}-horizontal-type-context-menu-type-icon-line`);\r\n    div2.children(this.horizontalIcon1);\r\n    div2.children(this.horizontalIcon2);\r\n    div2.children(this.horizontalIcon3);\r\n    this.horizontalIcons = new HorizontalContextMenuItem();\r\n    this.horizontalIcons.removeClass('hover');\r\n    this.horizontalIcons.children(div2);\r\n    this.addItem(this.horizontalIcons);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.horizontalIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.horizontalIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.horizontalIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.horizontalIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.ALIGN.left);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.horizontalIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.ALIGN.center);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.horizontalIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.ALIGN.right);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { HorizontalContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { HorizontalContextMenu } from './contextmenu/horizontal/HorizontalContextMenu';\r\n\r\nclass HorizontalAlign extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-horizontal-align`);\r\n    this.options = options;\r\n    this.icon = new Icon('align-left');\r\n    this.setIcon(this.icon);\r\n    this.horizontalContextMenu = new HorizontalContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.horizontalContextMenu.destroy();\r\n  }\r\n\r\n}\r\nexport { HorizontalAlign };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\n\r\nclass VerticalContextMenuItem extends ELContextMenuItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-vertical-type-context-menu-item`);\r\n  }\r\n}\r\n\r\nexport { VerticalContextMenuItem };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass VerticalIcon1 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-verticalIcon1`);\r\n    this.icon = new Icon('align-top');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { VerticalIcon1 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass VerticalIcon2 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-verticalIcon2`);\r\n    this.icon = new Icon('align-middle');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { VerticalIcon2 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass VerticalIcon3 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-verticalIcon3`);\r\n    this.icon = new Icon('align-bottom');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { VerticalIcon3 };\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { h } from '../../../../../lib/Element';\r\nimport { VerticalContextMenuItem } from './VerticalContextMenuItem';\r\nimport { VerticalIcon1 } from '../icon/vertical/VerticalIcon1';\r\nimport { VerticalIcon2 } from '../icon/vertical/VerticalIcon2';\r\nimport { VerticalIcon3 } from '../icon/vertical/VerticalIcon3';\r\nimport { XEvent } from '../../../../../lib/XEvent';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass VerticalContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-vertical-type-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.verticalIcon1 = new VerticalIcon1();\r\n    this.verticalIcon2 = new VerticalIcon2();\r\n    this.verticalIcon3 = new VerticalIcon3();\r\n    const div2 = h('div', `${cssPrefix}-vertical-type-context-menu-type-icon-line`);\r\n    div2.children(this.verticalIcon1);\r\n    div2.children(this.verticalIcon2);\r\n    div2.children(this.verticalIcon3);\r\n    this.verticalIcons = new VerticalContextMenuItem();\r\n    this.verticalIcons.removeClass('hover');\r\n    this.verticalIcons.children(div2);\r\n    this.addItem(this.verticalIcons);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.verticalIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.verticalIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.verticalIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.verticalIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.VERTICAL_ALIGN.top);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.verticalIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.VERTICAL_ALIGN.center);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.verticalIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.VERTICAL_ALIGN.bottom);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { VerticalContextMenu };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { VerticalContextMenu } from './contextmenu/vertical/VerticalContextMenu';\r\n\r\nclass VerticalAlign extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-vertical-align`);\r\n    this.options = options;\r\n    this.icon = new Icon('align-middle');\r\n    this.setIcon(this.icon);\r\n    this.verticalContextMenu = new VerticalContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.verticalContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { VerticalAlign };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass TextWrappingIcon1 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-text-wrapping1`);\r\n    this.icon = new Icon('truncate');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { TextWrappingIcon1 };\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass TextWrappingIcon2 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-text-wrapping2`);\r\n    this.icon = new Icon('overflow');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { TextWrappingIcon2 };\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass TextWrappingIcon3 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-text-wrapping3`);\r\n    this.icon = new Icon('wrap');\r\n    this.children(this.icon);\r\n  }\r\n}\r\n\r\nexport { TextWrappingIcon3 };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\n\r\nclass TextWrappingContextMenuItem extends ELContextMenuItem {\r\n  constructor() {\r\n    super(`${cssPrefix}-text-wrapping-context-menu-item`);\r\n  }\r\n}\r\n\r\nexport { TextWrappingContextMenuItem };\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { cssPrefix, Constant } from '../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { TextWrappingIcon1 } from '../icon/textwrapping/TextWrappingIcon1';\r\nimport { TextWrappingIcon2 } from '../icon/textwrapping/TextWrappingIcon2';\r\nimport { TextWrappingIcon3 } from '../icon/textwrapping/TextWrappingIcon3';\r\nimport { h } from '../../../../../lib/Element';\r\nimport { TextWrappingContextMenuItem } from './TextWrappingContextMenuItem';\r\nimport { XEvent } from '../../../../../lib/XEvent';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass TextWrappingContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-text-wrapping-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.textWrappingIcon1 = new TextWrappingIcon1();\r\n    this.textWrappingIcon2 = new TextWrappingIcon2();\r\n    this.textWrappingIcon3 = new TextWrappingIcon3();\r\n    const div2 = h('div', `${cssPrefix}-text-wrapping-context-menu-type-icon-line`);\r\n    div2.children(this.textWrappingIcon1);\r\n    div2.children(this.textWrappingIcon2);\r\n    div2.children(this.textWrappingIcon3);\r\n    this.textWrappingIcons = new TextWrappingContextMenuItem();\r\n    this.textWrappingIcons.removeClass('hover');\r\n    this.textWrappingIcons.children(div2);\r\n    this.addItem(this.textWrappingIcons);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.textWrappingIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.textWrappingIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.textWrappingIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.textWrappingIcon1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.TEXT_WRAP.TRUNCATE);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.textWrappingIcon2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.TEXT_WRAP.OVER_FLOW);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.textWrappingIcon3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.options.onUpdate(BaseFont.TEXT_WRAP.WORD_WRAP);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { TextWrappingContextMenu };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { DropDownItem } from './base/DropDownItem';\r\nimport { TextWrappingContextMenu } from './contextmenu/textwrapping/TextWrappingContextMenu';\r\n\r\nclass TextWrapping extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-text-wrapping`);\r\n    this.options = options;\r\n    this.icon = new Icon('text-wrap');\r\n    this.setIcon(this.icon);\r\n    this.textWrappingContextMenu = new TextWrappingContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.textWrappingContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { TextWrapping };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../lib/Element';\r\n\r\nconst pool = [];\r\n\r\nclass FixedContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(title) {\r\n    super(`${cssPrefix}-fixed-context-menu-item`);\r\n    this.title = title;\r\n    this.titleElement = h('div', `${cssPrefix}-fixed-context-menu-item-title`);\r\n    this.titleElement.text(title);\r\n    this.children(this.titleElement);\r\n    pool.push(this);\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title;\r\n    this.titleElement.text(title);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FixedContextMenuItem,\r\n};\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { Constant, cssPrefix } from '../../../../../const/Constant';\r\nimport { ELContextMenuDivider } from '../../../../../component/contextmenu/ELContextMenuDivider';\r\nimport { FixedContextMenuItem } from './FixedContextMenuItem';\r\nimport { XEvent } from '../../../../../lib/XEvent';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass FixedContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-fixed-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {\r\n      },\r\n    }, options));\r\n    this.row = new FixedContextMenuItem('冻结至当前行');\r\n    this.row1 = new FixedContextMenuItem('冻结1行');\r\n    this.row2 = new FixedContextMenuItem('冻结2行');\r\n    this.col = new FixedContextMenuItem('冻结至当前列');\r\n    this.col1 = new FixedContextMenuItem('冻结1列');\r\n    this.col2 = new FixedContextMenuItem('冻结2列');\r\n    this.addItem(this.row);\r\n    this.addItem(this.row1);\r\n    this.addItem(this.row2);\r\n    this.addItem(new ELContextMenuDivider());\r\n    this.addItem(this.col);\r\n    this.addItem(this.col1);\r\n    this.addItem(this.col2);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.row, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.row1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.row2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.col, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.col1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    XEvent.unbind(this.col2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.row, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { options } = this;\r\n      options.onUpdate('ROW');\r\n      this.close();\r\n    });\r\n    XEvent.bind(this.row1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { options } = this;\r\n      options.onUpdate('ROW1');\r\n      this.close();\r\n    });\r\n    XEvent.bind(this.row2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { options } = this;\r\n      options.onUpdate('ROW2');\r\n      this.close();\r\n    });\r\n    XEvent.bind(this.col, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { options } = this;\r\n      options.onUpdate('COL');\r\n      this.close();\r\n    });\r\n    XEvent.bind(this.col1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { options } = this;\r\n      options.onUpdate('COL1');\r\n      this.close();\r\n    });\r\n    XEvent.bind(this.col2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { options } = this;\r\n      options.onUpdate('COL2');\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FixedContextMenu,\r\n};\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { DropDownItem } from './base/DropDownItem';\r\nimport { FixedContextMenu } from './contextmenu/fixed/FixedContextMenu';\r\n\r\nclass Fixed extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-fixed`);\r\n    this.options = options;\r\n    this.icon = new Icon('freeze');\r\n    this.rowStatus = false;\r\n    this.colStatus = false;\r\n    this.setIcon(this.icon);\r\n    this.fixedContextMenu = new FixedContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  setFixedColStatus(status) {\r\n    const { fixedContextMenu } = this;\r\n    if (status) {\r\n      this.colStatus = true;\r\n      fixedContextMenu.col.setTitle('取消冻结列');\r\n    } else {\r\n      this.colStatus = false;\r\n      fixedContextMenu.col.setTitle('冻结至当前列');\r\n    }\r\n  }\r\n\r\n  setFixedRowStatus(status) {\r\n    const { fixedContextMenu } = this;\r\n    if (status) {\r\n      this.rowStatus = true;\r\n      fixedContextMenu.row.setTitle('取消冻结行');\r\n    } else {\r\n      this.rowStatus = false;\r\n      fixedContextMenu.row.setTitle('冻结至当前行');\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.fixedContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport { Fixed };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { Item } from './base/Item';\r\n\r\nclass Filter extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-filter`);\r\n    this.icon = new Icon('filter');\r\n    this.children(this.icon);\r\n  }\r\n\r\n}\r\n\r\nexport { Filter };\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\n\r\nclass Functions extends DropDownItem {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-format`);\r\n    this.icon = new Icon('functions');\r\n    this.setIcon(this.icon);\r\n  }\r\n\r\n}\r\nexport { Functions };\r\n","import { BaseFont } from '../../../canvas/font/BaseFont';\r\n\r\n/**\r\n *  CellFont\r\n *  @author jerry\r\n */\r\nclass CellFont {\r\n\r\n  /**\r\n   * CellFont\r\n   * @param align\r\n   * @param verticalAlign\r\n   * @param textWrap\r\n   * @param strikethrough\r\n   * @param underline\r\n   * @param color\r\n   * @param name\r\n   * @param size\r\n   * @param bold\r\n   * @param italic\r\n   * @param angle\r\n   * @param direction\r\n   * @param padding\r\n   */\r\n  constructor({\r\n    align = BaseFont.ALIGN.left,\r\n    verticalAlign = BaseFont.VERTICAL_ALIGN.center,\r\n    textWrap = BaseFont.TEXT_WRAP.TRUNCATE,\r\n    strikethrough = false,\r\n    underline = false,\r\n    color = 'rgb(0,0,0)',\r\n    name = 'Arial',\r\n    size = 14,\r\n    bold = false,\r\n    italic = false,\r\n    angle = 0,\r\n    direction = BaseFont.TEXT_DIRECTION.HORIZONTAL,\r\n    padding = 5,\r\n  }) {\r\n    this.align = align;\r\n    this.verticalAlign = verticalAlign;\r\n    this.textWrap = textWrap;\r\n    this.strikethrough = strikethrough;\r\n    this.underline = underline;\r\n    this.color = color;\r\n    this.name = name;\r\n    this.size = size;\r\n    this.bold = bold;\r\n    this.italic = italic;\r\n    this.direction = direction;\r\n    this.angle = angle;\r\n    this.padding = padding;\r\n  }\r\n\r\n  clone() {\r\n    const {\r\n      align,\r\n      verticalAlign,\r\n      textWrap,\r\n      strikethrough,\r\n      underline,\r\n      color,\r\n      name,\r\n      size,\r\n      bold,\r\n      italic,\r\n      angle,\r\n      direction,\r\n      padding,\r\n    } = this;\r\n    return new CellFont({\r\n      align,\r\n      verticalAlign,\r\n      textWrap,\r\n      strikethrough,\r\n      underline,\r\n      color,\r\n      name,\r\n      size,\r\n      bold,\r\n      italic,\r\n      angle,\r\n      direction,\r\n      padding,\r\n    });\r\n  }\r\n\r\n}\r\nCellFont.scaleAdapter = null;\r\n\r\nexport { CellFont };\r\n","import { LINE_TYPE } from '../../../canvas/Line';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XDraw } from '../../../canvas/XDraw';\r\n\r\nlet zIndexID = 0;\r\n\r\n/**\r\n * Border\r\n * @author jerry\r\n */\r\nclass Border {\r\n\r\n  static getZIndex() {\r\n    zIndexID += 1;\r\n    return zIndexID;\r\n  }\r\n\r\n  /**\r\n   * Border\r\n   * @param widthType\r\n   * @param width\r\n   * @param color\r\n   * @param zIndex\r\n   * @param display\r\n   * @param type\r\n   */\r\n  constructor({\r\n    widthType = XDraw.LINE_WIDTH_TYPE.low,\r\n    width = -1,\r\n    color = '#000000',\r\n    zIndex = 0,\r\n    display = false,\r\n    type = LINE_TYPE.SOLID_LINE,\r\n  }) {\r\n    this.$zIndex = zIndex;\r\n    this.$display = display;\r\n    this.$color = color;\r\n    this.$type = type;\r\n    if (width === 1) {\r\n      this.$widthType = XDraw.LINE_WIDTH_TYPE.low;\r\n    } else if (width === 2) {\r\n      this.$widthType = XDraw.LINE_WIDTH_TYPE.medium;\r\n    } else if (width === 3) {\r\n      this.$widthType = XDraw.LINE_WIDTH_TYPE.high;\r\n    } else {\r\n      this.$widthType = widthType;\r\n    }\r\n    if (zIndex > zIndexID) {\r\n      zIndexID = zIndex;\r\n    }\r\n  }\r\n\r\n  get display() {\r\n    return this.$display;\r\n  }\r\n\r\n  set display(value) {\r\n    this.$zIndex = Border.getZIndex();\r\n    this.$display = value;\r\n  }\r\n\r\n  get widthType() {\r\n    return this.$widthType;\r\n  }\r\n\r\n  set widthType(value) {\r\n    this.$zIndex = Border.getZIndex();\r\n    this.$widthType = value;\r\n  }\r\n\r\n  get color() {\r\n    return this.$color;\r\n  }\r\n\r\n  set color(value) {\r\n    this.$zIndex = Border.getZIndex();\r\n    this.$color = value;\r\n  }\r\n\r\n  get type() {\r\n    return this.$type;\r\n  }\r\n\r\n  set type(value) {\r\n    this.$zIndex = Border.getZIndex();\r\n    this.$type = value;\r\n  }\r\n\r\n  get zIndex() {\r\n    return this.$zIndex;\r\n  }\r\n\r\n  set zIndex(value) {\r\n    this.$zIndex = value;\r\n  }\r\n\r\n  equal(target) {\r\n    const widthType = this.widthType === target.widthType;\r\n    const color = this.color === target.color;\r\n    const type = this.type === target.type;\r\n    return color && widthType && type;\r\n  }\r\n\r\n  toJSON() {\r\n    const zIndex = this.$zIndex;\r\n    const display = this.$display;\r\n    const widthType = this.$widthType;\r\n    const color = this.$color;\r\n    const type = this.$type;\r\n    return { zIndex, display, widthType, color, type };\r\n  }\r\n\r\n  priority(border) {\r\n    if (PlainUtils.isUnDef(border)) {\r\n      return -2;\r\n    }\r\n    const origin = this.zIndex;\r\n    const target = border.zIndex;\r\n    if (origin > target) {\r\n      return 1;\r\n    }\r\n    if (target > origin) {\r\n      return -1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n}\r\n\r\nexport { Border };\r\n","import { Border } from './Border';\r\nimport { LINE_TYPE } from '../../../canvas/Line';\r\n\r\n/**\r\n * CellBorder\r\n * @author jerry\r\n */\r\nclass CellBorder {\r\n\r\n  /**\r\n   * CellBorder\r\n   * @param time\r\n   * @param left\r\n   * @param top\r\n   * @param right\r\n   * @param bottom\r\n   */\r\n  constructor({\r\n    left = {},\r\n    bottom = {},\r\n    top = {},\r\n    right = {},\r\n  }) {\r\n    this.left = new Border(left);\r\n    this.bottom = new Border(bottom);\r\n    this.top = new Border(top);\r\n    this.right = new Border(right);\r\n  }\r\n\r\n  hasDouble() {\r\n    const { top, left, right, bottom } = this;\r\n    if (top.type === LINE_TYPE.DOUBLE_LINE) {\r\n      return true;\r\n    }\r\n    if (left.type === LINE_TYPE.DOUBLE_LINE) {\r\n      return true;\r\n    }\r\n    if (right.type === LINE_TYPE.DOUBLE_LINE) {\r\n      return true;\r\n    }\r\n    return bottom.type === LINE_TYPE.DOUBLE_LINE;\r\n  }\r\n\r\n  isDisplay() {\r\n    return this.left.display || this.top.display\r\n      || this.bottom.display || this.right.display;\r\n  }\r\n\r\n  setAllDisplay(display) {\r\n    this.setBDisplay(display);\r\n    this.setLDisplay(display);\r\n    this.setTDisplay(display);\r\n    this.setRDisplay(display);\r\n  }\r\n\r\n  setLDisplay(display) {\r\n    this.left.display = display;\r\n  }\r\n\r\n  setTDisplay(display) {\r\n    this.top.display = display;\r\n  }\r\n\r\n  setRDisplay(display) {\r\n    this.right.display = display;\r\n  }\r\n\r\n  setBDisplay(display) {\r\n    this.bottom.display = display;\r\n  }\r\n\r\n  setAllColor(color) {\r\n    this.setBColor(color);\r\n    this.setLColor(color);\r\n    this.setTColor(color);\r\n    this.setRColor(color);\r\n  }\r\n\r\n  setLColor(color) {\r\n    this.left.color = color;\r\n  }\r\n\r\n  setTColor(color) {\r\n    this.top.color = color;\r\n  }\r\n\r\n  setRColor(color) {\r\n    this.right.color = color;\r\n  }\r\n\r\n  setBColor(color) {\r\n    this.bottom.color = color;\r\n  }\r\n\r\n  setAllWidthType(widthType) {\r\n    this.setBWidthType(widthType);\r\n    this.setLWidthType(widthType);\r\n    this.setTWidthType(widthType);\r\n    this.setRWidthType(widthType);\r\n  }\r\n\r\n  setLWidthType(widthType) {\r\n    this.left.widthType = widthType;\r\n  }\r\n\r\n  setTWidthType(widthType) {\r\n    this.top.widthType = widthType;\r\n  }\r\n\r\n  setRWidthType(widthType) {\r\n    this.right.widthType = widthType;\r\n  }\r\n\r\n  setBWidthType(widthType) {\r\n    this.bottom.widthType = widthType;\r\n  }\r\n\r\n  setAllType(type) {\r\n    this.setBType(type);\r\n    this.setLType(type);\r\n    this.setTType(type);\r\n    this.setRType(type);\r\n  }\r\n\r\n  setLType(type) {\r\n    this.left.type = type;\r\n  }\r\n\r\n  setTType(type) {\r\n    this.top.type = type;\r\n  }\r\n\r\n  setRType(type) {\r\n    this.right.type = type;\r\n  }\r\n\r\n  setBType(type) {\r\n    this.bottom.type = type;\r\n  }\r\n\r\n  updateMaxIndex() {\r\n    const zIndex = Border.getZIndex();\r\n    this.bottom.zIndex = zIndex;\r\n    this.left.zIndex = zIndex;\r\n    this.top.zIndex = zIndex;\r\n    this.right.zIndex = zIndex;\r\n  }\r\n\r\n  clone() {\r\n    const {\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    } = this;\r\n    return new CellBorder({\r\n      left,\r\n      top,\r\n      right,\r\n      bottom,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport { CellBorder };\r\n","class Rect {\r\n\r\n  /**\r\n   * Rect\r\n   * @param x\r\n   * @param y\r\n   * @param width\r\n   * @param height\r\n   */\r\n  constructor({\r\n    x, y, width, height,\r\n  }) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  /**\r\n   * 计算当前矩形在指定矩形内部的位置\r\n   * @param rect\r\n   * @returns {Rect}\r\n   */\r\n  inRectPosition(rect) {\r\n    return new Rect({\r\n      x: this.x - rect.x,\r\n      y: this.y - rect.y,\r\n      width: this.width,\r\n      height: this.height,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 判断两个矩形是否不发生重合\r\n   * @param {Rect} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  disjoint(other) {\r\n    return this.x > other.x + other.width\r\n      || this.y > this.y + other.height\r\n      || other.x > this.x + this.width\r\n      || other.y > this.y + this.height;\r\n  }\r\n\r\n  /**\r\n   * 扩展尺寸\r\n   * @param size\r\n   * @returns {Rect}\r\n   */\r\n  expandSize(size) {\r\n    this.width += size;\r\n    this.height += size;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 是否包含点\r\n   * @param x\r\n   * @param y\r\n   * @returns {boolean}\r\n   */\r\n  includePoint(x, y) {\r\n    return x >= this.x && x <= this.x + this.width\r\n      && y >= this.y && y <= this.y + this.height;\r\n  }\r\n\r\n  /**\r\n   * 是否包含矩形\r\n   * @param rect\r\n   * @returns {boolean|boolean}\r\n   */\r\n  includeRect(rect) {\r\n    const { x, y, width, height } = rect;\r\n    return this.x <= x && this.x + this.width >= x + width\r\n      && this.y <= y && this.y + this.height >= y + height;\r\n  }\r\n\r\n  /**\r\n   * 复制\r\n   * @returns {Rect}\r\n   */\r\n  clone() {\r\n    const { x, y, width, height } = this;\r\n    return new Rect({ x, y, width, height });\r\n  }\r\n\r\n}\r\n\r\nexport { Rect };\r\n","\r\n/**\r\n * XIconOffset\r\n */\r\nclass XIconOffset {\r\n\r\n  /**\r\n   * XIconOffset\r\n   * @param x\r\n   * @param y\r\n   */\r\n  constructor({ x = 0, y = 0 } = {}) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XIconOffset,\r\n};\r\n","class Crop {\r\n\r\n  constructor({\r\n    rect, draw, offset = 0,\r\n  }) {\r\n    this.rect = rect;\r\n    this.draw = draw;\r\n    this.offset = offset;\r\n  }\r\n\r\n  open() {\r\n    const {\r\n      rect, draw, offset,\r\n    } = this;\r\n    const {\r\n      x, y, width, height,\r\n    } = rect;\r\n    draw.save()\r\n      .rect(x, y, width + offset, height + offset)\r\n      .clip()\r\n      .beginPath();\r\n    return this;\r\n  }\r\n\r\n  close() {\r\n    const { draw } = this;\r\n    draw.restore();\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport { Crop };\r\n","/* global Image console */\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XDraw } from '../../../canvas/XDraw';\r\nimport { Rect } from '../../../canvas/Rect';\r\nimport { XIconOffset } from './XIconOffset';\r\nimport { Crop } from '../../../canvas/Crop';\r\n\r\n/**\r\n * XIcon\r\n * @author jerry\r\n * @date 2020/10/20\r\n */\r\nclass XIcon {\r\n\r\n  /**\r\n   * 多图标初始化\r\n   * @param icons\r\n   * @returns {[]}\r\n   */\r\n  static newInstances(icons = []) {\r\n    const instances = [];\r\n    for (let i = 0; i < icons.length; i += 1) {\r\n      const icon = icons[i];\r\n      instances.push(new XIcon(icon));\r\n    }\r\n    return instances;\r\n  }\r\n\r\n  /**\r\n   * XIcon\r\n   * @param vertical\r\n   * @param horizontal\r\n   * @param type\r\n   * @param image\r\n   * @param focus\r\n   * @param height\r\n   * @param width\r\n   * @param color\r\n   * @param offset\r\n   * @param onDraw\r\n   * @param onLeave\r\n   * @param onMove\r\n   * @param onDown\r\n   * @param onEnter\r\n   */\r\n  constructor({\r\n    vertical = XIcon.ICON_VERTICAL.CENTER,\r\n    horizontal = XIcon.ICON_HORIZONTAL.RIGHT,\r\n    type = XIcon.ICON_TYPE.image,\r\n    image = PlainUtils.Nul,\r\n    focus = null,\r\n    height = 16,\r\n    width = 16,\r\n    color = '#ffffff',\r\n    offset = { x: 0, y: 0 },\r\n    onDraw = () => {},\r\n    onLeave = () => {},\r\n    onMove = () => {},\r\n    onDown = () => {},\r\n    onEnter = () => {},\r\n  }) {\r\n    this.vertical = vertical;\r\n    this.horizontal = horizontal;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.type = type;\r\n    this.image = image;\r\n    this.color = color;\r\n    this.focus = focus;\r\n    this.offset = new XIconOffset(offset);\r\n    this.onLeave = onLeave;\r\n    this.onMove = onMove;\r\n    this.onDraw = onDraw;\r\n    this.onDown = onDown;\r\n    this.onEnter = onEnter;\r\n    this.rect = null;\r\n  }\r\n\r\n  /**\r\n   * 计算绘制坐标\r\n   * @param rect\r\n   * @returns {{x: number, y: number}}\r\n   */\r\n  position(rect) {\r\n    // 图标信息\r\n    const iconHorizontal = this.horizontal;\r\n    const iconVertical = this.vertical;\r\n    const iconOffsetX = XDraw.srcTransformStylePx(this.offset.x);\r\n    const iconOffsetY = XDraw.srcTransformStylePx(this.offset.y);\r\n    const iconWidth = XDraw.srcTransformStylePx(this.width);\r\n    const iconHeight = XDraw.srcTransformStylePx(this.height);\r\n    // 矩形位置\r\n    const rectX = rect.x;\r\n    const rectY = rect.y;\r\n    const rectWidth = rect.width;\r\n    const rectHeight = rect.height;\r\n    // 计算位置\r\n    let px = 0;\r\n    let py = 0;\r\n    switch (iconHorizontal) {\r\n      case XIcon.ICON_HORIZONTAL.CENTER:\r\n        px = (rectX + rectWidth / 2) - (iconWidth / 2);\r\n        break;\r\n      case XIcon.ICON_HORIZONTAL.LEFT:\r\n        px = rectX;\r\n        break;\r\n      case XIcon.ICON_HORIZONTAL.RIGHT:\r\n        px = rectX + rectWidth - iconWidth;\r\n        break;\r\n    }\r\n    switch (iconVertical) {\r\n      case XIcon.ICON_VERTICAL.CENTER:\r\n        py = (rectY + rectHeight / 2) - (iconHeight / 2);\r\n        break;\r\n      case XIcon.ICON_VERTICAL.TOP:\r\n        py = rectY;\r\n        break;\r\n      case XIcon.ICON_VERTICAL.BOTTOM:\r\n        py = rectY + rectHeight - iconHeight;\r\n        break;\r\n    }\r\n    px += iconOffsetX;\r\n    py += iconOffsetY;\r\n    return new Rect({\r\n      x: px, y: py, width: iconWidth, height: iconHeight,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 加载图片信息\r\n   * @param async\r\n   * @param sync\r\n   */\r\n  loadImage({\r\n    load, sync,\r\n  }) {\r\n    const { image, type } = this;\r\n    switch (type) {\r\n      case XIcon.ICON_TYPE.image:\r\n        if (image instanceof Image) {\r\n          sync(image);\r\n        } else {\r\n          const loadImg = new Image();\r\n          loadImg.src = image;\r\n          if (loadImg.complete) {\r\n            this.image = loadImg;\r\n            sync(this.image);\r\n          } else {\r\n            loadImg.onload = () => {\r\n              this.image = loadImg;\r\n              load(loadImg);\r\n            };\r\n            loadImg.onerror = () => {\r\n              // eslint-disable-next-line no-console\r\n              console.error(`图片加载失败${image}`);\r\n            };\r\n          }\r\n        }\r\n        break;\r\n      case XIcon.ICON_TYPE.draw:\r\n        sync();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绘制小图标\r\n   * @param rect\r\n   * @param draw\r\n   */\r\n  drawIcon({\r\n    rect, draw,\r\n  }) {\r\n    const { type } = this;\r\n    this.rect = rect;\r\n    switch (type) {\r\n      case XIcon.ICON_TYPE.image:\r\n        this.drawImage({\r\n          rect, draw,\r\n        });\r\n        break;\r\n      case XIcon.ICON_TYPE.draw:\r\n        this.drawCustom({\r\n          rect, draw,\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 自定义绘制\r\n   * @param rect\r\n   * @param icon\r\n   * @param draw\r\n   */\r\n  drawCustom({\r\n    rect, draw,\r\n  }) {\r\n    this.onDraw({\r\n      rect, draw,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 绘制图片\r\n   * @param rect\r\n   * @param icon\r\n   * @param draw\r\n   */\r\n  drawImage({\r\n    rect, draw,\r\n  }) {\r\n    const image = this.image;\r\n    const color = this.color;\r\n    const positionRect = this.position(rect);\r\n    const {\r\n      x, y, width, height,\r\n    } = positionRect;\r\n    const include = rect.includeRect(positionRect);\r\n    const crop = new Crop({\r\n      rect, draw,\r\n    });\r\n    if (include === false) {\r\n      crop.open();\r\n    }\r\n    if (color) {\r\n      draw.attr({ fillStyle: color });\r\n      draw.fillRect(x, y, width, height);\r\n    }\r\n    draw.drawImage(image, 0, 0, image.width, image.height, x, y, width, height);\r\n    if (include === false) {\r\n      crop.close();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 事件处理\r\n   * @param type\r\n   * @param x\r\n   * @param y\r\n   * @param native\r\n   */\r\n  eventHandle({\r\n    type, x, y, native,\r\n  }) {\r\n    const { rect, focus } = this;\r\n    if (rect) {\r\n      const position = this.position(rect);\r\n      const location = position.inRectPosition(rect);\r\n      const { activate } = focus;\r\n      switch (type) {\r\n        case XIcon.ICON_EVENT_TYPE.MOUSE_DOWN:\r\n          if (location.includePoint(x, y)) {\r\n            focus.setActivate(this);\r\n            this.onDown({\r\n              native, position,\r\n            });\r\n          }\r\n          break;\r\n        case XIcon.ICON_EVENT_TYPE.MOUSE_MOVE:\r\n          if (location.includePoint(x, y)) {\r\n            if (activate !== this) {\r\n              this.onEnter({\r\n                native, position,\r\n              });\r\n            }\r\n            focus.setActivate(this);\r\n            this.onMove({\r\n              native, position,\r\n            });\r\n          } else if (activate) {\r\n            focus.setActivate(null);\r\n            this.onLeave({\r\n              native, position,\r\n            });\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绘制回调\r\n   * @param callback\r\n   */\r\n  setOnDraw(callback) {\r\n    this.onDraw = callback;\r\n  }\r\n\r\n  /**\r\n   * 按下回调\r\n   * @param callback\r\n   */\r\n  setOnDown(callback) {\r\n    this.onDown = callback;\r\n  }\r\n\r\n  /**\r\n   * 移动回调\r\n   * @param callback\r\n   */\r\n  setOnMove(callback) {\r\n    this.onMove = callback;\r\n  }\r\n\r\n  /**\r\n   * 进入回调\r\n   * @param callback\r\n   */\r\n  setOnEnter(callback) {\r\n    this.onEnter = callback;\r\n  }\r\n\r\n  /**\r\n   * 离开回调\r\n   * @param callback\r\n   */\r\n  setOnLeave(callback) {\r\n    this.onLeave = callback;\r\n  }\r\n\r\n  /**\r\n   * 设置焦点元素\r\n   * @param focus\r\n   */\r\n  setFocus(focus) {\r\n    this.focus = focus;\r\n  }\r\n\r\n}\r\nXIcon.ICON_HORIZONTAL = {\r\n  LEFT: 0,\r\n  RIGHT: 1,\r\n  CENTER: 2,\r\n};\r\nXIcon.ICON_VERTICAL = {\r\n  TOP: 3,\r\n  BOTTOM: 4,\r\n  CENTER: 5,\r\n};\r\nXIcon.ICON_TYPE = {\r\n  image: 1,\r\n  custom: 2,\r\n};\r\nXIcon.ICON_EVENT_TYPE = {\r\n  MOUSE_DOWN: 1,\r\n  MOUSE_MOVE: 2,\r\n};\r\n\r\nexport { XIcon };\r\n","import { PlainUtils } from '../../../utils/PlainUtils';\nimport { CellFont } from './CellFont';\nimport { CellBorder } from './CellBorder';\nimport { XIcon } from '../xicon/XIcon';\n\n/**\n * Cell\n * @author jerry\n */\nclass Cell {\n\n  /**\n   * Cell\n   * @param text\n   * @param background\n   * @param format\n   * @param fontAttr\n   * @param icons\n   * @param borderAttr\n   * @param contentWidth\n   * @param leftSdistWidth\n   * @param rightSdistWidth\n   */\n  constructor({\n    text = PlainUtils.EMPTY,\n    background = PlainUtils.Nul,\n    format = 'default',\n    borderAttr = {},\n    icons = [],\n    fontAttr = {},\n    contentWidth = 0,\n    leftSdistWidth = 0,\n    rightSdistWidth = 0,\n  }) {\n    this.text = text;\n    this.ruler = null;\n    this.background = background;\n    this.format = format;\n    this.icons = XIcon.newInstances(icons);\n    this.borderAttr = new CellBorder(borderAttr);\n    this.fontAttr = new CellFont(fontAttr);\n    this.contentWidth = contentWidth;\n    this.leftSdistWidth = leftSdistWidth;\n    this.rightSdistWidth = rightSdistWidth;\n  }\n\n  setContentWidth(contentWidth) {\n    this.contentWidth = contentWidth;\n  }\n\n  setFontAttr(fontAttr) {\n    this.fontAttr = fontAttr;\n  }\n\n  setBorderAttr(borderAttr) {\n    this.borderAttr = borderAttr;\n  }\n\n  setIcons(icons) {\n    this.icons = icons;\n  }\n\n  setText(text) {\n    this.text = text;\n    this.setContentWidth(0);\n    this.setLeftSdistWidth(0);\n    this.setRightSdistWidth(0);\n  }\n\n  setRuler(ruler) {\n    this.ruler = ruler;\n  }\n\n  setLeftSdistWidth(leftSdistWidth) {\n    this.leftSdistWidth = leftSdistWidth;\n  }\n\n  setRightSdistWidth(rightSdistWidth) {\n    this.rightSdistWidth = rightSdistWidth;\n  }\n\n  clone() {\n    const { background, format, text, fontAttr, borderAttr, contentWidth, icons } = this;\n    return new Cell({\n      background, format, text, fontAttr, borderAttr, contentWidth, icons,\n    });\n  }\n\n  toJSON() {\n    const { background, format, text, fontAttr, borderAttr, contentWidth, icons } = this;\n    return {\n      background, format, text, fontAttr, borderAttr, contentWidth, icons,\n    };\n  }\n\n}\n\nexport { Cell };\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../lib/Element';\r\n\r\nclass ScaleContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(scale) {\r\n    super(`${cssPrefix}-scale-context-menu-item`);\r\n    this.scale = scale;\r\n    this.titleElement = h('div', `${cssPrefix}-scale-context-menu-item-title`);\r\n    this.titleElement.text(`${scale}%`);\r\n    this.children(this.titleElement);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  ScaleContextMenuItem,\r\n};\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { Constant, cssPrefix } from '../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { ScaleContextMenuItem } from './ScaleContextMenuItem';\r\nimport { XEvent } from '../../../../../lib/XEvent';\r\n\r\nclass ScaleContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-scale-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new ScaleContextMenuItem(200),\r\n      new ScaleContextMenuItem(150),\r\n      new ScaleContextMenuItem(125),\r\n      new ScaleContextMenuItem(100),\r\n      new ScaleContextMenuItem(90),\r\n      new ScaleContextMenuItem(75),\r\n      new ScaleContextMenuItem(50),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      this.addItem(item);\r\n    });\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.unbind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN);\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n        this.update(item.scale);\r\n      });\r\n    });\r\n  }\r\n\r\n  update(scale) {\r\n    const { options } = this;\r\n    options.onUpdate(scale);\r\n    this.close();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  ScaleContextMenu,\r\n};\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { ScaleContextMenu } from './contextmenu/scale/ScaleContextMenu';\r\n\r\nclass Scale extends DropDownItem {\r\n\r\n  constructor(options = { contextMenu: {} }) {\r\n    super(`${cssPrefix}-tools-scale`);\r\n    this.options = options;\r\n    this.setTitle('100%');\r\n    this.setWidth(50);\r\n    this.setEllipsis();\r\n    this.scaleContextMenu = new ScaleContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.scaleContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Scale,\r\n};\r\n","import { PlainUtils } from '../../../utils/PlainUtils';\n\nclass RectRange {\n\n  /**\n   * RectRange\n   * @param {int} sri 起始行\n   * @param {int} sci 起始列\n   * @param {int} eri 结束行\n   * @param {int} eci 结束列\n   * @param {int} w 宽度\n   * @param {int} h 高度\n   */\n  constructor(sri, sci, eri, eci, w = 0, h = 0) {\n    this.sri = sri;\n    this.sci = sci;\n    this.eri = eri;\n    this.eci = eci;\n    this.w = w;\n    this.h = h;\n  }\n\n  /**\n   * 循环过滤指定的行列\n   * @param {XIteratorBuilder} iteratorBuilder 迭代器\n   * @param {Function} cb 回调函数\n   * @param {Function} rowFilter 过滤使用的回调函数\n   */\n  each(iteratorBuilder, cb, rowFilter = () => true) {\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    let ret = false;\n    iteratorBuilder.getRowIterator()\n      .setBegin(sri)\n      .setEnd(eri)\n      .setLoop((i) => {\n        if (rowFilter(i)) {\n          iteratorBuilder.getColIterator()\n            .setBegin(sci)\n            .setEnd(eci)\n            .setLoop((j) => {\n              ret = cb(i, j);\n              return ret;\n            })\n            .execute();\n        }\n        return ret;\n      })\n      .execute();\n  }\n\n  /**\n   * 设置区域\n   * @param {int} sri 起始行\n   * @param {int} sci 起始列\n   * @param {int} eri 结束行\n   * @param {int} eci 结束列\n   */\n  set(sri, sci, eri, eci) {\n    this.sri = sri;\n    this.sci = sci;\n    this.eri = eri;\n    this.eci = eci;\n  }\n\n  /**\n   * 判断是否跨多个单元格\n   * @returns {boolean}\n   */\n  multiple() {\n    return this.eri - this.sri > 0 || this.eci - this.sci > 0;\n  }\n\n  /**\n   * 判断当前的区域是否包含指定的行和列\n   * 参数支持 ri, ci 和 A10 两种形式\n   * @param {[int, int] | String} args 行索引,列索引 或者 字符串\n   * @returns {boolean}\n   */\n  includes(...args) {\n    let [ri, ci] = [0, 0];\n    if (args.length === 1) {\n      [ci, ri] = PlainUtils.expr2xy(args[0]);\n    } else if (args.length === 2) {\n      [ri, ci] = args;\n    }\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    return sri <= ri && ri <= eri && sci <= ci && ci <= eci;\n  }\n\n  /**\n   * 判断当前的区域是否包含指定的区域\n   * @param {RectRange} other 区域\n   * @returns {boolean}\n   */\n  contains(other) {\n    return this.sri <= other.sri\n      && this.sci <= other.sci\n      && this.eri >= other.eri\n      && this.eci >= other.eci;\n  }\n\n  /**\n   * 判断当前的区域是否被指定的区域包含\n   * @param {RectRange} other 区域\n   * @returns {boolean}\n   */\n  within(other) {\n    return this.sri >= other.sri\n      && this.sci >= other.sci\n      && this.eri <= other.eri\n      && this.eci <= other.eci;\n  }\n\n  /**\n   * 判断当前的区域和指定的区域不发生重合\n   * @param {RectRange} other 区域\n   * @returns {boolean}\n   */\n  disjoint(other) {\n    return this.sri > other.eri\n      || this.sci > other.eci\n      || other.sri > this.eri\n      || other.sci > this.eci;\n  }\n\n  /**\n   * 判断当前的区域和指定的区域发生重合\n   * @param {RectRange} other 区域\n   * @returns {boolean}\n   */\n  intersects(other) {\n    return this.sri <= other.eri\n      && this.sci <= other.eci\n      && other.sri <= this.eri\n      && other.sci <= this.eci;\n  }\n\n  /**\n   * 返回当前区域和指定区域合并后的新区域\n   * @param {RectRange} other 区域\n   * @returns {RectRange}\n   */\n  union(other) {\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    return new RectRange(\n      other.sri < sri ? other.sri : sri,\n      other.sci < sci ? other.sci : sci,\n      other.eri > eri ? other.eri : eri,\n      other.eci > eci ? other.eci : eci,\n    );\n  }\n\n  /**\n   * 返回当前区域和指定区域合重合的新区域\n   * @param {RectRange} other\n   * @returns {RectRange}\n   */\n  coincide(other) {\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    if (this.disjoint(other)) {\n      return RectRange.EMPTY;\n    }\n    return new RectRange(\n      other.sri > sri ? other.sri : sri,\n      other.sci > sci ? other.sci : sci,\n      other.eri < eri ? other.eri : eri,\n      other.eci < eci ? other.eci : eci,\n    );\n  }\n\n  /**\n   * 当前区域和指定区域重合\n   * 返回当前区域和指定区域不重合的部分\n   * @param {RectRange} other 区域\n   * @returns {Array}\n   */\n  coincideDifference(other) {\n    if (this.coincide(other).equals(RectRange.EMPTY)) {\n      return [];\n    }\n    return this.difference(other);\n  }\n\n  /**\n   * 返回当前区域和指定区域不重合的部分\n   * @param {RectRange} other 区域\n   * @returns {Array}\n   */\n  difference(other) {\n    const ret = [];\n    const addRet = (sri, sci, eri, eci) => {\n      ret.push(new RectRange(sri, sci, eri, eci));\n    };\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    const dsr = other.sri - sri;\n    const dsc = other.sci - sci;\n    const der = eri - other.eri;\n    const dec = eci - other.eci;\n    if (dsr > 0) {\n      addRet(sri, sci, other.sri - 1, eci);\n      if (der > 0) {\n        addRet(other.eri + 1, sci, eri, eci);\n        if (dsc > 0) {\n          addRet(other.sri, sci, other.eri, other.sci - 1);\n        }\n        if (dec > 0) {\n          addRet(other.sri, other.eci + 1, other.eri, eci);\n        }\n      } else {\n        if (dsc > 0) {\n          addRet(other.sri, sci, eri, other.sci - 1);\n        }\n        if (dec > 0) {\n          addRet(other.sri, other.eci + 1, eri, eci);\n        }\n      }\n    } else if (der > 0) {\n      addRet(other.eri + 1, sci, eri, eci);\n      if (dsc > 0) {\n        addRet(sri, sci, other.eri, other.sci - 1);\n      }\n      if (dec > 0) {\n        addRet(sri, other.eci + 1, other.eri, eci);\n      }\n    }\n    if (dsc > 0) {\n      addRet(sri, sci, eri, other.sci - 1);\n      if (dec > 0) {\n        addRet(sri, other.eri + 1, eri, eci);\n        if (dsr > 0) {\n          addRet(sri, other.sci, other.sri - 1, other.eci);\n        }\n        if (der > 0) {\n          addRet(other.sri + 1, other.sci, eri, other.eci);\n        }\n      } else {\n        if (dsr > 0) {\n          addRet(sri, other.sci, other.sri - 1, eci);\n        }\n        if (der > 0) {\n          addRet(other.sri + 1, other.sci, eri, eci);\n        }\n      }\n    } else if (dec > 0) {\n      addRet(sri, other.eci + 1, eri, eci);\n      if (dsr > 0) {\n        addRet(sri, sci, other.sri - 1, other.eci);\n      }\n      if (der > 0) {\n        addRet(other.eri + 1, sci, eri, other.eci);\n      }\n    }\n    return ret;\n  }\n\n  /**\n   * 当前区域跨的行列数\n   * @returns {number[]}\n   */\n  size() {\n    return [\n      this.eri - this.sri + 1,\n      this.eci - this.sci + 1,\n    ];\n  }\n\n  /**\n   * 返回边缘区域\n   * @returns {{top: RectRange, left: RectRange, bottom: RectRange, right: RectRange}}\n   */\n  brink() {\n    const { sri, eri, sci, eci } = this;\n    const top = new RectRange(sri, sci, sri, eci);\n    const bottom = new RectRange(eri, sci, eri, eci);\n    const right = new RectRange(sri, eci, eri, eci);\n    const left = new RectRange(sri, sci, eri, sci);\n    return { top, right, bottom, left };\n  }\n\n  /**\n   * equals\n   * @param {RectRange} other 区域\n   * @returns {boolean}\n   */\n  equals(other) {\n    return this.eri === other.eri\n      && this.eci === other.eci\n      && this.sri === other.sri\n      && this.sci === other.sci;\n  }\n\n  /**\n   * 克隆\n   * @returns {RectRange}\n   */\n  clone() {\n    const {\n      sri, sci, eri, eci, w, h,\n    } = this;\n    return new RectRange(sri, sci, eri, eci, w, h);\n  }\n\n  toString() {\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    let ref = PlainUtils.xy2expr(sci, sri);\n    if (this.multiple()) {\n      ref = `${ref}:${PlainUtils.xy2expr(eci, eri)}`;\n    }\n    return ref;\n  }\n\n  /**\n   * 将 B1:B8 或者 B1 参数转换成新的区域\n   * @param {String} ref 行列字符串\n   * @returns {RectRange}\n   */\n  static valueOf(ref) {\n    const refs = ref.split(':');\n    const [sci, sri] = PlainUtils.expr2xy(refs[0]);\n    let [eri, eci] = [sri, sci];\n    if (refs.length > 1) {\n      [eci, eri] = PlainUtils.expr2xy(refs[1]);\n    }\n    return new RectRange(sri, sci, eri, eci);\n  }\n}\n\nRectRange.EMPTY = new RectRange(-1, -1, -1, -1);\n\nexport { RectRange };\n","import { Widget } from '../../../../lib/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenPart extends Widget {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-x-screen-part ${className}`);\r\n    this.xScreenZone = null;\r\n  }\r\n\r\n  onAttach(xScreenZone) {\r\n    this.xScreenZone = xScreenZone;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenPart,\r\n};\r\n","import { XScreenPart } from './XScreenPart';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenLTPart extends XScreenPart {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-x-screen-lt-part ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenLTPart,\r\n};\r\n","import { XScreenPart } from './XScreenPart';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenTPart extends XScreenPart {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-x-screen-br-part ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenTPart,\r\n};\r\n","import { XScreenPart } from './XScreenPart';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenLPart extends XScreenPart {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-x-screen-l-part ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenLPart,\r\n};\r\n","import { XScreenPart } from './XScreenPart';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenBRPart extends XScreenPart {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-x-screen-br-part ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenBRPart,\r\n};\r\n","import { XScreenLTPart } from '../part/XScreenLTPart';\r\nimport { XScreenTPart } from '../part/XScreenTPart';\r\nimport { XScreenBRPart } from '../part/XScreenBRPart';\r\nimport { XScreenLPart } from '../part/XScreenLPart';\r\n\r\nclass XScreenItem {\r\n\r\n  constructor({\r\n    table,\r\n  } = {}) {\r\n    this.table = table;\r\n    this.lt = new XScreenLTPart();\r\n    this.t = new XScreenTPart();\r\n    this.br = new XScreenBRPart();\r\n    this.l = new XScreenLPart();\r\n    this.xScreen = null;\r\n  }\r\n\r\n  onAdd() {}\r\n\r\n  hide() {\r\n    this.lt.hide();\r\n    this.t.hide();\r\n    this.br.hide();\r\n    this.l.hide();\r\n  }\r\n\r\n  show() {\r\n    this.lt.show();\r\n    this.t.show();\r\n    this.br.show();\r\n    this.l.show();\r\n  }\r\n\r\n  setXScreen(xScreen) {\r\n    this.xScreen = xScreen;\r\n  }\r\n\r\n  destroy() {}\r\n\r\n}\r\n\r\nexport {\r\n  XScreenItem,\r\n};\r\n","import { RectRange } from '../../../tablebase/RectRange';\r\nimport { XScreenItem } from '../XScreenItem';\r\n\r\nclass Display {\r\n\r\n  constructor(viewEyes) {\r\n    this.viewEyes = viewEyes;\r\n  }\r\n\r\n  setDisplay(targetViewRange) {\r\n    const screenView = this.getXScreenViewRange();\r\n    const target = screenView.coincide(targetViewRange);\r\n    const part = this.getPart();\r\n    if (target !== RectRange.EMPTY) {\r\n      part.show();\r\n      return true;\r\n    }\r\n    part.hide();\r\n    return false;\r\n  }\r\n\r\n  getPart() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n}\r\n\r\nclass LTDisplay extends Display {\r\n\r\n  setDisplay(targetViewRange) {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\r\n      return super.setDisplay(targetViewRange);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getPart() {\r\n    const { viewEyes } = this;\r\n    return viewEyes.lt;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\r\n      return xFixedView.getFixedView();\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass TDisplay extends Display {\r\n\r\n  setDisplay(targetViewRange) {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop()) {\r\n      return super.setDisplay(targetViewRange);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getPart() {\r\n    const { viewEyes } = this;\r\n    return viewEyes.t;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop()) {\r\n      const fixedView = xFixedView.getFixedView();\r\n      const scrollView = table.getScrollView();\r\n      return new RectRange(fixedView.sri, scrollView.sci, fixedView.eri, scrollView.eci);\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass BRDisplay extends Display {\r\n\r\n  getPart() {\r\n    const { viewEyes } = this;\r\n    return viewEyes.br;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    return table.getScrollView();\r\n  }\r\n\r\n}\r\n\r\nclass LDisplay extends Display {\r\n\r\n  setDisplay(targetViewRange) {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedLeft()) {\r\n      super.setDisplay(targetViewRange);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getPart() {\r\n    const { viewEyes } = this;\r\n    return viewEyes.l;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewEyes } = this;\r\n    const { table } = viewEyes;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedLeft()) {\r\n      const fixedView = xFixedView.getFixedView();\r\n      const scrollView = table.getScrollView();\r\n      return new RectRange(scrollView.sri, fixedView.sci, scrollView.eri, fixedView.eci);\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass XScreenViewEyes extends XScreenItem {\r\n\r\n  constructor({\r\n    table,\r\n  } = {}) {\r\n    super({ table });\r\n    this.ltDisplay = new LTDisplay(this);\r\n    this.tDisplay = new TDisplay(this);\r\n    this.brDisplay = new BRDisplay(this);\r\n    this.lDisplay = new LDisplay(this);\r\n  }\r\n\r\n  setDisplay(targetViewRange) {\r\n    const lt = this.ltDisplay.setDisplay(targetViewRange);\r\n    const t = this.tDisplay.setDisplay(targetViewRange);\r\n    const br = this.brDisplay.setDisplay(targetViewRange);\r\n    const l = this.lDisplay.setDisplay(targetViewRange);\r\n    return lt || t || br || l;\r\n  }\r\n\r\n  setLocal() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  setSizer() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenViewEyes,\r\n};\r\n","import { XScreenViewEyes } from './XScreenViewEyes';\r\nimport { RectRange } from '../../../tablebase/RectRange';\r\n\r\nclass Local {\r\n\r\n  constructor(viewLocal) {\r\n    this.viewLocal = viewLocal;\r\n  }\r\n\r\n  setLeft(targetViewRange) {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { cols } = table;\r\n    const screenView = this.getXScreenViewRange();\r\n    const target = screenView.coincide(targetViewRange);\r\n    const left = target !== RectRange.EMPTY\r\n      ? cols.sectionSumWidth(screenView.sci, target.sci - 1) : 0;\r\n    const part = this.getPart();\r\n    part.offset({ left });\r\n  }\r\n\r\n  setTop(targetViewRange) {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { rows } = table;\r\n    const screenView = this.getXScreenViewRange();\r\n    const target = screenView.coincide(targetViewRange);\r\n    const top = target !== RectRange.EMPTY\r\n      ? rows.sectionSumHeight(screenView.sri, target.sri - 1) : 0;\r\n    const part = this.getPart();\r\n    part.offset({ top });\r\n  }\r\n\r\n  setLocal(targetViewRange) {\r\n    this.setTop(targetViewRange);\r\n    this.setLeft(targetViewRange);\r\n  }\r\n\r\n  getPart() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n}\r\n\r\nclass LTLocal extends Local {\r\n\r\n  setLocal(targetViewRange) {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\r\n      super.setLocal(targetViewRange);\r\n    }\r\n  }\r\n\r\n  getPart() {\r\n    const { viewLocal } = this;\r\n    return viewLocal.lt;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\r\n      return xFixedView.getFixedView();\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass TLocal extends Local {\r\n\r\n  setLocal(targetViewRange) {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop()) {\r\n      super.setLocal(targetViewRange);\r\n    }\r\n  }\r\n\r\n  getPart() {\r\n    const { viewLocal } = this;\r\n    return viewLocal.t;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop()) {\r\n      const fixedView = xFixedView.getFixedView();\r\n      const scrollView = table.getScrollView();\r\n      return new RectRange(fixedView.sri, scrollView.sci, fixedView.eri, scrollView.eci);\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass BRLocal extends Local {\r\n\r\n  getPart() {\r\n    const { viewLocal } = this;\r\n    return viewLocal.br;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    return table.getScrollView();\r\n  }\r\n\r\n}\r\n\r\nclass LLocal extends Local {\r\n\r\n  setLocal(targetViewRange) {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedLeft()) {\r\n      super.setLocal(targetViewRange);\r\n    }\r\n  }\r\n\r\n  getPart() {\r\n    const { viewLocal } = this;\r\n    return viewLocal.l;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewLocal } = this;\r\n    const { table } = viewLocal;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedLeft()) {\r\n      const fixedView = xFixedView.getFixedView();\r\n      const scrollView = table.getScrollView();\r\n      return new RectRange(scrollView.sri, fixedView.sci, scrollView.eri, fixedView.eci);\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass XScreenViewLocal extends XScreenViewEyes {\r\n\r\n  constructor({\r\n    table,\r\n  } = {}) {\r\n    super({ table });\r\n    this.tlLocal = new LTLocal(this);\r\n    this.tLocal = new TLocal(this);\r\n    this.brLocal = new BRLocal(this);\r\n    this.lLocal = new LLocal(this);\r\n  }\r\n\r\n  setLocal(view) {\r\n    this.tlLocal.setLocal(view);\r\n    this.tLocal.setLocal(view);\r\n    this.brLocal.setLocal(view);\r\n    this.lLocal.setLocal(view);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenViewLocal,\r\n};\r\n","import { XScreenViewLocal } from './XScreenViewLocal';\r\nimport { RectRange } from '../../../tablebase/RectRange';\r\nimport { XDraw } from '../../../../../canvas/XDraw';\r\n\r\nclass Sizer {\r\n\r\n  constructor(viewSizer) {\r\n    this.viewSizer = viewSizer;\r\n  }\r\n\r\n  setSizer(targetViewRange) {\r\n    const { viewSizer } = this;\r\n    const { table } = viewSizer;\r\n    const { cols, rows } = table;\r\n    const screenView = this.getXScreenViewRange();\r\n    const target = screenView.coincide(targetViewRange);\r\n    const width = cols.rectRangeSumWidth(target);\r\n    const height = rows.rectRangeSumHeight(target);\r\n    const part = this.getPart();\r\n    part.offset({\r\n      width: XDraw.offsetToLineInside(width),\r\n      height: XDraw.offsetToLineInside(height),\r\n    });\r\n  }\r\n\r\n  getPart() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    throw new TypeError('child impl');\r\n  }\r\n\r\n}\r\n\r\nclass LTSizer extends Sizer {\r\n\r\n  setSizer(targetViewRange) {\r\n    const { viewSizer } = this;\r\n    const { table } = viewSizer;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\r\n      super.setSizer(targetViewRange);\r\n    }\r\n  }\r\n\r\n  getPart() {\r\n    const { viewSizer } = this;\r\n    return viewSizer.lt;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewSizer } = this;\r\n    const { table } = viewSizer;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\r\n      return xFixedView.getFixedView();\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass TSizer extends Sizer {\r\n\r\n  setSizer(targetViewRange) {\r\n    const { viewSizer } = this;\r\n    const { table } = viewSizer;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop()) {\r\n      super.setSizer(targetViewRange);\r\n    }\r\n  }\r\n\r\n  getPart() {\r\n    const { viewSizer } = this;\r\n    return viewSizer.t;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewSizer } = this;\r\n    const { table } = viewSizer;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedTop()) {\r\n      const fixedView = xFixedView.getFixedView();\r\n      const scrollView = table.getScrollView();\r\n      return new RectRange(fixedView.sri, scrollView.sci, fixedView.eri, scrollView.eci);\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass BRSizer extends Sizer {\r\n\r\n  getPart() {\r\n    const { viewSizer } = this;\r\n    return viewSizer.br;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewSizer } = this;\r\n    const { table } = viewSizer;\r\n    return table.getScrollView();\r\n  }\r\n\r\n}\r\n\r\nclass LSizer extends Sizer {\r\n\r\n  setSizer(targetViewRange) {\r\n    const { viewSizer } = this;\r\n    const { table } = viewSizer;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedLeft()) {\r\n      super.setSizer(targetViewRange);\r\n    }\r\n  }\r\n\r\n  getPart() {\r\n    const { viewSizer } = this;\r\n    return viewSizer.l;\r\n  }\r\n\r\n  getXScreenViewRange() {\r\n    const { viewSizer } = this;\r\n    const { table } = viewSizer;\r\n    const { xFixedView } = table;\r\n    if (xFixedView.hasFixedLeft()) {\r\n      const fixedView = xFixedView.getFixedView();\r\n      const scrollView = table.getScrollView();\r\n      return new RectRange(scrollView.sri, fixedView.sci, scrollView.eri, fixedView.eci);\r\n    }\r\n    return RectRange.EMPTY;\r\n  }\r\n\r\n}\r\n\r\nclass XScreenViewSizer extends XScreenViewLocal {\r\n\r\n  constructor({\r\n    table,\r\n  } = {}) {\r\n    super({ table });\r\n    this.ltSizer = new LTSizer(this);\r\n    this.tSizer = new TSizer(this);\r\n    this.brSizer = new BRSizer(this);\r\n    this.lSizer = new LSizer(this);\r\n  }\r\n\r\n  setSizer(view) {\r\n    this.ltSizer.setSizer(view);\r\n    this.tSizer.setSizer(view);\r\n    this.brSizer.setSizer(view);\r\n    this.lSizer.setSizer(view);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenViewSizer,\r\n};\r\n","import { RectRange } from '../../../tablebase/RectRange';\r\nimport { XScreenLTPart } from '../../part/XScreenLTPart';\r\nimport { XScreenTPart } from '../../part/XScreenTPart';\r\nimport { XScreenLPart } from '../../part/XScreenLPart';\r\nimport { XScreenBRPart } from '../../part/XScreenBRPart';\r\nimport { XScreenViewSizer } from '../viewdisplay/XScreenViewSizer';\r\n\r\nconst RANGE_OVER_GO = {\r\n  LT: Symbol('lt'),\r\n  T: Symbol('t'),\r\n  BR: Symbol('br'),\r\n  L: Symbol('l'),\r\n  LTT: Symbol('ltt'),\r\n  LTL: Symbol('ltl'),\r\n  BRT: Symbol('brt'),\r\n  BRL: Symbol('brl'),\r\n  ALL: Symbol('all'),\r\n};\r\n\r\nclass XScreenStyleBorderHandle extends XScreenViewSizer {\r\n\r\n  getBorderDisplay(range) {\r\n    const { table } = this;\r\n    const scrollView = table.getScrollView();\r\n    const overGo = this.getOverGo(range);\r\n    const display = {\r\n      bottom: false, left: false, top: false, right: false,\r\n    };\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n        display.bottom = true;\r\n        display.top = true;\r\n        display.left = true;\r\n        display.right = true;\r\n        break;\r\n      case RANGE_OVER_GO.T:\r\n        display.bottom = true;\r\n        display.top = true;\r\n        display.left = range.sci >= scrollView.sci && range.sci <= scrollView.eci;\r\n        display.right = range.eci <= scrollView.eci && range.eci >= scrollView.sci;\r\n        break;\r\n      case RANGE_OVER_GO.BR:\r\n        display.bottom = range.eri <= scrollView.eri && range.eri >= scrollView.sri;\r\n        display.top = range.sri >= scrollView.sri && range.sri <= scrollView.eri;\r\n        display.left = range.sci >= scrollView.sci && range.sci <= scrollView.eci;\r\n        display.right = range.eci <= scrollView.eci && range.eci >= scrollView.sci;\r\n        break;\r\n      case RANGE_OVER_GO.L:\r\n        display.bottom = range.eri <= scrollView.eri && range.eri >= scrollView.sri;\r\n        display.top = range.sri >= scrollView.sri && range.sri <= scrollView.eri;\r\n        display.left = true;\r\n        display.right = true;\r\n        break;\r\n      case RANGE_OVER_GO.LTT:\r\n        display.bottom = true;\r\n        display.top = true;\r\n        display.left = true;\r\n        display.right = range.eci <= scrollView.eci && range.eci >= scrollView.sci;\r\n        break;\r\n      case RANGE_OVER_GO.LTL:\r\n        display.bottom = range.eri <= scrollView.eri && range.eri >= scrollView.sri;\r\n        display.top = true;\r\n        display.left = true;\r\n        display.right = true;\r\n        break;\r\n      case RANGE_OVER_GO.BRT:\r\n        display.bottom = range.eri <= scrollView.eri && range.eri >= scrollView.sri;\r\n        display.top = true;\r\n        display.left = range.sci >= scrollView.sci && range.sci <= scrollView.eci;\r\n        display.right = range.eci <= scrollView.eci && range.eci >= scrollView.sci;\r\n        break;\r\n      case RANGE_OVER_GO.BRL:\r\n        display.bottom = range.eri <= scrollView.eri && range.eri >= scrollView.sri;\r\n        display.top = range.sri >= scrollView.sri && range.sri <= scrollView.eri;\r\n        display.left = true;\r\n        display.right = range.eci <= scrollView.eci && range.eci >= scrollView.sci;\r\n        break;\r\n      case RANGE_OVER_GO.ALL:\r\n        display.bottom = range.eri <= scrollView.eri && range.eri >= scrollView.sri;\r\n        display.top = true;\r\n        display.left = true;\r\n        display.right = range.eci <= scrollView.eci && range.eci >= scrollView.sci;\r\n        break;\r\n    }\r\n    return display;\r\n  }\r\n\r\n  getOverGo(range) {\r\n    const { table } = this;\r\n    const { cols, rows } = table;\r\n    const {\r\n      xFixedView,\r\n    } = table;\r\n    const rowsLen = rows.len - 1;\r\n    const colsLen = cols.len - 1;\r\n    const fixedView = xFixedView.getFixedView();\r\n    if (xFixedView.hasFixedTop() && xFixedView.hasFixedLeft()) {\r\n      const lt = fixedView;\r\n      const t = new RectRange(fixedView.sri, fixedView.eci + 1, fixedView.eri, colsLen);\r\n      const l = new RectRange(fixedView.eri + 1, fixedView.sci, rowsLen, fixedView.eci);\r\n      const br = new RectRange(fixedView.eri + 1, fixedView.eci + 1, rowsLen, colsLen);\r\n      if (lt.contains(range)) {\r\n        return RANGE_OVER_GO.LT;\r\n      }\r\n      if (t.contains(range)) {\r\n        return RANGE_OVER_GO.T;\r\n      }\r\n      if (br.contains(range)) {\r\n        return RANGE_OVER_GO.BR;\r\n      }\r\n      if (l.contains(range)) {\r\n        return RANGE_OVER_GO.L;\r\n      }\r\n      const ltt = new RectRange(fixedView.sri, fixedView.sci, fixedView.eri, colsLen);\r\n      const ltl = new RectRange(fixedView.sri, fixedView.sci, rowsLen, fixedView.eci);\r\n      const brt = new RectRange(fixedView.sri, fixedView.eci + 1, rowsLen, colsLen);\r\n      const brl = new RectRange(fixedView.eri + 1, fixedView.sci, rowsLen, colsLen);\r\n      if (ltt.contains(range)) {\r\n        return RANGE_OVER_GO.LTT;\r\n      }\r\n      if (ltl.contains(range)) {\r\n        return RANGE_OVER_GO.LTL;\r\n      }\r\n      if (brt.contains(range)) {\r\n        return RANGE_OVER_GO.BRT;\r\n      }\r\n      if (brl.contains(range)) {\r\n        return RANGE_OVER_GO.BRL;\r\n      }\r\n      return RANGE_OVER_GO.ALL;\r\n    } if (xFixedView.hasFixedTop()) {\r\n      const t = new RectRange(fixedView.sri, fixedView.eci, fixedView.eri, colsLen);\r\n      const br = new RectRange(fixedView.eri + 1, fixedView.eci + 1, rowsLen, colsLen);\r\n      if (t.contains(range)) {\r\n        return RANGE_OVER_GO.T;\r\n      }\r\n      if (br.contains(range)) {\r\n        return RANGE_OVER_GO.BR;\r\n      }\r\n      return RANGE_OVER_GO.BRT;\r\n    } if (xFixedView.hasFixedLeft()) {\r\n      const l = new RectRange(fixedView.eri, fixedView.sci, rowsLen, fixedView.eci);\r\n      const br = new RectRange(fixedView.eri + 1, fixedView.eci + 1, rowsLen, colsLen);\r\n      if (l.contains(range)) {\r\n        return RANGE_OVER_GO.L;\r\n      }\r\n      if (br.contains(range)) {\r\n        return RANGE_OVER_GO.BR;\r\n      }\r\n      return RANGE_OVER_GO.BRL;\r\n    }\r\n    return RANGE_OVER_GO.BR;\r\n  }\r\n\r\n  showBBorder(overGo, display) {\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n        this.blt.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.L:\r\n        this.bl.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.T:\r\n        this.bt.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.BR:\r\n        if (display.bottom) this.bbr.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTT:\r\n        this.blt.addClass('show-bottom-border');\r\n        this.bt.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTL:\r\n        if (display.bottom) this.bl.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRT:\r\n        if (display.bottom) this.bbr.addClass('show-bottom-border');\r\n        break;\r\n      case RANGE_OVER_GO.ALL:\r\n      case RANGE_OVER_GO.BRL:\r\n        if (display.bottom) {\r\n          this.bl.addClass('show-bottom-border');\r\n          this.bbr.addClass('show-bottom-border');\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  showTBorder(overGo, display) {\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n        this.blt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.L:\r\n        this.bl.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.T:\r\n        this.bt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.BR:\r\n        if (display.top) this.bbr.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTT:\r\n        this.blt.addClass('show-top-border');\r\n        this.bt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTL:\r\n        this.blt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRT:\r\n        this.bt.addClass('show-top-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRL:\r\n        if (display.top) {\r\n          this.bl.addClass('show-top-border');\r\n          this.bbr.addClass('show-top-border');\r\n        }\r\n        break;\r\n      case RANGE_OVER_GO.ALL:\r\n        this.blt.addClass('show-top-border');\r\n        this.bt.addClass('show-top-border');\r\n        break;\r\n    }\r\n  }\r\n\r\n  showLBorder(overGo, display) {\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n        this.blt.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.L:\r\n        this.bl.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.T:\r\n        if (display.left) this.bt.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.BR:\r\n        if (display.left) this.bbr.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTT:\r\n        this.blt.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTL:\r\n        this.blt.addClass('show-left-border');\r\n        this.bl.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRT:\r\n        if (display.left) {\r\n          this.bt.addClass('show-left-border');\r\n          this.bbr.addClass('show-left-border');\r\n        }\r\n        break;\r\n      case RANGE_OVER_GO.BRL:\r\n        this.bl.addClass('show-left-border');\r\n        break;\r\n      case RANGE_OVER_GO.ALL:\r\n        this.blt.addClass('show-left-border');\r\n        this.bl.addClass('show-left-border');\r\n        break;\r\n    }\r\n  }\r\n\r\n  showRBorder(overGo, display) {\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n        this.blt.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.L:\r\n        this.bl.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.T:\r\n        if (display.right) this.bt.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.BR:\r\n        if (display.right) this.bbr.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTT:\r\n        if (display.right) this.bt.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.LTL:\r\n        this.blt.addClass('show-right-border');\r\n        this.bl.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.BRT:\r\n        if (display.right) {\r\n          this.bt.addClass('show-right-border');\r\n          this.bbr.addClass('show-right-border');\r\n        }\r\n        break;\r\n      case RANGE_OVER_GO.BRL:\r\n        if (display.right) this.bbr.addClass('show-right-border');\r\n        break;\r\n      case RANGE_OVER_GO.ALL:\r\n        if (display.right) {\r\n          this.bt.addClass('show-right-border');\r\n          this.bbr.addClass('show-right-border');\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nclass XScreenStyleBorderItem extends XScreenStyleBorderHandle {\r\n\r\n  constructor({ table }, className = '') {\r\n    super({ table });\r\n    this.blt = new XScreenLTPart(className);\r\n    this.bt = new XScreenTPart(className);\r\n    this.bl = new XScreenLPart(className);\r\n    this.bbr = new XScreenBRPart(className);\r\n    this.lt.children(this.blt);\r\n    this.t.children(this.bt);\r\n    this.l.children(this.bl);\r\n    this.br.children(this.bbr);\r\n  }\r\n\r\n  hideBorder() {\r\n    [this.bbr, this.bt, this.bl, this.blt].forEach((item) => {\r\n      item.removeClass('show-bottom-border');\r\n      item.removeClass('show-top-border');\r\n      item.removeClass('show-right-border');\r\n      item.removeClass('show-left-border');\r\n    });\r\n  }\r\n\r\n  showBorder(range) {\r\n    const overGo = this.getOverGo(range);\r\n    const display = this.getBorderDisplay(range);\r\n    this.showBBorder(overGo, display);\r\n    this.showTBorder(overGo, display);\r\n    this.showLBorder(overGo, display);\r\n    this.showRBorder(overGo, display);\r\n    return display;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenStyleBorderItem, RANGE_OVER_GO,\r\n};\r\n","import { cssPrefix } from '../../../../../const/Constant';\r\nimport { XScreenStyleBorderItem } from './XScreenStyleBorderItem';\r\n\r\nclass XScreenCssBorderItem extends XScreenStyleBorderItem {\r\n\r\n  constructor({ table }) {\r\n    super({ table }, `${cssPrefix}-part-border-css`);\r\n    this.type = 'solid';\r\n    this.color = '#42a642';\r\n    this.setBorderType(this.type);\r\n  }\r\n\r\n  setBorderType(type) {\r\n    this.type = type;\r\n    this.blt.addClass(type);\r\n    this.bl.addClass(type);\r\n    this.bt.addClass(type);\r\n    this.bbr.addClass(type);\r\n  }\r\n\r\n  setBorderColor(color) {\r\n    this.color = color;\r\n    this.blt.css('border-color', color);\r\n    this.bl.css('border-color', color);\r\n    this.bt.css('border-color', color);\r\n    this.bbr.css('border-color', color);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenCssBorderItem,\r\n};\r\n","import cell from '../../../assets/svg/cell.png';\r\nimport sResize from '../../../assets/svg/s-resize.png';\r\nimport eResize from '../../../assets/svg/e-resize.png';\r\n\r\nclass XTableMousePointer {\r\n\r\n  constructor(table) {\r\n    this.flag = null;\r\n    this.table = table;\r\n  }\r\n\r\n  lock(flag) {\r\n    if (this.flag === null) {\r\n      this.flag = flag;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  set(type, token) {\r\n    if (this.flag !== null) {\r\n      if (this.flag !== token) {\r\n        return;\r\n      }\r\n    }\r\n    const { table } = this;\r\n    switch (type) {\r\n      case 's-resize':\r\n        table.css('cursor', `url(${sResize}) 2.5 7.5,auto`);\r\n        return;\r\n      case 'cell':\r\n        table.css('cursor', `url(${cell}) 7.5 7.5,auto`);\r\n        return;\r\n      case 'e-resize':\r\n        table.css('cursor', `url(${eResize}) 7.5 2.5,auto`);\r\n        return;\r\n    }\r\n    table.css('cursor', type);\r\n  }\r\n\r\n  free(flag) {\r\n    if (this.flag === flag) {\r\n      this.flag = null;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\nXTableMousePointer.KEYS = {\r\n  cell: 'cell',\r\n  crosshair: 'crosshair',\r\n  eResize: 'e-resize',\r\n  sResize: 's-resize',\r\n  grab: '-webkit-grab',\r\n  default: 'default',\r\n  rowResize: 'row-resize',\r\n  colResize: 'col-resize',\r\n  pointer: 'pointer',\r\n};\r\n\r\nexport { XTableMousePointer };\r\n","/* global document */\r\nimport { XScreenCssBorderItem } from '../../xscreen/item/viewborder/XScreenCssBorderItem';\r\nimport { XEvent } from '../../../../lib/XEvent';\r\nimport { Constant, cssPrefix } from '../../../../const/Constant';\r\nimport { RectRange } from '../../tablebase/RectRange';\r\nimport { Widget } from '../../../../lib/Widget';\r\nimport { XTableMousePointer } from '../../XTableMousePointer';\r\nimport { RANGE_OVER_GO } from '../../xscreen/item/viewborder/XScreenStyleBorderItem';\r\n\r\nconst SELECT_LOCAL = {\r\n  LT: Symbol('LT'),\r\n  L: Symbol('L'),\r\n  T: Symbol('T'),\r\n  BR: Symbol('BR'),\r\n};\r\n\r\n/**\r\n * XSelectItem\r\n */\r\nclass XSelectItem extends XScreenCssBorderItem {\r\n\r\n  /**\r\n   * XSelectItem\r\n   * @param table\r\n   */\r\n  constructor(table) {\r\n    super({ table });\r\n    this.selectLocal = SELECT_LOCAL.BR;\r\n    this.display = false;\r\n    this.border = {};\r\n    // 当前显示的操作按钮\r\n    this.activeCorner = null;\r\n    // 用户选中的区域\r\n    this.selectRange = null;\r\n    this.downRange = null;\r\n    this.moveRange = null;\r\n    // 上下左右四个区域阴影\r\n    this.ltElem = new Widget(`${cssPrefix}-x-select-area`);\r\n    this.brElem = new Widget(`${cssPrefix}-x-select-area`);\r\n    this.lElem = new Widget(`${cssPrefix}-x-select-area`);\r\n    this.tElem = new Widget(`${cssPrefix}-x-select-area`);\r\n    // 上下左右高亮区域\r\n    this.ltHighLight = new Widget(`${cssPrefix}-x-select-high-light`);\r\n    this.lHighLight = new Widget(`${cssPrefix}-x-select-high-light`);\r\n    this.tHighLight = new Widget(`${cssPrefix}-x-select-high-light`);\r\n    this.brHighLight = new Widget(`${cssPrefix}-x-select-high-light`);\r\n    // 上下左右4个操作按钮\r\n    this.ltCorner = new Widget(`${cssPrefix}-x-select-corner`);\r\n    this.lCorner = new Widget(`${cssPrefix}-x-select-corner`);\r\n    this.tCorner = new Widget(`${cssPrefix}-x-select-corner`);\r\n    this.brCorner = new Widget(`${cssPrefix}-x-select-corner`);\r\n    // 添加区域阴影\r\n    this.blt.before(this.ltElem);\r\n    this.bl.before(this.lElem);\r\n    this.bt.before(this.tElem);\r\n    this.bbr.before(this.brElem);\r\n    // 添加上下左右高亮区域\r\n    this.blt.before(this.ltHighLight);\r\n    this.bl.before(this.lHighLight);\r\n    this.bt.before(this.tHighLight);\r\n    this.bbr.before(this.brHighLight);\r\n    // 添加操作按钮\r\n    this.blt.after(this.ltCorner);\r\n    this.bl.after(this.lCorner);\r\n    this.bt.after(this.tCorner);\r\n    this.bbr.after(this.brCorner);\r\n    // 设置边框类型\r\n    this.setBorderType('solid');\r\n  }\r\n\r\n  /**\r\n   * 鼠标移动的区域\r\n   * @param x\r\n   * @param y\r\n   */\r\n  moveHandle(x, y) {\r\n    const { table } = this;\r\n    const {\r\n      rows, cols,\r\n    } = table;\r\n    const { downRange, selectLocal } = this;\r\n    const merges = table.getTableMerges();\r\n    const viewRange = table.getScrollView();\r\n    let { ri, ci } = table.getRiCiByXy(x, y);\r\n    if (ri === -1) {\r\n      ri = viewRange.sri;\r\n    }\r\n    if (ci === -1) {\r\n      ci = viewRange.sci;\r\n    }\r\n    if (selectLocal === SELECT_LOCAL.LT) {\r\n      const rect = downRange.union(new RectRange(0, 0, rows.len - 1, cols.len - 1));\r\n      this.moveRange = downRange.union(rect);\r\n      this.selectRange = this.moveRange;\r\n      this.selectLocal = SELECT_LOCAL.LT;\r\n      return;\r\n    }\r\n    if (selectLocal === SELECT_LOCAL.L) {\r\n      const rect = downRange.union(new RectRange(ri, 0, ri, 0));\r\n      this.moveRange = downRange.union(rect);\r\n      this.selectRange = this.moveRange;\r\n      this.selectLocal = SELECT_LOCAL.L;\r\n      return;\r\n    }\r\n    if (selectLocal === SELECT_LOCAL.T) {\r\n      const rect = downRange.union(new RectRange(0, ci, 0, ci));\r\n      this.moveRange = downRange.union(rect);\r\n      this.selectRange = this.moveRange;\r\n      this.selectLocal = SELECT_LOCAL.T;\r\n      return;\r\n    }\r\n    const rect = downRange.union(new RectRange(ri, ci, ri, ci));\r\n    this.moveRange = merges.union(rect);\r\n    this.selectRange = this.moveRange;\r\n    this.selectLocal = SELECT_LOCAL.BR;\r\n  }\r\n\r\n  /**\r\n   * 更新用户选中\r\n   * 的区域\r\n   * @param range\r\n   */\r\n  setRange(range) {\r\n    this.selectRange = range;\r\n    this.selectLocal = SELECT_LOCAL.BR;\r\n    this.offsetHandle();\r\n    this.borderHandle();\r\n    this.cornerHandle();\r\n  }\r\n\r\n  /**\r\n   * 鼠标按下的区域\r\n   * @param x\r\n   * @param y\r\n   */\r\n  downHandle(x, y) {\r\n    const { table } = this;\r\n    const { rows, cols } = table;\r\n    const merges = table.getTableMerges();\r\n    const { ri, ci } = table.getRiCiByXy(x, y);\r\n    if (ri === -1 && ci === -1) {\r\n      this.downRange = new RectRange(0, 0, rows.len - 1, cols.len - 1);\r\n      this.selectRange = this.downRange;\r\n      this.selectLocal = SELECT_LOCAL.LT;\r\n      return;\r\n    }\r\n    if (ri === -1) {\r\n      this.downRange = new RectRange(0, ci, rows.len - 1, ci);\r\n      this.selectRange = this.downRange;\r\n      this.selectLocal = SELECT_LOCAL.T;\r\n      return;\r\n    }\r\n    if (ci === -1) {\r\n      this.downRange = new RectRange(ri, 0, ri, cols.len - 1);\r\n      this.selectRange = this.downRange;\r\n      this.selectLocal = SELECT_LOCAL.L;\r\n      return;\r\n    }\r\n    this.downRange = merges.getFirstIncludes(ri, ci)\r\n      || new RectRange(ri, ci, ri, ci);\r\n    this.selectRange = this.downRange;\r\n    this.selectLocal = SELECT_LOCAL.BR;\r\n  }\r\n\r\n  /**\r\n   * 节点已添加\r\n   * 到屏幕上\r\n   */\r\n  onAdd() {\r\n    const { table } = this;\r\n    this.bind();\r\n    this.hide();\r\n    table.focus.register({ target: this.ltCorner });\r\n    table.focus.register({ target: this.lCorner });\r\n    table.focus.register({ target: this.tCorner });\r\n    table.focus.register({ target: this.brCorner });\r\n  }\r\n\r\n  /**\r\n   * 解绑事件\r\n   */\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件\r\n   */\r\n  bind() {\r\n    const { table } = this;\r\n    const {\r\n      mousePointer, focus,\r\n    } = table;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.offsetHandle();\r\n      this.borderHandle();\r\n      this.cornerHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      this.offsetHandle();\r\n      this.borderHandle();\r\n      this.cornerHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.SCALE_CHANGE, () => {\r\n      this.offsetHandle();\r\n      this.borderHandle();\r\n      this.cornerHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.FIXED_CHANGE, () => {\r\n      this.offsetHandle();\r\n      this.borderHandle();\r\n      this.cornerHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.RESIZE_CHANGE, () => {\r\n      this.offsetHandle();\r\n      this.borderHandle();\r\n      this.cornerHandle();\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\r\n      if (e1.button !== 0) {\r\n        return;\r\n      }\r\n      const { activate } = focus;\r\n      const { target } = activate;\r\n      if (target !== table) {\r\n        return;\r\n      }\r\n      const { x, y } = table.eventXy(e1);\r\n      this.downHandle(x, y);\r\n      this.offsetHandle();\r\n      this.borderHandle();\r\n      this.cornerHandle();\r\n      const { selectLocal } = this;\r\n      switch (selectLocal) {\r\n        case SELECT_LOCAL.L:\r\n          mousePointer.lock(XSelectItem);\r\n          mousePointer.set(XTableMousePointer.KEYS.eResize, XSelectItem);\r\n          break;\r\n        case SELECT_LOCAL.T:\r\n          mousePointer.lock(XSelectItem);\r\n          mousePointer.set(XTableMousePointer.KEYS.sResize, XSelectItem);\r\n          break;\r\n      }\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.SELECT_DOWN);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.SELECT_CHANGE);\r\n      XEvent.mouseMoveUp(document, (e2) => {\r\n        const { x, y } = table.eventXy(e2);\r\n        this.moveHandle(x, y);\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n        this.cornerHandle();\r\n        table.trigger(Constant.TABLE_EVENT_TYPE.SELECT_CHANGE);\r\n      }, () => {\r\n        switch (selectLocal) {\r\n          case SELECT_LOCAL.L:\r\n          case SELECT_LOCAL.T:\r\n            mousePointer.free(XSelectItem);\r\n            break;\r\n        }\r\n        table.trigger(Constant.TABLE_EVENT_TYPE.SELECT_OVER);\r\n      });\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\r\n      this.offsetHandle();\r\n      this.borderHandle();\r\n      this.cornerHandle();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 处理边框\r\n   * 是否显示\r\n   */\r\n  borderHandle() {\r\n    const { selectRange, display } = this;\r\n    if (selectRange && display) {\r\n      this.hideBorder();\r\n      this.border = this.showBorder(selectRange);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 处理选中区域\r\n   * 的位置和大小\r\n   */\r\n  offsetHandle() {\r\n    const { selectRange } = this;\r\n    if (selectRange && this.setDisplay(selectRange)) {\r\n      this.display = true;\r\n      this.setSizer(selectRange);\r\n      this.setLocal(selectRange);\r\n    } else {\r\n      this.display = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 处理操作按钮\r\n   * 是否显示\r\n   */\r\n  cornerHandle() {\r\n    const {\r\n      selectRange, selectLocal, display, border,\r\n    } = this;\r\n    if (selectRange && display) {\r\n      const overGo = this.getOverGo(selectRange);\r\n      this.ltCorner.hide();\r\n      this.tCorner.hide();\r\n      this.lCorner.hide();\r\n      this.brCorner.hide();\r\n      switch (selectLocal) {\r\n        case SELECT_LOCAL.LT:\r\n        case SELECT_LOCAL.L:\r\n        case SELECT_LOCAL.BR:\r\n          if (border.bottom === false) {\r\n            return;\r\n          }\r\n      }\r\n      this.brCorner.removeClass('br-pos');\r\n      this.lCorner.removeClass('br-pos');\r\n      this.tCorner.removeClass('br-pos');\r\n      this.ltCorner.removeClass('br-pos');\r\n      this.brCorner.removeClass('tr-pos');\r\n      this.lCorner.removeClass('tr-pos');\r\n      this.tCorner.removeClass('tr-pos');\r\n      this.ltCorner.removeClass('tr-pos');\r\n      this.brCorner.removeClass('bl-pos');\r\n      this.lCorner.removeClass('bl-pos');\r\n      this.tCorner.removeClass('bl-pos');\r\n      this.ltCorner.removeClass('bl-pos');\r\n      switch (selectLocal) {\r\n        case SELECT_LOCAL.L:\r\n          this.brCorner.addClass('bl-pos');\r\n          this.lCorner.addClass('bl-pos');\r\n          this.tCorner.addClass('bl-pos');\r\n          this.ltCorner.addClass('bl-pos');\r\n          break;\r\n        case SELECT_LOCAL.T:\r\n          this.brCorner.addClass('tr-pos');\r\n          this.lCorner.addClass('tr-pos');\r\n          this.tCorner.addClass('tr-pos');\r\n          this.ltCorner.addClass('tr-pos');\r\n          break;\r\n        case SELECT_LOCAL.LT:\r\n        case SELECT_LOCAL.BR:\r\n          this.brCorner.addClass('br-pos');\r\n          this.lCorner.addClass('br-pos');\r\n          this.tCorner.addClass('br-pos');\r\n          this.ltCorner.addClass('br-pos');\r\n          break;\r\n      }\r\n      switch (overGo) {\r\n        case RANGE_OVER_GO.LT:\r\n          this.ltCorner.show();\r\n          this.tCorner.hide();\r\n          this.brCorner.hide();\r\n          this.lCorner.hide();\r\n          this.activeCorner = this.ltCorner;\r\n          break;\r\n        case RANGE_OVER_GO.LTT:\r\n        case RANGE_OVER_GO.T:\r\n          this.ltCorner.hide();\r\n          this.tCorner.show();\r\n          this.brCorner.hide();\r\n          this.lCorner.hide();\r\n          this.activeCorner = this.tCorner;\r\n          break;\r\n        case RANGE_OVER_GO.ALL:\r\n        case RANGE_OVER_GO.BRL:\r\n        case RANGE_OVER_GO.BRT:\r\n        case RANGE_OVER_GO.BR:\r\n          this.ltCorner.hide();\r\n          this.tCorner.hide();\r\n          this.brCorner.show();\r\n          this.lCorner.hide();\r\n          this.activeCorner = this.brCorner;\r\n          break;\r\n        case RANGE_OVER_GO.LTL:\r\n        case RANGE_OVER_GO.L:\r\n          this.ltCorner.hide();\r\n          this.tCorner.hide();\r\n          this.brCorner.hide();\r\n          this.lCorner.show();\r\n          this.activeCorner = this.lCorner;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XSelectItem, SELECT_LOCAL,\r\n};\r\n","import { Widget } from '../../lib/Widget';\r\nimport { Constant, cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../lib/Element';\r\nimport { DragPanel } from '../dragpanel/DragPanel';\r\nimport { XEvent } from '../../lib/XEvent';\r\n\r\nclass Alert extends Widget {\r\n\r\n  constructor({\r\n    title = '提示',\r\n    message = '',\r\n  }) {\r\n    super(`${cssPrefix}-alert`);\r\n    // 创建 UI\r\n    this.closeEle = h('div', `${cssPrefix}-alert-close`);\r\n    this.titleEle = h('div', `${cssPrefix}-alert-title`);\r\n    this.contentEle = h('div', `${cssPrefix}-alert-content`);\r\n    this.okEle = h('div', `${cssPrefix}-alert-ok`);\r\n    this.buttonsEle = h('div', `${cssPrefix}-alert-buttons`);\r\n    // 显示内容消息\r\n    this.titleEle.html(title);\r\n    this.contentEle.html(message);\r\n    this.okEle.html('确定');\r\n    // 添加UI\r\n    this.buttonsEle.children(this.okEle);\r\n    this.children(this.closeEle);\r\n    this.children(this.titleEle);\r\n    this.children(this.contentEle);\r\n    this.children(this.buttonsEle);\r\n    // 拖拽组件\r\n    this.dragPanel = new DragPanel().children(this);\r\n  }\r\n\r\n  unbind() {\r\n    const { okEle } = this;\r\n    XEvent.unbind(okEle);\r\n  }\r\n\r\n  bind() {\r\n    const { okEle } = this;\r\n    XEvent.bind(okEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  open() {\r\n    const { dragPanel } = this;\r\n    dragPanel.open();\r\n    this.bind();\r\n  }\r\n\r\n  close() {\r\n    const { dragPanel } = this;\r\n    dragPanel.close();\r\n    this.destroy();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.dragPanel.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Alert,\r\n};\r\n","/* global document */\r\nimport { Widget } from '../../lib/Widget';\r\nimport { h } from '../../lib/Element';\r\nimport { cssPrefix } from '../../const/Constant';\r\n\r\nclass Mask extends Widget {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-mask`);\r\n    this.root = h(document.body);\r\n    this.status = false;\r\n    this.css('position', 'absolute');\r\n    this.css('background', 'rgba(0,0,0,0.3)');\r\n  }\r\n\r\n  setLeft(left) {\r\n    this.offset({ left });\r\n    return this;\r\n  }\r\n\r\n  setTop(top) {\r\n    this.offset({ top });\r\n    return this;\r\n  }\r\n\r\n  setHeight(height) {\r\n    this.offset({ height });\r\n    return this;\r\n  }\r\n\r\n  setWidth(width) {\r\n    this.offset({ width });\r\n    return this;\r\n  }\r\n\r\n  setOpacity(val) {\r\n    this.css('opacity', val);\r\n    return this;\r\n  }\r\n\r\n  open() {\r\n    if (this.status === false) {\r\n      this.root.children(this);\r\n      this.status = true;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  close() {\r\n    if (this.status === true) {\r\n      this.root.remove(this);\r\n      this.status = false;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  setRoot(element) {\r\n    if (element.el) {\r\n      element = h(element.el);\r\n    } else {\r\n      element = h(element);\r\n    }\r\n    this.root = element;\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Mask,\r\n};\r\n","import { ELContextMenuItem } from '../contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../lib/Element';\r\n\r\nclass OrderAZ extends ELContextMenuItem {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-filter-data-menu-item ${cssPrefix}-order-az`);\r\n    this.titleElement = h('div', `${cssPrefix}-filter-data-menu-item-title`);\r\n    this.titleElement.text('以A->Z的顺序排序');\r\n    this.children(this.titleElement);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  OrderAZ,\r\n};\r\n","import { ELContextMenuItem } from '../contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../lib/Element';\r\n\r\nclass OrderZA extends ELContextMenuItem {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-filter-data-menu-item ${cssPrefix}-order-za`);\r\n    this.titleElement = h('div', `${cssPrefix}-filter-data-menu-item-title`);\r\n    this.titleElement.text('以Z->A的顺序排序');\r\n    this.children(this.titleElement);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  OrderZA,\r\n};\r\n","import { ELContextMenu } from '../../contextmenu/ELContextMenu';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XEvent } from '../../../lib/XEvent';\r\n\r\nclass SelectContextMenu extends ELContextMenu {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-form-select-menu`, PlainUtils.mergeDeep({\r\n      autoHeight: true,\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [];\r\n    this.elPopUp.offset({\r\n      width: 200,\r\n    });\r\n  }\r\n\r\n  unbind() {\r\n    this.items.forEach((item) => {\r\n      XEvent.unbind(item);\r\n    });\r\n  }\r\n\r\n  bind(item) {\r\n    XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdate(item);\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  addItem(item) {\r\n    this.bind(item);\r\n    this.items.push(item);\r\n    this.children(item);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  SelectContextMenu,\r\n};\r\n","import { ELContextMenuItem } from '../../contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { h } from '../../../lib/Element';\r\n\r\nclass SelectContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor({\r\n    text = '', value = '',\r\n  }) {\r\n    super(`${cssPrefix}-form-select-menu-item`);\r\n    this.value = value;\r\n    this.text = text;\r\n    this.textEle = h('div', `${cssPrefix}-form-select-menu-item-title`);\r\n    this.textEle.text(text);\r\n    this.children(this.textEle);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  SelectContextMenuItem,\r\n};\r\n","import { Widget } from '../../../lib/Widget';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { XEvent } from '../../../lib/XEvent';\r\nimport { h } from '../../../lib/Element';\r\nimport { ELContextMenuDivider } from '../../contextmenu/ELContextMenuDivider';\r\nimport { SelectContextMenu } from './SelectContextMenu';\r\nimport { SelectContextMenuItem } from './SelectContextMenuItem';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\n/**\r\n * Select\r\n */\r\nclass Select extends Widget {\r\n\r\n  /**\r\n   * Select\r\n   */\r\n  constructor() {\r\n    super(`${cssPrefix}-form-select`);\r\n    this.selectValue = PlainUtils.Nul;\r\n    // 文本和图标\r\n    this.selectText = h('div', `${cssPrefix}-form-select-text`);\r\n    this.selectIcon = h('div', `${cssPrefix}-form-select-icon`);\r\n    this.children(this.selectText);\r\n    this.children(this.selectIcon);\r\n    // 上下文菜单\r\n    this.contextMenu = new SelectContextMenu({\r\n      el: this,\r\n      onUpdate: (item) => {\r\n        const { value } = item;\r\n        this.setSelect(value);\r\n      },\r\n    });\r\n    this.bind();\r\n  }\r\n\r\n  /**\r\n   * 卸载事件\r\n   */\r\n  unbind() {\r\n    XEvent.unbind(this);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件\r\n   */\r\n  bind() {\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      if (this.contextMenu.isClose()) {\r\n        this.contextMenu.open();\r\n      } else {\r\n        this.contextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 获取当前选择的值\r\n   * @returns {null}\r\n   */\r\n  getValue() {\r\n    return this.selectValue;\r\n  }\r\n\r\n  /**\r\n   * 设置选择的值\r\n   * @param value\r\n   */\r\n  setSelect(value) {\r\n    const { contextMenu, selectText } = this;\r\n    const { items } = contextMenu;\r\n    const find = items.find(item => item.value && item.value === value);\r\n    if (find) {\r\n      selectText.html(`&nbsp;${find.text}`);\r\n      this.selectValue = find.value;\r\n      this.trigger(Constant.FORM_EVENT_TYPE.FORM_SELECT_CHANGE, {\r\n        item: find,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 添加新的选项\r\n   * @param text\r\n   * @param value\r\n   */\r\n  addValue({\r\n    text, value,\r\n  }) {\r\n    const item = new SelectContextMenuItem({ text, value });\r\n    this.contextMenu.addItem(item);\r\n  }\r\n\r\n  /**\r\n   * 获取分隔线\r\n   */\r\n  addDivider() {\r\n    const item = new ELContextMenuDivider();\r\n    this.contextMenu.addItem(item);\r\n  }\r\n\r\n  /**\r\n   * 组件销毁\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.contextMenu.close();\r\n    this.contextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Select,\r\n};\r\n","import { Widget } from '../../../lib/Widget';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { h } from '../../../lib/Element';\r\nimport { XEvent } from '../../../lib/XEvent';\r\n\r\nclass PlainInput extends Widget {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-form-plain-input`);\r\n    this.inputWrapEle = h('div', `${cssPrefix}-form-input-wrap`);\r\n    this.inputInnerEle = h('div', `${cssPrefix}-form-input-inner`);\r\n    this.inputEle = h('input', `${cssPrefix}-form-input-source`);\r\n    this.inputInnerEle.children(this.inputEle);\r\n    this.inputWrapEle.children(this.inputInnerEle);\r\n    this.children(this.inputWrapEle);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { inputEle } = this;\r\n    XEvent.unbind(inputEle);\r\n  }\r\n\r\n  bind() {\r\n    const { inputEle } = this;\r\n    XEvent.bind(inputEle, Constant.SYSTEM_EVENT_TYPE.INPUT, () => {\r\n      this.setValue(inputEle.val());\r\n    });\r\n  }\r\n\r\n  setValue(value) {\r\n    this.inputEle.val(value);\r\n    this.trigger(Constant.FORM_EVENT_TYPE.PLAIN_INPUT_CHANGE, {\r\n      value: this.inputEle.val(),\r\n    });\r\n  }\r\n\r\n  getValue() {\r\n    return this.inputEle.val();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  PlainInput,\r\n};\r\n","import { ELContextMenuItem } from '../contextmenu/ELContextMenuItem';\r\nimport { Constant, cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../lib/Element';\r\nimport { Select } from '../form/select/Select';\r\nimport { XEvent } from '../../lib/XEvent';\r\nimport { PlainInput } from '../form/input/PlainInput';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\n\r\n/**\r\n * IFFilter\r\n */\r\nclass IFFilter extends ELContextMenuItem {\r\n\r\n  /**\r\n   * IFFilter\r\n   */\r\n  constructor() {\r\n    super(`${cssPrefix}-filter-data-menu-item ${cssPrefix}-if-filter`);\r\n    this.status = false;\r\n    this.type = IFFilter.IF_TYPE.NOT;\r\n    this.value = PlainUtils.EMPTY;\r\n    // 标题\r\n    this.titleEle = h('div', `${cssPrefix}-if-filter-title`);\r\n    this.titleTextEle = h('span', `${cssPrefix}-if-filter-title-text`);\r\n    this.titleIconEle = h('span', `${cssPrefix}-if-filter-title-icon`);\r\n    this.titleTextEle.text('条件过滤');\r\n    this.titleEle.children(this.titleIconEle);\r\n    this.titleEle.children(this.titleTextEle);\r\n    this.children(this.titleEle);\r\n    // 条件类型\r\n    this.selectEleBox = h('div', `${cssPrefix}-if-filter-select-box`);\r\n    this.selectEle = new Select();\r\n    this.selectEleBox.children(this.selectEle);\r\n    this.children(this.selectEleBox);\r\n    // 条件值\r\n    this.valueInputEleBox = h('div', `${cssPrefix}-if-filter-value-input-box`);\r\n    this.valueInput = new PlainInput();\r\n    this.valueInputEleBox.children(this.valueInput);\r\n    this.children(this.valueInputEleBox);\r\n    // 搜索类型\r\n    this.selectEle.addValue({ text: '无', value: IFFilter.IF_TYPE.NOT });\r\n    this.selectEle.addDivider();\r\n    this.selectEle.addValue({ text: '为空', value: IFFilter.IF_TYPE.CT_EMPTY });\r\n    this.selectEle.addValue({ text: '不为空', value: IFFilter.IF_TYPE.CT_NOT_EMPTY });\r\n    this.selectEle.addDivider();\r\n    this.selectEle.addValue({ text: '文本包含', value: IFFilter.IF_TYPE.STR_INCLUDE });\r\n    this.selectEle.addValue({ text: '文本不包含', value: IFFilter.IF_TYPE.STR_NOT_INCLUDE });\r\n    this.selectEle.addValue({ text: '文本开头', value: IFFilter.IF_TYPE.STR_START });\r\n    this.selectEle.addValue({ text: '文本结尾', value: IFFilter.IF_TYPE.STR_END });\r\n    this.selectEle.addValue({ text: '文本相符', value: IFFilter.IF_TYPE.STR_EQ });\r\n    this.selectEle.addDivider();\r\n    this.selectEle.addValue({ text: '日期为', value: IFFilter.IF_TYPE.DAT_EQ });\r\n    this.selectEle.addValue({ text: '日期超前', value: IFFilter.IF_TYPE.DAT_BEFORE });\r\n    this.selectEle.addValue({ text: '日期滞后', value: IFFilter.IF_TYPE.DAT_AFTER });\r\n    this.selectEle.addDivider();\r\n    this.selectEle.addValue({ text: '数字大于', value: IFFilter.IF_TYPE.NUM_BEFORE });\r\n    this.selectEle.addValue({ text: '数字大于等于', value: IFFilter.IF_TYPE.NUM_BEFORE_EQ });\r\n    this.selectEle.addValue({ text: '数字小于', value: IFFilter.IF_TYPE.NUM_AFTER });\r\n    this.selectEle.addValue({ text: '数字小于等于', value: IFFilter.IF_TYPE.NUM_AFTER_EQ });\r\n    this.selectEle.addValue({ text: '数字等于', value: IFFilter.IF_TYPE.NUM_EQ });\r\n    this.selectEle.addValue({ text: '数字不等于', value: IFFilter.IF_TYPE.NUM_NOT_EQ });\r\n    this.removeClass('hover');\r\n    this.bind();\r\n    this.hide();\r\n    this.selectEle.setSelect(IFFilter.IF_TYPE.NOT);\r\n  }\r\n\r\n  /**\r\n   * 设置筛选条件\r\n   * @param value\r\n   */\r\n  setValue(value) {\r\n    if (PlainUtils.isBlank(value)) {\r\n      value = PlainUtils.EMPTY;\r\n    }\r\n    this.valueInput.setValue(value);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件\r\n   * 处理程序\r\n   */\r\n  bind() {\r\n    const { titleEle, selectEle, valueInput } = this;\r\n    XEvent.bind(selectEle, Constant.FORM_EVENT_TYPE.FORM_SELECT_CHANGE, (e) => {\r\n      const { detail } = e;\r\n      const { item } = detail;\r\n      const { value } = item;\r\n      this.type = value;\r\n      this.switchInput();\r\n    });\r\n    XEvent.bind(valueInput, Constant.FORM_EVENT_TYPE.PLAIN_INPUT_CHANGE, (e) => {\r\n      const { detail } = e;\r\n      const { value } = detail;\r\n      this.value = value;\r\n    });\r\n    XEvent.bind(titleEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      if (this.status) {\r\n        this.hide();\r\n      } else {\r\n        this.show();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 卸载事件\r\n   * 处理程序\r\n   */\r\n  unbind() {\r\n    const { titleEle, selectEle } = this;\r\n    XEvent.unbind(titleEle);\r\n    XEvent.unbind(selectEle);\r\n  }\r\n\r\n  /**\r\n   * 设置条件类型\r\n   * @param type\r\n   */\r\n  setType(type) {\r\n    if (PlainUtils.isBlank(type)) {\r\n      type = IFFilter.IF_TYPE.NOT;\r\n    }\r\n    this.selectEle.setSelect(type);\r\n  }\r\n\r\n  /**\r\n   * 切换值输入\r\n   */\r\n  switchInput() {\r\n    const { type, valueInputEleBox } = this;\r\n    valueInputEleBox.hide();\r\n    switch (type) {\r\n      case IFFilter.IF_TYPE.STR_NOT_INCLUDE:\r\n      case IFFilter.IF_TYPE.STR_INCLUDE:\r\n      case IFFilter.IF_TYPE.STR_EQ:\r\n      case IFFilter.IF_TYPE.STR_START:\r\n      case IFFilter.IF_TYPE.STR_END:\r\n      case IFFilter.IF_TYPE.DAT_EQ:\r\n      case IFFilter.IF_TYPE.DAT_BEFORE:\r\n      case IFFilter.IF_TYPE.DAT_AFTER:\r\n      case IFFilter.IF_TYPE.NUM_BEFORE:\r\n      case IFFilter.IF_TYPE.NUM_BEFORE_EQ:\r\n      case IFFilter.IF_TYPE.NUM_AFTER:\r\n      case IFFilter.IF_TYPE.NUM_AFTER_EQ:\r\n      case IFFilter.IF_TYPE.NUM_EQ:\r\n      case IFFilter.IF_TYPE.NUM_NOT_EQ:\r\n        valueInputEleBox.show();\r\n        break;\r\n      default:\r\n        valueInputEleBox.hide();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取条件类型\r\n   */\r\n  getType() {\r\n    return this.type;\r\n  }\r\n\r\n  /**\r\n   * 获取筛选条件\r\n   */\r\n  getValue() {\r\n    return this.value;\r\n  }\r\n\r\n  /**\r\n   * 隐藏条件搜索\r\n   * @returns {IFFilter}\r\n   */\r\n  hide() {\r\n    this.titleIconEle.removeClass('active');\r\n    this.status = false;\r\n    this.selectEleBox.hide();\r\n    this.valueInputEleBox.hide();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 显示条件搜索\r\n   * @returns {IFFilter}\r\n   */\r\n  show() {\r\n    const { type } = this;\r\n    this.titleIconEle.addClass('active');\r\n    this.status = true;\r\n    this.selectEleBox.show();\r\n    this.setType(type);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 是否符合筛选条件\r\n   * @param type\r\n   * @param value\r\n   */\r\n  qualified(type, value) {\r\n    switch (type) {\r\n      case IFFilter.IF_TYPE.NOT: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.CT_NOT_EMPTY: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.CT_EMPTY: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.STR_NOT_INCLUDE: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.STR_INCLUDE: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.STR_EQ: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.STR_START: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.STR_END: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.DAT_EQ: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.DAT_BEFORE: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.DAT_AFTER: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.NUM_BEFORE: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.NUM_BEFORE_EQ: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.NUM_AFTER: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.NUM_AFTER_EQ: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.NUM_EQ: {\r\n        break;\r\n      }\r\n      case IFFilter.IF_TYPE.NUM_NOT_EQ: {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.selectEle.destroy();\r\n  }\r\n\r\n}\r\nIFFilter.IF_TYPE = {\r\n  NOT: 1,\r\n  CT_NOT_EMPTY: 2,\r\n  CT_EMPTY: 3,\r\n  STR_NOT_INCLUDE: 4,\r\n  STR_INCLUDE: 5,\r\n  STR_EQ: 6,\r\n  STR_START: 7,\r\n  STR_END: 8,\r\n  DAT_EQ: 9,\r\n  DAT_BEFORE: 10,\r\n  DAT_AFTER: 11,\r\n  NUM_BEFORE: 12,\r\n  NUM_BEFORE_EQ: 13,\r\n  NUM_AFTER: 14,\r\n  NUM_AFTER_EQ: 15,\r\n  NUM_EQ: 16,\r\n  NUM_NOT_EQ: 17,\r\n};\r\n\r\nexport {\r\n  IFFilter,\r\n};\r\n","import { h } from '../../../lib/Element';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { Widget } from '../../../lib/Widget';\r\nimport { XEvent } from '../../../lib/XEvent';\r\n\r\nclass SearchInput extends Widget {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-form-search-input`);\r\n    this.inputWrapEle = h('div', `${cssPrefix}-form-input-wrap`);\r\n    this.inputInnerEle = h('div', `${cssPrefix}-form-input-inner`);\r\n    this.inputEle = h('input', `${cssPrefix}-form-input-source`);\r\n    this.searchEle = h('div', `${cssPrefix}-form-input-search`);\r\n    this.inputInnerEle.children(this.inputEle);\r\n    this.inputWrapEle.children(this.inputInnerEle);\r\n    this.children(this.inputWrapEle);\r\n    this.children(this.searchEle);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { searchEle, inputEle } = this;\r\n    XEvent.unbind(searchEle);\r\n    XEvent.unbind(inputEle);\r\n  }\r\n\r\n  bind() {\r\n    const { searchEle, inputEle } = this;\r\n    XEvent.bind(searchEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.setValue(inputEle.val());\r\n    });\r\n    XEvent.bind(inputEle, Constant.SYSTEM_EVENT_TYPE.INPUT, () => {\r\n      this.setValue(inputEle.val());\r\n    });\r\n  }\r\n\r\n  getValue() {\r\n    const { inputEle } = this;\r\n    return inputEle.val();\r\n  }\r\n\r\n  setValue(value) {\r\n    const { inputEle } = this;\r\n    inputEle.val(value);\r\n    this.trigger(Constant.FORM_EVENT_TYPE.SEARCH_INPUT_CHANGE, {\r\n      value: inputEle.val(),\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  SearchInput,\r\n};\r\n","import { ELContextMenuItem } from '../../contextmenu/ELContextMenuItem';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { h } from '../../../lib/Element';\r\nimport { SearchInput } from '../../form/input/SearchInput';\r\nimport { w } from '../../../lib/Widget';\r\nimport { XEvent } from '../../../lib/XEvent';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\n/**\r\n * ValueFilter\r\n */\r\nclass ValueFilter extends ELContextMenuItem {\r\n\r\n  /**\r\n   * ValueFilter\r\n   */\r\n  constructor() {\r\n    super(`${cssPrefix}-filter-data-menu-item ${cssPrefix}-value-filter`);\r\n    this.filterExp = null;\r\n    this.items = [];\r\n    this.filters = [];\r\n    this.status = true;\r\n    this.value = PlainUtils.EMPTY;\r\n    // 值过滤标题\r\n    this.titleEle = h('div', `${cssPrefix}-value-filter-title`);\r\n    this.titleTextEle = h('span', `${cssPrefix}-value-filter-title-text`);\r\n    this.titleIconEle = h('span', `${cssPrefix}-value-filter-title-icon`);\r\n    this.titleTextEle.text('按值过滤');\r\n    this.titleEle.children(this.titleIconEle);\r\n    this.titleEle.children(this.titleTextEle);\r\n    this.children(this.titleEle);\r\n    // 操作按钮\r\n    this.optionBoxEle = h('div', `${cssPrefix}-value-filter-option-box`);\r\n    this.selectEle = h('div', `${cssPrefix}-value-filter-option-select`);\r\n    this.flagEle = h('div', `${cssPrefix}-value-filter-option-flag`);\r\n    this.clearEle = h('div', `${cssPrefix}-value-filter-option-clear`);\r\n    this.clearEle.text('清空');\r\n    this.flagEle.html('&nbsp;-&nbsp;');\r\n    this.selectEle.text('全选');\r\n    this.optionBoxEle.children(this.selectEle);\r\n    this.optionBoxEle.children(this.flagEle);\r\n    this.optionBoxEle.children(this.clearEle);\r\n    this.children(this.optionBoxEle);\r\n    // 搜索框\r\n    this.searchBoxEle = h('div', `${cssPrefix}-value-filter-input-box`);\r\n    this.searchInput = new SearchInput();\r\n    this.searchBoxEle.children(this.searchInput);\r\n    this.children(this.searchBoxEle);\r\n    // 条目盒子\r\n    this.itemsBox = h('div', `${cssPrefix}-value-filter-items-box`);\r\n    this.children(this.itemsBox);\r\n    // 事件处理\r\n    this.hide();\r\n    this.bind();\r\n    this.removeClass('hover');\r\n  }\r\n\r\n  /**\r\n   * 卸载事件\r\n   */\r\n  unbind() {\r\n    const { titleEle, selectEle, clearEle, searchInput } = this;\r\n    XEvent.unbind(clearEle);\r\n    XEvent.unbind(titleEle);\r\n    XEvent.unbind(selectEle);\r\n    XEvent.unbind(searchInput);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件\r\n   */\r\n  bind() {\r\n    const { titleEle, itemsBox, selectEle, clearEle, searchInput } = this;\r\n    const clazz = `${cssPrefix}-value-filter-item`;\r\n    XEvent.bind(selectEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.selectAll();\r\n    });\r\n    XEvent.bind(titleEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      if (this.status) {\r\n        this.hide();\r\n      } else {\r\n        this.show();\r\n      }\r\n    });\r\n    XEvent.bind(itemsBox, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { items } = this;\r\n      const { target } = e;\r\n      const ele = w(target).closestClass(clazz);\r\n      if (ele) {\r\n        const index = ele.attr(`${cssPrefix}-value-filter-item-index`);\r\n        const item = items[index];\r\n        item.setStatus(!item.status);\r\n      }\r\n    });\r\n    XEvent.bind(clearEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.clearAll();\r\n    });\r\n    XEvent.bind(searchInput, Constant.FORM_EVENT_TYPE.SEARCH_INPUT_CHANGE, (e) => {\r\n      const { detail } = e;\r\n      const { value } = detail;\r\n      if (!PlainUtils.isBlank(value)) {\r\n        this.filterExp = new RegExp(`.?${value}.?`);\r\n      } else {\r\n        this.filterExp = null;\r\n      }\r\n      this.value = value;\r\n      this.filterItems();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 添加单项\r\n   * @param valueItem\r\n   */\r\n  addItem(valueItem) {\r\n    valueItem.setIndex(this.items.length);\r\n    this.items.push(valueItem);\r\n    this.itemsBox.children(valueItem);\r\n  }\r\n\r\n  /**\r\n   * 过滤筛选项\r\n   */\r\n  filterItems() {\r\n    const { filterExp, items, itemsBox } = this;\r\n    const filters = [];\r\n    itemsBox.empty();\r\n    if (filterExp) {\r\n      // 筛选符合条件的元素\r\n      items.forEach((item) => {\r\n        const { text } = item;\r\n        if (filterExp.test(text)) {\r\n          filters.push(item);\r\n        }\r\n      });\r\n      // 显示筛选内容\r\n      filters.forEach((item) => {\r\n        itemsBox.children(item);\r\n      });\r\n    } else {\r\n      items.forEach((item) => {\r\n        itemsBox.children(item);\r\n      });\r\n    }\r\n    this.filters = filters;\r\n  }\r\n\r\n  /**\r\n   * 设置搜索值\r\n   * @param value\r\n   */\r\n  setValue(value) {\r\n    const { searchInput } = this;\r\n    if (PlainUtils.isBlank(value)) {\r\n      value = PlainUtils.EMPTY;\r\n    }\r\n    searchInput.setValue(value);\r\n  }\r\n\r\n  /**\r\n   * 获取搜索值\r\n   */\r\n  getValue() {\r\n    return this.value;\r\n  }\r\n\r\n  /**\r\n   * 获取选中的项目\r\n   */\r\n  getSelectItems() {\r\n    const { items, filters } = this;\r\n    const selectItems = [];\r\n    if (filters.length > 0) {\r\n      filters.forEach((item) => {\r\n        if (item.status) {\r\n          selectItems.push(item);\r\n        }\r\n      });\r\n    } else {\r\n      items.forEach((item) => {\r\n        if (item.status) {\r\n          selectItems.push(item);\r\n        }\r\n      });\r\n    }\r\n    return selectItems;\r\n  }\r\n\r\n  /**\r\n   * 显示控件\r\n   */\r\n  show() {\r\n    this.titleIconEle.addClass('active');\r\n    this.status = true;\r\n    this.optionBoxEle.show();\r\n    this.searchBoxEle.show();\r\n    this.itemsBox.show();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 隐藏控件\r\n   */\r\n  hide() {\r\n    this.titleIconEle.removeClass('active');\r\n    this.status = false;\r\n    this.optionBoxEle.hide();\r\n    this.searchBoxEle.hide();\r\n    this.itemsBox.hide();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 选中所有子项\r\n   */\r\n  selectAll() {\r\n    const { items } = this;\r\n    items.forEach((item) => {\r\n      item.setStatus(true);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 清除所有子项\r\n   */\r\n  clearAll() {\r\n    const { items } = this;\r\n    items.forEach((item) => {\r\n      item.setStatus(false);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 清空内容\r\n   */\r\n  emptyAll() {\r\n    this.itemsBox.empty();\r\n    this.items = [];\r\n  }\r\n\r\n  /**\r\n   * 是否符合筛选条件\r\n   * @param items\r\n   */\r\n  qualified(items) {\r\n\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.searchInput.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  ValueFilter,\r\n};\r\n","import { Constant, cssPrefix } from '../../const/Constant';\r\nimport { ELContextMenu } from '../contextmenu/ELContextMenu';\r\nimport { OrderAZ } from './OrderAZ';\r\nimport { OrderZA } from './OrderZA';\r\nimport { IFFilter } from './IFFilter';\r\nimport { ValueFilter } from './valuefilter/ValueFilter';\r\nimport { h } from '../../lib/Element';\r\nimport { ELContextMenuDivider } from '../contextmenu/ELContextMenuDivider';\r\nimport { XEvent } from '../../lib/XEvent';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { ElPopUp } from '../elpopup/ElPopUp';\r\n\r\nclass FilterData extends ELContextMenu {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-filter-data-menu`, PlainUtils.mergeDeep({\r\n      ok: () => {},\r\n      no: () => {},\r\n    }, options));\r\n    this.valueFilter = new ValueFilter();\r\n    this.ifFilter = new IFFilter();\r\n    this.orderAz = new OrderAZ();\r\n    this.orderZa = new OrderZA();\r\n    this.okEle = h('div', `${cssPrefix}-filter-data-menu-button ${cssPrefix}-filter-data-menu-ok`);\r\n    this.noEle = h('div', `${cssPrefix}-filter-data-menu-button ${cssPrefix}-filter-data-menu-no`);\r\n    this.children(this.orderAz);\r\n    this.children(this.orderZa);\r\n    this.children(new ELContextMenuDivider());\r\n    this.children(this.ifFilter);\r\n    this.children(this.valueFilter);\r\n    this.children(new ELContextMenuDivider());\r\n    this.children(this.noEle);\r\n    this.children(this.okEle);\r\n    this.okEle.html('确定');\r\n    this.noEle.html('取消');\r\n    this.okHandle = () => {\r\n      const { ifFilter, valueFilter } = this;\r\n      const valueFilterItems = valueFilter.getSelectItems();\r\n      const valueFilterValue = valueFilter.getValue();\r\n      const ifFilterType = ifFilter.getType();\r\n      const ifFilterValue = ifFilter.getValue();\r\n      this.options.ok({\r\n        valueFilterItems, valueFilterValue, ifFilterType, ifFilterValue,\r\n      });\r\n      this.close();\r\n    };\r\n    this.noHandle = () => {\r\n      this.options.no();\r\n      this.close();\r\n    };\r\n    this.filterDataHandle = () => {\r\n      ElPopUp.closeAll([this.elPopUp]);\r\n    };\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.okEle);\r\n    XEvent.unbind(this.noEle);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.okEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, this.okHandle);\r\n    XEvent.bind(this.noEle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, this.noHandle);\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, this.filterDataHandle);\r\n  }\r\n\r\n  open() {\r\n    super.open();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.valueFilter.destroy();\r\n    this.ifFilter.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FilterData,\r\n};\r\n","import { Widget } from '../../../lib/Widget';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { h } from '../../../lib/Element';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\nclass ValueItem extends Widget {\r\n\r\n  constructor({\r\n    text = PlainUtils.EMPTY,\r\n    index = -1,\r\n    status = false,\r\n  }) {\r\n    super(`${cssPrefix}-value-filter-item`);\r\n    this.text = text;\r\n    this.status = status;\r\n    this.index = index;\r\n    this.iconEle = h('div', `${cssPrefix}-value-filter-item-icon`);\r\n    this.textEle = h('div', `${cssPrefix}-value-filter-item-text`);\r\n    this.textEle.text(text);\r\n    this.attr('title', text);\r\n    this.children(this.iconEle);\r\n    this.children(this.textEle);\r\n    this.setIndex(index);\r\n    this.setStatus(status);\r\n  }\r\n\r\n  setStatus(status) {\r\n    this.status = status;\r\n    if (this.status) {\r\n      this.iconEle.css('opacity', 1);\r\n    } else {\r\n      this.iconEle.css('opacity', 0);\r\n    }\r\n  }\r\n\r\n  setIndex(index) {\r\n    this.index = index;\r\n    this.attr(`${cssPrefix}-value-filter-item-index`, `${this.index}`);\r\n  }\r\n\r\n  equals(item) {\r\n    return this.text === item.text;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  ValueItem,\r\n};\r\n","import { XSelectItem } from '../xselect/XSelectItem';\nimport { PlainUtils } from '../../../../utils/PlainUtils';\nimport { RectRange } from '../../tablebase/RectRange';\nimport { Widget } from '../../../../lib/Widget';\nimport { Constant, cssPrefix } from '../../../../const/Constant';\nimport { XEvent } from '../../../../lib/XEvent';\nimport { Alert } from '../../../../component/alert/Alert';\nimport { XScreenCssBorderItem } from '../../xscreen/item/viewborder/XScreenCssBorderItem';\nimport darkFilter from '../../../../../assets/svg/filter-dark.svg';\nimport { XTableMousePointer } from '../../XTableMousePointer';\nimport { XIcon } from '../../xicon/XIcon';\nimport { Mask } from '../../../../component/mask/Mask';\nimport { XDraw } from '../../../../canvas/XDraw';\nimport { FilterData } from '../../../../component/filterdata/FilterData';\nimport { ElPopUp } from '../../../../component/elpopup/ElPopUp';\nimport { ValueItem } from '../../../../component/filterdata/valuefilter/ValueItem';\n\n/**\n * XFilter\n */\nclass XFilter extends XScreenCssBorderItem {\n\n  /**\n   * XFilter\n   * @param table\n   */\n  constructor(table) {\n    super({ table });\n    this.display = false;\n    this.icons = [];\n    this.selectRange = null;\n    this.activeIcon = null;\n    this.mask = new Mask().setRoot(table);\n    this.filter = new FilterData({\n      el: this.mask,\n      ok: ({\n        valueFilterItems, valueFilterValue, ifFilterType, ifFilterValue,\n      }) => {\n        const { activeIcon } = this;\n        activeIcon.valueFilterItems = valueFilterItems;\n        activeIcon.valueFilterValue = valueFilterValue;\n        activeIcon.ifFilterType = ifFilterType;\n        activeIcon.ifFilterValue = ifFilterValue;\n        this.filterFoldRow();\n      },\n    });\n    this.flt = new Widget(`${cssPrefix}-x-filter ${cssPrefix}-x-filter-lt`);\n    this.ft = new Widget(`${cssPrefix}-x-filter ${cssPrefix}-x-filter-t`);\n    this.fbr = new Widget(`${cssPrefix}-x-filter ${cssPrefix}-x-filter-br`);\n    this.fl = new Widget(`${cssPrefix}-x-filter ${cssPrefix}-x-filter-l`);\n    this.blt.children(this.flt);\n    this.bl.children(this.fl);\n    this.bt.children(this.ft);\n    this.bbr.children(this.fbr);\n    this.setBorderColor('#0071cf');\n    this.bind();\n  }\n\n  /**\n   * 元素添加监听\n   */\n  onAdd() {\n    super.onAdd();\n  }\n\n  /**\n   * 卸载绑定事件\n   */\n  unbind() {\n    const { table } = this;\n    XEvent.unbind(table);\n  }\n\n  /**\n   * 绑定事件监听\n   */\n  bind() {\n    const { table } = this;\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.RESIZE_CHANGE, () => {\n      if (this.display) {\n        this.xFilterOffset();\n      }\n    });\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\n      if (this.display) {\n        ElPopUp.closeAll();\n        this.xFilterOffset();\n      }\n    });\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.RENDER, () => {\n      if (this.display) {\n        this.xFilterOffset();\n      }\n    });\n  }\n\n  /**\n   * 创建过滤小图标\n   */\n  createFilterIcon() {\n    const { selectRange } = this;\n    const { table } = this;\n    const { icons } = this;\n    if (selectRange) {\n      const { top } = selectRange.brink();\n      const { xIconBuilder, xIteratorBuilder } = table;\n      const style = table.getXTableStyle();\n      const { fixedCellIcon } = style;\n      const { mousePointer } = table;\n      top.each(xIteratorBuilder, (ri, ci) => {\n        const icon = xIconBuilder.build({\n          image: darkFilter,\n          offset: {\n            x: -2,\n            y: -2,\n          },\n          height: 18,\n          width: 18,\n          vertical: XIcon.ICON_VERTICAL.BOTTOM,\n        });\n        const item = { ri, ci, icon };\n        icon.setOnEnter((event) => {\n          const { position } = event;\n          const cssHeight = XDraw.styleTransformCssPx(position.height);\n          const cssWidth = XDraw.styleTransformCssPx(position.width);\n          const cssLeft = XDraw.styleTransformCssPx(position.x);\n          const cssTop = XDraw.styleTransformCssPx(position.y);\n          this.mask.setLeft(cssLeft)\n            .setTop(cssTop)\n            .setWidth(cssWidth)\n            .setHeight(cssHeight)\n            .open();\n        });\n        icon.setOnDown((event) => {\n          const { native } = event;\n          this.activeIcon = item;\n          this.filterOpen();\n          native.stopPropagation();\n        });\n        icon.setOnMove(() => {\n          mousePointer.set(XTableMousePointer.KEYS.pointer, XFilter);\n        });\n        icon.setOnLeave(() => {\n          this.mask.close();\n          mousePointer.free(XFilter);\n        });\n        fixedCellIcon.addOrNewCell(ri, ci, icon);\n        icons.push(item);\n      });\n      table.render();\n    }\n  }\n\n  /**\n   * 清除过滤小图标\n   */\n  clearFilterIcon() {\n    const { table, selectRange } = this;\n    if (selectRange) {\n      const style = table.getXTableStyle();\n      const { fixedCellIcon } = style;\n      this.icons.forEach((item) => {\n        const { ri, ci, icon } = item;\n        fixedCellIcon.remove(ri, ci, icon);\n      });\n      this.icons = [];\n      table.render();\n    }\n  }\n\n  /**\n   * 处理元素的\n   * 显示,大小,位置\n   */\n  offsetHandle() {\n    const { selectRange } = this;\n    if (selectRange) {\n      this.setDisplay(selectRange);\n      this.setSizer(selectRange);\n      this.setLocal(selectRange);\n    }\n  }\n\n  /**\n   * 处理元素的边框\n   * 是否显示\n   */\n  borderHandle() {\n    const { selectRange, display } = this;\n    if (selectRange && display) {\n      this.hideBorder();\n      this.showBorder(selectRange);\n    }\n  }\n\n  /**\n   * 处理过滤器的\n   * 视图区域\n   */\n  xFilterHandle() {\n    const { table } = this;\n    const {\n      xScreen, cols, rows, xIteratorBuilder,\n    } = table;\n\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    const cells = table.getTableCells();\n    const merges = table.getTableMerges();\n\n    if (selectRange) {\n      let targetRange = selectRange.clone();\n      const { sri, sci, eri, eci } = targetRange;\n      const rowLen = rows.len - 1;\n      const colLen = cols.len - 1;\n      const merge = merges.getFirstIncludes(sri, sci) || RectRange.EMPTY;\n      // 排除多选单元格\n      if (targetRange.multiple() && !merge.equals(targetRange)) {\n        this.selectRange = targetRange;\n        return;\n      }\n      // 向右走\n      xIteratorBuilder.getColIterator()\n        .setBegin(eci + 1)\n        .setEnd(colLen)\n        .setLoop((i) => {\n          const cell = cells.getCellOrMergeCell(sri, i);\n          if (PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text)) {\n            return false;\n          }\n          targetRange = targetRange.union(new RectRange(sri, i, sri, i));\n          return true;\n        })\n        .execute();\n      // 向左走\n      xIteratorBuilder.getColIterator()\n        .setBegin(sci - 1)\n        .setEnd(0)\n        .setLoop((i) => {\n          const cell = cells.getCellOrMergeCell(sri, i);\n          if (PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text)) {\n            return false;\n          }\n          targetRange = targetRange.union(new RectRange(sri, i, sri, i));\n          return true;\n        })\n        .execute();\n      // 向下走\n      xIteratorBuilder.getRowIterator()\n        .setBegin(eri + 1)\n        .setEnd(rowLen)\n        .setLoop((i) => {\n          const cell = cells.getCellOrMergeCell(i, sci);\n          if (PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text)) {\n            return false;\n          }\n          targetRange = targetRange.union(new RectRange(i, sci, i, sci));\n          return true;\n        })\n        .execute();\n      // 向上走\n      xIteratorBuilder.getRowIterator()\n        .setBegin(sri - 1)\n        .setEnd(0)\n        .setLoop((i) => {\n          const cell = cells.getCellOrMergeCell(i, sci);\n          if (PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text)) {\n            return false;\n          }\n          targetRange = targetRange.union(new RectRange(i, sci, i, sci));\n          return true;\n        })\n        .execute();\n      // 向右扫描\n      xIteratorBuilder.getColIterator()\n        .setBegin(targetRange.eci + 1)\n        .setEnd(colLen)\n        .setLoop((i) => {\n          const { sri, eri } = targetRange;\n          let emptyCol = true;\n          xIteratorBuilder.getRowIterator()\n            .setBegin(sri)\n            .setEnd(eri)\n            .setLoop((j) => {\n              const cell = cells.getCellOrMergeCell(j, i);\n              if (!PlainUtils.isUnDef(cell) && !PlainUtils.isBlank(cell.text)) {\n                targetRange = targetRange.union(new RectRange(j, i, j, i));\n                emptyCol = false;\n              }\n            })\n            .execute();\n          return !emptyCol;\n        })\n        .execute();\n      // 向左扫描\n      xIteratorBuilder.getColIterator()\n        .setBegin(targetRange.sci - 1)\n        .setEnd(0)\n        .setLoop((i) => {\n          const { sri, eri } = targetRange;\n          let emptyCol = true;\n          xIteratorBuilder.getRowIterator()\n            .setBegin(sri)\n            .setEnd(eri)\n            .setLoop((j) => {\n              const cell = cells.getCellOrMergeCell(j, i);\n              if (!PlainUtils.isUnDef(cell) && !PlainUtils.isBlank(cell.text)) {\n                targetRange = targetRange.union(new RectRange(j, i, j, i));\n                emptyCol = false;\n              }\n            })\n            .execute();\n          return !emptyCol;\n        })\n        .execute();\n      // 向下扫描\n      xIteratorBuilder.getRowIterator()\n        .setBegin(targetRange.eri + 1)\n        .setEnd(rowLen)\n        .setLoop((i) => {\n          const { sci, eci } = targetRange;\n          let emptyRow = true;\n          xIteratorBuilder.getColIterator()\n            .setBegin(sci)\n            .setEnd(eci)\n            .setLoop((j) => {\n              const cell = cells.getCellOrMergeCell(i, j);\n              if (!PlainUtils.isUnDef(cell) && !PlainUtils.isBlank(cell.text)) {\n                targetRange = targetRange.union(new RectRange(i, j, i, j));\n                emptyRow = false;\n              }\n            })\n            .execute();\n          return !emptyRow;\n        })\n        .execute();\n      // 向上扫描\n      xIteratorBuilder.getRowIterator()\n        .setBegin(targetRange.sri - 1)\n        .setEnd(0)\n        .setLoop((i) => {\n          const { sci, eci } = targetRange;\n          let emptyRow = true;\n          xIteratorBuilder.getColIterator()\n            .setBegin(sci)\n            .setEnd(eci)\n            .setLoop((j) => {\n              const cell = cells.getCellOrMergeCell(i, j);\n              if (!PlainUtils.isUnDef(cell) && !PlainUtils.isBlank(cell.text)) {\n                targetRange = targetRange.union(new RectRange(i, j, i, j));\n                emptyRow = false;\n              }\n            })\n            .execute();\n          return !emptyRow;\n        })\n        .execute();\n      this.selectRange = targetRange;\n\n    } else {\n      this.selectRange = null;\n    }\n  }\n\n  /**\n   * 处理元素的基本属性\n   * 和边框\n   */\n  xFilterOffset() {\n    this.offsetHandle();\n    this.borderHandle();\n  }\n\n  /**\n   * 打开过滤面板\n   */\n  filterOpen() {\n    const { selectRange, table, filter, activeIcon } = this;\n    const { valueFilter, ifFilter } = filter;\n    const { xIteratorBuilder } = table;\n    const cells = table.getTableCells();\n    // 筛选条件\n    const { valueFilterValue, ifFilterType, ifFilterValue, valueFilterItems } = activeIcon;\n    // 筛选范围\n    const { ri: sri, ci: sci } = activeIcon;\n    const { eri } = selectRange;\n    const eci = sci;\n    // 筛选数据\n    const items = new Set();\n    new RectRange(sri, sci, eri, eci).each(xIteratorBuilder, (ri, ci) => {\n      const cell = cells.getCellOrMergeCell(ri, ci);\n      if (cell && !PlainUtils.isBlank(cell.text)) {\n        items.add(cell.text.trim());\n      }\n    });\n    // 值筛选\n    valueFilter.emptyAll();\n    if (valueFilterItems) {\n      items.forEach((item) => {\n        const valueItem = new ValueItem({\n          text: item,\n        });\n        if (valueFilterItems.find(item => valueItem.equals(item))) {\n          valueItem.setStatus(true);\n        } else {\n          valueItem.setStatus(false);\n        }\n        valueFilter.addItem(valueItem);\n      });\n    } else {\n      items.forEach((item) => {\n        const valueItem = new ValueItem({\n          text: item,\n        });\n        valueItem.setStatus(true);\n        valueFilter.addItem(valueItem);\n      });\n    }\n    valueFilter.setValue(valueFilterValue);\n    // 条件筛选\n    ifFilter.setType(ifFilterType);\n    ifFilter.setValue(ifFilterValue);\n    // 关闭其他面板\n    ElPopUp.closeAll();\n    // 打开面板\n    filter.open();\n  }\n\n  /**\n   * 过滤折叠行\n   */\n  filterFoldRow() {\n    const { selectRange } = this;\n    const { table } = this;\n    const { icons } = this;\n    const { sri, sci, eri, eci } = selectRange;\n    const cells = table.getTableCells();\n    for (let ri = sri; ri <= eri; ri++) {\n      for (let ci = sci; ci <= eci; ci++) {\n        const cell = cells.getCell(ri, ci);\n        if (PlainUtils.isEmptyObject(cell)) {\n          continue;\n        }\n        const { text } = cell;\n        if (PlainUtils.isBlank(text)) {\n          continue;\n        }\n        const icon = icons[ci];\n        // 数值筛选\n        const { valueFilterItems } = icon;\n        const { valueFilterValue } = icon;\n        if (valueFilterItems) {\n\n        }\n        // 条件筛选\n        const { ifFilterType } = icon;\n        const { ifFilterValue } = icon;\n        if (ifFilterType) {\n\n        }\n      }\n    }\n  }\n\n  /**\n   * 隐藏过滤器\n   */\n  hideFilter() {\n    this.display = false;\n    this.clearFilterIcon();\n    this.hide();\n  }\n\n  /**\n   * 显示过滤器\n   */\n  openFilter() {\n    const { table } = this;\n    const cells = table.getTableCells();\n    this.xFilterHandle();\n    const { selectRange } = this;\n    if (selectRange) {\n      if (cells.emptyRectRange(selectRange)) {\n        new Alert({\n          message: '不能为空数据区创建过滤器, 请选择非空区域',\n        }).open();\n      } else {\n        this.display = true;\n        this.createFilterIcon();\n        this.show();\n        this.xFilterOffset();\n      }\n    }\n  }\n\n  /**\n   * 销毁过滤器\n   */\n  destroy() {\n    super.destroy();\n    this.unbind();\n  }\n\n}\n\nexport {\n  XFilter,\n};\n","import { cssPrefix } from '../../../../../const/Constant';\r\nimport { XScreenStyleBorderItem } from './XScreenStyleBorderItem';\r\n\r\nconst SVG = `\r\n  <svg class=\"${cssPrefix}-copy-style-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">\r\n    <line class=\"${cssPrefix}-copy-style-stroked ${cssPrefix}-copy-style-stroked-top\" x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"0\"/>\r\n    <line class=\"${cssPrefix}-copy-style-stroked ${cssPrefix}-copy-style-stroked-left\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\"/>\r\n    <line class=\"${cssPrefix}-copy-style-stroked ${cssPrefix}-copy-style-stroked-bottom\" x1=\"0\" y1=\"100%\" x2=\"100%\" y2=\"100%\"/>\r\n    <line class=\"${cssPrefix}-copy-style-stroked ${cssPrefix}-copy-style-stroked-right\" x1=\"100%\" y1=\"0\" x2=\"100%\" y2=\"100%\"/>\r\n  </svg>\r\n`;\r\n\r\nclass XScreenSvgBorderItem extends XScreenStyleBorderItem {\r\n\r\n  constructor({ table }) {\r\n    super({ table }, `${cssPrefix}-part-border-svg`);\r\n    this.blt.html(SVG);\r\n    this.bl.html(SVG);\r\n    this.bt.html(SVG);\r\n    this.bbr.html(SVG);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenSvgBorderItem,\r\n};\r\n","import { XSelectItem } from '../xselect/XSelectItem';\r\nimport { Widget } from '../../../../lib/Widget';\r\nimport { Constant, cssPrefix } from '../../../../const/Constant';\r\nimport { XEvent } from '../../../../lib/XEvent';\r\nimport { RectRange } from '../../tablebase/RectRange';\r\nimport { XScreenSvgBorderItem } from '../../xscreen/item/viewborder/XScreenSvgBorderItem';\r\n\r\nclass XCopyStyle extends XScreenSvgBorderItem {\r\n\r\n  constructor(table) {\r\n    super({ table });\r\n    this.display = false;\r\n    this.selectRange = RectRange.EMPTY;\r\n    this.ltElem = new Widget(`${cssPrefix}-x-copy-style-area`);\r\n    this.brElem = new Widget(`${cssPrefix}-x-copy-style-area`);\r\n    this.lElem = new Widget(`${cssPrefix}-x-copy-style-area`);\r\n    this.tElem = new Widget(`${cssPrefix}-x-copy-style-area`);\r\n    this.blt.children(this.ltElem);\r\n    this.bl.children(this.lElem);\r\n    this.bt.children(this.tElem);\r\n    this.bbr.children(this.brElem);\r\n  }\r\n\r\n  onAdd() {\r\n    this.hideCopyStyle();\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      if (this.display) {\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      if (this.display) {\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.SCALE_CHANGE, () => {\r\n      if (this.display) {\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.FIXED_CHANGE, () => {\r\n      if (this.display) {\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.RESIZE_CHANGE, () => {\r\n      if (this.display) {\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\r\n      if (this.display) {\r\n        this.offsetHandle();\r\n        this.borderHandle();\r\n      }\r\n    });\r\n  }\r\n\r\n  borderHandle() {\r\n    const { selectRange } = this;\r\n    if (selectRange.equals(RectRange.EMPTY)) {\r\n      return;\r\n    }\r\n    this.hideBorder();\r\n    this.showBorder(selectRange);\r\n  }\r\n\r\n  offsetHandle() {\r\n    const { selectRange } = this;\r\n    if (selectRange.equals(RectRange.EMPTY)) {\r\n      this.hide();\r\n      return;\r\n    }\r\n    this.show();\r\n    this.setDisplay(selectRange);\r\n    this.setSizer(selectRange);\r\n    this.setLocal(selectRange);\r\n  }\r\n\r\n  hideCopyStyle() {\r\n    this.display = false;\r\n    this.hide();\r\n  }\r\n\r\n  showCopyStyle() {\r\n    this.display = true;\r\n    this.show();\r\n    const { xScreen } = this;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    this.selectRange = selectRange;\r\n    this.offsetHandle();\r\n    this.borderHandle();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XCopyStyle,\r\n};\r\n","import { h } from '../../lib/Element';\r\nimport { Constant, cssPrefix } from '../../const/Constant';\r\nimport { Widget } from '../../lib/Widget';\r\nimport { DragPanel } from '../dragpanel/DragPanel';\r\nimport { XEvent } from '../../lib/XEvent';\r\n\r\nclass Confirm extends Widget {\r\n\r\n  constructor({\r\n    title = '提示',\r\n    message = '',\r\n    ok = () => {},\r\n    no = () => {},\r\n  }) {\r\n    super(`${cssPrefix}-confirm`);\r\n    this.title = title;\r\n    this.message = message;\r\n    this.ok = ok;\r\n    this.no = no;\r\n    // 创建 UI\r\n    this.closeEle = h('div', `${cssPrefix}-confirm-close`);\r\n    this.titleEle = h('div', `${cssPrefix}-confirm-title`);\r\n    this.contentEle = h('div', `${cssPrefix}-confirm-content`);\r\n    this.okEle = h('div', `${cssPrefix}-confirm-button ${cssPrefix}-confirm-ok`);\r\n    this.noEle = h('div', `${cssPrefix}-confirm-button ${cssPrefix}-confirm-no`);\r\n    this.buttonsEle = h('div', `${cssPrefix}-confirm-buttons`);\r\n    // 显示内容消息\r\n    this.titleEle.html(title);\r\n    this.contentEle.html(message);\r\n    this.okEle.html('确定');\r\n    this.noEle.html('取消');\r\n    // 添加UI\r\n    this.buttonsEle.children(this.noEle);\r\n    this.buttonsEle.children(this.okEle);\r\n    this.children(this.closeEle);\r\n    this.children(this.titleEle);\r\n    this.children(this.contentEle);\r\n    this.children(this.buttonsEle);\r\n    // 拖拽组件\r\n    this.dragPanel = new DragPanel().children(this);\r\n  }\r\n\r\n  unbind() {\r\n    const { okEle, noEle } = this;\r\n    XEvent.unbind(okEle);\r\n    XEvent.unbind(noEle);\r\n  }\r\n\r\n  bind() {\r\n    const { okEle, noEle } = this;\r\n    XEvent.bind(okEle, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.ok();\r\n      this.close();\r\n    });\r\n    XEvent.bind(noEle, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.no();\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  open() {\r\n    const { dragPanel } = this;\r\n    dragPanel.open();\r\n    this.bind();\r\n  }\r\n\r\n  close() {\r\n    const { dragPanel } = this;\r\n    dragPanel.close();\r\n    this.destroy();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.dragPanel.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Confirm,\r\n};\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\n\r\nclass FontAngleContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-font-angle-context-menu-item`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FontAngleContextMenuItem,\r\n};\r\n","import { Widget } from '../../../../lib/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass Divider extends Widget {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-divider`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Divider,\r\n};\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Divider } from '../../../base/Divider';\r\n\r\nclass FontAngleDivider extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle-divider`);\r\n    this.children(new Divider());\r\n    this.css('padding-left', '0');\r\n    this.css('padding-right', '0');\r\n    this.css('margin-left', '0');\r\n    this.css('margin-right', '0');\r\n  }\r\n}\r\n\r\nexport {\r\n  FontAngleDivider,\r\n};\r\n","import { Item } from './Item';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\nimport { Icon } from '../Icon';\r\nimport { h } from '../../../../lib/Element';\r\n\r\nclass DropInputItem extends Item {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-tools-drop-input-item ${className}`);\r\n    this.drop = h('div', `${cssPrefix}-tools-drop-input-item-mark`);\r\n    this.title = h('div', `${cssPrefix}-tools-drop-input-item-title`);\r\n    this.icon = new Icon('arrow-down');\r\n    this.input = h('input', `${cssPrefix}-tools-drop-input`);\r\n    this.drop.children(this.icon);\r\n    this.title.children(this.input);\r\n    this.children(this.title);\r\n    this.children(this.drop);\r\n  }\r\n\r\n  setValue(value) {\r\n    this.input.val(value);\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport { DropInputItem };\r\n","import { ELContextMenuItem } from '../../../../../component/contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../../../../const/Constant';\r\nimport { h } from '../../../../../lib/Element';\r\n\r\nclass FontAngleValueContextMenuItem extends ELContextMenuItem {\r\n\r\n  constructor(angleValue) {\r\n    super(`${cssPrefix}-font-angle-value-context-menu-item`);\r\n    this.angleValue = angleValue;\r\n    this.titleElement = h('div', `${cssPrefix}-font-angle-value-context-menu-item-title`);\r\n    this.titleElement.text(angleValue);\r\n    this.titleElement.css('text-align', 'center');\r\n    this.children(this.titleElement);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FontAngleValueContextMenuItem,\r\n};\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { FontAngleValueContextMenuItem } from './FontAngleValueContextMenuItem';\r\nimport { Constant, cssPrefix } from '../../../../../const/Constant';\r\nimport { XEvent } from '../../../../../lib/XEvent';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass FontAngleValueContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-angle-value-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdate: () => {},\r\n    }, options));\r\n    this.items = [\r\n      new FontAngleValueContextMenuItem(-90),\r\n      new FontAngleValueContextMenuItem(-75),\r\n      new FontAngleValueContextMenuItem(-60),\r\n      new FontAngleValueContextMenuItem(-45),\r\n      new FontAngleValueContextMenuItem(-30),\r\n      new FontAngleValueContextMenuItem(-15),\r\n      new FontAngleValueContextMenuItem(0),\r\n      new FontAngleValueContextMenuItem(15),\r\n      new FontAngleValueContextMenuItem(30),\r\n      new FontAngleValueContextMenuItem(45),\r\n      new FontAngleValueContextMenuItem(60),\r\n      new FontAngleValueContextMenuItem(75),\r\n      new FontAngleValueContextMenuItem(90),\r\n    ];\r\n    this.items.forEach((item) => {\r\n      this.addItem(item);\r\n    });\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { items } = this;\r\n    items.forEach((item) => {\r\n      XEvent.unbind(item);\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    const { items } = this;\r\n    items.forEach((item) => {\r\n      XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n        this.options.onUpdate(item);\r\n        this.close();\r\n      });\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FontAngleValueContextMenu,\r\n};\r\n","import { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { DropInputItem } from './base/DropInputItem';\r\nimport { XEvent } from '../../../lib/XEvent';\r\nimport { FontAngleValueContextMenu } from './contextmenu/fontanglevalue/FontAngleValueContextMenu';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\nclass FontAngleValue extends DropInputItem {\r\n\r\n  constructor({\r\n    onChange = () => {},\r\n  }) {\r\n    super(`${cssPrefix}-tools-angle-value`);\r\n    this.onChange = onChange;\r\n    this.value = 0;\r\n    this.fontAngleValueContextMenu = new FontAngleValueContextMenu({\r\n      onUpdate: (item) => {\r\n        const { angleValue } = item;\r\n        this.setValue(angleValue);\r\n        this.onChange(angleValue);\r\n      },\r\n      el: this,\r\n    });\r\n    this.input.val(this.value);\r\n    this.input.attr('type', 'number');\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { icon } = this;\r\n    XEvent.unbind(icon);\r\n  }\r\n\r\n  bind() {\r\n    const { fontAngleValueContextMenu, icon, input } = this;\r\n    XEvent.bind(icon, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      if (fontAngleValueContextMenu.isClose()) {\r\n        fontAngleValueContextMenu.open();\r\n      } else {\r\n        fontAngleValueContextMenu.close();\r\n      }\r\n    });\r\n    XEvent.bind(input, Constant.SYSTEM_EVENT_TYPE.CHANGE, () => {\r\n      const target = PlainUtils.parseInt(input.val());\r\n      this.value = target;\r\n      this.onChange(target);\r\n    });\r\n  }\r\n\r\n  setValue(value) {\r\n    this.value = value;\r\n    return super.setValue(value);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.fontAngleValueContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FontAngleValue,\r\n};\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass FontAngle1 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle1`);\r\n    this.icon = new Icon('font-angle1');\r\n    this.children(this.icon);\r\n  }\r\n}\r\nexport {\r\n  FontAngle1,\r\n};\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass FontAngle2 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle2`);\r\n    this.icon = new Icon('font-angle2');\r\n    this.children(this.icon);\r\n  }\r\n}\r\nexport {\r\n  FontAngle2,\r\n};\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass FontAngle3 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle3`);\r\n    this.icon = new Icon('font-angle3');\r\n    this.children(this.icon);\r\n  }\r\n}\r\nexport {\r\n  FontAngle3,\r\n};\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass FontAngle4 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle4`);\r\n    this.icon = new Icon('font-angle4');\r\n    this.children(this.icon);\r\n  }\r\n}\r\nexport {\r\n  FontAngle4,\r\n};\r\n","import { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\nimport { Item } from '../../../base/Item';\r\n\r\nclass FontAngle5 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle5`);\r\n    this.icon = new Icon('font-angle5');\r\n    this.children(this.icon);\r\n  }\r\n}\r\nexport {\r\n  FontAngle5,\r\n};\r\n","import { Item } from '../../../base/Item';\r\nimport { cssPrefix } from '../../../../../../const/Constant';\r\nimport { Icon } from '../../../Icon';\r\n\r\nclass FontAngle6 extends Item {\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-font-angle6`);\r\n    this.icon = new Icon('font-angle6');\r\n    this.children(this.icon);\r\n  }\r\n}\r\nexport {\r\n  FontAngle6,\r\n};\r\n","import { ELContextMenu } from '../../../../../component/contextmenu/ELContextMenu';\r\nimport { FontAngleContextMenuItem } from './FontAngleContextMenuItem';\r\nimport { FontAngleDivider } from '../icon/fontangle/FontAngleDivider';\r\nimport { h } from '../../../../../lib/Element';\r\nimport { FontAngleValue } from '../../FontAngleValue';\r\nimport { Constant, cssPrefix } from '../../../../../const/Constant';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { FontAngle1 } from '../icon/fontangle/FontAngle1';\r\nimport { FontAngle2 } from '../icon/fontangle/FontAngle2';\r\nimport { FontAngle3 } from '../icon/fontangle/FontAngle3';\r\nimport { FontAngle4 } from '../icon/fontangle/FontAngle4';\r\nimport { FontAngle5 } from '../icon/fontangle/FontAngle5';\r\nimport { FontAngle6 } from '../icon/fontangle/FontAngle6';\r\nimport { XEvent } from '../../../../../lib/XEvent';\r\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\r\n\r\nclass FontAngleContextMenu extends ELContextMenu {\r\n\r\n  constructor(options = {}) {\r\n    super(`${cssPrefix}-font-angle-context-menu`, PlainUtils.mergeDeep({\r\n      onUpdateAngle: () => {},\r\n      onUpdateType: () => {},\r\n    }, options));\r\n    const div1 = h('div', `${cssPrefix}-font-angle-context-menu-type-icon-line`);\r\n    this.angle1 = new FontAngle1();\r\n    this.angle2 = new FontAngle2();\r\n    this.angle3 = new FontAngle3();\r\n    this.angle4 = new FontAngle4();\r\n    this.angle5 = new FontAngle5();\r\n    this.angle6 = new FontAngle6();\r\n    this.input = new FontAngleValue({\r\n      onChange: (angle) => {\r\n        this.options.onUpdateAngle(angle);\r\n      },\r\n    });\r\n    div1.children(this.angle1);\r\n    div1.children(this.angle2);\r\n    div1.children(new FontAngleDivider());\r\n    div1.children(this.angle4);\r\n    div1.children(this.angle3);\r\n    div1.children(this.angle6);\r\n    div1.children(this.angle5);\r\n    div1.children(new FontAngleDivider());\r\n    div1.children(this.input);\r\n    this.item = new FontAngleContextMenuItem();\r\n    this.item.children(div1);\r\n    this.item.removeClass('hover');\r\n    this.addItem(this.item);\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { angle1, angle2, angle3, angle4, angle5, angle6 } = this;\r\n    XEvent.unbind(angle1);\r\n    XEvent.unbind(angle2);\r\n    XEvent.unbind(angle3);\r\n    XEvent.unbind(angle4);\r\n    XEvent.unbind(angle5);\r\n    XEvent.unbind(angle6);\r\n  }\r\n\r\n  bind() {\r\n    const { angle1, angle2, angle3, angle4, angle5, angle6 } = this;\r\n    XEvent.bind(angle1, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdateType(BaseFont.TEXT_DIRECTION.HORIZONTAL);\r\n    });\r\n    XEvent.bind(angle2, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdateType(BaseFont.TEXT_DIRECTION.VERTICAL);\r\n    });\r\n    XEvent.bind(angle3, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdateAngle(-45);\r\n    });\r\n    XEvent.bind(angle4, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdateAngle(45);\r\n    });\r\n    XEvent.bind(angle5, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdateAngle(-90);\r\n    });\r\n    XEvent.bind(angle6, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.onUpdateAngle(90);\r\n    });\r\n  }\r\n\r\n  setValue(value) {\r\n    if (!PlainUtils.isNumber(value)) {\r\n      value = 0;\r\n    }\r\n    this.input.setValue(value);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.input.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FontAngleContextMenu,\r\n};\r\n","import { DropDownItem } from './base/DropDownItem';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { Icon } from './Icon';\r\nimport { FontAngleContextMenu } from './contextmenu/fontangle/FontAngleContextMenu';\r\n\r\nclass FontAngle extends DropDownItem {\r\n\r\n  constructor(options = {\r\n    contextMenu: {},\r\n  }) {\r\n    super(`${cssPrefix}-tools-angle`);\r\n    this.options = options;\r\n    this.icon = new Icon('angle');\r\n    this.setIcon(this.icon);\r\n    this.fontAngleContextMenu = new FontAngleContextMenu({\r\n      el: this,\r\n      ...this.options.contextMenu,\r\n    });\r\n  }\r\n\r\n  setValue(value) {\r\n    this.fontAngleContextMenu.setValue(value);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.fontAngleContextMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  FontAngle,\r\n};\r\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { Undo } from './tools/Undo';\r\nimport { Redo } from './tools/Redo';\r\nimport { PaintFormat } from './tools/PaintFormat';\r\nimport { ClearFormat } from './tools/ClearFormat';\r\nimport { Format } from './tools/Format';\r\nimport { Font } from './tools/Font';\r\nimport { FontSize } from './tools/FontSize';\r\nimport { FontBold } from './tools/FontBold';\r\nimport { FontItalic } from './tools/FontItalic';\r\nimport { UnderLine } from './tools/UnderLine';\r\nimport { FontStrike } from './tools/FontStrike';\r\nimport { FontColor } from './tools/FontColor';\r\nimport { FillColor } from './tools/FillColor';\r\nimport { Border } from './tools/Border';\r\nimport { Merge } from './tools/Merge';\r\nimport { HorizontalAlign } from './tools/HorizontalAlign';\r\nimport { VerticalAlign } from './tools/VerticalAlign';\r\nimport { TextWrapping } from './tools/TextWrapping';\r\nimport { Fixed } from './tools/Fixed';\r\nimport { Filter } from './tools/Filter';\r\nimport { Functions } from './tools/Functions';\r\nimport { XEvent } from '../../lib/XEvent';\r\nimport { ElPopUp } from '../../component/elpopup/ElPopUp';\r\nimport { LINE_TYPE } from '../../canvas/Line';\r\nimport { Icon } from './tools/Icon';\r\nimport { Cell } from '../table/tablecell/Cell';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { Scale } from './tools/Scale';\r\nimport { BaseFont } from '../../canvas/font/BaseFont';\r\nimport { XSelectItem } from '../table/xscreenitems/xselect/XSelectItem';\r\nimport { XDraw } from '../../canvas/XDraw';\r\nimport { Alert } from '../../component/alert/Alert';\r\nimport { XFilter } from '../table/xscreenitems/xfilter/XFilter';\r\nimport { XCopyStyle } from '../table/xscreenitems/xcopystyle/XCopyStyle';\r\nimport { Confirm } from '../../component/confirm/Confirm';\r\nimport { FontAngle } from './tools/FontAngle';\r\nimport { Divider } from './tools/base/Divider';\r\n\r\nclass TopMenu extends Widget {\r\n\r\n  constructor(workTop) {\r\n    super(`${cssPrefix}-tools-menu`);\r\n\r\n    this.workTop = workTop;\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n\r\n    // tools\r\n    this.undo = new Undo();\r\n    this.redo = new Redo();\r\n    this.scale = new Scale({\r\n      contextMenu: {\r\n        onUpdate: (value) => {\r\n          this.scale.setTitle(`${value}%`);\r\n          const { body } = this.workTop.work;\r\n          body.setScale(value / 100);\r\n        },\r\n      },\r\n    });\r\n    this.paintFormat = new PaintFormat();\r\n    this.clearFormat = new ClearFormat();\r\n    this.format = new Format({\r\n      contextMenu: {\r\n        onUpdate: (format, title) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const {\r\n            xScreen,\r\n          } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          this.format.setTitle(title);\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                cell.format = format;\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.font = new Font({\r\n      contextMenu: {\r\n        onUpdate: (type) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const {\r\n            xScreen,\r\n          } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          this.font.setTitle(type);\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                cell.fontAttr.name = type;\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.dprFontSize = new FontSize({\r\n      contextMenu: {\r\n        onUpdate: (size) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const { xScreen } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          this.dprFontSize.setTitle(size);\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                cell.fontAttr.size = size;\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.fontColor = new FontColor({\r\n      contextMenu: {\r\n        onUpdate: (color) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const {\r\n            xScreen,\r\n          } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          this.fontColor.setColor(color);\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                cell.fontAttr.color = color;\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.fillColor = new FillColor({\r\n      contextMenu: {\r\n        onUpdate: (color) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const {\r\n            xScreen,\r\n          } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          this.fillColor.setColor(color);\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                cell.background = color;\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.border = new Border({\r\n      contextMenu: {\r\n        onUpdate: (borderType, color, lineType) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const { xScreen } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const xTableStyle = table.getXTableStyle();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            const rect = selectRange;\r\n            let widthType = XDraw.LINE_WIDTH_TYPE.low;\r\n            let type = LINE_TYPE.SOLID_LINE;\r\n            switch (lineType) {\r\n              case 'line1':\r\n                widthType = XDraw.LINE_WIDTH_TYPE.low;\r\n                type = LINE_TYPE.SOLID_LINE;\r\n                break;\r\n              case 'line2':\r\n                widthType = XDraw.LINE_WIDTH_TYPE.medium;\r\n                type = LINE_TYPE.SOLID_LINE;\r\n                break;\r\n              case 'line3':\r\n                widthType = XDraw.LINE_WIDTH_TYPE.high;\r\n                type = LINE_TYPE.SOLID_LINE;\r\n                break;\r\n              case 'line4':\r\n                type = LINE_TYPE.DOTTED_LINE;\r\n                break;\r\n              case 'line5':\r\n                type = LINE_TYPE.POINT_LINE;\r\n                break;\r\n              case 'line6':\r\n                type = LINE_TYPE.DOUBLE_LINE;\r\n                break;\r\n            }\r\n            const angleCells = [];\r\n            switch (borderType) {\r\n              case 'border1':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    borderAttr.setAllDisplay(true);\r\n                    borderAttr.setAllColor(color);\r\n                    borderAttr.setAllWidthType(widthType);\r\n                    borderAttr.setAllType(type);\r\n                    cellDataProxy.setCell(ri, ci, newCell);\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, ci, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  borderAttr.setAllDisplay(true);\r\n                  borderAttr.setAllColor(color);\r\n                  borderAttr.setAllWidthType(widthType);\r\n                  borderAttr.setAllType(type);\r\n                  cellDataProxy.setCell(ri, ci, newCell);\r\n                });\r\n                break;\r\n              case 'border2':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    if (ri !== rect.sri) {\r\n                      borderAttr.setTDisplay(true);\r\n                      borderAttr.setTColor(color);\r\n                      borderAttr.setTWidthType(widthType);\r\n                      borderAttr.setTType(type);\r\n                    }\r\n                    if (ri !== rect.eri) {\r\n                      borderAttr.setBDisplay(true);\r\n                      borderAttr.setBColor(color);\r\n                      borderAttr.setBWidthType(widthType);\r\n                      borderAttr.setBType(type);\r\n                    }\r\n                    if (ci !== rect.sci) {\r\n                      borderAttr.setLDisplay(true);\r\n                      borderAttr.setLColor(color);\r\n                      borderAttr.setLWidthType(widthType);\r\n                      borderAttr.setLType(type);\r\n                    }\r\n                    if (ci !== rect.eci) {\r\n                      borderAttr.setRDisplay(true);\r\n                      borderAttr.setRColor(color);\r\n                      borderAttr.setRWidthType(widthType);\r\n                      borderAttr.setRType(type);\r\n                    }\r\n                    cellDataProxy.setCell(ri, ci, newCell);\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, ci, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  if (ri !== rect.sri) {\r\n                    borderAttr.setTDisplay(true);\r\n                    borderAttr.setTColor(color);\r\n                    borderAttr.setTWidthType(widthType);\r\n                    borderAttr.setTType(type);\r\n                  }\r\n                  if (ri !== rect.eri) {\r\n                    borderAttr.setBDisplay(true);\r\n                    borderAttr.setBColor(color);\r\n                    borderAttr.setBWidthType(widthType);\r\n                    borderAttr.setBType(type);\r\n                  }\r\n                  if (ci !== rect.sci) {\r\n                    borderAttr.setLDisplay(true);\r\n                    borderAttr.setLColor(color);\r\n                    borderAttr.setLWidthType(widthType);\r\n                    borderAttr.setLType(type);\r\n                  }\r\n                  if (ci !== rect.eci) {\r\n                    borderAttr.setRDisplay(true);\r\n                    borderAttr.setRColor(color);\r\n                    borderAttr.setRWidthType(widthType);\r\n                    borderAttr.setRType(type);\r\n                  }\r\n                  cellDataProxy.setCell(ri, ci, newCell);\r\n                });\r\n                break;\r\n              case 'border3':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    if (ri !== rect.sri) {\r\n                      borderAttr.setTDisplay(true);\r\n                      borderAttr.setTColor(color);\r\n                      borderAttr.setTWidthType(widthType);\r\n                      borderAttr.setTType(type);\r\n                    }\r\n                    if (ri !== rect.eri) {\r\n                      borderAttr.setBDisplay(true);\r\n                      borderAttr.setBColor(color);\r\n                      borderAttr.setBWidthType(widthType);\r\n                      borderAttr.setBType(type);\r\n                    }\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  if (ri !== rect.sri) {\r\n                    borderAttr.setTDisplay(true);\r\n                    borderAttr.setTColor(color);\r\n                    borderAttr.setTWidthType(widthType);\r\n                    borderAttr.setTType(type);\r\n                  }\r\n                  if (ri !== rect.eri) {\r\n                    borderAttr.setBDisplay(true);\r\n                    borderAttr.setBColor(color);\r\n                    borderAttr.setBWidthType(widthType);\r\n                    borderAttr.setBType(type);\r\n                  }\r\n                });\r\n                break;\r\n              case 'border4':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    if (ci !== rect.sci) {\r\n                      borderAttr.setLDisplay(true);\r\n                      borderAttr.setLColor(color);\r\n                      borderAttr.setLWidthType(widthType);\r\n                      borderAttr.setLType(type);\r\n                    }\r\n                    if (ci !== rect.eci) {\r\n                      borderAttr.setRDisplay(true);\r\n                      borderAttr.setRColor(color);\r\n                      borderAttr.setRWidthType(widthType);\r\n                      borderAttr.setRType(type);\r\n                    }\r\n                    cellDataProxy.setCell(ri, ci, newCell);\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, ci, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  if (ci !== rect.sci) {\r\n                    borderAttr.setLDisplay(true);\r\n                    borderAttr.setLColor(color);\r\n                    borderAttr.setLWidthType(widthType);\r\n                    borderAttr.setLType(type);\r\n                  }\r\n                  if (ci !== rect.eci) {\r\n                    borderAttr.setRDisplay(true);\r\n                    borderAttr.setRColor(color);\r\n                    borderAttr.setRWidthType(widthType);\r\n                    borderAttr.setRType(type);\r\n                  }\r\n                  cellDataProxy.setCell(ri, ci, newCell);\r\n                });\r\n                break;\r\n              case 'border5':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    if (ri === rect.sri) {\r\n                      borderAttr.setTDisplay(true);\r\n                      borderAttr.setTColor(color);\r\n                      borderAttr.setTWidthType(widthType);\r\n                      borderAttr.setTType(type);\r\n                    }\r\n                    if (ri === rect.eri) {\r\n                      borderAttr.setBDisplay(true);\r\n                      borderAttr.setBColor(color);\r\n                      borderAttr.setBWidthType(widthType);\r\n                      borderAttr.setBType(type);\r\n                    }\r\n                    if (ci === rect.sci) {\r\n                      borderAttr.setLDisplay(true);\r\n                      borderAttr.setLColor(color);\r\n                      borderAttr.setLWidthType(widthType);\r\n                      borderAttr.setLType(type);\r\n                    }\r\n                    if (ci === rect.eci) {\r\n                      borderAttr.setRDisplay(true);\r\n                      borderAttr.setRColor(color);\r\n                      borderAttr.setRWidthType(widthType);\r\n                      borderAttr.setRType(type);\r\n                    }\r\n                    cellDataProxy.setCell(ri, ci, newCell);\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, ci, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  if (ri === rect.sri) {\r\n                    borderAttr.setTDisplay(true);\r\n                    borderAttr.setTColor(color);\r\n                    borderAttr.setTWidthType(widthType);\r\n                    borderAttr.setTType(type);\r\n                  }\r\n                  if (ri === rect.eri) {\r\n                    borderAttr.setBDisplay(true);\r\n                    borderAttr.setBColor(color);\r\n                    borderAttr.setBWidthType(widthType);\r\n                    borderAttr.setBType(type);\r\n                  }\r\n                  if (ci === rect.sci) {\r\n                    borderAttr.setLDisplay(true);\r\n                    borderAttr.setLColor(color);\r\n                    borderAttr.setLWidthType(widthType);\r\n                    borderAttr.setLType(type);\r\n                  }\r\n                  if (ci === rect.eci) {\r\n                    borderAttr.setRDisplay(true);\r\n                    borderAttr.setRColor(color);\r\n                    borderAttr.setRWidthType(widthType);\r\n                    borderAttr.setRType(type);\r\n                  }\r\n                  cellDataProxy.setCell(ri, ci, newCell);\r\n                });\r\n                break;\r\n              case 'border6':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    if (ci === rect.sci) {\r\n                      borderAttr.setLDisplay(true);\r\n                      borderAttr.setLColor(color);\r\n                      borderAttr.setLWidthType(widthType);\r\n                      borderAttr.setLType(type);\r\n                    }\r\n                    cellDataProxy.setCell(ri, ci, newCell);\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, ci, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  if (ci === rect.sci) {\r\n                    borderAttr.setLDisplay(true);\r\n                    borderAttr.setLColor(color);\r\n                    borderAttr.setLWidthType(widthType);\r\n                    borderAttr.setLType(type);\r\n                  }\r\n                  cellDataProxy.setCell(ri, ci, newCell);\r\n                });\r\n                break;\r\n              case 'border7':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    if (ri === rect.sri) {\r\n                      borderAttr.setTDisplay(true);\r\n                      borderAttr.setTColor(color);\r\n                      borderAttr.setTWidthType(widthType);\r\n                      borderAttr.setTType(type);\r\n                    }\r\n                    cellDataProxy.setCell(ri, ci, newCell);\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, ci, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  if (ri === rect.sri) {\r\n                    borderAttr.setTDisplay(true);\r\n                    borderAttr.setTColor(color);\r\n                    borderAttr.setTWidthType(widthType);\r\n                    borderAttr.setTType(type);\r\n                  }\r\n                  cellDataProxy.setCell(ri, ci, newCell);\r\n                });\r\n                break;\r\n              case 'border8':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    if (ci === rect.eci) {\r\n                      borderAttr.setRDisplay(true);\r\n                      borderAttr.setRColor(color);\r\n                      borderAttr.setRWidthType(widthType);\r\n                      borderAttr.setRType(type);\r\n                    }\r\n                    cellDataProxy.setCell(ri, ci, newCell);\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, ci, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  if (ci === rect.eci) {\r\n                    borderAttr.setRDisplay(true);\r\n                    borderAttr.setRColor(color);\r\n                    borderAttr.setRWidthType(widthType);\r\n                    borderAttr.setRType(type);\r\n                  }\r\n                  cellDataProxy.setCell(ri, ci, newCell);\r\n                });\r\n                break;\r\n              case 'border9':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    if (ri === rect.eri) {\r\n                      borderAttr.setBDisplay(true);\r\n                      borderAttr.setBColor(color);\r\n                      borderAttr.setBWidthType(widthType);\r\n                      borderAttr.setBType(type);\r\n                    }\r\n                    cellDataProxy.setCell(ri, ci, newCell);\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, ci, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  if (ri === rect.eri) {\r\n                    borderAttr.setBDisplay(true);\r\n                    borderAttr.setBColor(color);\r\n                    borderAttr.setBWidthType(widthType);\r\n                    borderAttr.setBType(type);\r\n                  }\r\n                  cellDataProxy.setCell(ri, ci, newCell);\r\n                });\r\n                break;\r\n              case 'border10':\r\n                operateCellsHelper.getCellOrNewCellByViewRange({\r\n                  rectRange: rect,\r\n                  callback: (ri, ci, cell) => {\r\n                    const newCell = cell.clone();\r\n                    if (xTableStyle.hasAngleCell(ri)) {\r\n                      if (xTableStyle.isAngleBarCell(ri, ci)) {\r\n                        angleCells.push({ ri, ci, newCell });\r\n                        return;\r\n                      }\r\n                    }\r\n                    const { borderAttr } = newCell;\r\n                    borderAttr.setAllDisplay(false);\r\n                    cellDataProxy.setCell(ri, ci, newCell);\r\n                  },\r\n                });\r\n                angleCells.forEach((options) => {\r\n                  const { ri, ci, newCell } = options;\r\n                  const { borderAttr } = newCell;\r\n                  borderAttr.setAllDisplay(false);\r\n                  cellDataProxy.setCell(ri, ci, newCell);\r\n                });\r\n                break;\r\n            }\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.fontBold = new FontBold();\r\n    this.fontItalic = new FontItalic();\r\n    this.underLine = new UnderLine();\r\n    this.fontStrike = new FontStrike();\r\n    this.merge = new Merge();\r\n    this.horizontalAlign = new HorizontalAlign({\r\n      contextMenu: {\r\n        onUpdate: (type) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const {\r\n            xScreen,\r\n          } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          switch (type) {\r\n            case BaseFont.ALIGN.left:\r\n              this.horizontalAlign.setIcon(new Icon('align-left'));\r\n              break;\r\n            case BaseFont.ALIGN.center:\r\n              this.horizontalAlign.setIcon(new Icon('align-center'));\r\n              break;\r\n            case BaseFont.ALIGN.right:\r\n              this.horizontalAlign.setIcon(new Icon('align-right'));\r\n              break;\r\n            default: break;\r\n          }\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                cell.fontAttr.align = type;\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.verticalAlign = new VerticalAlign({\r\n      contextMenu: {\r\n        onUpdate: (type) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const {\r\n            xScreen,\r\n          } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          switch (type) {\r\n            case BaseFont.VERTICAL_ALIGN.top:\r\n              this.verticalAlign.setIcon(new Icon('align-top'));\r\n              break;\r\n            case BaseFont.VERTICAL_ALIGN.center:\r\n              this.verticalAlign.setIcon(new Icon('align-middle'));\r\n              break;\r\n            case BaseFont.VERTICAL_ALIGN.bottom:\r\n              this.verticalAlign.setIcon(new Icon('align-bottom'));\r\n              break;\r\n            default: break;\r\n          }\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                cell.fontAttr.verticalAlign = type;\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.textWrapping = new TextWrapping({\r\n      contextMenu: {\r\n        onUpdate: (type) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const {\r\n            xScreen,\r\n          } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          let icon;\r\n          switch (type) {\r\n            case BaseFont.TEXT_WRAP.TRUNCATE:\r\n              icon = new Icon('truncate');\r\n              break;\r\n            case BaseFont.TEXT_WRAP.WORD_WRAP:\r\n              icon = new Icon('text-wrap');\r\n              break;\r\n            case BaseFont.TEXT_WRAP.OVER_FLOW:\r\n              icon = new Icon('overflow');\r\n              break;\r\n          }\r\n          this.textWrapping.setIcon(icon);\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                cell.fontAttr.textWrap = type;\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.fixed = new Fixed({\r\n      contextMenu: {\r\n        onUpdate: (type) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const { xScreen } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          switch (type) {\r\n            case 'ROW': {\r\n              if (this.fixed.rowStatus) {\r\n                table.setFixedRow(-1);\r\n              } else if (selectRange) {\r\n                const scrollView = table.getScrollView();\r\n                const { sri } = selectRange;\r\n                if (sri < scrollView.eri - 2 && sri >= scrollView.sri) {\r\n                  table.setFixedRow(sri);\r\n                } else {\r\n                  new Alert({ message: '无法在当前区域内冻结单元格, 请重新选择冻结区域' }).open();\r\n                }\r\n              }\r\n              break;\r\n            }\r\n            case 'COL': {\r\n              if (this.fixed.colStatus) {\r\n                table.setFixedCol(-1);\r\n              } else if (selectRange) {\r\n                const scrollView = table.getScrollView();\r\n                const { sci } = selectRange;\r\n                if (sci < scrollView.eci - 2 && sci >= scrollView.sci) {\r\n                  table.setFixedCol(sci);\r\n                } else {\r\n                  new Alert({ message: '无法在当前区域内冻结单元格, 请重新选择冻结区域' }).open();\r\n                }\r\n              }\r\n              break;\r\n            }\r\n            case 'ROW1': {\r\n              table.setFixedRow(0, 0);\r\n              break;\r\n            }\r\n            case 'ROW2': {\r\n              table.setFixedRow(1, 0);\r\n              break;\r\n            }\r\n            case 'COL1': {\r\n              table.setFixedCol(0, 0);\r\n              break;\r\n            }\r\n            case 'COL2': {\r\n              table.setFixedCol(1, 0);\r\n            }\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.filter = new Filter();\r\n    this.functions = new Functions();\r\n    this.fontAngle = new FontAngle({\r\n      contextMenu: {\r\n        onUpdateAngle: (angle) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const { xScreen } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                if (angle === 0) {\r\n                  cell.fontAttr.angle = angle;\r\n                  cell.fontAttr.direction = BaseFont.TEXT_DIRECTION.HORIZONTAL;\r\n                } else {\r\n                  cell.borderAttr.updateMaxIndex();\r\n                  cell.fontAttr.angle = angle;\r\n                  cell.fontAttr.direction = BaseFont.TEXT_DIRECTION.ANGLE;\r\n                }\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n        onUpdateType: (type) => {\r\n          const sheet = sheetView.getActiveSheet();\r\n          const { table } = sheet;\r\n          const { xScreen } = table;\r\n          const operateCellsHelper = table.getOperateCellsHelper();\r\n          const { tableDataSnapshot } = table;\r\n          const xSelect = xScreen.findType(XSelectItem);\r\n          const { selectRange } = xSelect;\r\n          if (selectRange) {\r\n            tableDataSnapshot.begin();\r\n            const { cellDataProxy } = tableDataSnapshot;\r\n            operateCellsHelper.getCellOrNewCellByViewRange({\r\n              rectRange: selectRange,\r\n              callback: (r, c, origin) => {\r\n                const cell = origin.clone();\r\n                cell.fontAttr.angle = 0;\r\n                cell.fontAttr.direction = type;\r\n                cellDataProxy.setCell(r, c, cell);\r\n              },\r\n            });\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          }\r\n        },\r\n      },\r\n    });\r\n    this.children(this.undo);\r\n    this.children(this.redo);\r\n    this.children(new Divider());\r\n    this.children(this.scale);\r\n    this.children(this.paintFormat);\r\n    this.children(this.clearFormat);\r\n    this.children(this.format);\r\n    this.children(new Divider());\r\n    this.children(this.font);\r\n    this.children(this.dprFontSize);\r\n    this.children(new Divider());\r\n    this.children(this.fontBold);\r\n    this.children(this.fontItalic);\r\n    this.children(this.underLine);\r\n    this.children(this.fontStrike);\r\n    this.children(this.fontColor);\r\n    this.children(new Divider());\r\n    this.children(this.fillColor);\r\n    this.children(this.border);\r\n    this.children(this.merge);\r\n    this.children(new Divider());\r\n    this.children(this.horizontalAlign);\r\n    this.children(this.verticalAlign);\r\n    this.children(this.textWrapping);\r\n    this.children(this.fontAngle);\r\n    this.children(new Divider());\r\n    this.children(this.fixed);\r\n    this.children(this.filter);\r\n    this.children(this.functions);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { body } = this.workTop.work;\r\n    XEvent.bind(body);\r\n    XEvent.bind(this.scale);\r\n    XEvent.bind(this.undo);\r\n    XEvent.bind(this.redo);\r\n    XEvent.bind(this.paintFormat);\r\n    XEvent.bind(this.clearFormat);\r\n    XEvent.bind(this.format);\r\n    XEvent.bind(this.font);\r\n    XEvent.bind(this.dprFontSize);\r\n    XEvent.bind(this.fontBold);\r\n    XEvent.bind(this.fontItalic);\r\n    XEvent.bind(this.underLine);\r\n    XEvent.bind(this.fontStrike);\r\n    XEvent.bind(this.fontColor);\r\n    XEvent.bind(this.fillColor);\r\n    XEvent.bind(this.border);\r\n    XEvent.bind(this.merge);\r\n    XEvent.bind(this.horizontalAlign);\r\n    XEvent.bind(this.verticalAlign);\r\n    XEvent.bind(this.textWrapping);\r\n    XEvent.bind(this.fixed);\r\n    XEvent.bind(this.filter);\r\n  }\r\n\r\n  bind() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    XEvent.bind(body, Constant.WORK_BODY_EVENT_TYPE.CHANGE_ACTIVE, () => {\r\n      this.setStatus();\r\n    });\r\n    XEvent.bind(body, Constant.TABLE_EVENT_TYPE.SELECT_DOWN, () => {\r\n      this.setFormatStatus();\r\n      this.setFontStatus();\r\n      this.setFontSizeStatus();\r\n      this.setFontBoldStatus();\r\n      this.setFontItalicStatus();\r\n      this.setUnderLineStatus();\r\n      this.setFontStrikeStatus();\r\n      this.setFontColorStatus();\r\n      this.setFillColorStatus();\r\n      this.setHorizontalAlignStatus();\r\n      this.setVerticalAlignStatus();\r\n      this.setTextWrappingStatus();\r\n      this.setFontAngleStatus();\r\n    });\r\n    XEvent.bind(body, Constant.TABLE_EVENT_TYPE.DATA_CHANGE, () => {\r\n      this.setStatus();\r\n    });\r\n    XEvent.bind(body, Constant.TABLE_EVENT_TYPE.FIXED_CHANGE, () => {\r\n      this.setFixedStatus();\r\n    });\r\n    XEvent.bind(this.scale, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { scale } = this;\r\n      const { scaleContextMenu } = scale;\r\n      const { elPopUp } = scaleContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (scaleContextMenu.isClose()) {\r\n        scaleContextMenu.open();\r\n      } else {\r\n        scaleContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.undo, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const { tableDataSnapshot } = table;\r\n      if (tableDataSnapshot.canBack()) tableDataSnapshot.back();\r\n    });\r\n    XEvent.bind(this.redo, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const { tableDataSnapshot } = table;\r\n      if (tableDataSnapshot.canGo()) tableDataSnapshot.go();\r\n    });\r\n    XEvent.bind(this.paintFormat, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const { xScreen } = table;\r\n      const xSelect = xScreen.findType(XSelectItem);\r\n      const { selectRange } = xSelect;\r\n      if (PlainUtils.isUnDef(selectRange)) {\r\n        return;\r\n      }\r\n      const { cellMergeCopyHelper } = table;\r\n      const { tableDataSnapshot } = table;\r\n      const xCopyStyle = xScreen.findType(XCopyStyle);\r\n      const callback = () => {\r\n        xCopyStyle.hideCopyStyle();\r\n        // 清除复制\r\n        this.paintFormat.active(false);\r\n        this.paintFormat.removeSheet(sheet);\r\n        // 复制区域\r\n        const originViewRange = xCopyStyle.selectRange.clone();\r\n        const targetViewRange = xSelect.selectRange.clone();\r\n        const [orSize, ocSize] = originViewRange.size();\r\n        const [trSize, tcSize] = targetViewRange.size();\r\n        const rSize = orSize > trSize ? orSize : trSize;\r\n        const cSize = ocSize > tcSize ? ocSize : tcSize;\r\n        targetViewRange.eri = targetViewRange.sri + (rSize - 1);\r\n        targetViewRange.eci = targetViewRange.sci + (cSize - 1);\r\n        // 开始复制\r\n        tableDataSnapshot.begin();\r\n        cellMergeCopyHelper.copyMergeContent({\r\n          originViewRange,\r\n          targetViewRange,\r\n        });\r\n        cellMergeCopyHelper.copyStylesContent({\r\n          originViewRange,\r\n          targetViewRange,\r\n        });\r\n        tableDataSnapshot.end();\r\n        table.render();\r\n        // 删除事件监听\r\n        XEvent.unbind(table, Constant.TABLE_EVENT_TYPE.SELECT_OVER, callback);\r\n      };\r\n      if (this.paintFormat.includeSheet(sheet)) {\r\n        xCopyStyle.hideCopyStyle();\r\n        this.paintFormat.active(false);\r\n        this.paintFormat.removeSheet(sheet);\r\n        XEvent.unbind(table, Constant.TABLE_EVENT_TYPE.SELECT_OVER, callback);\r\n      } else {\r\n        xCopyStyle.showCopyStyle();\r\n        this.paintFormat.active(true);\r\n        this.paintFormat.addSheet(sheet);\r\n        XEvent.bind(table, Constant.TABLE_EVENT_TYPE.SELECT_OVER, callback);\r\n      }\r\n    });\r\n    XEvent.bind(this.clearFormat, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const {\r\n        xScreen,\r\n      } = table;\r\n      const operateCellsHelper = table.getOperateCellsHelper();\r\n      const { tableDataSnapshot } = table;\r\n      const xSelect = xScreen.findType(XSelectItem);\r\n      const { selectRange } = xSelect;\r\n      if (selectRange) {\r\n        tableDataSnapshot.begin();\r\n        const { cellDataProxy } = tableDataSnapshot;\r\n        operateCellsHelper.getCellOrNewCellByViewRange({\r\n          rectRange: selectRange,\r\n          callback: (r, c, origin) => {\r\n            const { text } = origin;\r\n            cellDataProxy.setCell(r, c, new Cell({ text }));\r\n          },\r\n        });\r\n        tableDataSnapshot.end();\r\n        table.render();\r\n      }\r\n    });\r\n    XEvent.bind(this.format, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { format } = this;\r\n      const { formatContextMenu } = format;\r\n      const { elPopUp } = formatContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (formatContextMenu.isClose()) {\r\n        formatContextMenu.open();\r\n      } else {\r\n        formatContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.font, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { font } = this;\r\n      const { fontContextMenu } = font;\r\n      const { elPopUp } = fontContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (fontContextMenu.isClose()) {\r\n        fontContextMenu.open();\r\n      } else {\r\n        fontContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.dprFontSize, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { dprFontSize } = this;\r\n      const { fontSizeContextMenu } = dprFontSize;\r\n      const { elPopUp } = fontSizeContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (fontSizeContextMenu.isClose()) {\r\n        fontSizeContextMenu.open();\r\n      } else {\r\n        fontSizeContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.fontBold, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const {\r\n        xScreen,\r\n      } = table;\r\n      const operateCellsHelper = table.getOperateCellsHelper();\r\n      const cells = table.getTableCells();\r\n      const { tableDataSnapshot } = table;\r\n      const xSelect = xScreen.findType(XSelectItem);\r\n      const { selectRange } = xSelect;\r\n      if (selectRange) {\r\n        const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n        const bold = !firstCell.fontAttr.bold;\r\n        tableDataSnapshot.begin();\r\n        const { cellDataProxy } = tableDataSnapshot;\r\n        operateCellsHelper.getCellOrNewCellByViewRange({\r\n          rectRange: selectRange,\r\n          callback: (r, c, origin) => {\r\n            const cell = origin.clone();\r\n            cell.fontAttr.bold = bold;\r\n            cellDataProxy.setCell(r, c, cell);\r\n          },\r\n        });\r\n        tableDataSnapshot.end();\r\n        table.render();\r\n      }\r\n    });\r\n    XEvent.bind(this.fontItalic, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const {\r\n        xScreen,\r\n      } = table;\r\n      const operateCellsHelper = table.getOperateCellsHelper();\r\n      const cells = table.getTableCells();\r\n      const { tableDataSnapshot } = table;\r\n      const xSelect = xScreen.findType(XSelectItem);\r\n      const { selectRange } = xSelect;\r\n      if (selectRange) {\r\n        const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n        const italic = !firstCell.fontAttr.italic;\r\n        tableDataSnapshot.begin();\r\n        const { cellDataProxy } = tableDataSnapshot;\r\n        operateCellsHelper.getCellOrNewCellByViewRange({\r\n          rectRange: selectRange,\r\n          callback: (r, c, origin) => {\r\n            const cell = origin.clone();\r\n            cell.fontAttr.italic = italic;\r\n            cellDataProxy.setCell(r, c, cell);\r\n          },\r\n        });\r\n        tableDataSnapshot.end();\r\n        table.render();\r\n      }\r\n    });\r\n    XEvent.bind(this.underLine, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const {\r\n        xScreen,\r\n      } = table;\r\n      const operateCellsHelper = table.getOperateCellsHelper();\r\n      const cells = table.getTableCells();\r\n      const { tableDataSnapshot } = table;\r\n      const xSelect = xScreen.findType(XSelectItem);\r\n      const { selectRange } = xSelect;\r\n      if (selectRange) {\r\n        const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n        const underline = !firstCell.fontAttr.underline;\r\n        tableDataSnapshot.begin();\r\n        const { cellDataProxy } = tableDataSnapshot;\r\n        operateCellsHelper.getCellOrNewCellByViewRange({\r\n          rectRange: selectRange,\r\n          callback: (r, c, origin) => {\r\n            const cell = origin.clone();\r\n            cell.fontAttr.underline = underline;\r\n            cellDataProxy.setCell(r, c, cell);\r\n          },\r\n        });\r\n        tableDataSnapshot.end();\r\n        table.render();\r\n      }\r\n    });\r\n    XEvent.bind(this.fontStrike, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const {\r\n        xScreen,\r\n      } = table;\r\n      const operateCellsHelper = table.getOperateCellsHelper();\r\n      const cells = table.getTableCells();\r\n      const { tableDataSnapshot } = table;\r\n      const xSelect = xScreen.findType(XSelectItem);\r\n      const { selectRange } = xSelect;\r\n      if (selectRange) {\r\n        const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n        const strikethrough = !firstCell.fontAttr.strikethrough;\r\n        tableDataSnapshot.begin();\r\n        const { cellDataProxy } = tableDataSnapshot;\r\n        operateCellsHelper.getCellOrNewCellByViewRange({\r\n          rectRange: selectRange,\r\n          callback: (r, c, origin) => {\r\n            const cell = origin.clone();\r\n            cell.fontAttr.strikethrough = strikethrough;\r\n            cellDataProxy.setCell(r, c, cell);\r\n          },\r\n        });\r\n        tableDataSnapshot.end();\r\n        table.render();\r\n      }\r\n    });\r\n    XEvent.bind(this.fontColor, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { fontColor } = this;\r\n      const { fontColorContextMenu } = fontColor;\r\n      const { elPopUp } = fontColorContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (fontColorContextMenu.isClose()) {\r\n        fontColorContextMenu.open();\r\n      } else {\r\n        fontColorContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.fillColor, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { fillColor } = this;\r\n      const { fillColorContextMenu } = fillColor;\r\n      const { elPopUp } = fillColorContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (fillColorContextMenu.isClose()) {\r\n        fillColorContextMenu.open();\r\n      } else {\r\n        fillColorContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.border, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { border } = this;\r\n      const { borderTypeContextMenu } = border;\r\n      const { elPopUp } = borderTypeContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (borderTypeContextMenu.isClose()) {\r\n        borderTypeContextMenu.open();\r\n      } else {\r\n        borderTypeContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.merge, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const {\r\n        xScreen,\r\n      } = table;\r\n      const merges = table.getTableMerges();\r\n      const cells = table.getTableCells();\r\n      const { tableDataSnapshot } = table;\r\n      const xSelect = xScreen.findType(XSelectItem);\r\n      const { selectRange } = xSelect;\r\n      if (selectRange) {\r\n        const merge = selectRange.clone();\r\n        const find = merges.getFirstIncludes(merge.sri, merge.sci);\r\n        const { mergeDataProxy } = tableDataSnapshot;\r\n        if (PlainUtils.isNotUnDef(find) && merge.equals(find)) {\r\n          tableDataSnapshot.begin();\r\n          mergeDataProxy.deleteMerge(find);\r\n          tableDataSnapshot.end();\r\n          table.render();\r\n        } else if (merge.multiple()) {\r\n          if (cells.emptyRectRange(merge)) {\r\n            tableDataSnapshot.begin();\r\n            mergeDataProxy.addMerge(merge);\r\n            tableDataSnapshot.end();\r\n            table.render();\r\n          } else {\r\n            new Confirm({\r\n              message: '非空单元格合并将使用左上角单元格内容',\r\n              ok: () => {\r\n                tableDataSnapshot.begin();\r\n                mergeDataProxy.addMerge(merge);\r\n                tableDataSnapshot.end();\r\n                table.render();\r\n              },\r\n            }).open();\r\n          }\r\n        }\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.horizontalAlign, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { horizontalAlign } = this;\r\n      const { horizontalContextMenu } = horizontalAlign;\r\n      const { elPopUp } = horizontalContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (horizontalContextMenu.isClose()) {\r\n        horizontalContextMenu.open();\r\n      } else {\r\n        horizontalContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.verticalAlign, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { verticalAlign } = this;\r\n      const { verticalContextMenu } = verticalAlign;\r\n      const { elPopUp } = verticalContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (verticalContextMenu.isClose()) {\r\n        verticalContextMenu.open();\r\n      } else {\r\n        verticalContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.textWrapping, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { textWrapping } = this;\r\n      const { textWrappingContextMenu } = textWrapping;\r\n      const { elPopUp } = textWrappingContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (textWrappingContextMenu.isClose()) {\r\n        textWrappingContextMenu.open();\r\n      } else {\r\n        textWrappingContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.fixed, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { fixed } = this;\r\n      const { fixedContextMenu } = fixed;\r\n      const { elPopUp } = fixedContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (fixedContextMenu.isClose()) {\r\n        fixedContextMenu.open();\r\n      } else {\r\n        fixedContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n    XEvent.bind(this.filter, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const sheet = sheetView.getActiveSheet();\r\n      const { table } = sheet;\r\n      const { xScreen } = table;\r\n      const filter = xScreen.findType(XFilter);\r\n      if (filter.display) {\r\n        filter.hideFilter();\r\n        this.filter.active(filter.display);\r\n      } else {\r\n        filter.openFilter();\r\n        this.filter.active(filter.display);\r\n      }\r\n    });\r\n    XEvent.bind(this.fontAngle, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      const { fontAngle } = this;\r\n      const { fontAngleContextMenu } = fontAngle;\r\n      const { elPopUp } = fontAngleContextMenu;\r\n      ElPopUp.closeAll([elPopUp]);\r\n      if (fontAngleContextMenu.isClose()) {\r\n        fontAngleContextMenu.open();\r\n      } else {\r\n        fontAngleContextMenu.close();\r\n      }\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    });\r\n  }\r\n\r\n  setHorizontalAlignStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let icon = new Icon('align-left');\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      switch (firstCell.fontAttr.align) {\r\n        case BaseFont.ALIGN.left:\r\n          icon = new Icon('align-left');\r\n          break;\r\n        case BaseFont.ALIGN.center:\r\n          icon = new Icon('align-center');\r\n          break;\r\n        case BaseFont.ALIGN.right:\r\n          icon = new Icon('align-right');\r\n          break;\r\n        default: break;\r\n      }\r\n    }\r\n    this.horizontalAlign.setIcon(icon);\r\n  }\r\n\r\n  setVerticalAlignStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let icon = new Icon('align-middle');\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      switch (firstCell.fontAttr.verticalAlign) {\r\n        case BaseFont.VERTICAL_ALIGN.top:\r\n          icon = new Icon('align-top');\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.center:\r\n          icon = new Icon('align-middle');\r\n          break;\r\n        case BaseFont.VERTICAL_ALIGN.bottom:\r\n          icon = new Icon('align-bottom');\r\n          break;\r\n        default: break;\r\n      }\r\n    }\r\n    this.verticalAlign.setIcon(icon);\r\n  }\r\n\r\n  setTextWrappingStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let icon = new Icon('text-wrap');\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      switch (firstCell.fontAttr.textWrap) {\r\n        case BaseFont.TEXT_WRAP.TRUNCATE:\r\n          icon = new Icon('truncate');\r\n          break;\r\n        case BaseFont.TEXT_WRAP.WORD_WRAP:\r\n          icon = new Icon('text-wrap');\r\n          break;\r\n        case BaseFont.TEXT_WRAP.OVER_FLOW:\r\n          icon = new Icon('overflow');\r\n          break;\r\n      }\r\n    }\r\n    this.textWrapping.setIcon(icon);\r\n  }\r\n\r\n  setUndoStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { tableDataSnapshot } = table;\r\n    this.undo.active(tableDataSnapshot.canBack());\r\n  }\r\n\r\n  setRedoStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { tableDataSnapshot } = table;\r\n    this.redo.active(tableDataSnapshot.canGo());\r\n  }\r\n\r\n  setScaleStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { scale } = table;\r\n    const value = scale.goto(100);\r\n    this.scale.setTitle(`${value}%`);\r\n  }\r\n\r\n  setPaintFormatStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    this.paintFormat.active(this.paintFormat.includeSheet(sheet));\r\n  }\r\n\r\n  setFormatStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let text = '常规';\r\n    let format = 'default';\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      format = firstCell.format;\r\n      switch (format) {\r\n        case 'default':\r\n          text = '常规';\r\n          break;\r\n        case 'text':\r\n          text = '文本';\r\n          break;\r\n        case 'number':\r\n          text = '数字';\r\n          break;\r\n        case 'percentage':\r\n          text = '百分比';\r\n          break;\r\n        case 'fraction':\r\n          text = '分数';\r\n          break;\r\n        case 'ENotation':\r\n          text = '科学计数';\r\n          break;\r\n        case 'rmb':\r\n          text = '人民币';\r\n          break;\r\n        case 'hk':\r\n          text = '港币';\r\n          break;\r\n        case 'dollar':\r\n          text = '美元';\r\n          break;\r\n        case 'date1':\r\n        case 'date2':\r\n        case 'date3':\r\n        case 'date4':\r\n        case 'date5':\r\n          text = '日期';\r\n          break;\r\n        case 'time':\r\n          text = '时间';\r\n          break;\r\n        default: break;\r\n      }\r\n    }\r\n    this.format.setTitle(text);\r\n    this.format.formatContextMenu.setActiveByType(format);\r\n  }\r\n\r\n  setFontStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let name = 'Arial';\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      name = firstCell.fontAttr.name;\r\n    }\r\n    this.font.setTitle(name);\r\n    this.font.fontContextMenu.setActiveByType(name);\r\n  }\r\n\r\n  setStatus() {\r\n    this.setUndoStatus();\r\n    this.setRedoStatus();\r\n    this.setScaleStatus();\r\n    this.setPaintFormatStatus();\r\n    this.setFormatStatus();\r\n    this.setFontStatus();\r\n    this.setFontSizeStatus();\r\n    this.setFontBoldStatus();\r\n    this.setFontItalicStatus();\r\n    this.setUnderLineStatus();\r\n    this.setFontStrikeStatus();\r\n    this.setFontColorStatus();\r\n    this.setFillColorStatus();\r\n    this.setHorizontalAlignStatus();\r\n    this.setVerticalAlignStatus();\r\n    this.setTextWrappingStatus();\r\n    this.setFixedStatus();\r\n    this.setFilterStatus();\r\n    this.setFontAngleStatus();\r\n  }\r\n\r\n  setFixedStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { fixed } = this;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    fixed.setFixedRowStatus(table.xFixedView.hasFixedTop());\r\n    fixed.setFixedColStatus(table.xFixedView.hasFixedLeft());\r\n  }\r\n\r\n  setFilterStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const filter = xScreen.findType(XFilter);\r\n    this.filter.active(filter.display);\r\n  }\r\n\r\n  setUnderLineStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let underline = false;\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      underline = firstCell.fontAttr.underline;\r\n    }\r\n    this.underLine.active(underline);\r\n  }\r\n\r\n  setFontSizeStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let size = '12';\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      size = firstCell.fontAttr.size;\r\n    }\r\n    this.dprFontSize.setTitle(size);\r\n  }\r\n\r\n  setFontBoldStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let bold = false;\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      bold = firstCell.fontAttr.bold;\r\n    }\r\n    this.fontBold.active(bold);\r\n  }\r\n\r\n  setFontStrikeStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let strikethrough = false;\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      strikethrough = firstCell.fontAttr.strikethrough;\r\n    }\r\n    this.fontStrike.active(strikethrough);\r\n  }\r\n\r\n  setFontColorStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let color = 'rgb(0, 0, 0)';\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      color = firstCell.fontAttr.color;\r\n    }\r\n    this.fontColor.setColor(color);\r\n    this.fontColor.fontColorContextMenu.setActiveByColor(color);\r\n  }\r\n\r\n  setFillColorStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let color = 'rgb(255, 255, 255)';\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      if (firstCell.background) {\r\n        color = firstCell.background;\r\n      }\r\n    }\r\n    this.fillColor.setColor(color);\r\n    this.fillColor.fillColorContextMenu.setActiveByColor(color);\r\n  }\r\n\r\n  setFontItalicStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let italic = false;\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      italic = firstCell.fontAttr.italic;\r\n    }\r\n    this.fontItalic.active(italic);\r\n  }\r\n\r\n  setFontAngleStatus() {\r\n    const { body } = this.workTop.work;\r\n    const { sheetView } = body;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    const { xScreen } = table;\r\n    const cells = table.getTableCells();\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    let angle = 0;\r\n    if (selectRange) {\r\n      const firstCell = cells.getCellOrNew(selectRange.sri, selectRange.sci);\r\n      // eslint-disable-next-line prefer-destructuring\r\n      angle = firstCell.fontAttr.angle;\r\n    }\r\n    this.fontAngle.setValue(angle);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { TopMenu };\r\n","import { Widget } from '../../../../lib/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass Item extends Widget {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-option-item ${className}`);\r\n    this.title = '';\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title;\r\n    this.text(this.title);\r\n  }\r\n\r\n}\r\n\r\nexport { Item };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\n\r\nclass File extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-file`);\r\n    this.setTitle('文件');\r\n  }\r\n\r\n}\r\n\r\nexport { File };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\n\r\nclass ForMart extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-format`);\r\n    this.setTitle('格式');\r\n  }\r\n\r\n}\r\n\r\nexport { ForMart };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\n\r\nclass Insert extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-insert`);\r\n    this.setTitle('插入');\r\n  }\r\n\r\n}\r\n\r\nexport { Insert };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\n\r\nclass Look extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-look`);\r\n    this.setTitle('查看');\r\n  }\r\n\r\n}\r\n\r\nexport { Look };\r\n","import { Item } from './base/Item';\r\nimport { cssPrefix } from '../../../const/Constant';\r\n\r\nclass Update extends Item {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-tools-update`);\r\n    this.setTitle('修改');\r\n  }\r\n\r\n}\r\n\r\nexport { Update };\r\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../lib/Element';\r\nimport { File } from './options/File';\r\nimport { ForMart } from './options/ForMart';\r\nimport { Insert } from './options/Insert';\r\nimport { Look } from './options/Look';\r\nimport { Update } from './options/Update';\r\n\r\nclass TopOption extends Widget {\r\n\r\n  constructor(workTop) {\r\n    super(`${cssPrefix}-option`);\r\n\r\n    this.workTop = workTop;\r\n    this.title = `${cssPrefix} 工作簿`;\r\n    this.logoEle = h('div', `${cssPrefix}-option-logo`);\r\n    this.titleEle = h('div', `${cssPrefix}-option-title`);\r\n    this.optionsEle = h('div', `${cssPrefix}-option-box`);\r\n    this.leftEle = h('div', `${cssPrefix}-option-left`);\r\n    this.rightEle = h('div', `${cssPrefix}-option-right`);\r\n    this.leftEle.children(this.logoEle);\r\n    this.rightEle.children(this.titleEle, this.optionsEle);\r\n    this.children(this.leftEle);\r\n    this.children(this.rightEle);\r\n    this.setTitle(this.title);\r\n    this.file = new File();\r\n    this.format = new ForMart();\r\n    this.insert = new Insert();\r\n    this.look = new Look();\r\n    this.update = new Update();\r\n    this.optionsEle.children(this.file);\r\n    this.optionsEle.children(this.format);\r\n    this.optionsEle.children(this.insert);\r\n    this.optionsEle.children(this.look);\r\n    this.optionsEle.children(this.update);\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.title = title;\r\n    this.titleEle.text(title);\r\n  }\r\n\r\n}\r\n\r\nexport { TopOption };\r\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { TopMenu } from './TopMenu';\r\nimport { TopOption } from './TopOption';\r\n\r\nclass WorkTop extends Widget {\r\n\r\n  constructor(work) {\r\n    super(`${cssPrefix}-work-top`);\r\n    this.work = work;\r\n  }\r\n\r\n  onAttach() {\r\n    this.toolsMenu = new TopMenu(this);\r\n    this.option = new TopOption(this);\r\n    this.attach(this.option);\r\n    this.attach(this.toolsMenu);\r\n  }\r\n\r\n}\r\n\r\nexport { WorkTop };\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { Layer } from '../Layer';\r\n\r\nclass HorizontalLayer extends Layer {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-horizontal-layer`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      style: {},\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { HorizontalLayer };\r\n","/* global document */\r\nimport { Widget } from '../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { h } from '../../lib/Element';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\n\r\nimport { XEvent } from '../../lib/XEvent';\r\n\r\nclass ScrollBarX extends Widget {\r\n\r\n  constructor(option) {\r\n    super(`${cssPrefix}-scroll-bar-x`);\r\n    this.option = PlainUtils.mergeDeep({\r\n      style: {},\r\n      scroll: to => to,\r\n    }, option);\r\n    this.lastBut = h('div', `${cssPrefix}-scroll-bar-x-last-but`);\r\n    this.nextBut = h('div', `${cssPrefix}-scroll-bar-x-next-but`);\r\n    this.content = h('div', `${cssPrefix}-scroll-bar-x-content`);\r\n    this.block = h('div', `${cssPrefix}-scroll-bar-x-block`);\r\n    this.content.children(this.block);\r\n    this.children(...[\r\n      this.lastBut,\r\n      this.nextBut,\r\n      this.content,\r\n    ]);\r\n    this.blockLeft = 0;\r\n    this.maxBlockLeft = 0;\r\n    this.blockWidth = 0;\r\n    this.minBlockWidth = 20;\r\n    this.scrollTo = 0;\r\n    this.contentWidth = 0;\r\n    this.viewPortWidth = 0;\r\n    this.isHide = true;\r\n    this.css(this.option.style);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n  }\r\n\r\n  setSize(viewPortWidth, contentWidth) {\r\n    if (viewPortWidth < contentWidth) {\r\n      this.isHide = false;\r\n      this.show();\r\n      // 计算滑块宽度\r\n      const contentBox = this.content.box();\r\n      const blockWidth = viewPortWidth / contentWidth * contentBox.width;\r\n      this.blockWidth = blockWidth < this.minBlockWidth ? this.minBlockWidth : blockWidth;\r\n      this.viewPortWidth = viewPortWidth;\r\n      this.contentWidth = contentWidth;\r\n      this.maxBlockLeft = contentBox.width - this.blockWidth;\r\n      this.block.css('width', `${this.blockWidth}px`);\r\n      // 计算滑块位置\r\n      const blockLeft = (this.scrollTo / (contentWidth - viewPortWidth)) * this.maxBlockLeft;\r\n      this.blockLeft = blockLeft > this.maxBlockLeft ? this.maxBlockLeft : blockLeft;\r\n      this.scrollTo = this.computeScrollTo(this.blockLeft);\r\n      this.block.css('left', `${this.blockLeft}px`);\r\n    } else {\r\n      this.isHide = true;\r\n      this.hide();\r\n      this.option.scroll(0);\r\n    }\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.block);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.block, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (evt1) => {\r\n      if (evt1.button !== 0) return;\r\n      const downEventXy = this.eventXy(evt1, this.block);\r\n      XEvent.mouseMoveUp(h(document), (evt2) => {\r\n        // 计算移动的距离\r\n        const moveEventXy = this.eventXy(evt2, this.content);\r\n        let left = moveEventXy.x - downEventXy.x;\r\n        if (left < 0) left = 0;\r\n        if (left > this.maxBlockLeft) left = this.maxBlockLeft;\r\n        // 计算滑动的距离\r\n        this.blockLeft = left;\r\n        this.scrollTo = this.computeScrollTo(this.blockLeft);\r\n        this.block.css('left', `${left}px`);\r\n        this.option.scroll(this.scrollTo);\r\n        evt2.stopPropagation();\r\n        evt2.preventDefault();\r\n      });\r\n      evt1.stopPropagation();\r\n      evt1.preventDefault();\r\n    });\r\n  }\r\n\r\n  scrollMove(move) {\r\n    this.setLocal(move);\r\n    this.option.scroll(this.scrollTo);\r\n  }\r\n\r\n  setLocal(move) {\r\n    let to = move;\r\n    const maxTo = this.contentWidth - this.viewPortWidth;\r\n    if (to > maxTo) to = maxTo; else if (to < 0) to = 0;\r\n    const blockLeft = (to / (this.contentWidth - this.viewPortWidth)) * this.maxBlockLeft;\r\n    this.blockLeft = blockLeft > this.maxBlockLeft ? this.maxBlockLeft : blockLeft;\r\n    if (this.isHide === false) {\r\n      this.scrollTo = to;\r\n      this.block.css('left', `${this.blockLeft}px`);\r\n    }\r\n  }\r\n\r\n  computeScrollTo(move) {\r\n    return (move / this.maxBlockLeft) * (this.contentWidth - this.viewPortWidth);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { ScrollBarX };\r\n","/* global document */\r\nimport { Widget } from '../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { h } from '../../lib/Element';\r\n\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { XEvent } from '../../lib/XEvent';\r\n\r\nclass ScrollBarY extends Widget {\r\n\r\n  constructor(option) {\r\n    super(`${cssPrefix}-scroll-bar-y`);\r\n    this.option = PlainUtils.mergeDeep({\r\n      style: {},\r\n      scroll: to => to,\r\n    }, option);\r\n    this.lastBut = h('div', `${cssPrefix}-scroll-bar-y-last-but`);\r\n    this.nextBut = h('div', `${cssPrefix}-scroll-bar-y-next-but`);\r\n    this.content = h('div', `${cssPrefix}-scroll-bar-y-content`);\r\n    this.block = h('div', `${cssPrefix}-scroll-bar-y-block`);\r\n    this.content.children(this.block);\r\n    this.children(...[\r\n      this.lastBut,\r\n      this.nextBut,\r\n      this.content,\r\n    ]);\r\n    this.blockTop = 0;\r\n    this.maxBlockTop = 0;\r\n    this.blockHeight = 0;\r\n    this.minBlockHeight = 20;\r\n    this.scrollTo = 0;\r\n    this.contentHeight = 0;\r\n    this.viewPortHeight = 0;\r\n    this.isHide = true;\r\n    this.css(this.option.style);\r\n  }\r\n\r\n  setSize(viewPortHeight, contentHeight) {\r\n    if (viewPortHeight < contentHeight) {\r\n      this.isHide = false;\r\n      this.show();\r\n      // 计算滑块高度\r\n      const contentBox = this.content.box();\r\n      const blockHeight = viewPortHeight / contentHeight * contentBox.height;\r\n      this.blockHeight = blockHeight < this.minBlockHeight ? this.minBlockHeight : blockHeight;\r\n      this.viewPortHeight = viewPortHeight;\r\n      this.contentHeight = contentHeight;\r\n      this.maxBlockTop = contentBox.height - this.blockHeight;\r\n      this.block.css('height', `${this.blockHeight}px`);\r\n      // 计算滑块位置\r\n      const blockTop = (this.scrollTo / (contentHeight - viewPortHeight)) * this.maxBlockTop;\r\n      this.blockTop = blockTop > this.maxBlockTop ? this.maxBlockTop : blockTop;\r\n      this.scrollTo = this.computeScrollTo(this.blockTop);\r\n      this.block.css('top', `${this.blockTop}px`);\r\n    } else {\r\n      this.isHide = true;\r\n      this.hide();\r\n      this.option.scroll(0);\r\n    }\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.block);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this.block, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (evt1) => {\r\n      if (evt1.button !== 0) return;\r\n      const downEventXy = this.eventXy(evt1, this.block);\r\n      XEvent.mouseMoveUp(h(document), (evt2) => {\r\n        // 计算移动的距离\r\n        const moveEventXy = this.eventXy(evt2, this.content);\r\n        let top = moveEventXy.y - downEventXy.y;\r\n        if (top < 0) top = 0;\r\n        if (top > this.maxBlockTop) top = this.maxBlockTop;\r\n        // 计算滑动的距离\r\n        this.blockTop = top;\r\n        this.scrollTo = this.computeScrollTo(this.blockTop);\r\n        this.block.css('top', `${top}px`);\r\n        this.option.scroll(this.scrollTo);\r\n        evt2.stopPropagation();\r\n        evt2.preventDefault();\r\n      });\r\n    });\r\n  }\r\n\r\n  setLocal(move) {\r\n    let to = move;\r\n    const maxTo = this.contentHeight - this.viewPortHeight;\r\n    if (to > maxTo) to = maxTo; else if (to < 0) to = 0;\r\n    const blockTop = (to / (this.contentHeight - this.viewPortHeight)) * this.maxBlockTop;\r\n    this.blockTop = blockTop > this.maxBlockTop ? this.maxBlockTop : blockTop;\r\n    if (this.isHide === false) {\r\n      this.scrollTo = to;\r\n      this.block.css('top', `${this.blockTop}px`);\r\n    }\r\n  }\r\n\r\n  scrollMove(move) {\r\n    this.setLocal(move);\r\n    this.option.scroll(this.scrollTo);\r\n  }\r\n\r\n  computeScrollTo(move) {\r\n    return (move / this.maxBlockTop) * (this.contentHeight - this.viewPortHeight);\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { ScrollBarY };\r\n","import { cssPrefix } from '../../const/Constant';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { Layer } from '../Layer';\r\n\r\nclass HorizontalLayerElement extends Layer {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-horizontal-layer-element`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      style: {\r\n        flexGrow: '0',\r\n      },\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { HorizontalLayerElement };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { Layer } from '../../Layer';\r\n\r\nclass VerticalCenterElement extends Layer {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-vertical-center-element`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      style: {},\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { VerticalCenterElement };\r\n","import { cssPrefix } from '../../../const/Constant';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { Layer } from '../../Layer';\r\n\r\nclass VerticalCenter extends Layer {\r\n  constructor(options) {\r\n    super(`${cssPrefix}-vertical-center`);\r\n    this.options = PlainUtils.mergeDeep({\r\n      style: {},\r\n    }, options);\r\n    this.css(this.options.style);\r\n  }\r\n}\r\n\r\nexport { VerticalCenter };\r\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\n\r\nclass SheetView extends Widget {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-sheet-view`);\r\n    this.sheetList = [];\r\n    this.activeIndex = -1;\r\n  }\r\n\r\n  setActiveSheet(index) {\r\n    const { sheetList } = this;\r\n    if (sheetList[index]) {\r\n      this.activeIndex = index;\r\n      return this.setActive(sheetList[index]);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  attach(sheet) {\r\n    this.sheetList.push(sheet);\r\n    super.attach(sheet);\r\n    sheet.hide();\r\n  }\r\n\r\n  getActiveSheet() {\r\n    return this.sheetList[this.activeIndex];\r\n  }\r\n\r\n  setActive(sheet) {\r\n    sheet.show();\r\n    sheet.sibling().forEach((item) => {\r\n      item.hide();\r\n    });\r\n    return sheet;\r\n  }\r\n\r\n  getLastIndex() {\r\n    return this.sheetList.length - 1;\r\n  }\r\n\r\n}\r\n\r\nexport { SheetView };\r\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { h } from '../../lib/Element';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { XEvent } from '../../lib/XEvent';\r\n\r\nclass TabView extends Widget {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-sheet-switch-tab`);\r\n    this.last = h('div', `${cssPrefix}-switch-tab-last-btn`);\r\n    this.next = h('div', `${cssPrefix}-switch-tab-next-btn`);\r\n    this.content = h('div', `${cssPrefix}-sheet-tab-content`);\r\n    this.tabs = h('div', `${cssPrefix}-sheet-tab-tabs`);\r\n    this.plus = h('div', `${cssPrefix}-sheet-tab-plus`);\r\n    this.content.children(this.tabs);\r\n    this.children(...[\r\n      this.last,\r\n      this.next,\r\n      this.content,\r\n      this.plus,\r\n    ]);\r\n    this.optiions = PlainUtils.mergeDeep({\r\n      onAdd(tab) { return tab; },\r\n      onSwitch(tab) { return tab; },\r\n    }, options);\r\n    this.left = null;\r\n    this.tabList = [];\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n  }\r\n\r\n  offsetSizeLeft() {\r\n    const maxWidth = this.content.offset().width;\r\n    const current = this.tabs.offset().width;\r\n    if (current > maxWidth) {\r\n      this.left = -(current - maxWidth);\r\n      this.tabs.css('marginLeft', `${this.left}px`);\r\n    }\r\n  }\r\n\r\n  unbind() {\r\n    const { next, last, plus } = this;\r\n    XEvent.unbind(next);\r\n    XEvent.unbind(last);\r\n    XEvent.unbind(plus);\r\n  }\r\n\r\n  bind() {\r\n    const { next, last, plus } = this;\r\n    XEvent.bind(next, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      const maxWidth = this.content.offset().width;\r\n      const current = this.tabs.offset().width;\r\n      const min = -(current - maxWidth);\r\n      let left = this.left || 0;\r\n      left -= 30;\r\n      if (left < min) left = min;\r\n      this.left = left;\r\n      this.tabs.css('marginLeft', `${this.left}px`);\r\n    });\r\n    XEvent.bind(last, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      let left = this.left || 0;\r\n      left += 30;\r\n      if (left > 0) left = 0;\r\n      this.left = left;\r\n      this.tabs.css('marginLeft', `${this.left}px`);\r\n    });\r\n    XEvent.bind(plus, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.optiions.onAdd();\r\n      this.offsetSizeLeft();\r\n    });\r\n  }\r\n\r\n  attach(tab) {\r\n    this.tabList.push(tab);\r\n    this.tabs.children(tab);\r\n    tab.onAttach();\r\n    XEvent.bind(tab, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.setActive(tab);\r\n      this.optiions.onSwitch(tab);\r\n    });\r\n  }\r\n\r\n  setActiveTab(index) {\r\n    const { tabList } = this;\r\n    if (tabList[index]) {\r\n      this.setActive(tabList[index]);\r\n      return tabList[index];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  setActive(tab) {\r\n    tab.addClass('active');\r\n    tab.sibling().forEach((item) => {\r\n      item.removeClass('active');\r\n    });\r\n  }\r\n\r\n  getLastIndex() {\r\n    return this.tabList.length - 1;\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { TabView };\r\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\n\r\nlet number = 1;\r\n\r\nclass Tab extends Widget {\r\n\r\n  constructor(name = `Sheet${number}`) {\r\n    super(`${cssPrefix}-sheet-tab`);\r\n    number += 1;\r\n    this.setName(name);\r\n  }\r\n\r\n  setName(name) {\r\n    this.name = name;\r\n    this.text(this.name);\r\n  }\r\n\r\n}\r\n\r\nexport { Tab };\r\n","class Scale {\r\n\r\n  constructor() {\r\n    this.value = 1;\r\n  }\r\n\r\n  back(origin) {\r\n    return origin / this.value;\r\n  }\r\n\r\n  goto(origin) {\r\n    return this.value * origin;\r\n  }\r\n\r\n  setValue(value) {\r\n    this.value = value;\r\n  }\r\n\r\n}\r\n\r\nclass ScaleAdapter {\r\n\r\n  constructor({\r\n    goto = v => v,\r\n    back = v => v,\r\n  } = {}) {\r\n    this.goto = goto;\r\n    this.back = back;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Scale, ScaleAdapter,\r\n};\r\n","import { ScaleAdapter } from './Scale';\r\n\r\nclass Code {\r\n\r\n  constructor({\r\n    scaleAdapter = new ScaleAdapter(),\r\n    height = 33,\r\n    width = 50,\r\n    background = '#f6f7fa',\r\n    color = '#585757',\r\n    size = 11,\r\n    gridColor = '#e8e8e8',\r\n  }) {\r\n    this.scaleAdapter = scaleAdapter;\r\n    this.height = height;\r\n    this.width = width;\r\n    this.background = background;\r\n    this.color = color;\r\n    this.size = size;\r\n    this.gridColor = gridColor;\r\n  }\r\n\r\n  getGridColor() {\r\n    const { gridColor } = this;\r\n    return gridColor;\r\n  }\r\n\r\n  getColor() {\r\n    const { color } = this;\r\n    return color;\r\n  }\r\n\r\n  getSize() {\r\n    const { scaleAdapter } = this;\r\n    const { size } = this;\r\n    return scaleAdapter.goto(size);\r\n  }\r\n\r\n  getBackground() {\r\n    const { background } = this;\r\n    return background;\r\n  }\r\n\r\n  getHeight() {\r\n    const { scaleAdapter } = this;\r\n    const { height } = this;\r\n    return scaleAdapter.goto(height);\r\n  }\r\n\r\n  getWidth() {\r\n    const { scaleAdapter } = this;\r\n    const { width } = this;\r\n    return scaleAdapter.goto(width);\r\n  }\r\n\r\n}\r\n\r\nexport { Code };\r\n","class Row {\r\n\r\n  constructor(row, {\r\n    height = 30,\r\n  } = {}) {\r\n    this.height = height;\r\n    this.row = row;\r\n    this.reCkHasAngle = true;\r\n    this.hasAngelCell = false;\r\n  }\r\n\r\n  setHasAngelCell(value) {\r\n    this.hasAngelCell = value;\r\n  }\r\n\r\n  setReCkHasAngle(value) {\r\n    this.reCkHasAngle = value;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Row,\r\n};\r\n","import { PlainUtils } from '../../../utils/PlainUtils';\nimport { ScaleAdapter } from './Scale';\nimport { RectRange } from './RectRange';\nimport { Row } from './Row';\n\nclass Rows {\n\n  constructor({\n    scaleAdapter = new ScaleAdapter(),\n    len = 10,\n    height = 30,\n    xIteratorBuilder,\n    data = [],\n  }) {\n    this.scaleAdapter = scaleAdapter;\n    this.len = len;\n    this.data = data;\n    this.min = 5;\n    this.xIteratorBuilder = xIteratorBuilder;\n    this.height = PlainUtils.minIf(height, this.min);\n  }\n\n  sectionSumHeight(sri, eri) {\n    let total = 0;\n    if (sri > eri) {\n      return total;\n    }\n    this.xIteratorBuilder.getRowIterator()\n      .setBegin(sri)\n      .setEnd(eri)\n      .setLoop((i) => {\n        total += this.getHeight(i);\n      })\n      .execute();\n    return total;\n  }\n\n  rectRangeSumHeight(rectRange) {\n    if (!rectRange.equals(RectRange.EMPTY)) {\n      return this.sectionSumHeight(rectRange.sri, rectRange.eri);\n    }\n    return 0;\n  }\n\n  get(ri) {\n    let row = this.data[ri];\n    if (row) {\n      if (row instanceof Row) {\n        return row;\n      }\n      row = new Row(ri, row);\n      this.data[ri] = row;\n    }\n    return row;\n  }\n\n  getOrNew(ri) {\n    const row = this.get(ri);\n    if (row) {\n      return row;\n    }\n    this.data[ri] = new Row(ri, {\n      height: this.height,\n    });\n    return this.data[ri];\n  }\n\n  getHeight(ri) {\n    const { scaleAdapter } = this;\n    const row = this.get(ri);\n    if (row) {\n      return scaleAdapter.goto(row.height);\n    }\n    return scaleAdapter.goto(this.height);\n  }\n\n  eachHeight(ri, ei, cb, sy = 0) {\n    let y = sy;\n    this.xIteratorBuilder.getRowIterator()\n      .setBegin(ri)\n      .setEnd(ei)\n      .setLoop((i) => {\n        const rowHeight = this.getHeight(i);\n        cb(i, rowHeight, y);\n        y += rowHeight;\n      })\n      .execute();\n  }\n\n  setHeight(ri, height) {\n    const row = this.getOrNew(ri);\n    const { scaleAdapter } = this;\n    row.height = scaleAdapter.back(PlainUtils.minIf(height, this.min));\n  }\n\n  getData() {\n    return this.data;\n  }\n\n  setData(data) {\n    this.data = data;\n  }\n\n}\n\nexport { Rows };\n","class Col {\r\n\r\n  constructor(col, {\r\n    width = 130,\r\n  } = {}) {\r\n    this.col = col;\r\n    this.width = width;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Col,\r\n};\r\n","import { PlainUtils } from '../../../utils/PlainUtils';\nimport { ScaleAdapter } from './Scale';\nimport { RectRange } from './RectRange';\nimport { Col } from './Col';\n\nclass Cols {\n\n  constructor({\n    scaleAdapter = new ScaleAdapter(),\n    len = 10,\n    data = [],\n    width = 110,\n    xIteratorBuilder,\n  }) {\n    this.scaleAdapter = scaleAdapter;\n    this.len = len;\n    this.data = data;\n    this.min = 5;\n    this.xIteratorBuilder = xIteratorBuilder;\n    this.width = PlainUtils.minIf(width, this.min);\n  }\n\n  sectionSumWidth(sci, eci) {\n    let total = 0;\n    if (sci > eci) {\n      return total;\n    }\n    this.xIteratorBuilder.getColIterator()\n      .setBegin(sci)\n      .setEnd(eci)\n      .setLoop((i) => {\n        total += this.getWidth(i);\n      })\n      .execute();\n    return total;\n  }\n\n  rectRangeSumWidth(rectRange) {\n    if (!rectRange.equals(RectRange.EMPTY)) {\n      return this.sectionSumWidth(rectRange.sci, rectRange.eci);\n    }\n    return 0;\n  }\n\n  get(ci) {\n    let col = this.data[ci];\n    if (col) {\n      if (col instanceof Col) {\n        return col;\n      }\n      col = new Col(ci, col);\n      this.data[ci] = col;\n    }\n    return col;\n  }\n\n  getOrNew(ci) {\n    const col = this.get(ci);\n    if (col) {\n      return col;\n    }\n    this.data[ci] = new Col(ci, {\n      width: this.width,\n    });\n    return this.data[ci];\n  }\n\n  getWidth(i) {\n    const { scaleAdapter } = this;\n    const col = this.data[i];\n    if (col && col.width) {\n      return scaleAdapter.goto(col.width);\n    }\n    return scaleAdapter.goto(this.width);\n  }\n\n  eachWidth(ci, ei, cb, sx = 0) {\n    let x = sx;\n    this.xIteratorBuilder.getColIterator()\n      .setBegin(ci)\n      .setEnd(ei)\n      .setLoop((i) => {\n        const colWidth = this.getWidth(i);\n        cb(i, colWidth, x);\n        x += colWidth;\n      })\n      .execute();\n  }\n\n  setWidth(i, width) {\n    const col = this.getOrNew(i);\n    const { scaleAdapter } = this;\n    col.width = scaleAdapter.back(PlainUtils.minIf(width, this.min));\n  }\n\n  getData() {\n    return this.data;\n  }\n\n  setData(data) {\n    this.data = data;\n  }\n\n}\n\nexport { Cols };\n","\r\nconst SCROLL_TYPE = {\r\n  H_LEFT: Symbol('水平方向左边滚动条'),\r\n  H_RIGHT: Symbol('水平方向向右边滚动'),\r\n  V_TOP: Symbol('垂直方向向上滚动'),\r\n  V_BOTTOM: Symbol('垂直方向下滚动'),\r\n  UN: Symbol('未知'),\r\n};\r\n\r\nclass Scroll {\r\n\r\n  constructor({\r\n    xFixedView,\r\n  }) {\r\n    const fixedView = xFixedView.getFixedView();\r\n    this.ri = fixedView.eri + 1;\r\n    this.ci = fixedView.eci + 1;\r\n    this.x = 0;\r\n    this.y = 0;\r\n    this.type = SCROLL_TYPE.UN;\r\n  }\r\n}\r\n\r\nexport {\r\n  Scroll, SCROLL_TYPE,\r\n};\r\n","/* global document */\r\nimport { XEvent } from '../../lib/XEvent';\r\nimport { Constant } from '../../const/Constant';\r\n\r\nclass XTableKeyboard {\r\n\r\n  constructor(table) {\r\n    const { focus } = table;\r\n    this.table = table;\r\n    this.pool = [];\r\n    this.xTableKeyBoardDownHandle = (e) => {\r\n      const { activate } = focus;\r\n      const { keyCode } = e;\r\n      if (activate) {\r\n        const { target } = activate;\r\n        const find = this.find(target);\r\n        if (find && find.keyCode === keyCode) {\r\n          find.callback();\r\n        }\r\n      }\r\n      if (keyCode === 9) {\r\n        e.preventDefault();\r\n      }\r\n    };\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(document, Constant.SYSTEM_EVENT_TYPE.KEY_DOWN, this.xTableKeyBoardDownHandle);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(document, Constant.SYSTEM_EVENT_TYPE.KEY_DOWN, this.xTableKeyBoardDownHandle);\r\n  }\r\n\r\n  find(el) {\r\n    const { pool } = this;\r\n    for (let i = 0; i < pool.length; i += 1) {\r\n      const item = pool[i];\r\n      const { target } = item;\r\n      if (target === el) {\r\n        return item;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  register({\r\n    target, keyCode, callback,\r\n  }) {\r\n    this.pool.push({ target, keyCode, callback });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableKeyboard,\r\n};\r\n","/* global document */\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { Widget } from '../../../lib/Widget';\r\nimport { h } from '../../../lib/Element';\r\nimport { XEvent } from '../../../lib/XEvent';\r\nimport { XTableMousePointer } from '../XTableMousePointer';\r\n\r\nclass ColFixed extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-col-fixed-bar`);\r\n    const { xFixedView } = table;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const block = h('div', `${cssPrefix}-table-col-fixed-block`);\r\n    this.table = table;\r\n    this.fxSci = fixedView.sci;\r\n    this.fxEci = fixedView.eci;\r\n    this.block = block;\r\n    this.children(block);\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    const {\r\n      mousePointer, dropColFixed, xFixedView,\r\n    } = table;\r\n    let moveOff = true;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.setSize();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.setSize();\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, () => {\r\n      this.setActive(true);\r\n      mousePointer.lock(ColFixed);\r\n      mousePointer.set(XTableMousePointer.KEYS.grab, ColFixed);\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      if (!moveOff) {\r\n        return;\r\n      }\r\n      this.setActive(false);\r\n      mousePointer.free(ColFixed);\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      dropColFixed.show();\r\n      this.setActive(true);\r\n      // 滚动视图\r\n      const scrollView = table.getScrollView();\r\n      // 获取固定区域\r\n      const fixedView = xFixedView.getFixedView();\r\n      this.fxSci = fixedView.sci;\r\n      this.fxEci = fixedView.eci;\r\n      // 锁定鼠标指针\r\n      mousePointer.lock(ColFixed);\r\n      mousePointer.set(XTableMousePointer.KEYS.grab, ColFixed);\r\n      // 推拽条移动位置\r\n      const { x } = table.eventXy(e, table);\r\n      dropColFixed.offset({ left: x });\r\n      moveOff = false;\r\n      // 如果存在固定位置 定位到起始处\r\n      if (xFixedView.hasFixedLeft()) {\r\n        table.scroll.x = 0;\r\n        table.scroll.ci = this.fxEci + 1;\r\n        table.resize();\r\n      }\r\n      XEvent.mouseMoveUp(document, (e) => {\r\n        // 推拽条移动位置\r\n        const { x, y } = table.eventXy(e, table);\r\n        dropColFixed.offset({ left: x });\r\n        // 更新行号\r\n        const { ci } = table.getRiCiByXy(x, y);\r\n        // 是否越界最大列数\r\n        if (ci < scrollView.eci - 2) {\r\n          this.fxEci = ci;\r\n          this.setSize();\r\n        }\r\n      }, () => {\r\n        this.setActive(false);\r\n        // 释放指针\r\n        mousePointer.free(ColFixed);\r\n        dropColFixed.hide();\r\n        // 更新固定区域\r\n        table.setFixedCol(this.fxEci);\r\n        moveOff = true;\r\n      });\r\n    });\r\n  }\r\n\r\n  setActive(status) {\r\n    if (status) {\r\n      this.block.addClass('active');\r\n      this.addClass('active');\r\n    } else {\r\n      this.block.removeClass('active');\r\n      this.removeClass('active');\r\n    }\r\n  }\r\n\r\n  onAttach() {\r\n    const { table } = this;\r\n    // 初始化固定条大小\r\n    this.setSize();\r\n    // 绑定处理函数\r\n    this.bind();\r\n    // 注册焦点元素\r\n    table.focus.register({ target: this, stop: false });\r\n  }\r\n\r\n  setSize() {\r\n    const {\r\n      table, block,\r\n    } = this;\r\n    const { fxSci, fxEci } = this;\r\n    const { cols } = table;\r\n    const width = ColFixed.WIDTH;\r\n    const height = fxEci > -1 ? table.visualHeight() : table.getIndexHeight();\r\n    const offset = fxEci > -1 ? width / 2 : width;\r\n    const left = cols.sectionSumWidth(fxSci, fxEci) + table.getIndexWidth() - offset;\r\n    block.offset({\r\n      height: table.getIndexHeight(), width,\r\n    });\r\n    this.offset({\r\n      width, height, left, top: 0,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\nColFixed.WIDTH = 6;\r\n\r\nexport {\r\n  ColFixed,\r\n};\r\n","/* global document */\r\nimport { Widget } from '../../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../../const/Constant';\r\nimport { h } from '../../../lib/Element';\r\nimport { XEvent } from '../../../lib/XEvent';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XTableMousePointer } from '../XTableMousePointer';\r\nimport { ColFixed } from '../tablefixed/ColFixed';\r\n\r\nclass XReSizer extends Widget {\r\n\r\n  constructor(table, options = { width: 5 }) {\r\n    super(`${cssPrefix}-re-sizer-horizontal`);\r\n    this.table = table;\r\n    this.options = options;\r\n    this.width = options.width;\r\n    this.hoverEl = h('div', `${cssPrefix}-re-sizer-hover`);\r\n    this.lineEl = h('div', `${cssPrefix}-re-sizer-line`);\r\n    this.children(...[\r\n      this.hoverEl,\r\n      this.lineEl,\r\n    ]);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.table.focus.register({ target: this });\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    const {\r\n      cols, mousePointer, focus, xFixedView,\r\n    } = table;\r\n    const { tableDataSnapshot } = table;\r\n    const { colsDataProxy } = tableDataSnapshot;\r\n    const { index } = table;\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      mousePointer.lock(XReSizer);\r\n      mousePointer.set(XTableMousePointer.KEYS.colResize, XReSizer);\r\n      const { left, ci } = this.getEventLeft(e);\r\n      const min = left - cols.getWidth(ci) + cols.min;\r\n      let { x: mx } = table.eventXy(e);\r\n      XEvent.mouseMoveUp(document, (e) => {\r\n        ({ x: mx } = table.eventXy(e));\r\n        mx -= this.width / 2;\r\n        mx = Math.ceil(PlainUtils.minIf(mx, min));\r\n        this.css('left', `${mx}px`);\r\n        this.lineEl.css('height', `${table.visualHeight()}px`);\r\n        this.lineEl.show();\r\n      }, (e) => {\r\n        mousePointer.free(XReSizer);\r\n        this.lineEl.hide();\r\n        this.css('left', `${mx}px`);\r\n        const { y } = table.eventXy(e);\r\n        if (y <= 0) {\r\n          this.hide();\r\n        }\r\n        const newLeft = mx - (left - cols.getWidth(ci)) + this.width;\r\n        tableDataSnapshot.begin();\r\n        colsDataProxy.setWidth(ci, newLeft);\r\n        tableDataSnapshot.end();\r\n        table.resize();\r\n      });\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      mousePointer.free(XReSizer);\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, () => {\r\n      mousePointer.lock(XReSizer);\r\n      mousePointer.set(XTableMousePointer.KEYS.colResize, XReSizer);\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, (e) => {\r\n      // eslint-disable-next-line prefer-const\r\n      let { left, ci } = this.getEventLeft(e);\r\n      const min = left - cols.getWidth(ci) + cols.min;\r\n      const visualWidth = table.visualWidth();\r\n      const fixedView = xFixedView.getFixedView();\r\n      if (left > visualWidth) {\r\n        left = visualWidth;\r\n      }\r\n      if (left === -1 || min > visualWidth || ci === -1) {\r\n        this.hide();\r\n      } else {\r\n        this.show();\r\n        if (ci === fixedView.eci) {\r\n          this.css('left', `${left - this.width - ColFixed.WIDTH / 2}px`);\r\n        } else {\r\n          this.css('left', `${left - this.width}px`);\r\n        }\r\n        this.hoverEl.css('width', `${this.width}px`);\r\n        this.hoverEl.css('height', `${index.getHeight()}px`);\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      this.hide();\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { activate } = focus;\r\n      const { target } = activate;\r\n      if (target !== table && target !== this) {\r\n        this.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  getEventLeft(event) {\r\n    const { table } = this;\r\n    const {\r\n      cols, xFixedView, xFixedMeasure,\r\n    } = table;\r\n    const { index } = table;\r\n    const { x, y } = table.eventXy(event);\r\n    const { ri, ci } = table.getRiCiByXy(x, y);\r\n    const result = {\r\n      ci, left: -1,\r\n    };\r\n    // 无效区域\r\n    if (ri !== -1) {\r\n      return result;\r\n    }\r\n    const fixedWidth = xFixedMeasure.getWidth();\r\n    const indexWidth = index.getWidth();\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = table.getScrollView();\r\n    // 冻结区域\r\n    if (xFixedView.hasFixedLeft()) {\r\n      if (ci > fixedView.eci) {\r\n        result.left = indexWidth + fixedWidth + cols.sectionSumWidth(scrollView.sci, ci);\r\n      } else {\r\n        result.left = indexWidth + cols.sectionSumWidth(fixedView.sci, ci);\r\n      }\r\n    } else {\r\n      result.left = indexWidth + cols.sectionSumWidth(scrollView.sci, ci);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { XReSizer };\r\n","/* global document */\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { Widget } from '../../../lib/Widget';\r\nimport { h } from '../../../lib/Element';\r\nimport { XEvent } from '../../../lib/XEvent';\r\nimport { XTableMousePointer } from '../XTableMousePointer';\r\n\r\nclass RowFixed extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-row-fixed-bar`);\r\n    const { xFixedView } = table;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const block = h('div', `${cssPrefix}-table-row-fixed-block`);\r\n    this.table = table;\r\n    this.fxSri = fixedView.sri;\r\n    this.fxEri = fixedView.eri;\r\n    this.block = block;\r\n    this.children(this.block);\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    const {\r\n      mousePointer, dropRowFixed, xFixedView,\r\n    } = table;\r\n    let moveOff = true;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.setSize();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.setSize();\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, () => {\r\n      this.setActive(true);\r\n      mousePointer.lock(RowFixed);\r\n      mousePointer.set(XTableMousePointer.KEYS.grab, RowFixed);\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      if (!moveOff) {\r\n        return;\r\n      }\r\n      this.setActive(false);\r\n      mousePointer.free(RowFixed);\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      dropRowFixed.show();\r\n      this.setActive(true);\r\n      // 滚动视图\r\n      const scrollView = table.getScrollView();\r\n      // 获取固定区域\r\n      const fixedView = xFixedView.getFixedView();\r\n      this.fxSri = fixedView.sri;\r\n      this.fxEri = fixedView.eri;\r\n      // 锁定鼠标指针\r\n      mousePointer.lock(RowFixed);\r\n      mousePointer.set(XTableMousePointer.KEYS.grab, RowFixed);\r\n      // 推拽条移动位置\r\n      const { y } = table.eventXy(e, table);\r\n      dropRowFixed.offset({ top: y });\r\n      moveOff = false;\r\n      // 如果存在固定位置 定位到起始处\r\n      if (xFixedView.hasFixedTop()) {\r\n        table.scroll.y = 0;\r\n        table.scroll.ri = this.fxEri + 1;\r\n        table.resize();\r\n      }\r\n      XEvent.mouseMoveUp(document, (e) => {\r\n        // 推拽条移动位置 + 行号\r\n        const { x, y } = table.eventXy(e, table);\r\n        dropRowFixed.offset({ top: y });\r\n        // 更新行号\r\n        const { ri } = table.getRiCiByXy(x, y);\r\n        // 是否越界最大行数\r\n        if (ri < scrollView.eri - 2) {\r\n          this.fxEri = ri;\r\n          this.setSize();\r\n        }\r\n      }, () => {\r\n        this.setActive(false);\r\n        // 释放指针\r\n        mousePointer.free(RowFixed);\r\n        dropRowFixed.hide();\r\n        // 更新固定区域\r\n        table.setFixedRow(this.fxEri);\r\n        moveOff = true;\r\n      });\r\n    });\r\n  }\r\n\r\n  setActive(status) {\r\n    if (status) {\r\n      this.addClass('active');\r\n      this.block.addClass('active');\r\n    } else {\r\n      this.removeClass('active');\r\n      this.block.removeClass('active');\r\n    }\r\n  }\r\n\r\n  onAttach() {\r\n    const { table } = this;\r\n    // 初始化固定条大小\r\n    this.setSize();\r\n    // 绑定处理函数\r\n    this.bind();\r\n    // 注册焦点元素\r\n    table.focus.register({ target: this, stop: false });\r\n  }\r\n\r\n  setSize() {\r\n    const { table, block } = this;\r\n    const { fxSri, fxEri } = this;\r\n    const { rows } = table;\r\n    const height = RowFixed.HEIGHT;\r\n    const width = fxEri > -1 ? table.visualWidth() : table.getIndexWidth();\r\n    const outer = fxEri > -1 ? height / 2 : height;\r\n    const top = rows.sectionSumHeight(fxSri, fxEri) + table.getIndexHeight() - outer;\r\n    block.offset({\r\n      width: table.getIndexWidth(), height,\r\n    });\r\n    this.offset({\r\n      height, width, left: 0, top,\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\nRowFixed.HEIGHT = 6;\r\n\r\nexport {\r\n  RowFixed,\r\n};\r\n","/* global document */\r\nimport { Widget } from '../../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../../const/Constant';\r\nimport { h } from '../../../lib/Element';\r\nimport { XEvent } from '../../../lib/XEvent';\r\nimport { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XTableMousePointer } from '../XTableMousePointer';\r\nimport { RowFixed } from '../tablefixed/RowFixed';\r\n\r\nclass YReSizer extends Widget {\r\n\r\n  constructor(table, options = { height: 5 }) {\r\n    super(`${cssPrefix}-re-sizer-vertical`);\r\n    this.table = table;\r\n    this.options = options;\r\n    this.height = options.height;\r\n    this.hoverEl = h('div', `${cssPrefix}-re-sizer-hover`);\r\n    this.lineEl = h('div', `${cssPrefix}-re-sizer-line`);\r\n    this.children(...[\r\n      this.hoverEl,\r\n      this.lineEl,\r\n    ]);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.table.focus.register({ target: this });\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    const {\r\n      rows, mousePointer, focus, xFixedView,\r\n    } = table;\r\n    const { tableDataSnapshot } = table;\r\n    const { rowsDataProxy } = tableDataSnapshot;\r\n    const { index } = table;\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      mousePointer.lock(YReSizer);\r\n      mousePointer.set(XTableMousePointer.KEYS.rowResize, YReSizer);\r\n      const { top, ri } = this.getEventTop(e);\r\n      const min = top - rows.getHeight(ri) + rows.min;\r\n      let { y: my } = table.eventXy(e);\r\n      XEvent.mouseMoveUp(document, (e) => {\r\n        ({ y: my } = table.eventXy(e));\r\n        my -= this.height / 2;\r\n        my = Math.ceil(PlainUtils.minIf(my, min));\r\n        this.css('top', `${my}px`);\r\n        this.lineEl.css('width', `${table.visualWidth()}px`);\r\n        this.lineEl.show();\r\n      }, (e) => {\r\n        mousePointer.free(YReSizer);\r\n        this.lineEl.hide();\r\n        this.css('top', `${my}px`);\r\n        const { x } = table.eventXy(e);\r\n        if (x <= 0) {\r\n          this.hide();\r\n        }\r\n        const newTop = my - (top - rows.getHeight(ri)) + this.height;\r\n        tableDataSnapshot.begin();\r\n        rowsDataProxy.setHeight(ri, newTop);\r\n        tableDataSnapshot.end();\r\n        table.resize();\r\n      });\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      mousePointer.free(YReSizer);\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, () => {\r\n      mousePointer.lock(YReSizer);\r\n      mousePointer.set(XTableMousePointer.KEYS.rowResize, YReSizer);\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, (e) => {\r\n      // eslint-disable-next-line prefer-const\r\n      let { top, ri } = this.getEventTop(e);\r\n      const min = top - rows.getHeight(ri) + rows.min;\r\n      const visualHeight = table.visualHeight();\r\n      const fixedView = xFixedView.getFixedView();\r\n      if (top > visualHeight) {\r\n        top = visualHeight;\r\n      }\r\n      if (top === -1 || min > visualHeight || ri === -1) {\r\n        this.hide();\r\n      } else {\r\n        this.show();\r\n        if (ri === fixedView.eri) {\r\n          this.css('top', `${top - this.height - RowFixed.HEIGHT / 2}px`);\r\n        } else {\r\n          this.css('top', `${top - this.height}px`);\r\n        }\r\n        this.hoverEl.css('width', `${index.getWidth()}px`);\r\n        this.hoverEl.css('height', `${this.height}px`);\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\r\n      this.hide();\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      const { activate } = focus;\r\n      const { target } = activate;\r\n      if (target !== table && target !== this) {\r\n        this.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  getEventTop(event) {\r\n    const { table } = this;\r\n    const {\r\n      rows, xFixedView, xFixedMeasure,\r\n    } = table;\r\n    const { index } = table;\r\n    const { x, y } = table.eventXy(event);\r\n    const { ri, ci } = table.getRiCiByXy(x, y);\r\n    const result = {\r\n      ri, top: -1,\r\n    };\r\n    // 无效区域\r\n    if (ci !== -1) {\r\n      return result;\r\n    }\r\n    const fixedHeight = xFixedMeasure.getHeight();\r\n    const indexHeight = index.getHeight();\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = table.getScrollView();\r\n    // 冻结区域\r\n    if (xFixedView.hasFixedTop()) {\r\n      if (ri > fixedView.eri) {\r\n        result.top = indexHeight + fixedHeight + rows.sectionSumHeight(scrollView.sri, ri);\r\n      } else {\r\n        result.top = indexHeight + rows.sectionSumHeight(fixedView.sri, ri);\r\n      }\r\n    } else {\r\n      result.top = indexHeight + rows.sectionSumHeight(scrollView.sri, ri);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { YReSizer };\r\n","import { Widget } from '../../../lib/Widget';\r\nimport { RANGE_OVER_GO } from '../xscreen/item/viewborder/XScreenStyleBorderItem';\r\nimport { cssPrefix, Constant } from '../../../const/Constant';\r\nimport { XEvent } from '../../../lib/XEvent';\r\nimport { XSelectItem } from '../xscreenitems/xselect/XSelectItem';\r\n\r\nclass XHeightLight extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-x-height-light`);\r\n    this.table = table;\r\n    this.width = -1;\r\n    this.left = -1;\r\n    this.setSize();\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.hide();\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.SELECT_CHANGE, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.FIXED_CHANGE, () => {\r\n      this.offsetHandle();\r\n    });\r\n  }\r\n\r\n  offsetHandle() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen,\r\n    } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    if (selectRange) {\r\n      const left = this.getLeft() + table.getIndexWidth();\r\n      const width = this.getWidth();\r\n      if (left !== this.left || width !== this.width) {\r\n        this.show();\r\n        this.offset({\r\n          top: 0,\r\n          left,\r\n          width,\r\n          height: table.getIndexHeight(),\r\n        });\r\n      }\r\n      this.left = left;\r\n      this.width = width;\r\n    }\r\n  }\r\n\r\n  setSize() {\r\n    const { table } = this;\r\n    this.css('height', `${table.getIndexHeight()}px`);\r\n  }\r\n\r\n  getLeft() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen, rows, xFixedView, cols,\r\n    } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    const overGo = xSelect.getOverGo(selectRange);\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = table.getScrollView();\r\n    scrollView.sri = 0;\r\n    scrollView.eri = rows.length - 1;\r\n    fixedView.sri = 0;\r\n    fixedView.eri = rows.length - 1;\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.BRL:\r\n      case RANGE_OVER_GO.LTL:\r\n      case RANGE_OVER_GO.ALL:\r\n      case RANGE_OVER_GO.LT:\r\n      case RANGE_OVER_GO.LTT:\r\n      case RANGE_OVER_GO.L: {\r\n        return cols.sectionSumWidth(fixedView.sci, selectRange.sci - 1);\r\n      }\r\n      case RANGE_OVER_GO.BR:\r\n      case RANGE_OVER_GO.T:\r\n      case RANGE_OVER_GO.BRT: {\r\n        const coincide = scrollView.coincide(selectRange);\r\n        const scroll = cols.sectionSumWidth(scrollView.sci, coincide.sci - 1);\r\n        const fixed = cols.sectionSumWidth(fixedView.sci, fixedView.eci);\r\n        return fixed + scroll;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  getWidth() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen, rows, xFixedView, cols,\r\n    } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = table.getScrollView();\r\n    const overGo = xSelect.getOverGo(selectRange);\r\n    scrollView.sri = 0;\r\n    scrollView.eri = rows.length - 1;\r\n    fixedView.sri = 0;\r\n    fixedView.eri = rows.length - 1;\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n      case RANGE_OVER_GO.L:\r\n      case RANGE_OVER_GO.LTL: {\r\n        return cols.rectRangeSumWidth(selectRange);\r\n      }\r\n      case RANGE_OVER_GO.BR:\r\n      case RANGE_OVER_GO.T:\r\n      case RANGE_OVER_GO.BRT: {\r\n        return cols.rectRangeSumWidth(scrollView.coincide(selectRange));\r\n      }\r\n      case RANGE_OVER_GO.BRL:\r\n      case RANGE_OVER_GO.LTT:\r\n      case RANGE_OVER_GO.ALL: {\r\n        const scroll = cols.rectRangeSumWidth(scrollView.coincide(selectRange));\r\n        const fixed = cols.rectRangeSumWidth(fixedView.coincide(selectRange));\r\n        return scroll + fixed;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { XHeightLight };\r\n","import { Widget } from '../../../lib/Widget';\r\nimport { RANGE_OVER_GO } from '../xscreen/item/viewborder/XScreenStyleBorderItem';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { XEvent } from '../../../lib/XEvent';\r\nimport { XSelectItem } from '../xscreenitems/xselect/XSelectItem';\r\n\r\nclass YHeightLight extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-y-height-light`);\r\n    this.table = table;\r\n    this.height = -1;\r\n    this.top = -1;\r\n    this.setSize();\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.hide();\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.SELECT_CHANGE, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\r\n      this.offsetHandle();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.FIXED_CHANGE, () => {\r\n      this.offsetHandle();\r\n    });\r\n  }\r\n\r\n  offsetHandle() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen,\r\n    } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    if (selectRange) {\r\n      const top = this.getTop() + table.getIndexHeight();\r\n      const height = this.getHeight();\r\n      if (top !== this.top || height !== this.height) {\r\n        this.show();\r\n        this.offset({\r\n          left: 0,\r\n          top,\r\n          height,\r\n          width: table.getIndexWidth(),\r\n        });\r\n      }\r\n      this.top = top;\r\n      this.height = height;\r\n    }\r\n  }\r\n\r\n  setSize() {\r\n    const { table } = this;\r\n    this.css('width', `${table.getIndexWidth()}px`);\r\n  }\r\n\r\n  getTop() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen, rows, xFixedView, cols,\r\n    } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    const overGo = xSelect.getOverGo(selectRange);\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = table.getScrollView();\r\n    scrollView.sci = 0;\r\n    scrollView.eci = cols.length - 1;\r\n    fixedView.sci = 0;\r\n    fixedView.eci = cols.length - 1;\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.BRT:\r\n      case RANGE_OVER_GO.LTL:\r\n      case RANGE_OVER_GO.ALL:\r\n      case RANGE_OVER_GO.LT:\r\n      case RANGE_OVER_GO.LTT:\r\n      case RANGE_OVER_GO.T: {\r\n        return rows.sectionSumHeight(fixedView.sri, selectRange.sri - 1);\r\n      }\r\n      case RANGE_OVER_GO.BR:\r\n      case RANGE_OVER_GO.L:\r\n      case RANGE_OVER_GO.BRL: {\r\n        const coincide = scrollView.coincide(selectRange);\r\n        const scroll = rows.sectionSumHeight(scrollView.sri, coincide.sri - 1);\r\n        const fixed = rows.sectionSumHeight(fixedView.sri, fixedView.eri);\r\n        return fixed + scroll;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  getHeight() {\r\n    const { table } = this;\r\n    const {\r\n      xScreen, rows, xFixedView, cols,\r\n    } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const {\r\n      selectRange,\r\n    } = xSelect;\r\n    const fixedView = xFixedView.getFixedView();\r\n    const scrollView = table.getScrollView();\r\n    const overGo = xSelect.getOverGo(selectRange);\r\n    scrollView.sci = 0;\r\n    scrollView.eci = cols.length - 1;\r\n    fixedView.sci = 0;\r\n    fixedView.eci = cols.length - 1;\r\n    switch (overGo) {\r\n      case RANGE_OVER_GO.LT:\r\n      case RANGE_OVER_GO.T:\r\n      case RANGE_OVER_GO.LTT: {\r\n        return rows.rectRangeSumHeight(selectRange);\r\n      }\r\n      case RANGE_OVER_GO.BR:\r\n      case RANGE_OVER_GO.L:\r\n      case RANGE_OVER_GO.BRL: {\r\n        return rows.rectRangeSumHeight(scrollView.coincide(selectRange));\r\n      }\r\n      case RANGE_OVER_GO.BRT:\r\n      case RANGE_OVER_GO.LTL:\r\n      case RANGE_OVER_GO.ALL: {\r\n        const scroll = rows.rectRangeSumHeight(scrollView.coincide(selectRange));\r\n        const fixed = rows.rectRangeSumHeight(fixedView.coincide(selectRange));\r\n        return scroll + fixed;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { YHeightLight };\r\n","/* global document */\r\nimport { Constant } from '../../const/Constant';\r\nimport { XEvent } from '../../lib/XEvent';\r\nimport { Element } from '../../lib/Element';\r\n\r\nclass XTableFocus {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n    this.pool = [];\r\n    this.activate = {};\r\n    this.xTableFocusDownHandle = () => {\r\n      this.activate = {};\r\n    };\r\n    this.bind();\r\n  }\r\n\r\n  remove(target) {\r\n    if (!(target instanceof Element)) {\r\n      throw new TypeError(' error type not Element ');\r\n    }\r\n    const pool = [];\r\n    for (let i = 0; i < this.pool.length; i += 1) {\r\n      const item = this.pool[i];\r\n      if (item.target.el !== target.el) {\r\n        pool.push(item);\r\n      }\r\n    }\r\n    this.pool = pool;\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(document, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN,\r\n      this.xTableFocusDownHandle, true);\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(document, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN,\r\n      this.xTableFocusDownHandle, true);\r\n  }\r\n\r\n  add(item) {\r\n    // 是否是Element\r\n    if (!(item.target instanceof Element)) {\r\n      return false;\r\n    }\r\n    // 是否已经注册\r\n    const find = this.findByNode(item.target);\r\n    if (find) {\r\n      return false;\r\n    }\r\n    // 记录注册的元素\r\n    this.pool.push(item);\r\n    if (item.focus) {\r\n      this.activate = this.pool[this.pool.length - 1];\r\n    }\r\n    return true;\r\n  }\r\n\r\n  register({\r\n    attr = {},\r\n    target,\r\n    stop = false,\r\n    focus = false,\r\n  }) {\r\n    if (this.add({\r\n      attr, target, focus, stop,\r\n    })) {\r\n      XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n        const alike = this.findByChild(e.target);\r\n        if (alike) {\r\n          this.activate = alike;\r\n          if (stop) {\r\n            e.stopPropagation();\r\n          }\r\n        } else {\r\n          this.activate = null;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  findByNode(el) {\r\n    for (let i = 0; i < this.pool.length; i += 1) {\r\n      const item = this.pool[i];\r\n      if (item.target.el === el) {\r\n        return item;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  findByChild(el) {\r\n    const { table } = this;\r\n    const root = table.el.parentNode;\r\n    while (el !== root) {\r\n      const find = this.findByNode(el);\r\n      if (find) {\r\n        return find;\r\n      }\r\n      el = el.parentNode;\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\nexport { XTableFocus };\r\n","import { PlainUtils } from '../../utils/PlainUtils';\nimport { RectRange } from './tablebase/RectRange';\n\nconst VIEW_MODE = {\n  CHANGE_ADD: Symbol('change_add'),\n  CHANGE_NOT: Symbol('change_not'),\n  STATIC: Symbol('static'),\n  BOUND_OUT: Symbol('bound_out'),\n};\n\n/**\n * XTableScrollView\n */\nclass XTableScrollView {\n\n  /**\n   * 视图类型\n   * @param lastView\n   * @param view\n   * @return {symbol}\n   */\n  static viewMode(lastView, view) {\n    if (PlainUtils.isUnDef(lastView)) {\n      return VIEW_MODE.CHANGE_NOT;\n    }\n    // 视图无变化\n    if (view.equals(lastView)) {\n      return VIEW_MODE.STATIC;\n    }\n    // 视图不相交\n    if (view.coincide(lastView).equals(RectRange.EMPTY)) {\n      return VIEW_MODE.BOUND_OUT;\n    }\n    // 无新增加的视图区域\n    if (view.within(lastView)) {\n      return VIEW_MODE.CHANGE_NOT;\n    }\n    // 有新增的视图区域\n    return VIEW_MODE.CHANGE_ADD;\n  }\n\n  /**\n   * XTableScrollView\n   * @param scroll\n   * @param rows\n   * @param cols\n   * @param xIteratorBuilder\n   * @param getHeight\n   * @param getWidth\n   */\n  constructor({\n    scroll,\n    rows,\n    cols,\n    xIteratorBuilder,\n    getHeight = () => 0,\n    getWidth = () => 0,\n  }) {\n    this.scroll = scroll;\n    this.rows = rows;\n    this.cols = cols;\n    this.xIteratorBuilder = xIteratorBuilder;\n    this.getHeight = getHeight;\n    this.getWidth = getWidth;\n  }\n\n  /**\n   * 当前视图滚动区域\n   * @returns {RectRange}\n   */\n  getScrollView() {\n    const {\n      rows, cols, xIteratorBuilder, scroll, getHeight, getWidth,\n    } = this;\n    const { ri, ci } = scroll;\n    let [width, height] = [0, 0];\n    let [eri, eci] = [rows.len, cols.len];\n    // 行\n    xIteratorBuilder.getRowIterator()\n      .setBegin(ri)\n      .setEnd(rows.len - 1)\n      .setLoop((i) => {\n        height += rows.getHeight(i);\n        eri = i;\n        return height < getHeight();\n      })\n      .execute();\n    // 列\n    xIteratorBuilder.getColIterator()\n      .setBegin(ci)\n      .setEnd(cols.len - 1)\n      .setLoop((j) => {\n        width += cols.getWidth(j);\n        eci = j;\n        return width < getWidth();\n      })\n      .execute();\n    // 滚动视图\n    return new RectRange(ri, ci, eri, eci);\n  }\n\n}\n\nexport {\n  XTableScrollView,\n  VIEW_MODE,\n};\n","import { PlainUtils } from '../../utils/PlainUtils';\r\n\r\n/**\r\n * TableAreaView\r\n */\r\nclass XTableAreaView {\r\n\r\n  /**\r\n   * TableAreaView\r\n   * @param xTableScrollView\r\n   * @param rows\r\n   * @param cols\r\n   * @param scroll\r\n   */\r\n  constructor({\r\n    xTableScrollView,\r\n    rows,\r\n    cols,\r\n    scroll,\r\n  }) {\r\n    this.xTableScrollView = xTableScrollView;\r\n    this.scroll = scroll;\r\n    this.rows = rows;\r\n    this.cols = cols;\r\n    this.scrollView = null;\r\n  }\r\n\r\n  /**\r\n   * 重置变量区\r\n   */\r\n  reset() {\r\n    this.scrollView = null;\r\n  }\r\n\r\n  /**\r\n   * 当前视图滚动区域\r\n   * @returns {RectRange}\r\n   */\r\n  getScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\r\n      return this.scrollView.clone();\r\n    }\r\n    const { xTableScrollView } = this;\r\n    const { cols, rows } = this;\r\n    const scrollView = xTableScrollView.getScrollView();\r\n    scrollView.w = cols.rectRangeSumWidth(scrollView);\r\n    scrollView.h = rows.rectRangeSumHeight(scrollView);\r\n    this.scrollView = scrollView;\r\n    return scrollView.clone();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableAreaView,\r\n};\r\n","class Throttle {\r\n\r\n  constructor({\r\n    time = 500,\r\n  } = {}) {\r\n    this.handle = null;\r\n    this.time = time;\r\n  }\r\n\r\n  setTime(time) {\r\n    this.time = time;\r\n  }\r\n\r\n  action(cb) {\r\n    clearTimeout(this.handle);\r\n    this.handle = setTimeout(() => {\r\n      cb();\r\n    }, this.time);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Throttle,\r\n};\r\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { XEvent } from '../../lib/XEvent';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { XSelectItem } from './xscreenitems/xselect/XSelectItem';\r\nimport { XDraw } from '../../canvas/XDraw';\r\nimport { Throttle } from '../../lib/Throttle';\r\nimport { BaseFont } from '../../canvas/font/BaseFont';\r\n\r\nclass XTableEdit extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-edit`);\r\n    this.table = table;\r\n    this.cell = null;\r\n    this.merge = null;\r\n    this.select = null;\r\n    this.throttle = new Throttle({ time: 100 });\r\n    this.attr('contenteditable', true);\r\n    this.html(PlainUtils.EMPTY);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.hide();\r\n  }\r\n\r\n  editOffset() {\r\n    const { table, cell } = this;\r\n    const {\r\n      xHeightLight, yHeightLight,\r\n    } = table;\r\n    const { fontAttr } = cell;\r\n    const { align } = fontAttr;\r\n    const left = xHeightLight.getLeft() + table.getIndexWidth();\r\n    const top = yHeightLight.getTop() + table.getIndexHeight();\r\n    const height = yHeightLight.getHeight();\r\n    const width = xHeightLight.getWidth();\r\n    switch (align) {\r\n      case BaseFont.ALIGN.left: {\r\n        this.cssRemoveKeys('right');\r\n        const maxHeight = table.visualHeight() - top;\r\n        const maxWidth = table.visualWidth() - left;\r\n        this.css({\r\n          left: `${left}px`,\r\n          top: `${top}px`,\r\n          'min-width': `${XDraw.offsetToLineInside(Math.min(width, maxWidth))}px`,\r\n          'min-height': `${XDraw.offsetToLineInside(Math.min(height, maxHeight))}px`,\r\n          'max-width': `${XDraw.offsetToLineInside(maxWidth)}px`,\r\n          'max-height': `${XDraw.offsetToLineInside(maxHeight)}px`,\r\n        });\r\n        break;\r\n      }\r\n      case BaseFont.ALIGN.center: {\r\n        this.cssRemoveKeys('right');\r\n        const box = this.box();\r\n        const maxHeight = table.visualHeight() - top;\r\n        if (box.width > width) {\r\n          const maxWidth = (table.visualWidth() - (left + width)) * 2 + width;\r\n          const realWidth = Math.min(box.width, maxWidth);\r\n          const realLeft = left - (realWidth / 2 - width / 2);\r\n          this.css({\r\n            left: `${realLeft}px`,\r\n            top: `${top}px`,\r\n            'min-width': `${XDraw.offsetToLineInside(Math.min(width, maxWidth))}px`,\r\n            'min-height': `${XDraw.offsetToLineInside(Math.min(height, maxHeight))}px`,\r\n            'max-width': `${XDraw.offsetToLineInside(maxWidth)}px`,\r\n            'max-height': `${XDraw.offsetToLineInside(maxHeight)}px`,\r\n          });\r\n        } else {\r\n          const maxWidth = table.visualWidth() - left;\r\n          this.css({\r\n            left: `${left}px`,\r\n            top: `${top}px`,\r\n            'min-width': `${XDraw.offsetToLineInside(Math.min(width, maxWidth))}px`,\r\n            'min-height': `${XDraw.offsetToLineInside(Math.min(height, maxHeight))}px`,\r\n            'max-width': `${XDraw.offsetToLineInside(maxWidth)}px`,\r\n            'max-height': `${XDraw.offsetToLineInside(maxHeight)}px`,\r\n          });\r\n        }\r\n        break;\r\n      }\r\n      case BaseFont.ALIGN.right: {\r\n        this.cssRemoveKeys('left');\r\n        const maxWidth = (left + width) - table.getIndexWidth();\r\n        const right = table.visualWidth() - (left + width);\r\n        const maxHeight = table.visualHeight() - top;\r\n        this.css({\r\n          right: `${right}px`,\r\n          top: `${top}px`,\r\n          'min-width': `${XDraw.offsetToLineInside(Math.min(width, maxWidth))}px`,\r\n          'min-height': `${XDraw.offsetToLineInside(Math.min(height, maxHeight))}px`,\r\n          'max-width': `${XDraw.offsetToLineInside(maxWidth)}px`,\r\n          'max-height': `${XDraw.offsetToLineInside(maxHeight)}px`,\r\n        });\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    const { xScreen } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    XEvent.bind(table);\r\n    XEvent.unbind([\r\n      xSelect.lt,\r\n      xSelect.t,\r\n      xSelect.l,\r\n      xSelect.br,\r\n    ]);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    const { xScreen } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const merges = table.getTableMerges();\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_WHEEL, (e) => {\r\n      e.stopPropagation();\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      e.stopPropagation();\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.INPUT, () => {\r\n      const { cell } = this;\r\n      const { fontAttr } = cell;\r\n      const { align } = fontAttr;\r\n      if (align === BaseFont.ALIGN.center) {\r\n        this.editOffset();\r\n      }\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.hideEdit();\r\n    });\r\n    XEvent.bind(table, Constant.SYSTEM_EVENT_TYPE.SCROLL, () => {\r\n      this.hideEdit();\r\n    });\r\n    XEvent.mouseDoubleClick(table, () => {\r\n      const { selectRange } = xSelect;\r\n      const { sri, sci } = selectRange;\r\n      if (!selectRange.multiple() || merges.getFirstIncludes(sri, sci)) {\r\n        this.showEdit();\r\n      }\r\n    });\r\n  }\r\n\r\n  showEdit() {\r\n    const { table } = this;\r\n    const merges = table.getTableMerges();\r\n    const cells = table.getTableCells();\r\n    const scrollView = table.getScrollView();\r\n    const { xScreen } = table;\r\n    const xSelect = xScreen.findType(XSelectItem);\r\n    const { selectRange } = xSelect;\r\n    if (selectRange && scrollView.intersects(selectRange)) {\r\n      const { sri, sci } = selectRange;\r\n      const merge = merges.getFirstIncludes(sri, sci);\r\n      const cell = cells.getCellOrNew(sri, sci);\r\n      this.merge = merge;\r\n      this.cell = cell;\r\n      this.select = selectRange;\r\n      this.show();\r\n      if (PlainUtils.isBlank(cell.text)) {\r\n        this.html(PlainUtils.EMPTY);\r\n      } else {\r\n        this.html(cell.text);\r\n      }\r\n      this.attr('style', table.getCellCssStyle(sri, sci));\r\n      this.editOffset();\r\n      this.throttle.action(() => {\r\n        PlainUtils.keepLastIndex(this.el);\r\n      });\r\n    }\r\n  }\r\n\r\n  hideEdit() {\r\n    const { select } = this;\r\n    const { table } = this;\r\n    const cells = table.getTableCells();\r\n    const { tableDataSnapshot } = table;\r\n    const { cellDataProxy } = tableDataSnapshot;\r\n    if (select) {\r\n      const origin = cells.getCellOrNew(select.sri, select.sci);\r\n      const cell = origin.clone();\r\n      const text = PlainUtils.trim(this.text());\r\n      this.hide();\r\n      if (cell.text !== text) {\r\n        tableDataSnapshot.begin();\r\n        cell.setText(text);\r\n        cellDataProxy.setCell(select.sri, select.sci, cell);\r\n        tableDataSnapshot.end();\r\n        table.render();\r\n      }\r\n      this.select = null;\r\n    }\r\n  }\r\n\r\n  show() {\r\n    this.css({\r\n      'min-width': '0px',\r\n      'min-height': '0px',\r\n      'max-width': '0px',\r\n      'max-height': '0px',\r\n    });\r\n    return super.show();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableEdit,\r\n};\r\n","import { SolidLine } from './Line';\r\n\r\nclass Grid {\r\n\r\n  constructor(draw, attr = {}) {\r\n    this.solidLine = new SolidLine(draw, attr);\r\n  }\r\n\r\n  horizonLine(sx, sy, ex, ey) {\r\n    const { solidLine } = this;\r\n    solidLine.horizonLine(sx, sy, ex, ey);\r\n  }\r\n\r\n  verticalLine(sx, sy, ex, ey) {\r\n    const { solidLine } = this;\r\n    solidLine.verticalLine(sx, sy, ex, ey);\r\n  }\r\n}\r\n\r\nexport { Grid };\r\n","class Box {\r\n\r\n  constructor({\r\n    rect, draw, path, background,\r\n  }) {\r\n    this.draw = draw;\r\n    this.path = path;\r\n    this.rect = rect;\r\n    this.background = background;\r\n  }\r\n\r\n  setPath({\r\n    path,\r\n  }) {\r\n    this.path = path;\r\n  }\r\n\r\n  setRect({\r\n    rect,\r\n  }) {\r\n    this.rect = rect;\r\n  }\r\n\r\n  setBackground({\r\n    color,\r\n  }) {\r\n    this.background = color;\r\n  }\r\n\r\n  render() {\r\n    const { draw, rect, path, background } = this;\r\n    if (rect && background) {\r\n      draw.attr({\r\n        fillStyle: background,\r\n      });\r\n      draw.fillRect(rect.x, rect.y, rect.width, rect.height);\r\n      return;\r\n    }\r\n    if (path && background) {\r\n      draw.attr({\r\n        fillStyle: background,\r\n      });\r\n      draw.fillPath(path);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { Box };\r\n","import { Cell } from './Cell';\nimport { PlainUtils } from '../../../utils/PlainUtils';\n\n/**\n * Cells\n * @author jerry\n */\nclass Cells {\n\n  constructor({\n    onChange = () => {},\n    table,\n    xTableData,\n    xIteratorBuilder,\n  }) {\n    this.table = table;\n    this.xTableData = xTableData;\n    this.onChange = onChange;\n    this.xIteratorBuilder = xIteratorBuilder;\n  }\n\n  emptyRectRange(rectRange) {\n    let empty = true;\n    rectRange.each(this.xIteratorBuilder, (ri, ci) => {\n      const cell = this.getCell(ri, ci);\n      if (PlainUtils.isNotEmptyObject(cell) && !PlainUtils.isBlank(cell.text)) {\n        empty = false;\n        return false;\n      }\n      return true;\n    });\n    return empty;\n  }\n\n  setCell(ri, ci, cell) {\n    const item = this.xTableData.get(ri, ci);\n    if (item) {\n      item.setCell(cell);\n      this.onChange(ri, ci);\n    }\n  }\n\n  setCellOrNew(ri, ci, cell) {\n    const item = this.xTableData.getOrNew(ri, ci);\n    item.setCell(cell);\n    this.onChange(ri, ci);\n  }\n\n  getCellOrNew(ri, ci) {\n    const item = this.xTableData.getOrNew(ri, ci);\n    const find = item.getCell();\n    if (find) {\n      return find;\n    }\n    const cell = new Cell({ text: PlainUtils.EMPTY });\n    item.setCell(cell);\n    return cell;\n  }\n\n  getCellOrMergeCell(ri, ci) {\n    const { table } = this;\n    const { merges } = table;\n    const merge = merges.getFirstIncludes(ri, ci);\n    if (merge) {\n      return this.getCell(merge.sri, merge.sci);\n    }\n    return this.getCell(ri, ci);\n  }\n\n  getCell(ri, ci) {\n    const item = this.xTableData.get(ri, ci);\n    if (item) {\n      return item.getCell();\n    }\n    return null;\n  }\n\n  getData() {\n    return this.xTableData.getItems().map(rows => rows.map((item) => {\n      if (item) {\n        return item.getCell();\n      }\n      return null;\n    }));\n  }\n\n}\n\nexport {\n  Cells,\n};\n","class DateUtils {\r\n\r\n  static parserToDate(dateText, format) {\r\n    if (!dateText) {\r\n      return null;\r\n    }\r\n    const defaultVal = new Date('1970/01/01 00:00:00');\r\n    const o = [{\r\n      reg: 'y+',\r\n    }, {\r\n      reg: 'M+',\r\n    }, {\r\n      reg: 'd+',\r\n    }, {\r\n      reg: 'h+',\r\n    }, {\r\n      reg: 'm+',\r\n    }, {\r\n      reg: 's+',\r\n    }, {\r\n      reg: 'S',\r\n    }];\r\n    let year = defaultVal.getFullYear();\r\n    let month = defaultVal.getMonth() + 1;\r\n    let day = defaultVal.getDate();\r\n    let hours = defaultVal.getHours();\r\n    let minutes = defaultVal.getMinutes();\r\n    let seconds = defaultVal.getSeconds();\r\n    let milliseconds = defaultVal.getMilliseconds();\r\n    let index = 1;\r\n    for (let j = 0; j < format.length; j += 1) {\r\n      const oneChar = format[j];\r\n      for (let i = 0; i < o.length; i += 1) {\r\n        const onePart = o[i];\r\n        const onePartReg = onePart.reg;\r\n        if (onePartReg[0] === oneChar) {\r\n          if (!onePart.index) {\r\n            onePart.index = index;\r\n            index += 1;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    for (let i = 0; i < o.length; i += 1) {\r\n      const onePart = o[i];\r\n      const onePartReg = onePart.reg;\r\n      const re = new RegExp(`(${onePartReg})`);\r\n      const res = re.exec(format);\r\n      if (res) {\r\n        const formatPart = res[0];\r\n        const replaceVal = `([0-9]{1,${formatPart.length}})`;\r\n        // eslint-disable-next-line no-param-reassign\r\n        format = format.replace(formatPart, replaceVal);\r\n      }\r\n    }\r\n    const dataInfo = {};\r\n    const re = new RegExp(format);\r\n    const res = re.exec(dateText);\r\n    if (res) {\r\n      for (let i = 1; i < res.length; i += 1) {\r\n        dataInfo[i] = res[i];\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n    if (o[0].index) {\r\n      const { index } = o[0];\r\n      year = dataInfo[index];\r\n    }\r\n    if (o[1].index) {\r\n      const { index } = o[1];\r\n      month = dataInfo[index];\r\n    }\r\n    if (o[2].index) {\r\n      const { index } = o[2];\r\n      day = dataInfo[index];\r\n    }\r\n    if (o[3].index) {\r\n      const { index } = o[3];\r\n      hours = dataInfo[index];\r\n    }\r\n    if (o[4].index) {\r\n      const { index } = o[4];\r\n      minutes = dataInfo[index];\r\n    }\r\n    if (o[5].index) {\r\n      const { index } = o[5];\r\n      seconds = dataInfo[index];\r\n    }\r\n    if (o[6].index) {\r\n      const { index } = o[6];\r\n      milliseconds = dataInfo[index];\r\n    }\r\n    return new Date(year, month - 1, day, hours, minutes, seconds, milliseconds);\r\n  }\r\n\r\n  static dateFormat(fmt, date) {\r\n    const o = {\r\n      'M+': date.getMonth() + 1,\r\n      'd+': date.getDate(),\r\n      'h+': date.getHours(),\r\n      'm+': date.getMinutes(),\r\n      's+': date.getSeconds(),\r\n      'q+': Math.floor((date.getMonth() + 3) / 3),\r\n      S: date.getMilliseconds(),\r\n    };\r\n    const reYear = /(y+)/;\r\n    const resultYear = reYear.exec(fmt);\r\n    if (resultYear) {\r\n      const yearFormatPart = resultYear[0];\r\n      const yearVal = (date.getFullYear().toString()).substr(4 - yearFormatPart.length);\r\n      // eslint-disable-next-line no-param-reassign\r\n      fmt = fmt.replace(yearFormatPart, yearVal);\r\n    }\r\n    // eslint-disable-next-line guard-for-in,no-restricted-syntax\r\n    for (const k in o) {\r\n      const re = new RegExp(`(${k})`);\r\n      const res = re.exec(fmt);\r\n      if (res) {\r\n        const Val = o[k].toString();\r\n        const formatPart = res[0];\r\n        const replaceVal = (formatPart.length === 1) ? (Val) : ((`00${Val}`).substr(Val.length));\r\n        // eslint-disable-next-line no-param-reassign\r\n        fmt = fmt.replace(formatPart, replaceVal);\r\n      }\r\n    }\r\n    return fmt;\r\n  }\r\n\r\n}\r\n\r\nexport { DateUtils };\r\n","import { PlainUtils } from '../../utils/PlainUtils';\r\nimport { DateUtils } from '../../utils/DateUtils';\r\n\r\nfunction parserToDate(text) {\r\n  let result = DateUtils.parserToDate(text, 'yyyy/MM/dd hh:mm:ss');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'yyyy/MM/dd');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'hh:mm:ss');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'MM月dd日');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'yyyy年MM月');\r\n  if (result) return result;\r\n  result = DateUtils.parserToDate(text, 'yyyy年MM月dd日');\r\n  if (result) return result;\r\n  return null;\r\n}\r\n\r\nclass Format {\r\n\r\n  default(value) {\r\n    return value;\r\n  }\r\n\r\n  text(value) {\r\n    return value;\r\n  }\r\n\r\n  number(value) {\r\n    if (PlainUtils.isNumber(value)) {\r\n      if (value.toString().indexOf('.') !== -1) {\r\n        const lastIndex = value.toString().lastIndexOf('.') + 1;\r\n        return value.toString().substring(0, lastIndex + 2);\r\n      }\r\n      return `${value}.00`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  percentage(value) {\r\n    if (PlainUtils.isNumber(value)) {\r\n      return `${value}%`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  fraction(value) {\r\n    if (PlainUtils.isFraction(value)) {\r\n      const left = value.split('/')[0];\r\n      const right = value.split('/')[1];\r\n      return PlainUtils.parseInt(left) / PlainUtils.parseInt(right);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  ENotation(value) {\r\n    if (PlainUtils.isNumber(value)) {\r\n      const number = PlainUtils.parseFloat(value);\r\n      return number.toExponential(2);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  rmb(value) {\r\n    if (PlainUtils.isNumber(value)) {\r\n      return `￥${value}`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  hk(value) {\r\n    if (PlainUtils.isNumber(value)) {\r\n      return `HK${value}`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  dollar(value) {\r\n    if (PlainUtils.isNumber(value)) {\r\n      return `$${value}`;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  date1(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('yyyy/MM/dd', result);\r\n    return value;\r\n  }\r\n\r\n  date2(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('MM月dd日', result);\r\n    return value;\r\n  }\r\n\r\n  date3(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('yyyy年MM月', result);\r\n    return value;\r\n  }\r\n\r\n  date4(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('yyyy年MM月dd日', result);\r\n    return value;\r\n  }\r\n\r\n  date5(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('yyyy/MM/dd hh:mm:ss', result);\r\n    return value;\r\n  }\r\n\r\n  time(value) {\r\n    const result = parserToDate(value);\r\n    if (result) return DateUtils.dateFormat('hh:mm:ss', result);\r\n    return value;\r\n  }\r\n}\r\n\r\nconst format = new Format();\r\n\r\nexport default (type, value) => format[type](value);\r\n","import { XDraw } from './XDraw';\r\n\r\n/**\r\n * RTSinKit\r\n */\r\nclass RTSinKit {\r\n\r\n  /**\r\n   * 计算对边\r\n   * @see http://math001.com/trigonometric_function/\r\n   * @param tilt 斜边\r\n   * @param angle 角度\r\n   */\r\n  static inverse({ tilt, angle }) {\r\n    return Math.abs(tilt * Math.sin(XDraw.radian(angle)));\r\n  }\r\n\r\n  /**\r\n   * 计算斜边\r\n   * @see http://math001.com/trigonometric_function/\r\n   * @param inverse 对边\r\n   * @param angle 角度\r\n   */\r\n  static tilt({ inverse, angle }) {\r\n    return Math.abs(inverse / Math.sin(XDraw.radian(angle)));\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * RTCosKit\r\n */\r\nclass RTCosKit {\r\n\r\n  /**\r\n   * 计算邻边\r\n   * @see http://math001.com/trigonometric_function/\r\n   * @param tilt\r\n   * @param angle\r\n   */\r\n  static nearby({ tilt, angle }) {\r\n    return Math.abs(tilt * Math.cos(XDraw.radian((angle))));\r\n  }\r\n\r\n  /**\r\n   * 计算斜边\r\n   * @see http://math001.com/trigonometric_function/\r\n   * @param nearby 领边\r\n   * @param angle 角度\r\n   */\r\n  static tilt({ nearby, angle }) {\r\n    return Math.abs(nearby / Math.cos(XDraw.radian((angle))));\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RTSinKit, RTCosKit,\r\n};\r\n","import { Rect } from './Rect';\r\n\r\nconst ANGLE_ORIGIN = {\r\n  TOP_LEFT: 'top-left',\r\n  TOP_CENTER: 'top-center',\r\n  TOP_RIGHT: 'top-right',\r\n  MIDDLE_LEFT: 'middle-left',\r\n  MIDDLE_CENTER: 'middle-center',\r\n  MIDDLE_RIGHT: 'middle-right',\r\n  BOTTOM_LEFT: 'bottom-left',\r\n  BOTTOM_CENTER: 'bottom-center',\r\n  BOTTOM_RIGHT: 'bottom-right',\r\n};\r\n\r\nclass Angle {\r\n\r\n  constructor({\r\n    angle,\r\n    draw,\r\n    origin = ANGLE_ORIGIN.MIDDLE_CENTER,\r\n    rect = new Rect({ x: 0, y: 0, width: 0, height: 0 }),\r\n  }) {\r\n    this.draw = draw;\r\n    this.origin = origin;\r\n    this.rect = rect;\r\n    this.angle = angle;\r\n  }\r\n\r\n  rotate() {\r\n    const { origin, draw, rect, angle } = this;\r\n    const { x, y, width, height } = rect;\r\n    draw.save();\r\n    let tx = 0;\r\n    let ty = 0;\r\n    switch (origin) {\r\n      case ANGLE_ORIGIN.TOP_LEFT:\r\n        tx = x;\r\n        ty = y;\r\n        break;\r\n      case ANGLE_ORIGIN.TOP_CENTER:\r\n        tx = x + width / 2;\r\n        ty = y;\r\n        break;\r\n      case ANGLE_ORIGIN.TOP_RIGHT:\r\n        tx = x + width;\r\n        ty = y;\r\n        break;\r\n      case ANGLE_ORIGIN.MIDDLE_LEFT:\r\n        tx = x;\r\n        ty = y + height / 2;\r\n        break;\r\n      case ANGLE_ORIGIN.MIDDLE_CENTER:\r\n        tx = x + width / 2;\r\n        ty = y + height / 2;\r\n        break;\r\n      case ANGLE_ORIGIN.MIDDLE_RIGHT:\r\n        tx = x + width;\r\n        ty = y + height / 2;\r\n        break;\r\n      case ANGLE_ORIGIN.BOTTOM_LEFT:\r\n        tx = x;\r\n        ty = y + height;\r\n        break;\r\n      case ANGLE_ORIGIN.BOTTOM_CENTER:\r\n        tx = x + width / 2;\r\n        ty = y + height;\r\n        break;\r\n      case ANGLE_ORIGIN.BOTTOM_RIGHT:\r\n        tx = x + width;\r\n        ty = y + height;\r\n        break;\r\n      default: break;\r\n    }\r\n    const offsetX = draw.getOffsetX();\r\n    const offsetY = draw.getOffsetY();\r\n    draw.translate(tx + offsetX, ty + offsetY)\r\n      .rotate(angle)\r\n      .translate(-(tx + offsetX), -(ty + offsetY));\r\n    return this;\r\n  }\r\n\r\n  revert() {\r\n    const { draw } = this;\r\n    draw.restore();\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Angle,\r\n  ANGLE_ORIGIN,\r\n};\r\n","class DrawResult {\r\n\r\n  constructor({\r\n    width = 0,\r\n    rightSdist = 0,\r\n    leftSdist = 0,\r\n  } = {}) {\r\n    this.width = width;\r\n    this.rightSdist = rightSdist;\r\n    this.leftSdist = leftSdist;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  DrawResult,\r\n};\r\n","import { BaseFont } from '../BaseFont';\nimport { RTCosKit, RTSinKit } from '../../RTFunction';\nimport { Crop } from '../../Crop';\nimport { Angle } from '../../Angle';\nimport { Rect } from '../../Rect';\nimport { DrawResult } from '../DrawResult';\n\nclass AngleBoxDraw extends BaseFont {\n\n  constructor({\n    draw, ruler, rect, overflow, lineHeight = 4, attr,\n  }) {\n    super({\n      draw, ruler, attr,\n    });\n    this.rect = rect;\n    this.overflow = overflow;\n    this.lineHeight = lineHeight;\n  }\n\n  drawingFont() {\n    const { ruler } = this;\n    if (ruler.isBlank()) {\n      return new DrawResult();\n    }\n    const { draw, attr } = this;\n    const { textWrap } = attr;\n    draw.attr({\n      textAlign: BaseFont.ALIGN.left,\n      textBaseline: BaseFont.VERTICAL_ALIGN.top,\n      font: `${attr.italic ? 'italic' : ''} ${attr.bold ? 'bold' : ''} ${attr.size}px ${attr.name}`,\n      fillStyle: attr.color,\n      strokeStyle: attr.color,\n    });\n    if (ruler.hasBreak()) {\n      return this.textWrapDraw();\n    }\n    switch (textWrap) {\n      case BaseFont.TEXT_WRAP.OVER_FLOW:\n        return this.overflowDraw();\n      case BaseFont.TEXT_WRAP.TRUNCATE:\n        return this.truncateDraw();\n      case BaseFont.TEXT_WRAP.WORD_WRAP:\n        return this.textWrapDraw();\n    }\n    return new DrawResult();\n  }\n\n  drawingLine(type, tx, ty, textWidth) {\n    const { draw, attr } = this;\n    const { size } = attr;\n    const s = [0, 0];\n    const e = [0, 0];\n    if (type === 'strike') {\n      s[0] = tx;\n      e[0] = tx + textWidth;\n      s[1] = ty + size / 2;\n      e[1] = ty + size / 2;\n    }\n    if (type === 'underline') {\n      s[0] = tx;\n      e[0] = tx + textWidth;\n      s[1] = ty + size;\n      e[1] = ty + size;\n    }\n    draw.line(s, e);\n  }\n\n  truncateDraw() {\n    return this.overflowDraw();\n  }\n\n  overflowDraw() {\n    const { draw, ruler, attr } = this;\n    const { rect, overflow } = this;\n    const { x, y, width, height } = rect;\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\n    // 填充宽度\n    const verticalAlignPadding = this.getVerticalAlignPadding();\n    const alignPadding = this.getAlignPadding();\n    // 角度边界\n    let { angle } = attr;\n    if (angle < -90) {\n      angle = -90;\n    }\n    if (angle > 90) {\n      angle = 90;\n    }\n    if (angle === 0) {\n      throw new TypeError('文字的角度必须是在90<0或者0>90之间!');\n    }\n    // 文本长度\n    ruler.overflowRuler();\n    const {\n      overflowText: text,\n      overflowTextWidth: textWidth,\n    } = ruler;\n    // 文本块大小\n    const trigonometricWidth = Math.max(RTCosKit.nearby({\n      tilt: textWidth,\n      angle,\n    }), size);\n    const trigonometricHeight = RTSinKit.inverse({\n      tilt: textWidth,\n      angle,\n    });\n    const limitHeight = trigonometricHeight - height;\n    // 计算文本绘制位置旋转中心\n    let rtx = x;\n    let rty = y;\n    switch (align) {\n      case BaseFont.ALIGN.left:\n        rtx += alignPadding;\n        break;\n      case BaseFont.ALIGN.center:\n        rtx += width / 2 - trigonometricWidth / 2;\n        break;\n      case BaseFont.ALIGN.right:\n        rtx += width - trigonometricWidth - alignPadding;\n        break;\n    }\n    switch (verticalAlign) {\n      case BaseFont.VERTICAL_ALIGN.top:\n        rty += verticalAlignPadding;\n        break;\n      case BaseFont.VERTICAL_ALIGN.center:\n        rty += height / 2 - trigonometricHeight / 2;\n        break;\n      case BaseFont.VERTICAL_ALIGN.bottom:\n        rty += height - trigonometricHeight - verticalAlignPadding;\n        break;\n    }\n    // 边界检查\n    const outboundsHeight = trigonometricHeight + verticalAlignPadding > overflow.height;\n    const outboundsWidth = trigonometricWidth + alignPadding > overflow.width;\n    if (outboundsHeight || outboundsWidth) {\n      const crop = new Crop({\n        draw,\n        rect: overflow,\n      });\n      const dwAngle = new Angle({\n        draw,\n        angle,\n        rect: new Rect({\n          x: rtx,\n          y: rty,\n          width: trigonometricWidth,\n          height: trigonometricHeight,\n        }),\n      });\n      crop.open();\n      dwAngle.rotate();\n      const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\n      const ty = rty + (trigonometricHeight / 2 - size / 2);\n      draw.fillText(text, tx, ty);\n      if (underline) {\n        this.drawingLine('underline', tx, ty, textWidth);\n      }\n      if (strikethrough) {\n        this.drawingLine('strike', tx, ty, textWidth);\n      }\n      dwAngle.revert();\n      crop.close();\n    } else {\n      const dwAngle = new Angle({\n        draw,\n        angle,\n        rect: new Rect({\n          x: rtx,\n          y: rty,\n          width: trigonometricWidth,\n          height: trigonometricHeight,\n        }),\n      });\n      dwAngle.rotate();\n      const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\n      const ty = rty + (trigonometricHeight / 2 - size / 2);\n      draw.fillText(text, tx, ty);\n      if (underline) {\n        this.drawingLine('underline', tx, ty, textWidth);\n      }\n      if (strikethrough) {\n        this.drawingLine('strike', tx, ty, textWidth);\n      }\n      dwAngle.revert();\n    }\n    // 文本宽度\n    let textHaveWidth = trigonometricWidth;\n    if (limitHeight > 0) {\n      const tilt = RTSinKit.tilt({\n        inverse: height,\n        angle,\n      });\n      textHaveWidth = RTCosKit.nearby({\n        tilt, angle,\n      });\n    }\n    return new DrawResult({\n      width: textHaveWidth + alignPadding,\n    });\n  }\n\n  textWrapDraw() {\n    const { draw, ruler, attr } = this;\n    const { rect, lineHeight } = this;\n    const { width, height } = rect;\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\n    // 填充宽度\n    const verticalAlignPadding = this.getVerticalAlignPadding();\n    const alignPadding = this.getAlignPadding();\n    // 角度边界\n    let { angle } = attr;\n    if (angle < -90) {\n      angle = -90;\n    }\n    if (angle > 90) {\n      angle = 90;\n    }\n    if (angle === 0) {\n      throw new TypeError('文字的角度必须是在90<0或者0>90之间!');\n    }\n    // 绘制文本\n    if (angle > 0) {\n      // 折行文本计算\n      ruler.textWrapRuler();\n      const {\n        textWrapTextArray: textArray,\n        textWrapMaxLen: maxLen,\n      } = ruler;\n      const textArrayLen = textArray.length;\n      // 多行文本\n      if (textArrayLen > 1) {\n        // 文本间隙\n        const spacing = RTSinKit.tilt({\n          inverse: size + lineHeight,\n          angle,\n        });\n        // 文本宽高\n        const textWidth = Math.max(RTCosKit.nearby({\n          tilt: maxLen,\n          angle,\n        }), size);\n        const textHeight = RTSinKit.inverse({\n          tilt: maxLen,\n          angle,\n        });\n        // 总宽度\n        const totalWidth = textWidth + ((textArrayLen - 1) * spacing);\n        // 文本坐标\n        let bx = rect.x;\n        let by = rect.y;\n        switch (align) {\n          case BaseFont.ALIGN.left:\n            bx += alignPadding;\n            break;\n          case BaseFont.ALIGN.center:\n            bx += width / 2 - totalWidth / 2;\n            break;\n          case BaseFont.ALIGN.right:\n            bx += width - totalWidth - alignPadding;\n            break;\n        }\n        switch (verticalAlign) {\n          case BaseFont.VERTICAL_ALIGN.top:\n            by += verticalAlignPadding;\n            break;\n          case BaseFont.VERTICAL_ALIGN.center:\n            by += height / 2 - textHeight / 2;\n            break;\n          case BaseFont.VERTICAL_ALIGN.bottom:\n            by += height - textHeight - verticalAlignPadding;\n            break;\n        }\n        // 渲染文本\n        let jj = 0;\n        while (jj < textArrayLen) {\n          // 计算文本的绘制位置旋转中心\n          const item = textArray[jj];\n          const rx = item.tx + bx;\n          const ry = item.ty + by;\n          let ax = 0;\n          let ay = 0;\n          switch (align) {\n            case BaseFont.ALIGN.left: {\n              const tilt = item.len / 2;\n              const tw = Math.max(RTCosKit.nearby({\n                tilt,\n                angle,\n              }), size);\n              const th = RTSinKit.inverse({\n                tilt,\n                angle,\n              });\n              ax += rx + tw;\n              ay += ry + textHeight - th;\n              break;\n            }\n            case BaseFont.ALIGN.center: {\n              ax = rx + textWidth / 2;\n              ay = ry + textHeight / 2;\n              break;\n            }\n            case BaseFont.ALIGN.right: {\n              const tilt = item.len / 2;\n              const tw = Math.max(RTCosKit.nearby({\n                tilt,\n                angle,\n              }), size);\n              const th = RTSinKit.inverse({\n                tilt,\n                angle,\n              });\n              ax += rx + textWidth - tw;\n              ay += ry + th;\n              break;\n            }\n          }\n          const tx = ax - item.len / 2;\n          const ty = ay - size / 2;\n          // 旋转并且绘制文本\n          const dwAngle = new Angle({\n            draw,\n            angle,\n            rect: new Rect({\n              x: tx,\n              y: ty,\n              width: item.len,\n              height: size,\n            }),\n          });\n          dwAngle.rotate();\n          draw.fillText(item.text, tx, ty);\n          if (underline) {\n            this.drawingLine('underline', tx, ty, item.len);\n          }\n          if (strikethrough) {\n            this.drawingLine('strike', tx, ty, item.len);\n          }\n          dwAngle.revert();\n          jj += 1;\n        }\n        return new DrawResult({\n          width: totalWidth + alignPadding,\n        });\n      }\n      // 文本大小\n      const {\n        textWrapText: text,\n        textWrapTextWidth: textWidth,\n      } = ruler;\n      const trigonometricWidth = Math.max(RTCosKit.nearby({\n        tilt: textWidth,\n        angle,\n      }), size);\n      const trigonometricHeight = RTSinKit.inverse({\n        tilt: textWidth,\n        angle,\n      });\n      // 文本坐标\n      let rtx = rect.x;\n      let rty = rect.y;\n      switch (align) {\n        case BaseFont.ALIGN.left:\n          rtx += alignPadding;\n          break;\n        case BaseFont.ALIGN.center:\n          rtx += width / 2 - trigonometricWidth / 2;\n          break;\n        case BaseFont.ALIGN.right:\n          rtx += width - trigonometricWidth - alignPadding;\n          break;\n      }\n      switch (verticalAlign) {\n        case BaseFont.VERTICAL_ALIGN.top:\n          rty += verticalAlignPadding;\n          break;\n        case BaseFont.VERTICAL_ALIGN.center:\n          rty += height / 2 - trigonometricHeight / 2;\n          break;\n        case BaseFont.VERTICAL_ALIGN.bottom:\n          rty += height - trigonometricHeight - verticalAlignPadding;\n          break;\n      }\n      // 渲染文本\n      const dwAngle = new Angle({\n        draw,\n        angle,\n        rect: new Rect({\n          x: rtx,\n          y: rty,\n          width: trigonometricWidth,\n          height: trigonometricHeight,\n        }),\n      });\n      dwAngle.rotate();\n      const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\n      const ty = rty + (trigonometricHeight / 2 - size / 2);\n      draw.fillText(text, tx, ty);\n      if (underline) {\n        this.drawingLine('underline', tx, ty, textWidth);\n      }\n      if (strikethrough) {\n        this.drawingLine('strike', tx, ty, textWidth);\n      }\n      dwAngle.revert();\n      return new DrawResult({\n        width: trigonometricWidth + alignPadding,\n      });\n    }\n    // 折行文本计算\n    ruler.textWrapRuler();\n    const {\n      textWrapTextArray: textArray,\n      textWrapMaxLen: maxLen,\n    } = ruler;\n    const textArrayLen = textArray.length;\n    // 多行文本\n    if (textArrayLen > 1) {\n      // 计算文本块之间的间隙\n      const spacing = RTSinKit.tilt({\n        inverse: size + lineHeight,\n        angle,\n      });\n      // 计算每个文本块宽度和高度\n      const textWidth = Math.max(RTCosKit.nearby({\n        tilt: maxLen,\n        angle,\n      }), size);\n      const textHeight = RTSinKit.inverse({\n        tilt: maxLen,\n        angle,\n      });\n      // 文本总宽度\n      const totalWidth = textWidth + ((textArrayLen - 1) * spacing);\n      // 文本坐标\n      let bx = rect.x;\n      let by = rect.y;\n      switch (align) {\n        case BaseFont.ALIGN.left:\n          bx += alignPadding;\n          break;\n        case BaseFont.ALIGN.center:\n          bx += width / 2 - totalWidth / 2;\n          break;\n        case BaseFont.ALIGN.right:\n          bx += width - totalWidth - alignPadding;\n          break;\n      }\n      switch (verticalAlign) {\n        case BaseFont.VERTICAL_ALIGN.top:\n          by += verticalAlignPadding;\n          break;\n        case BaseFont.VERTICAL_ALIGN.center:\n          by += height / 2 - textHeight / 2;\n          break;\n        case BaseFont.VERTICAL_ALIGN.bottom:\n          by += height - textHeight - verticalAlignPadding;\n          break;\n      }\n      // 渲染文本\n      let jj = 0;\n      while (jj < textArrayLen) {\n        // 计算文本的绘制位置旋转中心\n        const item = textArray[jj];\n        const rx = item.tx + bx;\n        const ry = item.ty + by;\n        let ax = 0;\n        let ay = 0;\n        switch (align) {\n          case BaseFont.ALIGN.left: {\n            const tilt = item.len / 2;\n            const tw = Math.max(RTCosKit.nearby({\n              tilt,\n              angle,\n            }), size);\n            const th = RTSinKit.inverse({\n              tilt,\n              angle,\n            });\n            ax += rx + tw;\n            ay += ry + th;\n            break;\n          }\n          case BaseFont.ALIGN.center: {\n            ax = rx + textWidth / 2;\n            ay = ry + textHeight / 2;\n            break;\n          }\n          case BaseFont.ALIGN.right: {\n            const tilt = item.len / 2;\n            const tw = Math.max(RTCosKit.nearby({\n              tilt,\n              angle,\n            }), size);\n            const th = RTSinKit.inverse({\n              tilt,\n              angle,\n            });\n            ax += rx + textWidth - tw;\n            ay += ry + textHeight - th;\n            break;\n          }\n        }\n        const tx = ax - item.len / 2;\n        const ty = ay - size / 2;\n        // 旋转并且绘制文本\n        const dwAngle = new Angle({\n          draw,\n          angle,\n          rect: new Rect({\n            x: tx,\n            y: ty,\n            width: item.len,\n            height: size,\n          }),\n        });\n        dwAngle.rotate();\n        draw.fillText(item.text, tx, ty);\n        if (underline) {\n          this.drawingLine('underline', tx, ty, item.len);\n        }\n        if (strikethrough) {\n          this.drawingLine('strike', tx, ty, item.len);\n        }\n        dwAngle.revert();\n        jj += 1;\n      }\n      return new DrawResult({\n        width: totalWidth + alignPadding,\n      });\n    }\n    // 计算文本块大小\n    const {\n      textWrapText: text,\n      textWrapTextWidth: textWidth,\n    } = ruler;\n    const trigonometricWidth = Math.max(RTCosKit.nearby({\n      tilt: textWidth,\n      angle,\n    }), size);\n    const trigonometricHeight = RTSinKit.inverse({\n      tilt: textWidth,\n      angle,\n    });\n    // 计算文本绘制位置旋转中心\n    let rtx = rect.x;\n    let rty = rect.y;\n    switch (align) {\n      case BaseFont.ALIGN.left:\n        rtx += alignPadding;\n        break;\n      case BaseFont.ALIGN.center:\n        rtx += width / 2 - trigonometricWidth / 2;\n        break;\n      case BaseFont.ALIGN.right:\n        rtx += width - trigonometricWidth - alignPadding;\n        break;\n    }\n    switch (verticalAlign) {\n      case BaseFont.VERTICAL_ALIGN.top:\n        rty += verticalAlignPadding;\n        break;\n      case BaseFont.VERTICAL_ALIGN.center:\n        rty += height / 2 - trigonometricHeight / 2;\n        break;\n      case BaseFont.VERTICAL_ALIGN.bottom:\n        rty += height - trigonometricHeight - verticalAlignPadding;\n        break;\n    }\n    // 渲染文本\n    const dwAngle = new Angle({\n      draw,\n      angle,\n      rect: new Rect({\n        x: rtx,\n        y: rty,\n        width: trigonometricWidth,\n        height: trigonometricHeight,\n      }),\n    });\n    dwAngle.rotate();\n    const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\n    const ty = rty + (trigonometricHeight / 2 - size / 2);\n    draw.fillText(text, tx, ty);\n    if (underline) {\n      this.drawingLine('underline', tx, ty, textWidth);\n    }\n    if (strikethrough) {\n      this.drawingLine('strike', tx, ty, textWidth);\n    }\n    dwAngle.revert();\n    return new DrawResult({\n      width: trigonometricWidth + alignPadding,\n    });\n  }\n\n}\n\nexport {\n  AngleBoxDraw,\n};\n","import { BaseFont } from '../BaseFont';\nimport { RTCosKit, RTSinKit } from '../../RTFunction';\nimport { Rect } from '../../Rect';\nimport { Crop } from '../../Crop';\nimport { Angle } from '../../Angle';\nimport { DrawResult } from '../DrawResult';\n\nclass AngleBarDraw extends BaseFont {\n\n  constructor({\n    draw, ruler, rect, overflow, lineHeight = 4, attr,\n  }) {\n    super({\n      draw, ruler, attr,\n    });\n    this.rect = rect;\n    this.overflow = overflow;\n    this.lineHeight = lineHeight;\n  }\n\n  drawingFont() {\n    const { ruler } = this;\n    if (ruler.isBlank()) {\n      return new DrawResult();\n    }\n    const { draw, attr } = this;\n    const { textWrap } = attr;\n    draw.attr({\n      textAlign: BaseFont.ALIGN.left,\n      textBaseline: BaseFont.VERTICAL_ALIGN.top,\n      font: `${attr.italic ? 'italic' : ''} ${attr.bold ? 'bold' : ''} ${attr.size}px ${attr.name}`,\n      fillStyle: attr.color,\n      strokeStyle: attr.color,\n    });\n    if (ruler.hasBreak()) {\n      return this.textWrapDraw();\n    }\n    switch (textWrap) {\n      case BaseFont.TEXT_WRAP.OVER_FLOW:\n        return this.overflowDraw();\n      case BaseFont.TEXT_WRAP.TRUNCATE:\n        return this.truncateDraw();\n      case BaseFont.TEXT_WRAP.WORD_WRAP:\n        return this.textWrapDraw();\n    }\n    return new DrawResult();\n  }\n\n  drawingLine(type, tx, ty, textWidth) {\n    const { draw, attr } = this;\n    const { size } = attr;\n    const s = [0, 0];\n    const e = [0, 0];\n    if (type === 'strike') {\n      s[0] = tx;\n      e[0] = tx + textWidth;\n      s[1] = ty + size / 2;\n      e[1] = ty + size / 2;\n    }\n    if (type === 'underline') {\n      s[0] = tx;\n      e[0] = tx + textWidth;\n      s[1] = ty + size;\n      e[1] = ty + size;\n    }\n    draw.line(s, e);\n  }\n\n  truncateDraw() {\n    return this.overflowDraw();\n  }\n\n  overflowDraw() {\n    const { draw, ruler, attr } = this;\n    const { rect } = this;\n    const { x, y, width, height } = rect;\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\n    // 填充宽度\n    const verticalAlignPadding = this.getVerticalAlignPadding();\n    const alignPadding = this.getAlignPadding();\n    // 角度边界\n    let { angle } = attr;\n    if (angle < -90) {\n      angle = -90;\n    }\n    if (angle > 90) {\n      angle = 90;\n    }\n    if (angle === 0) {\n      throw new TypeError('文字的角度必须是在90<0或者0>90之间!');\n    }\n    // 斜边的大小\n    const trigonometricTilt = RTSinKit.tilt({\n      inverse: height,\n      angle,\n    });\n    const trigonometricTiltWidth = RTCosKit.nearby({\n      tilt: trigonometricTilt,\n      angle,\n    });\n    // 文本长度\n    ruler.overflowRuler();\n    const {\n      overflowText: text,\n      overflowTextWidth: textWidth,\n    } = ruler;\n    // 文本块大小\n    const trigonometricWidth = Math.max(RTCosKit.nearby({\n      tilt: textWidth,\n      angle,\n    }), size);\n    const trigonometricHeight = RTSinKit.inverse({\n      tilt: textWidth,\n      angle,\n    });\n    if (angle > 0) {\n      // 可溢出区域\n      const overflow = new Rect({\n        x, y, width: trigonometricTiltWidth + width, height,\n      });\n      // 计算文本绘制位置\n      let rtx = 0;\n      let rty = 0;\n      switch (verticalAlign) {\n        case BaseFont.VERTICAL_ALIGN.top:\n          rtx = x + (trigonometricTiltWidth - trigonometricWidth) - verticalAlignPadding;\n          rty = y + verticalAlignPadding;\n          break;\n        case BaseFont.VERTICAL_ALIGN.center:\n          rtx = x + (trigonometricTiltWidth / 2 - trigonometricWidth / 2) - verticalAlignPadding;\n          rty = y + (height / 2 - trigonometricHeight / 2) + verticalAlignPadding;\n          break;\n        case BaseFont.VERTICAL_ALIGN.bottom:\n          rtx = x + verticalAlignPadding;\n          rty = y + (height - trigonometricHeight) - verticalAlignPadding;\n          break;\n      }\n      switch (align) {\n        case BaseFont.ALIGN.left:\n          rtx += size / 2 + alignPadding;\n          break;\n        case BaseFont.ALIGN.center:\n          rtx += width / 2;\n          break;\n        case BaseFont.ALIGN.right:\n          rtx += width - size / 2 - alignPadding;\n          break;\n      }\n      // 边界检查\n      const outboundsHeight = trigonometricHeight + verticalAlignPadding > overflow.height;\n      const outboundsWidth = trigonometricWidth + alignPadding > overflow.width;\n      if (outboundsHeight || outboundsWidth) {\n        const crop = new Crop({\n          draw,\n          rect: overflow,\n        });\n        const dwAngle = new Angle({\n          draw,\n          angle,\n          rect: new Rect({\n            x: rtx,\n            y: rty,\n            width: trigonometricWidth,\n            height: trigonometricHeight,\n          }),\n        });\n        crop.open();\n        dwAngle.rotate();\n        const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\n        const ty = rty + (trigonometricHeight / 2 - size / 2);\n        draw.fillText(text, tx, ty);\n        if (underline) {\n          this.drawingLine('underline', tx, ty, textWidth);\n        }\n        if (strikethrough) {\n          this.drawingLine('strike', tx, ty, textWidth);\n        }\n        dwAngle.revert();\n        crop.close();\n      } else {\n        const dwAngle = new Angle({\n          draw,\n          angle,\n          rect: new Rect({\n            x: rtx,\n            y: rty,\n            width: trigonometricWidth,\n            height: trigonometricHeight,\n          }),\n        });\n        dwAngle.rotate();\n        const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\n        const ty = rty + (trigonometricHeight / 2 - size / 2);\n        draw.fillText(text, tx, ty);\n        if (underline) {\n          this.drawingLine('underline', tx, ty, textWidth);\n        }\n        if (strikethrough) {\n          this.drawingLine('strike', tx, ty, textWidth);\n        }\n        dwAngle.revert();\n      }\n      // 文本宽度\n      const haveWidth = trigonometricTiltWidth + width;\n      return new DrawResult({\n        width: haveWidth, leftSdist: trigonometricTiltWidth, rightSdist: 0,\n      });\n    }\n    // 可溢出区域\n    const overflow = new Rect({\n      x: x - trigonometricTiltWidth, y, width: trigonometricTiltWidth + width, height,\n    });\n    // 计算文本绘制位置\n    let rtx = 0;\n    let rty = 0;\n    switch (verticalAlign) {\n      case BaseFont.VERTICAL_ALIGN.top:\n        rtx = x - trigonometricTiltWidth + verticalAlignPadding;\n        rty = y + verticalAlignPadding;\n        break;\n      case BaseFont.VERTICAL_ALIGN.center:\n        rtx = x - (trigonometricTiltWidth / 2 + trigonometricWidth / 2) + verticalAlignPadding;\n        rty = y + (height / 2 - trigonometricHeight / 2) + verticalAlignPadding;\n        break;\n      case BaseFont.VERTICAL_ALIGN.bottom:\n        rtx = x - trigonometricWidth - verticalAlignPadding;\n        rty = y + (height - trigonometricHeight) - verticalAlignPadding;\n        break;\n    }\n    switch (align) {\n      case BaseFont.ALIGN.left:\n        rtx += size / 2 + alignPadding;\n        break;\n      case BaseFont.ALIGN.center:\n        rtx += width / 2;\n        break;\n      case BaseFont.ALIGN.right:\n        rtx += width - size / 2 - alignPadding;\n        break;\n    }\n    // 边界检查\n    const outboundsHeight = trigonometricHeight + verticalAlignPadding > overflow.height;\n    const outboundsWidth = trigonometricWidth + alignPadding > overflow.width;\n    if (outboundsHeight || outboundsWidth) {\n      const crop = new Crop({\n        draw,\n        rect: overflow,\n      });\n      const dwAngle = new Angle({\n        draw,\n        angle,\n        rect: new Rect({\n          x: rtx,\n          y: rty,\n          width: trigonometricWidth,\n          height: trigonometricHeight,\n        }),\n      });\n      crop.open();\n      dwAngle.rotate();\n      const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\n      const ty = rty + (trigonometricHeight / 2 - size / 2);\n      draw.fillText(text, tx, ty);\n      if (underline) {\n        this.drawingLine('underline', tx, ty, textWidth);\n      }\n      if (strikethrough) {\n        this.drawingLine('strike', tx, ty, textWidth);\n      }\n      dwAngle.revert();\n      crop.close();\n    } else {\n      const dwAngle = new Angle({\n        draw,\n        angle,\n        rect: new Rect({\n          x: rtx,\n          y: rty,\n          width: trigonometricWidth,\n          height: trigonometricHeight,\n        }),\n      });\n      dwAngle.rotate();\n      const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\n      const ty = rty + (trigonometricHeight / 2 - size / 2);\n      draw.fillText(text, tx, ty);\n      if (underline) {\n        this.drawingLine('underline', tx, ty, textWidth);\n      }\n      if (strikethrough) {\n        this.drawingLine('strike', tx, ty, textWidth);\n      }\n      dwAngle.revert();\n    }\n    // 文本宽度\n    const haveWidth = trigonometricTiltWidth + width;\n    return new DrawResult({\n      width: haveWidth, leftSdist: 0, rightSdist: trigonometricTiltWidth,\n    });\n  }\n\n  textWrapDraw() {\n    const { draw, ruler, attr } = this;\n    const { rect, overflow, lineHeight } = this;\n    const { x, y, width, height } = rect;\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\n    // 填充宽度\n    const verticalAlignPadding = this.getVerticalAlignPadding();\n    const alignPadding = this.getAlignPadding();\n    // 角度边界\n    let { angle } = attr;\n    if (angle < -90) {\n      angle = -90;\n    }\n    if (angle > 90) {\n      angle = 90;\n    }\n    if (angle === 0) {\n      throw new TypeError('文字的角度必须是在90<0或者0>90之间!');\n    }\n    // 斜边的大小\n    const trigonometricTilt = RTSinKit.tilt({\n      inverse: height,\n      angle,\n    });\n    const trigonometricTiltWidth = RTCosKit.nearby({\n      tilt: trigonometricTilt,\n      angle,\n    });\n    // 绘制文本\n    if (angle > 0) {\n      // 折行文本计算\n      ruler.textWrapRuler();\n      const {\n        textWrapTextArray: textArray,\n        textWrapMaxLen: maxLen,\n      } = ruler;\n      const textArrayLen = textArray.length;\n      // 多行文本\n      if (textArrayLen > 1) {\n        // 文本间隙\n        const spacing = RTSinKit.tilt({\n          inverse: size + lineHeight,\n          angle,\n        });\n        // 文本宽高\n        const textWidth = Math.max(RTCosKit.nearby({\n          tilt: maxLen,\n          angle,\n        }), size);\n        const textHeight = RTSinKit.inverse({\n          tilt: maxLen,\n          angle,\n        });\n        // 总宽度\n        const totalWidth = textWidth + ((textArrayLen - 1) * spacing);\n        // 计算文本绘制位置\n        let bx = 0;\n        let by = 0;\n        switch (verticalAlign) {\n          case BaseFont.VERTICAL_ALIGN.top:\n            bx = x + (trigonometricTiltWidth - textWidth) - verticalAlignPadding;\n            by = y + verticalAlignPadding;\n            break;\n          case BaseFont.VERTICAL_ALIGN.center:\n            bx = x + (trigonometricTiltWidth / 2 - textWidth / 2) - verticalAlignPadding;\n            by = y + (height / 2 - textHeight / 2) + verticalAlignPadding;\n            break;\n          case BaseFont.VERTICAL_ALIGN.bottom:\n            bx = x + verticalAlignPadding;\n            by = y + (height - textHeight) - verticalAlignPadding;\n            break;\n        }\n        switch (align) {\n          case BaseFont.ALIGN.left:\n            bx += size / 2 + alignPadding;\n            break;\n          case BaseFont.ALIGN.center:\n            bx += (textWidth / 2 + width / 2) - totalWidth / 2;\n            break;\n          case BaseFont.ALIGN.right:\n            bx += (textWidth / 2 + width) - (totalWidth - textWidth / 2) - size / 2 - alignPadding;\n            break;\n        }\n        // 边界检查\n        let pointOffset = false;\n        if (align === BaseFont.ALIGN.center) {\n          if (overflow.x > bx) {\n            pointOffset = true;\n          }\n        }\n        const outboundsHeight = totalWidth + verticalAlignPadding > overflow.height;\n        const outboundsWidth = totalWidth + alignPadding > overflow.width;\n        if (outboundsHeight || outboundsWidth || pointOffset) {\n          const crop = new Crop({\n            draw,\n            rect: overflow,\n          });\n          crop.open();\n          // 渲染文本\n          let jj = 0;\n          while (jj < textArrayLen) {\n            // 计算文本的绘制位置旋转中心\n            const item = textArray[jj];\n            const rx = item.tx + bx;\n            const ry = item.ty + by;\n            let ax = 0;\n            let ay = 0;\n            switch (align) {\n              case BaseFont.ALIGN.left: {\n                const tilt = item.len / 2;\n                const tw = Math.max(RTCosKit.nearby({\n                  tilt,\n                  angle,\n                }), size);\n                const th = RTSinKit.inverse({\n                  tilt,\n                  angle,\n                });\n                ax += rx + tw;\n                ay += ry + textHeight - th;\n                break;\n              }\n              case BaseFont.ALIGN.center: {\n                ax = rx + textWidth / 2;\n                ay = ry + textHeight / 2;\n                break;\n              }\n              case BaseFont.ALIGN.right: {\n                const tilt = item.len / 2;\n                const tw = Math.max(RTCosKit.nearby({\n                  tilt,\n                  angle,\n                }), size);\n                const th = RTSinKit.inverse({\n                  tilt,\n                  angle,\n                });\n                ax += rx + textWidth - tw;\n                ay += ry + th;\n                break;\n              }\n            }\n            const tx = ax - item.len / 2;\n            const ty = ay - size / 2;\n            // 旋转并且绘制文本\n            const dwAngle = new Angle({\n              draw,\n              angle,\n              rect: new Rect({\n                x: tx,\n                y: ty,\n                width: item.len,\n                height: size,\n              }),\n            });\n            dwAngle.rotate();\n            draw.fillText(item.text, tx, ty);\n            if (underline) {\n              this.drawingLine('underline', tx, ty, item.len);\n            }\n            if (strikethrough) {\n              this.drawingLine('strike', tx, ty, item.len);\n            }\n            dwAngle.revert();\n            jj += 1;\n          }\n          crop.close();\n        } else {\n          // 渲染文本\n          let jj = 0;\n          while (jj < textArrayLen) {\n            // 计算文本的绘制位置旋转中心\n            const item = textArray[jj];\n            const rx = item.tx + bx;\n            const ry = item.ty + by;\n            let ax = 0;\n            let ay = 0;\n            switch (align) {\n              case BaseFont.ALIGN.left: {\n                const tilt = item.len / 2;\n                const tw = Math.max(RTCosKit.nearby({\n                  tilt,\n                  angle,\n                }), size);\n                const th = RTSinKit.inverse({\n                  tilt,\n                  angle,\n                });\n                ax += rx + tw;\n                ay += ry + textHeight - th;\n                break;\n              }\n              case BaseFont.ALIGN.center: {\n                ax = rx + textWidth / 2;\n                ay = ry + textHeight / 2;\n                break;\n              }\n              case BaseFont.ALIGN.right: {\n                const tilt = item.len / 2;\n                const tw = Math.max(RTCosKit.nearby({\n                  tilt,\n                  angle,\n                }), size);\n                const th = RTSinKit.inverse({\n                  tilt,\n                  angle,\n                });\n                ax += rx + textWidth - tw;\n                ay += ry + th;\n                break;\n              }\n            }\n            const tx = ax - item.len / 2;\n            const ty = ay - size / 2;\n            // 旋转并且绘制文本\n            const dwAngle = new Angle({\n              draw,\n              angle,\n              rect: new Rect({\n                x: tx,\n                y: ty,\n                width: item.len,\n                height: size,\n              }),\n            });\n            dwAngle.rotate();\n            draw.fillText(item.text, tx, ty);\n            if (underline) {\n              this.drawingLine('underline', tx, ty, item.len);\n            }\n            if (strikethrough) {\n              this.drawingLine('strike', tx, ty, item.len);\n            }\n            dwAngle.revert();\n            jj += 1;\n          }\n        }\n        // 文本宽度\n        let haveWidth = 0;\n        switch (align) {\n          case BaseFont.ALIGN.left: {\n            haveWidth = totalWidth + trigonometricTiltWidth / 2 + alignPadding;\n            break;\n          }\n          case BaseFont.ALIGN.center: {\n            haveWidth = totalWidth / 2 + trigonometricTiltWidth / 2 + width / 2;\n            break;\n          }\n          case BaseFont.ALIGN.right: {\n            haveWidth = trigonometricTiltWidth + width;\n            break;\n          }\n        }\n        haveWidth = Math.max(haveWidth, trigonometricTiltWidth + width);\n        return new DrawResult({\n          width: haveWidth, leftSdist: trigonometricTiltWidth, rightSdist: 0,\n        });\n      }\n      // 文本长度\n      const {\n        textWrapText: text,\n        textWrapTextWidth: textWidth,\n      } = ruler;\n      // 文本块大小\n      const trigonometricWidth = Math.max(RTCosKit.nearby({\n        tilt: textWidth,\n        angle,\n      }), size);\n      const trigonometricHeight = RTSinKit.inverse({\n        tilt: textWidth,\n        angle,\n      });\n      // 计算文本绘制位置\n      let rtx = 0;\n      let rty = 0;\n      switch (verticalAlign) {\n        case BaseFont.VERTICAL_ALIGN.top:\n          rtx = x + (trigonometricTiltWidth - trigonometricWidth) - verticalAlignPadding;\n          rty = y + verticalAlignPadding;\n          break;\n        case BaseFont.VERTICAL_ALIGN.center:\n          rtx = x + (trigonometricTiltWidth / 2 - trigonometricWidth / 2) - verticalAlignPadding;\n          rty = y + (height / 2 - trigonometricHeight / 2) + verticalAlignPadding;\n          break;\n        case BaseFont.VERTICAL_ALIGN.bottom:\n          rtx = x + verticalAlignPadding;\n          rty = y + (height - trigonometricHeight) - verticalAlignPadding;\n          break;\n      }\n      switch (align) {\n        case BaseFont.ALIGN.left:\n          rtx += size / 2 + alignPadding;\n          break;\n        case BaseFont.ALIGN.center:\n          rtx += width / 2;\n          break;\n        case BaseFont.ALIGN.right:\n          rtx += width - size / 2 - alignPadding;\n          break;\n      }\n      // 绘制文本\n      const dwAngle = new Angle({\n        draw,\n        angle,\n        rect: new Rect({\n          x: rtx,\n          y: rty,\n          width: trigonometricWidth,\n          height: trigonometricHeight,\n        }),\n      });\n      dwAngle.rotate();\n      const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\n      const ty = rty + (trigonometricHeight / 2 - size / 2);\n      draw.fillText(text, tx, ty);\n      if (underline) {\n        this.drawingLine('underline', tx, ty, textWidth);\n      }\n      if (strikethrough) {\n        this.drawingLine('strike', tx, ty, textWidth);\n      }\n      dwAngle.revert();\n      // 文本宽度\n      const haveWidth = trigonometricTiltWidth + width;\n      return new DrawResult({\n        width: haveWidth, leftSdist: trigonometricTiltWidth, rightSdist: 0,\n      });\n    }\n    // 折行文本计算\n    ruler.textWrapRuler();\n    const {\n      textWrapTextArray: textArray,\n      textWrapMaxLen: maxLen,\n    } = ruler;\n    const textArrayLen = textArray.length;\n    // 多行文本\n    if (textArrayLen > 1) {\n      // 文本间隙\n      const spacing = RTSinKit.tilt({\n        inverse: size + lineHeight,\n        angle,\n      });\n      // 文本宽高\n      const textWidth = Math.max(RTCosKit.nearby({\n        tilt: maxLen,\n        angle,\n      }), size);\n      const textHeight = RTSinKit.inverse({\n        tilt: maxLen,\n        angle,\n      });\n      // 总宽度\n      const totalWidth = textWidth + ((textArrayLen - 1) * spacing);\n      // 文本坐标\n      let bx = rect.x;\n      let by = rect.y;\n      switch (verticalAlign) {\n        case BaseFont.VERTICAL_ALIGN.top:\n          bx = x - trigonometricTiltWidth + verticalAlignPadding;\n          by = y + verticalAlignPadding;\n          break;\n        case BaseFont.VERTICAL_ALIGN.center:\n          bx = x - (trigonometricTiltWidth / 2 + textWidth / 2) + verticalAlignPadding;\n          by = y + (height / 2 - textHeight / 2) + verticalAlignPadding;\n          break;\n        case BaseFont.VERTICAL_ALIGN.bottom:\n          bx = x - textWidth - verticalAlignPadding;\n          by = y + (height - textHeight) - verticalAlignPadding;\n          break;\n      }\n      switch (align) {\n        case BaseFont.ALIGN.left:\n          bx += size / 2 + alignPadding;\n          break;\n        case BaseFont.ALIGN.center:\n          bx += (textWidth / 2 + width / 2) - totalWidth / 2;\n          break;\n        case BaseFont.ALIGN.right:\n          bx += (textWidth / 2 + width) - (totalWidth - textWidth / 2) - size / 2 - alignPadding;\n          break;\n      }\n      // 边界检查\n      let pointOffset = false;\n      if (align === BaseFont.ALIGN.center) {\n        if (overflow.x + overflow.width > bx + totalWidth) {\n          pointOffset = true;\n        }\n      }\n      const outboundsHeight = totalWidth + verticalAlignPadding > overflow.height;\n      const outboundsWidth = totalWidth + alignPadding > overflow.width;\n      if (outboundsHeight || outboundsWidth || pointOffset) {\n        const crop = new Crop({\n          draw,\n          rect: overflow,\n        });\n        crop.open();\n        // 渲染文本\n        let jj = 0;\n        while (jj < textArrayLen) {\n          // 计算文本的绘制位置旋转中心\n          const item = textArray[jj];\n          const rx = item.tx + bx;\n          const ry = item.ty + by;\n          let ax = 0;\n          let ay = 0;\n          switch (align) {\n            case BaseFont.ALIGN.left: {\n              const tilt = item.len / 2;\n              const tw = Math.max(RTCosKit.nearby({\n                tilt,\n                angle,\n              }), size);\n              const th = RTSinKit.inverse({\n                tilt,\n                angle,\n              });\n              ax += rx + tw;\n              ay += ry + th;\n              break;\n            }\n            case BaseFont.ALIGN.center: {\n              ax = rx + textWidth / 2;\n              ay = ry + textHeight / 2;\n              break;\n            }\n            case BaseFont.ALIGN.right: {\n              const tilt = item.len / 2;\n              const tw = Math.max(RTCosKit.nearby({\n                tilt,\n                angle,\n              }), size);\n              const th = RTSinKit.inverse({\n                tilt,\n                angle,\n              });\n              ax += rx + textWidth - tw;\n              ay += ry + textHeight - th;\n              break;\n            }\n          }\n          const tx = ax - item.len / 2;\n          const ty = ay - size / 2;\n          // 旋转并且绘制文本\n          const dwAngle = new Angle({\n            draw,\n            angle,\n            rect: new Rect({\n              x: tx,\n              y: ty,\n              width: item.len,\n              height: size,\n            }),\n          });\n          dwAngle.rotate();\n          draw.fillText(item.text, tx, ty);\n          if (underline) {\n            this.drawingLine('underline', tx, ty, item.len);\n          }\n          if (strikethrough) {\n            this.drawingLine('strike', tx, ty, item.len);\n          }\n          dwAngle.revert();\n          jj += 1;\n        }\n        crop.close();\n      } else {\n        // 渲染文本\n        let jj = 0;\n        while (jj < textArrayLen) {\n          // 计算文本的绘制位置旋转中心\n          const item = textArray[jj];\n          const rx = item.tx + bx;\n          const ry = item.ty + by;\n          let ax = 0;\n          let ay = 0;\n          switch (align) {\n            case BaseFont.ALIGN.left: {\n              const tilt = item.len / 2;\n              const tw = Math.max(RTCosKit.nearby({\n                tilt,\n                angle,\n              }), size);\n              const th = RTSinKit.inverse({\n                tilt,\n                angle,\n              });\n              ax += rx + tw;\n              ay += ry + th;\n              break;\n            }\n            case BaseFont.ALIGN.center: {\n              ax = rx + textWidth / 2;\n              ay = ry + textHeight / 2;\n              break;\n            }\n            case BaseFont.ALIGN.right: {\n              const tilt = item.len / 2;\n              const tw = Math.max(RTCosKit.nearby({\n                tilt,\n                angle,\n              }), size);\n              const th = RTSinKit.inverse({\n                tilt,\n                angle,\n              });\n              ax += rx + textWidth - tw;\n              ay += ry + textHeight - th;\n              break;\n            }\n          }\n          const tx = ax - item.len / 2;\n          const ty = ay - size / 2;\n          // 旋转并且绘制文本\n          const dwAngle = new Angle({\n            draw,\n            angle,\n            rect: new Rect({\n              x: tx,\n              y: ty,\n              width: item.len,\n              height: size,\n            }),\n          });\n          dwAngle.rotate();\n          draw.fillText(item.text, tx, ty);\n          if (underline) {\n            this.drawingLine('underline', tx, ty, item.len);\n          }\n          if (strikethrough) {\n            this.drawingLine('strike', tx, ty, item.len);\n          }\n          dwAngle.revert();\n          jj += 1;\n        }\n      }\n      // 文本宽度\n      let haveWidth = 0;\n      switch (align) {\n        case BaseFont.ALIGN.left: {\n          haveWidth = trigonometricTiltWidth + width;\n          break;\n        }\n        case BaseFont.ALIGN.center: {\n          haveWidth = totalWidth / 2 + trigonometricTiltWidth / 2 + width / 2;\n          break;\n        }\n        case BaseFont.ALIGN.right: {\n          haveWidth = totalWidth + trigonometricTiltWidth / 2 + alignPadding;\n          break;\n        }\n      }\n      haveWidth = Math.max(haveWidth, trigonometricTiltWidth + width);\n      return new DrawResult({\n        width: haveWidth, leftSdist: 0, rightSdist: trigonometricTiltWidth,\n      });\n    }\n    // 文本长度\n    const {\n      textWrapText: text,\n      textWrapTextWidth: textWidth,\n    } = ruler;\n    // 文本块大小\n    const trigonometricWidth = Math.max(RTCosKit.nearby({\n      tilt: textWidth,\n      angle,\n    }), size);\n    const trigonometricHeight = RTSinKit.inverse({\n      tilt: textWidth,\n      angle,\n    });\n    // 计算文本绘制位置\n    let rtx = 0;\n    let rty = 0;\n    switch (verticalAlign) {\n      case BaseFont.VERTICAL_ALIGN.top:\n        rtx = x - trigonometricTiltWidth + verticalAlignPadding;\n        rty = y + verticalAlignPadding;\n        break;\n      case BaseFont.VERTICAL_ALIGN.center:\n        rtx = x - (trigonometricTiltWidth / 2 + trigonometricWidth / 2) + verticalAlignPadding;\n        rty = y + (height / 2 - trigonometricHeight / 2) + verticalAlignPadding;\n        break;\n      case BaseFont.VERTICAL_ALIGN.bottom:\n        rtx = x - trigonometricWidth - verticalAlignPadding;\n        rty = y + (height - trigonometricHeight) - verticalAlignPadding;\n        break;\n    }\n    switch (align) {\n      case BaseFont.ALIGN.left:\n        rtx += size / 2 + alignPadding;\n        break;\n      case BaseFont.ALIGN.center:\n        rtx += width / 2;\n        break;\n      case BaseFont.ALIGN.right:\n        rtx += width - size / 2 - alignPadding;\n        break;\n    }\n    // 绘制文本\n    const dwAngle = new Angle({\n      draw,\n      angle,\n      rect: new Rect({\n        x: rtx,\n        y: rty,\n        width: trigonometricWidth,\n        height: trigonometricHeight,\n      }),\n    });\n    dwAngle.rotate();\n    const tx = rtx + (trigonometricWidth / 2 - textWidth / 2);\n    const ty = rty + (trigonometricHeight / 2 - size / 2);\n    draw.fillText(text, tx, ty);\n    if (underline) {\n      this.drawingLine('underline', tx, ty, textWidth);\n    }\n    if (strikethrough) {\n      this.drawingLine('strike', tx, ty, textWidth);\n    }\n    dwAngle.revert();\n    // 文本宽度\n    const haveWidth = trigonometricTiltWidth + width;\n    return new DrawResult({\n      width: haveWidth, leftSdist: 0, rightSdist: trigonometricTiltWidth,\n    });\n  }\n\n}\n\nexport {\n  AngleBarDraw,\n};\n","import { BaseFont } from '../BaseFont';\nimport { Crop } from '../../Crop';\nimport { DrawResult } from '../DrawResult';\n\nclass HorizonDraw extends BaseFont {\n\n  constructor({\n    draw, ruler, rect, overflow, lineHeight = 4, attr,\n  }) {\n    super({ draw, ruler, attr });\n    this.rect = rect;\n    this.overflow = overflow;\n    this.lineHeight = lineHeight;\n  }\n\n  drawingFont() {\n    const { ruler } = this;\n    if (ruler.isBlank()) {\n      return new DrawResult();\n    }\n    const { draw, attr } = this;\n    const { textWrap } = attr;\n    const font = `${attr.italic ? 'italic' : ''} ${attr.bold ? 'bold' : ''} ${attr.size}px ${attr.name}`.trim();\n    draw.attr({\n      textAlign: attr.align,\n      textBaseline: attr.verticalAlign,\n      font,\n      fillStyle: attr.color,\n      strokeStyle: attr.color,\n    });\n    if (ruler.hasBreak()) {\n      return this.textWrapDraw();\n    }\n    switch (textWrap) {\n      case BaseFont.TEXT_WRAP.OVER_FLOW:\n        return this.overflowDraw();\n      case BaseFont.TEXT_WRAP.TRUNCATE:\n        return this.truncateDraw();\n      case BaseFont.TEXT_WRAP.WORD_WRAP:\n        return this.textWrapDraw();\n    }\n    return new DrawResult();\n  }\n\n  drawingLine(type, tx, ty, textWidth) {\n    const { draw, attr } = this;\n    const { size, verticalAlign, align } = attr;\n    const s = [0, 0];\n    const e = [0, 0];\n    if (type === 'strike') {\n      switch (align) {\n        case BaseFont.ALIGN.right:\n          s[0] = tx - textWidth;\n          e[0] = tx;\n          break;\n        case BaseFont.ALIGN.center:\n          s[0] = tx - textWidth / 2;\n          e[0] = tx + textWidth / 2;\n          break;\n        case BaseFont.ALIGN.left:\n          s[0] = tx;\n          e[0] = tx + textWidth;\n          break;\n        default:\n          break;\n      }\n      switch (verticalAlign) {\n        case BaseFont.VERTICAL_ALIGN.top:\n          s[1] = ty + size / 2;\n          e[1] = ty + size / 2;\n          break;\n        case BaseFont.VERTICAL_ALIGN.center:\n          s[1] = ty;\n          e[1] = ty;\n          break;\n        case BaseFont.VERTICAL_ALIGN.bottom:\n          s[1] = ty - size / 2;\n          e[1] = ty - size / 2;\n          break;\n        default:\n          break;\n      }\n    }\n    if (type === 'underline') {\n      switch (align) {\n        case BaseFont.ALIGN.right:\n          s[0] = tx - textWidth;\n          e[0] = tx;\n          break;\n        case BaseFont.ALIGN.center:\n          s[0] = tx - textWidth / 2;\n          e[0] = tx + textWidth / 2;\n          break;\n        case BaseFont.ALIGN.left:\n          s[0] = tx;\n          e[0] = tx + textWidth;\n          break;\n        default:\n          break;\n      }\n      switch (verticalAlign) {\n        case BaseFont.VERTICAL_ALIGN.top:\n          s[1] = ty + size;\n          e[1] = ty + size;\n          break;\n        case BaseFont.VERTICAL_ALIGN.center:\n          s[1] = ty + size / 2;\n          e[1] = ty + size / 2;\n          break;\n        case BaseFont.VERTICAL_ALIGN.bottom:\n          s[1] = ty;\n          e[1] = ty;\n          break;\n        default:\n          break;\n      }\n    }\n    draw.line(s, e);\n  }\n\n  truncateDraw() {\n    const { draw, ruler, attr } = this;\n    const { rect } = this;\n    const { width, height } = rect;\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\n    // 文字宽度\n    ruler.truncateRuler();\n    const {\n      truncateText: text,\n      truncateTextWidth: textWidth,\n    } = ruler;\n    // 填充宽度\n    const verticalAlignPadding = this.getVerticalAlignPadding();\n    const alignPadding = this.getAlignPadding();\n    // 计算文本坐标\n    let bx = rect.x;\n    let by = rect.y;\n    switch (align) {\n      case BaseFont.ALIGN.center:\n        bx += width / 2;\n        break;\n      case BaseFont.ALIGN.left:\n        bx += alignPadding;\n        break;\n      case BaseFont.ALIGN.right:\n        bx += width - alignPadding;\n        break;\n    }\n    switch (verticalAlign) {\n      case BaseFont.VERTICAL_ALIGN.top:\n        by += verticalAlignPadding;\n        break;\n      case BaseFont.VERTICAL_ALIGN.center:\n        by += height / 2;\n        break;\n      case BaseFont.VERTICAL_ALIGN.bottom:\n        by += height - verticalAlignPadding;\n        break;\n    }\n    // 边界检查\n    const outboundsHeight = size + verticalAlignPadding > height;\n    const outboundsWidth = textWidth + alignPadding > width;\n    if (outboundsHeight || outboundsWidth) {\n      const crop = new Crop({\n        draw,\n        rect,\n      });\n      crop.open();\n      draw.fillText(text, bx, by);\n      if (underline) {\n        this.drawingLine('underline', bx, by, textWidth);\n      }\n      if (strikethrough) {\n        this.drawingLine('strike', bx, by, textWidth);\n      }\n      crop.close();\n    } else {\n      draw.fillText(text, bx, by);\n      if (underline) {\n        this.drawingLine('underline', bx, by, textWidth);\n      }\n      if (strikethrough) {\n        this.drawingLine('strike', bx, by, textWidth);\n      }\n    }\n    return new DrawResult();\n  }\n\n  overflowDraw() {\n    const { draw, ruler, attr } = this;\n    const { rect, overflow } = this;\n    const { width, height } = rect;\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\n    // 文字宽度\n    ruler.overflowRuler();\n    const {\n      overflowText: text,\n      overflowTextWidth: textWidth,\n    } = ruler;\n    // 填充宽度\n    const verticalAlignPadding = this.getVerticalAlignPadding();\n    const alignPadding = this.getAlignPadding();\n    // 计算文本坐标\n    let bx = rect.x;\n    let by = rect.y;\n    switch (align) {\n      case BaseFont.ALIGN.left:\n        bx += alignPadding;\n        break;\n      case BaseFont.ALIGN.center:\n        bx += width / 2;\n        break;\n      case BaseFont.ALIGN.right:\n        bx += width - alignPadding;\n        break;\n    }\n    switch (verticalAlign) {\n      case BaseFont.VERTICAL_ALIGN.top:\n        by += verticalAlignPadding;\n        break;\n      case BaseFont.VERTICAL_ALIGN.center:\n        by += height / 2;\n        break;\n      case BaseFont.VERTICAL_ALIGN.bottom:\n        by += height - verticalAlignPadding;\n        break;\n    }\n    // 边界检查\n    const outboundsHeight = size + verticalAlignPadding > overflow.height;\n    const outboundsWidth = textWidth + alignPadding > overflow.width;\n    let pointOffset = false;\n    if (align === BaseFont.ALIGN.center) {\n      const diff = textWidth / 2 - width / 2;\n      if (diff > 0) {\n        if (overflow.x > rect.x - diff) {\n          pointOffset = true;\n        } else if (overflow.x + overflow.width < rect.x + rect.width + diff) {\n          pointOffset = true;\n        }\n      }\n    }\n    if (outboundsHeight || outboundsWidth || pointOffset) {\n      const crop = new Crop({\n        draw,\n        rect: overflow,\n      });\n      crop.open();\n      draw.fillText(text, bx, by);\n      if (underline) {\n        this.drawingLine('underline', bx, by, textWidth);\n      }\n      if (strikethrough) {\n        this.drawingLine('strike', bx, by, textWidth);\n      }\n      crop.close();\n    } else {\n      draw.fillText(text, bx, by);\n      if (underline) {\n        this.drawingLine('underline', bx, by, textWidth);\n      }\n      if (strikethrough) {\n        this.drawingLine('strike', bx, by, textWidth);\n      }\n    }\n    return new DrawResult({\n      width: textWidth + alignPadding,\n    });\n  }\n\n  textWrapDraw() {\n    const { draw, ruler, attr } = this;\n    const { rect, lineHeight } = this;\n    const { width, height } = rect;\n    const { underline, strikethrough, align, verticalAlign, size } = attr;\n    // 填充宽度\n    const verticalAlignPadding = this.getVerticalAlignPadding();\n    const alignPadding = this.getAlignPadding();\n    // 计算文本折行\n    ruler.textWrapRuler();\n    const {\n      textWrapTextArray: textArray,\n      textWrapHOffset: hOffset,\n    } = ruler;\n    // 计算文本坐标\n    let bx = rect.x;\n    let by = rect.y;\n    switch (align) {\n      case BaseFont.ALIGN.left:\n        bx += alignPadding;\n        break;\n      case BaseFont.ALIGN.center:\n        bx += width / 2;\n        break;\n      case BaseFont.ALIGN.right:\n        bx += width - alignPadding;\n        break;\n      default:\n        break;\n    }\n    switch (verticalAlign) {\n      case BaseFont.VERTICAL_ALIGN.center:\n        by += height / 2 - hOffset / 2;\n        break;\n      case BaseFont.VERTICAL_ALIGN.top:\n        by += verticalAlignPadding;\n        break;\n      case BaseFont.VERTICAL_ALIGN.bottom:\n        by += height - hOffset - verticalAlignPadding;\n        break;\n    }\n    // 边界检查\n    const totalHeight = (textArray.length * (size + lineHeight)) - lineHeight;\n    const outboundsHeight = totalHeight + verticalAlignPadding > height;\n    if (outboundsHeight) {\n      const crop = new Crop({\n        draw,\n        rect,\n      });\n      crop.open();\n      const textLen = textArray.length;\n      let ti = 0;\n      while (ti < textLen) {\n        const item = textArray[ti];\n        const tx = item.tx + bx;\n        const ty = item.ty + by;\n        draw.fillText(item.text, tx, ty);\n        if (underline) {\n          this.drawingLine('underline', tx, ty, item.len);\n        }\n        if (strikethrough) {\n          this.drawingLine('strike', tx, ty, item.len);\n        }\n        ti += 1;\n      }\n      crop.close();\n    } else {\n      for (let i = 0, len = textArray.length; i < len; i += 1) {\n        const item = textArray[i];\n        const tx = item.tx + bx;\n        const ty = item.ty + by;\n        draw.fillText(item.text, tx, ty);\n        if (underline) {\n          this.drawingLine('underline', tx, ty, item.len);\n        }\n        if (strikethrough) {\n          this.drawingLine('strike', tx, ty, item.len);\n        }\n      }\n    }\n    return new DrawResult();\n  }\n\n}\n\nexport {\n  HorizonDraw,\n};\n","import { BaseFont } from '../BaseFont';\nimport { Crop } from '../../Crop';\nimport { DrawResult } from '../DrawResult';\n\nclass VerticalDraw extends BaseFont {\n\n  constructor({\n    draw, ruler, rect, attr,\n  }) {\n    super({ draw, ruler, attr });\n    this.rect = rect;\n  }\n\n  drawingFont() {\n    const { ruler } = this;\n    if (ruler.isBlank()) {\n      return new DrawResult();\n    }\n    const { draw, attr } = this;\n    const { textWrap } = attr;\n    draw.attr({\n      textAlign: BaseFont.ALIGN.left,\n      textBaseline: BaseFont.VERTICAL_ALIGN.top,\n      font: `${attr.italic ? 'italic' : ''} ${attr.bold ? 'bold' : ''} ${attr.size}px ${attr.name}`,\n      fillStyle: attr.color,\n      strokeStyle: attr.color,\n    });\n    if (ruler.hasBreak()) {\n      return this.textWrapDraw();\n    }\n    switch (textWrap) {\n      case BaseFont.TEXT_WRAP.OVER_FLOW:\n        return this.overflowDraw();\n      case BaseFont.TEXT_WRAP.TRUNCATE:\n        return this.truncateDraw();\n      case BaseFont.TEXT_WRAP.WORD_WRAP:\n        return this.textWrapDraw();\n    }\n    return new DrawResult();\n  }\n\n  drawingLine(type, tx, ty, textWidth, align, verticalAlign) {\n    const { draw, attr } = this;\n    const { size } = attr;\n    const s = [0, 0];\n    const e = [0, 0];\n    if (type === 'strike') {\n      switch (align) {\n        case BaseFont.ALIGN.center:\n        case BaseFont.ALIGN.left:\n        case BaseFont.ALIGN.right:\n          s[0] = tx;\n          e[0] = tx + textWidth;\n          break;\n      }\n      switch (verticalAlign) {\n        case BaseFont.VERTICAL_ALIGN.center:\n        case BaseFont.VERTICAL_ALIGN.top:\n        case BaseFont.VERTICAL_ALIGN.bottom:\n          s[1] = ty + size / 2;\n          e[1] = ty + size / 2;\n          break;\n      }\n    }\n    if (type === 'underline') {\n      switch (align) {\n        case BaseFont.ALIGN.center:\n        case BaseFont.ALIGN.left:\n        case BaseFont.ALIGN.right:\n          s[0] = tx;\n          e[0] = tx + textWidth;\n          break;\n      }\n      switch (verticalAlign) {\n        case BaseFont.VERTICAL_ALIGN.center:\n        case BaseFont.VERTICAL_ALIGN.top:\n        case BaseFont.VERTICAL_ALIGN.bottom:\n          s[1] = ty + size;\n          e[1] = ty + size;\n          break;\n      }\n    }\n    draw.line(s, e);\n  }\n\n  truncateDraw() {\n    const { draw, ruler, attr } = this;\n    const { rect } = this;\n    const { width, height } = rect;\n    const { underline, strikethrough, align, verticalAlign } = attr;\n    const { size } = attr;\n    // 填充宽度\n    const verticalAlignPadding = this.getVerticalAlignPadding();\n    const alignPadding = this.getAlignPadding();\n    // 文本位置计算\n    ruler.truncateRuler();\n    const {\n      truncateTextArray: textArray,\n      truncateMaxLen: maxLen,\n    } = ruler;\n    // 计算文本坐标\n    let bx = rect.x;\n    let by = rect.y;\n    switch (align) {\n      case BaseFont.ALIGN.left:\n        bx += alignPadding;\n        break;\n      case BaseFont.ALIGN.center:\n        bx += width / 2 - size / 2;\n        break;\n      case BaseFont.ALIGN.right:\n        bx += width - size - alignPadding;\n        break;\n    }\n    switch (verticalAlign) {\n      case BaseFont.VERTICAL_ALIGN.top:\n        by += verticalAlignPadding;\n        break;\n      case BaseFont.VERTICAL_ALIGN.center:\n        by += height / 2 - maxLen / 2;\n        break;\n      case BaseFont.VERTICAL_ALIGN.bottom:\n        by += height - maxLen - verticalAlignPadding;\n        break;\n    }\n    // 边界检查\n    const outboundsHeight = maxLen + verticalAlignPadding > height;\n    const outboundsWidth = size + alignPadding > width;\n    if (outboundsHeight || outboundsWidth) {\n      const crop = new Crop({\n        draw,\n        rect,\n      });\n      crop.open();\n      const textLen = textArray.length;\n      let ti = 0;\n      while (ti < textLen) {\n        const item = textArray[ti];\n        const tx = item.tx + bx;\n        const ty = item.ty + by;\n        draw.fillText(item.text, tx, ty);\n        if (underline) {\n          this.drawingLine('underline', tx, ty, item.len, align, verticalAlign);\n        }\n        if (strikethrough) {\n          this.drawingLine('strike', tx, ty, item.len, align, verticalAlign);\n        }\n        ti += 1;\n      }\n      crop.close();\n    } else {\n      const textLen = textArray.length;\n      let ti = 0;\n      while (ti < textLen) {\n        const item = textArray[ti];\n        const tx = item.tx + bx;\n        const ty = item.ty + by;\n        draw.fillText(item.text, tx, ty);\n        if (underline) {\n          this.drawingLine('underline', tx, ty, item.len, align, verticalAlign);\n        }\n        if (strikethrough) {\n          this.drawingLine('strike', tx, ty, item.len, align, verticalAlign);\n        }\n        ti += 1;\n      }\n    }\n    return new DrawResult();\n  }\n\n  overflowDraw() {\n    return this.truncateDraw();\n  }\n\n  textWrapDraw() {\n    const { draw, ruler, attr } = this;\n    const { rect } = this;\n    const { width, height } = rect;\n    const { size, verticalAlign, underline } = attr;\n    const { strikethrough, align } = attr;\n    // 填充宽度\n    const verticalAlignPadding = this.getVerticalAlignPadding();\n    const alignPadding = this.getAlignPadding();\n    // 计算文本折行\n    ruler.textWrapRuler();\n    const {\n      textWrapTextArray: textArray,\n      textWrapMaxLen: maxLen,\n      textWrapWOffset: wOffset,\n    } = ruler;\n    // 计算文本坐标\n    let bx = rect.x;\n    let by = rect.y;\n    switch (align) {\n      case BaseFont.ALIGN.left:\n        bx += alignPadding;\n        break;\n      case BaseFont.ALIGN.center:\n        bx += width / 2 - wOffset / 2;\n        break;\n      case BaseFont.ALIGN.right:\n        bx += width - wOffset - alignPadding;\n        break;\n    }\n    switch (verticalAlign) {\n      case BaseFont.VERTICAL_ALIGN.top:\n        by += verticalAlignPadding;\n        break;\n      case BaseFont.VERTICAL_ALIGN.center:\n        by += height / 2 - maxLen / 2;\n        break;\n      case BaseFont.VERTICAL_ALIGN.bottom:\n        by += height - maxLen - verticalAlignPadding;\n        break;\n    }\n    // 边界检查\n    const totalWidth = textArray.length * size;\n    const outboundsWidth = totalWidth + alignPadding > width;\n    if (outboundsWidth) {\n      const textLen = textArray.length;\n      const crop = new Crop({\n        draw,\n        rect,\n      });\n      crop.open();\n      let ti = 0;\n      while (ti < textLen) {\n        const item = textArray[ti];\n        const tx = item.tx + bx;\n        const ty = item.ty + by;\n        draw.fillText(item.text, tx, ty);\n        if (underline) {\n          this.drawingLine('underline', tx, ty, item.len, align, verticalAlign);\n        }\n        if (strikethrough) {\n          this.drawingLine('strike', tx, ty, item.len, align, verticalAlign);\n        }\n        ti += 1;\n      }\n      crop.close();\n    } else {\n      const textLen = textArray.length;\n      let ti = 0;\n      while (ti < textLen) {\n        const item = textArray[ti];\n        const tx = item.tx + bx;\n        const ty = item.ty + by;\n        draw.fillText(item.text, tx, ty);\n        if (underline) {\n          this.drawingLine('underline', tx, ty, item.len, align, verticalAlign);\n        }\n        if (strikethrough) {\n          this.drawingLine('strike', tx, ty, item.len, align, verticalAlign);\n        }\n        ti += 1;\n      }\n    }\n    return new DrawResult();\n  }\n\n}\n\nexport {\n  VerticalDraw,\n};\n","class BaseRuler {\r\n\r\n  constructor({ draw }) {\r\n    this.draw = draw;\r\n  }\r\n\r\n  textWidth(text) {\r\n    const { draw } = this;\r\n    return draw.measureText(text).width;\r\n  }\r\n\r\n}\r\nBaseRuler.USED = {\r\n  DEFAULT_INI: 0,\r\n  TRUNCATE: 1,\r\n  OVER_FLOW: 2,\r\n  TEXT_WRAP: 3,\r\n};\r\nexport {\r\n  BaseRuler,\r\n};\r\n","import { BaseRuler } from './BaseRuler';\r\n\r\nclass PlainRuler extends BaseRuler {\r\n\r\n  constructor({\r\n    draw, text,\r\n  }) {\r\n    super({ draw });\r\n    this.text = text;\r\n  }\r\n\r\n  textBreak() {\r\n    const { text } = this;\r\n    return text.split(/\\n/);\r\n  }\r\n\r\n  isBlank() {\r\n    const { text } = this;\r\n    return text === null || text === undefined || text.toString().trim() === '';\r\n  }\r\n\r\n  hasBreak() {\r\n    const { text } = this;\r\n    return text.indexOf('\\n') > -1;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  PlainRuler,\r\n};\r\n","import { BaseRuler } from '../BaseRuler';\nimport { RTSinKit } from '../../RTFunction';\nimport { PlainRuler } from '../PlainRuler';\nimport { BaseFont } from '../BaseFont';\n\nclass AngleBoxRuler extends PlainRuler {\n\n  constructor({\n    draw,\n    text,\n    size,\n    angle,\n    rect,\n    overflow,\n    align,\n    verticalAlign,\n    textWrap,\n    lineHeight = 4,\n    padding,\n  }) {\n    super({\n      draw, text,\n    });\n\n    this.size = size;\n    this.angle = angle;\n    this.rect = rect;\n    this.overflow = overflow;\n    this.align = align;\n    this.verticalAlign = verticalAlign;\n    this.textWrap = textWrap;\n    this.lineHeight = lineHeight;\n    this.padding = padding;\n\n    this.overflowText = '';\n    this.overflowTextWidth = 0;\n\n    this.textWrapText = '';\n    this.textWrapTextWidth = 0;\n    this.textWrapTextArray = [];\n    this.textWrapMaxLen = 0;\n  }\n\n  equals(other) {\n    if (other === null) {\n      return false;\n    }\n    if (other.constructor !== AngleBoxRuler) {\n      return false;\n    }\n    if (other.text !== this.text) {\n      return false;\n    }\n    if (other.size !== this.size) {\n      return false;\n    }\n    if (other.angle !== this.angle) {\n      return false;\n    }\n    if (other.align !== this.align) {\n      return false;\n    }\n    if (other.verticalAlign !== this.verticalAlign) {\n      return false;\n    }\n    if (other.textWrap !== this.textWrap) {\n      return false;\n    }\n    if (other.padding !== this.padding) {\n      return false;\n    }\n    switch (this.textWrap) {\n      case BaseFont.TEXT_WRAP.TRUNCATE: {\n        const notWidth = other.rect.width !== this.rect.width;\n        const notHeight = other.rect.height !== this.rect.height;\n        if (notWidth || notHeight) {\n          return false;\n        }\n        break;\n      }\n      case BaseFont.TEXT_WRAP.OVER_FLOW: {\n        const notWidth = other.overflow.width !== this.overflow.width;\n        const notHeight = other.overflow.height !== this.overflow.height;\n        if (notWidth || notHeight) {\n          return false;\n        }\n        break;\n      }\n      case BaseFont.TEXT_WRAP.WORD_WRAP: {\n        if (other.lineHeight !== this.lineHeight) {\n          return false;\n        }\n        break;\n      }\n    }\n    return true;\n  }\n\n  truncateRuler() {\n    this.overflowRuler();\n  }\n\n  overflowRuler() {\n    if (this.used) { return; }\n    const { text } = this;\n    const textWidth = this.textWidth(text);\n    this.overflowText = text;\n    this.overflowTextWidth = textWidth;\n    this.used = BaseRuler.USED.OVER_FLOW;\n  }\n\n  textWrapRuler() {\n    if (this.used) { return; }\n    const { text, size, angle, rect, lineHeight, padding } = this;\n    const { height } = rect;\n    if (angle > 0) {\n      const textHypotenuseWidth = RTSinKit.tilt({\n        inverse: height - (padding * 2),\n        angle,\n      });\n      // 折行文本计算\n      const breakArray = this.textBreak();\n      const textArray = [];\n      const breakLen = breakArray.length;\n      let bi = 0;\n      let maxLen = 0;\n      while (bi < breakLen) {\n        const text = breakArray[bi];\n        const textLen = text.length;\n        const line = {\n          str: '',\n          len: 0,\n          start: 0,\n        };\n        let ii = 0;\n        while (ii < textLen) {\n          const str = line.str + text.charAt(ii);\n          const len = this.textWidth(str);\n          if (len > textHypotenuseWidth) {\n            if (line.len === 0) {\n              textArray.push({\n                text: str,\n                len,\n                tx: 0,\n                ty: 0,\n              });\n              if (len > maxLen) {\n                maxLen = len;\n              }\n              ii += 1;\n            } else {\n              textArray.push({\n                text: line.str,\n                len: line.len,\n                tx: 0,\n                ty: 0,\n              });\n              if (line.len > maxLen) {\n                maxLen = line.len;\n              }\n            }\n            line.str = '';\n            line.len = 0;\n            line.start = ii;\n          } else {\n            line.str = str;\n            line.len = len;\n            ii += 1;\n          }\n        }\n        if (line.len > 0) {\n          textArray.push({\n            text: line.str,\n            len: line.len,\n            tx: 0,\n            ty: 0,\n          });\n        }\n        if (line.len > maxLen) {\n          maxLen = line.len;\n        }\n        bi += 1;\n      }\n      // x坐标偏移量\n      const spacing = RTSinKit.tilt({\n        inverse: size + lineHeight,\n        angle,\n      });\n      const textArrayLen = textArray.length;\n      let wOffset = 0;\n      let ii = 0;\n      while (ii < textArrayLen) {\n        const item = textArray[ii];\n        item.tx = wOffset;\n        wOffset += spacing;\n        ii += 1;\n      }\n      this.textWrapTextArray = textArray;\n      this.textWrapMaxLen = maxLen;\n    } else {\n      const textHypotenuseWidth = RTSinKit.tilt({\n        inverse: height - (padding * 2),\n        angle,\n      });\n      // 折行文本计算\n      const breakArray = this.textBreak();\n      const textArray = [];\n      const breakLen = breakArray.length;\n      let bi = 0;\n      let maxLen = 0;\n      while (bi < breakLen) {\n        const text = breakArray[bi];\n        const textLen = text.length;\n        const line = {\n          str: '',\n          len: 0,\n          start: 0,\n        };\n        let ii = 0;\n        while (ii < textLen) {\n          const str = line.str + text.charAt(ii);\n          const len = this.textWidth(str);\n          if (len > textHypotenuseWidth) {\n            if (line.len === 0) {\n              textArray.push({\n                text: str,\n                len,\n                tx: 0,\n                ty: 0,\n              });\n              if (len > maxLen) {\n                maxLen = len;\n              }\n              ii += 1;\n            } else {\n              textArray.push({\n                text: line.str,\n                len: line.len,\n                tx: 0,\n                ty: 0,\n              });\n              if (line.len > maxLen) {\n                maxLen = line.len;\n              }\n            }\n            line.str = '';\n            line.len = 0;\n            line.start = ii;\n          } else {\n            line.str = str;\n            line.len = len;\n            ii += 1;\n          }\n        }\n        if (line.len > 0) {\n          textArray.push({\n            text: line.str,\n            len: line.len,\n            tx: 0,\n            ty: 0,\n          });\n        }\n        if (line.len > maxLen) {\n          maxLen = line.len;\n        }\n        bi += 1;\n      }\n      // 计算x坐标偏移量\n      const spacing = RTSinKit.tilt({\n        inverse: size + lineHeight,\n        angle,\n      });\n      const textArrayLen = textArray.length;\n      let wOffset = 0;\n      let ii = textArrayLen - 1;\n      while (ii >= 0) {\n        const item = textArray[ii];\n        item.tx = wOffset;\n        wOffset += spacing;\n        ii -= 1;\n      }\n      this.textWrapTextArray = textArray;\n      this.textWrapMaxLen = maxLen;\n    }\n    const { textWrapTextArray } = this;\n    if (textWrapTextArray.length === 0) {\n      this.textWrapText = text;\n      this.textWrapTextWidth = this.textWidth(text);\n    }\n    this.used = BaseRuler.USED.TEXT_WRAP;\n  }\n\n}\n\nexport {\n  AngleBoxRuler,\n};\n","import { AngleBoxRuler } from './AngleBoxRuler';\nimport { BaseFont } from '../BaseFont';\n\nclass AngleBarRuler extends AngleBoxRuler {\n\n  equals(other) {\n    if (other === null) {\n      return false;\n    }\n    if (other.constructor !== AngleBarRuler) {\n      return false;\n    }\n    if (other.text !== this.text) {\n      return false;\n    }\n    if (other.size !== this.size) {\n      return false;\n    }\n    if (other.angle !== this.angle) {\n      return false;\n    }\n    if (other.align !== this.align) {\n      return false;\n    }\n    if (other.verticalAlign !== this.verticalAlign) {\n      return false;\n    }\n    if (other.textWrap !== this.textWrap) {\n      return false;\n    }\n    if (other.padding !== this.padding) {\n      return false;\n    }\n    switch (this.textWrap) {\n      case BaseFont.TEXT_WRAP.TRUNCATE: {\n        const notWidth = other.rect.width !== this.rect.width;\n        const notHeight = other.rect.height !== this.rect.height;\n        if (notWidth || notHeight) {\n          return false;\n        }\n        break;\n      }\n      case BaseFont.TEXT_WRAP.OVER_FLOW: {\n        const notWidth = other.overflow.width !== this.overflow.width;\n        const notHeight = other.overflow.height !== this.overflow.height;\n        if (notWidth || notHeight) {\n          return false;\n        }\n        break;\n      }\n      case BaseFont.TEXT_WRAP.WORD_WRAP: {\n        if (other.lineHeight !== this.lineHeight) {\n          return false;\n        }\n        break;\n      }\n    }\n    return true;\n  }\n\n}\n\nexport {\n  AngleBarRuler,\n};\n","import { HorizonVisual } from './HorizonVisual';\nimport { BaseRuler } from '../BaseRuler';\nimport { BaseFont } from '../BaseFont';\n\nclass HorizonRuler extends HorizonVisual {\n\n  constructor({\n    draw,\n    text,\n    size,\n    rect,\n    overflow,\n    align,\n    textWrap,\n    lineHeight = 4,\n    padding,\n  }) {\n    super({\n      text, draw, align, padding,\n    });\n\n    this.size = size;\n    this.rect = rect;\n    this.overflow = overflow;\n    this.textWrap = textWrap;\n    this.lineHeight = lineHeight;\n    this.used = BaseRuler.USED.DEFAULT_INI;\n\n    this.truncateText = '';\n    this.truncateTextWidth = 0;\n\n    this.overflowText = '';\n    this.overflowTextWidth = 0;\n\n    this.textWrapTextArray = [];\n    this.textWrapHOffset = 0;\n  }\n\n  equals(other) {\n    if (other === null) {\n      return false;\n    }\n    if (other.constructor !== HorizonRuler) {\n      return false;\n    }\n    if (other.text !== this.text) {\n      return false;\n    }\n    if (other.align !== this.align) {\n      return false;\n    }\n    if (other.size !== this.size) {\n      return false;\n    }\n    if (other.padding !== this.padding) {\n      return false;\n    }\n    if (other.textWrap !== this.textWrap) {\n      return false;\n    }\n    switch (this.textWrap) {\n      case BaseFont.TEXT_WRAP.TRUNCATE: {\n        const notWidth = other.rect.width !== this.rect.width;\n        const notHeight = other.rect.height !== this.rect.height;\n        if (notWidth || notHeight) {\n          return false;\n        }\n        break;\n      }\n      case BaseFont.TEXT_WRAP.OVER_FLOW: {\n        const notWidth = other.overflow.width !== this.overflow.width;\n        const notHeight = other.overflow.height !== this.overflow.height;\n        if (notWidth || notHeight) {\n          return false;\n        }\n        break;\n      }\n      case BaseFont.TEXT_WRAP.WORD_WRAP: {\n        if (other.lineHeight !== this.lineHeight) {\n          return false;\n        }\n        break;\n      }\n    }\n    return true;\n  }\n\n  truncateRuler() {\n    if (this.used) { return; }\n    const { rect } = this;\n    const { text, textWidth } = this.displayFont(rect);\n    this.truncateText = text;\n    this.truncateTextWidth = textWidth;\n    this.used = BaseRuler.USED.TRUNCATE;\n  }\n\n  overflowRuler() {\n    if (this.used) { return; }\n    const { overflow } = this;\n    const { text, textWidth } = this.displayFont(overflow);\n    this.overflowText = text;\n    this.overflowTextWidth = textWidth;\n    this.used = BaseRuler.USED.OVER_FLOW;\n  }\n\n  textWrapRuler() {\n    if (this.used) { return; }\n    const { size, rect, lineHeight } = this;\n    const { width } = rect;\n    const alignPadding = this.getAlignPadding();\n    const breakArray = this.textBreak();\n    const textArray = [];\n    const maxWidth = width - (alignPadding * 2);\n    const breakLen = breakArray.length;\n    let bi = 0;\n    let hOffset = 0;\n    while (bi < breakLen) {\n      if (bi > 0) {\n        hOffset += size + lineHeight;\n      }\n      const text = breakArray[bi];\n      const textLen = text.length;\n      let ii = 0;\n      const line = {\n        str: '',\n        len: 0,\n        start: 0,\n      };\n      while (ii < textLen) {\n        const str = line.str + text.charAt(ii);\n        const len = this.textWidth(str);\n        if (len > maxWidth) {\n          if (line.len === 0) {\n            textArray.push({\n              text: str,\n              len,\n              tx: 0,\n              ty: hOffset,\n            });\n            ii += 1;\n          } else {\n            textArray.push({\n              text: line.str,\n              len: line.len,\n              tx: 0,\n              ty: hOffset,\n            });\n          }\n          hOffset += size + lineHeight;\n          line.str = '';\n          line.len = 0;\n          line.start = ii;\n        } else {\n          line.str = str;\n          line.len = len;\n          ii += 1;\n        }\n      }\n      if (line.len > 0) {\n        textArray.push({\n          text: line.str,\n          len: line.len,\n          tx: 0,\n          ty: hOffset,\n        });\n      }\n      bi += 1;\n    }\n    if (hOffset > 0) {\n      hOffset -= lineHeight;\n    }\n    this.textWrapTextArray = textArray;\n    this.textWrapHOffset = hOffset;\n    this.used = BaseRuler.USED.TEXT_WRAP;\n  }\n\n}\n\nexport {\n  HorizonRuler,\n};\n","import { PlainRuler } from '../PlainRuler';\nimport { BaseFont } from '../BaseFont';\n\nclass HorizonVisual extends PlainRuler {\n\n  constructor({\n    draw, text, align, padding,\n  }) {\n    super({ draw, text });\n    this.align = align;\n    this.padding = padding;\n  }\n\n  displayFont(rect) {\n    const { align } = this;\n    const { width } = rect;\n    const origin = this.text;\n    const length = origin.length;\n    switch (align) {\n      case BaseFont.ALIGN.left: {\n        let text = '';\n        let textWidth = 0;\n        let start = 0;\n        while (start < length) {\n          const str = text + origin.charAt(start);\n          const len = this.textWidth(str);\n          if (len >= width) {\n            break;\n          }\n          text = str;\n          textWidth = len;\n          start += 1;\n        }\n        return {\n          text, textWidth,\n        };\n      }\n      case BaseFont.ALIGN.center: {\n        const textWidth = this.textWidth(origin);\n        const lOffset = width / 2 - textWidth / 2;\n        if (lOffset < 0) {\n          let start = 0;\n          let temp = '';\n          while (start < length) {\n            const str = temp + origin.charAt(start);\n            if (lOffset + this.textWidth(str) >= 0) {\n              break;\n            }\n            temp = str;\n            start += 1;\n          }\n          let over = start;\n          let text = '';\n          let textWidth = 0;\n          while (over < length) {\n            const str = text + origin.charAt(over);\n            const len = this.textWidth(str);\n            if (len >= width) {\n              break;\n            }\n            text = str;\n            textWidth = len;\n            over += 1;\n          }\n          return {\n            text, textWidth,\n          };\n        }\n        return {\n          text: origin, textWidth,\n        };\n      }\n      case BaseFont.ALIGN.right: {\n        let start = length - 1;\n        let text = '';\n        let textWidth = 0;\n        while (start >= 0) {\n          const str = origin.charAt(start) + text;\n          const len = this.textWidth(str);\n          if (len >= width) {\n            break;\n          }\n          text = str;\n          textWidth = len;\n          start -= 1;\n        }\n        return {\n          text, textWidth,\n        };\n      }\n    }\n    return {\n      text: '',\n      textWidth: 0,\n    };\n  }\n\n  getAlignPadding() {\n    if (this.align === BaseFont.ALIGN.center) {\n      return 0;\n    }\n    return this.padding;\n  }\n\n}\n\nexport {\n  HorizonVisual,\n};\n","import { VerticalVisual } from './VerticalVisual';\nimport { BaseRuler } from '../BaseRuler';\nimport { BaseFont } from '../BaseFont';\n\nclass VerticalRuler extends VerticalVisual {\n\n  constructor({\n    draw,\n    text,\n    size,\n    rect,\n    verticalAlign,\n    textWrap,\n    spacing = 2,\n    lineHeight = 8,\n    padding,\n  }) {\n    super({\n      draw,\n      text,\n      verticalAlign,\n      padding,\n    });\n\n    this.size = size;\n    this.rect = rect;\n    this.textWrap = textWrap;\n    this.spacing = spacing;\n    this.lineHeight = lineHeight;\n    this.used = BaseRuler.USED.DEFAULT_INI;\n\n    this.truncateTextArray = [];\n    this.truncateMaxLen = 0;\n\n    this.textWrapTextArray = [];\n    this.textWrapMaxLen = 0;\n    this.textWrapWOffset = 0;\n  }\n\n  equals(other) {\n    if (other === null) {\n      return false;\n    }\n    if (other.constructor !== VerticalRuler) {\n      return false;\n    }\n    if (other.text !== this.text) {\n      return false;\n    }\n    if (other.size !== this.size) {\n      return false;\n    }\n    if (other.spacing !== this.spacing) {\n      return false;\n    }\n    if (other.padding !== this.padding) {\n      return false;\n    }\n    if (other.verticalAlign !== this.verticalAlign) {\n      return false;\n    }\n    if (other.textWrap !== this.textWrap) {\n      return false;\n    }\n    switch (this.textWrap) {\n      case BaseFont.TEXT_WRAP.TRUNCATE:\n      case BaseFont.TEXT_WRAP.OVER_FLOW: {\n        const notWidth = other.rect.width !== this.rect.width;\n        const notHeight = other.rect.height !== this.rect.height;\n        if (notWidth || notHeight) {\n          return false;\n        }\n        break;\n      }\n      case BaseFont.TEXT_WRAP.WORD_WRAP: {\n        if (other.lineHeight !== this.lineHeight) {\n          return false;\n        }\n        break;\n      }\n    }\n    return true;\n  }\n\n  truncateRuler() {\n    if (this.used) {\n      return;\n    }\n    const { text, size, spacing } = this;\n    const textArray = [];\n    const textLen = text.length;\n    let maxLen = 0;\n    let hOffset = 0;\n    let ii = 0;\n    while (ii < textLen) {\n      const char = text.charAt(ii);\n      const width = this.textWidth(char);\n      textArray.push({\n        len: width,\n        text: char,\n        tx: size / 2 - width / 2,\n        ty: hOffset,\n      });\n      hOffset += size + spacing;\n      ii += 1;\n    }\n    if (hOffset > 0) {\n      hOffset -= spacing;\n    }\n    if (hOffset > maxLen) {\n      maxLen = hOffset;\n    }\n    this.truncateTextArray = textArray;\n    this.truncateMaxLen = maxLen;\n    this.used = BaseRuler.USED.TRUNCATE;\n  }\n\n  overflowRuler() {\n    this.truncateRuler();\n  }\n\n  textWrapRuler() {\n    const { rect, size, spacing, lineHeight } = this;\n    const { height } = rect;\n    const verticalAlignPadding = this.getVerticalAlignPadding();\n    const breakArray = this.textBreak();\n    const textArray = [];\n    const maxHeight = height - (verticalAlignPadding * 2);\n    const breakLen = breakArray.length;\n    let maxLen = 0;\n    let wOffset = 0;\n    let bi = 0;\n    while (bi < breakLen) {\n      const text = breakArray[bi];\n      const textLen = text.length;\n      let hOffset = 0;\n      let ii = 0;\n      while (ii < textLen) {\n        const char = text.charAt(ii);\n        const width = this.textWidth(char);\n        const item = {\n          len: width,\n          text: char,\n          tx: wOffset + (size / 2 - width / 2),\n          ty: hOffset,\n        };\n        textArray.push(item);\n        if (hOffset + size > maxHeight) {\n          if (hOffset > maxLen) {\n            maxLen = hOffset - spacing;\n          }\n          wOffset += size + lineHeight;\n          hOffset = 0;\n          item.tx = wOffset + (size / 2 - width / 2);\n          item.ty = hOffset;\n        }\n        hOffset += size + spacing;\n        ii += 1;\n      }\n      if (hOffset > maxLen) {\n        maxLen = hOffset - spacing;\n      }\n      wOffset += size;\n      bi += 1;\n    }\n    this.textWrapTextArray = textArray;\n    this.textWrapMaxLen = maxLen;\n    this.textWrapWOffset = wOffset;\n  }\n\n}\n\nexport {\n  VerticalRuler,\n};\n","import { PlainRuler } from '../PlainRuler';\r\nimport { BaseFont } from '../BaseFont';\r\n\r\nclass VerticalVisual extends PlainRuler {\r\n\r\n  constructor({\r\n    draw, text, verticalAlign, padding,\r\n  }) {\r\n    super({ draw, text });\r\n    this.verticalAlign = verticalAlign;\r\n    this.padding = padding;\r\n  }\r\n\r\n  getVerticalAlignPadding() {\r\n    if (this.verticalAlign === BaseFont.VERTICAL_ALIGN.center) {\r\n      return 0;\r\n    }\r\n    return this.padding;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  VerticalVisual,\r\n};\r\n","import { BaseFont } from '../BaseFont';\r\nimport { AngleBoxDraw } from '../draw/AngleBoxDraw';\r\nimport { AngleBarDraw } from '../draw/AngleBarDraw';\r\nimport { HorizonDraw } from '../draw/HorizonDraw';\r\nimport { VerticalDraw } from '../draw/VerticalDraw';\r\nimport { AngleBoxRuler } from '../ruler/AngleBoxRuler';\r\nimport { AngleBarRuler } from '../ruler/AngleBarRuler';\r\nimport { HorizonRuler } from '../ruler/HorizonRuler';\r\nimport { VerticalRuler } from '../ruler/VerticalRuler';\r\n\r\nclass DrawFontBuilder {\r\n\r\n  constructor({\r\n    draw, text, rect, overflow, attr,\r\n  }) {\r\n    this.attr = Object.assign({}, {\r\n      verticalAlign: BaseFont.VERTICAL_ALIGN.center,\r\n      direction: BaseFont.TEXT_DIRECTION.HORIZONTAL,\r\n      name: 'Arial',\r\n      size: 14,\r\n      color: '#000000',\r\n      underline: false,\r\n      strikethrough: false,\r\n      bold: false,\r\n      italic: false,\r\n      textWrap: BaseFont.TEXT_WRAP.TRUNCATE,\r\n      align: BaseFont.ALIGN.left,\r\n      angle: 0,\r\n      padding: 8,\r\n    }, attr);\r\n    this.draw = draw;\r\n    this.text = text;\r\n    this.rect = rect;\r\n    this.overflow = overflow;\r\n  }\r\n\r\n  setPadding(padding) {\r\n    this.attr.padding = padding;\r\n  }\r\n\r\n  setSize(size) {\r\n    this.attr.size = size;\r\n  }\r\n\r\n  setDirection(direction) {\r\n    this.attr.direction = direction;\r\n  }\r\n\r\n  buildFont() {\r\n    const { text, draw, rect, attr, overflow } = this;\r\n    switch (attr.direction) {\r\n      case BaseFont.TEXT_DIRECTION.ANGLE:\r\n        return new AngleBoxDraw({\r\n          draw, text, rect, overflow, attr,\r\n        });\r\n      case BaseFont.TEXT_DIRECTION.ANGLE_BAR:\r\n        return new AngleBarDraw({\r\n          draw, text, rect, overflow, attr,\r\n        });\r\n      case BaseFont.TEXT_DIRECTION.HORIZONTAL:\r\n        return new HorizonDraw({\r\n          draw, text, rect, overflow, attr,\r\n        });\r\n      case BaseFont.TEXT_DIRECTION.VERTICAL:\r\n        return new VerticalDraw({\r\n          draw, text, rect, overflow, attr,\r\n        });\r\n    }\r\n    return null;\r\n  }\r\n\r\n  buildRuler() {\r\n    const { attr } = this;\r\n    const { text, draw, rect, overflow } = this;\r\n    const { size, align, angle, padding, textWrap } = attr;\r\n    switch (attr.direction) {\r\n      case BaseFont.TEXT_DIRECTION.ANGLE:\r\n        return new AngleBoxRuler({\r\n          draw, text, size, angle, rect, overflow, align, textWrap, padding\r\n        });\r\n      case BaseFont.TEXT_DIRECTION.ANGLE_BAR:\r\n        return new AngleBarRuler({\r\n          draw, text, size, angle, rect, overflow, align, textWrap, padding\r\n        });\r\n      case BaseFont.TEXT_DIRECTION.HORIZONTAL:\r\n        return new HorizonRuler({\r\n          draw, text, size, rect, overflow, align, textWrap, padding\r\n        });\r\n      case BaseFont.TEXT_DIRECTION.VERTICAL:\r\n        return new VerticalRuler({\r\n          draw, text, size, rect, overflow, align, textWrap, padding\r\n        });\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  DrawFontBuilder,\r\n};\r\n","import { ScaleAdapter } from './Scale';\nimport { XDraw } from '../../../canvas/XDraw';\nimport { BaseFont } from '../../../canvas/font/BaseFont';\nimport XTableFormat from '../XTableFormat';\nimport { DrawFontBuilder } from '../../../canvas/font/build/DrawFontBuilder';\n\nclass TextBuilder {\n\n  constructor({\n    scaleAdapter, table,\n  }) {\n    this.scaleAdapter = scaleAdapter;\n    this.rect = null;\n    this.draw = null;\n    this.cell = null;\n    this.row = -1;\n    this.col = -1;\n    this.table = table;\n    this.overflow = null;\n  }\n\n  setRect(rect) {\n    this.rect = rect;\n  }\n\n  setDraw(draw) {\n    this.draw = draw;\n  }\n\n  setCell(cell) {\n    this.cell = cell;\n  }\n\n  setCol(col) {\n    this.col = col;\n  }\n\n  setRow(row) {\n    this.row = row;\n  }\n\n  setOverFlow(overflow) {\n    this.overflow = overflow;\n  }\n\n  build() {\n    const { rect, overflow, row, col, cell, draw, scaleAdapter, table } = this;\n    const { format, text, fontAttr, ruler } = cell;\n    const size = XDraw.srcTransformStylePx(scaleAdapter.goto(fontAttr.size));\n    const padding = XDraw.srcTransformStylePx(scaleAdapter.goto(fontAttr.padding));\n    const builder = new DrawFontBuilder({\n      text: XTableFormat(format, text), draw, overflow, rect, attr: fontAttr,\n    });\n    builder.setSize(size);\n    builder.setPadding(padding);\n    if (table.isAngleBarCell(row, col)) {\n      builder.setDirection(BaseFont.TEXT_DIRECTION.ANGLE_BAR);\n    }\n    const buildRuler = builder.buildRuler();\n    const buildFont = builder.buildFont();\n    buildFont.setRuler(buildRuler.equals(ruler) ? ruler : buildRuler);\n    cell.setRuler(buildFont.ruler);\n    return buildFont;\n  }\n\n}\n\nclass Text {\n\n  constructor({\n    scaleAdapter = new ScaleAdapter(),\n    table,\n  }) {\n    this.scaleAdapter = scaleAdapter;\n    this.table = table;\n  }\n\n  getBuilder() {\n    const { scaleAdapter, table } = this;\n    return new TextBuilder({\n      scaleAdapter, table,\n    });\n  }\n\n}\n\nexport { Text };\n","import { PlainUtils } from '../../../utils/PlainUtils';\nimport { Rect } from '../../../canvas/Rect';\nimport { RTCosKit, RTSinKit } from '../../../canvas/RTFunction';\nimport { BaseFont } from '../../../canvas/font/BaseFont';\n\nclass BaseCellsHelper {\n\n  getXTableAreaView() {\n    throw new TypeError('child impl');\n  }\n\n  getRows() {\n    throw new TypeError('child impl');\n  }\n\n  getStyleTable() {\n    throw new TypeError('child impl');\n  }\n\n  getCols() {\n    throw new TypeError('child impl');\n  }\n\n  getMerges() {\n    throw new TypeError('child impl');\n  }\n\n  getCells() {\n    throw new TypeError('child impl');\n  }\n\n  getXIteratorBuilder() {\n    throw new TypeError('child impl');\n  }\n\n  getAngleBarWrapWidth(ri, ci, cell, rect) {\n    const xTableAreaView = this.getXTableAreaView();\n    const merges = this.getMerges();\n    const cols = this.getCols();\n    const merge = merges.getFirstIncludes(ri, ci);\n    if (merge) {\n      return merge;\n    }\n    const scrollView = xTableAreaView.getScrollView();\n    const { eci } = scrollView;\n    const { fontAttr } = cell;\n    const { angle } = fontAttr;\n    let width = 0;\n    let offset = 0;\n    if (angle > 0) {\n      width = cols.sectionSumWidth(ci, eci);\n    } else {\n      width = cols.sectionSumWidth(0, ci - 1) + rect.width;\n      offset = -(width - rect.width);\n    }\n    return { width, offset };\n  }\n\n  getHorizontalMaxWidth(ri, ci, cell) {\n    const merges = this.getMerges();\n    const cols = this.getCols();\n    const cells = this.getCells();\n    const { fontAttr } = cell;\n    const { align } = fontAttr;\n    const xIteratorBuilder = this.getXIteratorBuilder();\n    let width = 0;\n    let offset = 0;\n    switch (align) {\n      case BaseFont.ALIGN.left: {\n        // 计算当前单元格右边\n        // 空白的单元格的总宽度\n        xIteratorBuilder.getColIterator()\n          .setBegin(ci)\n          .setEnd(cols.len)\n          .setLoop((i) => {\n            const merge = merges.getFirstIncludes(ri, i);\n            const cell = cells.getCell(ri, i);\n            const blank = PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text);\n            if (i === ci) {\n              width += cols.getWidth(i);\n              return true;\n            }\n            if (blank && PlainUtils.isUnDef(merge)) {\n              width += cols.getWidth(i);\n              return true;\n            }\n            return false;\n          })\n          .execute();\n        break;\n      }\n      case BaseFont.ALIGN.center: {\n        let rightWidth = 0;\n        let leftWidth = 0;\n        // 右边\n        xIteratorBuilder.getColIterator()\n          .setBegin(ci + 1)\n          .setEnd(cols.len)\n          .setLoop((i) => {\n            const merge = merges.getFirstIncludes(ri, i);\n            const cell = cells.getCell(ri, i);\n            const blank = PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text);\n            if (blank && PlainUtils.isUnDef(merge)) {\n              rightWidth += cols.getWidth(i);\n              return true;\n            }\n            return false;\n          })\n          .execute();\n        // 左边\n        xIteratorBuilder.getColIterator()\n          .setBegin(ci - 1)\n          .setEnd(0)\n          .setLoop((i) => {\n            const merge = merges.getFirstIncludes(ri, i);\n            const cell = cells.getCell(ri, i);\n            const blank = PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text);\n            if (blank && PlainUtils.isUnDef(merge)) {\n              const tmp = cols.getWidth(i);\n              leftWidth += tmp;\n              offset -= tmp;\n              return true;\n            }\n            return false;\n          })\n          .execute();\n        // 统计\n        width = cols.getWidth(ci) + leftWidth + rightWidth;\n        break;\n      }\n      case BaseFont.ALIGN.right: {\n        // 计算当前单元格左边\n        // 空白的单元格的总宽度\n        xIteratorBuilder.getColIterator()\n          .setBegin(ci)\n          .setEnd(0)\n          .setLoop((i) => {\n            const merge = merges.getFirstIncludes(ri, i);\n            const cell = cells.getCell(ri, i);\n            const blank = PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text);\n            if (i === ci) {\n              width += cols.getWidth(i);\n              return true;\n            }\n            if (blank && PlainUtils.isUnDef(merge)) {\n              const tmp = cols.getWidth(i);\n              width += tmp;\n              offset -= tmp;\n              return true;\n            }\n            return false;\n          })\n          .execute();\n        break;\n      }\n    }\n    return { width, offset };\n  }\n\n  getAngleMaxWidth(ri, ci, cell, rect) {\n    const merges = this.getMerges();\n    const cols = this.getCols();\n    const rows = this.getRows();\n    const merge = merges.getFirstIncludes(ri, ci);\n    if (merge) {\n      return merge;\n    }\n    const xIteratorBuilder = this.getXIteratorBuilder();\n    const { fontAttr } = cell;\n    const { angle, align, padding } = fontAttr;\n    const rowHeight = rows.getHeight(ri);\n    const tilt = RTSinKit.tilt({\n      inverse: rowHeight,\n      angle,\n    });\n    let haveWidth = RTCosKit.nearby({ tilt, angle });\n    let width = 0;\n    let offset = 0;\n    switch (align) {\n      case BaseFont.ALIGN.left: {\n        haveWidth += padding;\n        xIteratorBuilder.getColIterator()\n          .setBegin(ci)\n          .setEnd(cols.len)\n          .setLoop((i) => {\n            const colWidth = cols.getWidth(i);\n            width += colWidth;\n            return haveWidth > width;\n          })\n          .execute();\n        break;\n      }\n      case BaseFont.ALIGN.center: {\n        const target = haveWidth - rect.width;\n        const half = target / 2;\n        let leftWidth = 0;\n        xIteratorBuilder.getColIterator()\n          .setBegin(ci)\n          .setEnd(cols.len)\n          .setLoop((i) => {\n            const colWidth = cols.getWidth(i);\n            leftWidth += colWidth;\n            return half + rect.width > leftWidth;\n          })\n          .execute();\n        let rightWidth = 0;\n        xIteratorBuilder.getColIterator()\n          .setBegin(ci)\n          .setEnd(0)\n          .setLoop((i) => {\n            const colWidth = cols.getWidth(i);\n            rightWidth += colWidth;\n            return half + rect.width > rightWidth;\n          })\n          .execute();\n        width = leftWidth + rightWidth - rect.width;\n        offset = -(width / 2 - rect.width / 2);\n        break;\n      }\n      case BaseFont.ALIGN.right: {\n        haveWidth += padding;\n        xIteratorBuilder.getColIterator()\n          .setBegin(ci)\n          .setEnd(0)\n          .setLoop((i) => {\n            const colWidth = cols.getWidth(i);\n            width += colWidth;\n            return haveWidth > width;\n          })\n          .execute();\n        offset = -(width - rect.width);\n        break;\n      }\n    }\n    return {\n      width, offset,\n    };\n  }\n\n  getAngleBarMaxWidth(ri, ci, cell, rect) {\n    const merges = this.getMerges();\n    const rows = this.getRows();\n    const merge = merges.getFirstIncludes(ri, ci);\n    if (merge) {\n      return merge;\n    }\n    const { fontAttr } = cell;\n    const { angle } = fontAttr;\n    const rowHeight = rows.getHeight(ri);\n    const tilt = RTSinKit.tilt({\n      inverse: rowHeight,\n      angle,\n    });\n    let width = RTCosKit.nearby({ tilt, angle });\n    let offset = 0;\n    if (angle < 0) {\n      width = RTCosKit.nearby({ tilt, angle }) + rect.width;\n      offset = -width;\n    }\n    return { width, offset };\n  }\n\n  getCellOverFlow(ri, ci, rect, cell) {\n    const styleTable = this.getStyleTable();\n    const { x, y, height, width } = rect;\n    const { fontAttr, contentWidth } = cell;\n    const { direction } = fontAttr;\n    const blank = PlainUtils.isUnDef(cell) || PlainUtils.isBlank(cell.text);\n    switch (direction) {\n      case BaseFont.TEXT_DIRECTION.HORIZONTAL: {\n        if (blank === false) {\n          const { textWrap } = fontAttr;\n          if (textWrap === BaseFont.TEXT_WRAP.OVER_FLOW) {\n            if (contentWidth === 0 || contentWidth > width) {\n              const max = this.getHorizontalMaxWidth(ri, ci, cell);\n              return new Rect({\n                x: x + max.offset, y, width: max.width, height,\n              });\n            }\n          }\n        }\n        return rect;\n      }\n      case BaseFont.TEXT_DIRECTION.ANGLE: {\n        if (blank === false) {\n          const { textWrap } = fontAttr;\n          if (styleTable.isAngleBarCell(ri, ci)) {\n            switch (textWrap) {\n              case BaseFont.TEXT_WRAP.OVER_FLOW:\n              case BaseFont.TEXT_WRAP.TRUNCATE: {\n                const max = this.getAngleBarMaxWidth(ri, ci, cell, rect);\n                return new Rect({\n                  x: x + max.offset, y, width: max.width, height,\n                });\n              }\n              case BaseFont.TEXT_WRAP.WORD_WRAP: {\n                const max = this.getAngleBarWrapWidth(ri, ci, cell, rect);\n                return new Rect({\n                  x: x + max.offset, y, width: max.width, height,\n                });\n              }\n            }\n          } else {\n            switch (textWrap) {\n              case BaseFont.TEXT_WRAP.OVER_FLOW:\n              case BaseFont.TEXT_WRAP.TRUNCATE: {\n                const max = this.getAngleMaxWidth(ri, ci, cell, rect);\n                return new Rect({\n                  x: x + max.offset, y, width: max.width, height,\n                });\n              }\n            }\n          }\n        }\n        return rect;\n      }\n    }\n    return null;\n  }\n\n}\n\nexport {\n  BaseCellsHelper,\n};\n","import { BaseCellsHelper } from './BaseCellsHelper';\nimport { Rect } from '../../../canvas/Rect';\nimport { PlainUtils } from '../../../utils/PlainUtils';\n\nconst STYLE_BREAK_LOOP = {\n  CONTINUE: 3,\n  ROW: 1,\n  RETURN: 2,\n};\n\nclass StyleCellsHelper extends BaseCellsHelper {\n\n  constructor(table) {\n    super();\n    this.table = table;\n  }\n\n  getXTableAreaView() {\n    return this.table.xTableAreaView;\n  }\n\n  getRows() {\n    return this.table.rows;\n  }\n\n  getStyleTable() {\n    return this.table;\n  }\n\n  getCols() {\n    return this.table.cols;\n  }\n\n  getMerges() {\n    return this.table.merges;\n  }\n\n  getCells() {\n    return this.table.cells;\n  }\n\n  getXIteratorBuilder() {\n    return this.table.xIteratorBuilder;\n  }\n\n  getCellByViewRange({\n    reverseRows = false,\n    reverseCols = false,\n    startX = 0,\n    startY = 0,\n    view,\n    newRow = () => {},\n    newCol = () => {},\n    cellsINCallback = () => {},\n    mergeCallback = () => {},\n    loopINCallback = () => {},\n  }) {\n    const { table } = this;\n    const { xIteratorBuilder } = table;\n    const rows = this.getRows();\n    const cols = this.getCols();\n    const cells = this.getCells();\n    const merges = this.getMerges();\n    const { sri, eri, sci, eci } = view;\n    const filter = [];\n    let y = startY;\n    if (reverseRows && reverseCols) {\n      let y = startY;\n      xIteratorBuilder.getRowIterator()\n        .setBegin(eri)\n        .setEnd(sri)\n        .setLoop((row) => {\n          const height = rows.getHeight(row);\n          let result = null;\n          let x = startX;\n          y -= height;\n          newRow(row);\n          xIteratorBuilder.getColIterator()\n            .setBegin(eci)\n            .setEnd(sci)\n            .setLoop((col) => {\n              const merge = merges.getFirstIncludes(row, col);\n              const width = cols.getWidth(col);\n              x -= width;\n              const rect = new Rect({ x, y, width, height });\n              newCol(col);\n              loopINCallback(row, col, rect);\n              if (merge) {\n                const find = filter.find(i => i === merge);\n                if (PlainUtils.isUnDef(find)) {\n                  filter.push(merge);\n                  const mergeInfo = this.mergeInfo({\n                    view, merge,\n                  });\n                  const { rect, cell } = mergeInfo;\n                  result = mergeCallback(row, col, cell, rect, merge);\n                }\n              } else {\n                const cell = cells.getCell(row, col);\n                if (cell) {\n                  result = cellsINCallback(row, col, cell, rect);\n                }\n              }\n              switch (result) {\n                case STYLE_BREAK_LOOP.RETURN:\n                case STYLE_BREAK_LOOP.ROW:\n                  return false;\n                default: return true;\n              }\n            })\n            .execute();\n          switch (result) {\n            case STYLE_BREAK_LOOP.RETURN:\n              return false;\n            default: return true;\n          }\n        })\n        .execute();\n    } else if (reverseRows) {\n      let y = startY;\n      xIteratorBuilder.getRowIterator()\n        .setBegin(eri)\n        .setEnd(sri)\n        .setLoop((row) => {\n          const height = rows.getHeight(row);\n          let result = null;\n          let x = startX;\n          newRow(row);\n          y -= height;\n          xIteratorBuilder.getColIterator()\n            .setBegin(sci)\n            .setEnd(eci)\n            .setLoop((col) => {\n              const merge = merges.getFirstIncludes(row, col);\n              const width = cols.getWidth(col);\n              const rect = new Rect({ x, y, width, height });\n              newCol(col);\n              loopINCallback(row, col, rect);\n              if (merge) {\n                const find = filter.find(i => i === merge);\n                if (PlainUtils.isUnDef(find)) {\n                  filter.push(merge);\n                  const mergeInfo = this.mergeInfo({\n                    view, merge,\n                  });\n                  const { rect, cell } = mergeInfo;\n                  result = mergeCallback(row, col, cell, rect, merge);\n                }\n              } else {\n                const cell = cells.getCell(row, col);\n                if (cell) {\n                  result = cellsINCallback(row, col, cell, rect);\n                }\n              }\n              x += width;\n              switch (result) {\n                case STYLE_BREAK_LOOP.RETURN:\n                case STYLE_BREAK_LOOP.ROW:\n                  return false;\n                default: return true;\n              }\n            })\n            .execute();\n          switch (result) {\n            case STYLE_BREAK_LOOP.RETURN:\n              return false;\n            default: return true;\n          }\n        })\n        .execute();\n    } else if (reverseCols) {\n      let y = startY;\n      xIteratorBuilder.getRowIterator()\n        .setBegin(sri)\n        .setEnd(eri)\n        .setLoop((row) => {\n          const height = rows.getHeight(row);\n          let result = null;\n          let x = startX;\n          newRow(row);\n          xIteratorBuilder.getColIterator()\n            .setBegin(eci)\n            .setEnd(sci)\n            .setLoop((col) => {\n              const merge = merges.getFirstIncludes(row, col);\n              const width = cols.getWidth(col);\n              x -= width;\n              const rect = new Rect({ x, y, width, height });\n              newCol(col);\n              loopINCallback(row, col, rect);\n              if (merge) {\n                const find = filter.find(i => i === merge);\n                if (PlainUtils.isUnDef(find)) {\n                  filter.push(merge);\n                  const mergeInfo = this.mergeInfo({\n                    view, merge,\n                  });\n                  const { rect, cell } = mergeInfo;\n                  result = mergeCallback(row, col, cell, rect, merge);\n                }\n              } else {\n                const cell = cells.getCell(row, col);\n                if (cell) {\n                  result = cellsINCallback(row, col, cell, rect);\n                }\n              }\n              switch (result) {\n                case STYLE_BREAK_LOOP.RETURN:\n                case STYLE_BREAK_LOOP.ROW:\n                  return false;\n                default: return true;\n              }\n            })\n            .execute();\n          y += height;\n          switch (result) {\n            case STYLE_BREAK_LOOP.RETURN:\n              return false;\n            default: return true;\n          }\n        })\n        .execute();\n    } else {\n      xIteratorBuilder.getRowIterator()\n        .setBegin(sri)\n        .setEnd(eri)\n        .setLoop((row) => {\n          const height = rows.getHeight(row);\n          let result = null;\n          let x = startX;\n          newRow(row);\n          xIteratorBuilder.getColIterator()\n            .setBegin(sci)\n            .setEnd(eci)\n            .setLoop((col) => {\n              const merge = merges.getFirstIncludes(row, col);\n              const width = cols.getWidth(col);\n              const rect = new Rect({ x, y, width, height });\n              newCol(col);\n              loopINCallback(row, col, rect);\n              if (merge) {\n                const find = filter.find(i => i === merge);\n                if (PlainUtils.isUnDef(find)) {\n                  filter.push(merge);\n                  const mergeInfo = this.mergeInfo({\n                    view, merge,\n                  });\n                  const { rect, cell } = mergeInfo;\n                  result = mergeCallback(row, col, cell, rect, merge);\n                }\n              } else {\n                const cell = cells.getCell(row, col);\n                if (cell) {\n                  result = cellsINCallback(row, col, cell, rect);\n                }\n              }\n              x += width;\n              switch (result) {\n                case STYLE_BREAK_LOOP.RETURN:\n                case STYLE_BREAK_LOOP.ROW:\n                  return false;\n                default: return true;\n              }\n            })\n            .execute();\n          y += height;\n          switch (result) {\n            case STYLE_BREAK_LOOP.RETURN:\n              return false;\n            default: return true;\n          }\n        })\n        .execute();\n    }\n  }\n\n  mergeInfo({\n    view, merge,\n  }) {\n    const rows = this.getRows();\n    const cols = this.getCols();\n    const cells = this.getCells();\n    // 计算坐标\n    const minSri = Math.min(view.sri, merge.sri);\n    const minSci = Math.min(view.sci, merge.sci);\n    let maxSri = Math.max(view.sri, merge.sri);\n    let maxSci = Math.max(view.sci, merge.sci);\n    maxSri -= 1;\n    maxSci -= 1;\n    let x = cols.sectionSumWidth(minSci, maxSci);\n    let y = rows.sectionSumHeight(minSri, maxSri);\n    x = view.sci > merge.sci ? x * -1 : x;\n    y = view.sri > merge.sri ? y * -1 : y;\n    // 计算尺寸\n    const height = rows.sectionSumHeight(merge.sri, merge.eri);\n    const width = cols.sectionSumWidth(merge.sci, merge.eci);\n    const cell = cells.getCellOrNew(merge.sri, merge.sci);\n    const rect = new Rect({ x, y, width, height });\n    return { rect, cell };\n  }\n\n}\n\nexport {\n  StyleCellsHelper, STYLE_BREAK_LOOP,\n};\n","import { BaseCellsHelper } from './BaseCellsHelper';\nimport { Rect } from '../../../canvas/Rect';\nimport { PlainUtils } from '../../../utils/PlainUtils';\nimport { RectRange } from '../tablebase/RectRange';\n\nconst TEXT_BREAK_LOOP = {\n  CONTINUE: 3,\n  ROW: 1,\n  RETURN: 2,\n};\n\nclass TextCellsHelper extends BaseCellsHelper {\n\n  constructor(table) {\n    super();\n    this.table = table;\n  }\n\n  getXTableAreaView() {\n    return this.table.xTableAreaView;\n  }\n\n  getRows() {\n    return this.table.rows;\n  }\n\n  getStyleTable() {\n    return this.table;\n  }\n\n  getCols() {\n    return this.table.cols;\n  }\n\n  getMerges() {\n    return this.table.merges;\n  }\n\n  getCells() {\n    return this.table.cells;\n  }\n\n  getXIteratorBuilder() {\n    return this.table.xIteratorBuilder;\n  }\n\n  getCellByViewRange({\n    reverseRows = false,\n    reverseCols = false,\n    startX = 0,\n    startY = 0,\n    newRow = () => {},\n    newCol = () => {},\n    view = new RectRange(0, 0, 0, 0, 0, 0),\n    cellsINCallback = () => {},\n    mergeCallback = () => {},\n  }) {\n    const rows = this.getRows();\n    const cols = this.getCols();\n    const cells = this.getCells();\n    const merges = this.getMerges();\n    const { table } = this;\n    const { xIteratorBuilder } = table;\n    const { sri, eri, sci, eci } = view;\n    const filter = [];\n    if (reverseRows && reverseCols) {\n      let y = startY;\n      xIteratorBuilder.getRowIterator()\n        .setBegin(eri)\n        .setEnd(sri)\n        .setLoop((row) => {\n          const height = rows.getHeight(row);\n          let result = null;\n          let x = startX;\n          y -= height;\n          newRow(row);\n          xIteratorBuilder.getColIterator()\n            .setBegin(eci)\n            .setEnd(sci)\n            .setLoop((col) => {\n              const merge = merges.getFirstIncludes(row, col);\n              const width = cols.getWidth(col);\n              newCol(col);\n              x -= width;\n              if (merge) {\n                const find = filter.find(i => i === merge);\n                if (PlainUtils.isUnDef(find)) {\n                  filter.push(merge);\n                  const mergeInfo = this.mergeInfo({\n                    view, merge,\n                  });\n                  const { rect, cell } = mergeInfo;\n                  result = mergeCallback(row, col, cell, rect, merge);\n                }\n              } else {\n                const cell = cells.getCell(row, col);\n                if (cell) {\n                  const cellsINInfo = this.cellsINInfo({\n                    x, y, width, height, row, col, cell,\n                  });\n                  const { rect, overflow } = cellsINInfo;\n                  result = cellsINCallback(row, col, cell, rect, overflow);\n                }\n              }\n              switch (result) {\n                case TEXT_BREAK_LOOP.RETURN:\n                case TEXT_BREAK_LOOP.ROW:\n                  return false;\n                default: return true;\n              }\n            })\n            .execute();\n          switch (result) {\n            case TEXT_BREAK_LOOP.RETURN:\n              return false;\n            default: return true;\n          }\n        })\n        .execute();\n    } else if (reverseRows) {\n      let y = startY;\n      xIteratorBuilder.getRowIterator()\n        .setBegin(eri)\n        .setEnd(sri)\n        .setLoop((row) => {\n          const height = rows.getHeight(row);\n          let result = null;\n          let x = startX;\n          newRow(row);\n          y -= height;\n          xIteratorBuilder.getColIterator()\n            .setBegin(sci)\n            .setEnd(eci)\n            .setLoop((col) => {\n              const merge = merges.getFirstIncludes(row, col);\n              const width = cols.getWidth(col);\n              newCol(col);\n              if (merge) {\n                const find = filter.find(i => i === merge);\n                if (PlainUtils.isUnDef(find)) {\n                  filter.push(merge);\n                  const mergeInfo = this.mergeInfo({\n                    view, merge,\n                  });\n                  const { rect, cell } = mergeInfo;\n                  result = mergeCallback(row, col, cell, rect, merge);\n                }\n              } else {\n                const cell = cells.getCell(row, col);\n                if (cell) {\n                  const cellsINInfo = this.cellsINInfo({\n                    x, y, width, height, row, col, cell,\n                  });\n                  const { rect, overflow } = cellsINInfo;\n                  result = cellsINCallback(row, col, cell, rect, overflow);\n                }\n              }\n              x += width;\n              switch (result) {\n                case TEXT_BREAK_LOOP.RETURN:\n                case TEXT_BREAK_LOOP.ROW:\n                  return false;\n                default: return true;\n              }\n            })\n            .execute();\n          switch (result) {\n            case TEXT_BREAK_LOOP.RETURN:\n              return false;\n            default: return true;\n          }\n        })\n        .execute();\n    } else if (reverseCols) {\n      let y = startY;\n      xIteratorBuilder.getRowIterator()\n        .setBegin(sri)\n        .setEnd(eri)\n        .setLoop((row) => {\n          const height = rows.getHeight(row);\n          let result = null;\n          let x = startX;\n          newRow(row);\n          xIteratorBuilder.getColIterator()\n            .setBegin(eci)\n            .setEnd(sci)\n            .setLoop((col) => {\n              const merge = merges.getFirstIncludes(row, col);\n              const width = cols.getWidth(col);\n              newCol(col);\n              x -= width;\n              if (merge) {\n                const find = filter.find(i => i === merge);\n                if (PlainUtils.isUnDef(find)) {\n                  filter.push(merge);\n                  const mergeInfo = this.mergeInfo({\n                    view, merge,\n                  });\n                  const { rect, cell } = mergeInfo;\n                  result = mergeCallback(row, col, cell, rect, merge);\n                }\n              } else {\n                const cell = cells.getCell(row, col);\n                if (cell) {\n                  const cellsINInfo = this.cellsINInfo({\n                    x, y, width, height, row, col, cell,\n                  });\n                  const { rect, overflow } = cellsINInfo;\n                  result = cellsINCallback(row, col, cell, rect, overflow);\n                }\n              }\n              switch (result) {\n                case TEXT_BREAK_LOOP.RETURN:\n                case TEXT_BREAK_LOOP.ROW:\n                  return false;\n                default: return true;\n              }\n            })\n            .execute();\n          y += height;\n          switch (result) {\n            case TEXT_BREAK_LOOP.RETURN:\n              return false;\n            default: return true;\n          }\n        })\n        .execute();\n    } else {\n      let y = startY;\n      xIteratorBuilder.getRowIterator()\n        .setBegin(sri)\n        .setEnd(eri)\n        .setLoop((row) => {\n          const height = rows.getHeight(row);\n          let result = null;\n          let x = startX;\n          newRow(row);\n          xIteratorBuilder.getColIterator()\n            .setBegin(sci)\n            .setEnd(eci)\n            .setLoop((col) => {\n              const merge = merges.getFirstIncludes(row, col);\n              const width = cols.getWidth(col);\n              newCol(col);\n              if (merge) {\n                const find = filter.find(i => i === merge);\n                if (PlainUtils.isUnDef(find)) {\n                  filter.push(merge);\n                  const mergeInfo = this.mergeInfo({\n                    view, merge,\n                  });\n                  const { rect, cell } = mergeInfo;\n                  result = mergeCallback(row, col, cell, rect, merge);\n                }\n              } else {\n                const cell = cells.getCell(row, col);\n                if (cell) {\n                  const cellsINInfo = this.cellsINInfo({\n                    x, y, width, height, row, col, cell,\n                  });\n                  const { rect, overflow } = cellsINInfo;\n                  result = cellsINCallback(row, col, cell, rect, overflow);\n                }\n              }\n              x += width;\n              switch (result) {\n                case TEXT_BREAK_LOOP.RETURN:\n                case TEXT_BREAK_LOOP.ROW:\n                  return false;\n                default: return true;\n              }\n            })\n            .execute();\n          y += height;\n          switch (result) {\n            case TEXT_BREAK_LOOP.RETURN:\n              return false;\n            default: return true;\n          }\n        })\n        .execute();\n    }\n  }\n\n  mergeInfo({\n    view, merge,\n  }) {\n    const rows = this.getRows();\n    const cols = this.getCols();\n    const cells = this.getCells();\n    // 计算坐标\n    const minSri = Math.min(view.sri, merge.sri);\n    const minSci = Math.min(view.sci, merge.sci);\n    let maxSri = Math.max(view.sri, merge.sri);\n    let maxSci = Math.max(view.sci, merge.sci);\n    maxSri -= 1;\n    maxSci -= 1;\n    let x = cols.sectionSumWidth(minSci, maxSci);\n    let y = rows.sectionSumHeight(minSri, maxSri);\n    x = view.sci > merge.sci ? x * -1 : x;\n    y = view.sri > merge.sri ? y * -1 : y;\n    // 计算尺寸\n    const height = rows.sectionSumHeight(merge.sri, merge.eri);\n    const width = cols.sectionSumWidth(merge.sci, merge.eci);\n    const cell = cells.getCell(merge.sri, merge.sci);\n    const rect = new Rect({ x, y, width, height });\n    return { rect, cell, merge };\n  }\n\n  cellsINInfo({\n    width, height, col, row, x, y, cell,\n  }) {\n    const rect = new Rect({ x, y, width, height });\n    const overflow = this.getCellOverFlow(row, col, rect, cell);\n    return { rect, overflow };\n  }\n\n}\n\nexport {\n  TextCellsHelper, TEXT_BREAK_LOOP,\n};\n","import { PlainUtils } from '../../utils/PlainUtils';\r\nimport { SCROLL_TYPE } from './tablebase/Scroll';\r\nimport { XTableAreaView } from './XTableAreaView';\r\n\r\n/**\r\n * XTableHistoryAreaView\r\n */\r\nclass XTableHistoryAreaView extends XTableAreaView {\r\n\r\n  /**\r\n   * XTableHistoryAreaView\r\n   * @param xTableScrollView\r\n   * @param rows\r\n   * @param cols\r\n   * @param scroll\r\n   */\r\n  constructor({\r\n    xTableScrollView,\r\n    rows,\r\n    cols,\r\n    scroll,\r\n  }) {\r\n    super({\r\n      xTableScrollView,\r\n      rows,\r\n      cols,\r\n      scroll,\r\n    });\r\n    this.lastScrollView = null;\r\n    this.enterView = null;\r\n    this.scrollEnterView = null;\r\n    this.leaveView = null;\r\n  }\r\n\r\n  /**\r\n   * 重置变量区\r\n   */\r\n  reset() {\r\n    super.reset();\r\n    this.scrollEnterView = null;\r\n    this.enterView = null;\r\n    this.leaveView = null;\r\n  }\r\n\r\n  /**\r\n   * 获取上一次滚动的视图区域\r\n   * @returns {null|RectRange}\r\n   */\r\n  getLastScrollView() {\r\n    if (PlainUtils.isNotUnDef(this.lastScrollView)) {\r\n      return this.lastScrollView.clone();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 获取滚动离开的视图区域\r\n   * @returns {null|RectRange}\r\n   */\r\n  getLeaveView() {\r\n    if (PlainUtils.isNotUnDef(this.leaveView)) {\r\n      return this.leaveView.clone();\r\n    }\r\n    const lastScrollView = this.getLastScrollView();\r\n    const scrollView = this.getScrollView();\r\n    const { cols, rows } = this;\r\n    if (lastScrollView) {\r\n      const [leaveView] = lastScrollView.coincideDifference(scrollView);\r\n      if (leaveView) {\r\n        leaveView.w = cols.rectRangeSumWidth(leaveView);\r\n        leaveView.h = rows.rectRangeSumHeight(leaveView);\r\n        this.leaveView = leaveView;\r\n        return leaveView.clone();\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 获取滚动进入的视图区域\r\n   * @returns {null|RectRange}\r\n   */\r\n  getEnterView() {\r\n    if (PlainUtils.isNotUnDef(this.enterView)) {\r\n      return this.enterView.clone();\r\n    }\r\n    const lastScrollView = this.getLastScrollView();\r\n    const scrollView = this.getScrollView();\r\n    const { cols, rows } = this;\r\n    if (lastScrollView) {\r\n      const [enterView] = scrollView.coincideDifference(lastScrollView);\r\n      if (enterView) {\r\n        enterView.w = cols.rectRangeSumWidth(enterView);\r\n        enterView.h = rows.rectRangeSumHeight(enterView);\r\n        this.enterView = enterView;\r\n        return enterView.clone();\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 获取滚动进入的视图区域\r\n   * @returns {null|RectRange}\r\n   */\r\n  getScrollEnterView() {\r\n    if (PlainUtils.isNotUnDef(this.scrollEnterView)) {\r\n      return this.scrollEnterView.clone();\r\n    }\r\n    const { cols, rows, scroll } = this;\r\n    const enterView = this.getEnterView();\r\n    if (enterView) {\r\n      switch (scroll.type) {\r\n        case SCROLL_TYPE.H_RIGHT: {\r\n          enterView.sci -= 1;\r\n          break;\r\n        }\r\n        case SCROLL_TYPE.V_BOTTOM: {\r\n          enterView.sri -= 1;\r\n          break;\r\n        }\r\n        case SCROLL_TYPE.H_LEFT: {\r\n          enterView.eci += 1;\r\n          break;\r\n        }\r\n        case SCROLL_TYPE.V_TOP: {\r\n          enterView.eri += 1;\r\n          break;\r\n        }\r\n      }\r\n      enterView.w = cols.rectRangeSumWidth(enterView);\r\n      enterView.h = rows.rectRangeSumHeight(enterView);\r\n      this.scrollEnterView = enterView;\r\n      return enterView.clone();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 清空上一次视图记录\r\n   */\r\n  undo() {\r\n    this.lastScrollView = null;\r\n  }\r\n\r\n  /**\r\n   * 记录上一次视图\r\n   */\r\n  record() {\r\n    this.lastScrollView = this.scrollView;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableHistoryAreaView,\r\n};\r\n","import { BaseCellsHelper } from './BaseCellsHelper';\nimport { RectRange } from '../tablebase/RectRange';\n\nclass OperateCellsHelper extends BaseCellsHelper {\n\n  constructor(table) {\n    super();\n    this.table = table;\n  }\n\n  getCellOrNewCellByViewRange({\n    rectRange = new RectRange(-1, -1, -1, -1),\n    callback = () => {},\n  }) {\n    const { table } = this;\n    const { xIteratorBuilder } = table;\n    const cells = this.getCells();\n    const { sri, eri, sci, eci } = rectRange;\n    xIteratorBuilder.getRowIterator()\n      .setBegin(sri)\n      .setEnd(eri)\n      .setLoop((i) => {\n        xIteratorBuilder.getColIterator()\n          .setBegin(sci)\n          .setEnd(eci)\n          .setLoop((j) => {\n            const cell = cells.getCellOrNew(i, j);\n            callback(i, j, cell);\n          })\n          .execute();\n      })\n      .execute();\n  }\n\n  getXTableAreaView() {\n    return this.table.xTableAreaView;\n  }\n\n  getRows() {\n    return this.table.rows;\n  }\n\n  getCells() {\n    return this.table.cells;\n  }\n\n  getCols() {\n    return this.table.cols;\n  }\n\n  getMerges() {\n    return this.table.merges;\n  }\n\n  getStyleTable() {\n    return this.table;\n  }\n\n  getXIteratorBuilder() {\n    return this.table.xIteratorBuilder;\n  }\n\n}\n\nexport {\n  OperateCellsHelper,\n};\n","class XFixedMeasure {\r\n\r\n  constructor({\r\n    rows,\r\n    cols,\r\n    fixedView,\r\n  }) {\r\n    this.fixedView = fixedView;\r\n    this.cols = cols;\r\n    this.rows = rows;\r\n  }\r\n\r\n  getHeight() {\r\n    return this.rows.rectRangeSumHeight(this.fixedView.getFixedView());\r\n  }\r\n\r\n  getWidth() {\r\n    return this.cols.rectRangeSumWidth(this.fixedView.getFixedView());\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XFixedMeasure,\r\n};\r\n","import { PlainUtils } from '../../../utils/PlainUtils';\r\n\r\nclass CellIcon {\r\n\r\n  constructor({\r\n    rows,\r\n    cols,\r\n    cells,\r\n  } = {}) {\r\n    this.cells = cells;\r\n    this.cols = cols;\r\n    this.data = new Array(rows.len * cols.len);\r\n  }\r\n\r\n  addOrNewCell(ri, ci, xIcon) {\r\n    const { cells } = this;\r\n    cells.getCellOrNew(ri, ci);\r\n    this.add(ri, ci, xIcon);\r\n  }\r\n\r\n  add(ri, ci, xIcon) {\r\n    const { data, cells } = this;\r\n    const cell = cells.getCell(ri, ci);\r\n    if (cell) {\r\n      const xIcons = this.getIcon(ri, ci);\r\n      if (xIcons) {\r\n        xIcons.push(xIcon);\r\n      } else {\r\n        const offset = this.getOffset(ri, ci);\r\n        data[offset] = [xIcon];\r\n      }\r\n    }\r\n  }\r\n\r\n  getIcon(ri, ci) {\r\n    const { data } = this;\r\n    const offset = this.getOffset(ri, ci);\r\n    return data[offset];\r\n  }\r\n\r\n  getOffset(ri, ci) {\r\n    const { cols } = this;\r\n    const { len } = cols;\r\n    return (ri * len) + ci;\r\n  }\r\n\r\n  remove(ri, ci, xIcon = null) {\r\n    const { data } = this;\r\n    let xIcons = this.getIcon(ri, ci);\r\n    if (xIcons) {\r\n      const offset = this.getOffset(ri, ci);\r\n      if (xIcon) {\r\n        xIcons = xIcons.filter(item => item !== xIcon);\r\n        data[offset] = xIcons;\r\n      } else {\r\n        data[offset] = PlainUtils.Undef;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  CellIcon,\r\n};\r\n","import { CellIcon } from './CellIcon';\r\n\r\nclass FixedCellIcon extends CellIcon {\r\n\r\n}\r\n\r\nexport {\r\n  FixedCellIcon,\r\n};\r\n","import { CellIcon } from './CellIcon';\r\n\r\nclass StaticCellIcon extends CellIcon {\r\n\r\n}\r\n\r\nexport {\r\n  StaticCellIcon,\r\n};\r\n","class XLineIteratorFilter {\r\n\r\n  constructor({\r\n    logic, stack,\r\n  }) {\r\n    this.stack = stack;\r\n    this.logic = logic;\r\n    this.active = null;\r\n  }\r\n\r\n  getActive() {\r\n    return this.active;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { logic, stack } = this;\r\n    let result = XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    let active = null;\r\n    switch (logic) {\r\n      case XLineIteratorFilter.FILTER_LOGIC.AND: {\r\n        result = XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n        for (let i = 0; i < stack.length; i += 1) {\r\n          const filter = stack[i];\r\n          const returnValue = filter.run({ row, col });\r\n          if (returnValue !== XLineIteratorFilter.RETURN_TYPE.EXEC) {\r\n            result = XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n            active = filter;\r\n            break;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      case XLineIteratorFilter.FILTER_LOGIC.OR: {\r\n        result = XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n        for (let i = 0; i < stack.length; i += 1) {\r\n          const filter = stack[i];\r\n          const returnValue = filter.run({ row, col });\r\n          if (returnValue === XLineIteratorFilter.RETURN_TYPE.EXEC) {\r\n            result = XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n            active = filter;\r\n            break;\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    this.active = active;\r\n    return result;\r\n  }\r\n\r\n}\r\nXLineIteratorFilter.RETURN_TYPE = {\r\n  EXEC: 1,\r\n  JUMP: 2,\r\n};\r\nXLineIteratorFilter.FILTER_LOGIC = {\r\n  AND: 1,\r\n  OR: 2,\r\n};\r\nXLineIteratorFilter.EMPTY = new XLineIteratorFilter({\r\n  logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n  stack: [],\r\n});\r\n\r\nexport {\r\n  XLineIteratorFilter,\r\n};\r\n","import { XLineIteratorFilter } from './XLineIteratorFilter';\nimport { RectRange } from '../tablebase/RectRange';\n\nclass XLineIteratorLoop {\n\n  constructor({\n    foldOnOff = true,\n    items = [],\n    bx = 0,\n    by = 0,\n    table,\n    filter = XLineIteratorFilter.EMPTY,\n    view = RectRange.EMPTY,\n  }) {\n    this.foldOnOff = foldOnOff;\n    this.bx = bx;\n    this.by = by;\n    this.items = items;\n    this.table = table;\n    this.filter = filter;\n    this.view = view;\n  }\n\n  run() {\n    const { view, table } = this;\n    const { rows, cols, xIteratorBuilder } = table;\n    const { filter, foldOnOff } = this;\n    const { bx, by } = this;\n    const { sri, eri, sci, eci } = view;\n    let y = by;\n    let firstRow = true;\n    let lastRow = false;\n    xIteratorBuilder.getRowIterator()\n      .setBegin(sri)\n      .setEnd(eri)\n      .setLoop((row) => {\n        const height = rows.getHeight(row);\n        const result = filter.run({ row });\n        switch (result) {\n          case XLineIteratorFilter.RETURN_TYPE.EXEC: {\n            this.runNewRow(row, y);\n            lastRow = row === eri;\n            let x = bx;\n            xIteratorBuilder.getColIterator()\n              .setBegin(sci)\n              .setEnd(eci)\n              .setLoop((col) => {\n                const width = cols.getWidth(col);\n                if (firstRow) {\n                  this.runNewCol(col, x);\n                }\n                this.runFilter(row, col, x, y);\n                if (lastRow) {\n                  this.runEndCol(col);\n                }\n                x += width;\n              })\n              .execute();\n            firstRow = false;\n            this.runEndRow(row);\n            break;\n          }\n          case XLineIteratorFilter.RETURN_TYPE.JUMP: {\n            break;\n          }\n        }\n        y += height;\n      })\n      .foldOnOff(foldOnOff)\n      .execute();\n    this.runComplete();\n  }\n\n  runNewRow(row, y) {\n    const { items } = this;\n    for (let idx = 0; idx < items.length; idx++) {\n      const item = items[idx];\n      item.newRow({ row, y });\n    }\n  }\n\n  runNewCol(col, x) {\n    const { items } = this;\n    for (let idx = 0; idx < items.length; idx++) {\n      const item = items[idx];\n      item.newCol({ col, x });\n    }\n  }\n\n  runEndRow(row) {\n    const { items } = this;\n    for (let idx = 0; idx < items.length; idx++) {\n      const item = items[idx];\n      item.endRow({ row });\n    }\n  }\n\n  runEndCol(col) {\n    const { items } = this;\n    for (let idx = 0; idx < items.length; idx++) {\n      const item = items[idx];\n      item.endCol({ col });\n    }\n  }\n\n  runFilter(row, col, x, y) {\n    const { items } = this;\n    for (let idx = 0; idx < items.length; idx++) {\n      const item = items[idx];\n      const result = item.filter.run({ row, col });\n      switch (result) {\n        case XLineIteratorFilter.RETURN_TYPE.EXEC:\n          item.exec({ row, col, x, y });\n          break;\n        case XLineIteratorFilter.RETURN_TYPE.JUMP:\n          item.jump({ row, col, x, y });\n          break;\n      }\n    }\n  }\n\n  runComplete() {\n    const { items } = this;\n    for (let idx = 0; idx < items.length; idx++) {\n      const item = items[idx];\n      item.complete();\n    }\n  }\n\n}\n\nexport {\n  XLineIteratorLoop,\n};\n","import { PlainUtils } from '../../../utils/PlainUtils';\r\nimport { XLineIteratorFilter } from './XLineIteratorFilter';\r\n\r\nclass XLineIteratorItem {\r\n\r\n  constructor({\r\n    newRow = PlainUtils.noop,\r\n    endRow = PlainUtils.noop,\r\n    filter = XLineIteratorFilter.EMPTY,\r\n    newCol = PlainUtils.noop,\r\n    endCol = PlainUtils.noop,\r\n    jump = PlainUtils.noop,\r\n    exec = PlainUtils.noop,\r\n    complete = PlainUtils.noop,\r\n  } = {}) {\r\n    this.newRow = newRow;\r\n    this.endRow = endRow;\r\n    this.filter = filter;\r\n    this.newCol = newCol;\r\n    this.endCol = endCol;\r\n    this.jump = jump;\r\n    this.exec = exec;\r\n    this.complete = complete;\r\n  }\r\n\r\n  getFilter() {\r\n    return this.filter;\r\n  }\r\n\r\n}\r\n\r\nXLineIteratorItem.EMPTY = new XLineIteratorItem();\r\n\r\nexport {\r\n  XLineIteratorItem,\r\n};\r\n","import { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass BBorderHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    const { bottom } = cell.borderAttr;\r\n    return bottom.display\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  BBorderHide,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass MergeBNullEdge {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { merges } = table;\r\n    const merge = merges.getFirstIncludes(row, col);\r\n    if (merge) {\r\n      return merge.eri === row\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  MergeBNullEdge,\r\n};\r\n","import { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass RBorderHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    const { right } = cell.borderAttr;\r\n    return right.display\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RBorderHide,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass MergeRNullEdge {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { merges } = table;\r\n    const merge = merges.getFirstIncludes(row, col);\r\n    if (merge) {\r\n      return merge.eci === col\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  MergeRNullEdge,\r\n};\r\n","\r\nclass CellOutRange {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  CellOutRange,\r\n};\r\n","import { CellOutRange } from './CellOutRange';\nimport { XLineIteratorFilter } from '../../XLineIteratorFilter';\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\n\nclass RCellOutRange extends CellOutRange {\n\n  run({\n    row, col,\n  }) {\n    return this.master({ row, col }) && this.right({ row, col }) && this.left({ row, col })\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\n  }\n\n  master({\n    row, col,\n  }) {\n    const { table } = this;\n    const { cells, cols } = table;\n    const next = cells.getCell(row, col + 1);\n    const master = cells.getCell(row, col);\n\n    // 是否是空单元格\n    if (PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text)) {\n      return true;\n    }\n    // 文字属性检查\n    const { fontAttr } = master;\n    const { direction } = fontAttr;\n    // 是否旋转文本\n    if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\n      const { angle } = fontAttr;\n      if (table.isAngleBarCell(row, col)) {\n        return angle < 0;\n      }\n      if (angle === 90 || angle === -90) {\n        return true;\n      }\n    } else {\n      const { textWrap } = fontAttr;\n      if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\n        return true;\n      }\n    }\n    // 对其方式检查\n    const { align } = fontAttr;\n    if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\n      return true;\n    }\n    // 文本是否越界\n    const width = table.getCellContentBoundOutWidth(row, col);\n    const maxWidth = cols.getWidth(col);\n    if (width > maxWidth) {\n      // 只有next单元格是空时\n      // 才允许不绘制边框\n      if (direction === BaseFont.TEXT_DIRECTION.ANGLE\n        || PlainUtils.isUnDef(next) || PlainUtils.isBlank(next.text)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  left({\n    row, col,\n  }) {\n    const { table } = this;\n    const { cells, cols, merges, xIteratorBuilder } = table;\n    const next = cells.getCell(row, col + 1);\n    const master = cells.getCell(row, col);\n    let find = true;\n    let leftWidth = cols.getWidth(col - 1) + cols.getWidth(col);\n\n    // 左方向越界检查\n    if (table.hasAngleCell(row)) {\n      xIteratorBuilder.getColIterator()\n        .setBegin(col - 1)\n        .setEnd(0)\n        .setLoop((i) => {\n          // 检查空单元格\n          const cell = cells.getCell(row, i);\n          if (PlainUtils.isUnDef(cell)) {\n            return true;\n          }\n          // 检查合并单元格\n          const merge = merges.getFirstIncludes(row, i);\n          if (PlainUtils.isNotUnDef(merge)) {\n            return true;\n          }\n          // 检查空文本单元格\n          const { text } = cell;\n          if (PlainUtils.isBlank(text)) {\n            return true;\n          }\n          // 检查文本类型\n          const { fontAttr } = cell;\n          const { direction } = fontAttr;\n          // 是否旋转文本\n          if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\n            const { angle } = fontAttr;\n            // 忽略反方向旋转的angleBar单元格\n            if (table.isAngleBarCell(row, i)) {\n              if (angle < 0) {\n                return true;\n              }\n            } else {\n              // 旋转方向忽略正负90度\n              if (angle === 90 || angle === -90) {\n                return true;\n              }\n              // 检查对其方式\n              const { align } = fontAttr;\n              if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\n                return true;\n              }\n            }\n          } else {\n            // 检查裁剪类型\n            const { textWrap } = fontAttr;\n            if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\n              return true;\n            }\n            // 检查对其方式\n            const { align } = fontAttr;\n            if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\n              return true;\n            }\n          }\n          // 文本是否越界\n          const width = table.getCellContentBoundOutWidth(row, i);\n          if (width > leftWidth) {\n            // 只有master单元格和\n            // next单元格都是空时\n            // 才允许不绘制边框\n            const masterBlank = PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text);\n            const nextBlank = PlainUtils.isUnDef(next) || PlainUtils.isBlank(next.text);\n            if (direction === BaseFont.TEXT_DIRECTION.ANGLE\n              || (masterBlank && nextBlank)) {\n              find = false;\n            }\n          }\n          return false;\n        })\n        .setNext((i) => {\n          leftWidth += cols.getWidth(i);\n        })\n        .execute();\n    } else {\n      xIteratorBuilder.getColIterator()\n        .setBegin(col - 1)\n        .setEnd(0)\n        .setLoop((i) => {\n          // 检查空单元格\n          const cell = cells.getCell(row, i);\n          if (PlainUtils.isUnDef(cell)) {\n            return true;\n          }\n          // 检查合并单元格\n          const merge = merges.getFirstIncludes(row, i);\n          if (PlainUtils.isNotUnDef(merge)) {\n            return true;\n          }\n          // 检查空文本单元格\n          const { text } = cell;\n          if (PlainUtils.isBlank(text)) {\n            return true;\n          }\n          // 检查文本类型\n          const { fontAttr } = cell;\n          const { textWrap } = fontAttr;\n          // 检查裁剪类型\n          if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\n            return false;\n          }\n          // 检查对其方式\n          const { align } = fontAttr;\n          if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\n            return false;\n          }\n          // 文本是否越界\n          const width = table.getCellContentBoundOutWidth(row, i);\n          // 文本是否越界\n          if (width > leftWidth) {\n            // 只有master单元格和\n            // next单元格都是空时\n            // 才允许不绘制边框\n            const masterBlank = PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text);\n            const nextBlank = PlainUtils.isUnDef(next) || PlainUtils.isBlank(next.text);\n            if (masterBlank && nextBlank) {\n              find = false;\n            }\n          }\n          return false;\n        })\n        .setNext((i) => {\n          leftWidth += cols.getWidth(i);\n        })\n        .execute();\n    }\n    return find;\n  }\n\n  right({\n    row, col,\n  }) {\n    const { table } = this;\n    const { cells, cols, merges, xIteratorBuilder } = table;\n    const { len } = cols;\n    const master = cells.getCell(row, col);\n    let find = true;\n    let rightWidth = cols.getWidth(col + 1);\n\n    // 右方向越界检查\n    if (table.hasAngleCell(row)) {\n      xIteratorBuilder.getColIterator()\n        .setBegin(col + 1)\n        .setEnd(len)\n        .setLoop((j) => {\n          // 空单元格检查\n          const cell = cells.getCell(row, j);\n          if (PlainUtils.isUnDef(cell)) {\n            return true;\n          }\n          // 合并单元格检查\n          const merge = merges.getFirstIncludes(row, j);\n          if (PlainUtils.isNotUnDef(merge)) {\n            return true;\n          }\n          // 空文本单检查\n          const { text } = cell;\n          if (PlainUtils.isBlank(text)) {\n            return true;\n          }\n          // 文本属性检查\n          const { fontAttr } = cell;\n          const { direction } = fontAttr;\n          // 文本旋转方向\n          if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\n            const { angle } = fontAttr;\n            // 忽略反方向旋转的angleBar单元格\n            if (table.isAngleBarCell(row, j)) {\n              if (angle > 0) {\n                return true;\n              }\n            } else {\n              // 旋转方向忽略正负90度\n              if (angle === 90 || angle === -90) {\n                return true;\n              }\n              // 检查对其方式\n              const { align } = fontAttr;\n              if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\n                return true;\n              }\n            }\n          } else {\n            // 检查文本裁剪类型\n            const { textWrap } = fontAttr;\n            if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\n              return true;\n            }\n            // 检查文本对齐方式\n            const { align } = fontAttr;\n            if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\n              return true;\n            }\n          }\n          // 检查文本是否越界\n          const width = table.getCellContentBoundOutWidth(row, j);\n          if (width > rightWidth) {\n            // 只有master单元格为\n            // 空时才允许不绘制边框\n            if (PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text)) {\n              find = false;\n              return false;\n            }\n          }\n          return true;\n        })\n        .setNext((j) => {\n          rightWidth += cols.getWidth(j);\n        })\n        .execute();\n    } else {\n      xIteratorBuilder.getColIterator()\n        .setBegin(col + 1)\n        .setEnd(len)\n        .setLoop((j) => {\n          // 空单元格检查\n          const cell = cells.getCell(row, j);\n          if (PlainUtils.isUnDef(cell)) {\n            return true;\n          }\n          // 合并单元格检查\n          const merge = merges.getFirstIncludes(row, j);\n          if (PlainUtils.isNotUnDef(merge)) {\n            return true;\n          }\n          // 空文本单检查\n          const { text } = cell;\n          if (PlainUtils.isBlank(text)) {\n            return true;\n          }\n          // 文本属性检查\n          const { fontAttr } = cell;\n          const { textWrap } = fontAttr;\n          // 裁剪类型检查\n          if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\n            return false;\n          }\n          // 文本对齐方式检查\n          const { align } = fontAttr;\n          if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\n            return false;\n          }\n          // 文本越界检查\n          const width = table.getCellContentBoundOutWidth(row, j);\n          if (width > rightWidth) {\n            // 只有master单元格为\n            // 空时才允许不绘制边框\n            if (PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text)) {\n              find = false;\n            }\n          }\n          return false;\n        })\n        .setNext((j) => {\n          rightWidth += cols.getWidth(j);\n        })\n        .execute();\n    }\n    return find;\n  }\n\n\n}\n\nexport {\n  RCellOutRange,\n};\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass AngleBarHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    return table.isAngleBarCell(row, col)\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBarHide,\r\n};\r\n","import { XLineIteratorFilter } from '../XLineIteratorFilter';\r\nimport { XLineIteratorItem } from '../XLineIteratorItem';\r\nimport { BBorderHide } from '../linefilters/borderhidden/BBorderHide';\r\nimport { MergeBNullEdge } from '../linefilters/mergenulledge/MergeBNullEdge';\r\nimport { RBorderHide } from '../linefilters/borderhidden/RBorderHide';\r\nimport { MergeRNullEdge } from '../linefilters/mergenulledge/MergeRNullEdge';\r\nimport { RCellOutRange } from '../linefilters/celloutrange/RCellOutRange';\r\nimport { AngleBarHide } from '../linefilters/anglebarhidden/AngleBarHide';\r\n\r\nclass LineGrid {\r\n\r\n  constructor({\r\n    table, getWidth, getHeight, bx = 0, by = 0,\r\n  }) {\r\n    this.table = table;\r\n    this.getHeight = getHeight;\r\n    this.getWidth = getWidth;\r\n    this.bx = bx;\r\n    this.by = by;\r\n    this.bLine = [];\r\n    this.rLine = [];\r\n  }\r\n\r\n  getBItem() {\r\n    const { table, bx, by, getWidth, getHeight } = this;\r\n    const bRow = {};\r\n    const bLine = [];\r\n    return new XLineIteratorItem({\r\n      newRow: ({ row, y }) => {\r\n        const height = getHeight(row);\r\n        bRow.sx = bx;\r\n        bRow.sy = by + y + height;\r\n        bRow.ex = bRow.sx;\r\n        bRow.ey = bRow.sy;\r\n        bRow.breakpoint = false;\r\n      },\r\n      endRow: () => {\r\n        if (bRow.breakpoint) {\r\n          const { sx, sy, ex, ey } = bRow;\r\n          bLine.push({ sx, sy, ex, ey });\r\n        }\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new BBorderHide(table),\r\n          new MergeBNullEdge(table),\r\n          new AngleBarHide(table),\r\n        ],\r\n      }),\r\n      exec: ({ col }) => {\r\n        const width = getWidth(col);\r\n        bRow.breakpoint = true;\r\n        bRow.ex += width;\r\n      },\r\n      jump: ({ col }) => {\r\n        if (bRow.breakpoint) {\r\n          const { sx, sy, ex, ey } = bRow;\r\n          bRow.breakpoint = false;\r\n          bLine.push({ sx, sy, ex, ey });\r\n        }\r\n        const width = getWidth(col);\r\n        bRow.sx = bRow.ex + width;\r\n        bRow.ex = bRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.bLine = bLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getRItem() {\r\n    const { table, bx, by, getWidth, getHeight } = this;\r\n    const rCols = [];\r\n    const rLine = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const width = getWidth(col);\r\n        const sx = bx + x + width;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const breakpoint = false;\r\n        rCols[col] = { sx, sy, ex, ey, breakpoint };\r\n      },\r\n      endCol: ({ col }) => {\r\n        const item = rCols[col];\r\n        if (item.breakpoint) {\r\n          const { sx, sy, ex, ey } = item;\r\n          rLine.push({ sx, sy, ex, ey });\r\n        }\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new RBorderHide(table),\r\n          new MergeRNullEdge(table),\r\n          new AngleBarHide(table),\r\n          new RCellOutRange(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const item = rCols[col];\r\n        const height = getHeight(row);\r\n        item.breakpoint = true;\r\n        item.ey += height;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const item = rCols[col];\r\n        const height = getHeight(row);\r\n        if (item.breakpoint) {\r\n          const { sx, sy, ex, ey } = item;\r\n          item.breakpoint = false;\r\n          rLine.push({ sx, sy, ex, ey });\r\n        }\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        this.rLine = rLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    return [\r\n      this.getBItem(),\r\n      this.getRItem(),\r\n    ];\r\n  }\r\n\r\n  getResult() {\r\n    const { bLine, rLine } = this;\r\n    return {\r\n      bLine, rLine,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LineGrid,\r\n};\r\n","class XLineOptimizeJoin {\n\n  constructor(xIteratorBuilder) {\n    this.xIteratorBuilder = xIteratorBuilder;\n  }\n\n  htJoin(line) {\n    for (let i = 1; i < line.length;) {\n      const item = line[i];\n      const last = line[i - 1];\n      const ck1 = item.borderAttr.top.equal(last.borderAttr.top);\n      const ck2 = item.col - last.col === 1;\n      const ck3 = item.row === last.row;\n      if (ck1 && ck2 && ck3) {\n        last.ex = item.ex;\n        last.col = item.col;\n        line.splice(i, 1);\n      } else {\n        i += 1;\n      }\n    }\n    return line;\n  }\n\n  hbJoin(line) {\n    for (let i = 1; i < line.length;) {\n      const item = line[i];\n      const last = line[i - 1];\n      const ck1 = item.borderAttr.bottom.equal(last.borderAttr.bottom);\n      const ck2 = item.col - last.col === 1;\n      const ck3 = item.row === last.row;\n      if (ck1 && ck2 && ck3) {\n        last.ex = item.ex;\n        last.col = item.col;\n        line.splice(i, 1);\n      } else {\n        i += 1;\n      }\n    }\n    return line;\n  }\n\n  vlJoin(line) {\n    const { xIteratorBuilder } = this;\n    for (let i = 1; i < line.length;) {\n      const item = line[i];\n      const last = line[i - 1];\n      const nextRow = xIteratorBuilder.getRowIterator()\n        .setBegin(last.row)\n        .setEnd(item.row)\n        .nextRow();\n      const ck1 = item.borderAttr.left.equal(last.borderAttr.left);\n      const ck2 = item.row === nextRow;\n      const ck3 = item.col === last.col;\n      if (ck1 && ck2 && ck3) {\n        last.ey = item.ey;\n        last.row = item.row;\n        line.splice(i, 1);\n      } else {\n        i += 1;\n      }\n    }\n    return line;\n  }\n\n  vrJoin(line) {\n    const { xIteratorBuilder } = this;\n    for (let i = 1; i < line.length;) {\n      const item = line[i];\n      const last = line[i - 1];\n      const nextRow = xIteratorBuilder.getRowIterator()\n        .setBegin(last.row)\n        .setEnd(item.row)\n        .nextRow();\n      const ck1 = item.borderAttr.right.equal(last.borderAttr.right);\n      const ck2 = item.row === nextRow;\n      const ck3 = item.col === last.col;\n      if (ck1 && ck2 && ck3) {\n        last.ey = item.ey;\n        last.row = item.row;\n        line.splice(i, 1);\n      } else {\n        i += 1;\n      }\n    }\n    return line;\n  }\n\n}\n\nexport {\n  XLineOptimizeJoin,\n};\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass BBorderShow {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const { bottom } = cell.borderAttr;\r\n    return bottom.display\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  BBorderShow,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass BBorderPriority {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const next = cells.getCell(row + 1, col);\r\n    const cell = cells.getCell(row, col);\r\n    // 对面的单元格不存在\r\n    if (PlainUtils.isUnDef(next)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    // 对面的单元格不需要显示\r\n    const { top } = next.borderAttr;\r\n    if (top.display) {\r\n      const { bottom } = cell.borderAttr;\r\n      const result = bottom.priority(top);\r\n      return result === 1\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    // 对面单元格不存在则显示\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  BBorderPriority,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass TBorderShow {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const { top } = cell.borderAttr;\r\n    return top.display\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  TBorderShow,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass TBorderPriority {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const next = cells.getCell(row - 1, col);\r\n    const cell = cells.getCell(row, col);\r\n    // 对面的单元格不存在\r\n    if (PlainUtils.isUnDef(next)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    // 对面的单元格不需要显示\r\n    const { bottom } = next.borderAttr;\r\n    if (bottom.display) {\r\n      const { top } = cell.borderAttr;\r\n      const result = top.priority(bottom);\r\n      return result === 1 || result === 0\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    // 对面单元格不存在则显示\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  TBorderPriority,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass MergeTNullEdge {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { merges } = table;\r\n    const merge = merges.getFirstIncludes(row, col);\r\n    if (merge) {\r\n      return merge.sri === row\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  MergeTNullEdge,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass RBorderShow {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const { right } = cell.borderAttr;\r\n    return right.display\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RBorderShow,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass RBorderPriority {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const next = cells.getCell(row, col + 1);\r\n    const cell = cells.getCell(row, col);\r\n    // 对面的单元格不存在\r\n    if (PlainUtils.isUnDef(next)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    // 对面的单元格不需要显示\r\n    const { left } = next.borderAttr;\r\n    if (left.display) {\r\n      const { right } = cell.borderAttr;\r\n      const result = right.priority(left);\r\n      return result === 1\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    // 对面单元格不存在则显示\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RBorderPriority,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass LBorderPriority {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const next = cells.getCell(row, col - 1);\r\n    const cell = cells.getCell(row, col);\r\n    // 对面的单元格不存在\r\n    if (PlainUtils.isUnDef(next)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    // 对面的单元格不需要显示\r\n    const { right } = next.borderAttr;\r\n    if (right.display) {\r\n      const { left } = cell.borderAttr;\r\n      const result = left.priority(right);\r\n      return result === 1 || result === 0\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    // 对面单元格不存在则显示\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LBorderPriority,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\r\n\r\nclass LBorderShow {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    if (PlainUtils.isUnDef(cell)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const { left } = cell.borderAttr;\r\n    return left.display\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LBorderShow,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass MergeLNullEdge {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { merges } = table;\r\n    const merge = merges.getFirstIncludes(row, col);\r\n    if (merge) {\r\n      return merge.sci === col\r\n        ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n        : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  MergeLNullEdge,\r\n};\r\n","import { CellOutRange } from './CellOutRange';\nimport { XLineIteratorFilter } from '../../XLineIteratorFilter';\nimport { PlainUtils } from '../../../../../utils/PlainUtils';\nimport { BaseFont } from '../../../../../canvas/font/BaseFont';\n\nclass LCellOutRange extends CellOutRange {\n\n  run({\n    row, col,\n  }) {\n    return this.master({ row, col }) && this.right({ row, col }) && this.left({ row, col })\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\n  }\n\n  master({\n    row, col,\n  }) {\n    const { table } = this;\n    const { cells, cols } = table;\n    const last = cells.getCell(row, col - 1);\n    const master = cells.getCell(row, col);\n\n    // 是否是空单元格\n    if (PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text)) {\n      return true;\n    }\n    // 文字属性检查\n    const { fontAttr } = master;\n    const { direction } = fontAttr;\n    // 是否旋转文本\n    if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\n      const { angle } = fontAttr;\n      if (table.isAngleBarCell(row, col)) {\n        return angle > 0;\n      }\n      if (angle === 90 || angle === -90) {\n        return true;\n      }\n    } else {\n      const { textWrap } = fontAttr;\n      if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\n        return true;\n      }\n    }\n    // 对其方式检查\n    const { align } = fontAttr;\n    if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\n      return true;\n    }\n    // 文本是否越界\n    const width = table.getCellContentBoundOutWidth(row, col);\n    const maxWidth = cols.getWidth(col);\n    if (width > maxWidth) {\n      // 只有next单元格是空时\n      // 才允许不绘制边框\n      if (PlainUtils.isUnDef(last) || PlainUtils.isBlank(last.text)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  left({\n    row, col,\n  }) {\n    const { table } = this;\n    const { cells, cols, merges, xIteratorBuilder } = table;\n    const master = cells.getCell(row, col);\n    let find = true;\n    let leftWidth = cols.getWidth(col - 1);\n\n    // 左方向越界检查\n    if (table.hasAngleCell(row)) {\n      xIteratorBuilder.getColIterator()\n        .setBegin(col - 1)\n        .setEnd(0)\n        .setLoop((i) => {\n          // 是否是空单元格\n          const cell = cells.getCell(row, i);\n          if (PlainUtils.isUnDef(cell)) {\n            return true;\n          }\n          // 是否是合并单元格\n          const merge = merges.getFirstIncludes(row, i);\n          if (PlainUtils.isNotUnDef(merge)) {\n            return true;\n          }\n          // 是否是空文本\n          const { text } = cell;\n          if (PlainUtils.isBlank(text)) {\n            return true;\n          }\n          // 检查文本属性\n          const { fontAttr } = cell;\n          const { direction } = fontAttr;\n          // 是否旋转文本\n          if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\n            const { angle } = fontAttr;\n            // 忽略反方向旋转的angleBar单元格\n            if (table.isAngleBarCell(row, i)) {\n              if (angle < 0) {\n                return true;\n              }\n            } else {\n              // 旋转方向忽略正负90度\n              if (angle === 90 || angle === -90) {\n                return true;\n              }\n              // 检查对其方式\n              const { align } = fontAttr;\n              if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\n                return true;\n              }\n            }\n          } else {\n            // 检查裁剪类型\n            const { textWrap } = fontAttr;\n            if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\n              return true;\n            }\n            // 检查对其方式\n            const { align } = fontAttr;\n            if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\n              return true;\n            }\n          }\n          // 文本是否越界\n          const width = table.getCellContentBoundOutWidth(row, i);\n          if (width > leftWidth) {\n            // 只有master单元格为\n            // 空时才允许不绘制边框\n            if (PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text)) {\n              find = false;\n              return false;\n            }\n          }\n          return true;\n        })\n        .setNext((i) => {\n          leftWidth += cols.getWidth(i);\n        })\n        .execute();\n    } else {\n      xIteratorBuilder.getColIterator()\n        .setBegin(col - 1)\n        .setEnd(0)\n        .setLoop((i) => {\n          // 是否是空单元格\n          const cell = cells.getCell(row, i);\n          if (PlainUtils.isUnDef(cell)) {\n            return true;\n          }\n          // 是否是合并单元格\n          const merge = merges.getFirstIncludes(row, i);\n          if (PlainUtils.isNotUnDef(merge)) {\n            return true;\n          }\n          // 是否是空文本\n          const { text } = cell;\n          if (PlainUtils.isBlank(text)) {\n            return true;\n          }\n          // 检查文本类型\n          const { fontAttr } = cell;\n          const { textWrap } = fontAttr;\n          // 检查裁剪类型\n          if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\n            return false;\n          }\n          // 检查对其方式\n          const { align } = fontAttr;\n          if (align !== BaseFont.ALIGN.left && align !== BaseFont.ALIGN.center) {\n            return false;\n          }\n          // 文本是否越界\n          const width = table.getCellContentBoundOutWidth(row, i);\n          if (width > leftWidth) {\n            // 只有master单元格为\n            // 空时才允许不绘制边框\n            if (PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text)) {\n              find = false;\n            }\n          }\n          return false;\n        })\n        .setNext((i) => {\n          leftWidth += cols.getWidth(i);\n        })\n        .execute();\n    }\n    return find;\n  }\n\n  right({\n    row, col,\n  }) {\n    const { table } = this;\n    const { cells, cols, merges, xIteratorBuilder } = table;\n    const { len } = cols;\n    const last = cells.getCell(row, col - 1);\n    const master = cells.getCell(row, col);\n    let find = true;\n    let rightWidth = cols.getWidth(col + 1) + cols.getWidth(col);\n\n    // 右方向越界检查\n    if (table.hasAngleCell(row)) {\n      xIteratorBuilder.getColIterator()\n        .setBegin(col + 1)\n        .setEnd(len)\n        .setLoop((j) => {\n          // 空单元格检查\n          const cell = cells.getCell(row, j);\n          if (PlainUtils.isUnDef(cell)) {\n            return true;\n          }\n          // 合并单元格检查\n          const merge = merges.getFirstIncludes(row, j);\n          if (PlainUtils.isNotUnDef(merge)) {\n            return true;\n          }\n          // 空文本单检查\n          const { text } = cell;\n          if (PlainUtils.isBlank(text)) {\n            return true;\n          }\n          // 文本属性检查\n          const { fontAttr } = cell;\n          const { direction } = fontAttr;\n          // 文本旋转方向\n          if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\n            const { angle } = fontAttr;\n            // 忽略反方向旋转的angleBar单元格\n            if (table.isAngleBarCell(row, j)) {\n              if (angle > 0) {\n                return true;\n              }\n            } else {\n              // 旋转方向忽略正负90度\n              if (angle === 90 || angle === -90) {\n                return true;\n              }\n              // 检查对其方式\n              const { align } = fontAttr;\n              if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\n                return true;\n              }\n            }\n          } else {\n            // 检查文本裁剪类型\n            const { textWrap } = fontAttr;\n            if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\n              return true;\n            }\n            // 检查文本对齐方式\n            const { align } = fontAttr;\n            if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\n              return true;\n            }\n          }\n          // 检查文本是否越界\n          const width = table.getCellContentBoundOutWidth(row, j);\n          if (width > rightWidth) {\n            // 只有master单元格和\n            // last单元格都是空时\n            // 才允许不绘制边框\n            const masterBlank = PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text);\n            const nextBlank = PlainUtils.isUnDef(last) || PlainUtils.isBlank(last.text);\n            if (masterBlank && nextBlank) {\n              find = false;\n              return false;\n            }\n          }\n          return true;\n        })\n        .setNext((j) => {\n          rightWidth += cols.getWidth(j);\n        })\n        .execute();\n    } else {\n      xIteratorBuilder.getColIterator()\n        .setBegin(col + 1)\n        .setEnd(len)\n        .setLoop((j) => {\n          // 空单元格检查\n          const cell = cells.getCell(row, j);\n          if (PlainUtils.isUnDef(cell)) {\n            return true;\n          }\n          // 合并单元格检查\n          const merge = merges.getFirstIncludes(row, j);\n          if (PlainUtils.isNotUnDef(merge)) {\n            return true;\n          }\n          // 空文本单检查\n          const { text } = cell;\n          if (PlainUtils.isBlank(text)) {\n            return true;\n          }\n          // 文本属性检查\n          const { fontAttr } = cell;\n          const { textWrap } = fontAttr;\n          // 裁剪类型检查\n          if (textWrap !== BaseFont.TEXT_WRAP.OVER_FLOW) {\n            return false;\n          }\n          // 文本对齐方式检查\n          const { align } = fontAttr;\n          if (align !== BaseFont.ALIGN.right && align !== BaseFont.ALIGN.center) {\n            return false;\n          }\n          // 文本越界检查\n          const width = table.getCellContentBoundOutWidth(row, j);\n          if (width > rightWidth) {\n            // 只有master单元格和\n            // last单元格都是空时\n            // 才允许不绘制边框\n            const masterBlank = PlainUtils.isUnDef(master) || PlainUtils.isBlank(master.text);\n            const nextBlank = PlainUtils.isUnDef(last) || PlainUtils.isBlank(last.text);\n            if (masterBlank && nextBlank) {\n              find = false;\n            }\n          }\n          return false;\n        })\n        .setNext((j) => {\n          rightWidth += cols.getWidth(j);\n        })\n        .execute();\n    }\n    return find;\n  }\n\n}\n\nexport {\n  LCellOutRange,\n};\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass LAngleBarHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    return table.isAngleBarCell(row, col) || table.isAngleBarCell(row, col - 1)\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LAngleBarHide,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass RAngleBarHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    return table.isAngleBarCell(row, col) || table.isAngleBarCell(row, col + 1)\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RAngleBarHide,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass TAngleBarHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    return table.isAngleBarCell(row, col) || table.isAngleBarCell(row - 1, col)\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  TAngleBarHide,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass BAngleBarHide {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    return table.isAngleBarCell(row, col) || table.isAngleBarCell(row + 1, col)\r\n      ? XLineIteratorFilter.RETURN_TYPE.JUMP\r\n      : XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  BAngleBarHide,\r\n};\r\n","import { XLineIteratorFilter } from '../XLineIteratorFilter';\nimport { XLineIteratorItem } from '../XLineIteratorItem';\nimport { XLineOptimizeJoin } from '../XLineOptimizeJoin';\nimport { BBorderShow } from '../linefilters/borderdisplay/BBorderShow';\nimport { BBorderPriority } from '../linefilters/borderpriority/BBorderPriority';\nimport { MergeBNullEdge } from '../linefilters/mergenulledge/MergeBNullEdge';\nimport { TBorderShow } from '../linefilters/borderdisplay/TBorderShow';\nimport { TBorderPriority } from '../linefilters/borderpriority/TBorderPriority';\nimport { MergeTNullEdge } from '../linefilters/mergenulledge/MergeTNullEdge';\nimport { RCellOutRange } from '../linefilters/celloutrange/RCellOutRange';\nimport { RBorderShow } from '../linefilters/borderdisplay/RBorderShow';\nimport { RBorderPriority } from '../linefilters/borderpriority/RBorderPriority';\nimport { MergeRNullEdge } from '../linefilters/mergenulledge/MergeRNullEdge';\nimport { LBorderPriority } from '../linefilters/borderpriority/LBorderPriority';\nimport { LBorderShow } from '../linefilters/borderdisplay/LBorderShow';\nimport { MergeLNullEdge } from '../linefilters/mergenulledge/MergeLNullEdge';\nimport { LCellOutRange } from '../linefilters/celloutrange/LCellOutRange';\nimport { LAngleBarHide } from '../linefilters/anglebarhidden/LAngleBarHide';\nimport { RAngleBarHide } from '../linefilters/anglebarhidden/RAngleBarHide';\nimport { TAngleBarHide } from '../linefilters/anglebarhidden/TAngleBarHide';\nimport { BAngleBarHide } from '../linefilters/anglebarhidden/BAngleBarHide';\n\nclass LineBorder {\n\n  constructor({\n    table, bx = 0, by = 0, optimize = true,\n  }) {\n    this.optimize = optimize;\n    this.table = table;\n    this.lLine = [];\n    this.tLine = [];\n    this.rLine = [];\n    this.bLine = [];\n    this.bx = bx;\n    this.by = by;\n  }\n\n  offsetX({\n    sx, ex, row, col,\n  }) {\n    const { table } = this;\n    const { cells } = table;\n    const last = cells.getCell(row, col - 1);\n    const next = cells.getCell(row, col + 1);\n    let osx = sx;\n    let oex = ex;\n    if (last) {\n      if (last.borderAttr.top.display) {\n        osx -= last.rightSdistWidth;\n      }\n    }\n    if (next) {\n      if (next.borderAttr.top.display) {\n        oex += next.leftSdistWidth;\n      }\n    }\n    return { osx, oex };\n  }\n\n  getBItem() {\n    const { table, bx, by, optimize } = this;\n    const { cols, rows, cells } = table;\n    const bLine = [];\n    const bRow = {};\n    const optimizeJoin = new XLineOptimizeJoin();\n    return new XLineIteratorItem({\n      newRow: ({ row, y }) => {\n        const height = rows.getHeight(row);\n        bRow.sx = bx;\n        bRow.sy = by + y + height;\n        bRow.ex = bRow.sx;\n        bRow.ey = bRow.sy;\n      },\n      filter: new XLineIteratorFilter({\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\n        stack: [\n          new BBorderShow(table),\n          new BBorderPriority(table),\n          new MergeBNullEdge(table),\n          new BAngleBarHide(table),\n        ],\n      }),\n      exec: ({ row, col }) => {\n        const width = cols.getWidth(col);\n        const cell = cells.getCell(row, col);\n        const { borderAttr } = cell;\n        bRow.ex += width;\n        const { sx, sy, ex, ey } = bRow;\n        bLine.push({ sx, sy, ex, ey, row, col, borderAttr });\n        bRow.sx = bRow.ex;\n      },\n      jump: ({ col }) => {\n        const width = cols.getWidth(col);\n        bRow.sx = bRow.ex + width;\n        bRow.ex = bRow.sx;\n      },\n      complete: () => {\n        this.bLine = optimize\n          ? optimizeJoin.hbJoin(bLine)\n          : bLine;\n      },\n    });\n  }\n\n  getTItem() {\n    const { table, bx, by, optimize } = this;\n    const { cols, cells } = table;\n    const tLine = [];\n    const tRow = {};\n    const optimizeJoin = new XLineOptimizeJoin();\n    return new XLineIteratorItem({\n      newRow: ({ y }) => {\n        tRow.sx = bx;\n        tRow.sy = by + y;\n        tRow.ex = tRow.sx;\n        tRow.ey = tRow.sy;\n      },\n      filter: new XLineIteratorFilter({\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\n        stack: [\n          new TBorderShow(table),\n          new TBorderPriority(table),\n          new MergeTNullEdge(table),\n          new TAngleBarHide(table),\n        ],\n      }),\n      exec: ({ row, col }) => {\n        const width = cols.getWidth(col);\n        const cell = cells.getCell(row, col);\n        const { borderAttr } = cell;\n        tRow.ex += width;\n        const { sx, sy, ex, ey } = tRow;\n        const { osx, oex } = this.offsetX({ sx, ex, row, col });\n        tLine.push({ sx: osx, sy, ex: oex, ey, row, col, borderAttr });\n        tRow.sx = tRow.ex;\n      },\n      jump: ({ col }) => {\n        const width = cols.getWidth(col);\n        tRow.sx = tRow.ex + width;\n        tRow.ex = tRow.sx;\n      },\n      complete: () => {\n        this.tLine = optimize\n          ? optimizeJoin.htJoin(tLine)\n          : tLine;\n      },\n    });\n  }\n\n  getRItem() {\n    const { table, bx, by, optimize } = this;\n    const { cols, rows, cells, xIteratorBuilder } = table;\n    const rCols = [];\n    const optimizeJoin = new XLineOptimizeJoin(xIteratorBuilder);\n    return new XLineIteratorItem({\n      newCol: ({ col, x }) => {\n        const width = cols.getWidth(col);\n        const sx = bx + x + width;\n        const sy = by;\n        const ex = sx;\n        const ey = sy;\n        const rLine = [];\n        rCols[col] = { sx, sy, ex, ey, rLine };\n      },\n      filter: new XLineIteratorFilter({\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\n        stack: [\n          new RBorderShow(table),\n          new RBorderPriority(table),\n          new MergeRNullEdge(table),\n          new RAngleBarHide(table),\n          new RCellOutRange(table),\n        ],\n      }),\n      exec: ({ row, col }) => {\n        const height = rows.getHeight(row);\n        const cell = cells.getCell(row, col);\n        const item = rCols[col];\n        const { borderAttr } = cell;\n        item.ey += height;\n        const { sx, sy, ex, ey, rLine } = item;\n        rLine.push({ sx, sy, ex, ey, row, col, borderAttr });\n        item.sy = item.ey;\n      },\n      jump: ({ row, col }) => {\n        const height = rows.getHeight(row);\n        const item = rCols[col];\n        item.sy = item.ey + height;\n        item.ey = item.sy;\n      },\n      complete: () => {\n        let rLine = [];\n        for (let idx = 0; idx < rCols.length; idx++) {\n          const item = rCols[idx];\n          if (item) {\n            if (optimize) {\n              rLine = rLine.concat(optimizeJoin.vrJoin(item.rLine));\n            } else {\n              rLine = rLine.concat(item.rLine);\n            }\n          }\n        }\n        this.rLine = rLine;\n      },\n    });\n  }\n\n  getLItem() {\n    const { table, bx, by, optimize } = this;\n    const { rows, cells, xIteratorBuilder } = table;\n    const lCols = [];\n    const optimizeJoin = new XLineOptimizeJoin(xIteratorBuilder);\n    return new XLineIteratorItem({\n      newCol: ({ col, x }) => {\n        const sx = bx + x;\n        const sy = by;\n        const ex = sx;\n        const ey = sy;\n        const lLine = [];\n        lCols[col] = { sx, sy, ex, ey, lLine };\n      },\n      filter: new XLineIteratorFilter({\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\n        stack: [\n          new LBorderShow(table),\n          new LBorderPriority(table),\n          new MergeLNullEdge(table),\n          new LAngleBarHide(table),\n          new LCellOutRange(table),\n        ],\n      }),\n      exec: ({ row, col }) => {\n        const item = lCols[col];\n        const cell = cells.getCell(row, col);\n        const height = rows.getHeight(row);\n        const { borderAttr } = cell;\n        item.ey += height;\n        const { sx, sy, ex, ey, lLine } = item;\n        lLine.push({ sx, sy, ex, ey, row, col, borderAttr });\n        item.sy = item.ey;\n      },\n      jump: ({ row, col }) => {\n        const height = rows.getHeight(row);\n        const item = lCols[col];\n        item.sy = item.ey + height;\n        item.ey = item.sy;\n      },\n      complete: () => {\n        let lLine = [];\n        for (let idx = 0; idx < lCols.length; idx++) {\n          const item = lCols[idx];\n          if (item) {\n            if (optimize) {\n              lLine = lLine.concat(optimizeJoin.vlJoin(item.lLine));\n            } else {\n              lLine = lLine.concat(item.lLine);\n            }\n          }\n        }\n        this.lLine = lLine;\n      },\n    });\n  }\n\n  getItems() {\n    return [\n      this.getBItem(),\n      this.getTItem(),\n      this.getRItem(),\n      this.getLItem(),\n    ];\n  }\n\n  getResult() {\n    const { rLine, bLine, lLine, tLine } = this;\n    return {\n      rLine, bLine, lLine, tLine,\n    };\n  }\n\n}\n\nexport {\n  LineBorder,\n};\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass AngleBarShow {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    return table.isAngleBarCell(row, col)\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBarShow,\r\n};\r\n","import { PlainUtils } from '../../../../../utils/PlainUtils';\r\nimport { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass AngleBarInRow {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n  }\r\n\r\n  run({\r\n    row,\r\n  }) {\r\n    const { table } = this;\r\n    return table.hasAngleCell(row)\r\n      ? XLineIteratorFilter.RETURN_TYPE.EXEC\r\n      : XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBarInRow,\r\n};\r\n","import { XLineIteratorItem } from '../XLineIteratorItem';\r\nimport { XLineIteratorFilter } from '../XLineIteratorFilter';\r\nimport { BBorderShow } from '../linefilters/borderdisplay/BBorderShow';\r\nimport { BBorderPriority } from '../linefilters/borderpriority/BBorderPriority';\r\nimport { MergeBNullEdge } from '../linefilters/mergenulledge/MergeBNullEdge';\r\nimport { TBorderShow } from '../linefilters/borderdisplay/TBorderShow';\r\nimport { TBorderPriority } from '../linefilters/borderpriority/TBorderPriority';\r\nimport { MergeTNullEdge } from '../linefilters/mergenulledge/MergeTNullEdge';\r\nimport { RBorderShow } from '../linefilters/borderdisplay/RBorderShow';\r\nimport { RBorderPriority } from '../linefilters/borderpriority/RBorderPriority';\r\nimport { MergeRNullEdge } from '../linefilters/mergenulledge/MergeRNullEdge';\r\nimport { LBorderShow } from '../linefilters/borderdisplay/LBorderShow';\r\nimport { LBorderPriority } from '../linefilters/borderpriority/LBorderPriority';\r\nimport { MergeLNullEdge } from '../linefilters/mergenulledge/MergeLNullEdge';\r\nimport { AngleBarShow } from '../linefilters/anglebardisplay/AngleBarShow';\r\nimport { AngleBarInRow } from '../linefilters/anglebarinrow/AngleBarInRow';\r\n\r\nclass AngleBar {\r\n\r\n  constructor({\r\n    table, bx = 0, by = 0,\r\n  }) {\r\n    this.table = table;\r\n    this.lLine = [];\r\n    this.tLine = [];\r\n    this.rLine = [];\r\n    this.bLine = [];\r\n    this.bx = bx;\r\n    this.by = by;\r\n  }\r\n\r\n  offsetX({\r\n    sx, ex, row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    if (angle > 0) {\r\n      sx += cell.leftSdistWidth;\r\n      ex += cell.leftSdistWidth;\r\n    } else {\r\n      sx -= cell.rightSdistWidth;\r\n      ex -= cell.rightSdistWidth;\r\n    }\r\n    return {\r\n      osx: sx,\r\n      oex: ex,\r\n    };\r\n  }\r\n\r\n  getBItem() {\r\n    const { bx, by, table } = this;\r\n    const { cols, rows, cells } = table;\r\n    const bLine = [];\r\n    const bRow = {};\r\n    return new XLineIteratorItem({\r\n      newRow: ({ row, y }) => {\r\n        const height = rows.getHeight(row);\r\n        bRow.sx = bx;\r\n        bRow.sy = by + y + height;\r\n        bRow.ex = bRow.sx;\r\n        bRow.ey = bRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new BBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new BBorderPriority(table),\r\n          new MergeBNullEdge(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        bRow.ex += width;\r\n        const { sx, sy, ex, ey } = bRow;\r\n        bLine.push({ sx, sy, ex, ey, row, col, borderAttr });\r\n        bRow.sx = bRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        bRow.sx = bRow.ex + width;\r\n        bRow.ex = bRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.bLine = bLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getTItem() {\r\n    const { table, bx, by } = this;\r\n    const { cols, cells } = table;\r\n    const tLine = [];\r\n    const tRow = {};\r\n    return new XLineIteratorItem({\r\n      newRow: ({ y }) => {\r\n        tRow.sx = bx;\r\n        tRow.sy = by + y;\r\n        tRow.ex = tRow.sx;\r\n        tRow.ey = tRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new TBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new TBorderPriority(table),\r\n          new MergeTNullEdge(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        tRow.ex += width;\r\n        const { sx, sy, ex, ey } = tRow;\r\n        const { osx, oex } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        tLine.push({ sx: osx, sy, ex: oex, ey, row, col, borderAttr });\r\n        tRow.sx = tRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        tRow.sx = tRow.ex + width;\r\n        tRow.ex = tRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.tLine = tLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getRItem() {\r\n    const { bx, by, table } = this;\r\n    const { cols, rows, cells } = table;\r\n    const rCols = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const width = cols.getWidth(col);\r\n        const sx = bx + x + width;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const rLine = [];\r\n        rCols[col] = { sx, sy, ex, ey, rLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new RBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new RBorderPriority(table),\r\n          new MergeRNullEdge(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const cell = cells.getCell(row, col);\r\n        const item = rCols[col];\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, rLine } = item;\r\n        const { osx } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        rLine.push({ sx: osx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = rCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let rLine = [];\r\n        for (let idx = 0; idx < rCols.length; idx++) {\r\n          const item = rCols[idx];\r\n          if (item) {\r\n            rLine = rLine.concat(item.rLine);\r\n          }\r\n        }\r\n        this.rLine = rLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getLItem() {\r\n    const { bx, by, table } = this;\r\n    const { rows, cells } = table;\r\n    const lCols = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const sx = bx + x;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const lLine = [];\r\n        lCols[col] = { sx, sy, ex, ey, lLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new LBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new LBorderPriority(table),\r\n          new MergeLNullEdge(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const item = lCols[col];\r\n        const cell = cells.getCell(row, col);\r\n        const height = rows.getHeight(row);\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, lLine } = item;\r\n        const { osx } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        lLine.push({ sx: osx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = lCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let lLine = [];\r\n        for (let idx = 0; idx < lCols.length; idx++) {\r\n          const item = lCols[idx];\r\n          if (item) {\r\n            lLine = lLine.concat(item.lLine);\r\n          }\r\n        }\r\n        this.lLine = lLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    return [\r\n      this.getBItem(),\r\n      this.getTItem(),\r\n      this.getRItem(),\r\n      this.getLItem(),\r\n    ];\r\n  }\r\n\r\n  getResult() {\r\n    const { rLine, bLine, lLine, tLine } = this;\r\n    return {\r\n      rLine, bLine, lLine, tLine,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBar,\r\n};\r\n","import { XLineIteratorItem } from '../XLineIteratorItem';\r\nimport { XLineIteratorFilter } from '../XLineIteratorFilter';\r\n\r\nclass LineIndex {\r\n\r\n  constructor({\r\n    getWidth, getHeight, bx = 0, by = 0,\r\n  }) {\r\n    this.getHeight = getHeight;\r\n    this.getWidth = getWidth;\r\n    this.bx = bx;\r\n    this.by = by;\r\n    this.bLine = [];\r\n    this.rLine = [];\r\n  }\r\n\r\n  getBItem() {\r\n    const { bx, by, getWidth, getHeight } = this;\r\n    const bRow = {};\r\n    const bLine = [];\r\n    return new XLineIteratorItem({\r\n      newRow: ({ row, y }) => {\r\n        const height = getHeight(row);\r\n        bRow.sx = bx;\r\n        bRow.sy = by + y + height;\r\n        bRow.ex = bRow.sx;\r\n        bRow.ey = bRow.sy;\r\n        bRow.breakpoint = false;\r\n      },\r\n      endRow: () => {\r\n        if (bRow.breakpoint) {\r\n          const { sx, sy, ex, ey } = bRow;\r\n          bLine.push({ sx, sy, ex, ey });\r\n        }\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [],\r\n      }),\r\n      exec: ({ col }) => {\r\n        const width = getWidth(col);\r\n        bRow.breakpoint = true;\r\n        bRow.ex += width;\r\n      },\r\n      jump: ({ col }) => {\r\n        if (bRow.breakpoint) {\r\n          const { sx, sy, ex, ey } = bRow;\r\n          bRow.breakpoint = false;\r\n          bLine.push({ sx, sy, ex, ey });\r\n        }\r\n        const width = getWidth(col);\r\n        bRow.sx = bRow.ex + width;\r\n        bRow.ex = bRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.bLine = bLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getRItem() {\r\n    const { bx, by, getWidth, getHeight } = this;\r\n    const rCols = [];\r\n    const rLine = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const width = getWidth(col);\r\n        const sx = bx + x + width;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const breakpoint = false;\r\n        rCols[col] = { sx, sy, ex, ey, breakpoint };\r\n      },\r\n      endCol: ({ col }) => {\r\n        const item = rCols[col];\r\n        if (item.breakpoint) {\r\n          const { sx, sy, ex, ey } = item;\r\n          rLine.push({ sx, sy, ex, ey });\r\n        }\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const item = rCols[col];\r\n        const height = getHeight(row);\r\n        item.breakpoint = true;\r\n        item.ey += height;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const item = rCols[col];\r\n        const height = getHeight(row);\r\n        if (item.breakpoint) {\r\n          const { sx, sy, ex, ey } = item;\r\n          item.breakpoint = false;\r\n          rLine.push({ sx, sy, ex, ey });\r\n        }\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        this.rLine = rLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    return [\r\n      this.getBItem(),\r\n      this.getRItem(),\r\n    ];\r\n  }\r\n\r\n  getResult() {\r\n    const { bLine, rLine } = this;\r\n    return {\r\n      bLine, rLine,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LineIndex,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass LAngleBarOut {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n    this.maxWidth = 0;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cols } = table;\r\n    const width = cols.getWidth(col);\r\n    this.maxWidth += width;\r\n    if (!table.isAngleBarCell(row, col)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    if (angle < 0) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const size = table.getCellContentBoundOutWidth(row, col);\r\n    if (size === 0 || size > this.maxWidth) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  LAngleBarOut,\r\n};\r\n","import { XLineIteratorItem } from '../XLineIteratorItem';\r\nimport { XLineIteratorFilter } from '../XLineIteratorFilter';\r\nimport { AngleBarInRow } from '../linefilters/anglebarinrow/AngleBarInRow';\r\nimport { BBorderShow } from '../linefilters/borderdisplay/BBorderShow';\r\nimport { AngleBarShow } from '../linefilters/anglebardisplay/AngleBarShow';\r\nimport { BBorderPriority } from '../linefilters/borderpriority/BBorderPriority';\r\nimport { MergeBNullEdge } from '../linefilters/mergenulledge/MergeBNullEdge';\r\nimport { TBorderShow } from '../linefilters/borderdisplay/TBorderShow';\r\nimport { TBorderPriority } from '../linefilters/borderpriority/TBorderPriority';\r\nimport { MergeTNullEdge } from '../linefilters/mergenulledge/MergeTNullEdge';\r\nimport { RBorderShow } from '../linefilters/borderdisplay/RBorderShow';\r\nimport { RBorderPriority } from '../linefilters/borderpriority/RBorderPriority';\r\nimport { MergeRNullEdge } from '../linefilters/mergenulledge/MergeRNullEdge';\r\nimport { LBorderShow } from '../linefilters/borderdisplay/LBorderShow';\r\nimport { LBorderPriority } from '../linefilters/borderpriority/LBorderPriority';\r\nimport { MergeLNullEdge } from '../linefilters/mergenulledge/MergeLNullEdge';\r\nimport { LAngleBarOut } from '../linefilters/anglebarout/LAngleBarOut';\r\n\r\nclass AngleBarLOut {\r\n\r\n  constructor({\r\n    table, bx = 0, by = 0,\r\n  }) {\r\n    this.table = table;\r\n    this.lLine = [];\r\n    this.tLine = [];\r\n    this.rLine = [];\r\n    this.bLine = [];\r\n    this.bx = bx;\r\n    this.by = by;\r\n  }\r\n\r\n  offsetX({\r\n    sx, ex, row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    if (angle > 0) {\r\n      sx += cell.leftSdistWidth;\r\n      ex += cell.leftSdistWidth;\r\n    } else {\r\n      sx -= cell.rightSdistWidth;\r\n      ex -= cell.rightSdistWidth;\r\n    }\r\n    return {\r\n      osx: sx,\r\n      oex: ex,\r\n    };\r\n  }\r\n\r\n  getBItem() {\r\n    const { bx, by, table } = this;\r\n    const { cols, rows, cells } = table;\r\n    const bLine = [];\r\n    const bRow = {};\r\n    return new XLineIteratorItem({\r\n      newRow: ({ row, y }) => {\r\n        const height = rows.getHeight(row);\r\n        bRow.sx = bx;\r\n        bRow.sy = by + y + height;\r\n        bRow.ex = bRow.sx;\r\n        bRow.ey = bRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new BBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new BBorderPriority(table),\r\n          new MergeBNullEdge(table),\r\n          new LAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        bRow.ex += width;\r\n        const { sx, sy, ex, ey } = bRow;\r\n        bLine.push({ sx, sy, ex, ey, row, col, borderAttr });\r\n        bRow.sx = bRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        bRow.sx = bRow.ex + width;\r\n        bRow.ex = bRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.bLine = bLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getTItem() {\r\n    const { table, bx, by } = this;\r\n    const { cols, cells } = table;\r\n    const tLine = [];\r\n    const tRow = {};\r\n    return new XLineIteratorItem({\r\n      newRow: ({ y }) => {\r\n        tRow.sx = bx;\r\n        tRow.sy = by + y;\r\n        tRow.ex = tRow.sx;\r\n        tRow.ey = tRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new TBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new TBorderPriority(table),\r\n          new MergeTNullEdge(table),\r\n          new LAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        tRow.ex += width;\r\n        const { sx, sy, ex, ey } = tRow;\r\n        const { osx, oex } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        tLine.push({ sx: osx, sy, ex: oex, ey, row, col, borderAttr });\r\n        tRow.sx = tRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        tRow.sx = tRow.ex + width;\r\n        tRow.ex = tRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.tLine = tLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getRItem() {\r\n    const { bx, by, table } = this;\r\n    const { cols, rows, cells } = table;\r\n    const rCols = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const width = cols.getWidth(col);\r\n        const sx = bx + x + width;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const rLine = [];\r\n        rCols[col] = { sx, sy, ex, ey, rLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new RBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new RBorderPriority(table),\r\n          new MergeRNullEdge(table),\r\n          new LAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const cell = cells.getCell(row, col);\r\n        const item = rCols[col];\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, rLine } = item;\r\n        const { osx } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        rLine.push({ sx: osx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = rCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let rLine = [];\r\n        for (let idx = 0; idx < rCols.length; idx++) {\r\n          const item = rCols[idx];\r\n          if (item) {\r\n            rLine = rLine.concat(item.rLine);\r\n          }\r\n        }\r\n        this.rLine = rLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getLItem() {\r\n    const { bx, by, table } = this;\r\n    const { rows, cells } = table;\r\n    const lCols = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const sx = bx + x;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const lLine = [];\r\n        lCols[col] = { sx, sy, ex, ey, lLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new LBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new LBorderPriority(table),\r\n          new MergeLNullEdge(table),\r\n          new LAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const item = lCols[col];\r\n        const cell = cells.getCell(row, col);\r\n        const height = rows.getHeight(row);\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, lLine } = item;\r\n        const { osx } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        lLine.push({ sx: osx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = lCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let lLine = [];\r\n        for (let idx = 0; idx < lCols.length; idx++) {\r\n          const item = lCols[idx];\r\n          if (item) {\r\n            lLine = lLine.concat(item.lLine);\r\n          }\r\n        }\r\n        this.lLine = lLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    return [\r\n      this.getBItem(),\r\n      this.getTItem(),\r\n      this.getRItem(),\r\n      this.getLItem(),\r\n    ];\r\n  }\r\n\r\n  getResult() {\r\n    const { rLine, bLine, lLine, tLine } = this;\r\n    return {\r\n      rLine, bLine, lLine, tLine,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBarLOut,\r\n};\r\n","import { XLineIteratorFilter } from '../../XLineIteratorFilter';\r\n\r\nclass RAngleBarOut {\r\n\r\n  constructor(table) {\r\n    this.table = table;\r\n    this.maxWidth = 0;\r\n  }\r\n\r\n  run({\r\n    row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cols } = table;\r\n    const width = cols.getWidth(col);\r\n    this.maxWidth += width;\r\n    if (!table.isAngleBarCell(row, col)) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    if (angle > 0) {\r\n      return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n    }\r\n    const size = table.getCellContentBoundOutWidth(row, col);\r\n    if (size === 0 || size > this.maxWidth) {\r\n      return XLineIteratorFilter.RETURN_TYPE.EXEC;\r\n    }\r\n    return XLineIteratorFilter.RETURN_TYPE.JUMP;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RAngleBarOut,\r\n};\r\n","import { XLineIteratorItem } from '../XLineIteratorItem';\r\nimport { XLineIteratorFilter } from '../XLineIteratorFilter';\r\nimport { AngleBarInRow } from '../linefilters/anglebarinrow/AngleBarInRow';\r\nimport { BBorderShow } from '../linefilters/borderdisplay/BBorderShow';\r\nimport { AngleBarShow } from '../linefilters/anglebardisplay/AngleBarShow';\r\nimport { BBorderPriority } from '../linefilters/borderpriority/BBorderPriority';\r\nimport { MergeBNullEdge } from '../linefilters/mergenulledge/MergeBNullEdge';\r\nimport { TBorderShow } from '../linefilters/borderdisplay/TBorderShow';\r\nimport { TBorderPriority } from '../linefilters/borderpriority/TBorderPriority';\r\nimport { MergeTNullEdge } from '../linefilters/mergenulledge/MergeTNullEdge';\r\nimport { RBorderShow } from '../linefilters/borderdisplay/RBorderShow';\r\nimport { RBorderPriority } from '../linefilters/borderpriority/RBorderPriority';\r\nimport { MergeRNullEdge } from '../linefilters/mergenulledge/MergeRNullEdge';\r\nimport { LBorderShow } from '../linefilters/borderdisplay/LBorderShow';\r\nimport { LBorderPriority } from '../linefilters/borderpriority/LBorderPriority';\r\nimport { MergeLNullEdge } from '../linefilters/mergenulledge/MergeLNullEdge';\r\nimport { RAngleBarOut } from '../linefilters/anglebarout/RAngleBarOut';\r\n\r\nclass AngleBarROut {\r\n\r\n  constructor({\r\n    table, bx = 0, by = 0,\r\n  }) {\r\n    this.table = table;\r\n    this.lLine = [];\r\n    this.tLine = [];\r\n    this.rLine = [];\r\n    this.bLine = [];\r\n    this.bx = bx;\r\n    this.by = by;\r\n  }\r\n\r\n  offsetX({\r\n    sx, ex, row, col,\r\n  }) {\r\n    const { table } = this;\r\n    const { cells } = table;\r\n    const cell = cells.getCell(row, col);\r\n    const { fontAttr } = cell;\r\n    const { angle } = fontAttr;\r\n    if (angle > 0) {\r\n      sx += cell.leftSdistWidth;\r\n      ex += cell.leftSdistWidth;\r\n    } else {\r\n      sx -= cell.rightSdistWidth;\r\n      ex -= cell.rightSdistWidth;\r\n    }\r\n    return {\r\n      osx: sx,\r\n      oex: ex,\r\n    };\r\n  }\r\n\r\n  getBItem() {\r\n    const { bx, by, table } = this;\r\n    const { cols, rows, cells } = table;\r\n    const bLine = [];\r\n    const bRow = {};\r\n    return new XLineIteratorItem({\r\n      newRow: ({ row, y }) => {\r\n        const height = rows.getHeight(row);\r\n        bRow.sx = bx;\r\n        bRow.sy = by + y + height;\r\n        bRow.ex = bRow.sx;\r\n        bRow.ey = bRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new BBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new BBorderPriority(table),\r\n          new MergeBNullEdge(table),\r\n          new RAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        bRow.ex += width;\r\n        const { sx, sy, ex, ey } = bRow;\r\n        bLine.push({ sx, sy, ex, ey, row, col, borderAttr });\r\n        bRow.sx = bRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        bRow.sx = bRow.ex + width;\r\n        bRow.ex = bRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.bLine = bLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getTItem() {\r\n    const { table, bx, by } = this;\r\n    const { cols, cells } = table;\r\n    const tLine = [];\r\n    const tRow = {};\r\n    return new XLineIteratorItem({\r\n      newRow: ({ y }) => {\r\n        tRow.sx = bx;\r\n        tRow.sy = by + y;\r\n        tRow.ex = tRow.sx;\r\n        tRow.ey = tRow.sy;\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new TBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new TBorderPriority(table),\r\n          new MergeTNullEdge(table),\r\n          new RAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const width = cols.getWidth(col);\r\n        const cell = cells.getCell(row, col);\r\n        const { borderAttr } = cell;\r\n        tRow.ex += width;\r\n        const { sx, sy, ex, ey } = tRow;\r\n        const { osx, oex } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        tLine.push({ sx: osx, sy, ex: oex, ey, row, col, borderAttr });\r\n        tRow.sx = tRow.ex;\r\n      },\r\n      jump: ({ col }) => {\r\n        const width = cols.getWidth(col);\r\n        tRow.sx = tRow.ex + width;\r\n        tRow.ex = tRow.sx;\r\n      },\r\n      complete: () => {\r\n        this.tLine = tLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getRItem() {\r\n    const { bx, by, table } = this;\r\n    const { cols, rows, cells } = table;\r\n    const rCols = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const width = cols.getWidth(col);\r\n        const sx = bx + x + width;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const rLine = [];\r\n        rCols[col] = { sx, sy, ex, ey, rLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new RBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new RBorderPriority(table),\r\n          new MergeRNullEdge(table),\r\n          new RAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const cell = cells.getCell(row, col);\r\n        const item = rCols[col];\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, rLine } = item;\r\n        const { osx } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        rLine.push({ sx: osx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = rCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let rLine = [];\r\n        for (let idx = 0; idx < rCols.length; idx++) {\r\n          const item = rCols[idx];\r\n          if (item) {\r\n            rLine = rLine.concat(item.rLine);\r\n          }\r\n        }\r\n        this.rLine = rLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getLItem() {\r\n    const { bx, by, table } = this;\r\n    const { rows, cells } = table;\r\n    const lCols = [];\r\n    return new XLineIteratorItem({\r\n      newCol: ({ col, x }) => {\r\n        const sx = bx + x;\r\n        const sy = by;\r\n        const ex = sx;\r\n        const ey = sy;\r\n        const lLine = [];\r\n        lCols[col] = { sx, sy, ex, ey, lLine };\r\n      },\r\n      filter: new XLineIteratorFilter({\r\n        logic: XLineIteratorFilter.FILTER_LOGIC.AND,\r\n        stack: [\r\n          new AngleBarInRow(table),\r\n          new LBorderShow(table),\r\n          new AngleBarShow(table),\r\n          new LBorderPriority(table),\r\n          new MergeLNullEdge(table),\r\n          new RAngleBarOut(table),\r\n        ],\r\n      }),\r\n      exec: ({ row, col }) => {\r\n        const item = lCols[col];\r\n        const cell = cells.getCell(row, col);\r\n        const height = rows.getHeight(row);\r\n        const { borderAttr } = cell;\r\n        item.ey += height;\r\n        const { sx, sy, ex, ey, lLine } = item;\r\n        const { osx } = this.offsetX({\r\n          row, col, sx, ex,\r\n        });\r\n        lLine.push({ sx: osx, sy, ex, ey, row, col, borderAttr });\r\n        item.sy = item.ey;\r\n      },\r\n      jump: ({ row, col }) => {\r\n        const height = rows.getHeight(row);\r\n        const item = lCols[col];\r\n        item.sy = item.ey + height;\r\n        item.ey = item.sy;\r\n      },\r\n      complete: () => {\r\n        let lLine = [];\r\n        for (let idx = 0; idx < lCols.length; idx++) {\r\n          const item = lCols[idx];\r\n          if (item) {\r\n            lLine = lLine.concat(item.lLine);\r\n          }\r\n        }\r\n        this.lLine = lLine;\r\n      },\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    return [\r\n      this.getBItem(),\r\n      this.getTItem(),\r\n      this.getRItem(),\r\n      this.getLItem(),\r\n    ];\r\n  }\r\n\r\n  getResult() {\r\n    const { rLine, bLine, lLine, tLine } = this;\r\n    return {\r\n      rLine, bLine, lLine, tLine,\r\n    };\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AngleBarROut,\r\n};\r\n","import { XLineIteratorLoop } from './XLineIteratorLoop';\r\nimport { LineGrid } from './linegrids/LineGrid';\r\nimport { LineBorder } from './lineborder/LineBorder';\r\nimport { AngleBar } from './anglebar/AngleBar';\r\nimport { LineIndex } from './lineindex/LineIndex';\r\nimport { AngleBarLOut } from './anglebarout/AngleBarLOut';\r\nimport { AngleBarROut } from './anglebarout/AngleBarROut';\r\n\r\nclass XLinePlainGenerator {\r\n\r\n  static run({\r\n    optimize = true,\r\n    scrollView,\r\n    foldOnOff,\r\n    table,\r\n    by = 0,\r\n    bx = 0,\r\n    getHeight = ri => table.rows.getHeight(ri),\r\n    getWidth = ci => table.cols.getWidth(ci),\r\n    model = XLinePlainGenerator.MODEL.ALL,\r\n  }) {\r\n    switch (model) {\r\n      case XLinePlainGenerator.MODEL.BORDER: {\r\n        const bLine = new LineBorder({\r\n          table, bx, by, optimize,\r\n        });\r\n        const aLine = new AngleBar({\r\n          table, bx, by,\r\n        });\r\n        const xIterator = new XLineIteratorLoop({\r\n          items: bLine.getItems().concat(aLine.getItems()),\r\n          view: scrollView,\r\n          table,\r\n          foldOnOff,\r\n        });\r\n        xIterator.run();\r\n        const bResult = bLine.getResult();\r\n        const aResult = aLine.getResult();\r\n        return {\r\n          bResult, aResult,\r\n        };\r\n      }\r\n      case XLinePlainGenerator.MODEL.ALL: {\r\n        const bLine = new LineBorder({\r\n          table, bx, by, optimize,\r\n        });\r\n        const gLine = new LineGrid({\r\n          table, bx, by, getWidth, getHeight,\r\n        });\r\n        const aLine = new AngleBar({\r\n          table, bx, by,\r\n        });\r\n        const xIterator = new XLineIteratorLoop({\r\n          items: bLine.getItems().concat(gLine.getItems()).concat(aLine.getItems()),\r\n          foldOnOff,\r\n          table,\r\n          view: scrollView,\r\n        });\r\n        xIterator.run();\r\n        const gResult = gLine.getResult();\r\n        const bResult = bLine.getResult();\r\n        const aResult = aLine.getResult();\r\n        return {\r\n          gResult, bResult, aResult,\r\n        };\r\n      }\r\n      case XLinePlainGenerator.MODEL.INDEX: {\r\n        const iLine = new LineIndex({\r\n          bx, by, getWidth, getHeight,\r\n        });\r\n        const xIterator = new XLineIteratorLoop({\r\n          items: iLine.getItems(),\r\n          foldOnOff,\r\n          table,\r\n          view: scrollView,\r\n        });\r\n        xIterator.run();\r\n        const iResult = iLine.getResult();\r\n        return {\r\n          iResult,\r\n        };\r\n      }\r\n      case XLinePlainGenerator.MODEL.GRID: {\r\n        const gLine = new LineGrid({\r\n          table, bx, by, getWidth, getHeight,\r\n        });\r\n        const xIterator = new XLineIteratorLoop({\r\n          items: gLine.getItems(),\r\n          foldOnOff,\r\n          table,\r\n          view: scrollView,\r\n        });\r\n        xIterator.run();\r\n        const gResult = gLine.getResult();\r\n        return {\r\n          gResult,\r\n        };\r\n      }\r\n      case XLinePlainGenerator.MODEL.OUT_ANGLE_BAR_L: {\r\n        const alLine = new AngleBarLOut({\r\n          table, bx, by,\r\n        });\r\n        const xIterator = new XLineIteratorLoop({\r\n          items: alLine.getItems(),\r\n          foldOnOff,\r\n          table,\r\n          view: scrollView,\r\n        });\r\n        xIterator.run();\r\n        const alResult = alLine.getResult();\r\n        return {\r\n          alResult,\r\n        };\r\n      }\r\n      case XLinePlainGenerator.MODEL.OUT_ANGLE_BAR_R: {\r\n        const arLine = new AngleBarROut({\r\n          table, bx, by,\r\n        });\r\n        const xIterator = new XLineIteratorLoop({\r\n          items: arLine.getItems(),\r\n          foldOnOff,\r\n          table,\r\n          view: scrollView,\r\n        });\r\n        xIterator.run();\r\n        const arResult = arLine.getResult();\r\n        return {\r\n          arResult,\r\n        };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\nXLinePlainGenerator.MODEL = {\r\n  BORDER: 1,\r\n  ALL: 3,\r\n  GRID: 2,\r\n  INDEX: 4,\r\n  OUT_ANGLE_BAR_L: 5,\r\n  OUT_ANGLE_BAR_R: 6,\r\n};\r\n\r\nexport {\r\n  XLinePlainGenerator,\r\n};\r\n","class XMergesIndex {\r\n\r\n  constructor(xTableData) {\r\n    this.xTableData = xTableData;\r\n  }\r\n\r\n  set(ri, ci, point) {\r\n    const item = this.xTableData.getOrNew(ri, ci);\r\n    item.setMergeId(point);\r\n  }\r\n\r\n  get(ri, ci) {\r\n    const item = this.xTableData.get(ri, ci);\r\n    return item ? item.getMergeId() : undefined;\r\n  }\r\n\r\n  clear(ri, ci) {\r\n    const item = this.xTableData.get(ri, ci);\r\n    if (item) {\r\n      item.setMergeId(null);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMergesIndex,\r\n};\r\n","class XMergesNo {\r\n\r\n  constructor(no) {\r\n    this.no = no;\r\n  }\r\n\r\n  setNo(no) {\r\n    this.no = no;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMergesNo,\r\n};\r\n","import { XMergesNo } from './XMergesNo';\r\n\r\nclass XMergesNoRow {\r\n\r\n  constructor() {\r\n    this.nos = [];\r\n  }\r\n\r\n  getNo(no) {\r\n    if (this.nos[no]) { return this.nos[no]; }\r\n    this.nos[no] = new XMergesNo(no);\r\n    return this.nos[no];\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMergesNoRow,\r\n};\r\n","class XMergesItems {\r\n\r\n  constructor() {\r\n    this.recovery = [];\r\n    this.items = [];\r\n  }\r\n\r\n  get(point) {\r\n    return this.items[point];\r\n  }\r\n\r\n  add(item) {\r\n    const point = this.recovery.pop();\r\n    if (point) {\r\n      this.items[point] = item;\r\n      return point;\r\n    }\r\n    this.items.push(item);\r\n    return this.items.length - 1;\r\n  }\r\n\r\n  clear(point) {\r\n    this.items[point] = null;\r\n    this.recovery.push(point);\r\n  }\r\n\r\n  getItems() {\r\n    return this.items;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMergesItems,\r\n};\r\n","import { XMergesNo } from './XMergesNo';\r\n\r\nclass XMergesNoCol {\r\n\r\n  constructor() {\r\n    this.nos = [];\r\n  }\r\n\r\n  getNo(no) {\r\n    if (this.nos[no]) { return this.nos[no]; }\r\n    this.nos[no] = new XMergesNo(no);\r\n    return this.nos[no];\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMergesNoCol,\r\n};\r\n","class XMergesRange {\r\n\r\n  constructor(sri, sci, eri, eci, view) {\r\n    this.sri = sri;\r\n    this.sci = sci;\r\n    this.eri = eri;\r\n    this.eci = eci;\r\n    this.view = view;\r\n  }\r\n\r\n  getView() {\r\n    this.view.set(this.sri.no, this.sci.no, this.eri.no, this.eci.no);\r\n    return this.view;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XMergesRange,\r\n};\r\n","import { XMergesIndex } from './XMergesIndex';\nimport { XMergesNoRow } from './XMergesNoRow';\nimport { XMergesItems } from './XMergesItems';\nimport { XMergesNoCol } from './XMergesNoCol';\nimport { XMergesRange } from './XMergesRange';\nimport { PlainUtils } from '../../../utils/PlainUtils';\nimport { RectRange } from '../tablebase/RectRange';\n\nclass XMerges {\n\n  constructor({\n    merges = [],\n    xTableData,\n    xIteratorBuilder,\n  }) {\n    this.xMergesNoRow = new XMergesNoRow();\n    this.xMergesNoCol = new XMergesNoCol();\n    this.xMergesIndex = new XMergesIndex(xTableData);\n    this.xMergesItems = new XMergesItems();\n    this.xIteratorBuilder = xIteratorBuilder;\n    merges.map(merge => RectRange.valueOf(merge)).forEach(view => this.add(view));\n  }\n\n  getIncludes(view, notify) {\n    view.each(this.xIteratorBuilder, (ri, ci) => {\n      const view = this.getFirstIncludes(ri, ci);\n      if (view) {\n        notify(view);\n      }\n    });\n  }\n\n  getFirstIncludes(ri, ci) {\n    const point = this.xMergesIndex.get(ri, ci);\n    if (PlainUtils.isUnDef(point)) {\n      return PlainUtils.Undef;\n    }\n    const view = this.xMergesItems.get(point);\n    if (PlainUtils.isUnDef(view)) {\n      return PlainUtils.Undef;\n    }\n    return this.xMergesItems.get(point).getView();\n  }\n\n  add(view) {\n    const sri = this.xMergesNoRow.getNo(view.sri);\n    const sci = this.xMergesNoCol.getNo(view.sci);\n    const eri = this.xMergesNoRow.getNo(view.eri);\n    const eci = this.xMergesNoCol.getNo(view.eci);\n    const point = this.xMergesItems.add(new XMergesRange(sri, sci, eri, eci, view));\n    view.each(this.xIteratorBuilder, (ri, ci) => {\n      this.xMergesIndex.set(ri, ci, point);\n    });\n  }\n\n  union(view) {\n    const { top, right, left, bottom } = view.brink();\n    let find = null;\n    // 上边扫描\n    top.each(this.xIteratorBuilder, (ri, ci) => {\n      const item = this.getFirstIncludes(ri, ci);\n      if (PlainUtils.isUnDef(item)) {\n        return true;\n      }\n      if (view.contains(item)) {\n        return true;\n      }\n      find = item;\n      return false;\n    });\n    if (find) {\n      return this.union(find.union(view));\n    }\n    // 右边扫描\n    right.each(this.xIteratorBuilder, (ri, ci) => {\n      const item = this.getFirstIncludes(ri, ci);\n      if (PlainUtils.isUnDef(item)) {\n        return true;\n      }\n      if (view.contains(item)) {\n        return true;\n      }\n      find = item;\n      return false;\n    });\n    if (find) {\n      return this.union(find.union(view));\n    }\n    // 左边扫描\n    left.each(this.xIteratorBuilder, (ri, ci) => {\n      const item = this.getFirstIncludes(ri, ci);\n      if (PlainUtils.isUnDef(item)) {\n        return true;\n      }\n      if (view.contains(item)) {\n        return true;\n      }\n      find = item;\n      return false;\n    });\n    if (find) {\n      return this.union(find.union(view));\n    }\n    // 底边扫描\n    bottom.each(this.xIteratorBuilder, (ri, ci) => {\n      const item = this.getFirstIncludes(ri, ci);\n      if (PlainUtils.isUnDef(item)) {\n        return true;\n      }\n      if (view.contains(item)) {\n        return true;\n      }\n      find = item;\n      return false;\n    });\n    if (find) {\n      return this.union(find.union(view));\n    }\n    return view;\n  }\n\n  delete(view) {\n    const point = this.xMergesIndex.get(view.sri, view.sci);\n    view.each(this.xIteratorBuilder, (ri, ci) => {\n      this.xMergesIndex.clear(ri, ci);\n    });\n    this.xMergesItems.clear(point);\n  }\n\n  getData() {\n    const data = [];\n    this.xMergesItems.getItems().forEach((item) => {\n      if (item) {\n        data.push(item.getView().toString());\n      }\n    });\n    return data;\n  }\n\n}\n\nexport {\n  XMerges,\n};\n","class XTableDataItem {\r\n\r\n  constructor(cell = null, mergeId = null) {\r\n    this.cell = cell;\r\n    this.mergeId = mergeId;\r\n  }\r\n\r\n  setCell(cell) {\r\n    this.cell = cell;\r\n  }\r\n\r\n  setMergeId(mergeId) {\r\n    this.mergeId = mergeId;\r\n  }\r\n\r\n  getCell() {\r\n    return this.cell;\r\n  }\r\n\r\n  getMergeId() {\r\n    return this.mergeId;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableDataItem,\r\n};\r\n","import { XTableDataItem } from './XTableDataItem';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { Cell } from './tablecell/Cell';\r\n\r\nclass XTableDataItems {\r\n\r\n  constructor(items = []) {\r\n    this.items = items;\r\n  }\r\n\r\n  wrap(line, ci) {\r\n    const ele = line[ci];\r\n    if (ele instanceof XTableDataItem) {\r\n      return ele;\r\n    }\r\n    const item = new XTableDataItem();\r\n    if (PlainUtils.isString(ele)) {\r\n      item.setCell(new Cell({ text: ele }));\r\n    } else {\r\n      item.setCell(new Cell(ele));\r\n    }\r\n    line[ci] = item;\r\n    return item;\r\n  }\r\n\r\n  set(ri, ci, item) {\r\n    const line = this.items[ri] || [];\r\n    line[ci] = item;\r\n    this.items[ri] = line;\r\n  }\r\n\r\n  getItems() {\r\n    return this.items;\r\n  }\r\n\r\n  get(ri, ci) {\r\n    const line = this.items[ri];\r\n    return line && line[ci]\r\n      ? this.wrap(line, ci)\r\n      : undefined;\r\n  }\r\n\r\n  setOrNew(ri, ci, item) {\r\n    const line = this.items[ri];\r\n    if (line) {\r\n      line[ci] = item;\r\n    }\r\n  }\r\n\r\n  getOrNew(ri, ci) {\r\n    const find = this.get(ri, ci);\r\n    if (find) {\r\n      return find;\r\n    }\r\n    const item = new XTableDataItem();\r\n    this.set(ri, ci, item);\r\n    return item;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableDataItems,\r\n};\r\n","class Path {\r\n\r\n  constructor({\r\n    points = [],\r\n  }) {\r\n    this.points = points;\r\n  }\r\n\r\n  set({\r\n    points = [],\r\n  }) {\r\n    this.points = points;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Path,\r\n};\r\n","class Point {\r\n\r\n  constructor(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  setX(x) {\r\n    this.x = x;\r\n  }\r\n\r\n  setY(y) {\r\n    this.y = y;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Point,\r\n};\r\n","import { PlainUtils } from '../../utils/PlainUtils';\nimport { Rows } from './tablebase/Rows';\nimport { Cols } from './tablebase/Cols';\nimport { SCROLL_TYPE } from './tablebase/Scroll';\nimport { Widget } from '../../lib/Widget';\nimport { cssPrefix } from '../../const/Constant';\nimport { XDraw } from '../../canvas/XDraw';\nimport { Line } from '../../canvas/Line';\nimport { Grid } from '../../canvas/Grid';\nimport { Crop } from '../../canvas/Crop';\nimport { Rect } from '../../canvas/Rect';\nimport { Box } from '../../canvas/Box';\nimport { RectRange } from './tablebase/RectRange';\nimport { Cells } from './tablecell/Cells';\nimport { Scale, ScaleAdapter } from './tablebase/Scale';\nimport { Code } from './tablebase/Code';\nimport { Text } from './tablebase/Text';\nimport { STYLE_BREAK_LOOP, StyleCellsHelper } from './helper/StyleCellsHelper';\nimport { TEXT_BREAK_LOOP, TextCellsHelper } from './helper/TextCellsHelper';\nimport { XTableHistoryAreaView } from './XTableHistoryAreaView';\nimport { OperateCellsHelper } from './helper/OperateCellsHelper';\nimport { BaseFont } from '../../canvas/font/BaseFont';\nimport { VIEW_MODE, XTableScrollView } from './XTableScrollView';\nimport { XFixedMeasure } from './tablebase/XFixedMeasure';\nimport { FixedCellIcon } from './cellicon/FixedCellIcon';\nimport { StaticCellIcon } from './cellicon/StaticCellIcon';\nimport { XLinePlainGenerator } from './xlinehandle/XLinePlainGenerator';\nimport { LBorderShow } from './xlinehandle/linefilters/borderdisplay/LBorderShow';\nimport { XLineIteratorFilter } from './xlinehandle/XLineIteratorFilter';\nimport { RBorderShow } from './xlinehandle/linefilters/borderdisplay/RBorderShow';\nimport { TBorderShow } from './xlinehandle/linefilters/borderdisplay/TBorderShow';\nimport { BBorderShow } from './xlinehandle/linefilters/borderdisplay/BBorderShow';\nimport { XMerges } from './xmerges/XMerges';\nimport { XTableDataItems } from './XTableDataItems';\nimport { Path } from '../../canvas/Path';\nimport { Point } from '../../canvas/Point';\nimport { RTCosKit, RTSinKit } from '../../canvas/RTFunction';\n\nconst RENDER_MODE = {\n  SCROLL: Symbol('scroll'),\n  RENDER: Symbol('render'),\n  SCALE: Symbol('scale'),\n};\n\n//  ============================== 表格细节元素绘制 =============================\n\nclass XTableFrozenFullRect {\n\n  constructor(table) {\n    this.table = table;\n  }\n\n  draw() {\n    const dx = 0;\n    const dy = 0;\n    const { table } = this;\n    const { draw } = table;\n    const { indexGrid } = table;\n    const { index } = table;\n    const indexHeight = index.getHeight();\n    const indexWidth = index.getWidth();\n    draw.save();\n    draw.offset(dx, dy);\n    // 绘制背景\n    draw.attr({\n      fillStyle: '#f4f5f8',\n    });\n    draw.fillRect(0, 0, index.getWidth(), indexHeight);\n    draw.offset(0, 0);\n    // 绘制边框\n    indexGrid.horizonLine(0, indexHeight, indexWidth, indexHeight);\n    indexGrid.verticalLine(indexWidth, dy, indexWidth, indexHeight);\n    draw.restore();\n  }\n\n  render() {\n    const { table } = this;\n    const renderMode = table.getRenderMode();\n    if (renderMode === RENDER_MODE.RENDER || renderMode === RENDER_MODE.SCALE) {\n      this.draw();\n    }\n  }\n\n}\n\nclass XTableFixedBar {\n\n  constructor(table, {\n    width, height, background, buttonColor,\n  }) {\n    this.table = table;\n    this.height = height;\n    this.width = width;\n    this.background = background;\n    this.buttonColor = buttonColor;\n  }\n\n  drawBar() {\n    const {\n      table, height, width, background,\n    } = this;\n    const {\n      xFixedView, draw, index, xFixedMeasure,\n    } = table;\n    if (xFixedView.hasFixedTop()) {\n      const rpxHeight = XDraw.srcTransformStylePx(height);\n      const width = table.visualWidth();\n      const x = index.getWidth();\n      const y = xFixedMeasure.getHeight() + index.getHeight() - rpxHeight / 2;\n      draw.attr({ fillStyle: background });\n      draw.fillRect(x, y, width, rpxHeight);\n    }\n    if (xFixedView.hasFixedLeft()) {\n      const height = table.visualHeight();\n      const rpxWidth = XDraw.srcTransformStylePx(width);\n      const x = xFixedMeasure.getWidth() + index.getWidth() - rpxWidth / 2;\n      const y = index.getHeight();\n      draw.attr({ fillStyle: background });\n      draw.fillRect(x, y, rpxWidth, height);\n    }\n  }\n\n  drawButton() {\n    const {\n      table, height, width, buttonColor,\n    } = this;\n    const {\n      xFixedView, draw, index, xFixedMeasure,\n    } = table;\n    if (xFixedView.hasFixedTop()) {\n      const rpxHeight = XDraw.srcTransformStylePx(height);\n      const width = index.getWidth();\n      const x = 0;\n      const y = xFixedMeasure.getHeight() + index.getHeight() - rpxHeight / 2;\n      draw.attr({ fillStyle: buttonColor });\n      draw.fillRect(x, y, width, rpxHeight);\n    }\n    if (xFixedView.hasFixedLeft()) {\n      const height = index.getHeight();\n      const rpxWidth = XDraw.srcTransformStylePx(width);\n      const x = xFixedMeasure.getWidth() + index.getWidth() - rpxWidth / 2;\n      const y = 0;\n      draw.attr({ fillStyle: buttonColor });\n      draw.fillRect(x, y, rpxWidth, height);\n    }\n  }\n\n  render() {\n    this.drawBar();\n    this.drawButton();\n  }\n\n}\n\n// =============================== 表格绘制抽象类 ==============================\n\nclass XTableUI {\n\n  /**\n   * XTableUI\n   * @param table\n   */\n  constructor(table) {\n    this.table = table;\n    this.width = null;\n    this.height = null;\n    this.x = null;\n    this.y = null;\n    this.drawX = null;\n    this.drawY = null;\n    this.mapOriginX = null;\n    this.mapOriginY = null;\n    this.mapTargetX = null;\n    this.mapTargetY = null;\n    this.mapWidth = null;\n    this.mapHeight = null;\n    this.fullScrollView = null;\n    this.scrollView = null;\n    this.borderView = null;\n    this.borderX = null;\n    this.borderY = null;\n    this.viewMode = null;\n  }\n\n  /**\n   * 完整的滚动区域\n   * @returns {RectRange}\n   */\n  getFullScrollView() {\n    throw new TypeError('getFullScrollView child impl');\n  }\n\n  /**\n   * 滚动区域\n   * 网格和背景颜色的绘制区域\n   * @returns {RectRange}\n   */\n  getScrollView() {\n    throw new TypeError('getScrollView child impl');\n  }\n\n  /**\n   * 边框&网格绘制区域\n   * @returns {RectRange}\n   */\n  getLineView() {\n    if (PlainUtils.isNotUnDef(this.borderView)) {\n      return this.borderView.clone();\n    }\n    const { table } = this;\n    const { cols, rows } = table;\n    const renderMode = table.getRenderMode();\n    const viewMode = this.getViewMode();\n    const scrollView = this.getScrollView();\n    if (viewMode === VIEW_MODE.CHANGE_ADD && renderMode === RENDER_MODE.SCROLL) {\n      const { scroll } = table;\n      switch (scroll.type) {\n        case SCROLL_TYPE.V_TOP: {\n          scrollView.eri += 1;\n          scrollView.h = rows.rectRangeSumHeight(scrollView);\n          break;\n        }\n        case SCROLL_TYPE.V_BOTTOM: {\n          scrollView.sri -= 1;\n          scrollView.h = rows.rectRangeSumHeight(scrollView);\n          break;\n        }\n        case SCROLL_TYPE.H_RIGHT: {\n          scrollView.sci -= 1;\n          scrollView.w = cols.rectRangeSumWidth(scrollView);\n          break;\n        }\n        case SCROLL_TYPE.H_LEFT: {\n          scrollView.eci += 1;\n          scrollView.w = cols.rectRangeSumWidth(scrollView);\n          break;\n        }\n      }\n    }\n    this.borderView = scrollView;\n    return scrollView.clone();\n  }\n\n  /**\n   * 绘制贴图的目标X坐标\n   */\n  getMapTargetX() {\n    if (PlainUtils.isNumber(this.mapTargetX)) {\n      return this.mapTargetX;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { scroll } = table;\n    const x = this.getX();\n    let mapTargetX = 0;\n    switch (scroll.type) {\n      case SCROLL_TYPE.H_LEFT: {\n        const enterView = xTableAreaView.getEnterView();\n        mapTargetX = enterView.w;\n        break;\n      }\n      case SCROLL_TYPE.H_RIGHT: {\n        mapTargetX = 0;\n        break;\n      }\n    }\n    mapTargetX = x + mapTargetX;\n    this.mapTargetX = mapTargetX;\n    return mapTargetX;\n  }\n\n  /**\n   * 绘制贴图的目标X坐标\n   */\n  getMapTargetY() {\n    if (PlainUtils.isNumber(this.mapTargetY)) {\n      return this.mapTargetY;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { scroll } = table;\n    const y = this.getY();\n    let mapTargetY = 0;\n    switch (scroll.type) {\n      case SCROLL_TYPE.V_TOP: {\n        const enterView = xTableAreaView.getEnterView();\n        mapTargetY = enterView.h;\n        break;\n      }\n      case SCROLL_TYPE.V_BOTTOM: {\n        mapTargetY = 0;\n        break;\n      }\n    }\n    mapTargetY = y + mapTargetY;\n    this.mapTargetY = mapTargetY;\n    return mapTargetY;\n  }\n\n  /**\n   * 绘制贴图的原始X坐标\n   */\n  getMapOriginX() {\n    if (PlainUtils.isNumber(this.mapOriginX)) {\n      return this.mapOriginX;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { scroll } = table;\n    const x = this.getX();\n    let mapOriginX = 0;\n    switch (scroll.type) {\n      case SCROLL_TYPE.H_LEFT: {\n        mapOriginX = 0;\n        break;\n      }\n      case SCROLL_TYPE.H_RIGHT: {\n        const leaveView = xTableAreaView.getLeaveView();\n        mapOriginX = leaveView.w;\n        break;\n      }\n    }\n    mapOriginX = x + mapOriginX;\n    this.mapOriginX = mapOriginX;\n    return mapOriginX;\n  }\n\n  /**\n   * 绘制贴图的原始Y坐标\n   */\n  getMapOriginY() {\n    if (PlainUtils.isNumber(this.mapOriginY)) {\n      return this.mapOriginY;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { scroll } = table;\n    const y = this.getY();\n    let mapOriginY = 0;\n    switch (scroll.type) {\n      case SCROLL_TYPE.V_TOP: {\n        mapOriginY = 0;\n        break;\n      }\n      case SCROLL_TYPE.V_BOTTOM: {\n        const leaveView = xTableAreaView.getLeaveView();\n        mapOriginY = leaveView.h;\n        break;\n      }\n    }\n    mapOriginY = y + mapOriginY;\n    this.mapOriginY = mapOriginY;\n    return mapOriginY;\n  }\n\n  /**\n   * 绘制边框&网格的X坐标\n   */\n  getLineX() {\n    if (PlainUtils.isNumber(this.borderX)) {\n      return this.borderX;\n    }\n    const { table } = this;\n    const x = this.getX();\n    if (table.getRenderMode() === RENDER_MODE.RENDER) {\n      this.borderX = x;\n      return x;\n    }\n    if (table.getRenderMode() === RENDER_MODE.SCALE) {\n      this.borderX = x;\n      return x;\n    }\n    if (this.getViewMode() === VIEW_MODE.BOUND_OUT) {\n      this.borderX = x;\n      return x;\n    }\n    if (this.getViewMode() === VIEW_MODE.CHANGE_NOT) {\n      this.borderX = x;\n      return x;\n    }\n    const { scroll } = table;\n    let borderX = 0;\n    switch (scroll.type) {\n      case SCROLL_TYPE.H_RIGHT: {\n        const borderView = this.getLineView();\n        const fullScrollView = this.getFullScrollView();\n        borderX = fullScrollView.w - borderView.w;\n        break;\n      }\n      case SCROLL_TYPE.H_LEFT: {\n        borderX = 0;\n        break;\n      }\n    }\n    borderX = x + borderX;\n    this.borderX = borderX;\n    return borderX;\n  }\n\n  /**\n   * 绘制边框 & 网格的Y坐标\n   */\n  getLineY() {\n    if (PlainUtils.isNumber(this.borderY)) {\n      return this.borderY;\n    }\n    const { table } = this;\n    const y = this.getY();\n    if (table.getRenderMode() === RENDER_MODE.RENDER) {\n      this.borderY = y;\n      return y;\n    }\n    if (table.getRenderMode() === RENDER_MODE.SCALE) {\n      this.borderY = y;\n      return y;\n    }\n    if (this.getViewMode() === VIEW_MODE.BOUND_OUT) {\n      this.borderY = y;\n      return y;\n    }\n    if (this.getViewMode() === VIEW_MODE.CHANGE_NOT) {\n      this.borderY = y;\n      return y;\n    }\n    const { scroll } = table;\n    let borderY = 0;\n    switch (scroll.type) {\n      case SCROLL_TYPE.V_BOTTOM: {\n        const borderView = this.getLineView();\n        const fullScrollView = this.getFullScrollView();\n        borderY = fullScrollView.h - borderView.h;\n        break;\n      }\n      case SCROLL_TYPE.V_TOP: {\n        borderY = 0;\n        break;\n      }\n    }\n    borderY = y + borderY;\n    this.borderY = borderY;\n    return borderY;\n  }\n\n  /**\n   * 绘制区域高度\n   * @returns {number}\n   */\n  getHeight() {\n    throw new TypeError('getHeight child impl');\n  }\n\n  /**\n   * 绘制区域宽度\n   * @returns {number}\n   */\n  getWidth() {\n    throw new TypeError('getWidth child impl');\n  }\n\n  /**\n   * 绘制内容的X坐标\n   */\n  getDrawX() {\n    if (PlainUtils.isNumber(this.drawX)) {\n      return this.drawX;\n    }\n    const { table } = this;\n    const x = this.getX();\n    if (table.getRenderMode() === RENDER_MODE.RENDER) {\n      this.drawX = x;\n      return x;\n    }\n    if (table.getRenderMode() === RENDER_MODE.SCALE) {\n      this.drawX = x;\n      return x;\n    }\n    if (this.getViewMode() === VIEW_MODE.BOUND_OUT) {\n      this.drawX = x;\n      return x;\n    }\n    if (this.getViewMode() === VIEW_MODE.CHANGE_NOT) {\n      this.drawX = x;\n      return x;\n    }\n    const { scroll } = table;\n    const scrollView = this.getScrollView();\n    const fullScrollView = this.getFullScrollView();\n    let drawX = 0;\n    switch (scroll.type) {\n      case SCROLL_TYPE.H_RIGHT: {\n        drawX = fullScrollView.w - scrollView.w;\n        break;\n      }\n      case SCROLL_TYPE.H_LEFT: {\n        drawX = 0;\n        break;\n      }\n    }\n    drawX = x + drawX;\n    this.drawX = drawX;\n    return drawX;\n  }\n\n  /**\n   * 绘制内容的Y坐标\n   */\n  getDrawY() {\n    if (PlainUtils.isNumber(this.drawY)) {\n      return this.drawY;\n    }\n    const { table } = this;\n    const y = this.getY();\n    if (table.getRenderMode() === RENDER_MODE.RENDER) {\n      this.drawY = y;\n      return y;\n    }\n    if (table.getRenderMode() === RENDER_MODE.SCALE) {\n      this.drawY = y;\n      return y;\n    }\n    if (this.getViewMode() === VIEW_MODE.BOUND_OUT) {\n      this.drawY = y;\n      return y;\n    }\n    if (this.getViewMode() === VIEW_MODE.CHANGE_NOT) {\n      this.drawY = y;\n      return y;\n    }\n    const { scroll } = table;\n    const scrollView = this.getScrollView();\n    const fullScrollView = this.getFullScrollView();\n    let drawY = 0;\n    switch (scroll.type) {\n      case SCROLL_TYPE.V_BOTTOM: {\n        drawY = fullScrollView.h - scrollView.h;\n        break;\n      }\n      case SCROLL_TYPE.V_TOP: {\n        drawY = 0;\n        break;\n      }\n    }\n    drawY = y + drawY;\n    this.drawY = drawY;\n    return drawY;\n  }\n\n  /**\n   * 绘制区域的X坐标\n   * @returns {number}\n   */\n  getX() {\n    throw new TypeError('getX child impl');\n  }\n\n  /**\n   * 绘制区域Y坐标\n   * @returns {number}\n   */\n  getY() {\n    throw new TypeError('getY child impl');\n  }\n\n  /**\n   * 视图模式\n   * @return {symbol}\n   */\n  getViewMode() {\n    throw new TypeError('getViewMode child impl');\n  }\n\n  /**\n   * 重置变量区\n   */\n  reset() {\n    this.width = null;\n    this.height = null;\n    this.x = null;\n    this.y = null;\n    this.drawX = null;\n    this.drawY = null;\n    this.mapOriginX = null;\n    this.mapOriginY = null;\n    this.mapTargetX = null;\n    this.mapTargetY = null;\n    this.mapWidth = null;\n    this.mapHeight = null;\n    this.fullScrollView = null;\n    this.scrollView = null;\n    this.borderView = null;\n    this.borderX = null;\n    this.borderY = null;\n    this.viewMode = null;\n  }\n\n  /**\n   * 绘制贴图的高度\n   * @returns {number}\n   */\n  getMapHeight() {\n    if (PlainUtils.isNumber(this.mapHeight)) {\n      return this.mapHeight;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { scroll } = table;\n    let mapHeight = this.getHeight();\n    switch (scroll.type) {\n      case SCROLL_TYPE.V_BOTTOM: {\n        const leaveView = xTableAreaView.getLeaveView();\n        mapHeight -= leaveView.h;\n        break;\n      }\n      case SCROLL_TYPE.V_TOP: {\n        const enterView = xTableAreaView.getEnterView();\n        mapHeight -= enterView.h;\n        break;\n      }\n    }\n    this.mapHeight = mapHeight;\n    return mapHeight;\n  }\n\n  /**\n   * 绘制贴图的宽度\n   * @returns {number}\n   */\n  getMapWidth() {\n    if (PlainUtils.isNumber(this.mapWidth)) {\n      return this.mapWidth;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { scroll } = table;\n    let mapWidth = this.getWidth();\n    switch (scroll.type) {\n      case SCROLL_TYPE.H_RIGHT: {\n        const leaveView = xTableAreaView.getLeaveView();\n        mapWidth -= leaveView.w;\n        break;\n      }\n      case SCROLL_TYPE.H_LEFT: {\n        const enterView = xTableAreaView.getEnterView();\n        mapWidth -= enterView.w;\n        break;\n      }\n    }\n    this.mapWidth = mapWidth;\n    return mapWidth;\n  }\n\n  /**\n   * 清空重新绘制区域\n   */\n  drawClear() {\n    const { table } = this;\n    const {\n      scroll, draw, settings,\n    } = table;\n    const viewMode = this.getViewMode();\n    const renderMode = table.getRenderMode();\n    const dx = this.getDrawX();\n    const dy = this.getDrawY();\n    draw.attr({\n      fillStyle: settings.table.background,\n    });\n    if (renderMode === RENDER_MODE.SCROLL) {\n      switch (viewMode) {\n        case VIEW_MODE.CHANGE_NOT:\n        case VIEW_MODE.STATIC:\n        case VIEW_MODE.BOUND_OUT: {\n          const height = this.getHeight();\n          const width = this.getWidth();\n          draw.fillRect(dx, dy, width, height);\n          break;\n        }\n        case VIEW_MODE.CHANGE_ADD: {\n          switch (scroll.type) {\n            case SCROLL_TYPE.V_BOTTOM: {\n              const fullScrollView = this.getFullScrollView();\n              const scrollView = this.getScrollView();\n              const height = table.visualHeight() - (fullScrollView.h - scrollView.h);\n              const width = this.getWidth();\n              draw.fillRect(dx, dy, width, height);\n              break;\n            }\n            case SCROLL_TYPE.V_TOP: {\n              const scrollView = this.getScrollView();\n              const height = scrollView.h;\n              const width = this.getWidth();\n              draw.fillRect(dx, dy, width, height);\n              break;\n            }\n            case SCROLL_TYPE.H_LEFT: {\n              const scrollView = this.getScrollView();\n              const height = this.getHeight();\n              const width = scrollView.w;\n              draw.fillRect(dx, dy, width, height);\n              break;\n            }\n            case SCROLL_TYPE.H_RIGHT: {\n              const fullScrollView = this.getFullScrollView();\n              const scrollView = this.getScrollView();\n              const height = this.getHeight();\n              const width = table.visualWidth() - (fullScrollView.w - scrollView.w);\n              draw.fillRect(dx, dy, width, height);\n              break;\n            }\n          }\n          break;\n        }\n      }\n    } else if (RENDER_MODE.RENDER) {\n      const height = this.getHeight();\n      const width = this.getWidth();\n      draw.fillRect(dx, dy, width, height);\n    }\n  }\n\n  /**\n   * 绘制贴图\n   */\n  drawMap() {\n    const { table } = this;\n    const renderMode = table.getRenderMode();\n    const viewMode = this.getViewMode();\n    if (viewMode === VIEW_MODE.CHANGE_ADD && renderMode === RENDER_MODE.SCROLL) {\n      const { draw } = table;\n      const mapWidth = this.getMapWidth();\n      const mapHeight = this.getMapHeight();\n      const ox = this.getMapOriginX();\n      const oy = this.getMapOriginY();\n      const tx = this.getMapTargetX();\n      const ty = this.getMapTargetY();\n      draw.copyImage(ox, oy, mapWidth, mapHeight,\n        tx, ty, mapWidth, mapHeight);\n    }\n  }\n\n}\n\nclass XTableContentUI extends XTableUI {\n\n  /**\n   * 加载绘制静态小图标\n   * @param rect\n   * @param ri\n   * @param ci\n   * @param view\n   */\n  drawStaticXIcon(rect, ri, ci, view) {\n    const { table } = this;\n    const { draw, staticCellIcon } = table;\n    const icons = staticCellIcon.getIcon(ri, ci);\n    if (icons) {\n      const x = this.getX();\n      const y = this.getY();\n      rect.x += x;\n      rect.y += y;\n      for (let i = 0; i < icons.length; i += 1) {\n        const icon = icons[i];\n        icon.loadImage({\n          load: () => {\n            if (view.equals(this.getFullScrollView())) {\n              icon.drawIcon({\n                rect,\n                draw,\n              });\n            }\n          },\n          sync: () => {\n            icon.drawIcon({\n              rect,\n              draw,\n            });\n          },\n        });\n      }\n    }\n  }\n\n  /**\n   * 加载绘制固定小图标\n   * @param rect\n   * @param ri\n   * @param ci\n   * @param view\n   */\n  drawFixedXIcon(rect, ri, ci, view) {\n    const { table } = this;\n    const { draw, fixedCellIcon } = table;\n    const icons = fixedCellIcon.getIcon(ri, ci);\n    if (icons) {\n      const x = this.getX();\n      const y = this.getY();\n      rect.x += x;\n      rect.y += y;\n      for (let i = 0; i < icons.length; i += 1) {\n        const icon = icons[i];\n        icon.loadImage({\n          load: () => {\n            if (view.equals(this.getFullScrollView())) {\n              icon.drawIcon({\n                rect,\n                draw,\n              });\n            }\n          },\n          sync: () => {\n            icon.drawIcon({\n              rect,\n              draw,\n            });\n          },\n        });\n      }\n    }\n  }\n\n  /**\n   * 加载绘制单元格小图标\n   * @param rect\n   * @param cell\n   * @param view\n   */\n  drawCellXIcon(rect, cell, view) {\n    const { table } = this;\n    const { icons } = cell;\n    const { draw } = table;\n    const x = this.getX();\n    const y = this.getY();\n    rect.x += x;\n    rect.y += y;\n    for (let i = 0; i < icons.length; i += 1) {\n      const icon = icons[i];\n      icon.loadImage({\n        load: () => {\n          if (view.equals(this.getFullScrollView())) {\n            icon.drawIcon({\n              rect,\n              draw,\n            });\n          }\n        },\n        sync: () => {\n          icon.drawIcon({\n            rect,\n            draw,\n          });\n        },\n      });\n    }\n  }\n\n  /**\n   * 绘制单元格图标\n   */\n  drawXIcon() {\n    const { table } = this;\n    const { styleCellsHelper } = table;\n    const scrollView = this.getFullScrollView();\n    styleCellsHelper.getCellByViewRange({\n      view: scrollView,\n      cellsINCallback: (row, col, cell, rect) => {\n        const staticRect = rect.clone();\n        const cellRect = rect.clone();\n        this.drawStaticXIcon(staticRect, row, col, scrollView);\n        this.drawCellXIcon(cellRect, cell, scrollView);\n      },\n      loopINCallback: (row, col, rect) => {\n        const fixedRect = rect.clone();\n        this.drawFixedXIcon(fixedRect, row, col, scrollView);\n      },\n      mergeCallback: (row, col, cell, rect, merge) => {\n        const { sri, sci } = merge;\n        const staticRect = rect.clone();\n        const cellRect = rect.clone();\n        this.drawStaticXIcon(staticRect, sri, sci, scrollView);\n        this.drawCellXIcon(cellRect, cell, scrollView);\n      },\n    });\n  }\n\n  /**\n   * 绘制越界文本\n   */\n  drawBoundOutXFont() {\n    const scrollView = this.getScrollView();\n    const drawX = this.getDrawX();\n    const drawY = this.getDrawY();\n    const { table } = this;\n    const { draw, cols, textCellsHelper, textFont } = table;\n    // 左边区域\n    const lView = scrollView.clone();\n    lView.sci = 0;\n    lView.eci = scrollView.sci - 1;\n    if (lView.eci > -1) {\n      let max;\n      draw.offset(drawX, drawY);\n      textCellsHelper.getCellByViewRange({\n        reverseCols: true,\n        view: lView,\n        newCol: (col) => {\n          max += cols.getWidth(col);\n        },\n        newRow: () => {\n          max = 0;\n        },\n        cellsINCallback: (row, col, cell, rect, overflow) => {\n          const { text } = cell;\n          if (PlainUtils.isBlank(text)) {\n            return TEXT_BREAK_LOOP.CONTINUE;\n          }\n          const { fontAttr } = cell;\n          const { align, textWrap, direction } = fontAttr;\n          const allowTextAlign = align === BaseFont.ALIGN.left || align === BaseFont.ALIGN.center;\n          const allowTextWrap = textWrap === BaseFont.TEXT_WRAP.OVER_FLOW;\n          const allowDirection = direction === BaseFont.TEXT_DIRECTION.ANGLE;\n          if (allowTextAlign && (allowTextWrap || allowDirection)) {\n            const size = table.getCellContentBoundOutWidth(row, col);\n            if (size === 0 || size > max) {\n              const builder = textFont.getBuilder();\n              builder.setDraw(draw);\n              builder.setRect(rect);\n              builder.setCell(cell);\n              builder.setRow(row);\n              builder.setCol(col);\n              builder.setOverFlow(overflow);\n              const font = builder.build();\n              const result = font.drawingFont();\n              cell.setContentWidth(result.width);\n              cell.setLeftSdistWidth(result.leftSdist);\n              cell.setRightSdistWidth(result.rightSdist);\n            }\n          }\n          return table.hasAngleCell(row)\n            ? TEXT_BREAK_LOOP.CONTINUE\n            : TEXT_BREAK_LOOP.ROW;\n        },\n        mergeCallback: row => (table.hasAngleCell(row)\n          ? TEXT_BREAK_LOOP.CONTINUE\n          : TEXT_BREAK_LOOP.ROW),\n      });\n      draw.offset(0, 0);\n    }\n    // 右边区域\n    const rView = scrollView.clone();\n    rView.sci = scrollView.eci + 1;\n    rView.eci = cols.len - 1;\n    if (rView.sci < cols.len) {\n      let max;\n      draw.offset(drawX + scrollView.w, drawY);\n      textCellsHelper.getCellByViewRange({\n        startX: scrollView.w,\n        view: rView,\n        newCol: (col) => {\n          max += cols.getWidth(col);\n        },\n        newRow: () => {\n          max = 0;\n        },\n        cellsINCallback: (row, col, cell, rect, overflow) => {\n          const { text } = cell;\n          if (PlainUtils.isBlank(text)) {\n            return TEXT_BREAK_LOOP.CONTINUE;\n          }\n          const { fontAttr } = cell;\n          const { align, textWrap, direction } = fontAttr;\n          const allowTextAlign = align === BaseFont.ALIGN.right || align === BaseFont.ALIGN.center;\n          const allowDirection = direction === BaseFont.TEXT_DIRECTION.ANGLE;\n          const allowTextWrap = textWrap === BaseFont.TEXT_WRAP.OVER_FLOW;\n          if (allowTextAlign && (allowTextWrap || allowDirection)) {\n            const size = table.getCellContentBoundOutWidth(row, col);\n            if (size === 0 || size > max) {\n              const builder = textFont.getBuilder();\n              builder.setDraw(draw);\n              builder.setRect(rect);\n              builder.setCell(cell);\n              builder.setRow(row);\n              builder.setCol(col);\n              builder.setOverFlow(overflow);\n              const font = builder.build();\n              const result = font.drawingFont();\n              cell.setContentWidth(result.width);\n              cell.setLeftSdistWidth(result.leftSdist);\n              cell.setRightSdistWidth(result.rightSdist);\n            }\n          }\n          return table.hasAngleCell(row)\n            ? TEXT_BREAK_LOOP.CONTINUE\n            : TEXT_BREAK_LOOP.ROW;\n        },\n        mergeCallback: row => (table.hasAngleCell(row)\n          ? TEXT_BREAK_LOOP.CONTINUE\n          : TEXT_BREAK_LOOP.ROW),\n      });\n      draw.offset(0, 0);\n    }\n  }\n\n  /**\n   * 绘制越界边框\n   */\n  drawBoundOutGridBorder() {\n    const scrollView = this.getScrollView();\n    const drawX = this.getDrawX();\n    const drawY = this.getDrawY();\n    const { table } = this;\n    const { draw, cols, line } = table;\n    // 左边区域\n    const lView = scrollView.clone();\n    lView.sci = 0;\n    lView.eci = scrollView.sci - 1;\n    if (lView.eci > -1) {\n      const offset = cols.rectRangeSumWidth(lView);\n      const { alResult } = XLinePlainGenerator.run({\n        scrollView: lView,\n        foldOnOff: true,\n        table,\n        model: XLinePlainGenerator.MODEL.OUT_ANGLE_BAR_L,\n      });\n      draw.offset(drawX - offset, drawY);\n      alResult.tLine.forEach((item) => {\n        const { borderAttr, row, col } = item;\n        const { top } = borderAttr;\n        const { color, widthType, type } = top;\n        line.setType(type);\n        line.setWidthType(widthType);\n        line.setColor(color);\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'top');\n      });\n      alResult.lLine.forEach((item) => {\n        const { borderAttr, row, col } = item;\n        const { left } = borderAttr;\n        const { color, widthType, type } = left;\n        line.setType(type);\n        line.setWidthType(widthType);\n        line.setColor(color);\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'left');\n      });\n      alResult.rLine.forEach((item) => {\n        const { borderAttr, row, col } = item;\n        const { right } = borderAttr;\n        const { color, widthType, type } = right;\n        line.setType(type);\n        line.setWidthType(widthType);\n        line.setColor(color);\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'right');\n      });\n      alResult.bLine.forEach((item) => {\n        const { borderAttr, row, col } = item;\n        const { bottom } = borderAttr;\n        const { color, widthType, type } = bottom;\n        line.setType(type);\n        line.setWidthType(widthType);\n        line.setColor(color);\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'bottom');\n      });\n      draw.offset(0, 0);\n    }\n    // 右边区域\n    const rView = scrollView.clone();\n    rView.sci = scrollView.eci + 1;\n    rView.eci = cols.len - 1;\n    if (rView.sci < cols.len) {\n      const offset = scrollView.w;\n      const { arResult } = XLinePlainGenerator.run({\n        scrollView: rView,\n        foldOnOff: true,\n        table,\n        model: XLinePlainGenerator.MODEL.OUT_ANGLE_BAR_R,\n      });\n      draw.offset(drawX + offset, drawY);\n      arResult.tLine.forEach((item) => {\n        const { borderAttr, row, col } = item;\n        const { top } = borderAttr;\n        const { color, widthType, type } = top;\n        line.setType(type);\n        line.setWidthType(widthType);\n        line.setColor(color);\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'top');\n      });\n      arResult.lLine.forEach((item) => {\n        const { borderAttr, row, col } = item;\n        const { left } = borderAttr;\n        const { color, widthType, type } = left;\n        line.setType(type);\n        line.setWidthType(widthType);\n        line.setColor(color);\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'left');\n      });\n      arResult.rLine.forEach((item) => {\n        const { borderAttr, row, col } = item;\n        const { right } = borderAttr;\n        const { color, widthType, type } = right;\n        line.setType(type);\n        line.setWidthType(widthType);\n        line.setColor(color);\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'right');\n      });\n      arResult.bLine.forEach((item) => {\n        const { borderAttr, row, col } = item;\n        const { bottom } = borderAttr;\n        const { color, widthType, type } = bottom;\n        line.setType(type);\n        line.setWidthType(widthType);\n        line.setColor(color);\n        line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'bottom');\n      });\n      draw.offset(0, 0);\n    }\n  }\n\n  /**\n   * 绘制越界背景\n   */\n  drawBoundOutBackground() {\n    const scrollView = this.getScrollView();\n    const drawX = this.getDrawX();\n    const drawY = this.getDrawY();\n    const { table } = this;\n    const { draw, cols, styleCellsHelper } = table;\n    // 左边区域\n    const lView = scrollView.clone();\n    lView.sci = 0;\n    lView.eci = scrollView.sci - 1;\n    if (lView.eci > -1) {\n      let max = 0;\n      draw.offset(drawX, drawY);\n      styleCellsHelper.getCellByViewRange({\n        reverseCols: true,\n        view: lView,\n        newCol: (col) => {\n          max += cols.getWidth(col);\n        },\n        newRow: () => {\n          max = 0;\n        },\n        cellsINCallback: (row, col, cell, rect) => {\n          if (table.hasAngleCell(row)) {\n            if (table.isAngleBarCell(row, col)) {\n              const size = table.getCellStyleBoundOutWidth(row, col);\n              const { fontAttr } = cell;\n              const { angle } = fontAttr;\n              if (size > max && angle > 0) {\n                const { background } = cell;\n                const box = new Box({\n                  draw, background,\n                });\n                const offset = table.getSdistWidth(row, col);\n                const { x, y, width, height } = rect;\n                const tl = new Point(x + offset, y);\n                const tr = new Point(x + width + offset, y);\n                const br = new Point(x + width, y + height);\n                const bl = new Point(x, y + height);\n                const path = new Path({\n                  points: [tl, tr, br, bl],\n                });\n                box.setPath({ path });\n                box.render();\n              }\n            }\n            return STYLE_BREAK_LOOP.CONTINUE;\n          }\n          return STYLE_BREAK_LOOP.ROW;\n        },\n        mergeCallback: row => (table.hasAngleCell(row)\n          ? STYLE_BREAK_LOOP.CONTINUE\n          : STYLE_BREAK_LOOP.ROW),\n      });\n      draw.offset(0, 0);\n    }\n    // 右边区域\n    const rView = scrollView.clone();\n    rView.sci = scrollView.eci + 1;\n    rView.eci = cols.len - 1;\n    if (rView.sci < cols.len) {\n      let max = 0;\n      draw.offset(drawX + scrollView.w, drawY);\n      styleCellsHelper.getCellByViewRange({\n        view: rView,\n        newCol: (col) => {\n          max += cols.getWidth(col);\n        },\n        newRow: () => {\n          max = 0;\n        },\n        cellsINCallback: (row, col, cell, rect) => {\n          if (table.hasAngleCell(row)) {\n            if (table.isAngleBarCell(row, col)) {\n              const size = table.getCellStyleBoundOutWidth(row, col);\n              const { fontAttr } = cell;\n              const { angle } = fontAttr;\n              if (size > max && angle < 0) {\n                const { background } = cell;\n                const box = new Box({\n                  draw, background,\n                });\n                const offset = -table.getSdistWidth(row, col);\n                const { x, y, width, height } = rect;\n                const tl = new Point(x + offset, y);\n                const tr = new Point(x + width + offset, y);\n                const br = new Point(x + width, y + height);\n                const bl = new Point(x, y + height);\n                const path = new Path({\n                  points: [tl, tr, br, bl],\n                });\n                box.setPath({ path });\n                box.render();\n              }\n            }\n            return STYLE_BREAK_LOOP.CONTINUE;\n          }\n          return STYLE_BREAK_LOOP.ROW;\n        },\n        mergeCallback: row => (table.hasAngleCell(row)\n          ? STYLE_BREAK_LOOP.CONTINUE\n          : STYLE_BREAK_LOOP.ROW),\n      });\n      draw.offset(0, 0);\n    }\n  }\n\n  /**\n   * 绘制单元格文本\n   */\n  drawXFont() {\n    const scrollView = this.getScrollView();\n    const drawX = this.getDrawX();\n    const drawY = this.getDrawY();\n    const { table } = this;\n    const {\n      draw, textCellsHelper, textFont,\n    } = table;\n    draw.offset(drawX, drawY);\n    textCellsHelper.getCellByViewRange({\n      view: scrollView,\n      cellsINCallback: (row, col, cell, rect, overflow) => {\n        const builder = textFont.getBuilder();\n        builder.setDraw(draw);\n        builder.setCell(cell);\n        builder.setRect(rect);\n        builder.setRow(row);\n        builder.setCol(col);\n        builder.setOverFlow(overflow);\n        const font = builder.build();\n        const result = font.drawingFont();\n        cell.setContentWidth(result.width);\n        cell.setLeftSdistWidth(result.leftSdist);\n        cell.setRightSdistWidth(result.rightSdist);\n      },\n      mergeCallback: (row, col, cell, rect) => {\n        const builder = textFont.getBuilder();\n        builder.setDraw(draw);\n        builder.setRect(rect);\n        builder.setCell(cell);\n        builder.setRow(row);\n        builder.setCol(col);\n        builder.setOverFlow(rect);\n        const font = builder.build();\n        const result = font.drawingFont();\n        cell.setContentWidth(result.width);\n        cell.setLeftSdistWidth(result.leftSdist);\n        cell.setRightSdistWidth(result.rightSdist);\n      },\n    });\n    draw.offset(0, 0);\n  }\n\n  /**\n   * 绘制边框\n   */\n  drawGridBorder() {\n    const borderView = this.getLineView();\n    const borderX = this.getLineX();\n    const borderY = this.getLineY();\n    const { table } = this;\n    const { settings, draw, grid, line, optimizeEnable } = table;\n    draw.offset(borderX, borderY);\n    const { gResult, bResult, aResult } = XLinePlainGenerator.run({\n      scrollView: borderView,\n      foldOnOff: true,\n      optimize: optimizeEnable,\n      table,\n      model: settings.table.showGrid\n        ? XLinePlainGenerator.MODEL.ALL\n        : XLinePlainGenerator.MODEL.BORDER,\n    });\n    // 网格\n    if (gResult) {\n      gResult.bLine.forEach((item) => {\n        grid.horizonLine(item.sx, item.sy, item.ex, item.ey);\n      });\n      gResult.rLine.forEach((item) => {\n        grid.verticalLine(item.sx, item.sy, item.ex, item.ey);\n      });\n    }\n    // 边框\n    bResult.tLine.forEach((item) => {\n      const { borderAttr, row, col } = item;\n      const { top } = borderAttr;\n      const { color, widthType, type } = top;\n      line.setType(type);\n      line.setWidthType(widthType);\n      line.setColor(color);\n      line.horizonLine(item.sx, item.sy, item.ex, item.ey, row, col, 'top');\n    });\n    bResult.lLine.forEach((item) => {\n      const { borderAttr, row, col } = item;\n      const { left } = borderAttr;\n      const { color, widthType, type } = left;\n      line.setType(type);\n      line.setWidthType(widthType);\n      line.setColor(color);\n      line.verticalLine(item.sx, item.sy, item.ex, item.ey, row, col, 'left');\n    });\n    bResult.rLine.forEach((item) => {\n      const { borderAttr, row, col } = item;\n      const { right } = borderAttr;\n      const { color, widthType, type } = right;\n      line.setType(type);\n      line.setWidthType(widthType);\n      line.setColor(color);\n      line.verticalLine(item.sx, item.sy, item.ex, item.ey, row, col, 'right');\n    });\n    bResult.bLine.forEach((item) => {\n      const { borderAttr, row, col } = item;\n      const { bottom } = borderAttr;\n      const { color, widthType, type } = bottom;\n      line.setType(type);\n      line.setWidthType(widthType);\n      line.setColor(color);\n      line.horizonLine(item.sx, item.sy, item.ex, item.ey, row, col, 'bottom');\n    });\n    // 旋转\n    aResult.tLine.forEach((item) => {\n      const { borderAttr, row, col } = item;\n      const { top } = borderAttr;\n      const { color, widthType, type } = top;\n      line.setType(type);\n      line.setWidthType(widthType);\n      line.setColor(color);\n      line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'top');\n    });\n    aResult.lLine.forEach((item) => {\n      const { borderAttr, row, col } = item;\n      const { left } = borderAttr;\n      const { color, widthType, type } = left;\n      line.setType(type);\n      line.setWidthType(widthType);\n      line.setColor(color);\n      line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'left');\n    });\n    aResult.rLine.forEach((item) => {\n      const { borderAttr, row, col } = item;\n      const { right } = borderAttr;\n      const { color, widthType, type } = right;\n      line.setType(type);\n      line.setWidthType(widthType);\n      line.setColor(color);\n      line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'right');\n    });\n    aResult.bLine.forEach((item) => {\n      const { borderAttr, row, col } = item;\n      const { bottom } = borderAttr;\n      const { color, widthType, type } = bottom;\n      line.setType(type);\n      line.setWidthType(widthType);\n      line.setColor(color);\n      line.tiltingLine(item.sx, item.sy, item.ex, item.ey, row, col, 'bottom');\n    });\n    draw.offset(0, 0);\n  }\n\n  /**\n   * 绘制背景\n   */\n  drawBackground() {\n    const scrollView = this.getScrollView();\n    const { table } = this;\n    const drawX = this.getDrawX();\n    const drawY = this.getDrawY();\n    const {\n      draw, styleCellsHelper,\n    } = table;\n    draw.offset(drawX, drawY);\n    styleCellsHelper.getCellByViewRange({\n      view: scrollView,\n      cellsINCallback: (row, col, cell, rect) => {\n        if (table.hasAngleCell(row)) {\n          if (table.isAngleBarCell(row, col)) {\n            return;\n          }\n        }\n        const { background } = cell;\n        const box = new Box({\n          draw, background, rect,\n        });\n        box.render();\n      },\n      mergeCallback: (row, col, cell, rect) => {\n        const { background } = cell;\n        const box = new Box({\n          draw, rect, background,\n        });\n        box.render();\n      },\n    });\n    styleCellsHelper.getCellByViewRange({\n      view: scrollView,\n      cellsINCallback: (row, col, cell, rect) => {\n        if (table.hasAngleCell(row)) {\n          if (table.isAngleBarCell(row, col)) {\n            const { background } = cell;\n            const box = new Box({\n              draw, background,\n            });\n            const { fontAttr } = cell;\n            const { angle } = fontAttr;\n            const offset = angle > 0\n              ? table.getSdistWidth(row, col)\n              : -table.getSdistWidth(row, col);\n            const { x, y, width, height } = rect;\n            const tl = new Point(x + offset, y);\n            const tr = new Point(x + width + offset, y);\n            const br = new Point(x + width, y + height);\n            const bl = new Point(x, y + height);\n            const path = new Path({\n              points: [tl, tr, br, bl],\n            });\n            box.setPath({ path });\n            box.render();\n          }\n        }\n      },\n    });\n    draw.offset(0, 0);\n  }\n\n  /**\n   * 渲染界面\n   */\n  render() {\n    const { table } = this;\n    const renderMode = table.getRenderMode();\n    const viewMode = this.getViewMode();\n    if (viewMode === VIEW_MODE.STATIC && renderMode === RENDER_MODE.SCROLL) {\n      return;\n    }\n    // 渲染贴图\n    this.drawMap();\n    // 清空画布\n    this.drawClear();\n    // 裁剪界面\n    const scrollView = this.getScrollView();\n    const x = this.getDrawX();\n    const y = this.getDrawY();\n    const width = scrollView.w;\n    const height = scrollView.h;\n    const { draw } = table;\n    const crop = new Crop({\n      rect: new Rect({\n        x,\n        y,\n        width,\n        height,\n      }),\n      draw,\n    });\n    crop.open();\n    // 绘制背景\n    this.drawBackground();\n    this.drawBoundOutBackground();\n    // 绘制文字\n    this.drawXFont();\n    this.drawBoundOutXFont();\n    // 绘制边框\n    this.drawGridBorder();\n    this.drawBoundOutGridBorder();\n    // 绘制小图标\n    this.drawXIcon();\n    crop.close();\n  }\n\n}\n\nclass XTableIndexUI extends XTableUI {\n\n  /**\n   * 绘制网格\n   */\n  drawGridBorder() {\n    throw new TypeError('drawGrid child impl');\n  }\n\n  /**\n   * 绘制背景颜色\n   */\n  drawColor() {\n    throw new TypeError('drawColor child impl');\n  }\n\n  /**\n   * 绘制文字\n   */\n  drawFont() {\n    throw new TypeError('drawFont child impl');\n  }\n\n  /**\n   * 渲染界面\n   */\n  render() {\n    const { table } = this;\n    const renderMode = table.getRenderMode();\n    const viewMode = this.getViewMode();\n    if (viewMode === VIEW_MODE.STATIC && renderMode === RENDER_MODE.SCROLL) {\n      return;\n    }\n    this.drawMap();\n    this.drawClear();\n    this.drawColor();\n    this.drawFont();\n    this.drawGridBorder();\n  }\n\n}\n\nclass XTableLeftIndexUI extends XTableIndexUI {\n\n  /**\n   * 绘制网格\n   */\n  drawGridBorder() {\n    const borderView = this.getLineView();\n    const borderX = this.getLineX();\n    const borderY = this.getLineY();\n    const { table } = this;\n    const { draw, indexGrid } = table;\n    const { iResult } = XLinePlainGenerator.run({\n      scrollView: borderView,\n      foldOnOff: false,\n      model: XLinePlainGenerator.MODEL.INDEX,\n      table,\n      getWidth: () => table.index.getWidth(),\n    });\n    draw.offset(borderX, borderY);\n    iResult.bLine.forEach((item) => {\n      indexGrid.horizonLine(item.sx, item.sy, item.ex, item.ey);\n    });\n    iResult.rLine.forEach((item) => {\n      indexGrid.verticalLine(item.sx, item.sy, item.ex, item.ey);\n    });\n    draw.offset(0, 0);\n  }\n\n  /**\n   * 绘制背景\n   */\n  drawColor() {\n    const dx = this.getDrawX();\n    const dy = this.getDrawY();\n    const scrollView = this.getScrollView();\n    const height = scrollView.h;\n    const width = this.getWidth();\n    const { table } = this;\n    const {\n      draw, index,\n    } = table;\n    draw.offset(dx, dy);\n    draw.attr({\n      fillStyle: index.getBackground(),\n    });\n    draw.fillRect(0, 0, width, height);\n    draw.offset(0, 0);\n  }\n\n  /**\n   *  绘制文字\n   */\n  drawFont() {\n    const dx = this.getDrawX();\n    const dy = this.getDrawY();\n    const scrollView = this.getScrollView();\n    const width = this.getWidth();\n    const { table } = this;\n    const {\n      draw, rows, index,\n    } = table;\n    const { sri, eri } = scrollView;\n    draw.offset(dx, dy);\n    draw.attr({\n      textAlign: 'center',\n      textBaseline: 'middle',\n      font: `${index.getSize()}px Arial`,\n      fillStyle: index.getColor(),\n    });\n    rows.eachHeight(sri, eri, (i, ch, y) => {\n      draw.fillText(i + 1, width / 2, y + (ch / 2));\n    });\n    draw.offset(0, 0);\n  }\n\n}\n\nclass XTableTopIndexUI extends XTableIndexUI {\n\n  /**\n   * 绘制网格\n   */\n  drawGridBorder() {\n    const borderView = this.getLineView();\n    const borderX = this.getLineX();\n    const borderY = this.getLineY();\n    const { table } = this;\n    const { draw, indexGrid } = table;\n    const { iResult } = XLinePlainGenerator.run({\n      scrollView: borderView,\n      foldOnOff: false,\n      model: XLinePlainGenerator.MODEL.INDEX,\n      table,\n      getHeight: () => table.index.getHeight(),\n    });\n    draw.offset(borderX, borderY);\n    iResult.bLine.forEach((item) => {\n      indexGrid.horizonLine(item.sx, item.sy, item.ex, item.ey);\n    });\n    iResult.rLine.forEach((item) => {\n      indexGrid.verticalLine(item.sx, item.sy, item.ex, item.ey);\n    });\n    draw.offset(0, 0);\n  }\n\n  /**\n   * 绘制背景\n   */\n  drawColor() {\n    const { table } = this;\n    const {\n      draw, index,\n    } = table;\n    const scrollView = this.getScrollView();\n    const dx = this.getDrawX();\n    const dy = this.getDrawY();\n    const height = this.getHeight();\n    const width = scrollView.w;\n    draw.offset(dx, dy);\n    draw.attr({\n      fillStyle: index.getBackground(),\n    });\n    draw.fillRect(0, 0, width, height);\n    draw.offset(0, 0);\n  }\n\n  /**\n   *  绘制文字\n   */\n  drawFont() {\n    const dx = this.getDrawX();\n    const dy = this.getDrawY();\n    const scrollView = this.getScrollView();\n    const height = this.getHeight();\n    const { table } = this;\n    const {\n      draw, cols, index,\n    } = table;\n    const { sci, eci } = scrollView;\n    draw.offset(dx, dy);\n    draw.attr({\n      textAlign: 'center',\n      textBaseline: 'middle',\n      font: `${index.getSize()}px Arial`,\n      fillStyle: index.getColor(),\n    });\n    cols.eachWidth(sci, eci, (i, cw, x) => {\n      draw.fillText(PlainUtils.stringAt(i), x + (cw / 2), height / 2);\n    });\n    draw.offset(0, 0);\n  }\n\n}\n\n// ============================ 表格冻结区域内容绘制 =============================\n\nclass XTableFrozenLeftIndex extends XTableLeftIndexUI {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { index } = table;\n    const width = index.getWidth();\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const height = xFixedMeasure.getHeight();\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const x = 0;\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { index } = table;\n    const y = index.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const {\n      rows, cols, xFixedView,\n    } = table;\n    const fixedView = xFixedView.getFixedView();\n    const view = new RectRange(fixedView.sri, 0, fixedView.eri, 0);\n    view.w = cols.rectRangeSumWidth(view);\n    view.h = rows.rectRangeSumHeight(view);\n    this.scrollView = view;\n    return view.clone();\n  }\n\n  getFullScrollView() {\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\n      return this.fullScrollView.clone();\n    }\n    const fullScrollView = this.getScrollView();\n    this.fullScrollView = fullScrollView;\n    return fullScrollView.clone();\n  }\n\n  getViewMode() {\n    this.viewMode = VIEW_MODE.STATIC;\n    return VIEW_MODE.STATIC;\n  }\n\n  render() {\n    const { table } = this;\n    const renderMode = table.getRenderMode();\n    if (renderMode === RENDER_MODE.RENDER || renderMode === RENDER_MODE.SCALE) {\n      super.render();\n    }\n  }\n\n}\n\nclass XTableFrozenContent extends XTableContentUI {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const width = xFixedMeasure.getWidth();\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const height = xFixedMeasure.getHeight();\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { index } = table;\n    const x = index.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { index } = table;\n    const y = index.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const {\n      rows, cols, xFixedView,\n    } = table;\n    const view = xFixedView.getFixedView();\n    view.w = cols.rectRangeSumWidth(view);\n    view.h = rows.rectRangeSumHeight(view);\n    this.scrollView = view;\n    return view.clone();\n  }\n\n  getFullScrollView() {\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\n      return this.fullScrollView.clone();\n    }\n    const fullScrollView = this.getScrollView();\n    this.fullScrollView = fullScrollView;\n    return fullScrollView.clone();\n  }\n\n  getViewMode() {\n    this.viewMode = VIEW_MODE.STATIC;\n    return VIEW_MODE.STATIC;\n  }\n\n  render() {\n    const { table } = this;\n    const renderMode = table.getRenderMode();\n    if (renderMode === RENDER_MODE.RENDER || renderMode === RENDER_MODE.SCALE) {\n      super.render();\n    }\n  }\n\n}\n\nclass XTableFrozenTopIndex extends XTableTopIndexUI {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const width = xFixedMeasure.getWidth();\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { index } = table;\n    const height = index.getHeight();\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { index } = table;\n    const x = index.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const y = 0;\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const {\n      rows, cols, xFixedView,\n    } = table;\n    const fixedView = xFixedView.getFixedView();\n    const view = new RectRange(0, fixedView.sci, 0, fixedView.eci);\n    view.w = cols.rectRangeSumWidth(view);\n    view.h = rows.rectRangeSumHeight(view);\n    this.scrollView = view;\n    return view.clone();\n  }\n\n  getFullScrollView() {\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\n      return this.fullScrollView.clone();\n    }\n    const fullScrollView = this.getScrollView();\n    this.fullScrollView = fullScrollView;\n    return fullScrollView.clone();\n  }\n\n  getViewMode() {\n    this.viewMode = VIEW_MODE.STATIC;\n    return VIEW_MODE.STATIC;\n  }\n\n  render() {\n    const { table } = this;\n    const renderMode = table.getRenderMode();\n    if (renderMode === RENDER_MODE.RENDER || renderMode === RENDER_MODE.SCALE) {\n      super.render();\n    }\n  }\n\n}\n\n// ============================ 表格动态区域内容绘制 =============================\n\nclass XTableLeftIndex extends XTableLeftIndexUI {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { index } = table;\n    const width = index.getWidth();\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const x = 0;\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const y = index.getHeight() + xTop.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { index } = table;\n    const renderMode = table.getRenderMode();\n    const scrollView = xTableAreaView.getScrollView();\n    const enterView = xTableAreaView.getScrollEnterView();\n    const view = PlainUtils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL\n      ? enterView\n      : scrollView;\n    view.sci = 0;\n    view.eci = 0;\n    view.w = index.getWidth();\n    this.scrollView = view;\n    return view.clone();\n  }\n\n  getFullScrollView() {\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\n      return this.fullScrollView.clone();\n    }\n    const { table } = this;\n    const { index } = table;\n    const { xTableAreaView } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    scrollView.sci = 0;\n    scrollView.eci = 0;\n    scrollView.w = index.getWidth();\n    this.fullScrollView = scrollView;\n    return scrollView.clone();\n  }\n\n  getViewMode() {\n    if (PlainUtils.isNotUnDef(this.viewMode)) {\n      return this.viewMode;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { cols } = table;\n    const lastScrollView = xTableAreaView.getLastScrollView();\n    const scrollView = xTableAreaView.getScrollView();\n    if (PlainUtils.isNotUnDef(lastScrollView)) {\n      lastScrollView.sci = 0;\n      lastScrollView.eci = 0;\n      lastScrollView.w = cols.sectionSumWidth(lastScrollView.sci, lastScrollView.eci);\n    }\n    scrollView.sci = 0;\n    scrollView.eci = 0;\n    scrollView.w = cols.sectionSumWidth(scrollView.sci, scrollView.eci);\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\n    this.viewMode = viewMode;\n    return viewMode;\n  }\n\n}\n\nclass XTableLeft extends XTableContentUI {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const width = xFixedMeasure.getWidth();\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { index } = table;\n    const x = index.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const y = index.getHeight() + xTop.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { xFixedView } = table;\n    const { cols } = table;\n    const { xTableAreaView } = table;\n    const renderMode = table.getRenderMode();\n    const fixedView = xFixedView.getFixedView();\n    const scrollView = xTableAreaView.getScrollView();\n    const enterView = xTableAreaView.getScrollEnterView();\n    const view = PlainUtils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL\n      ? enterView\n      : scrollView;\n    view.sci = fixedView.sci;\n    view.eci = fixedView.eci;\n    view.w = cols.sectionSumWidth(view.sci, view.eci);\n    this.scrollView = view;\n    return view.clone();\n  }\n\n  getFullScrollView() {\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\n      return this.fullScrollView.clone();\n    }\n    const { table } = this;\n    const { xFixedView } = table;\n    const { cols } = table;\n    const { xTableAreaView } = table;\n    const fixedView = xFixedView.getFixedView();\n    const scrollView = xTableAreaView.getScrollView();\n    scrollView.sci = fixedView.sci;\n    scrollView.eci = fixedView.eci;\n    scrollView.w = cols.sectionSumWidth(scrollView.sci, scrollView.eci);\n    this.fullScrollView = scrollView;\n    return scrollView.clone();\n  }\n\n  getViewMode() {\n    if (PlainUtils.isNotUnDef(this.viewMode)) {\n      return this.viewMode;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { cols } = table;\n    const { xFixedView } = table;\n    const fixedView = xFixedView.getFixedView();\n    const lastScrollView = xTableAreaView.getLastScrollView();\n    const scrollView = xTableAreaView.getScrollView();\n    if (PlainUtils.isNotUnDef(lastScrollView)) {\n      lastScrollView.sci = fixedView.sci;\n      lastScrollView.eci = fixedView.eci;\n      lastScrollView.w = cols.sectionSumWidth(lastScrollView.sci, lastScrollView.eci);\n    }\n    scrollView.sci = fixedView.sci;\n    scrollView.eci = fixedView.eci;\n    scrollView.w = cols.sectionSumWidth(scrollView.sci, scrollView.eci);\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\n    this.viewMode = viewMode;\n    return viewMode;\n  }\n\n}\n\nclass XTableTopIndex extends XTableTopIndexUI {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { index } = table;\n    const height = index.getHeight();\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const x = index.getWidth() + xLeft.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const y = 0;\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { index } = table;\n    const { xTableAreaView } = table;\n    const renderMode = table.getRenderMode();\n    const scrollView = xTableAreaView.getScrollView();\n    const enterView = xTableAreaView.getScrollEnterView();\n    const view = PlainUtils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL\n      ? enterView\n      : scrollView;\n    view.sri = 0;\n    view.eri = 0;\n    view.h = index.getHeight();\n    this.scrollView = view;\n    return view.clone();\n  }\n\n  getFullScrollView() {\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\n      return this.fullScrollView.clone();\n    }\n    const { table } = this;\n    const { index } = table;\n    const { xTableAreaView } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    scrollView.sri = 0;\n    scrollView.eri = 0;\n    scrollView.h = index.getHeight();\n    this.fullScrollView = scrollView;\n    return scrollView.clone();\n  }\n\n  getViewMode() {\n    if (PlainUtils.isNotUnDef(this.viewMode)) {\n      return this.viewMode;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { rows } = table;\n    const lastScrollView = xTableAreaView.getLastScrollView();\n    const scrollView = xTableAreaView.getScrollView();\n    if (PlainUtils.isNotUnDef(lastScrollView)) {\n      lastScrollView.sri = 0;\n      lastScrollView.eri = 0;\n      lastScrollView.h = rows.sectionSumHeight(lastScrollView.sri, lastScrollView.eri);\n    }\n    scrollView.sri = 0;\n    scrollView.eri = 0;\n    scrollView.h = rows.sectionSumHeight(scrollView.sri, scrollView.eri);\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\n    this.viewMode = viewMode;\n    return viewMode;\n  }\n\n}\n\nclass XTableTop extends XTableContentUI {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const height = xFixedMeasure.getHeight();\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const x = index.getWidth() + xLeft.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { index } = table;\n    const y = index.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { xFixedView } = table;\n    const { rows } = table;\n    const { xTableAreaView } = table;\n    const renderMode = table.getRenderMode();\n    const fixedView = xFixedView.getFixedView();\n    const scrollView = xTableAreaView.getScrollView();\n    const enterView = xTableAreaView.getScrollEnterView();\n    const view = PlainUtils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL\n      ? enterView\n      : scrollView;\n    view.sri = fixedView.sri;\n    view.eri = fixedView.eri;\n    view.h = rows.sectionSumHeight(view.sri, view.eri);\n    this.scrollView = view;\n    return view.clone();\n  }\n\n  getFullScrollView() {\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\n      return this.fullScrollView.clone();\n    }\n    const { table } = this;\n    const { xFixedView } = table;\n    const { rows } = table;\n    const { xTableAreaView } = table;\n    const fixedView = xFixedView.getFixedView();\n    const scrollView = xTableAreaView.getScrollView();\n    scrollView.sri = fixedView.sri;\n    scrollView.eri = fixedView.eri;\n    scrollView.h = rows.sectionSumHeight(scrollView.sri, scrollView.eri);\n    this.fullScrollView = scrollView;\n    return scrollView.clone();\n  }\n\n  getViewMode() {\n    if (PlainUtils.isNotUnDef(this.viewMode)) {\n      return this.viewMode;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { rows } = table;\n    const { xFixedView } = table;\n    const fixedView = xFixedView.getFixedView();\n    const lastScrollView = xTableAreaView.getLastScrollView();\n    const scrollView = xTableAreaView.getScrollView();\n    if (PlainUtils.isNotUnDef(lastScrollView)) {\n      lastScrollView.sri = fixedView.sri;\n      lastScrollView.eri = fixedView.eri;\n      lastScrollView.h = rows.sectionSumHeight(lastScrollView.sci, lastScrollView.eci);\n    }\n    scrollView.sri = fixedView.sri;\n    scrollView.eri = fixedView.eri;\n    scrollView.h = rows.sectionSumHeight(scrollView.sci, scrollView.eci);\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\n    this.viewMode = viewMode;\n    return viewMode;\n  }\n\n}\n\nclass XTableContent extends XTableContentUI {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { index } = table;\n    const { xLeft } = table;\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const x = index.getWidth() + xLeft.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const y = index.getHeight() + xTop.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const renderMode = table.getRenderMode();\n    const scrollView = xTableAreaView.getScrollView();\n    const enterView = xTableAreaView.getScrollEnterView();\n    const view = PlainUtils.isNotUnDef(enterView) && renderMode === RENDER_MODE.SCROLL\n      ? enterView\n      : scrollView;\n    this.scrollView = view;\n    return view.clone();\n  }\n\n  getFullScrollView() {\n    if (PlainUtils.isNotUnDef(this.fullScrollView)) {\n      return this.fullScrollView.clone();\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    this.fullScrollView = scrollView;\n    return scrollView.clone();\n  }\n\n  getViewMode() {\n    if (PlainUtils.isNotUnDef(this.viewMode)) {\n      return this.viewMode;\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const lastScrollView = xTableAreaView.getLastScrollView();\n    const scrollView = xTableAreaView.getScrollView();\n    const viewMode = XTableScrollView.viewMode(lastScrollView, scrollView);\n    this.viewMode = viewMode;\n    return viewMode;\n  }\n\n}\n\n// =============================== XTableStyle ==============================\n\nclass XTableStyle extends Widget {\n\n  /**\n   * xTableScrollView\n   * @param xTableScrollView\n   * @param settings\n   * @param xFixedView\n   * @param xIteratorBuilder\n   * @param scroll\n   */\n  constructor({\n    xTableScrollView,\n    settings,\n    xFixedView,\n    xIteratorBuilder,\n    scroll,\n  }) {\n    super(`${cssPrefix}-table-canvas`, 'canvas');\n    // 表格设置\n    this.settings = settings;\n    // 冻结的视图\n    this.xFixedView = xFixedView;\n    // 滚动的坐标\n    this.scroll = scroll;\n    // 渲染模式\n    this.renderMode = RENDER_MODE.RENDER;\n    // 线段优化\n    this.optimizeEnable = true;\n    // 迭代器\n    this.xIteratorBuilder = xIteratorBuilder;\n    // 表格数据配置\n    this.xTableData = new XTableDataItems(this.settings.data);\n    this.scale = new Scale();\n    this.index = new Code({\n      scaleAdapter: new ScaleAdapter({\n        goto: v => XDraw.srcTransformStylePx(this.scale.goto(v)),\n      }),\n      ...this.settings.index,\n    });\n    this.rows = new Rows({\n      scaleAdapter: new ScaleAdapter({\n        goto: v => XDraw.srcTransformStylePx(this.scale.goto(v)),\n      }),\n      xIteratorBuilder: this.xIteratorBuilder,\n      ...this.settings.rows,\n    });\n    this.cols = new Cols({\n      scaleAdapter: new ScaleAdapter({\n        goto: v => XDraw.srcTransformStylePx(this.scale.goto(v)),\n        back: v => this.scale.back(v),\n      }),\n      xIteratorBuilder: this.xIteratorBuilder,\n      ...this.settings.cols,\n    });\n    this.cells = new Cells({\n      onChange: (ri) => {\n        const row = this.rows.getOrNew(ri);\n        row.reCkHasAngle = true;\n      },\n      table: this,\n      xTableData: this.xTableData,\n      xIteratorBuilder: this.xIteratorBuilder,\n    });\n    this.merges = new XMerges({\n      ...settings.merge,\n      xIteratorBuilder: this.xIteratorBuilder,\n      xTableData: this.xTableData,\n    });\n    // 固定区域测量\n    this.xFixedMeasure = new XFixedMeasure({\n      fixedView: this.xFixedView,\n      cols: this.cols,\n      rows: this.rows,\n    });\n    // 静态单元格图标\n    this.staticCellIcon = new StaticCellIcon({\n      data: [],\n      cells: this.cells,\n      rows: this.rows,\n      cols: this.cols,\n    });\n    // 固定单元格图标\n    this.fixedCellIcon = new FixedCellIcon({\n      data: [],\n      cells: this.cells,\n      rows: this.rows,\n      cols: this.cols,\n    });\n    // 表格视图区域\n    this.xTableAreaView = new XTableHistoryAreaView({\n      xTableScrollView,\n      scroll: this.scroll,\n      rows: this.rows,\n      cols: this.cols,\n    });\n    // 单元格辅助类\n    this.operateCellsHelper = new OperateCellsHelper(this);\n    this.textCellsHelper = new TextCellsHelper(this);\n    this.styleCellsHelper = new StyleCellsHelper(this);\n    // 边框过滤器\n    const lBorderFilter = new XLineIteratorFilter({\n      logic: XLineIteratorFilter.FILTER_LOGIC.AND,\n      stack: [\n        new LBorderShow({ cells: this.cells }),\n      ],\n    });\n    const rBorderFilter = new XLineIteratorFilter({\n      logic: XLineIteratorFilter.FILTER_LOGIC.AND,\n      stack: [\n        new RBorderShow({ cells: this.cells }),\n      ],\n    });\n    const tBorderFilter = new XLineIteratorFilter({\n      logic: XLineIteratorFilter.FILTER_LOGIC.AND,\n      stack: [\n        new TBorderShow({ cells: this.cells }),\n      ],\n    });\n    const bBorderFilter = new XLineIteratorFilter({\n      logic: XLineIteratorFilter.FILTER_LOGIC.AND,\n      stack: [\n        new BBorderShow({ cells: this.cells }),\n      ],\n    });\n    // 绘制资源\n    this.draw = new XDraw(this.el);\n    this.line = new Line(this.draw, {\n      bottomShow: (row, col) => {\n        const result = bBorderFilter.run({\n          row,\n          col,\n        });\n        return result === XLineIteratorFilter.RETURN_TYPE.EXEC;\n      },\n      topShow: (row, col) => {\n        const result = tBorderFilter.run({\n          row,\n          col,\n        });\n        return result === XLineIteratorFilter.RETURN_TYPE.EXEC;\n      },\n      leftShow: (row, col) => {\n        const result = lBorderFilter.run({\n          row,\n          col,\n        });\n        return result === XLineIteratorFilter.RETURN_TYPE.EXEC;\n      },\n      rightShow: (row, col) => {\n        const result = rBorderFilter.run({\n          row,\n          col,\n        });\n        return result === XLineIteratorFilter.RETURN_TYPE.EXEC;\n      },\n      iFMerge: (row, col) => PlainUtils.isNotEmptyObject(this.merges.getFirstIncludes(row, col)),\n      iFMergeFirstRow: (row, col) => this.merges.getFirstIncludes(row, col).sri === row,\n      iFMergeLastRow: (row, col) => this.merges.getFirstIncludes(row, col).eri === row,\n      iFMergeFirstCol: (row, col) => this.merges.getFirstIncludes(row, col).sci === col,\n      iFMergeLastCol: (row, col) => this.merges.getFirstIncludes(row, col).eci === col,\n    });\n    this.indexGrid = new Grid(this.draw, {\n      color: this.index.getGridColor(),\n    });\n    this.grid = new Grid(this.draw, {\n      color: this.settings.table.gridColor,\n    });\n    this.textFont = new Text({\n      scaleAdapter: new ScaleAdapter({\n        goto: v => this.scale.goto(v),\n      }),\n      table: this,\n    });\n    // 冻结内容\n    this.xLeftFrozenIndex = new XTableFrozenLeftIndex(this);\n    this.xTopFrozenIndex = new XTableFrozenTopIndex(this);\n    this.xTableFrozenContent = new XTableFrozenContent(this);\n    // 动态内容\n    this.xLeftIndex = new XTableLeftIndex(this);\n    this.xTopIndex = new XTableTopIndex(this);\n    this.xLeft = new XTableLeft(this);\n    this.xTop = new XTableTop(this);\n    this.xContent = new XTableContent(this);\n    // 细节内容\n    this.xTableFrozenFullRect = new XTableFrozenFullRect(this);\n    this.xTableFixedBar = new XTableFixedBar(this, settings.xFixedBar);\n  }\n\n  /**\n   * 获取单元格越界的宽度\n   * @param ri\n   * @param ci\n   * @returns {number}\n   */\n  getCellContentBoundOutWidth(ri, ci) {\n    const { cells } = this;\n    const cell = cells.getCell(ri, ci);\n    if (!cell) {\n      return 0;\n    }\n    const { cols } = this;\n    const { contentWidth, fontAttr } = cell;\n    const { align } = fontAttr;\n    let boundOutWidth = 0;\n    const colWidth = cols.getWidth(ci);\n    switch (align) {\n      case BaseFont.ALIGN.right:\n      case BaseFont.ALIGN.left: {\n        boundOutWidth = contentWidth;\n        break;\n      }\n      case BaseFont.ALIGN.center: {\n        if (this.isAngleBarCell(ri, ci)) {\n          boundOutWidth = contentWidth;\n        } else {\n          boundOutWidth = colWidth + ((contentWidth - colWidth) / 2);\n        }\n        break;\n      }\n    }\n    return boundOutWidth;\n  }\n\n  /**\n   * 获取单元格越界的宽度\n   * @param ri\n   * @param ci\n   * @returns {number}\n   */\n  getCellStyleBoundOutWidth(ri, ci) {\n    const { cells } = this;\n    const cell = cells.getCell(ri, ci);\n    if (!cell) {\n      return 0;\n    }\n    const { cols } = this;\n    let boundOutWidth = 0;\n    const colWidth = cols.getWidth(ci);\n    if (this.hasAngleCell(ri)) {\n      if (this.isAngleBarCell(ri, ci)) {\n        const offset = this.getSdistWidth(ri, ci);\n        boundOutWidth = colWidth + offset;\n      }\n    } else {\n      boundOutWidth = colWidth;\n    }\n    return boundOutWidth;\n  }\n\n  /**\n   * 获取单元格斜率宽度\n   * @param row\n   * @param col\n   */\n  getSdistWidth(row, col) {\n    const { cells } = this;\n    const cell = cells.getCell(row, col);\n    if (PlainUtils.isUnDef(cell)) {\n      return 0;\n    }\n    if (cell.leftSdistWidth > 0) {\n      return cell.leftSdistWidth;\n    }\n    if (cell.rightSdistWidth > 0) {\n      return cell.rightSdistWidth;\n    }\n    const { rows } = this;\n    const { fontAttr } = cell;\n    const { angle } = fontAttr;\n    const tilt = RTSinKit.tilt({\n      inverse: rows.getHeight(row),\n      angle,\n    });\n    return RTCosKit.nearby({\n      tilt,\n      angle,\n    });\n  }\n\n  /**\n   * 渲染模式\n   */\n  getRenderMode() {\n    const { renderMode } = this;\n    return renderMode;\n  }\n\n  /**\n   * 画布宽度\n   * @returns {null|*}\n   */\n  visualWidth() {\n    return this.el.width;\n  }\n\n  /**\n   * 画布高度\n   * @returns {null|*}\n   */\n  visualHeight() {\n    return this.el.height;\n  }\n\n  /**\n   * 重置变量区\n   */\n  reset() {\n    const { xTableAreaView } = this;\n    const { xLeftFrozenIndex } = this;\n    const { xTopFrozenIndex } = this;\n    const { xTableFrozenContent } = this;\n    const { xLeftIndex } = this;\n    const { xTopIndex } = this;\n    const { xLeft } = this;\n    const { xTop } = this;\n    const { xContent } = this;\n    xTableAreaView.reset();\n    xLeftFrozenIndex.reset();\n    xTopFrozenIndex.reset();\n    xTableFrozenContent.reset();\n    xLeftIndex.reset();\n    xTopIndex.reset();\n    xLeft.reset();\n    xTop.reset();\n    xContent.reset();\n  }\n\n  /**\n   * 界面缩放\n   * @param val\n   */\n  setScale(val = 1) {\n    // 清空画布\n    this.draw.attr({\n      fillStyle: this.settings.table.background,\n    });\n    this.draw.fullRect();\n    // 调整缩放级别\n    this.scale.setValue(val);\n    // 重新渲染界面\n    this.renderMode = RENDER_MODE.SCALE;\n    this.resize();\n    this.renderMode = RENDER_MODE.RENDER;\n  }\n\n  /**\n   * 重置界面大小\n   */\n  resize() {\n    const {\n      draw, xTableAreaView,\n    } = this;\n    const box = this.parent()\n      .box();\n    draw.resize(box.width, box.height);\n    xTableAreaView.undo();\n    this.reset();\n    this.render();\n  }\n\n  /**\n   * 渲染优化\n   */\n  optimize() {\n    const { styleCellsHelper } = this;\n    const { xTableAreaView } = this;\n    const scrollView = xTableAreaView.getScrollView();\n    let enable = true;\n    styleCellsHelper.getCellByViewRange({\n      view: scrollView,\n      cellsINCallback: (row, col, cell) => {\n        const { borderAttr } = cell;\n        if (borderAttr.hasDouble()) {\n          enable = false;\n          return STYLE_BREAK_LOOP.RETURN;\n        }\n        return STYLE_BREAK_LOOP.CONTINUE;\n      },\n      mergeCallback: (row, col, cell) => {\n        const { borderAttr } = cell;\n        if (borderAttr.hasDouble()) {\n          enable = false;\n          return STYLE_BREAK_LOOP.RETURN;\n        }\n        return STYLE_BREAK_LOOP.CONTINUE;\n      },\n    });\n    this.optimizeEnable = enable;\n  }\n\n  /**\n   * 渲染静态界面\n   */\n  render() {\n    const { xFixedView } = this;\n    const { xTableFrozenFullRect } = this;\n    const { xTableFixedBar } = this;\n    const { xLeftFrozenIndex } = this;\n    const { xTopFrozenIndex } = this;\n    const { xTableFrozenContent } = this;\n    const { xLeftIndex } = this;\n    const { xTopIndex } = this;\n    const { xLeft } = this;\n    const { xTop } = this;\n    const { xContent } = this;\n    this.optimize();\n    xTableFrozenFullRect.render();\n    if (xFixedView.hasFixedLeft() && xFixedView.hasFixedTop()) {\n      xTableFrozenContent.render();\n    }\n    if (xFixedView.hasFixedTop()) {\n      xLeftFrozenIndex.render();\n      xTop.render();\n    }\n    if (xFixedView.hasFixedLeft()) {\n      xTopFrozenIndex.render();\n      xLeft.render();\n    }\n    xLeftIndex.render();\n    xTopIndex.render();\n    xContent.render();\n    xTableFixedBar.render();\n  }\n\n  /**\n   * 渲染滚动界面\n   */\n  scrolling() {\n    const {\n      xTableAreaView,\n    } = this;\n    this.reset();\n    this.renderMode = RENDER_MODE.SCROLL;\n    this.render();\n    xTableAreaView.record();\n    this.renderMode = RENDER_MODE.RENDER;\n    this.reset();\n  }\n\n  /**\n   * 当前行是否存在旋转单元格\n   * @param row\n   * @returns {boolean}\n   */\n  hasAngleCell(row) {\n    const { rows } = this;\n    const rowObject = rows.getOrNew(row);\n    if (rowObject.reCkHasAngle === false) {\n      return rowObject.hasAngelCell;\n    }\n    const { cols, cells } = this;\n    const { len } = cols;\n    let hasAngelCell = false;\n    for (let i = 0; i < len; i += 1) {\n      const cell = cells.getCell(row, i);\n      if (cell) {\n        const { fontAttr } = cell;\n        const { direction } = fontAttr;\n        if (direction === BaseFont.TEXT_DIRECTION.ANGLE) {\n          hasAngelCell = true;\n          break;\n        }\n      }\n    }\n    rowObject.setReCkHasAngle(false);\n    rowObject.setHasAngelCell(hasAngelCell);\n    return hasAngelCell;\n  }\n\n  /**\n   * 单元格是否旋转\n   * @returns {boolean|boolean|*}\n   */\n  isAngleBarCell(row, col) {\n    const { cells, merges } = this;\n    const merge = merges.getFirstIncludes(row, col);\n    if (PlainUtils.isNotUnDef(merge)) {\n      return false;\n    }\n    const cell = cells.getCell(row, col);\n    if (PlainUtils.isUnDef(cell)) {\n      return false;\n    }\n    const { fontAttr, borderAttr } = cell;\n    if (fontAttr.direction !== BaseFont.TEXT_DIRECTION.ANGLE) {\n      return false;\n    }\n    const lessZero = fontAttr.angle < 0 && fontAttr.angle > -90;\n    const moreZero = fontAttr.angle > 0 && fontAttr.angle < 90;\n    return (lessZero || moreZero) && borderAttr.isDisplay();\n  }\n\n}\n\nexport {\n  XTableStyle,\n};\n","import { Widget } from '../../../../lib/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\n\r\nclass XScreenZone extends Widget {\r\n\r\n  constructor(className) {\r\n    super(`${cssPrefix}-x-screen-zone ${className}`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenZone,\r\n};\r\n","import { cssPrefix } from '../../../../const/Constant';\r\nimport { XScreenZone } from './XScreenZone';\r\n\r\nclass XScreenBRZone extends XScreenZone {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-x-screen-br-zone`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenBRZone,\r\n};\r\n","import { cssPrefix } from '../../../../const/Constant';\r\nimport { XScreenZone } from './XScreenZone';\r\n\r\nclass XScreenLTZone extends XScreenZone {\r\n\r\n  constructor(xScreen) {\r\n    super(`${cssPrefix}-x-screen-lt-zone`);\r\n    this.xScreen = xScreen;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenLTZone,\r\n};\r\n","import { cssPrefix } from '../../../../const/Constant';\r\nimport { XScreenZone } from './XScreenZone';\r\n\r\nclass XScreenLZone extends XScreenZone {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-x-screen-l-zone`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenLZone,\r\n};\r\n","import { cssPrefix } from '../../../../const/Constant';\r\nimport { XScreenZone } from './XScreenZone';\r\n\r\nclass XScreenTZone extends XScreenZone {\r\n\r\n  constructor() {\r\n    super(`${cssPrefix}-x-screen-t-zone`);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreenTZone,\r\n};\r\n","import { Widget } from '../../../lib/Widget';\r\nimport { Constant, cssPrefix } from '../../../const/Constant';\r\nimport { XScreenBRZone } from './zone/XScreenBRZone';\r\nimport { XScreenLTZone } from './zone/XScreenLTZone';\r\nimport { XScreenLZone } from './zone/XScreenLZone';\r\nimport { XScreenTZone } from './zone/XScreenTZone';\r\nimport { XEvent } from '../../../lib/XEvent';\r\nimport { XDraw } from '../../../canvas/XDraw';\r\n\r\nconst DISPLAY_AREA = {\r\n  BRT: Symbol('BRT'),\r\n  BRL: Symbol('BRL'),\r\n  BR: Symbol('br'),\r\n  ALL: Symbol('ALL'),\r\n};\r\n\r\nclass XScreen extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-x-screen`);\r\n    this.pool = [];\r\n    this.table = table;\r\n    this.displayArea = DISPLAY_AREA.BR;\r\n    this.ltZone = new XScreenLTZone();\r\n    this.tZone = new XScreenTZone();\r\n    this.brZone = new XScreenBRZone();\r\n    this.lZone = new XScreenLZone();\r\n    this.children(this.ltZone);\r\n    this.children(this.tZone);\r\n    this.children(this.brZone);\r\n    this.children(this.lZone);\r\n  }\r\n\r\n  onAttach() {\r\n    this.bind();\r\n    this.setZone();\r\n  }\r\n\r\n  unbind() {\r\n    const { table } = this;\r\n    XEvent.unbind(table);\r\n  }\r\n\r\n  bind() {\r\n    const { table } = this;\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.SCALE_CHANGE, () => {\r\n      this.setZone();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.setZone();\r\n    });\r\n    XEvent.bind(table, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      this.setZone();\r\n    });\r\n  }\r\n\r\n  addItem(item) {\r\n    this.pool.push(item);\r\n    this.ltZone.attach(item.lt);\r\n    this.tZone.attach(item.t);\r\n    this.lZone.attach(item.l);\r\n    this.brZone.attach(item.br);\r\n    item.setXScreen(this);\r\n    item.onAdd(this);\r\n  }\r\n\r\n  setZone() {\r\n    const { table } = this;\r\n    const { index } = table;\r\n    const fixedHeight = table.getFixedHeight();\r\n    const fixedWidth = table.getFixedWidth();\r\n    const brTop = index.getHeight() + fixedHeight;\r\n    const brLeft = index.getWidth() + fixedWidth;\r\n    this.brZone.offset({ left: brLeft, top: brTop });\r\n    const ltDisplay = fixedWidth > 0 && fixedHeight > 0;\r\n    const tDisplay = fixedHeight > 0;\r\n    const lDisplay = fixedWidth > 0;\r\n    this.ltZone.hide();\r\n    this.lZone.hide();\r\n    this.tZone.hide();\r\n    const width = XDraw.dpr();\r\n    if (ltDisplay) {\r\n      this.displayArea = DISPLAY_AREA.ALL;\r\n      this.ltZone.offset({\r\n        left: index.getWidth(), top: index.getHeight(), width: fixedWidth, height: fixedHeight,\r\n      }).show();\r\n      this.ltZone.css('border-width', `${width}px`);\r\n      this.lZone.offset({\r\n        left: index.getWidth(),\r\n        top: brTop,\r\n        width: fixedWidth,\r\n        height: table.visualHeight() - index.getHeight() - fixedHeight,\r\n      }).show();\r\n      this.lZone.css('border-width', `${width}px`);\r\n      this.tZone.offset({\r\n        left: brLeft,\r\n        top: index.getHeight(),\r\n        width: table.visualWidth() - index.getWidth() - fixedWidth,\r\n        height: fixedHeight,\r\n      }).show();\r\n      this.tZone.css('border-width', `${width}px`);\r\n    } else if (lDisplay) {\r\n      this.displayArea = DISPLAY_AREA.BRL;\r\n      this.lZone.offset({\r\n        left: index.getWidth(),\r\n        top: brTop,\r\n        width: fixedWidth,\r\n        height: table.visualHeight() - index.getHeight() - fixedHeight,\r\n      }).show();\r\n      this.lZone.css('border-width', `${width}px`);\r\n    } else if (tDisplay) {\r\n      this.displayArea = DISPLAY_AREA.BRL;\r\n      this.tZone.offset({\r\n        left: brLeft,\r\n        top: index.getHeight(),\r\n        width: table.visualWidth() - index.getWidth() - fixedWidth,\r\n        height: fixedHeight,\r\n      }).show();\r\n      this.tZone.css('border-width', `${width}px`);\r\n    } else {\r\n      this.displayArea = DISPLAY_AREA.BR;\r\n    }\r\n  }\r\n\r\n  findType(type) {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const item of this.pool) {\r\n      if (item instanceof type) {\r\n        return item;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.pool.forEach((item) => {\r\n      item.destroy();\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XScreen, DISPLAY_AREA,\r\n};\r\n","import { ELContextMenuItem } from '../contextmenu/ELContextMenuItem';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { h } from '../../lib/Element';\r\n\r\nclass AutoFillTypeMenuItem extends ELContextMenuItem {\r\n\r\n  constructor({ text, value }) {\r\n    super(`${cssPrefix}-auto-fill-menu-item`);\r\n    this.text = text;\r\n    this.value = value;\r\n    this.textEle = h('div', `${cssPrefix}-auto-fill-menu-item-title`);\r\n    this.textEle.text(text);\r\n    this.children(this.textEle);\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AutoFillTypeMenuItem,\r\n};\r\n","import { ELContextMenu } from '../contextmenu/ELContextMenu';\r\nimport { Constant, cssPrefix } from '../../const/Constant';\r\nimport { AutoFillTypeMenuItem } from './AutoFillTypeMenuItem';\r\nimport { XEvent } from '../../lib/XEvent';\r\n\r\nclass AutoFillTypeMenu extends ELContextMenu {\r\n\r\n  constructor(options = {\r\n    onUpdate: () => {},\r\n  }) {\r\n    super(`${cssPrefix}-auto-fill-menu`, options);\r\n    this.addItem(new AutoFillTypeMenuItem({ text: '以序列的方式填充', value: AutoFillTypeMenu.FILL_TYPE.SERIALIZE }).attr('title', '只有在起始单元格内容为数字时才生效'));\r\n    this.addItem(new AutoFillTypeMenuItem({ text: '填充单元格内容', value: AutoFillTypeMenu.FILL_TYPE.FILLING }).attr('title', '默认使用内容填充'));\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    this.menus.forEach((menu) => {\r\n      XEvent.unbind(menu);\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    this.menus.forEach((menu) => {\r\n      XEvent.bind(menu, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n        this.options.onUpdate(menu);\r\n      });\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\nAutoFillTypeMenu.FILL_TYPE = {\r\n  SERIALIZE: 1, FILLING: 2,\r\n};\r\n\r\nexport {\r\n  AutoFillTypeMenu,\r\n};\r\n","import { Constant, cssPrefix } from '../../const/Constant';\r\nimport { ELContextMenu } from '../contextmenu/ELContextMenu';\r\nimport { XEvent } from '../../lib/XEvent';\r\nimport { AutoFillTypeMenu } from './AutoFillTypeMenu';\r\n\r\nclass AutoFillType extends ELContextMenu {\r\n\r\n  constructor(options = {\r\n    onUpdate: () => {},\r\n  }) {\r\n    super(`${cssPrefix}-auto-fill-type`, options);\r\n    this.autoFillTypeMenu = new AutoFillTypeMenu({\r\n      el: this,\r\n      onUpdate: (menu) => {\r\n        this.options.onUpdate(menu);\r\n        this.autoFillTypeMenu.close();\r\n        this.close();\r\n      },\r\n    });\r\n    this.bind();\r\n  }\r\n\r\n  bind() {\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.autoFillTypeMenu.open();\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.autoFillTypeMenu.destroy();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  AutoFillType,\r\n};\r\n","import { RectRange } from '../tablebase/RectRange';\nimport { BaseCellsHelper } from './BaseCellsHelper';\nimport { PlainUtils } from '../../../utils/PlainUtils';\n\nclass CopyMerge {\n\n  constructor({\n    targetViewRange,\n    originViewRange,\n    merge = () => {},\n    master = () => {},\n    onCopy = () => {},\n    xIteratorBuilder,\n  }) {\n    this.targetViewRange = targetViewRange;\n    this.originViewRange = originViewRange;\n    this.master = master;\n    this.merge = merge;\n    this.onCopy = onCopy;\n    this.xIteratorBuilder = xIteratorBuilder;\n  }\n\n  copyStartRow() {\n    const { originViewRange } = this;\n    return originViewRange.sri;\n  }\n\n  copyEndRow() {\n    const { originViewRange } = this;\n    return originViewRange.eri;\n  }\n\n  nextCopyRow(row) {\n    const endRow = this.copyEndRow();\n    if (row >= endRow) {\n      return this.copyStartRow();\n    }\n    return row + 1;\n  }\n\n  copyStartCol() {\n    const { originViewRange } = this;\n    return originViewRange.sci;\n  }\n\n  copyEndCol() {\n    const { originViewRange } = this;\n    return originViewRange.eci;\n  }\n\n  nextCopyCol(col) {\n    const endCol = this.copyEndCol();\n    if (col >= endCol) {\n      return this.copyStartCol();\n    }\n    return col + 1;\n  }\n\n  pasteStartRow() {\n    const { targetViewRange } = this;\n    return targetViewRange.sri;\n  }\n\n  pasteEndRow() {\n    const { targetViewRange } = this;\n    return targetViewRange.eri;\n  }\n\n  pasteStartCol() {\n    const { targetViewRange } = this;\n    return targetViewRange.sci;\n  }\n\n  pasteEndCol() {\n    const { targetViewRange } = this;\n    return targetViewRange.eci;\n  }\n\n  executeCopy() {\n    let ori = this.copyStartRow();\n    this.xIteratorBuilder.getRowIterator()\n      .setBegin(this.pasteStartRow())\n      .setEnd(this.pasteEndRow())\n      .setLoop((tri) => {\n        let oci = this.copyStartCol();\n        this.xIteratorBuilder.getColIterator()\n          .setBegin(this.pasteStartCol())\n          .setEnd(this.pasteEndCol())\n          .setLoop((tci) => {\n            const merge = this.merge(ori, oci);\n            if (merge && this.master(ori, oci, merge)) {\n              this.onCopy(tri, tci, merge);\n            }\n          })\n          .setNext(() => {\n            oci = this.nextCopyCol(oci);\n          })\n          .execute();\n      })\n      .setNext(() => {\n        ori = this.nextCopyRow(ori);\n      })\n      .foldOnOff(false)\n      .execute();\n  }\n\n}\n\nclass CopyCellIN {\n\n  constructor({\n    targetViewRange,\n    originViewRange,\n    onCopy = () => {},\n    xIteratorBuilder,\n  }) {\n    this.targetViewRange = targetViewRange;\n    this.originViewRange = originViewRange;\n    this.onCopy = onCopy;\n    this.xIteratorBuilder = xIteratorBuilder;\n  }\n\n  copyStartRow() {\n    const { originViewRange } = this;\n    const { sri, eri } = originViewRange;\n    return this.xIteratorBuilder.getRowIterator()\n      .setBegin(sri - 1)\n      .setEnd(eri)\n      .nextRow();\n  }\n\n  copyEndRow() {\n    const { originViewRange } = this;\n    const { sri, eri } = originViewRange;\n    return this.xIteratorBuilder.getRowIterator()\n      .setBegin(eri + 1)\n      .setEnd(sri)\n      .nextRow();\n  }\n\n  nextCopyRow(row) {\n    const endRow = this.copyEndRow();\n    if (row >= endRow) {\n      return this.copyStartRow();\n    }\n    return this.xIteratorBuilder.getRowIterator()\n      .setBegin(row)\n      .setEnd(endRow)\n      .nextRow();\n  }\n\n  copyStartCol() {\n    const { originViewRange } = this;\n    return originViewRange.sci;\n  }\n\n  copyEndCol() {\n    const { originViewRange } = this;\n    return originViewRange.eci;\n  }\n\n  nextCopyCol(col) {\n    const endCol = this.copyEndCol();\n    if (col >= endCol) {\n      return this.copyStartCol();\n    }\n    return col + 1;\n  }\n\n  pasteStartRow() {\n    const { targetViewRange } = this;\n    return targetViewRange.sri;\n  }\n\n  pasteEndRow() {\n    const { targetViewRange } = this;\n    return targetViewRange.eri;\n  }\n\n  pasteStartCol() {\n    const { targetViewRange } = this;\n    return targetViewRange.sci;\n  }\n\n  pasteEndCol() {\n    const { targetViewRange } = this;\n    return targetViewRange.eci;\n  }\n\n  executeCopy() {\n    let ori = this.copyStartRow();\n    this.xIteratorBuilder.getRowIterator()\n      .setBegin(this.pasteStartRow())\n      .setEnd(this.pasteEndRow())\n      .setLoop((tri) => {\n        let oci = this.copyStartCol();\n        this.xIteratorBuilder.getColIterator()\n          .setBegin(this.pasteStartCol())\n          .setEnd(this.pasteEndCol())\n          .setLoop((tci) => {\n            this.onCopy(tri, tci, ori, oci);\n          })\n          .setNext(() => {\n            oci = this.nextCopyCol(oci);\n          })\n          .execute();\n      })\n      .setNext(() => {\n        ori = this.nextCopyRow(ori);\n      })\n      .execute();\n  }\n\n}\n\nclass Serialize {\n\n  constructor({\n    originViewRange,\n    direction,\n    getStartIndex,\n    onSerialize,\n    xIteratorBuilder,\n  }) {\n    this.originViewRange = originViewRange;\n    this.direction = direction;\n    this.getStartIndex = getStartIndex;\n    this.onSerialize = onSerialize;\n    this.xIteratorBuilder = xIteratorBuilder;\n  }\n\n  serializeRight() {\n    const { originViewRange, onSerialize, getStartIndex } = this;\n    const { sri, sci, eri, eci } = originViewRange;\n    let ret = true;\n    this.xIteratorBuilder.getRowIterator()\n      .setBegin(sri)\n      .setEnd(eri)\n      .setLoop((ri) => {\n        let start = PlainUtils.Nul;\n        this.xIteratorBuilder.getColIterator()\n          .setBegin(sci)\n          .setEnd(eci)\n          .setLoop((ci) => {\n            if (start === PlainUtils.Nul) {\n              const index = getStartIndex(ri, ci);\n              if (!PlainUtils.isNumber(index)) {\n                ret = false;\n              } else {\n                start = parseInt(index, 10);\n              }\n            } else {\n              start += 1;\n              onSerialize(ri, ci, start);\n            }\n            return ret;\n          })\n          .execute();\n        return ret;\n      })\n      .execute();\n  }\n\n  serializeBottom() {\n    const { originViewRange, onSerialize, getStartIndex } = this;\n    const { sri, sci, eri, eci } = originViewRange;\n    let ret = true;\n    this.xIteratorBuilder.getColIterator()\n      .setBegin(sci)\n      .setEnd(eci)\n      .setLoop((ci) => {\n        let start = PlainUtils.Nul;\n        this.xIteratorBuilder.getRowIterator()\n          .setBegin(sri)\n          .setEnd(eri)\n          .setLoop((ri) => {\n            if (start === PlainUtils.Nul) {\n              const index = getStartIndex(ri, ci);\n              if (!PlainUtils.isNumber(index)) {\n                ret = false;\n              } else {\n                start = parseInt(index, 10);\n              }\n            } else {\n              start += 1;\n              onSerialize(ri, ci, start);\n            }\n            return ret;\n          })\n          .execute();\n        return ret;\n      })\n      .execute();\n  }\n\n  serializeTop() {\n    const { originViewRange, onSerialize, getStartIndex } = this;\n    const { sri, sci, eri, eci } = originViewRange;\n    let ret = true;\n    this.xIteratorBuilder.getColIterator()\n      .setBegin(sci)\n      .setEnd(eci)\n      .setLoop((ci) => {\n        let start = PlainUtils.Nul;\n        this.xIteratorBuilder.getRowIterator()\n          .setBegin(eri)\n          .setEnd(sri)\n          .setLoop((ri) => {\n            if (start === PlainUtils.Nul) {\n              const index = getStartIndex(ri, ci);\n              if (!PlainUtils.isNumber(index)) {\n                ret = false;\n              } else {\n                start = parseInt(index, 10);\n              }\n            } else {\n              start -= 1;\n              onSerialize(ri, ci, start);\n            }\n            return ret;\n          })\n          .execute();\n        return ret;\n      })\n      .execute();\n  }\n\n  serializeLeft() {\n    const { originViewRange, onSerialize, getStartIndex } = this;\n    const { sri, sci, eri, eci } = originViewRange;\n    let ret = true;\n    this.xIteratorBuilder.getRowIterator()\n      .setBegin(sri)\n      .setEnd(eri)\n      .setLoop((ri) => {\n        let start = PlainUtils.Nul;\n        this.xIteratorBuilder.getColIterator()\n          .setBegin(eci)\n          .setEnd(sci)\n          .setLoop((ci) => {\n            if (start === PlainUtils.Nul) {\n              const index = getStartIndex(ri, ci);\n              if (!PlainUtils.isNumber(index)) {\n                ret = false;\n              } else {\n                start = parseInt(index, 10);\n              }\n            } else {\n              start -= 1;\n              onSerialize(ri, ci, start);\n            }\n          })\n          .execute();\n        return ret;\n      })\n      .execute();\n  }\n\n  executeSerialize() {\n    const { direction } = this;\n    switch (direction) {\n      case Serialize.SERIALIZE_DIRECTION.LEFT:\n        this.serializeLeft();\n        break;\n      case Serialize.SERIALIZE_DIRECTION.TOP:\n        this.serializeTop();\n        break;\n      case Serialize.SERIALIZE_DIRECTION.RIGHT:\n        this.serializeRight();\n        break;\n      case Serialize.SERIALIZE_DIRECTION.BOTTOM:\n        this.serializeBottom();\n        break;\n    }\n  }\n\n}\nSerialize.SERIALIZE_DIRECTION = {\n  RIGHT: 3,\n  BOTTOM: 4,\n  TOP: 1,\n  LEFT: 2,\n};\n\nclass CellMergeCopyHelper extends BaseCellsHelper {\n\n  constructor(table) {\n    super();\n    this.table = table;\n  }\n\n  getStyleTable() {\n    return this.table.xTableStyle;\n  }\n\n  getTableDataSnapshot() {\n    return this.table.tableDataSnapshot;\n  }\n\n  getXTableAreaView() {\n    return this.table.xTableAreaView;\n  }\n\n  getRows() {\n    return this.table.rows;\n  }\n\n  getCols() {\n    return this.table.cols;\n  }\n\n  getCells() {\n    return this.table.getTableCells();\n  }\n\n  getMerges() {\n    return this.table.getTableMerges();\n  }\n\n  getXIteratorBuilder() {\n    return this.table.xIteratorBuilder;\n  }\n\n  copyCellINContent({\n    originViewRange, targetViewRange,\n  }) {\n    const { table } = this;\n    const { xIteratorBuilder } = table;\n    const tableDataSnapshot = this.getTableDataSnapshot();\n    const cells = this.getCells();\n    const { cellDataProxy } = tableDataSnapshot;\n    const copy = new CopyCellIN({\n      originViewRange,\n      targetViewRange,\n      xIteratorBuilder,\n      onCopy: (tri, tci, ori, oci) => {\n        const src = cells.getCell(ori, oci);\n        if (src) {\n          const target = src.clone();\n          cellDataProxy.setCell(tri, tci, target);\n        }\n      },\n    });\n    copy.executeCopy();\n  }\n\n  copyMergeContent({\n    originViewRange, targetViewRange,\n  }) {\n    const { table } = this;\n    const { xIteratorBuilder } = table;\n    const tableDataSnapshot = this.getTableDataSnapshot();\n    const merges = this.getMerges();\n    const { mergeDataProxy } = tableDataSnapshot;\n    const copy = new CopyMerge({\n      originViewRange,\n      targetViewRange,\n      xIteratorBuilder,\n      merge: (ri, ci) => merges.getFirstIncludes(ri, ci),\n      master: (ri, ci, m) => m.sri === ri && m.sci === ci,\n      onCopy: (ri, ci, m) => {\n        let [rSize, cSize] = m.size();\n        cSize -= 1;\n        rSize -= 1;\n        const newMerge = new RectRange(ri, ci, ri + rSize, ci + cSize);\n        const hasFold = xIteratorBuilder.getRowIterator()\n          .setBegin(newMerge.sri)\n          .setEnd(newMerge.eri)\n          .hasFold();\n        if (hasFold) {\n          return;\n        }\n        newMerge.each(xIteratorBuilder, (ri, ci) => {\n          const merge = merges.getFirstIncludes(ri, ci);\n          if (merge) {\n            mergeDataProxy.deleteMerge(merge);\n          }\n        });\n        mergeDataProxy.addMerge(newMerge);\n      },\n    });\n    copy.executeCopy();\n  }\n\n  copyStylesContent({\n    originViewRange, targetViewRange,\n  }) {\n    const { table } = this;\n    const { xIteratorBuilder } = table;\n    const tableDataSnapshot = this.getTableDataSnapshot();\n    const cells = this.getCells();\n    const { cellDataProxy } = tableDataSnapshot;\n    const copy = new CopyCellIN({\n      originViewRange,\n      targetViewRange,\n      xIteratorBuilder,\n      onCopy: (tri, tci, ori, oci) => {\n        const src = cells.getCell(ori, oci);\n        if (src) {\n          const target = cells.getCellOrNew(tri, tci);\n          const clone = src.clone();\n          clone.text = target.text;\n          cellDataProxy.setCell(tri, tci, clone);\n        }\n      },\n    });\n    copy.executeCopy();\n  }\n\n  serializeContent({\n    originViewRange, direction,\n  }) {\n    const { table } = this;\n    const { xIteratorBuilder } = table;\n    const tableDataSnapshot = this.getTableDataSnapshot();\n    const cells = this.getCells();\n    const { cellDataProxy } = tableDataSnapshot;\n    const serialize = new Serialize({\n      originViewRange,\n      direction,\n      xIteratorBuilder,\n      getStartIndex: (ri, ci) => {\n        const cell = cells.getCell(ri, ci);\n        if (cell) {\n          return cell.text;\n        }\n        return PlainUtils.Nul;\n      },\n      onSerialize: (ri, ci, index) => {\n        const cell = cells.getCellOrNew(ri, ci);\n        const clone = cell.clone();\n        clone.text = `${index}`;\n        cellDataProxy.setCell(ri, ci, clone);\n      },\n    });\n    serialize.executeSerialize();\n  }\n\n}\n\nexport {\n  CellMergeCopyHelper,\n  CopyMerge,\n  Serialize,\n  CopyCellIN,\n};\n","/* global document */\nimport { SELECT_LOCAL, XSelectItem } from '../xselect/XSelectItem';\nimport { XScreenCssBorderItem } from '../../xscreen/item/viewborder/XScreenCssBorderItem';\nimport { Widget } from '../../../../lib/Widget';\nimport { Constant, cssPrefix } from '../../../../const/Constant';\nimport { RectRange } from '../../tablebase/RectRange';\nimport { PlainUtils } from '../../../../utils/PlainUtils';\nimport { XEvent } from '../../../../lib/XEvent';\nimport { XTableMousePointer } from '../../XTableMousePointer';\nimport { AutoFillType } from '../../../../component/autofilltype/AutoFillType';\nimport { Serialize } from '../../helper/CellMergeCopyHelper';\nimport { AutoFillTypeMenu } from '../../../../component/autofilltype/AutoFillTypeMenu';\n\nclass XAutoFillItem extends XScreenCssBorderItem {\n\n  constructor(table, options = {}) {\n    super({ table });\n    this.options = PlainUtils.mergeDeep({\n      mergeForceSplit: false,\n      onBeforeAutoFill: () => {},\n      onAfterAutoFill: () => {},\n    }, options);\n    this.moveDirection = null;\n    this.autoFillRange = RectRange.EMPTY;\n    this.display = false;\n    this.ltElem = new Widget(`${cssPrefix}-x-autofill-area`);\n    this.brElem = new Widget(`${cssPrefix}-x-autofill-area`);\n    this.lElem = new Widget(`${cssPrefix}-x-autofill-area`);\n    this.tElem = new Widget(`${cssPrefix}-x-autofill-area`);\n    this.blt.children(this.ltElem);\n    this.bl.children(this.lElem);\n    this.bt.children(this.tElem);\n    this.bbr.children(this.brElem);\n    this.setBorderType('dashed');\n  }\n\n  onAdd() {\n    this.bind();\n    this.hide();\n  }\n\n  unbind() {\n    const { xScreen } = this;\n    const xSelect = xScreen.findType(XSelectItem);\n    XEvent.bind([\n      xSelect.ltCorner,\n      xSelect.tCorner,\n      xSelect.lCorner,\n      xSelect.brCorner,\n    ]);\n    XEvent.bind([\n      xSelect.ltCorner,\n      xSelect.tCorner,\n      xSelect.lCorner,\n      xSelect.brCorner,\n    ]);\n    XEvent.bind([\n      xSelect.ltCorner,\n      xSelect.tCorner,\n      xSelect.lCorner,\n      xSelect.brCorner,\n    ]);\n  }\n\n  bind() {\n    const { table, xScreen } = this;\n    const { mousePointer } = table;\n    const xSelect = xScreen.findType(XSelectItem);\n    const autoFillType = new AutoFillType({\n      onUpdate: (menu) => {\n        const { value } = menu;\n        switch (value) {\n          case AutoFillTypeMenu.FILL_TYPE.SERIALIZE:\n            this.serialize();\n            break;\n          case AutoFillTypeMenu.FILL_TYPE.FILLING:\n            break;\n        }\n      },\n    });\n    XEvent.bind([\n      xSelect.ltCorner,\n      xSelect.tCorner,\n      xSelect.lCorner,\n      xSelect.brCorner,\n    ], Constant.SYSTEM_EVENT_TYPE.MOUSE_LEAVE, () => {\n      mousePointer.free(XAutoFillItem);\n    });\n    XEvent.bind([\n      xSelect.ltCorner,\n      xSelect.tCorner,\n      xSelect.lCorner,\n      xSelect.brCorner,\n    ], Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, () => {\n      mousePointer.lock(XAutoFillItem);\n      mousePointer.set(XTableMousePointer.KEYS.crosshair, XAutoFillItem);\n    });\n    XEvent.bind([\n      xSelect.ltCorner,\n      xSelect.tCorner,\n      xSelect.lCorner,\n      xSelect.brCorner,\n    ], Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\n      this.display = true;\n      mousePointer.lock(XAutoFillItem);\n      mousePointer.set(XTableMousePointer.KEYS.crosshair, XAutoFillItem);\n      const { x, y } = table.eventXy(e1);\n      this.rangeHandle(x, y);\n      this.offsetHandle();\n      this.borderHandle();\n      XEvent.mouseMoveUp(document, (e2) => {\n        const { x, y } = table.eventXy(e2);\n        this.rangeHandle(x, y);\n        this.offsetHandle();\n        this.borderHandle();\n      }, () => {\n        this.display = false;\n        mousePointer.free(XAutoFillItem);\n        this.autoFill();\n        this.hide();\n        const { autoFillRange } = this;\n        if (!autoFillRange.equals(RectRange.EMPTY)) {\n          const { selectRange } = xSelect;\n          xSelect.setRange(selectRange.union(autoFillRange));\n          const { activeCorner } = xSelect;\n          autoFillType.setEL(activeCorner);\n          autoFillType.open();\n        }\n      });\n    });\n  }\n\n  rangeHandle(x, y) {\n    const { table } = this;\n    const { xIteratorBuilder, xScreen } = table;\n    const xSelect = xScreen.findType(XSelectItem);\n    const merges = table.getTableMerges();\n    const { selectRange, selectLocal } = xSelect;\n    const { cols, rows } = table;\n    const { sri, sci, eri, eci } = selectRange;\n    const { ri, ci } = table.getRiCiByXy(x, y);\n\n    const merge = merges.getFirstIncludes(sri, sci);\n    const zone = SELECT_LOCAL.BR !== selectLocal;\n    const hasFull = zone || PlainUtils.isNotUnDef(merge);\n    const [rSize, cSize] = selectRange.size();\n\n    let originSRi = ri;\n    let originSCi = ci;\n\n    // 检测边界\n    if (originSRi < 0) {\n      originSRi = 0;\n    } else if (originSRi > rows.len) {\n      originSRi = rows.len - 1;\n    }\n    if (originSCi < 0) {\n      originSCi = 0;\n    } else if (originSCi > cols.len) {\n      originSCi = cols.len - 1;\n    }\n\n    let autoFillRange = RectRange.EMPTY;\n    let moveDirection = PlainUtils.Undef;\n\n    // 选择区域\n    if (originSRi < sri || ri > eri) {\n      // 上下\n      if (originSRi < sri) {\n        moveDirection = Serialize.SERIALIZE_DIRECTION.TOP;\n        if (hasFull) {\n          let minRi = sri;\n          let number = 0;\n          xIteratorBuilder.getRowIterator()\n            .setBegin(sri - 1)\n            .setEnd(0)\n            .setLoop((i) => {\n              if (i < ri) {\n                return false;\n              }\n              if (number % rSize === 0) {\n                const value = minRi - rSize;\n                if (value >= 0) {\n                  minRi = value;\n                }\n              }\n              number += 1;\n              return true;\n            })\n            .foldOnOff(false)\n            .execute();\n          if (minRi !== sri) {\n            autoFillRange = new RectRange(minRi, sci, sri - 1, eci);\n          }\n        } else {\n          const nextRow = xIteratorBuilder.getRowIterator()\n            .setBegin(sri)\n            .setEnd(0)\n            .nextRow();\n          autoFillRange = new RectRange(ri, sci, nextRow, eci);\n        }\n      }\n      if (originSRi > eri) {\n        moveDirection = Serialize.SERIALIZE_DIRECTION.BOTTOM;\n        if (hasFull) {\n          let maxRi = eri;\n          let number = 0;\n          xIteratorBuilder.getRowIterator()\n            .setBegin(eri + 1)\n            .setEnd(rows.len - 1)\n            .setLoop((i) => {\n              if (i > ri) {\n                return false;\n              }\n              if (number % rSize === 0) {\n                const value = maxRi + rSize;\n                if (value >= 0) {\n                  maxRi = value;\n                }\n              }\n              number += 1;\n              return true;\n            })\n            .foldOnOff(false)\n            .execute();\n          if (maxRi !== eri) {\n            autoFillRange = new RectRange(eri + 1, sci, maxRi, eci);\n          }\n        } else {\n          const nextRow = xIteratorBuilder.getRowIterator()\n            .setBegin(eri)\n            .setEnd(rows.len - 1)\n            .nextRow();\n          autoFillRange = new RectRange(nextRow, sci, ri, eci);\n        }\n      }\n    } else if (originSCi < sci || ci > eci) {\n      // 左右\n      if (originSCi < sci) {\n        moveDirection = Serialize.SERIALIZE_DIRECTION.LEFT;\n        if (hasFull) {\n          let minCi = sci;\n          let number = 0;\n          xIteratorBuilder.getColIterator()\n            .setBegin(sci - 1)\n            .setEnd(0)\n            .setLoop((i) => {\n              if (i < ci) {\n                return false;\n              }\n              if (number % cSize === 0) {\n                const value = minCi - cSize;\n                if (value >= 0) {\n                  minCi = value;\n                }\n              }\n              number += 1;\n              return true;\n            })\n            .execute();\n          if (minCi !== sci) {\n            autoFillRange = new RectRange(sri, minCi, eri, sci - 1);\n          }\n        } else {\n          const nextCol = xIteratorBuilder.getColIterator()\n            .setBegin(sci)\n            .setEnd(0)\n            .nextRow();\n          autoFillRange = new RectRange(sri, ci, eri, nextCol);\n        }\n      }\n      if (originSCi > eci) {\n        moveDirection = Serialize.SERIALIZE_DIRECTION.RIGHT;\n        if (hasFull) {\n          let maxCi = eci;\n          let number = 0;\n          xIteratorBuilder.getColIterator()\n            .setBegin(eci + 1)\n            .setEnd(cols.len - 1)\n            .setLoop((i) => {\n              if (i > ci) {\n                return false;\n              }\n              if (number % cSize === 0) {\n                const value = maxCi + cSize;\n                if (value >= 0) {\n                  maxCi = value;\n                }\n              }\n              number += 1;\n              return true;\n            })\n            .execute();\n          if (maxCi !== eci) {\n            autoFillRange = new RectRange(sri, eci + 1, eri, maxCi);\n          }\n        } else {\n          const nextCol = xIteratorBuilder.getColIterator()\n            .setBegin(eci)\n            .setEnd(cols.len - 1)\n            .nextRow();\n          autoFillRange = new RectRange(sri, nextCol, eri, ci);\n        }\n      }\n    }\n\n    if (autoFillRange) {\n      const width = cols.sectionSumWidth(autoFillRange.sci, autoFillRange.eci);\n      const height = rows.sectionSumHeight(autoFillRange.sri, autoFillRange.eri);\n      autoFillRange.w = width;\n      autoFillRange.h = height;\n    }\n    this.autoFillRange = autoFillRange;\n    this.moveDirection = moveDirection;\n  }\n\n  borderHandle() {\n    const { xScreen, autoFillRange, display } = this;\n    if (display === false || autoFillRange.equals(RectRange.EMPTY)) {\n      this.hideBorder();\n    } else {\n      const xSelect = xScreen.findType(XSelectItem);\n      const { selectRange } = xSelect;\n      const unionRange = selectRange.union(autoFillRange);\n      this.showBorder(unionRange);\n    }\n  }\n\n  offsetHandle() {\n    const { xScreen, autoFillRange, display } = this;\n    if (display === false || autoFillRange.equals(RectRange.EMPTY)) {\n      this.hide();\n    } else {\n      const xSelect = xScreen.findType(XSelectItem);\n      const { selectRange } = xSelect;\n      const unionRange = selectRange.union(autoFillRange);\n      this.show();\n      this.setDisplay(unionRange);\n      this.setSizer(unionRange);\n      this.setLocal(unionRange);\n    }\n  }\n\n  serialize() {\n    const { table, xScreen, autoFillRange, moveDirection } = this;\n    const { cellMergeCopyHelper } = table;\n    const { tableDataSnapshot } = table;\n    const xSelect = xScreen.findType(XSelectItem);\n    tableDataSnapshot.begin();\n    cellMergeCopyHelper.serializeContent({\n      originViewRange: autoFillRange.union(xSelect.selectRange),\n      direction: moveDirection,\n    });\n    tableDataSnapshot.end();\n    table.render();\n  }\n\n  autoFill() {\n    const { autoFillRange } = this;\n    if (autoFillRange.equals(RectRange.EMPTY)) {\n      return;\n    }\n    const { table, options } = this;\n    const { tableDataSnapshot } = table;\n    options.onBeforeAutoFill();\n    tableDataSnapshot.begin();\n    this.splitMerge();\n    this.fillMerge();\n    this.fillCellIN();\n    tableDataSnapshot.end();\n    options.onAfterAutoFill();\n    table.render();\n  }\n\n  fillMerge() {\n    const { table, xScreen, autoFillRange } = this;\n    const { cellMergeCopyHelper } = table;\n    const xSelect = xScreen.findType(XSelectItem);\n    cellMergeCopyHelper.copyMergeContent({\n      targetViewRange: autoFillRange,\n      originViewRange: xSelect.selectRange,\n    });\n  }\n\n  fillCellIN() {\n    const { table, xScreen, autoFillRange } = this;\n    const { cellMergeCopyHelper } = table;\n    const xSelect = xScreen.findType(XSelectItem);\n    cellMergeCopyHelper.copyCellINContent({\n      targetViewRange: autoFillRange,\n      originViewRange: xSelect.selectRange,\n    });\n  }\n\n  splitMerge() {\n    const { table, autoFillRange } = this;\n    const merges = table.getTableMerges();\n    const { tableDataSnapshot } = table;\n    const { mergeDataProxy } = tableDataSnapshot;\n    merges.getIncludes(autoFillRange, (merge) => {\n      mergeDataProxy.deleteMerge(merge);\n    });\n  }\n\n  destroy() {\n    super.destroy();\n    this.unbind();\n  }\n\n}\n\nexport {\n  XAutoFillItem,\n};\n","import { Widget } from '../../../../lib/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\nimport { h } from '../../../../lib/Element';\r\n\r\nclass DropRowFixed extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-drop-row-fixed-bar`);\r\n    this.block = h('div', `${cssPrefix}-table-drop-row-fixed-block`);\r\n    this.children(this.block);\r\n    this.table = table;\r\n  }\r\n\r\n  onAttach() {\r\n    this.setSize();\r\n    this.hide();\r\n  }\r\n\r\n  setSize() {\r\n    const { table, block } = this;\r\n    const width = table.visualWidth();\r\n    const height = 6;\r\n    block.offset({\r\n      width: table.getIndexWidth(), height,\r\n    });\r\n    this.offset({\r\n      height, width, left: 0,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  DropRowFixed,\r\n};\r\n","import { Widget } from '../../../../lib/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\nimport { h } from '../../../../lib/Element';\r\n\r\nclass DropColFixed extends Widget {\r\n\r\n  constructor(table) {\r\n    super(`${cssPrefix}-table-drop-col-fixed-bar`);\r\n    this.block = h('div', `${cssPrefix}-table-drop-col-fixed-block`);\r\n    this.children(this.block);\r\n    this.table = table;\r\n  }\r\n\r\n  onAttach() {\r\n    this.setSize();\r\n    this.hide();\r\n  }\r\n\r\n  setSize() {\r\n    const { table, block } = this;\r\n    const height = table.visualHeight();\r\n    const width = 6;\r\n    block.offset({\r\n      height: table.getIndexHeight(), width,\r\n    });\r\n    this.offset({\r\n      height, width, top: 0,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  DropColFixed,\r\n};\r\n","import { RectRange } from './RectRange';\r\n\r\nclass XFixedView {\r\n\r\n  constructor({\r\n    fixedView = new RectRange(0, 0, -1, -1),\r\n    fxLeft = -1,\r\n    fxTop = -1,\r\n  }) {\r\n    this.fixedView = fixedView;\r\n    if (fxLeft > -1) {\r\n      this.fixedView.eci = fxLeft;\r\n    }\r\n    if (fxTop > -1) {\r\n      this.fixedView.eri = fxTop;\r\n    }\r\n  }\r\n\r\n  setFixedView(fixedView) {\r\n    this.fixedView = fixedView.clone();\r\n  }\r\n\r\n  getFixedView() {\r\n    return this.fixedView.clone();\r\n  }\r\n\r\n  hasFixedLeft() {\r\n    return this.fixedView.eci > -1;\r\n  }\r\n\r\n  hasFixedTop() {\r\n    return this.fixedView.eri > -1;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XFixedView,\r\n};\r\n","class DataProxy {\r\n\r\n  constructor() {\r\n    this.change = false;\r\n  }\r\n\r\n  endNotice() {\r\n    if (this.change) {\r\n      this.change = false;\r\n    }\r\n  }\r\n\r\n  backNotice() {\r\n    if (this.change) {\r\n      this.change = false;\r\n    }\r\n  }\r\n\r\n  goNotice() {\r\n    if (this.change) {\r\n      this.change = false;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { DataProxy };\r\n","import { DataProxy } from '../DataProxy';\r\nimport { Constant } from '../../../../const/Constant';\r\n\r\nclass TableCellDataProxy extends DataProxy {\r\n\r\n  constructor(snapshot, option = {\r\n    on: { setCell() {} },\r\n  }) {\r\n    super();\r\n    this.snapshot = snapshot;\r\n    this.option = option;\r\n  }\r\n\r\n  $setCell(ri, ci, newCell) {\r\n    this.change = true;\r\n    const { snapshot } = this;\r\n    const { cells } = snapshot;\r\n    cells.setCellOrNew(ri, ci, newCell);\r\n  }\r\n\r\n  setCell(ri, ci, newCell) {\r\n    const { option, snapshot } = this;\r\n    const { on } = option;\r\n    const { setCell } = on;\r\n    const { cells } = snapshot;\r\n    const oldCell = cells.getCell(ri, ci);\r\n    this.$setCell(ri, ci, newCell);\r\n    setCell(ri, ci, oldCell, newCell);\r\n  }\r\n\r\n  endNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.endNotice();\r\n  }\r\n\r\n  goNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.goNotice();\r\n  }\r\n\r\n  backNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.backNotice();\r\n  }\r\n}\r\n\r\nexport {\r\n  TableCellDataProxy,\r\n};\r\n","class CellDataRecord {\r\n  constructor({ ri, ci, oldCell, newCell }) {\r\n    this.ri = ri;\r\n    this.ci = ci;\r\n    this.oldCell = oldCell;\r\n    this.newCell = newCell;\r\n  }\r\n}\r\n\r\nexport { CellDataRecord };\r\n","const MERGE_RECORD_TYPE = {\r\n  ADD: Symbol('添加一个合并单元格'),\r\n  DELETE: Symbol('删除一个合并单元格'),\r\n};\r\n\r\nclass MergeDataRecord {\r\n  constructor({ merge, recordType }) {\r\n    this.merge = merge;\r\n    this.recordType = recordType;\r\n  }\r\n}\r\n\r\nexport {\r\n  MergeDataRecord,\r\n  MERGE_RECORD_TYPE,\r\n};\r\n","import { DataProxy } from '../DataProxy';\r\nimport { Constant } from '../../../../const/Constant';\r\n\r\nclass TableMergeDataProxy extends DataProxy {\r\n\r\n  constructor(snapshot, option = {\r\n    on: {\r\n      addMerge() {}, deleteMerge() {},\r\n    },\r\n  }) {\r\n    super();\r\n    this.snapshot = snapshot;\r\n    this.option = option;\r\n  }\r\n\r\n  $addMerge(merge) {\r\n    this.change = true;\r\n    const { snapshot } = this;\r\n    const { merges } = snapshot;\r\n    merges.getIncludes(merge, merge => this.deleteMerge(merge));\r\n    merges.add(merge, false);\r\n  }\r\n\r\n  $deleteMerge(merge) {\r\n    this.change = true;\r\n    const { snapshot } = this;\r\n    const { merges } = snapshot;\r\n    merges.delete(merge);\r\n  }\r\n\r\n  deleteMerge(merge) {\r\n    const { option } = this;\r\n    const { on } = option;\r\n    const { deleteMerge } = on;\r\n    this.$deleteMerge(merge);\r\n    deleteMerge(merge);\r\n  }\r\n\r\n  addMerge(merge) {\r\n    const { option } = this;\r\n    const { on } = option;\r\n    const { addMerge } = on;\r\n    this.$addMerge(merge);\r\n    addMerge(merge);\r\n  }\r\n\r\n  endNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.endNotice();\r\n  }\r\n\r\n  goNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.goNotice();\r\n  }\r\n\r\n  backNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n    }\r\n    super.backNotice();\r\n  }\r\n\r\n}\r\n\r\nexport { TableMergeDataProxy };\r\n","import { DataProxy } from '../DataProxy';\r\nimport { Constant } from '../../../../const/Constant';\r\n\r\nclass TableColsDataProxy extends DataProxy {\r\n\r\n  constructor(snapshot, option = {\r\n    on: { setWidth() {} },\r\n  }) {\r\n    super();\r\n    this.snapshot = snapshot;\r\n    this.option = option;\r\n  }\r\n\r\n  $setWidth(ci, width) {\r\n    this.change = true;\r\n    const { snapshot } = this;\r\n    const { cols } = snapshot;\r\n    cols.setWidth(ci, width);\r\n  }\r\n\r\n  setWidth(ci, newWidth) {\r\n    const { option, snapshot } = this;\r\n    const { on } = option;\r\n    const { setWidth } = on;\r\n    const { cols } = snapshot;\r\n    const oldWidth = cols.getWidth(ci);\r\n    this.$setWidth(ci, newWidth);\r\n    setWidth(ci, oldWidth, newWidth);\r\n  }\r\n\r\n  endNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH);\r\n    }\r\n    super.endNotice();\r\n  }\r\n\r\n  backNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH);\r\n    }\r\n    super.backNotice();\r\n  }\r\n\r\n  goNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH);\r\n    }\r\n    super.goNotice();\r\n  }\r\n}\r\n\r\nexport { TableColsDataProxy };\r\n","class ColsDataRecord {\r\n  constructor({ ci, oldWidth, newWidth }) {\r\n    this.ci = ci;\r\n    this.oldWidth = oldWidth;\r\n    this.newWidth = newWidth;\r\n  }\r\n}\r\n\r\nexport { ColsDataRecord };\r\n","import { DataProxy } from '../DataProxy';\r\nimport { Constant } from '../../../../const/Constant';\r\n\r\nclass TableRowsDataProxy extends DataProxy {\r\n\r\n  constructor(snapshot, option = {\r\n    on: {\r\n      setHeight() {},\r\n    },\r\n  }) {\r\n    super();\r\n    this.snapshot = snapshot;\r\n    this.option = option;\r\n  }\r\n\r\n  $setHeight(ri, height) {\r\n    this.change = true;\r\n    const { snapshot } = this;\r\n    const { rows } = snapshot;\r\n    rows.setHeight(ri, height);\r\n  }\r\n\r\n  setHeight(ri, newHeight) {\r\n    const { option, snapshot } = this;\r\n    const { on } = option;\r\n    const { setHeight } = on;\r\n    const { rows } = snapshot;\r\n    const oldHeight = rows.getHeight(ri);\r\n    this.$setHeight(ri, newHeight);\r\n    setHeight(ri, oldHeight, newHeight);\r\n  }\r\n\r\n  endNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT);\r\n    }\r\n    super.endNotice();\r\n  }\r\n\r\n  backNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT);\r\n    }\r\n    super.backNotice();\r\n  }\r\n\r\n  goNotice() {\r\n    const { snapshot } = this;\r\n    const { table } = snapshot;\r\n    if (this.change) {\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      table.trigger(Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT);\r\n    }\r\n    super.goNotice();\r\n  }\r\n}\r\n\r\nexport { TableRowsDataProxy };\r\n","class RowsDataRecord {\r\n  constructor({ ri, oldHeight, newHeight }) {\r\n    this.ri = ri;\r\n    this.oldHeight = oldHeight;\r\n    this.newHeight = newHeight;\r\n  }\r\n}\r\n\r\nexport { RowsDataRecord };\r\n","import { TableCellDataProxy } from './proxy/TableCellDataProxy';\r\nimport { CellDataRecord } from './record/CellDataRecord';\r\nimport { MERGE_RECORD_TYPE, MergeDataRecord } from './record/MergeDataRecord';\r\nimport { ChartDataRecord } from './record/ChartDataRecord';\r\nimport { TableMergeDataProxy } from './proxy/TableMergeDataProxy';\r\nimport { TableColsDataProxy } from './proxy/TableColsDataProxy';\r\nimport { ColsDataRecord } from './record/ColsDataRecord';\r\nimport { TableRowsDataProxy } from './proxy/TableRowsDataProxy';\r\nimport { RowsDataRecord } from './record/RowsDataRecord';\r\n\r\nclass TableDataSnapshot {\r\n\r\n  constructor({\r\n    table, cells, merges, cols, rows,\r\n  }) {\r\n    this.record = false;\r\n    this.backLayerStack = [];\r\n    this.recordLayer = [];\r\n    this.goLayerStack = [];\r\n    this.table = table;\r\n    this.cells = cells;\r\n    this.merges = merges;\r\n    this.cols = cols;\r\n    this.rows = rows;\r\n    this.mergeDataProxy = new TableMergeDataProxy(this, {\r\n      on: {\r\n        deleteMerge: (merge) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new MergeDataRecord({ merge, recordType: MERGE_RECORD_TYPE.DELETE }));\r\n        },\r\n        addMerge: (merge) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new MergeDataRecord({ merge, recordType: MERGE_RECORD_TYPE.ADD }));\r\n        },\r\n      },\r\n    });\r\n    this.cellDataProxy = new TableCellDataProxy(this, {\r\n      on: {\r\n        setCell: (ri, ci, oldCell, newCell) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new CellDataRecord({ ri, ci, oldCell, newCell }));\r\n        },\r\n      },\r\n    });\r\n    this.colsDataProxy = new TableColsDataProxy(this, {\r\n      on: {\r\n        setWidth: (ci, oldWidth, newWidth) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new ColsDataRecord({ ci, oldWidth, newWidth }));\r\n        },\r\n      },\r\n    });\r\n    this.rowsDataProxy = new TableRowsDataProxy(this, {\r\n      on: {\r\n        setHeight: (ri, oldHeight, newHeight) => {\r\n          if (this.record === false) return;\r\n          const { recordLayer } = this;\r\n          recordLayer.push(new RowsDataRecord({ ri, oldHeight, newHeight }));\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  back() {\r\n    const { backLayerStack, goLayerStack, table } = this;\r\n    const layer = backLayerStack.pop();\r\n    for (let i = layer.length - 1; i >= 0; i -= 1) {\r\n      const item = layer[i];\r\n      // 单元格元素\r\n      if (item instanceof CellDataRecord) {\r\n        const { ri, ci, oldCell } = item;\r\n        this.cellDataProxy.$setCell(ri, ci, oldCell);\r\n        continue;\r\n      }\r\n      // 合并单元格元素\r\n      if (item instanceof MergeDataRecord) {\r\n        const { recordType } = item;\r\n        switch (recordType) {\r\n          case MERGE_RECORD_TYPE.DELETE: {\r\n            const { merge } = item;\r\n            this.mergeDataProxy.$addMerge(merge);\r\n            break;\r\n          }\r\n          case MERGE_RECORD_TYPE.ADD: {\r\n            const { merge } = item;\r\n            this.mergeDataProxy.$deleteMerge(merge);\r\n            break;\r\n          }\r\n          default: break;\r\n        }\r\n        continue;\r\n      }\r\n      // 图表元素\r\n      if (item instanceof ChartDataRecord) {\r\n        // TODO...\r\n        // ...\r\n      }\r\n      //  列宽元素\r\n      if (item instanceof ColsDataRecord) {\r\n        const { ci, oldWidth } = item;\r\n        this.colsDataProxy.$setWidth(ci, oldWidth);\r\n        continue;\r\n      }\r\n      // 行高元素\r\n      if (item instanceof RowsDataRecord) {\r\n        const { ri, oldHeight } = item;\r\n        this.rowsDataProxy.$setHeight(ri, oldHeight);\r\n      }\r\n    }\r\n    goLayerStack.push(layer);\r\n    this.mergeDataProxy.backNotice();\r\n    this.cellDataProxy.backNotice();\r\n    this.colsDataProxy.backNotice();\r\n    this.rowsDataProxy.backNotice();\r\n    table.render();\r\n  }\r\n\r\n  go() {\r\n    const { backLayerStack, goLayerStack, table } = this;\r\n    const layer = goLayerStack.pop();\r\n    for (let i = 0, len = layer.length; i < len; i += 1) {\r\n      const item = layer[i];\r\n      // 单元格元素\r\n      if (item instanceof CellDataRecord) {\r\n        const { ri, ci, newCell } = item;\r\n        this.cellDataProxy.$setCell(ri, ci, newCell);\r\n        continue;\r\n      }\r\n      // 合并单元格元素\r\n      if (item instanceof MergeDataRecord) {\r\n        const { recordType } = item;\r\n        switch (recordType) {\r\n          case MERGE_RECORD_TYPE.DELETE: {\r\n            const { merge } = item;\r\n            this.mergeDataProxy.$deleteMerge(merge);\r\n            break;\r\n          }\r\n          case MERGE_RECORD_TYPE.ADD: {\r\n            const { merge } = item;\r\n            this.mergeDataProxy.$addMerge(merge);\r\n            break;\r\n          }\r\n          default: break;\r\n        }\r\n        continue;\r\n      }\r\n      // 图表元素\r\n      if (item instanceof ChartDataRecord) {\r\n        // TODO...\r\n        // ...\r\n      }\r\n      //  列宽元素\r\n      if (item instanceof ColsDataRecord) {\r\n        const { ci, newWidth } = item;\r\n        this.colsDataProxy.$setWidth(ci, newWidth);\r\n        continue;\r\n      }\r\n      // 行高元素\r\n      if (item instanceof RowsDataRecord) {\r\n        const { ri, newHeight } = item;\r\n        this.rowsDataProxy.$setHeight(ri, newHeight);\r\n      }\r\n    }\r\n    backLayerStack.push(layer);\r\n    this.mergeDataProxy.goNotice();\r\n    this.cellDataProxy.goNotice();\r\n    this.colsDataProxy.goNotice();\r\n    this.rowsDataProxy.goNotice();\r\n    table.render();\r\n  }\r\n\r\n  end() {\r\n    const { recordLayer, backLayerStack } = this;\r\n    this.record = false;\r\n    if (recordLayer.length) {\r\n      backLayerStack.push(recordLayer);\r\n    }\r\n    this.recordLayer = [];\r\n    this.mergeDataProxy.endNotice();\r\n    this.cellDataProxy.endNotice();\r\n    this.colsDataProxy.endNotice();\r\n    this.rowsDataProxy.endNotice();\r\n  }\r\n\r\n  begin() {\r\n    this.record = true;\r\n    this.goLayerStack = [];\r\n  }\r\n\r\n  canBack() {\r\n    const { backLayerStack } = this;\r\n    return backLayerStack.length !== 0;\r\n  }\r\n\r\n  canGo() {\r\n    const { goLayerStack } = this;\r\n    return goLayerStack.length !== 0;\r\n  }\r\n\r\n}\r\n\r\nexport { TableDataSnapshot };\r\n","import { XEvent } from './XEvent';\r\n\r\nclass Clipboard {\r\n\r\n  constructor({\r\n    target = document.body,\r\n    filter = () => false,\r\n    paste = () => {},\r\n  } = {}) {\r\n    this.target = target;\r\n    this.filter = filter;\r\n    this.paste = paste;\r\n    this.bind();\r\n  }\r\n\r\n  bind() {\r\n    const { target, paste, filter } = this;\r\n    XEvent.bind(target, \"paste\", (e) => {\r\n      if (filter()) {\r\n        paste(e);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Clipboard\r\n}\r\n","\r\n/**\r\n * XIconFocus\r\n */\r\nclass XIconFocus {\r\n\r\n  constructor(icon = null) {\r\n    this.activate = icon;\r\n  }\r\n\r\n  setActivate(icon) {\r\n    this.activate = icon;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XIconFocus,\r\n};\r\n","import { XIcon } from './XIcon';\r\nimport { XIconFocus } from './XIconFocus';\r\n\r\n/**\r\n * XIconBuilder\r\n */\r\nclass XIconBuilder {\r\n\r\n  /**\r\n   * 图标事件处理\r\n   * @param type\r\n   * @param native\r\n   * @param staticIcons\r\n   * @param fixedIcons\r\n   * @param sx\r\n   * @param sy\r\n   * @param fx\r\n   * @param fy\r\n   */\r\n  xIconsEvent({\r\n    type,\r\n    native,\r\n    sx,\r\n    sy,\r\n    fx,\r\n    fy,\r\n    staticIcons = [],\r\n    fixedIcons = [],\r\n  }) {\r\n    if (staticIcons.length + fixedIcons.length === 0) {\r\n      this.clearFocus();\r\n    } else {\r\n      staticIcons.forEach((icon) => {\r\n        icon.eventHandle({\r\n          type, x: sx, y: sy, native,\r\n        });\r\n      });\r\n      fixedIcons.forEach((icon) => {\r\n        icon.eventHandle({\r\n          type, x: fx, y: fy, native,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 清空焦点元素\r\n   */\r\n  clearFocus() {\r\n    const { focus } = this;\r\n    const { activate } = focus;\r\n    if (activate) {\r\n      focus.setActivate(null);\r\n      activate.onLeave();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * XIconBuilder\r\n   * @param focus\r\n   */\r\n  constructor({\r\n    focus = new XIconFocus(),\r\n  } = {}) {\r\n    this.focus = focus;\r\n  }\r\n\r\n  /**\r\n   * 构建小图标\r\n   * @param options\r\n   * @returns {XIcon}\r\n   */\r\n  build(options = {}) {\r\n    const { focus } = this;\r\n    const xIcon = new XIcon(options);\r\n    xIcon.setFocus(focus);\r\n    return xIcon;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XIconBuilder,\r\n};\r\n","\nclass RowHeightIndex {\n\n  constructor({\n    group = 1000,\n    rows,\n    xFixedView,\n    xIteratorBuilder,\n  }) {\n    this.group = group;\n    this.rows = rows;\n    this.index = [];\n    this.xFixedView = xFixedView;\n    this.xIteratorBuilder = xIteratorBuilder;\n  }\n\n  computeIndex() {\n    const { rows, group, xFixedView } = this;\n    const { len } = rows;\n    const fixedView = xFixedView.getFixedView();\n    const min = fixedView.eri + 1;\n    const index = [];\n    let top = 0;\n    index.push({\n      ri: min, top: 0,\n    });\n    this.xIteratorBuilder.getRowIterator()\n      .setBegin(min + 1)\n      .setEnd(len - 1)\n      .setLoop((ri) => {\n        if (ri % group === 0) {\n          index.push({\n            ri, top,\n          });\n        }\n        top += rows.getHeight(ri);\n      })\n      .setSkip((ri) => {\n        if (ri % group === 0) {\n          index.push({\n            ri, top,\n          });\n        }\n      })\n      .execute();\n    this.index = index;\n  }\n\n  getTop(height) {\n    const { index } = this;\n    const { length } = index;\n    for (let i = 0; i < length; i++) {\n      const { top } = index[i];\n      if (height <= top) {\n        return i === 0 ? index[i] : index[i - 1];\n      }\n    }\n    return index[length - 1];\n  }\n\n}\n\nexport {\n  RowHeightIndex,\n};\n","class BaseIterator {\r\n\r\n  constructor() {\r\n    this.finishCallback = () => {};\r\n    this.loopCallback = () => {};\r\n    this.nextCallback = () => {};\r\n    this.end = 0;\r\n    this.begin = 0;\r\n  }\r\n\r\n  execute() {\r\n    const {\r\n      loopCallback, nextCallback,\r\n    } = this;\r\n    const {\r\n      begin, end,\r\n    } = this;\r\n    let i;\r\n    if (begin > end) {\r\n      i = begin;\r\n      for (; i >= end; i -= 1, nextCallback(i)) {\r\n        const res = loopCallback(i);\r\n        if (res === false) {\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      i = begin;\r\n      for (; i <= end; i += 1, nextCallback(i)) {\r\n        const res = loopCallback(i);\r\n        if (res === false) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.finishCallback(i);\r\n    return this;\r\n  }\r\n\r\n  setLoop(callback) {\r\n    this.loopCallback = callback;\r\n    return this;\r\n  }\r\n\r\n  setNext(callback) {\r\n    this.nextCallback = callback;\r\n    return this;\r\n  }\r\n\r\n  setFinish(callback) {\r\n    this.finishCallback = callback;\r\n    return this;\r\n  }\r\n\r\n  setEnd(end) {\r\n    this.end = end;\r\n    return this;\r\n  }\r\n\r\n  setBegin(begin) {\r\n    this.begin = begin;\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  BaseIterator,\r\n};\r\n","import { BaseIterator } from './BaseIterator';\r\n\r\nlet fold = [];\r\n\r\nclass RowsIterator extends BaseIterator {\r\n\r\n  static getInstance() {\r\n    return new RowsIterator();\r\n  }\r\n\r\n  static setFold(value) {\r\n    fold = value;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.skipCallback = () => {};\r\n    this.useFold = true;\r\n  }\r\n\r\n  execute() {\r\n    const {\r\n      loopCallback, nextCallback, skipCallback,\r\n    } = this;\r\n    const {\r\n      begin, end, useFold,\r\n    } = this;\r\n    let i;\r\n    if (begin > end) {\r\n      i = begin;\r\n      for (; i >= end; i -= 1, nextCallback(i)) {\r\n        if (useFold && fold[i]) {\r\n          skipCallback(i);\r\n          continue;\r\n        }\r\n        const res = loopCallback(i);\r\n        if (res === false) {\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      i = begin;\r\n      for (; i <= end; i += 1, nextCallback(i)) {\r\n        if (useFold && fold[i]) {\r\n          skipCallback(i);\r\n          continue;\r\n        }\r\n        const res = loopCallback(i);\r\n        if (res === false) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.finishCallback(i);\r\n    return this;\r\n  }\r\n\r\n  setSkip(callback) {\r\n    this.skipCallback = callback;\r\n    return this;\r\n  }\r\n\r\n  nextRow() {\r\n    const { begin } = this;\r\n    let ri = -1;\r\n    this.setLoop((i) => {\r\n      if (i !== begin) {\r\n        ri = i;\r\n        return false;\r\n      }\r\n      return true;\r\n    }).execute();\r\n    return ri;\r\n  }\r\n\r\n  hasFold() {\r\n    let find = false;\r\n    this.setLoop((i) => {\r\n      if (fold[i]) {\r\n        find = true;\r\n        return false;\r\n      }\r\n      return true;\r\n    }).foldOnOff(false).execute();\r\n    return find;\r\n  }\r\n\r\n  foldOnOff(onOff) {\r\n    this.useFold = onOff;\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RowsIterator,\r\n};\r\n","import { BaseIterator } from './BaseIterator';\r\n\r\nclass ColsIterator extends BaseIterator {\r\n\r\n  nextRow() {\r\n    const { begin } = this;\r\n    let ci = -1;\r\n    this.setLoop((i) => {\r\n      if (i !== begin) {\r\n        ci = i;\r\n        return false;\r\n      }\r\n      return true;\r\n    }).execute();\r\n    return ci;\r\n  }\r\n\r\n  static getInstance() {\r\n    return new ColsIterator();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  ColsIterator,\r\n};\r\n","import { RowsIterator } from './RowsIterator';\r\nimport { ColsIterator } from './ColsIterator';\r\n\r\nclass XIteratorBuilder {\r\n\r\n  getRowIterator() {\r\n    return RowsIterator.getInstance();\r\n  }\r\n\r\n  getColIterator() {\r\n    return ColsIterator.getInstance();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XIteratorBuilder,\r\n};\r\n","import { PlainUtils } from '../../utils/PlainUtils';\nimport { Code } from './tablebase/Code';\nimport { Rows } from './tablebase/Rows';\nimport { Cols } from './tablebase/Cols';\nimport { Scroll, SCROLL_TYPE } from './tablebase/Scroll';\nimport { Widget } from '../../lib/Widget';\nimport { Constant, cssPrefix } from '../../const/Constant';\nimport { XEvent } from '../../lib/XEvent';\nimport { Scale, ScaleAdapter } from './tablebase/Scale';\nimport { XTableMousePointer } from './XTableMousePointer';\nimport { XTableKeyboard } from './XTableKeyboard';\nimport { XReSizer } from './resizer/XReSizer';\nimport { YReSizer } from './resizer/YReSizer';\nimport { XHeightLight } from './highlight/XHeightLight';\nimport { YHeightLight } from './highlight/YHeightLight';\nimport { XTableFocus } from './XTableFocus';\nimport { XDraw } from '../../canvas/XDraw';\nimport { RectRange } from './tablebase/RectRange';\nimport { XTableScrollView } from './XTableScrollView';\nimport { XTableAreaView } from './XTableAreaView';\nimport { XTableEdit } from './XTableEdit';\nimport { XTableStyle } from './XTableStyle';\nimport { XScreen } from './xscreen/XScreen';\nimport { XSelectItem } from './xscreenitems/xselect/XSelectItem';\nimport { XAutoFillItem } from './xscreenitems/xautofill/XAutoFillItem';\nimport { XCopyStyle } from './xscreenitems/xcopystyle/XCopyStyle';\nimport { RowFixed } from './tablefixed/RowFixed';\nimport { ColFixed } from './tablefixed/ColFixed';\nimport { DropRowFixed } from './tablefixed/drop/DropRowFixed';\nimport { DropColFixed } from './tablefixed/drop/DropColFixed';\nimport { XFixedMeasure } from './tablebase/XFixedMeasure';\nimport { XFixedView } from './tablebase/XFixedView';\nimport { XFilter } from './xscreenitems/xfilter/XFilter';\nimport { TableDataSnapshot } from './datasnapshot/TableDataSnapshot';\nimport { CellMergeCopyHelper } from './helper/CellMergeCopyHelper';\nimport { Clipboard } from '../../lib/Clipboard';\nimport { XIcon } from './xicon/XIcon';\nimport { XIconBuilder } from './xicon/XIconBuilder';\nimport { BaseFont } from '../../canvas/font/BaseFont';\nimport { RowHeightIndex } from './tablebase/RowHeightIndex';\nimport { XIteratorBuilder } from './iterator/XIteratorBuilder';\n\nclass Dimensions {\n\n  constructor(table) {\n    this.table = table;\n    this.scrollView = null;\n    this.width = null;\n    this.height = null;\n    this.x = null;\n    this.y = null;\n  }\n\n  reset() {\n    this.scrollView = null;\n    this.width = null;\n    this.height = null;\n    this.x = null;\n    this.y = null;\n  }\n\n  getX() {\n    throw new TypeError('child impl');\n  }\n\n  getY() {\n    throw new TypeError('child impl');\n  }\n\n  getHeight() {\n    throw new TypeError('child impl');\n  }\n\n  getWidth() {\n    throw new TypeError('child impl');\n  }\n\n}\n\n// ============================== 表格区域信息 ===============================\n\nclass XTableFrozenContent extends Dimensions {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const width = xFixedMeasure.getWidth();\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const height = xFixedMeasure.getHeight();\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { index } = table;\n    const x = index.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { index } = table;\n    const y = index.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { rows, cols } = table;\n    const { xFixedView } = table;\n    const view = xFixedView.getFixedView();\n    view.w = cols.rectRangeSumWidth(view);\n    view.h = rows.rectRangeSumHeight(view);\n    this.scrollView = view;\n    return view.clone();\n  }\n\n}\n\nclass XTableTopIndex extends Dimensions {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { index } = table;\n    const height = index.getHeight();\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const x = index.getWidth() + xLeft.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const y = 0;\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { index } = table;\n    const { xTableAreaView } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    scrollView.sri = 0;\n    scrollView.eri = 0;\n    scrollView.h = index.getHeight();\n    this.scrollView = scrollView;\n    return scrollView.clone();\n  }\n\n}\n\nclass XTableLeftIndex extends Dimensions {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { index } = table;\n    const width = index.getWidth();\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const x = 0;\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const y = index.getHeight() + xTop.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const { index } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    scrollView.sci = 0;\n    scrollView.eci = 0;\n    scrollView.w = index.getWidth();\n    this.scrollView = scrollView;\n    return scrollView.clone();\n  }\n\n}\n\nclass XTableLeft extends Dimensions {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const width = xFixedMeasure.getWidth();\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { index } = table;\n    const x = index.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const y = index.getHeight() + xTop.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { xFixedView } = table;\n    const { cols } = table;\n    const { xTableAreaView } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    const fixedView = xFixedView.getFixedView();\n    scrollView.sci = fixedView.sci;\n    scrollView.eci = fixedView.eci;\n    scrollView.w = cols.sectionSumWidth(scrollView.sci, scrollView.eci);\n    this.scrollView = scrollView;\n    return scrollView.clone();\n  }\n\n}\n\nclass XTableTop extends Dimensions {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xFixedMeasure } = table;\n    const height = xFixedMeasure.getHeight();\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const x = index.getWidth() + xLeft.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { index } = table;\n    const y = index.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { xFixedView } = table;\n    const { rows } = table;\n    const { xTableAreaView } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    const fixedView = xFixedView.getFixedView();\n    scrollView.sri = fixedView.sri;\n    scrollView.eri = fixedView.eri;\n    scrollView.h = rows.sectionSumHeight(scrollView.sri, scrollView.eri);\n    this.scrollView = scrollView;\n    return scrollView.clone();\n  }\n\n}\n\nclass XTableContent extends Dimensions {\n\n  getWidth() {\n    if (PlainUtils.isNumber(this.width)) {\n      return this.width;\n    }\n    const { table } = this;\n    const { index } = table;\n    const { xLeft } = table;\n    const width = table.visualWidth() - (index.getWidth() + xLeft.getWidth());\n    this.width = width;\n    return width;\n  }\n\n  getHeight() {\n    if (PlainUtils.isNumber(this.height)) {\n      return this.height;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const height = table.visualHeight() - (index.getHeight() + xTop.getHeight());\n    this.height = height;\n    return height;\n  }\n\n  getX() {\n    if (PlainUtils.isNumber(this.x)) {\n      return this.x;\n    }\n    const { table } = this;\n    const { xLeft } = table;\n    const { index } = table;\n    const x = index.getWidth() + xLeft.getWidth();\n    this.x = x;\n    return x;\n  }\n\n  getY() {\n    if (PlainUtils.isNumber(this.y)) {\n      return this.y;\n    }\n    const { table } = this;\n    const { xTop } = table;\n    const { index } = table;\n    const y = index.getHeight() + xTop.getHeight();\n    this.y = y;\n    return y;\n  }\n\n  getScrollView() {\n    if (PlainUtils.isNotUnDef(this.scrollView)) {\n      return this.scrollView.clone();\n    }\n    const { table } = this;\n    const { xTableAreaView } = table;\n    const scrollView = xTableAreaView.getScrollView();\n    this.scrollView = scrollView;\n    return scrollView.clone();\n  }\n\n}\n\n// ================================= 快捷键 =================================\n\nclass KeyBoardTabCode {\n\n  static register(table) {\n    const {\n      keyboard, cols, rows, xScreen, edit,\n    } = table;\n    const xSelect = xScreen.findType(XSelectItem);\n    const merges = table.getTableMerges();\n    let $tabNext = null;\n    keyboard.register({\n      target: table,\n      keyCode: 9,\n      callback: () => {\n        edit.hideEdit();\n        const { selectRange } = xSelect;\n        const { tabNext } = selectRange;\n        const rect = selectRange.clone();\n        if (!tabNext) {\n          const { sri, sci } = rect;\n          $tabNext = { sri, sci };\n        }\n        const cLen = cols.len - 1;\n        const rLen = rows.len - 1;\n        let { sri, sci } = $tabNext;\n        const srcMerges = merges.getFirstIncludes(sri, sci);\n        if (srcMerges) {\n          sci = srcMerges.eci;\n        }\n        if (sci >= cLen && sri >= rLen) {\n          return;\n        }\n        if (sci >= cLen) {\n          sri += 1;\n          sci = 0;\n        } else {\n          sci += 1;\n        }\n        $tabNext.sri = sri;\n        $tabNext.sci = sci;\n        let eri = sri;\n        let eci = sci;\n        const targetMerges = merges.getFirstIncludes(sri, sci);\n        if (targetMerges) {\n          sri = targetMerges.sri;\n          sci = targetMerges.sci;\n          eri = targetMerges.eri;\n          eci = targetMerges.eci;\n        }\n        rect.tabNext = true;\n        rect.sri = sri;\n        rect.sci = sci;\n        rect.eri = eri;\n        rect.eci = eci;\n        xSelect.setRange(rect);\n        edit.showEdit();\n      },\n    });\n  }\n\n}\n\n// ================================= XTable ================================\n\n/**\n * XTable\n */\nclass XTableDimensions extends Widget {\n\n  /**\n   * XTable\n   * @param settings\n   */\n  constructor({ settings }) {\n    super(`${cssPrefix}-table`);\n    // 表格设置\n    this.settings = PlainUtils.mergeDeep({\n      index: {\n        height: 30,\n        width: 50,\n        gridColor: '#c1c1c1',\n        size: 11,\n        color: '#000000',\n      },\n      table: {\n        showGrid: true,\n        background: '#ffffff',\n        borderColor: '#000000',\n        gridColor: '#e1e1e1',\n      },\n      rows: {\n        len: 1000,\n        height: 30,\n        data: [],\n      },\n      cols: {\n        len: 36,\n        width: 110,\n        data: [],\n      },\n      xFixedView: {\n        fixedView: new RectRange(0, 0, -1, -1),\n        fxLeft: -1,\n        fxTop: -1,\n      },\n      xFixedBar: {\n        height: RowFixed.HEIGHT,\n        width: ColFixed.WIDTH,\n        background: '#eaeaea',\n        buttonColor: '#c1c1c1',\n      },\n      data: [],\n      merge: {\n        merges: [],\n      },\n    }, settings);\n    // 视口区域大小\n    this.visualHeightCache = null;\n    this.visualWidthCache = null;\n    // 图标创建器\n    this.xIconBuilder = new XIconBuilder();\n    // 行列迭代器\n    this.xIteratorBuilder = new XIteratorBuilder();\n    // 表格数据配置\n    this.scale = new Scale();\n    this.index = new Code({\n      scaleAdapter: new ScaleAdapter({\n        goto: v => XDraw.srcTransformCssPx(this.scale.goto(v)),\n      }),\n      ...this.settings.index,\n    });\n    this.rows = new Rows({\n      scaleAdapter: new ScaleAdapter({\n        goto: v => XDraw.srcTransformCssPx(this.scale.goto(v)),\n      }),\n      xIteratorBuilder: this.xIteratorBuilder,\n      ...this.settings.rows,\n    });\n    this.cols = new Cols({\n      scaleAdapter: new ScaleAdapter({\n        goto: v => XDraw.srcTransformCssPx(this.scale.goto(v)),\n      }),\n      xIteratorBuilder: this.xIteratorBuilder,\n      ...this.settings.cols,\n    });\n    // 冻结视图坐标\n    this.xFixedView = new XFixedView(this.settings.xFixedView);\n    this.xFixedMeasure = new XFixedMeasure({\n      fixedView: this.xFixedView,\n      cols: this.cols,\n      rows: this.rows,\n    });\n    // 滚动视图的坐标\n    this.scroll = new Scroll({\n      xFixedView: this.xFixedView,\n    });\n    // 表格滚动视图\n    this.xTableScrollView = new XTableScrollView({\n      scroll: this.scroll,\n      rows: this.rows,\n      cols: this.cols,\n      xIteratorBuilder: this.xIteratorBuilder,\n      getHeight: () => this.xContent.getHeight(),\n      getWidth: () => this.xContent.getWidth(),\n    });\n    // 表格视图区域\n    this.xTableAreaView = new XTableAreaView({\n      xTableScrollView: this.xTableScrollView,\n      rows: this.rows,\n      cols: this.cols,\n      scroll: this.scroll,\n    });\n    // 表格界面\n    this.xTableStyle = new XTableStyle({\n      xTableScrollView: this.xTableScrollView,\n      scroll: this.scroll,\n      xIteratorBuilder: this.xIteratorBuilder,\n      settings: this.settings,\n      xFixedView: this.xFixedView,\n    });\n    // 数据快照\n    this.tableDataSnapshot = new TableDataSnapshot({\n      merges: this.getTableMerges(),\n      cells: this.getTableCells(),\n      table: this,\n      cols: this.cols,\n      rows: this.rows,\n    });\n    // table区域\n    this.xTableFrozenContent = new XTableFrozenContent(this);\n    this.xLeftIndex = new XTableLeftIndex(this);\n    this.xTopIndex = new XTableTopIndex(this);\n    this.xLeft = new XTableLeft(this);\n    this.xTop = new XTableTop(this);\n    this.xContent = new XTableContent(this);\n    // table组件\n    this.focus = new XTableFocus(this);\n    this.mousePointer = new XTableMousePointer(this);\n    this.keyboard = new XTableKeyboard(this);\n    this.xScreen = new XScreen(this);\n    this.xReSizer = new XReSizer(this);\n    this.yReSizer = new YReSizer(this);\n    this.xHeightLight = new XHeightLight(this);\n    this.yHeightLight = new YHeightLight(this);\n    this.edit = new XTableEdit(this);\n    this.rowFixed = new RowFixed(this);\n    this.colFixed = new ColFixed(this);\n    this.dropColFixed = new DropColFixed(this);\n    this.dropRowFixed = new DropRowFixed(this);\n    // 单元格辅助类\n    this.cellMergeCopyHelper = new CellMergeCopyHelper(this);\n    // 粘贴板\n    this.clipboard = new Clipboard({\n      filter: () => {\n        const { focus } = this;\n        const { activate } = focus;\n        const { target } = activate;\n        return target === this;\n      },\n      paste: () => {},\n    });\n    // 表格行高索引\n    this.rowHeightIndex = new RowHeightIndex({\n      rows: this.rows,\n      xFixedView: this.xFixedView,\n      xIteratorBuilder: this.xIteratorBuilder,\n    });\n    this.rowHeightIndex.computeIndex();\n  }\n\n  /**\n   * 滚动行区间\n   * @param min\n   * @param max\n   * @param initS\n   * @param initV\n   * @param ifv\n   * @param getV\n   * @return {(*|number)[]}\n   */\n  rowsReduceIf(min, max, initS, initV, ifv, getV) {\n    let s = initS;\n    let v = initV;\n    let ri = min;\n    this.xIteratorBuilder.getRowIterator()\n      .setBegin(ri)\n      .setEnd(max - 1)\n      .setLoop((i) => {\n        if (s >= ifv) {\n          return false;\n        }\n        v = getV(i);\n        s += v;\n        return true;\n      })\n      .setFinish((i) => {\n        ri = i;\n      })\n      .execute();\n    return [ri, s - v, v];\n  }\n\n  /**\n   * 滚动列区间\n   * @param min\n   * @param max\n   * @param initS\n   * @param initV\n   * @param ifv\n   * @param getV\n   * @return {(*|number)[]}\n   */\n  colsReduceIf(min, max, initS, initV, ifv, getV) {\n    let s = initS;\n    let v = initV;\n    let ri = min;\n    this.xIteratorBuilder.getColIterator()\n      .setBegin(ri)\n      .setEnd(max - 1)\n      .setLoop((i) => {\n        if (s >= ifv) {\n          return false;\n        }\n        v = getV(i);\n        s += v;\n        return true;\n      })\n      .setFinish((i) => {\n        ri = i;\n      })\n      .execute();\n    return [ri, s - v, v];\n  }\n\n  /**\n   * 单元辅助实例\n   * @returns {OperateCellsHelper}\n   */\n  getOperateCellsHelper() {\n    const { xTableStyle } = this;\n    const { operateCellsHelper } = xTableStyle;\n    return operateCellsHelper;\n  }\n\n  /**\n   * 单元辅助实例\n   * @returns {StyleCellsHelper}\n   */\n  getStyleCellsHelper() {\n    const { xTableStyle } = this;\n    const { styleCellsHelper } = xTableStyle;\n    return styleCellsHelper;\n  }\n\n  /**\n   * 获取表格渲染对象\n   * @returns {XTableStyle}\n   */\n  getXTableStyle() {\n    const { xTableStyle } = this;\n    return xTableStyle;\n  }\n\n  /**\n   * 读取合并单元格\n   */\n  getTableMerges() {\n    const { xTableStyle } = this;\n    const { merges } = xTableStyle;\n    return merges;\n  }\n\n  /**\n   * 获取表格单元格\n   * @returns {Cells}\n   */\n  getTableCells() {\n    const { xTableStyle } = this;\n    const { cells } = xTableStyle;\n    return cells;\n  }\n\n  /**\n   * 滚动视图的高度\n   * @returns {*}\n   */\n  getScrollTotalHeight() {\n    const {\n      xFixedView,\n    } = this;\n    const { rows } = this;\n    let height;\n    if (xFixedView.hasFixedTop()) {\n      const fixedView = xFixedView.getFixedView();\n      height = rows.sectionSumHeight(fixedView.eri, rows.len - 1);\n    } else {\n      height = rows.sectionSumHeight(0, rows.len - 1);\n    }\n    return height;\n  }\n\n  /**\n   * 滚动视图的宽度\n   * @returns {*}\n   */\n  getScrollTotalWidth() {\n    const {\n      xFixedView,\n    } = this;\n    const { cols } = this;\n    let width;\n    if (xFixedView.hasFixedLeft()) {\n      const fixedView = xFixedView.getFixedView();\n      width = cols.sectionSumWidth(fixedView.eci, cols.len - 1);\n    } else {\n      width = cols.sectionSumWidth(0, cols.len - 1);\n    }\n    return width;\n  }\n\n  /**\n   * 获取单元格CSS样式\n   * @param row\n   * @param col\n   */\n  getCellCssStyle(row, col) {\n    const cells = this.getTableCells();\n    const cell = cells.getCell(row, col);\n    const { fontAttr, background } = cell;\n    const { align, size, color, bold, italic, name } = fontAttr;\n    const fontSize = XDraw.srcTransformCssPx(this.scale.goto(size));\n    let textAlign = 'left';\n    switch (align) {\n      case BaseFont.ALIGN.left:\n        textAlign = 'left';\n        break;\n      case BaseFont.ALIGN.center:\n        textAlign = 'center';\n        break;\n      case BaseFont.ALIGN.right:\n        textAlign = 'right';\n        break;\n    }\n    const css = `\n      text-align:${textAlign};\n      color: ${color};\n      background:${background};\n      font-style: ${italic ? 'italic' : 'initial'};\n      font-weight: ${bold ? 'bold' : 'initial'};\n      font-size: ${XDraw.srcTransformCssPx(fontSize)}px;\n      font-family: ${name};\n    `;\n    return css.replace(/\\s/g, '');\n  }\n\n  /**\n   * 索引栏高度\n   * @returns {*}\n   */\n  getIndexHeight() {\n    const { index } = this;\n    return index.getHeight();\n  }\n\n  /**\n   * 索引栏宽度\n   * @returns {*}\n   */\n  getIndexWidth() {\n    const { index } = this;\n    return index.getWidth();\n  }\n\n  /**\n   * 获取内容区域高度\n   */\n  getContentHeight() {\n    const { xContent } = this;\n    return xContent.getHeight();\n  }\n\n  /**\n   * 获取内容区域宽度\n   */\n  getContentWidth() {\n    const { xContent } = this;\n    return xContent.getWidth();\n  }\n\n  /**\n   * 固定区域宽度\n   */\n  getFixedWidth() {\n    const { xLeft } = this;\n    return xLeft.getWidth();\n  }\n\n  /**\n   * 固定区域高度\n   * @returns {*}\n   */\n  getFixedHeight() {\n    const { xTop } = this;\n    return xTop.getHeight();\n  }\n\n  /**\n   * 可视区域宽度\n   * @return {*}\n   */\n  visualWidth() {\n    if (PlainUtils.isNumber(this.visualWidthCache)) {\n      return this.visualWidthCache;\n    }\n    const width = this.box().width;\n    this.visualWidthCache = width;\n    return width;\n  }\n\n  /**\n   * 可视区域高度\n   * @return {*}\n   */\n  visualHeight() {\n    if (PlainUtils.isNumber(this.visualHeightCache)) {\n      return this.visualHeightCache;\n    }\n    const height = this.box().height;\n    this.visualHeightCache = height;\n    return height;\n  }\n\n  /**\n   * 表格图标事件处理\n   * @param type\n   * @param info\n   * @param native\n   */\n  xIconsEvent(type, info, native) {\n    const { xIconBuilder } = this;\n    const style = this.getXTableStyle();\n    const cells = this.getTableCells();\n    const {\n      fixedCellIcon, staticCellIcon,\n    } = style;\n    const {\n      ri, ci, mri, mci, fx, fy, sx, sy,\n    } = info;\n\n    let staticIconArray = [];\n    let fixedIconArray = [];\n\n    // 单元格固定小图标\n    const fixedIcon = fixedCellIcon.getIcon(ri, ci);\n    if (fixedIcon) {\n      fixedIconArray = fixedIconArray.concat(fixedIcon);\n    }\n\n    // 单元格内容小图标\n    const cell = cells.getCell(mri, mci);\n    if (cell) {\n      staticIconArray = staticIconArray.concat(cell.icons);\n    }\n\n    // 单元格固定小图标\n    const staticIcon = staticCellIcon.getIcon(mri, mci);\n    if (staticIcon) {\n      staticIconArray = staticIconArray.concat(staticIcon);\n    }\n\n    // 触发单元格小图标事件\n    xIconBuilder.xIconsEvent({\n      native,\n      type,\n      staticIcons: staticIconArray,\n      fixedIcons: fixedIconArray,\n      sx: XDraw.srcTransformStylePx(sx),\n      sy: XDraw.srcTransformStylePx(sy),\n      fx: XDraw.srcTransformStylePx(fx),\n      fy: XDraw.srcTransformStylePx(fy),\n    });\n  }\n\n  /**\n   * 更新表格的指针\n   */\n  pointerEvent(info) {\n    const { mousePointer } = this;\n    const { ri, ci } = info;\n    if (ri === -1 && ci === -1) {\n      mousePointer.set(XTableMousePointer.KEYS.default);\n      return;\n    }\n    if (ri === -1) {\n      mousePointer.set(XTableMousePointer.KEYS.sResize);\n      return;\n    }\n    if (ci === -1) {\n      mousePointer.set(XTableMousePointer.KEYS.eResize);\n      return;\n    }\n    mousePointer.set(XTableMousePointer.KEYS.cell);\n  }\n\n  /**\n   * 获取指定单元格下的行列\n   * @param x\n   * @param y\n   * @returns {{ci: number, ri: number}}\n   */\n  getRiCiByXy(x, y) {\n    const {\n      xFixedView, rows, cols,\n    } = this;\n\n    const { index } = this;\n    const fixedView = xFixedView.getFixedView();\n    const merges = this.getTableMerges();\n    const fixedWidth = this.getFixedWidth();\n    const fixedHeight = this.getFixedHeight();\n\n    let [left, top] = [x, y];\n    let [ci, ri] = [-1, -1];\n    left -= index.getWidth();\n    top -= index.getHeight();\n\n    let fx = 0;\n    if (left <= fixedWidth && x > index.getWidth()) {\n      let total = 0;\n      this.xIteratorBuilder.getColIterator()\n        .setBegin(fixedView.sci)\n        .setEnd(fixedView.eci)\n        .setLoop((i) => {\n          const width = cols.getWidth(i);\n          total += width;\n          ci = i;\n          return total < left;\n        })\n        .execute();\n      fx = (total - cols.getWidth(ci) - left) * -1;\n    } else if (x > index.getWidth()) {\n      let total = fixedWidth;\n      const viewRange = this.getScrollView();\n      this.xIteratorBuilder.getColIterator()\n        .setBegin(viewRange.sci)\n        .setEnd(viewRange.eci)\n        .setLoop((i) => {\n          const width = cols.getWidth(i);\n          total += width;\n          ci = i;\n          return total < left;\n        })\n        .execute();\n      fx = (total - cols.getWidth(ci) - left) * -1;\n    }\n\n    let fy = 0;\n    if (top < fixedHeight && y > index.getHeight()) {\n      let total = 0;\n      this.xIteratorBuilder.getRowIterator()\n        .setBegin(fixedView.sri)\n        .setEnd(fixedView.eri)\n        .setLoop((i) => {\n          const height = rows.getHeight(i);\n          total += height;\n          ri = i;\n          return total <= top;\n        })\n        .execute();\n      fy = (total - rows.getHeight(ri) - top) * -1;\n    } else if (y > index.getHeight()) {\n      let total = fixedHeight;\n      const viewRange = this.getScrollView();\n      this.xIteratorBuilder.getRowIterator()\n        .setBegin(viewRange.sri)\n        .setEnd(viewRange.eri)\n        .setLoop((i) => {\n          const height = rows.getHeight(i);\n          total += height;\n          ri = i;\n          return total <= top;\n        })\n        .execute();\n      fy = (total - rows.getHeight(ri) - top) * -1;\n    }\n\n    const merge = merges.getFirstIncludes(ri, ci);\n    let mci = ci;\n    let mri = ri;\n    let sx = fx;\n    let sy = fy;\n    if (merge) {\n      mri = merge.sri;\n      mci = merge.sci;\n      const { rows, cols } = this;\n      const height = rows.sectionSumHeight(mri, ri - 1);\n      const width = cols.sectionSumWidth(mci, ci - 1);\n      sy += height;\n      sx += width;\n    }\n\n    return {\n      ri, ci, mri, mci, fx, fy, sx, sy,\n    };\n  }\n\n  /**\n   * onAttach\n   */\n  onAttach() {\n    // 注册焦点元素\n    this.focus.register({ target: this });\n    // 表格渲染组件\n    const { xTableStyle } = this;\n    this.attach(xTableStyle);\n    // 添加屏幕组件\n    this.attach(this.xScreen);\n    this.xScreen.addItem(new XFilter(this));\n    this.xScreen.addItem(new XSelectItem(this));\n    this.xScreen.addItem(new XCopyStyle(this));\n    this.xScreen.addItem(new XAutoFillItem(this));\n    // 添加表格组件\n    this.attach(this.xHeightLight);\n    this.attach(this.yHeightLight);\n    this.attach(this.edit);\n    this.attach(this.rowFixed);\n    this.attach(this.colFixed);\n    this.attach(this.xReSizer);\n    this.attach(this.yReSizer);\n    this.attach(this.dropRowFixed);\n    this.attach(this.dropColFixed);\n    // 绑定表格事件\n    this.bind();\n    // 注册快捷键\n    KeyBoardTabCode.register(this);\n  }\n\n  /**\n   * 事件绑定\n   */\n  bind() {\n    XEvent.bind(this, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\n      this.resize();\n    });\n    XEvent.bind(this, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\n      this.resize();\n    });\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, (e) => {\n      const { x, y } = this.eventXy(e);\n      const info = this.getRiCiByXy(x, y);\n      this.pointerEvent(info);\n      this.xIconsEvent(XIcon.ICON_EVENT_TYPE.MOUSE_MOVE, info, e);\n    });\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      const { activate } = this.focus;\n      const { target } = activate;\n      if (target === this) {\n        const { x, y } = this.eventXy(e);\n        const info = this.getRiCiByXy(x, y);\n        this.xIconsEvent(XIcon.ICON_EVENT_TYPE.MOUSE_DOWN, info, e);\n      }\n    });\n    XEvent.bind(this, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\n      this.rowHeightIndex.computeIndex();\n    });\n    XEvent.bind(this, Constant.TABLE_EVENT_TYPE.FIXED_ROW_CHANGE, () => {\n      this.rowHeightIndex.computeIndex();\n    });\n  }\n\n  /**\n   * 移除事件绑定\n   */\n  unbind() {\n    this.keyboard.unbind();\n    this.focus.unbind();\n  }\n\n  /**\n   * 获取滚动视图\n   * @returns {RectRange}\n   */\n  getScrollView() {\n    const { xTableAreaView } = this;\n    return xTableAreaView.getScrollView();\n  }\n\n  /**\n   * 水平滚动\n   * @param x\n   */\n  scrollX(x) {\n    const {\n      cols, xFixedView, scroll,\n    } = this;\n    const fixedView = xFixedView.getFixedView();\n    const [\n      ci, left, width,\n    ] = this.colsReduceIf(fixedView.eci + 1, cols.len, 0, 0, x, i => cols.getWidth(i));\n    let x1 = left;\n    if (x > 0) x1 += width;\n    let type;\n    if (scroll.x > x1) {\n      type = SCROLL_TYPE.H_LEFT;\n    } else if (scroll.x < x1) {\n      type = SCROLL_TYPE.H_RIGHT;\n    }\n    scroll.type = type;\n    scroll.ci = ci;\n    scroll.x = x1;\n    this.scrolling();\n    scroll.type = SCROLL_TYPE.UN;\n  }\n\n  /**\n   * 垂直滚动\n   * @param y\n   */\n  scrollY(y) {\n    const { rows, scroll, rowHeightIndex } = this;\n    const find = rowHeightIndex.getTop(y);\n    const [\n      ri, top, height,\n    ] = this.rowsReduceIf(find.ri, rows.len, find.top, 0, y, i => rows.getHeight(i));\n    let y1 = top;\n    if (y > 0) y1 += height;\n    let type;\n    if (scroll.y > y1) {\n      type = SCROLL_TYPE.V_TOP;\n    } else if (scroll.y < y1) {\n      type = SCROLL_TYPE.V_BOTTOM;\n    }\n    scroll.type = type;\n    scroll.ri = ri;\n    scroll.y = y1;\n    this.scrolling();\n    scroll.type = SCROLL_TYPE.UN;\n  }\n\n  /**\n   * 获取向上滚动的距离\n   * @returns {*}\n   */\n  getTop() {\n    const {\n      rows, xFixedView,\n    } = this;\n    const fixedView = xFixedView.getFixedView();\n    const view = this.getScrollView();\n    return rows.sectionSumHeight(fixedView.eri + 1, view.sri - 1);\n  }\n\n  /**\n   * 获取向左滚动的距离\n   * @returns {*}\n   */\n  getLeft() {\n    const {\n      cols, xFixedView,\n    } = this;\n    const fixedView = xFixedView.getFixedView();\n    const view = this.getScrollView();\n    return cols.sectionSumWidth(fixedView.eci + 1, view.sci - 1);\n  }\n\n  /**\n   * 设置固定行视图\n   * @param end\n   * @param start\n   */\n  setFixedRow(end, start = -1) {\n    const {\n      xFixedView,\n      rows,\n      scroll,\n      rowFixed,\n    } = this;\n    // 更新视图\n    const fixedView = xFixedView.getFixedView();\n    fixedView.eri = end;\n    if (start > -1) {\n      fixedView.sri = start;\n    }\n    xFixedView.setFixedView(fixedView);\n    // 更新滚动距离\n    const { sri, eri } = fixedView;\n    if (xFixedView.hasFixedTop()) {\n      scroll.y = 0;\n      scroll.ri = eri + 1;\n    } else {\n      scroll.y = rows.sectionSumHeight(0, sri - 1);\n      scroll.ri = sri;\n    }\n    // 更新固定条\n    rowFixed.fxSri = fixedView.sri;\n    rowFixed.fxEri = fixedView.eri;\n    // 更新视图\n    this.resize();\n    // 发送更新通知\n    this.trigger(Constant.TABLE_EVENT_TYPE.FIXED_CHANGE);\n    this.trigger(Constant.TABLE_EVENT_TYPE.FIXED_ROW_CHANGE);\n  }\n\n  /**\n   * 设置固定列视图\n   * @param end\n   * @param start\n   */\n  setFixedCol(end, start = -1) {\n    const {\n      xFixedView,\n      rows,\n      scroll,\n      colFixed,\n    } = this;\n    // 更新视图\n    const fixedView = xFixedView.getFixedView();\n    fixedView.eci = end;\n    if (start > -1) {\n      fixedView.sci = start;\n    }\n    xFixedView.setFixedView(fixedView);\n    // 更新滚动距离\n    const { sci, eci } = fixedView;\n    if (xFixedView.hasFixedLeft()) {\n      scroll.x = 0;\n      scroll.ci = eci + 1;\n    } else {\n      scroll.x = rows.sectionSumHeight(0, sci - 1);\n      scroll.ci = sci;\n    }\n    // 跟新固定条\n    colFixed.fxSci = fixedView.sci;\n    colFixed.fxEci = fixedView.eci;\n    // 更新视图\n    this.resize();\n    // 发送更新通知\n    this.trigger(Constant.TABLE_EVENT_TYPE.FIXED_CHANGE);\n  }\n\n  /**\n   * 设置缩放比\n   */\n  setScale(val = 1) {\n    const {\n      yHeightLight,\n      xHeightLight,\n      xTableStyle,\n      xScreen,\n      scale,\n      rowFixed,\n      colFixed,\n    } = this;\n    this.reset();\n    scale.setValue(val);\n    xScreen.setZone();\n    xHeightLight.offsetHandle();\n    yHeightLight.offsetHandle();\n    rowFixed.setSize();\n    colFixed.setSize();\n    xTableStyle.setScale(val);\n    this.trigger(Constant.TABLE_EVENT_TYPE.SCALE_CHANGE);\n  }\n\n  /**\n   * 重置变量区\n   */\n  reset() {\n    const { xTableAreaView } = this;\n    const { xTableFrozenContent } = this;\n    const { xLeftIndex } = this;\n    const { xTopIndex } = this;\n    const { xLeft } = this;\n    const { xTop } = this;\n    const { xContent } = this;\n    this.visualHeightCache = null;\n    this.visualWidthCache = null;\n    xTableAreaView.reset();\n    xTableFrozenContent.reset();\n    xLeftIndex.reset();\n    xTopIndex.reset();\n    xLeft.reset();\n    xTop.reset();\n    xContent.reset();\n  }\n\n  /**\n   * 重置界面大小\n   */\n  resize() {\n    const {\n      xTableStyle, xScreen, rowFixed, colFixed,\n    } = this;\n    this.reset();\n    xScreen.setZone();\n    rowFixed.setSize();\n    colFixed.setSize();\n    xTableStyle.resize();\n    this.trigger(Constant.TABLE_EVENT_TYPE.RESIZE_CHANGE);\n  }\n\n  /**\n   * 渲染静态界面\n   */\n  render() {\n    const { xTableStyle } = this;\n    xTableStyle.render();\n    this.trigger(Constant.TABLE_EVENT_TYPE.RENDER);\n  }\n\n  /**\n   * 渲染滚动界面\n   */\n  scrolling() {\n    const {\n      xTableStyle, xFixedView, scroll,\n    } = this;\n    const fixedView = xFixedView.getFixedView();\n    if (!xFixedView.hasFixedTop()) {\n      fixedView.sri = scroll.ri;\n    }\n    if (!xFixedView.hasFixedLeft()) {\n      fixedView.sci = scroll.ci;\n    }\n    this.reset();\n    xFixedView.setFixedView(fixedView);\n    xTableStyle.scrolling();\n    this.trigger(Constant.SYSTEM_EVENT_TYPE.SCROLL);\n  }\n\n  /**\n   * 销毁组件\n   */\n  destroy() {\n    super.destroy();\n    this.unbind();\n    this.xScreen.destroy();\n    this.xReSizer.destroy();\n    this.yReSizer.destroy();\n    this.xHeightLight.destroy();\n    this.yHeightLight.destroy();\n    this.edit.destroy();\n    this.rowFixed.destroy();\n    this.colFixed.destroy();\n  }\n\n}\n\nexport {\n  XTableDimensions,\n};\n","import { Widget } from '../../lib/Widget';\r\nimport { XTableDimensions } from '../table/XTableDimensions';\r\nimport { cssPrefix } from '../../const/Constant';\r\n\r\nclass Sheet extends Widget {\r\n\r\n  constructor(options = {\r\n    tableConfig: {\r\n      data: [],\r\n    },\r\n  }) {\r\n    super(`${cssPrefix}-sheet`);\r\n    this.options = options;\r\n    this.table = new XTableDimensions({\r\n      settings: this.options.tableConfig,\r\n    });\r\n  }\r\n\r\n  onAttach() {\r\n    const { table } = this;\r\n    this.attach(table);\r\n  }\r\n\r\n}\r\n\r\nexport { Sheet };\r\n","/* global window */\r\nimport { Widget } from '../../lib/Widget';\r\nimport { cssPrefix, Constant, XSheetVersion } from '../../const/Constant';\r\nimport { VerticalLayer } from '../../lib/layer/VerticalLayer';\r\nimport { HorizontalLayer } from '../../lib/layer/HorizontalLayer';\r\nimport { VerticalLayerElement } from '../../lib/layer/VerticalLayerElement';\r\nimport { ScrollBarX } from '../../component/scrollbar/ScrollBarX';\r\nimport { ScrollBarY } from '../../component/scrollbar/ScrollBarY';\r\nimport { HorizontalLayerElement } from '../../lib/layer/HorizontalLayerElement';\r\nimport { VerticalCenterElement } from '../../lib/layer/center/VerticalCenterElement';\r\nimport { VerticalCenter } from '../../lib/layer/center/VerticalCenter';\r\nimport { SheetView } from './SheetView';\r\nimport { TabView } from './TabView';\r\nimport { PlainUtils } from '../../utils/PlainUtils';\r\nimport { XEvent } from '../../lib/XEvent';\r\nimport { h } from '../../lib/Element';\r\nimport { Tab } from './Tab';\r\nimport { Sheet } from './Sheet';\r\nimport Download from '../../lib/donwload/Download';\r\nimport { Throttle } from '../../lib/Throttle';\r\nimport { XDraw } from '../../canvas/XDraw';\r\n\r\nclass WorkBody extends Widget {\r\n\r\n  constructor(work, options = { sheets: [] }) {\r\n    super(`${cssPrefix}-work-body`);\r\n    this.work = work;\r\n    this.workConfig = options;\r\n    this.sheets = this.workConfig.sheets;\r\n    this.tabSheet = [];\r\n    this.activeIndex = -1;\r\n    // 版本标识\r\n    this.version = h('div', `${cssPrefix}-version-tips`);\r\n    this.version.html(`<a target=\"_blank\" href=\"https://gitee.com/eigi/x-sheet\">${XSheetVersion}</a>`);\r\n    this.children(this.version);\r\n    // sheet表\r\n    this.sheetViewLayer = new HorizontalLayerElement({\r\n      style: {\r\n        flexGrow: 1,\r\n      },\r\n    });\r\n    // 垂直滚动条\r\n    this.scrollBarYLayer = new HorizontalLayerElement({\r\n      style: {\r\n        overflow: 'inherit',\r\n      },\r\n    });\r\n    // 水平滚动条\r\n    this.scrollBarXLayer = new VerticalCenterElement();\r\n    this.scrollBarXVerticalCenter = new VerticalCenter();\r\n    this.scrollBarXHorizontalLayer = new HorizontalLayerElement({\r\n      style: {\r\n        flexGrow: 2,\r\n      },\r\n    });\r\n    this.scrollBarXVerticalCenter.children(this.scrollBarXLayer);\r\n    this.scrollBarXHorizontalLayer.children(this.scrollBarXVerticalCenter);\r\n    // 选项卡\r\n    this.sheetSwitchTabLayer = new HorizontalLayerElement({\r\n      style: {\r\n        flexGrow: 3,\r\n      },\r\n    });\r\n    // 水平布局\r\n    this.horizontalLayer1 = new HorizontalLayer();\r\n    this.horizontalLayer2 = new HorizontalLayer();\r\n    this.horizontalLayer1.children(this.sheetViewLayer);\r\n    this.horizontalLayer1.children(this.scrollBarYLayer);\r\n    this.horizontalLayer2.children(this.sheetSwitchTabLayer);\r\n    this.horizontalLayer2.children(this.scrollBarXHorizontalLayer);\r\n    // 根布局\r\n    this.horizontalLayer1Layer = new VerticalLayerElement({\r\n      style: {\r\n        flexGrow: 1,\r\n      },\r\n    });\r\n    this.horizontalLayer2Layer = new VerticalLayerElement();\r\n    this.layerVerticalLayer = new VerticalLayer();\r\n    this.horizontalLayer1Layer.children(this.horizontalLayer1);\r\n    this.horizontalLayer2Layer.children(this.horizontalLayer2);\r\n    this.layerVerticalLayer.children(this.horizontalLayer1Layer);\r\n    this.layerVerticalLayer.children(this.horizontalLayer2Layer);\r\n    this.children(this.layerVerticalLayer);\r\n    // 组件\r\n    this.scrollBarY = new ScrollBarY({\r\n      scroll: (move) => {\r\n        const sheet = this.sheetView.getActiveSheet();\r\n        sheet.table.scrollY(move);\r\n      },\r\n    });\r\n    this.scrollBarX = new ScrollBarX({\r\n      scroll: (move) => {\r\n        const sheet = this.sheetView.getActiveSheet();\r\n        sheet.table.scrollX(move);\r\n      },\r\n    });\r\n    this.sheetView = new SheetView();\r\n    this.tabView = new TabView({\r\n      onAdd: () => {\r\n        const sheet = new Sheet();\r\n        const tab = new Tab();\r\n        this.addTabSheet({ tab, sheet });\r\n      },\r\n      onSwitch: (tab) => {\r\n        this.setActiveTab(tab);\r\n      },\r\n    });\r\n  }\r\n\r\n  onAttach() {\r\n    const {\r\n      sheetViewLayer, scrollBarYLayer, sheetSwitchTabLayer, scrollBarXLayer,\r\n    } = this;\r\n    scrollBarYLayer.attach(this.scrollBarY);\r\n    scrollBarXLayer.attach(this.scrollBarX);\r\n    sheetSwitchTabLayer.attach(this.tabView);\r\n    sheetViewLayer.attach(this.sheetView);\r\n    this.bind();\r\n    this.createSheet();\r\n  }\r\n\r\n  bind() {\r\n    const exploreInfo = PlainUtils.getExplorerInfo();\r\n    const throttle = new Throttle();\r\n    XEvent.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.CHANGE_HEIGHT, () => {\r\n      this.scrollBarLocal();\r\n      this.scrollBarSize();\r\n    });\r\n    XEvent.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.CHANGE_WIDTH, () => {\r\n      this.scrollBarLocal();\r\n      this.scrollBarSize();\r\n    });\r\n    XEvent.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.FIXED_CHANGE, () => {\r\n      const table = this.getActiveTable();\r\n      if (table) {\r\n        this.scrollBarLocal();\r\n        this.scrollBarSize();\r\n      }\r\n    });\r\n    XEvent.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.DATA_CHANGE, (e) => {\r\n      this.trigger(Constant.TABLE_EVENT_TYPE.DATA_CHANGE);\r\n      e.stopPropagation();\r\n    });\r\n    XEvent.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.SELECT_CHANGE, (e) => {\r\n      this.trigger(Constant.TABLE_EVENT_TYPE.SELECT_CHANGE);\r\n      e.stopPropagation();\r\n    });\r\n    XEvent.bind(this.sheetView, Constant.TABLE_EVENT_TYPE.SELECT_DOWN, (e) => {\r\n      this.trigger(Constant.TABLE_EVENT_TYPE.SELECT_DOWN, this);\r\n      e.stopPropagation();\r\n    });\r\n    XEvent.bind(this.sheetView, Constant.SYSTEM_EVENT_TYPE.MOUSE_WHEEL, (e) => {\r\n      const sheet = this.sheetView.getActiveSheet();\r\n      if (PlainUtils.isUnDef(sheet)) return;\r\n      const { table } = sheet;\r\n      const {\r\n        scroll, rows,\r\n      } = table;\r\n      const scrollView = table.getScrollView();\r\n      const { scrollTo } = this.scrollBarY;\r\n      const { deltaY } = e;\r\n      switch (exploreInfo.type) {\r\n        case 'Chrome': {\r\n          if (deltaY > 0) {\r\n            this.scrollBarY.scrollMove(scrollTo + Math.abs(deltaY));\r\n          } else {\r\n            this.scrollBarY.scrollMove(scrollTo - Math.abs(deltaY));\r\n          }\r\n          break;\r\n        }\r\n        case 'Firefox': {\r\n          if (deltaY > 0) {\r\n            const dis = rows.getHeight(scrollView.sri + 1);\r\n            this.scrollBarY.scrollMove(scrollTo + dis);\r\n          } else {\r\n            const dis = rows.getHeight(scrollView.sri - 1);\r\n            this.scrollBarY.scrollMove(scrollTo - dis);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n      if (scroll.blockTop < scroll.maxBlockTop && scroll.blockTop > 0) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n      }\r\n    });\r\n    XEvent.bind(window, Constant.SYSTEM_EVENT_TYPE.RESIZE, () => {\r\n      throttle.action(() => {\r\n        XDraw.dprUpdate();\r\n        const table = this.getActiveTable();\r\n        if (table) {\r\n          table.reset();\r\n          this.scrollBarLocal();\r\n          this.scrollBarSize();\r\n          table.resize();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  unbind() {\r\n    XEvent.unbind(this.sheetView);\r\n    XEvent.unbind(window);\r\n  }\r\n\r\n  addTabSheet({ tab, sheet }) {\r\n    const {\r\n      tabSheet, sheetView, tabView,\r\n    } = this;\r\n    sheetView.attach(sheet);\r\n    tabView.attach(tab);\r\n    tabSheet.push({\r\n      tab, sheet,\r\n    });\r\n  }\r\n\r\n  scrollBarSize() {\r\n    const table = this.getActiveTable();\r\n    const {\r\n      scrollBarXHorizontalLayer, scrollBarY, scrollBarX,\r\n    } = this;\r\n    // 获取表格大小\r\n    const totalHeight = table.getScrollTotalHeight();\r\n    const totalWidth = table.getScrollTotalWidth();\r\n    // 是否显示水平滚动条\r\n    if (totalWidth > table.getContentWidth()) {\r\n      scrollBarXHorizontalLayer.show();\r\n    } else {\r\n      scrollBarXHorizontalLayer.hide();\r\n    }\r\n    // 调整滚动条尺寸\r\n    scrollBarY.setSize(table.getContentHeight(), totalHeight);\r\n    scrollBarX.setSize(table.getContentWidth(), totalWidth);\r\n  }\r\n\r\n  scrollBarLocal() {\r\n    const table = this.getActiveTable();\r\n    this.scrollBarY.setLocal(table.getTop());\r\n    this.scrollBarX.setLocal(table.getLeft());\r\n  }\r\n\r\n  createSheet() {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const item of this.sheets) {\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      const { name } = item;\r\n      const sheet = new Sheet(item);\r\n      const tab = new Tab(name);\r\n      this.addTabSheet({ tab, sheet });\r\n    }\r\n    if (this.tabSheet.length) {\r\n      this.setActiveIndex(0);\r\n    }\r\n  }\r\n\r\n  setActiveIndex(index) {\r\n    const {\r\n      sheetView, tabView,\r\n    } = this;\r\n    sheetView.setActiveSheet(index);\r\n    tabView.setActiveTab(index);\r\n    const table = this.getActiveTable();\r\n    if (table) {\r\n      table.reset();\r\n      this.scrollBarLocal();\r\n      this.scrollBarSize();\r\n      table.resize();\r\n    }\r\n    this.trigger(Constant.WORK_BODY_EVENT_TYPE.CHANGE_ACTIVE);\r\n    this.activeIndex = index;\r\n  }\r\n\r\n  setScale(value) {\r\n    const { sheetView } = this;\r\n    const sheet = sheetView.getActiveSheet();\r\n    const { table } = sheet;\r\n    table.setScale(value);\r\n    this.scrollBarLocal();\r\n    this.scrollBarSize();\r\n  }\r\n\r\n  setActiveTab(tab) {\r\n    this.tabSheet.forEach((item, index) => {\r\n      if (item.tab === tab) {\r\n        this.setActiveIndex(index);\r\n      }\r\n    });\r\n  }\r\n\r\n  getActiveSheet() {\r\n    return this.sheetView.getActiveSheet();\r\n  }\r\n\r\n  getActiveTable() {\r\n    const sheet = this.getActiveSheet();\r\n    if (sheet) {\r\n      return sheet.table;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  toJSONTemplate() {\r\n    const { activeIndex, sheetView, tabView } = this;\r\n    const sheet = sheetView.sheetList[activeIndex];\r\n    const tab = tabView.tabList[activeIndex];\r\n    if (sheet && tab) {\r\n      const { table } = sheet;\r\n      const {\r\n        rows, cols, settings,\r\n      } = table;\r\n      const cells = table.getTableCells();\r\n      const merges = table.getTableMerges();\r\n      const data = {\r\n        name: tab.name,\r\n        tableConfig: {\r\n          table: {\r\n            showGrid: settings.table.showGrid,\r\n            background: settings.table.background,\r\n          },\r\n          rows: {\r\n            len: rows.len,\r\n            height: rows.height,\r\n            data: rows.getData(),\r\n          },\r\n          cols: {\r\n            len: cols.len,\r\n            width: cols.width,\r\n            data: cols.getData(),\r\n          },\r\n          merge: {\r\n            merges: merges.getData(),\r\n          },\r\n          data: cells.getData(),\r\n        },\r\n      };\r\n      const text = `window['${tab.name}'] = ${JSON.stringify(data)}`;\r\n      Download(text, `${tab.name}.js`, 'application/x-javascript');\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nexport { WorkBody };\r\n","import { Widget } from '../../lib/Widget';\nimport { Constant, cssPrefix } from '../../const/Constant';\nimport { h } from '../../lib/Element';\nimport { XEvent } from '../../lib/XEvent';\nimport { PlainUtils } from '../../utils/PlainUtils';\nimport { XSelectItem } from '../table/xscreenitems/xselect/XSelectItem';\nimport { Throttle } from '../../lib/Throttle';\n\nclass BottomMenu extends Widget {\n\n  constructor(workBottom) {\n    super(`${cssPrefix}-bottom-menu`);\n    this.workBottom = workBottom;\n    this.sum = h('div', `${cssPrefix}-bottom-sum`);\n    this.avg = h('div', `${cssPrefix}-bottom-avg`);\n    this.number = h('div', `${cssPrefix}-bottom-number`);\n    this.fullScreen = h('div', `${cssPrefix}-bottom-full-screen`);\n    this.grid = h('div', `${cssPrefix}-bottom-grid`);\n    this.throttle = new Throttle({ time: 800 });\n    this.children(this.grid);\n    this.children(this.fullScreen);\n    this.children(this.sum);\n    this.children(this.avg);\n    this.children(this.number);\n  }\n\n  onAttach() {\n    this.bind();\n  }\n\n  computer() {\n    const { workBottom } = this;\n    const { work } = workBottom;\n    const { body } = work;\n    const { sheetView } = body;\n    const sheet = sheetView.getActiveSheet();\n    const { table } = sheet;\n    const { xScreen, xIteratorBuilder } = table;\n    const merges = table.getTableMerges();\n    const cells = table.getTableCells();\n    const xSelect = xScreen.findType(XSelectItem);\n    const { selectRange } = xSelect;\n    if (selectRange) {\n      const { sri, sci, eri, eci } = selectRange;\n      let number = 0;\n      let total = 0;\n      xIteratorBuilder.getRowIterator()\n        .setBegin(sri)\n        .setEnd(eri)\n        .setLoop((ri) => {\n          xIteratorBuilder.getColIterator()\n            .setBegin(sci)\n            .setEnd(eci)\n            .setLoop((ci) => {\n              const merge = merges.getFirstIncludes(ri, ci);\n              const cell = cells.getCell(ri, ci);\n              if (merge) {\n                if (merge.sri !== ri || merge.sci !== ci) {\n                  return;\n                }\n              }\n              if (cell) {\n                number += 1;\n                const { text } = cell;\n                if (PlainUtils.isNumber(text)) {\n                  total += parseFloat(text);\n                }\n              }\n            })\n            .execute();\n        })\n        .execute();\n      const avg = total / number;\n      this.setNumber(number);\n      this.setSum(total);\n      this.setAvg(avg);\n    } else {\n      this.setNumber(0);\n      this.setSum(0);\n      this.setAvg(0);\n    }\n  }\n\n  unbind() {\n    const { workBottom, grid, fullScreen } = this;\n    const { work } = workBottom;\n    const { body } = work;\n    XEvent.unbind(grid);\n    XEvent.unbind(fullScreen);\n    XEvent.unbind(body);\n  }\n\n  bind() {\n    const { workBottom, grid, fullScreen, throttle } = this;\n    const { work } = workBottom;\n    const { body } = work;\n    const { sheetView } = body;\n    XEvent.bind(body, Constant.WORK_BODY_EVENT_TYPE.CHANGE_ACTIVE, () => {\n      throttle.action(() => {\n        this.computer();\n      });\n    });\n    XEvent.bind(body, Constant.TABLE_EVENT_TYPE.SELECT_CHANGE, () => {\n      throttle.action(() => {\n        this.computer();\n      });\n    });\n    XEvent.bind(body, Constant.TABLE_EVENT_TYPE.DATA_CHANGE, () => {\n      throttle.action(() => {\n        this.computer();\n      });\n    });\n    XEvent.bind(fullScreen, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      if (PlainUtils.isFull()) {\n        PlainUtils.exitFullscreen();\n      } else {\n        PlainUtils.fullScreen(work.root);\n      }\n    });\n    XEvent.bind(grid, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      const sheet = sheetView.getActiveSheet();\n      const { table } = sheet;\n      table.settings.table.showGrid = !table.settings.table.showGrid;\n      table.render();\n    });\n  }\n\n  setNumber(val) {\n    this.number.text(`数量: ${val}`);\n  }\n\n  setSum(val) {\n    this.sum.text(`求和: ${val}`);\n  }\n\n  setAvg(val) {\n    this.avg.text(`平均数: ${val}`);\n  }\n\n  destroy() {\n    super.destroy();\n    this.unbind();\n  }\n\n}\n\nexport { BottomMenu };\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { BottomMenu } from './BottomMenu';\r\n\r\nclass WorkBottom extends Widget {\r\n\r\n  constructor(work) {\r\n    super(`${cssPrefix}-work-bottom`);\r\n    this.work = work;\r\n  }\r\n\r\n  onAttach() {\r\n    this.bottomMenu = new BottomMenu(this);\r\n    this.attach(this.bottomMenu);\r\n  }\r\n\r\n}\r\n\r\nexport { WorkBottom };\r\n","import { Widget } from '../../lib/Widget';\r\nimport { cssPrefix } from '../../const/Constant';\r\nimport { VerticalLayer } from '../../lib/layer/VerticalLayer';\r\nimport { VerticalLayerElement } from '../../lib/layer/VerticalLayerElement';\r\nimport { WorkTop } from './WorkTop';\r\nimport { WorkBody } from './WorkBody';\r\nimport { WorkBottom } from './WorkBottom';\r\n\r\nclass Work extends Widget {\r\n\r\n  constructor(options = {\r\n    body: {},\r\n  }) {\r\n    super(`${cssPrefix}-work`);\r\n    this.options = options.workConfig;\r\n    this.root = null;\r\n    // 布局\r\n    this.topLayer = new VerticalLayerElement();\r\n    this.bodyLayer = new VerticalLayerElement({\r\n      style: {\r\n        flexGrow: 1,\r\n      },\r\n    });\r\n    this.bottomLayer = new VerticalLayerElement();\r\n    this.verticalLayer = new VerticalLayer();\r\n    this.verticalLayer.children(this.topLayer);\r\n    this.verticalLayer.children(this.bodyLayer);\r\n    this.verticalLayer.children(this.bottomLayer);\r\n    this.children(this.verticalLayer);\r\n    // 组件\r\n    this.top = new WorkTop(this);\r\n    this.body = new WorkBody(this, this.options.body);\r\n    this.bottom = new WorkBottom(this);\r\n  }\r\n\r\n  onAttach(element) {\r\n    this.root = element;\r\n    const {\r\n      bodyLayer, topLayer, bottomLayer,\r\n    } = this;\r\n    topLayer.attach(this.top);\r\n    bottomLayer.attach(this.bottom);\r\n    bodyLayer.attach(this.body);\r\n    this.bottom.bottomMenu.setSum(0);\r\n    this.bottom.bottomMenu.setAvg(0);\r\n    this.bottom.bottomMenu.setNumber(0);\r\n  }\r\n\r\n}\r\n\r\nexport { Work };\r\n","/* global window, document */\nimport { cssPrefix, XSheetVersion } from './const/Constant';\nimport { h } from './lib/Element';\nimport { Work } from './core/work/Work';\nimport { Widget } from './lib/Widget';\nimport { DragPanel } from './component/dragpanel/DragPanel';\nimport { ElPopUp } from './component/elpopup/ElPopUp';\nimport { XDraw } from './canvas/XDraw';\nimport { PlainUtils } from './utils/PlainUtils';\nimport { RectRange } from './core/table/tablebase/RectRange';\nimport { BaseFont } from './canvas/font/BaseFont';\nimport { XIcon } from './core/table/xicon/XIcon';\nimport './styles/base.less';\nimport './styles/index.less';\n\nclass XSheet extends Widget {\n  constructor(selectors, options = {\n    workConfig: {\n      body: {\n        sheets: [{\n          tableConfig: {},\n        }],\n      },\n    },\n  }) {\n    super(`${cssPrefix}`);\n    let root = selectors;\n    if (typeof selectors === 'string') {\n      root = document.querySelector(selectors);\n    }\n    root = h(root);\n    root.children(this);\n    this.work = new Work(options);\n    this.attach(this.work);\n    ElPopUp.setRoot(this);\n    DragPanel.setRoot(this);\n  }\n}\nXSheet.version = XSheetVersion;\nXSheet.PlainUtils = PlainUtils;\nXSheet.XDraw = XDraw;\nXSheet.XIcon = XIcon;\nXSheet.RectRange = RectRange;\nXSheet.BaseFont = BaseFont;\nif (window) {\n  window.XSheet = XSheet;\n}\n\nexport { XSheet };\n"],"sourceRoot":""}