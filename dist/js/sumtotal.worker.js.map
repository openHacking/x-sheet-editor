{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/SheetUtils.js","webpack:///./src/draw/font/BaseFont.js","webpack:///./src/lib/Element.js","webpack:///./src/const/Constant.js","webpack:///./src/lib/XEvent.js","webpack:///./src/lib/Widget.js","webpack:///./src/core/xwork/head/tool/Icon.js","webpack:///./src/module/dragpanel/DragPanel.js","webpack:///./src/module/colorpicker/ColorPicker.js","webpack:///./src/module/colorpicker/colorarray/ColorItem.js","webpack:///./src/module/colorpicker/colorarray/ColorArray.js","webpack:///./src/core/xtable/tablecell/CellFont.js","webpack:///./src/draw/XDraw.js","webpack:///./src/draw/Line.js","webpack:///./src/core/xtable/tablecell/Border.js","webpack:///./src/core/xtable/tablecell/CellBorder.js","webpack:///./src/draw/Rect.js","webpack:///./src/core/xtable/tableicon/XIconOffset.js","webpack:///./src/draw/Crop.js","webpack:///./src/core/xtable/tableicon/XIcon.js","webpack:///./src/utils/DateUtils.js","webpack:///./src/core/xtable/XTableTextFormat.js","webpack:///./src/core/xtable/tablecell/RichFont.js","webpack:///./src/core/xtable/tablecell/RichFonts.js","webpack:///./src/formula/Compiler.js","webpack:///./src/formula/Formula.js","webpack:///./src/core/xtable/tablecell/Cell.js","webpack:///./src/core/xtable/XTableDataItem.js","webpack:///./src/lib/Listen.js","webpack:///./src/core/xtable/snapshot/Snapshot.js","webpack:///./src/core/xtable/XTableDataItems.js","webpack:///./src/task/worker/sumtotal.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","S4","Math","random","toString","substring","alphabets","DATA_TYPE","String","Boolean","Number","Array","Function","Null","Undefined","Promise","GeneratorFunction","AsyncFunction","BigInt","DedicatedWorkerGlobalScope","Date","Un","SheetUtils","test","navigator","userAgent","isEmptyObject","e","this","isUnDef","type","length","trim","obj","getPrototypeOf","parent","str","toLowerCase","arg","sources","forEach","source","keys","v","isArray","isPlainObject","copy","json","JSON","stringify","parse","target","len","item","objOrAry","cb","total","size","val","isNumber","parseFloat","parseInt","index","idx","ret","charCodeAt","expoNet","src","x","y","charAt","indexAt","stringAt","xn","yn","expr2xy","xy2expr","min","range","window","getSelection","selectAllChildren","collapseToEnd","isBlank","now","width","innerWidth","height","innerHeight","document","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","element","el","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","explorer","indexOf","version","match","array","isString","replace","EMPTY","num","fixed","toFixed","defaultValue","self","condition","establish","otherwise","likeArray","slice","Nul","Undef","undefined","noop","BaseFont","draw","ruler","attr","align","ALIGN","center","padding","verticalAlign","VERTICAL_ALIGN","top","bottom","left","right","TEXT_WRAP","OVER_FLOW","WORD_WRAP","TRUNCATE","TEXT_DIRECTION","HORIZONTAL","VERTICAL","ANGLE","ANGLE_BAR","DEFAULT_FONT_ATTR","color","bold","italic","strikethrough","underline","angle","textWrap","direction","DEFAULT_RICH_ATTR","DEFAULT_RICH_ITEM_ATTR","Element","tag","className","createElement","map","HTMLCollection","NodeList","includes","elements","push","text","createTextNode","args","arguments","wrapElement","children","ele","append","childNodes","isTextNode","childrenNodes","prepend","k","css","offsetTop","offsetLeft","offsetHeight","offsetWidth","parentNode","classList","add","contains","remove","getBoundingClientRect","firstChild","lastChild","find","handle","elem","hasChild","reverse","removeChild","previousSibling","nextSibling","flag","cls","addClass","removeClass","nodeValue","innerText","html","innerHTML","focus","blur","removeAttribute","style","setAttribute","getAttribute","removeProperty","hyphenateRE","newValue","getPropertyValue","setProperty","getComputedStyle","computedStyle","display","message","evt","MouseEvent","detail","bubbles","cancelable","initEvent","dispatchEvent","CustomEvent","select","result","querySelectorAll","sibling","previousElementSibling","nextElementSibling","nodeName","toLocaleLowerCase","nodeType","after","before","cloneNode","other","equals","tagName","DocumentFragment","h","Constant","WORK_BODY_EVENT_TYPE","CHANGE_ACTIVE","REMOVE_SHEET","SYSTEM_EVENT_TYPE","MOUSE_MOVE","MOUSE_DOWN","CONTEXT_MENU","SCROLL","RESIZE","MOUSE_UP","INPUT","KEY_DOWN","KEY_UP","MOUSE_OVER","MOUSE_LEAVE","MOUSE_WHEEL","MOUSE_ENTER","CLICK","FOCUS","DRAG_START","CHANGE","VISIBILITY_CHANGE","TABLE_EVENT_TYPE","RENDER","SNAPSHOT_CHANGE","CHANGE_ROW_HEIGHT","CHANGE_COL_WIDTH","SCALE_CHANGE","EDIT_START","EDIT_INPUT","EDIT_FINISH","REMOVE_ROW","REMOVE_COL","ADD_NEW_ROW","ADD_NEW_COL","FIXED_CHANGE","FIXED_COL_CHANGE","FIXED_ROW_CHANGE","SELECT_OVER","SELECT_DOWN","SELECT_CHANGE","DATA_CHANGE","RESIZE_CHANGE","FORM_EVENT_TYPE","SEARCH_INPUT_CHANGE","PLAIN_INPUT_CHANGE","FORM_SELECT_CHANGE","pool","callback","option","removeEventListener","addEventListener","rem","eqElem","eqOpt","eqType","eqCall","eles","unbind","XEvent","fn","multipleUnbind","multipleBind","holdFunc","endFunc","time","setInterval","xEvtUp","clearInterval","moveFunc","upFunc","xEvtMove","stopPropagation","preventDefault","WrapFuncion","doubleClick","lastPageX","lastPageY","lastTime","event","button","pageX","pageY","current","mouseClick","Widget","$$rootFlag","clazz","node","body","is","hasClass","data","widget","parentWidget","onAttach","box","clientY","clientX","Icon","iconNameEl","instances","DragPanel","options","position","DRAG_PANEL_POSITION","CENTER","status","mask","content","instance","filter","close","root","getRootWidget","dragPanelLocation","evt1","downEventXy","eventXy","mouseMoveUp","evt2","offset","rootBox","elemBox","LEFT","RIGHT","TOP","removeInstance","ColorPicker","selectCb","dragPanel","preViewColorPoint","colorValueTips","colorInput","selectColorPoint","selectColorArea1","selectColorArea2","selectColorArea3","colorHuxTips","colorBar","colorBarPoint","cancelButton","selectButton","buttons","hex","join","hsx","max","rgb","startsWith","isHex","hexToRgb","g","b","parseRgb","rgbToHsb","hsb","delta","t1","t2","t3","round","nr","rgbToHex","hsbToRgb","e1","hexColor","xy","colorBarBox","downHue","e2","moveHue","centerBox","downSelect","moveSelect","fixHsx","open","isRgb","change","colorBarPointBox","colorBarPointLeft","selectColorPointBox","selectColorPointLeft","selectColorPointTop","colorValue","hsbToHex","areaColorValue","sliderPosition","hueChange","selectChange","hexToHsb","fixHex","destroy","ColorItem","icon","blankClear","isDark","checkedIcon","hide","active","show","ColorArray","colors","activeColor","setActiveByColor","findIndex","setActive","empty","BLACK","WHITE","CellFont","keys1","keys2","clearBlank","scaleAdapter","DPR","inWorker","devicePixelRatio","LINE_WIDTH_LOW","LINE_WIDTH_MEDIUM","LINE_WIDTH_HIGH","LINE_PIXEL_OFFSET","Base","canvas","ctx","getContext","px","dpr","srcPx","stylePx","ceil","trunc","PI","CorsLine","lineWidthType","LINE_WIDTH_TYPE","low","lineColor","medium","high","sx","sy","ex","ey","lineWidth","strokeStyle","polyStroke","xys","getOffsetX","getOffsetY","TypeError","corsLine","linePx","pixel","offsetX","offsetY","interpolation","beginPath","moveTo","lineTo","stroke","fill","fillRect","radian","dash","measureText","save","restore","clip","setLineDash","scale","translate","deg","rotate","XDraw","fillText","path","polyInFill","points","w","rect","sw","sh","tx","ty","tw","th","drawImage","LINE_TYPE","DoubleLine","widthType","spacing","leftShow","topShow","rightShow","bottomShow","iFMerge","iFMergeFirstRow","iFMergeLastRow","iFMergeFirstCol","iFMergeLastCol","row","col","pos","external","ifMerge","firstRow","lastRow","firstCol","lastCol","sTopLeftCorner","sTop","sBottom","eBottomLeftCorner","eBottom","eTop","sLeft","sRight","eTopRightCorner","eRight","eLeft","sTopRightCorner","eBottomRightCorner","sBottomLeftCorner","internal","setLineColor","setLineWidthType","handleExternal","handleInternal","horizonLine","verticalLine","zIndexID","Border","zIndex","getZIndex","border","origin","CellBorder","setBDisplay","setLDisplay","setTDisplay","setRDisplay","setDisplay","setBColor","setLColor","setTColor","setRColor","setColor","setBWidthType","setLWidthType","setTWidthType","setRWidthType","setWidthType","setBType","setLType","setTType","setRType","setType","setZIndex","clone","Rect","XIconOffset","Crop","XIcon","vertical","ICON_VERTICAL","horizontal","ICON_HORIZONTAL","ICON_TYPE","image","iconFocus","onDraw","onLeave","onMove","onDown","onEnter","icons","iconHorizontal","iconVertical","iconOffsetX","iconOffsetY","iconWidth","iconHeight","rectX","rectY","rectWidth","rectHeight","py","BOTTOM","load","sync","Image","loadImg","complete","onload","onerror","console","error","drawCustom","positionRect","include","includeRect","crop","fillStyle","native","location","inRectPosition","activate","ICON_EVENT_TYPE","includePoint","setActivate","custom","DateUtils","fmt","date","getMonth","getDate","getHours","getMinutes","getSeconds","floor","S","getMilliseconds","resultYear","exec","yearFormatPart","yearVal","getFullYear","substr","res","RegExp","Val","formatPart","replaceVal","parserToDate","dateText","format","defaultVal","reg","year","month","day","hours","minutes","seconds","milliseconds","j","oneChar","onePart","onePartReg","dataInfo","toExponential","isFraction","split","dateFormat","RichFont","ignore","RichFonts","rich","font","each","reset","plain","item1","item2","like","Functions","functions","toLocaleString","func","Assembly","assembly","endsWith","op","Tokenizer","syntaxCheck","input","OPERATOR","NUMBERS","LETTERS","bracketsStack","tokens","char","SPACE","next","last","brackets","pop","syntax","sQuotesStack","dQuotesStack","callStack","arrayStack","ignoreArray","token","ignoreFunc","skipIgnoreToken","dir","checkArray","local","checkValue","checkOperator","checkFunction","Compiler","writer","groupStack","opIf","opAdd","opMul","opCommon","opRel","opNew","opCell","function","number","eofToken","nextToken","backToken","compileIfge","isSkipNextToken","getInstruct","compileAdd","operator","reduceGroup","writeOperator","compileMul","compileCommon","compileRel","compileArray","compileFunction","addGroup","popGroup","compilePushValue","increaseGroup","writeString","writeNumber","writeOperand","Evaluation","instruct","memory","newArray","invoke","pushSRegexp","pushNRegexp","pushORegexp","ificmpge","ificmpgt","ifge","ifgt","ifeq","ifne","sub","mul","div","mod","power","rel","link","uni","common","group","pushS","pushN","pushO","a","pow","getFunction","apply","Compile","tokenizer","lexical","compile","Instruct","inst","eval","Formula","expr","Cell","fontAttr","borderAttr","formula","richText","background","contentWidth","contentHeight","contentType","TYPE","STRING","newInstances","formatText","setContentType","setExpr","setRich","setContentWidth","getExpr","NUMBER","DATE_TIME","isDate","RICH_TEXT","getComputeText","hasExpr","getValue","XTableFormat","getRich","getFormatText","XTableDataItem","cell","safeValue","mergeId","Listen","Snapshot","undoStack","redoStack","layer","listen","undo","execute","redo","action","XTableDataItems","snapshot","items","ri","ci","set","sri","sci","eri","eci","line","wrap","rectRange","ignoreCorner","oldItems","effRiLength","effCiLength","oldRowItem","rowItem","addAction","orderValue","splice","subItems","newSubItems","getCell","hasFormula","postMessage"],"mappings":"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","file":"js/sumtotal.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* global navigator document window self */\r\nfunction S4() {\r\n  // eslint-disable-next-line no-bitwise\r\n  return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n}\r\n\r\nconst alphabets = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n\r\nconst DATA_TYPE = {\r\n  String: 1,\r\n  Boolean: 2,\r\n  Number: 3,\r\n  Object: 4,\r\n  Array: 5,\r\n  Function: 6,\r\n  Null: 7,\r\n  Undefined: 8,\r\n  Promise: 9,\r\n  GeneratorFunction: 10,\r\n  AsyncFunction: 11,\r\n  BigInt: 12,\r\n  Symbol: 13,\r\n  DedicatedWorkerGlobalScope: 14,\r\n  Date: 15,\r\n  Un: 0,\r\n};\r\n\r\nclass SheetUtils {\r\n\r\n  static isWindows() {\r\n    return /windows|win32/i.test(navigator.userAgent);\r\n  }\r\n\r\n  static isMac() {\r\n    return /macintosh|mac os x/i.test(navigator.userAgent);\r\n  }\r\n\r\n  static isNotEmptyObject(object) {\r\n    return !SheetUtils.isEmptyObject(object);\r\n  }\r\n\r\n  static isEmptyObject(object) {\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const key in object) {\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (object.hasOwnProperty(key)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  static isUnDef(e) {\r\n    return e === undefined || e === null;\r\n  }\r\n\r\n  static isDef(e) {\r\n    return !this.isUnDef(e);\r\n  }\r\n\r\n  static isNumber(e) {\r\n    return /^(-?\\d+.\\d+)$|^(-?\\d+)$/.test(e);\r\n  }\r\n\r\n  static isFraction(e) {\r\n    return /^\\d+\\/\\d+$/.test(e);\r\n  }\r\n\r\n  static isDate(e) {\r\n    return SheetUtils.type(e) === DATA_TYPE.Date;\r\n  }\r\n\r\n  static isFunction(e) {\r\n    const type = SheetUtils.type(e);\r\n    return type === DATA_TYPE.Function;\r\n  }\r\n\r\n  static isArray(e) {\r\n    return SheetUtils.type(e) === DATA_TYPE.Array;\r\n  }\r\n\r\n  static isLikeArray(e) {\r\n    if (SheetUtils.isUnDef(e)) {\r\n      return false;\r\n    }\r\n    return typeof e.length === 'number';\r\n  }\r\n\r\n  static isBlank(s) {\r\n    if (SheetUtils.isUnDef(s)) {\r\n      return true;\r\n    }\r\n    return s.toString().trim() === '';\r\n  }\r\n\r\n  static isPlainObject(obj) {\r\n    if (SheetUtils.isUnDef(obj)) {\r\n      return false;\r\n    }\r\n    return Object.getPrototypeOf(obj) === Object.getPrototypeOf({});\r\n  }\r\n\r\n  static isString(obj) {\r\n    return SheetUtils.type(obj) === DATA_TYPE.String;\r\n  }\r\n\r\n  static isChildType(obj, parent) {\r\n    return obj instanceof parent;\r\n  }\r\n\r\n  static toLowCase(str) {\r\n    return str.toLowerCase();\r\n  }\r\n\r\n  static type(arg) {\r\n    const type = Object.prototype.toString.call(arg);\r\n    switch (type) {\r\n      case '[object Null]':\r\n        return DATA_TYPE.Null;\r\n      case '[object Object]':\r\n        return DATA_TYPE.Object;\r\n      case '[object Undefined]':\r\n        return DATA_TYPE.Undefined;\r\n      case '[object String]':\r\n        return DATA_TYPE.String;\r\n      case '[object Boolean]':\r\n        return DATA_TYPE.Boolean;\r\n      case '[object Number]':\r\n        return DATA_TYPE.Number;\r\n      case '[object Function]':\r\n        return DATA_TYPE.Function;\r\n      case '[object Array]':\r\n        return DATA_TYPE.Array;\r\n      case '[object Promise]':\r\n        return DATA_TYPE.Promise;\r\n      case '[object GeneratorFunction]':\r\n        return DATA_TYPE.GeneratorFunction;\r\n      case '[object AsyncFunction]':\r\n        return DATA_TYPE.AsyncFunction;\r\n      case '[object BigInt]':\r\n        return DATA_TYPE.BigInt;\r\n      case '[object Symbol]':\r\n        return DATA_TYPE.Symbol;\r\n      case '[object Date]':\r\n        return DATA_TYPE.Date;\r\n      case '[object DedicatedWorkerGlobalScope]':\r\n        return DATA_TYPE.DedicatedWorkerGlobalScope;\r\n      default:\r\n        return DATA_TYPE.Un;\r\n    }\r\n  }\r\n\r\n  static copy(object = {}, ...sources) {\r\n    if (SheetUtils.isUnDef(object)) {\r\n      return {};\r\n    }\r\n    if (SheetUtils.isUnDef(sources) || sources.length === 0) {\r\n      return object;\r\n    }\r\n    sources.forEach((source) => {\r\n      if (SheetUtils.isUnDef(source)) return;\r\n      Object.keys(source).forEach((key) => {\r\n        const v = source[key];\r\n        if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean') {\r\n          object[key] = v;\r\n        } else if (typeof v !== 'function' && !Array.isArray(v) && SheetUtils.isPlainObject(v)) {\r\n          object[key] = object[key] || {};\r\n          SheetUtils.copy(object[key], v);\r\n        } else {\r\n          object[key] = v;\r\n        }\r\n      });\r\n    });\r\n    return object;\r\n  }\r\n\r\n  static cloneDeep(object) {\r\n    const json = JSON.stringify(object);\r\n    return JSON.parse(json);\r\n  }\r\n\r\n  static extends(target, ...src) {\r\n    for (let i = 0, len = src.length; i < len; i++) {\r\n      const item = src[i];\r\n      for (let key in item) {\r\n        if (item.hasOwnProperty(key)) {\r\n          const value = item[key];\r\n          if (value) {\r\n            target[key] = value;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return target;\r\n  }\r\n\r\n  static sum(objOrAry, cb = value => value) {\r\n    let total = 0;\r\n    let size = 0;\r\n    Object.keys(objOrAry).forEach((key) => {\r\n      total += cb(objOrAry[key], key);\r\n      size += 1;\r\n    });\r\n    return [total, size];\r\n  }\r\n\r\n  static parseFloat(val) {\r\n    if (SheetUtils.isNumber(val)) return parseFloat(val);\r\n    return 0;\r\n  }\r\n\r\n  static parseInt(val) {\r\n    if (SheetUtils.isNumber(val)) return parseInt(val, 10);\r\n    return 0;\r\n  }\r\n\r\n  static stringAt(index) {\r\n    let str = '';\r\n    let idx = index;\r\n    while (idx >= alphabets.length) {\r\n      idx /= alphabets.length;\r\n      idx -= 1;\r\n      str += alphabets[parseInt(idx, 10) % alphabets.length];\r\n    }\r\n    const last = index % alphabets.length;\r\n    str += alphabets[last];\r\n    return str;\r\n  }\r\n\r\n  static indexAt(str) {\r\n    let ret = 0;\r\n    for (let i = 0; i < str.length - 1; i += 1) {\r\n      const idx = str.charCodeAt(i) - 65;\r\n      const expoNet = str.length - 1 - i;\r\n      ret += (alphabets.length ** expoNet) + (alphabets.length * idx);\r\n    }\r\n    ret += str.charCodeAt(str.length - 1) - 65;\r\n    return ret;\r\n  }\r\n\r\n  static expr2xy(src) {\r\n    let x = '';\r\n    let y = '';\r\n    for (let i = 0; i < src.length; i += 1) {\r\n      if (src.charAt(i) >= '0' && src.charAt(i) <= '9') {\r\n        y += src.charAt(i);\r\n      } else {\r\n        x += src.charAt(i);\r\n      }\r\n    }\r\n    return [SheetUtils.indexAt(x), parseInt(y, 10) - 1];\r\n  }\r\n\r\n  static xy2expr(x, y) {\r\n    return `${SheetUtils.stringAt(x)}${y + 1}`;\r\n  }\r\n\r\n  static expr2expr(src, xn, yn) {\r\n    const [x, y] = SheetUtils.expr2xy(src);\r\n    return SheetUtils.xy2expr(x + xn, y + yn);\r\n  }\r\n\r\n  static minIf(v, min) {\r\n    if (v < min) return min;\r\n    return v;\r\n  }\r\n\r\n  static keepLastIndex(obj) {\r\n    const range = window.getSelection();\r\n    range.selectAllChildren(obj);\r\n    range.collapseToEnd();\r\n  }\r\n\r\n  static trim(s) {\r\n    if (this.isBlank(s)) return '';\r\n    return s.trim();\r\n  }\r\n\r\n  static now() {\r\n    return Date.now().toString();\r\n  }\r\n\r\n  static viewPort() {\r\n    return {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    };\r\n  }\r\n\r\n  static exitFullscreen() {\r\n    if (document.exitFullscreen) {\r\n      document.exitFullscreen();\r\n    } else if (document.msExitFullscreen) {\r\n      document.msExitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n      document.mozCancelFullScreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n      document.webkitExitFullscreen();\r\n    }\r\n  }\r\n\r\n  static fullScreen(element) {\r\n    if (element.el) {\r\n      element = element.el;\r\n    }\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen();\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen();\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen();\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen();\r\n    }\r\n  }\r\n\r\n  static isFull() {\r\n    return !!(document.webkitIsFullScreen || document.mozFullScreen\r\n      || document.msFullscreenElement || document.fullscreenElement);\r\n  }\r\n\r\n  static uuid() {\r\n    return (`${S4() + S4()}${S4()}${S4()}${S4()}${S4()}${S4()}${S4()}`);\r\n  }\r\n\r\n  static getExplorerInfo() {\r\n    const explorer = window.navigator.userAgent.toLowerCase();\r\n    // firefox\r\n    if (explorer.indexOf('firefox') >= 0) {\r\n      const ver = explorer.match(/firefox\\/([\\d.]+)/)[1];\r\n      return { type: 'Firefox', version: ver };\r\n    }\r\n    // Chrome\r\n    if (explorer.indexOf('chrome') >= 0) {\r\n      const ver = explorer.match(/chrome\\/([\\d.]+)/)[1];\r\n      return { type: 'Chrome', version: ver };\r\n    }\r\n    // Opera\r\n    if (explorer.indexOf('opera') >= 0) {\r\n      const ver = explorer.match(/opera.([\\d.]+)/)[1];\r\n      return { type: 'Opera', version: ver };\r\n    }\r\n    // Safari\r\n    if (explorer.indexOf('safari') >= 0) {\r\n      const ver = explorer.match(/version\\/([\\d.]+)/)[1];\r\n      return { type: 'Safari', version: ver };\r\n    }\r\n    // ie\r\n    if (explorer.indexOf('msie') >= 0) {\r\n      const ver = explorer.match(/msie ([\\d.]+)/)[1];\r\n      return { type: 'IE', version: ver };\r\n    }\r\n    // undefined\r\n    return undefined;\r\n  }\r\n\r\n  static arrayLast(array) {\r\n    return array[array.length - 1];\r\n  }\r\n\r\n  static arrayHead(array) {\r\n    return array[0];\r\n  }\r\n\r\n  static blankClear(value) {\r\n    if (SheetUtils.isString(value)) {\r\n      return value.replace(/\\s*/g, SheetUtils.EMPTY);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  static equals(src, target) {\r\n    if (SheetUtils.isUnDef(src)) {\r\n      return false;\r\n    }\r\n    if (SheetUtils.isUnDef(target)) {\r\n      return false;\r\n    }\r\n    return JSON.stringify(src) === JSON.stringify(target);\r\n  }\r\n\r\n  static toFixed(num, fixed) {\r\n    if (num.toString().indexOf('.') > -1) {\r\n      return num.toFixed(fixed);\r\n    }\r\n    return num;\r\n  }\r\n\r\n  static safeValue(value, defaultValue = '') {\r\n    return SheetUtils.isUnDef(value) ? defaultValue : value;\r\n  }\r\n\r\n  static inWorker() {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    const type = SheetUtils.type(self);\r\n    return type === DATA_TYPE.DedicatedWorkerGlobalScope;\r\n  }\r\n\r\n  static if(condition, establish, otherwise) {\r\n    return condition ? establish() : otherwise();\r\n  }\r\n\r\n  static slice(likeArray) {\r\n    return Array.prototype.slice.call(likeArray);\r\n  }\r\n\r\n  static clearBlank(str) {\r\n    return str.replace(/\\s/g, '');\r\n  }\r\n\r\n}\r\n\r\nSheetUtils.EMPTY = '';\r\nSheetUtils.Nul = null;\r\nSheetUtils.Undef = undefined;\r\nSheetUtils.noop = () => {};\r\nSheetUtils.DATA_TYPE = DATA_TYPE;\r\n\r\nexport {\r\n  SheetUtils,\r\n};\r\n","class BaseFont {\r\n\r\n  constructor({\r\n    draw, ruler, attr,\r\n  }) {\r\n    this.draw = draw;\r\n    this.attr = attr;\r\n    this.ruler = ruler;\r\n  }\r\n\r\n  setRuler(ruler) {\r\n    this.ruler = ruler;\r\n  }\r\n\r\n  getAlignPadding() {\r\n    if (this.attr.align === BaseFont.ALIGN.center) {\r\n      return 0;\r\n    }\r\n    return this.attr.padding;\r\n  }\r\n\r\n  getVerticalAlignPadding() {\r\n    if (this.attr.verticalAlign === BaseFont.VERTICAL_ALIGN.center) {\r\n      return 0;\r\n    }\r\n    return this.attr.padding;\r\n  }\r\n\r\n}\r\n\r\nBaseFont.VERTICAL_ALIGN = {\r\n  top: 'top',\r\n  center: 'middle',\r\n  bottom: 'bottom',\r\n};\r\nBaseFont.ALIGN = {\r\n  left: 'left',\r\n  center: 'center',\r\n  right: 'right',\r\n};\r\nBaseFont.TEXT_WRAP = {\r\n  OVER_FLOW: 1,\r\n  WORD_WRAP: 2,\r\n  TRUNCATE: 3,\r\n};\r\nBaseFont.TEXT_DIRECTION = {\r\n  HORIZONTAL: 'horizontal',\r\n  VERTICAL: 'vertical',\r\n  ANGLE: 'angle',\r\n  ANGLE_BAR: 'bar',\r\n};\r\nBaseFont.DEFAULT_FONT_ATTR = {\r\n  name: 'Arial',\r\n  size: 14,\r\n  color: 'rgb(0,0,0)',\r\n  bold: false,\r\n  italic: false,\r\n  strikethrough: false,\r\n  underline: false,\r\n  angle: 0,\r\n  padding: 8,\r\n  align: BaseFont.ALIGN.left,\r\n  textWrap: BaseFont.TEXT_WRAP.TRUNCATE,\r\n  verticalAlign: BaseFont.VERTICAL_ALIGN.center,\r\n  direction: BaseFont.TEXT_DIRECTION.HORIZONTAL,\r\n};\r\nBaseFont.DEFAULT_RICH_ATTR = {\r\n  angle: 0,\r\n  padding: 8,\r\n  align: BaseFont.ALIGN.left,\r\n  textWrap: BaseFont.TEXT_WRAP.TRUNCATE,\r\n  verticalAlign: BaseFont.VERTICAL_ALIGN.center,\r\n  direction: BaseFont.TEXT_DIRECTION.HORIZONTAL,\r\n};\r\nBaseFont.DEFAULT_RICH_ITEM_ATTR = {\r\n  name: 'Arial',\r\n  size: 14,\r\n  color: 'rgb(0,0,0)',\r\n  bold: false,\r\n  italic: false,\r\n  strikethrough: false,\r\n  underline: false,\r\n};\r\n\r\nexport {\r\n  BaseFont,\r\n};\r\n","/* global document MouseEvent CustomEvent window NodeList HTMLCollection DocumentFragment */\r\nimport { SheetUtils } from '../utils/SheetUtils';\r\n\r\n/**\r\n * Element\r\n */\r\nclass Element {\r\n\r\n  /**\r\n   * 包装元素\r\n   */\r\n  static wrapElement(object) {\r\n    if ([\r\n      SheetUtils.isArray(object),\r\n      object instanceof HTMLCollection,\r\n      object instanceof NodeList,\r\n    ].includes(true)) {\r\n      let elements = [];\r\n      for (let i = 0; i < object.length; i++) {\r\n        const item = object[i];\r\n        if (item instanceof Element) {\r\n          elements.push(item);\r\n        } else {\r\n          elements.push(new Element(item));\r\n        }\r\n      }\r\n      return elements;\r\n    }\r\n    return new Element(object);\r\n  }\r\n\r\n  static createText(text) {\r\n    return new Element(document.createTextNode(text));\r\n  }\r\n\r\n  /**\r\n   * 驼峰转连字符\r\n   * @param value\r\n   * @returns {string|null}\r\n   */\r\n  static hyphenateRE(value) {\r\n    if (value) {\r\n      return value.replace(/([A-Z])/g, '-$1').toLowerCase();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Element\r\n   * @param tag\r\n   * @param className\r\n   */\r\n  constructor(tag, className = '') {\r\n    if (typeof tag === 'string') {\r\n      this.el = document.createElement(tag);\r\n      if (className) {\r\n        this.el.className = className;\r\n      }\r\n    } else {\r\n      this.el = tag;\r\n    }\r\n    this.map = {};\r\n  }\r\n\r\n  /**\r\n   * 数据绑定\r\n   * @param key\r\n   * @param value\r\n   * @returns {Element|*}\r\n   */\r\n  data(key, value) {\r\n    if (value !== undefined) {\r\n      this.map[key] = value;\r\n      return this;\r\n    }\r\n    return this.map[key];\r\n  }\r\n\r\n  /**\r\n   * 空参数时返回子元素,\r\n   * 有参数时插入子节点\r\n   * @param args\r\n   * @returns {*[]|Element}\r\n   */\r\n  children(...args) {\r\n    if (arguments.length === 0) {\r\n      return Element.wrapElement(this.el.children);\r\n    }\r\n    args.forEach(ele => this.append(ele));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 空参数时返回子节点,\r\n   * 有参数时插入子节点\r\n   * @param args\r\n   * @returns {*[]|Element}\r\n   */\r\n  childrenNodes(...args) {\r\n    if (arguments.length === 0) {\r\n      return Element.wrapElement(this.el.childNodes);\r\n    }\r\n    args.forEach(ele => this.append(ele));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 将目标节点添加到当前元素中\r\n   * @param ele\r\n   */\r\n  childrenNodesAppend(ele) {\r\n    if (!this.isTextNode()) {\r\n      ele.childrenNodes().forEach(i => this.append(i));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 将目标节点添加到当前元素中\r\n   * @param ele\r\n   */\r\n  childrenNodesPrepend(ele) {\r\n    if (!this.isTextNode()) {\r\n      ele.childrenNodes().forEach(i => this.prepend(i));\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 在当前元素中插入指定节点\r\n   * @param ele\r\n   */\r\n  append(ele) {\r\n    if (!this.isTextNode()) {\r\n      if (ele && ele.el) {\r\n        this.el.append(ele.el);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 在当前元素中插入指定节点\r\n   * @param ele\r\n   */\r\n  prepend(ele) {\r\n    if (!this.isTextNode()) {\r\n      if (ele && ele.el) {\r\n        this.el.prepend(ele.el);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 元素定位\r\n   * @param value\r\n   * @returns {{top: *, left: *, width: *, height: *}|Element}\r\n   */\r\n  offset(value) {\r\n    if (value !== undefined) {\r\n      Object.keys(value).forEach((k) => {\r\n        this.css(k, `${value[k]}px`);\r\n      });\r\n      return this;\r\n    }\r\n    const { offsetTop, offsetLeft } = this.el;\r\n    const { offsetHeight, offsetWidth } = this.el;\r\n    return {\r\n      top: offsetTop,\r\n      left: offsetLeft,\r\n      height: offsetHeight,\r\n      width: offsetWidth,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 获取当前元素的父节点\r\n   * @returns {Element}\r\n   */\r\n  parent() {\r\n    return this.el.parentNode\r\n      ? new Element(this.el.parentNode) : null;\r\n  }\r\n\r\n  /**\r\n   * 添加Class名称\r\n   * @param name\r\n   * @returns {Element}\r\n   */\r\n  addClass(name) {\r\n    if (!this.isTextNode()) {\r\n      this.el.classList.add(name);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 是否具有指定Class名称\r\n   * @param name\r\n   * @returns {boolean}\r\n   */\r\n  hasClass(name) {\r\n    if (!this.isTextNode()) {\r\n      return this.el.classList.contains(name);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * 是否有子元素\r\n   * @returns {boolean}\r\n   */\r\n  hasChildElement() {\r\n    return this.children().length > 0;\r\n  }\r\n\r\n  /**\r\n   * 是否有子节点\r\n   * @returns {boolean}\r\n   */\r\n  hasChild() {\r\n    return this.childrenNodes().length > 0;\r\n  }\r\n\r\n  /**\r\n   * 删除Class名称\r\n   * @param name\r\n   * @returns {Element}\r\n   */\r\n  removeClass(name) {\r\n    if (!this.isTextNode()) {\r\n      this.el.classList.remove(name);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 获取元素坐标信息\r\n   * getBoundingClientRect\r\n   * @returns {DOMRect}\r\n   */\r\n  box() {\r\n    if (!this.isTextNode()) {\r\n      return this.el.getBoundingClientRect();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 获取当前第一个子元素\r\n   * @returns {*}\r\n   */\r\n  first() {\r\n    if (!this.isTextNode()) {\r\n      return Element.wrapElement(this.el.firstChild);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 获取最后一个子元素\r\n   * @returns {*}\r\n   */\r\n  last() {\r\n    if (!this.isTextNode()) {\r\n      return Element.wrapElement(this.el.lastChild);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 获取第一个文本节点\r\n   */\r\n  firstTextNode() {\r\n    if (this.isTextNode()) {\r\n      return this;\r\n    }\r\n    let find = null;\r\n    let handle = (elem) => {\r\n      if (elem.hasChild()) {\r\n        elem.childrenNodes().forEach((elem) => {\r\n          if (find === null) {\r\n            handle(elem);\r\n          }\r\n        });\r\n      }\r\n      if (find === null) {\r\n        if (elem.isTextNode()) {\r\n          find = elem;\r\n        }\r\n      }\r\n    };\r\n    handle(this);\r\n    return find;\r\n  }\r\n\r\n  /**\r\n   * 获取最后一个文本节点\r\n   */\r\n  lastTextNode() {\r\n    if (this.isTextNode()) {\r\n      return this;\r\n    }\r\n    let find = null;\r\n    let handle = (elem) => {\r\n      if (elem.hasChild()) {\r\n        elem.childrenNodes().reverse().forEach((elem) => {\r\n          if (find === null) {\r\n            handle(elem);\r\n          }\r\n        });\r\n      }\r\n      if (find === null) {\r\n        if (elem.isTextNode()) {\r\n          find = elem;\r\n        }\r\n      }\r\n    };\r\n    handle(this);\r\n    return find;\r\n  }\r\n\r\n  /**\r\n   * 删除当前元素下的子元素\r\n   * @param target\r\n   * @returns {boolean|ActiveX.IXMLDOMNode|*}\r\n   */\r\n  remove(target = null) {\r\n    if (target) {\r\n      if (!this.isTextNode()) {\r\n        this.el.removeChild(target.el || target);\r\n      }\r\n    } else {\r\n      const parent = this.parent();\r\n      if (parent) {\r\n        this.parent().remove(this);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 当前元素是否包含指定节点\r\n   * @param ele\r\n   * @returns {boolean|*}\r\n   */\r\n  contains(ele) {\r\n    if (this.isTextNode()) {\r\n      return false;\r\n    }\r\n    return this.el.contains(ele.el);\r\n  }\r\n\r\n  /**\r\n   * 获取当前元素的上一个元素\r\n   * @returns {*}\r\n   */\r\n  prev() {\r\n    return this.el.previousSibling\r\n      ? Element.wrapElement(this.el.previousSibling) : null;\r\n  }\r\n\r\n  /**\r\n   * 获取当前元素的下一个元素\r\n   * @returns {*}\r\n   */\r\n  next() {\r\n    return this.el.nextSibling\r\n      ? Element.wrapElement(this.el.nextSibling) : null;\r\n  }\r\n\r\n  /**\r\n   * 设置元素的激活状态\r\n   * @param flag\r\n   * @param cls\r\n   * @returns {Element}\r\n   */\r\n  active(flag = true, cls = 'active') {\r\n    if (!this.isTextNode()) {\r\n      if (flag) this.addClass(cls);\r\n      else this.removeClass(cls);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 设置元素文本\r\n   * @param text\r\n   * @returns {string|Element}\r\n   */\r\n  text(text) {\r\n    if (this.isTextNode()) {\r\n      return this.nodeValue();\r\n    }\r\n    if (text !== undefined) {\r\n      this.el.innerText = text;\r\n      return this;\r\n    }\r\n    return this.el.innerText;\r\n  }\r\n\r\n  /**\r\n   * 设置元素html内容\r\n   * @param html\r\n   * @returns {Element|*}\r\n   */\r\n  html(html) {\r\n    if (this.isTextNode()) {\r\n      return this.nodeValue();\r\n    }\r\n    if (html !== undefined) {\r\n      this.el.innerHTML = html;\r\n      return this;\r\n    }\r\n    return this.el.innerHTML;\r\n  }\r\n\r\n  /**\r\n   * 当前元素设置焦点\r\n   */\r\n  focus() {\r\n    if (!this.isTextNode()) {\r\n      this.el.focus();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 移除焦点\r\n   */\r\n  blur() {\r\n    if (!this.isTextNode()) {\r\n      this.el.blur();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 删除元素属性\r\n   * @param key\r\n   * @returns {Element}\r\n   */\r\n  removeAttr(key) {\r\n    if (!this.isTextNode()) {\r\n      this.el.removeAttribute(key);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 添加style\r\n   * @param style\r\n   */\r\n  style(style) {\r\n    if (!this.isTextNode()) {\r\n      this.attr('style', style);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 添加元素属性\r\n   * @param key\r\n   * @param value\r\n   * @returns {string|Element}\r\n   */\r\n  attr(key, value) {\r\n    if (!this.isTextNode()) {\r\n      if (value !== undefined) {\r\n        if (this.el.setAttribute) {\r\n          this.el.setAttribute(key, value);\r\n        }\r\n      } else {\r\n        if (typeof key === 'string') {\r\n          if (this.el.setAttribute) {\r\n            return this.el.getAttribute(key);\r\n          }\r\n          return null;\r\n        }\r\n        if (this.el.setAttribute) {\r\n          Object.keys(key).forEach((k) => {\r\n            this.el.setAttribute(k, key[k]);\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 设置元素Value\r\n   * @param v\r\n   * @returns {Element|*}\r\n   */\r\n  val(v) {\r\n    if (!this.isTextNode()) {\r\n      if (v !== undefined) {\r\n        this.el.value = v;\r\n        return this;\r\n      }\r\n      return this.el.value;\r\n    }\r\n    if (v === undefined) {\r\n      return this.nodeValue();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 获取原始节点\r\n   * @returns {*}\r\n   */\r\n  get() {\r\n    return this.el;\r\n  }\r\n\r\n  /**\r\n   * 删除元素style属性\r\n   * @param keys\r\n   * @returns {Element}\r\n   */\r\n  cssRemoveKeys(...keys) {\r\n    if (!this.isTextNode()) {\r\n      if (this.el.style) {\r\n        keys.forEach((k) => {\r\n          if (this.el.style) {\r\n            this.el.style.removeProperty(Element.hyphenateRE(k));\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 删除元素style属性\r\n   * @param key\r\n   * @param value\r\n   * @returns {Element}\r\n   */\r\n  cssRemoveVal(key, value) {\r\n    if (!this.isTextNode()) {\r\n      if (this.el.style) {\r\n        const property = Element.hyphenateRE(key);\r\n        const propertyValue = this.el.style.getPropertyValue(property);\r\n        const newValue = propertyValue.replace(value, '');\r\n        this.css(key, newValue);\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 设置元素属性\r\n   * @param name\r\n   * @param value\r\n   * @returns {Element|*}\r\n   */\r\n  css(name, value) {\r\n    if (!this.isTextNode()) {\r\n      if (this.el.style) {\r\n        if (value === undefined && typeof name !== 'string') {\r\n          Object.keys(name).forEach((key) => {\r\n            const property = Element.hyphenateRE(key);\r\n            this.el.style.setProperty(property, name[key]);\r\n          });\r\n          return this;\r\n        }\r\n        if (value !== undefined) {\r\n          const property = Element.hyphenateRE(name);\r\n          this.el.style.setProperty(property, value);\r\n          return this;\r\n        }\r\n        const property = Element.hyphenateRE(name);\r\n        return this.el.style.getPropertyValue(property);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 获取元素计算完成的样式\r\n   * @returns {CSSStyleDeclaration}\r\n   */\r\n  computedStyle() {\r\n    if (!this.isTextNode()) {\r\n      return window.getComputedStyle(this.el, null);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 显示\r\n   * @returns {Element}\r\n   */\r\n  show() {\r\n    if (!this.isTextNode()) {\r\n      const style = this.computedStyle();\r\n      if (style && style.display !== 'block') {\r\n        this.css('display', 'block');\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 隐藏\r\n   * @returns {Element}\r\n   */\r\n  hide() {\r\n    if (!this.isTextNode()) {\r\n      const style = this.computedStyle();\r\n      if (style && style.display !== 'none') {\r\n        this.css('display', 'none');\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 事件触发\r\n   * @param type\r\n   * @param message\r\n   */\r\n  trigger(type, message) {\r\n    if (!this.isTextNode()) {\r\n      switch (type) {\r\n        case 'click': {\r\n          const evt = new MouseEvent(type, {\r\n            detail: message,\r\n            bubbles: true,\r\n            cancelable: false,\r\n          });\r\n          evt.initEvent('click', true, true);\r\n          this.el.dispatchEvent(evt);\r\n          break;\r\n        }\r\n        default: {\r\n          const evt = new CustomEvent(type, {\r\n            detail: message,\r\n            bubbles: true,\r\n            cancelable: false,\r\n          });\r\n          this.el.dispatchEvent(evt);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 查找子元素\r\n   * @param select\r\n   * @returns {[]|Element}\r\n   */\r\n  find(select) {\r\n    if (!this.isTextNode()) {\r\n      const result = this.el.querySelectorAll(select);\r\n      if (result && result.length === 1) {\r\n        return new Element(result[0]);\r\n      }\r\n      const array = [];\r\n      if (result) {\r\n        for (const item of result) {\r\n          array.push(new Element(item));\r\n        }\r\n      }\r\n      return array;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * 查找子元素\r\n   * @param select\r\n   * @returns {[]|Element}\r\n   */\r\n  finds(select) {\r\n    if (!this.isTextNode()) {\r\n      const result = this.el.querySelectorAll(select);\r\n      const array = [];\r\n      if (result) {\r\n        for (const item of result) {\r\n          array.push(new Element(item));\r\n        }\r\n      }\r\n      return array;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  /**\r\n   * 获取当前元素的兄弟节点\r\n   * @returns {[]}\r\n   */\r\n  sibling() {\r\n    let sibling = this.el;\r\n    const result = [];\r\n    // eslint-disable-next-line no-cond-assign\r\n    while ((sibling = sibling.previousElementSibling) !== null) result.push(new Element(sibling));\r\n    sibling = this.el;\r\n    // eslint-disable-next-line no-cond-assign\r\n    while ((sibling = sibling.nextElementSibling) !== null) result.push(new Element(sibling));\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * 节点名称\r\n   * @returns {string}\r\n   */\r\n  tagName() {\r\n    return this.el.nodeName.toLocaleLowerCase();\r\n  }\r\n\r\n  /**\r\n   * 节点内容\r\n   * @returns {string}\r\n   */\r\n  nodeValue() {\r\n    return this.el.nodeValue;\r\n  }\r\n\r\n  /**\r\n   * 节点类型\r\n   * @returns {number}\r\n   */\r\n  nodeType() {\r\n    return this.el.nodeType;\r\n  }\r\n\r\n  /**\r\n   * 在当前元素之后插入新元素\r\n   * @param ele\r\n   */\r\n  after(ele) {\r\n    if (this.el && ele && ele.el) {\r\n      this.el.after(ele.el);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 在当前元素之前插入新元素\r\n   * @param ele\r\n   */\r\n  before(ele) {\r\n    if (this.el && ele && ele.el) {\r\n      this.el.before(ele.el);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 复制\r\n   */\r\n  clone() {\r\n    return new Element(this.el.cloneNode(true));\r\n  }\r\n\r\n  /**\r\n   * 清空元素中的所有内容\r\n   */\r\n  empty() {\r\n    if (!this.isTextNode()) {\r\n      this.html('');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 相等比较\r\n   * @param other\r\n   * @returns {boolean}\r\n   */\r\n  equals(other) {\r\n    return this.el === other.el;\r\n  }\r\n\r\n  /**\r\n   * 获取当前元素在父元素中的索引\r\n   * @returns {number}\r\n   */\r\n  index() {\r\n    let parent = this.parent();\r\n    let index = -1;\r\n    parent.childrenNodes()\r\n      .forEach((v, i) => {\r\n        if (v.equals(this)) {\r\n          index = i;\r\n        }\r\n      });\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * 比较dom是否相同\r\n   * @param ele\r\n   * @returns {boolean}\r\n   */\r\n  is(ele) {\r\n    return this.el === ele.el;\r\n  }\r\n\r\n  /**\r\n   * 是否文本节点\r\n   * @returns {boolean}\r\n   */\r\n  isTextNode() {\r\n    return this.tagName() === '#text';\r\n  }\r\n\r\n  /**\r\n   * 是否换行节点\r\n   * @returns {boolean}\r\n   */\r\n  isBreakNode() {\r\n    return this.tagName() === 'br';\r\n  }\r\n\r\n  /**\r\n   * 是否文档碎片\r\n   * @returns {boolean}\r\n   */\r\n  isDocumentFragment() {\r\n    return this.el instanceof DocumentFragment;\r\n  }\r\n\r\n}\r\n\r\nconst h = (tag, className = '') => new Element(tag, className);\r\n\r\nconst TextNode = text => Element.createText(text);\r\n\r\nexport {\r\n  Element,\r\n  TextNode,\r\n  h,\r\n};\r\n","const cssPrefix = 'x-sheet';\r\nconst XSheetVersion = `${cssPrefix} 1.0.0-develop`;\r\nconst Constant = {};\r\nConstant.WORK_BODY_EVENT_TYPE = {\r\n  CHANGE_ACTIVE: 'changeactive',\r\n  REMOVE_SHEET: 'removesheet',\r\n};\r\nConstant.SYSTEM_EVENT_TYPE = {\r\n  MOUSE_MOVE: 'mousemove',\r\n  MOUSE_DOWN: 'mousedown',\r\n  CONTEXT_MENU: 'contextmenu',\r\n  SCROLL: 'scroll',\r\n  RESIZE: 'resize',\r\n  MOUSE_UP: 'mouseup',\r\n  INPUT: 'input',\r\n  KEY_DOWN: 'keydown',\r\n  KEY_UP: 'keyup',\r\n  MOUSE_OVER: 'mouseover',\r\n  MOUSE_LEAVE: 'mouseleave',\r\n  MOUSE_WHEEL: 'wheel',\r\n  MOUSE_ENTER: 'mouseenter',\r\n  CLICK: 'click',\r\n  FOCUS: 'focus',\r\n  DRAG_START: 'dragstart',\r\n  CHANGE: 'change',\r\n  VISIBILITY_CHANGE: 'visibilitychange',\r\n};\r\nConstant.TABLE_EVENT_TYPE = {\r\n  RENDER: 'render',\r\n  SNAPSHOT_CHANGE: 'snapshotchange',\r\n  CHANGE_ROW_HEIGHT: 'changerowheight',\r\n  CHANGE_COL_WIDTH: 'changecolwidth',\r\n  SCALE_CHANGE: 'scalechange',\r\n  EDIT_START: 'editstart',\r\n  EDIT_INPUT: 'editinput',\r\n  EDIT_FINISH: 'editfinish',\r\n  REMOVE_ROW: 'removerow',\r\n  REMOVE_COL: 'removecol',\r\n  ADD_NEW_ROW: 'addnewrow',\r\n  ADD_NEW_COL: 'addnewcol',\r\n  FIXED_CHANGE: 'fixedchange',\r\n  FIXED_COL_CHANGE: 'fixedcolchange',\r\n  FIXED_ROW_CHANGE: 'fixedrowchange',\r\n  SELECT_OVER: 'selectover',\r\n  SELECT_DOWN: 'selectdown',\r\n  SELECT_CHANGE: 'selectchange',\r\n  DATA_CHANGE: 'datachange',\r\n  RESIZE_CHANGE: 'resizechange',\r\n};\r\nConstant.FORM_EVENT_TYPE = {\r\n  SEARCH_INPUT_CHANGE: 'searchinputchange',\r\n  PLAIN_INPUT_CHANGE: 'plaininputchange',\r\n  FORM_SELECT_CHANGE: 'formselectchange',\r\n};\r\nexport {\r\n  XSheetVersion,\r\n  Constant,\r\n  cssPrefix,\r\n};\r\n","import { Constant } from '../const/Constant';\r\nimport { Element } from './Element';\r\n\r\nclass BindPool {\r\n\r\n  constructor() {\r\n    this.pool = [];\r\n  }\r\n\r\n  unbind(ele, type, callback, option) {\r\n    if (ele instanceof Element) {\r\n      ele = ele.el;\r\n    }\r\n    const result = this.remove(ele, type, callback, option);\r\n    if (result.length) {\r\n      result.forEach((item) => {\r\n        ele.removeEventListener(item.type, item.callback, item.option);\r\n      });\r\n    } else {\r\n      ele.removeEventListener(type, callback, option);\r\n    }\r\n  }\r\n\r\n  bind(ele, type, callback, option) {\r\n    if (ele instanceof Element) {\r\n      ele = ele.el;\r\n    }\r\n    this.pool.push({\r\n      ele, type, callback, option,\r\n    });\r\n    ele.addEventListener(type, callback, option);\r\n  }\r\n\r\n  remove(ele, type = '*', callback = null, option = null) {\r\n    const pool = [];\r\n    const rem = [];\r\n    this.pool.forEach((item) => {\r\n      const eqElem = ele === item.ele;\r\n      const eqOpt = option === null || option === item.option;\r\n      const eqType = type === '*' || type === item.type;\r\n      const eqCall = callback === null || callback === item.callback;\r\n      if (eqElem && eqType && eqCall && eqOpt) {\r\n        rem.push(item);\r\n      } else {\r\n        pool.push(item);\r\n      }\r\n    });\r\n    this.pool = pool;\r\n    return rem;\r\n  }\r\n\r\n  multipleUnbind(eles, type, callback, option) {\r\n    eles.forEach((item) => {\r\n      this.unbind(item, type, callback, option);\r\n    });\r\n  }\r\n\r\n  multipleBind(eles, type, callback, option) {\r\n    eles.forEach((item) => {\r\n      this.bind(item, type, callback, option);\r\n    });\r\n  }\r\n\r\n}\r\n\r\nconst pool = new BindPool();\r\n\r\nclass XEvent {\r\n\r\n  static unbind(target, name, fn, option = false) {\r\n    if (Array.isArray(target)) {\r\n      pool.multipleUnbind(target, name, fn, option);\r\n    } else {\r\n      pool.unbind(target, name, fn, option);\r\n    }\r\n    return target;\r\n  }\r\n\r\n  static bind(target, name, fn, option = false) {\r\n    if (Array.isArray(target)) {\r\n      pool.multipleBind(target, name, fn, option);\r\n    } else {\r\n      pool.bind(target, name, fn, option);\r\n    }\r\n    return target;\r\n  }\r\n\r\n  static mouseHold(target, holdFunc = () => {}, endFunc = () => {}, time = 150) {\r\n    let handle = setInterval(() => {\r\n      holdFunc();\r\n    }, time);\r\n    let xEvtUp = (evt) => {\r\n      clearInterval(handle);\r\n      XEvent.unbind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp, true);\r\n      endFunc(evt);\r\n    };\r\n    holdFunc();\r\n    XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp, true);\r\n  }\r\n\r\n  static mouseMoveUp(target, moveFunc = () => {}, upFunc = () => {}) {\r\n    const xEvtMove = (evt) => {\r\n      moveFunc(evt);\r\n      evt.stopPropagation();\r\n      evt.preventDefault();\r\n    };\r\n    const xEvtUp = (evt) => {\r\n      XEvent.unbind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, xEvtMove, true);\r\n      XEvent.unbind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp, true);\r\n      upFunc(evt);\r\n      evt.preventDefault();\r\n    };\r\n    XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, xEvtMove, true);\r\n    XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp, true);\r\n    return target;\r\n  }\r\n\r\n}\r\n\r\nXEvent.WrapFuncion = {\r\n  doubleClick: (callback) => {\r\n    let lastPageX = 0;\r\n    let lastPageY = 0;\r\n    let lastTime = 0;\r\n    return (event) => {\r\n      if (event.button === 2) {\r\n        lastPageX = 0;\r\n        lastTime = 0;\r\n        lastPageY = 0;\r\n        return;\r\n      }\r\n      const { pageX, pageY } = event;\r\n      const current = Date.now();\r\n      const diffTime = current - lastTime <= 300;\r\n      const diffPageX = pageX === lastPageX;\r\n      const diffPageY = pageY === lastPageY;\r\n      if (diffTime && diffPageX && diffPageY) {\r\n        callback(event);\r\n        lastTime = 0;\r\n        lastPageX = 0;\r\n        lastPageY = 0;\r\n      } else {\r\n        lastPageX = pageX;\r\n        lastPageY = pageY;\r\n        lastTime = current;\r\n      }\r\n    };\r\n  },\r\n  mouseClick: callback => (event) => {\r\n    callback(event);\r\n  },\r\n};\r\n\r\nexport {\r\n  XEvent,\r\n};\r\n","/* global document */\r\n\r\nimport { Element, h } from './Element';\r\nimport { cssPrefix } from '../const/Constant';\r\nimport { XEvent } from './XEvent';\r\n\r\n/**\r\n * Life\r\n */\r\nclass Life extends Element {\r\n\r\n  onAttach() { }\r\n\r\n}\r\n\r\n/**\r\n * Widget\r\n */\r\nclass Widget extends Life {\r\n\r\n  /**\r\n   * Widget\r\n   * @param className\r\n   * @param nodeType\r\n   * @param $$rootFlag\r\n   */\r\n  constructor(className = '', nodeType = 'div', $$rootFlag = false) {\r\n    if (typeof className === 'string') {\r\n      super(nodeType, `${cssPrefix}-widget ${className}`);\r\n    } else {\r\n      super(className);\r\n    }\r\n    this.$$rootFlag = $$rootFlag;\r\n  }\r\n\r\n  /**\r\n   * 查找最邻近\r\n   * 的class元素\r\n   * @param clazz\r\n   */\r\n  closestClass(clazz) {\r\n    let node = this;\r\n    while (!h(document.body).is(node)) {\r\n      if (node.hasClass(clazz)) {\r\n        return node;\r\n      }\r\n      node = node.parent();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * 获取 root widget\r\n   */\r\n  getRootWidget() {\r\n    let parent = this.data('parent');\r\n    while (parent && !parent.$$rootFlag) {\r\n      parent = parent.data('parent');\r\n    }\r\n    return parent;\r\n  }\r\n\r\n  /**\r\n   * 绑定处理事件\r\n   */\r\n  bind() {\r\n\r\n  }\r\n\r\n  /**\r\n   * 解绑事件处理\r\n   */\r\n  unbind() {\r\n    XEvent.unbind(this);\r\n  }\r\n\r\n  /**\r\n   * 追加节点\r\n   * 触发onAttach事件\r\n   * @param widget\r\n   */\r\n  attach(widget) {\r\n    this.childrenNodes(widget);\r\n    widget.parentWidget(this);\r\n    widget.onAttach(this);\r\n  }\r\n\r\n  /**\r\n   * 设置 parent widget\r\n   * @param widget\r\n   */\r\n  parentWidget(widget) {\r\n    if (widget) {\r\n      this.data('parent', widget);\r\n      return this;\r\n    }\r\n    return this.data('parent');\r\n  }\r\n\r\n  /**\r\n   * 计算鼠标在当前\r\n   * 元素中的位置\r\n   * @param event\r\n   * @param elem\r\n   * @returns {{x: number, y: number}}\r\n   */\r\n  eventXy(event, elem = this) {\r\n    const { top, left } = elem.box();\r\n    return {\r\n      y: event.clientY - top,\r\n      x: event.clientX - left,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    this.unbind();\r\n    this.remove();\r\n  }\r\n\r\n}\r\n\r\nconst w = (className = '', nodeType = 'div') => new Widget(className, nodeType);\r\n\r\nexport {\r\n  Widget,\r\n  w,\r\n};\r\n","import { Widget } from '../../../../lib/Widget';\r\nimport { cssPrefix } from '../../../../const/Constant';\r\nimport { h } from '../../../../lib/Element';\r\n\r\nclass Icon extends Widget {\r\n\r\n  constructor(className = '') {\r\n    super(`${cssPrefix}-icon`);\r\n    this.iconNameEl = h('div', `${cssPrefix}-icon-img ${className}`);\r\n    this.childrenNodes(this.iconNameEl);\r\n  }\r\n\r\n  setWidth(width) {\r\n    this.iconNameEl.css('width', `${width}px`);\r\n  }\r\n\r\n  setHeight(height) {\r\n    this.iconNameEl.css('height', `${height}px`);\r\n  }\r\n\r\n}\r\n\r\nexport { Icon };\r\n","/* global document */\r\nimport { Widget } from '../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { XEvent } from '../../lib/XEvent';\r\n\r\nimport { h } from '../../lib/Element';\r\nimport { SheetUtils } from '../../utils/SheetUtils';\r\n\r\nlet instances = [];\r\n\r\n/**\r\n * DragPanel\r\n * @author jerry\r\n * @date 2020/10/19\r\n */\r\nclass DragPanel extends Widget {\r\n\r\n  /**\r\n   * DragPanel\r\n   * @param options\r\n   */\r\n  constructor(options) {\r\n    super(`${cssPrefix}-drag-panel`);\r\n    instances.push(this);\r\n    this.options = SheetUtils.copy({\r\n      position: DragPanel.DRAG_PANEL_POSITION.CENTER,\r\n    }, options);\r\n    this.status = false;\r\n    this.mask = h('div', `${cssPrefix}-drag-panel-mask`);\r\n    this.content = h('div', `${cssPrefix}-drag-panel-content`);\r\n    super.childrenNodes(this.content);\r\n    this.bind();\r\n  }\r\n\r\n  /**\r\n   * 显示弹框\r\n   */\r\n  open() {\r\n    const root = this.getRootWidget();\r\n    const { mask } = this;\r\n    if (this.status === false && root) {\r\n      this.status = true;\r\n      root.childrenNodes(mask);\r\n      root.childrenNodes(this);\r\n      this.dragPanelLocation();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 关闭弹框\r\n   */\r\n  close() {\r\n    const root = this.getRootWidget();\r\n    if (this.status === true && root) {\r\n      const { mask } = this;\r\n      this.status = false;\r\n      root.remove(this);\r\n      root.remove(mask);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 卸载事件\r\n   */\r\n  unbind() {\r\n    const { mask } = this;\r\n    XEvent.unbind(mask);\r\n  }\r\n\r\n  /**\r\n   * 绑定事件\r\n   */\r\n  bind() {\r\n    const { mask } = this;\r\n    XEvent.bind(mask, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\r\n      this.close();\r\n      e.stopPropagation();\r\n    });\r\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (evt1) => {\r\n      if (evt1.button !== 0) return;\r\n      const downEventXy = this.eventXy(evt1, this);\r\n      XEvent.mouseMoveUp(h(document), (evt2) => {\r\n        // 计算移动的距离\r\n        const top = evt2.pageY - downEventXy.y;\r\n        const left = evt2.pageX - downEventXy.x;\r\n        this.offset({ top, left });\r\n        evt2.stopPropagation();\r\n      });\r\n      evt1.stopPropagation();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 设置显示位置\r\n   */\r\n  dragPanelLocation() {\r\n    const root = this.getRootWidget();\r\n    const { options } = this;\r\n    const { position } = options;\r\n    const rootBox = root.box();\r\n    const elemBox = this.box();\r\n    switch (position) {\r\n      case DragPanel.DRAG_PANEL_POSITION.LEFT:\r\n        break;\r\n      case DragPanel.DRAG_PANEL_POSITION.RIGHT:\r\n        break;\r\n      case DragPanel.DRAG_PANEL_POSITION.TOP:\r\n        break;\r\n      case DragPanel.DRAG_PANEL_POSITION.CENTER:\r\n        this.offset({\r\n          left: rootBox.width / 2 - elemBox.width / 2,\r\n          top: rootBox.height / 2 - elemBox.height / 2,\r\n        });\r\n        break;\r\n      default: break;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 添加子元素\r\n   * @param args\r\n   * @returns {DragPanel}\r\n   */\r\n  childrenNodes(...args) {\r\n    this.content.childrenNodes(...args);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 销毁组件\r\n   */\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    DragPanel.removeInstance(this);\r\n  }\r\n\r\n  /**\r\n   * 删除实例\r\n   * @param instance\r\n   */\r\n  static removeInstance(instance) {\r\n    const filter = [];\r\n    instances.forEach((item) => {\r\n      if (item !== instance) {\r\n        filter.push(item);\r\n      }\r\n    });\r\n    instances = filter;\r\n  }\r\n\r\n  /**\r\n   * 关闭所有实例\r\n   * @param filter\r\n   */\r\n  static closeAll(filter = []) {\r\n    instances.forEach((item) => {\r\n      if (filter.indexOf(item) === -1) {\r\n        item.close();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\nDragPanel.DRAG_PANEL_POSITION = {\r\n  LEFT: 1,\r\n  TOP: 2,\r\n  RIGHT: 3,\r\n  CENTER: 4,\r\n};\r\n\r\nexport { DragPanel };\r\n","/* global document */\r\nimport { h } from '../../lib/Element';\r\nimport { cssPrefix, Constant } from '../../const/Constant';\r\nimport { Widget } from '../../lib/Widget';\r\nimport { DragPanel } from '../dragpanel/DragPanel';\r\nimport { XEvent } from '../../lib/XEvent';\r\nimport { SheetUtils } from '../../utils/SheetUtils';\r\n\r\nclass ColorPicker extends Widget {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-color-picker`);\r\n    this.options = SheetUtils.copy({\r\n      selectCb: () => {},\r\n    }, options);\r\n    // 拖拽组件\r\n    this.dragPanel = new DragPanel().parentWidget(this);\r\n    this.color = [360, 0, 100];\r\n    // 头部\r\n    this.preViewColorPoint = h('div', `${cssPrefix}-color-picker-pre-view-color-point`);\r\n    this.colorValueTips = h('div', `${cssPrefix}-color-picker-color-value-tips`);\r\n    this.colorValueTips.text('十六进制颜色值');\r\n    this.colorInput = h('input', `${cssPrefix}-color-picker-color-input`);\r\n    this.top = h('div', `${cssPrefix}-color-picker-top`);\r\n    this.top.childrenNodes(this.preViewColorPoint);\r\n    this.top.childrenNodes(this.colorValueTips);\r\n    this.top.childrenNodes(this.colorInput);\r\n    // 中间部分\r\n    this.selectColorPoint = h('div', `${cssPrefix}-color-picker-select-color-point`);\r\n    this.selectColorArea1 = h('div', `${cssPrefix}-color-picker-select-color-area area1`);\r\n    this.selectColorArea2 = h('div', `${cssPrefix}-color-picker-select-color-area area2`);\r\n    this.selectColorArea3 = h('div', `${cssPrefix}-color-picker-select-color-area area3`);\r\n    this.center = h('div', `${cssPrefix}-color-picker-center`);\r\n    this.center.childrenNodes(this.selectColorArea1);\r\n    this.center.childrenNodes(this.selectColorArea2);\r\n    this.center.childrenNodes(this.selectColorArea3);\r\n    this.center.childrenNodes(this.selectColorPoint);\r\n    // 底部\r\n    this.colorHuxTips = h('div', `${cssPrefix}-color-picker-color-hux-tips`);\r\n    this.colorBar = h('div', `${cssPrefix}-color-picker-color-bar`);\r\n    this.colorBarPoint = h('div', `${cssPrefix}-color-picker-bar-point`);\r\n    this.bottom = h('div', `${cssPrefix}-color-picker-bottom`);\r\n    this.colorHuxTips.text('HUE');\r\n    this.colorBar.childrenNodes(this.colorBarPoint);\r\n    this.bottom.childrenNodes(this.colorHuxTips);\r\n    this.bottom.childrenNodes(this.colorBar);\r\n    // 按钮\r\n    this.cancelButton = h('div', `${cssPrefix}-color-picker-button cancel`);\r\n    this.selectButton = h('div', `${cssPrefix}-color-picker-button select`);\r\n    this.buttons = h('div', `${cssPrefix}-color-picker-buttons`);\r\n    this.cancelButton.text('取消');\r\n    this.selectButton.text('确定');\r\n    this.buttons.childrenNodes(this.selectButton);\r\n    this.buttons.childrenNodes(this.cancelButton);\r\n    this.childrenNodes(this.top);\r\n    this.childrenNodes(this.center);\r\n    this.childrenNodes(this.bottom);\r\n    this.childrenNodes(this.buttons);\r\n    this.dragPanel.childrenNodes(this);\r\n    this.dragPanel.css('background', '#ffffff');\r\n    this.bind();\r\n  }\r\n\r\n  unbind() {\r\n    const { selectColorPoint } = this;\r\n    const { colorBarPoint } = this;\r\n    const {\r\n      colorInput, cancelButton, selectButton,\r\n    } = this;\r\n    XEvent.unbind(colorInput);\r\n    XEvent.unbind(colorInput);\r\n    XEvent.unbind(colorBarPoint);\r\n    XEvent.unbind(selectColorPoint);\r\n    XEvent.unbind(cancelButton);\r\n    XEvent.unbind(selectButton);\r\n  }\r\n\r\n  bind() {\r\n    const { selectColorPoint, center } = this;\r\n    const { colorBarPoint, colorBar } = this;\r\n    const {\r\n      colorInput, cancelButton, selectButton,\r\n    } = this;\r\n    XEvent.bind(colorInput, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\r\n      e1.stopPropagation();\r\n    });\r\n    XEvent.bind(colorInput, Constant.SYSTEM_EVENT_TYPE.CHANGE, () => {\r\n      const value = colorInput.val();\r\n      if (value) {\r\n        this.hexColor(value);\r\n      }\r\n    });\r\n    XEvent.bind(colorBarPoint, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\r\n      const xy = this.eventXy(e1, colorBar);\r\n      const colorBarBox = colorBar.box();\r\n      if (xy.x < 0) xy.x = 0;\r\n      if (xy.x > colorBarBox.width) xy.x = colorBarBox.width;\r\n      this.downHue(xy.x, colorBarBox.width);\r\n      XEvent.mouseMoveUp(h(document), (e2) => {\r\n        const xy = this.eventXy(e2, colorBar);\r\n        const colorBarBox = colorBar.box();\r\n        if (xy.x < 0) xy.x = 0;\r\n        if (xy.x > colorBarBox.width) xy.x = colorBarBox.width;\r\n        this.moveHue(xy.x, colorBarBox.width);\r\n      });\r\n      e1.stopPropagation();\r\n    });\r\n    XEvent.bind(selectColorPoint, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\r\n      const xy = this.eventXy(e1, center);\r\n      const centerBox = center.box();\r\n      if (xy.x < 0) xy.x = 0;\r\n      if (xy.x > centerBox.width) xy.x = centerBox.width;\r\n      if (xy.y < 0) xy.y = 0;\r\n      if (xy.y > centerBox.height) xy.y = centerBox.height;\r\n      this.downSelect(xy.x, xy.y, centerBox.width, centerBox.height);\r\n      XEvent.mouseMoveUp(h(document), (e2) => {\r\n        const xy = this.eventXy(e2, center);\r\n        if (xy.x < 0) xy.x = 0;\r\n        if (xy.x > centerBox.width) xy.x = centerBox.width;\r\n        if (xy.y < 0) xy.y = 0;\r\n        if (xy.y > centerBox.height) xy.y = centerBox.height;\r\n        this.moveSelect(xy.x, xy.y, centerBox.width, centerBox.height);\r\n      });\r\n      e1.stopPropagation();\r\n    });\r\n    XEvent.bind(cancelButton, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      this.close();\r\n    });\r\n    XEvent.bind(selectButton, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\r\n      const { color } = this;\r\n      const hsb = ColorPicker.fixHsx({\r\n        h: parseInt(color[0], 10),\r\n        s: parseInt(color[1], 10),\r\n        x: parseInt(color[2], 10),\r\n      });\r\n      const rgb = ColorPicker.hsbToRgb(hsb);\r\n      this.options.selectCb(`rgb(${rgb.r},${rgb.g},${rgb.b})`);\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  open(hex) {\r\n    const { dragPanel } = this;\r\n    dragPanel.open();\r\n    if (hex) {\r\n      if (ColorPicker.isRgb(hex)) {\r\n        const rgb = ColorPicker.parseRgb(hex);\r\n        // eslint-disable-next-line no-param-reassign\r\n        hex = ColorPicker.rgbToHex(rgb);\r\n      }\r\n      this.hexColor(hex);\r\n    } else {\r\n      this.change();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  close() {\r\n    const { dragPanel } = this;\r\n    dragPanel.close();\r\n    return this;\r\n  }\r\n\r\n  sliderPosition(hsb) {\r\n    // hue 滑块位置\r\n    const { colorBar, colorBarPoint } = this;\r\n    const colorBarPointBox = colorBarPoint.box();\r\n    const colorBarBox = colorBar.box();\r\n    let colorBarPointLeft = parseInt(colorBarBox.width - colorBarBox.width * hsb.h / 360, 10);\r\n    colorBarPointLeft -= colorBarPointBox.width / 2;\r\n    colorBarPoint.offset({\r\n      left: colorBarPointLeft,\r\n    });\r\n    // select color 滑块位置\r\n    const { center, selectColorPoint } = this;\r\n    const selectColorPointBox = selectColorPoint.box();\r\n    const centerBox = center.box();\r\n    let selectColorPointLeft = parseInt(centerBox.width * hsb.s / 100, 10);\r\n    let selectColorPointTop = parseInt(centerBox.height * (100 - hsb.x) / 100, 10);\r\n    selectColorPointLeft -= selectColorPointBox.width / 2;\r\n    selectColorPointTop -= selectColorPointBox.height / 2;\r\n    selectColorPoint.offset({\r\n      left: selectColorPointLeft,\r\n      top: selectColorPointTop,\r\n    });\r\n  }\r\n\r\n  hueChange() {\r\n    const { color } = this;\r\n    const hsb = ColorPicker.fixHsx({\r\n      h: parseInt(color[0], 10),\r\n      s: parseInt(color[1], 10),\r\n      x: parseInt(color[2], 10),\r\n    });\r\n    const {\r\n      colorBarPoint, selectColorPoint, preViewColorPoint, selectColorArea1, colorInput,\r\n    } = this;\r\n    const colorValue = ColorPicker.hsbToHex(hsb);\r\n    const areaColorValue = ColorPicker.hsbToHex({ h: hsb.h, s: 100, x: 100 });\r\n    selectColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    preViewColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    colorBarPoint.css('backgroundColor', `#${areaColorValue}`);\r\n    selectColorArea1.css('backgroundColor', `#${areaColorValue}`);\r\n    colorInput.val(`#${colorValue}`);\r\n    this.sliderPosition(hsb);\r\n  }\r\n\r\n  selectChange() {\r\n    const { color } = this;\r\n    const hsb = ColorPicker.fixHsx({\r\n      h: parseInt(color[0], 10),\r\n      s: parseInt(color[1], 10),\r\n      x: parseInt(color[2], 10),\r\n    });\r\n    const { preViewColorPoint, selectColorPoint, colorInput } = this;\r\n    const colorValue = ColorPicker.hsbToHex(hsb);\r\n    selectColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    preViewColorPoint.css('backgroundColor', `#${colorValue}`);\r\n    colorInput.val(`#${colorValue}`);\r\n    this.sliderPosition(hsb);\r\n  }\r\n\r\n  change() {\r\n    this.hueChange();\r\n    this.selectChange();\r\n  }\r\n\r\n  downSelect(x, y, width, height) {\r\n    const { color } = this;\r\n    color[1] = parseInt(100 * x / width, 10);\r\n    color[2] = parseInt(100 * (height - y) / height, 10);\r\n    this.selectChange();\r\n  }\r\n\r\n  moveSelect(x, y, width, height) {\r\n    const { color } = this;\r\n    color[1] = parseInt(100 * (Math.max(0, Math.min(width, x))) / width, 10);\r\n    color[2] = parseInt(100 * (height - Math.max(0, Math.min(height, y))) / height, 10);\r\n    this.selectChange();\r\n  }\r\n\r\n  downHue(x, width) {\r\n    const { color } = this;\r\n    color[0] = parseInt(360 * (width - x) / width, 10);\r\n    this.hueChange();\r\n  }\r\n\r\n  moveHue(x, width) {\r\n    const { color } = this;\r\n    color[0] = parseInt(360 * (width - Math.max(0, Math.min(width, x))) / width, 10);\r\n    this.hueChange();\r\n  }\r\n\r\n  hexColor(hex) {\r\n    const { color } = this;\r\n    const result = ColorPicker.hexToHsb(ColorPicker.fixHex(hex));\r\n    color[0] = result.h;\r\n    color[1] = result.s;\r\n    color[2] = result.x;\r\n    this.change();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n    this.dragPanel.destroy();\r\n  }\r\n\r\n  static fixHex(hex) {\r\n    const len = 6 - hex.length;\r\n    if (len > 0) {\r\n      const o = [];\r\n      for (let i = 0; i < len; i += 1) {\r\n        o.push('0');\r\n      }\r\n      o.push(hex);\r\n      // eslint-disable-next-line no-param-reassign\r\n      hex = o.join('');\r\n    }\r\n    return hex;\r\n  }\r\n\r\n  static fixHsx(hsx) {\r\n    return {\r\n      h: Math.min(360, Math.max(0, hsx.h)),\r\n      s: Math.min(100, Math.max(0, hsx.s)),\r\n      x: Math.min(100, Math.max(0, hsx.x)),\r\n    };\r\n  }\r\n\r\n  static isRgb(rgb) {\r\n    return rgb.startsWith('rgb');\r\n  }\r\n\r\n  static isHex(hex) {\r\n    return hex.startsWith('#');\r\n  }\r\n\r\n  static isDark(rgb) {\r\n    if (SheetUtils.isString(rgb)) {\r\n      if (this.isHex(rgb)) {\r\n        const v = ColorPicker.hexToRgb(rgb);\r\n        rgb = `rgb(${v.r}, ${v.g}, ${v.b})`;\r\n      }\r\n      const result = ColorPicker.parseRgb(rgb);\r\n      const { r, g, b } = result;\r\n      return (r * 0.299) + (g * 0.578) + (b * 0.114) >= 192;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static hexToRgb(hex) {\r\n    // eslint-disable-next-line no-redeclare,no-param-reassign\r\n    hex = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\r\n    // eslint-disable-next-line no-bitwise\r\n    return { r: hex >> 16, g: (hex & 0x00FF00) >> 8, b: (hex & 0x0000FF) };\r\n  }\r\n\r\n  static hexToHsb(hex) {\r\n    return this.rgbToHsb(this.hexToRgb(hex));\r\n  }\r\n\r\n  static rgbToHsb(rgb) {\r\n    const hsb = { h: 0, s: 0, x: 0 };\r\n    const min = Math.min(rgb.r, rgb.g, rgb.b);\r\n    const max = Math.max(rgb.r, rgb.g, rgb.b);\r\n    const delta = max - min;\r\n    hsb.x = max;\r\n    hsb.s = max !== 0 ? 255 * delta / max : 0;\r\n    if (hsb.s !== 0) {\r\n      if (rgb.r === max) hsb.h = (rgb.g - rgb.b) / delta;\r\n      else if (rgb.g === max) hsb.h = 2 + (rgb.b - rgb.r) / delta;\r\n      else hsb.h = 4 + (rgb.r - rgb.g) / delta;\r\n    } else hsb.h = -1;\r\n    hsb.h *= 60;\r\n    if (hsb.h < 0) hsb.h += 360;\r\n    hsb.s *= 100 / 255;\r\n    hsb.x *= 100 / 255;\r\n    return hsb;\r\n  }\r\n\r\n  static hsbToRgb(hsb) {\r\n    const rgb = {};\r\n    let { h } = hsb;\r\n    const s = hsb.s * 255 / 100;\r\n    const v = hsb.x * 255 / 100;\r\n    if (s === 0) {\r\n      rgb.r = v;\r\n      rgb.g = v;\r\n      rgb.b = v;\r\n    } else {\r\n      const t1 = v;\r\n      const t2 = (255 - s) * v / 255;\r\n      const t3 = (t1 - t2) * (h % 60) / 60;\r\n      if (h === 360) h = 0;\r\n      if (h < 60) {\r\n        rgb.r = t1;\r\n        rgb.b = t2;\r\n        rgb.g = t2 + t3;\r\n      } else if (h < 120) {\r\n        rgb.g = t1;\r\n        rgb.b = t2;\r\n        rgb.r = t1 - t3;\r\n      } else if (h < 180) {\r\n        rgb.g = t1;\r\n        rgb.r = t2;\r\n        rgb.b = t2 + t3;\r\n      } else if (h < 240) {\r\n        rgb.b = t1;\r\n        rgb.r = t2;\r\n        rgb.g = t1 - t3;\r\n      } else if (h < 300) {\r\n        rgb.b = t1;\r\n        rgb.g = t2;\r\n        rgb.r = t2 + t3;\r\n      } else if (h < 360) {\r\n        rgb.r = t1;\r\n        rgb.g = t2;\r\n        rgb.b = t1 - t3;\r\n      } else {\r\n        rgb.r = 0;\r\n        rgb.g = 0;\r\n        rgb.b = 0;\r\n      }\r\n    }\r\n    return { r: Math.round(rgb.r), g: Math.round(rgb.g), b: Math.round(rgb.b) };\r\n  }\r\n\r\n  static rgbToHex(rgb) {\r\n    const hex = [\r\n      rgb.r.toString(16),\r\n      rgb.g.toString(16),\r\n      rgb.b.toString(16),\r\n    ];\r\n    hex.forEach((val, nr) => {\r\n      if (val.length === 1) {\r\n        hex[nr] = `0${val}`;\r\n      }\r\n    });\r\n    return hex.join('');\r\n  }\r\n\r\n  static hsbToHex(hsb) {\r\n    return this.rgbToHex(this.hsbToRgb(hsb));\r\n  }\r\n\r\n  static parseRgb(rgb) {\r\n    const rxp = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/;\r\n    const result = rgb.match(rxp);\r\n    return {\r\n      r: parseInt(result[1], 10),\r\n      g: parseInt(result[2], 10),\r\n      b: parseInt(result[3], 10),\r\n    };\r\n  }\r\n\r\n  static parseRgbToHex(rgb, defaultValue = null) {\r\n    if (rgb) {\r\n      if (this.isHex(rgb)) {\r\n        return rgb.substring(1);\r\n      }\r\n      const value = this.parseRgb(rgb);\r\n      return this.rgbToHex(value);\r\n    }\r\n    return defaultValue;\r\n  }\r\n\r\n  static parseHexToRgb(hex, defaultValue = null) {\r\n    if (hex) {\r\n      const rgb = ColorPicker.hexToRgb(hex);\r\n      return `rgb(${rgb.r},${rgb.g},${rgb.b})`;\r\n    }\r\n    return defaultValue;\r\n  }\r\n\r\n}\r\n\r\nexport { ColorPicker };\r\n","import { Widget } from '../../../lib/Widget';\r\nimport { cssPrefix } from '../../../const/Constant';\r\nimport { SheetUtils } from '../../../utils/SheetUtils';\r\nimport { Icon } from '../../../core/xwork/head/tool/Icon';\r\nimport { ColorPicker } from '../ColorPicker';\r\n\r\nclass ColorItem extends Widget {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-color-array-item`);\r\n    this.options = SheetUtils.copy({\r\n      color: null,\r\n      icon: null,\r\n    }, options);\r\n    this.icon = this.options.icon;\r\n    this.color = SheetUtils.blankClear(this.options.color);\r\n    if (this.icon) {\r\n      this.childrenNodes(this.options.icon);\r\n    }\r\n    if (this.color) {\r\n      this.css('backgroundColor', this.color);\r\n      if (ColorPicker.isDark(this.options.color)) {\r\n        this.checkedIcon = new Icon('checked-dark');\r\n        this.childrenNodes(this.checkedIcon);\r\n      } else {\r\n        this.checkedIcon = new Icon('checked-light');\r\n        this.childrenNodes(this.checkedIcon);\r\n      }\r\n      this.checkedIcon.hide();\r\n    }\r\n  }\r\n\r\n  setActive(active) {\r\n    if (this.checkedIcon) {\r\n      if (active) {\r\n        this.checkedIcon.show();\r\n      } else {\r\n        this.checkedIcon.hide();\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport { ColorItem };\r\n","import { Widget } from '../../../lib/Widget';\r\nimport { cssPrefix, Constant } from '../../../const/Constant';\r\nimport { ColorItem } from './ColorItem';\r\nimport { SheetUtils } from '../../../utils/SheetUtils';\r\nimport { XEvent } from '../../../lib/XEvent';\r\n\r\nclass ColorArray extends Widget {\r\n\r\n  constructor(options) {\r\n    super(`${cssPrefix}-color-array`);\r\n    this.options = SheetUtils.copy({\r\n      colors: [\r\n        new ColorItem({ color: 'rgb(0, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(67, 67, 67)' }),\r\n        new ColorItem({ color: 'rgb(102, 102, 102)' }),\r\n        new ColorItem({ color: 'rgb(153, 153, 153)' }),\r\n        new ColorItem({ color: 'rgb(183, 183, 183)' }),\r\n        new ColorItem({ color: 'rgb(204, 204, 204)' }),\r\n        new ColorItem({ color: 'rgb(217, 217, 217)' }),\r\n        new ColorItem({ color: 'rgb(239, 239, 239)' }),\r\n        new ColorItem({ color: 'rgb(255, 255, 255)' }),\r\n\r\n        new ColorItem({ color: 'rgb(152, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(255, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(255, 153, 0)' }),\r\n        new ColorItem({ color: 'rgb(255, 255, 0)' }),\r\n        new ColorItem({ color: 'rgb(0, 255, 0)' }),\r\n        new ColorItem({ color: 'rgb(0, 255, 255)' }),\r\n        new ColorItem({ color: 'rgb(74, 134, 232)' }),\r\n        new ColorItem({ color: 'rgb(0, 0, 255)' }),\r\n        new ColorItem({ color: 'rgb(153, 0, 255)' }),\r\n        new ColorItem({ color: 'rgb(255, 0, 255)' }),\r\n\r\n        new ColorItem({ color: 'rgb(230, 184, 175)' }),\r\n        new ColorItem({ color: 'rgb(244, 204, 204)' }),\r\n        new ColorItem({ color: 'rgb(252, 229, 205)' }),\r\n        new ColorItem({ color: 'rgb(255, 242, 204)' }),\r\n        new ColorItem({ color: 'rgb(217, 234, 211)' }),\r\n        new ColorItem({ color: 'rgb(208, 224, 227)' }),\r\n        new ColorItem({ color: 'rgb(201, 218, 248)' }),\r\n        new ColorItem({ color: 'rgb(207, 226, 243)' }),\r\n        new ColorItem({ color: 'rgb(217, 210, 233)' }),\r\n        new ColorItem({ color: 'rgb(234, 209, 220)' }),\r\n\r\n        new ColorItem({ color: 'rgb(221, 126, 107)' }),\r\n        new ColorItem({ color: 'rgb(234, 153, 153)' }),\r\n        new ColorItem({ color: 'rgb(249, 203, 156)' }),\r\n        new ColorItem({ color: 'rgb(255, 229, 153)' }),\r\n        new ColorItem({ color: 'rgb(182, 215, 168)' }),\r\n        new ColorItem({ color: 'rgb(162, 196, 201)' }),\r\n        new ColorItem({ color: 'rgb(164, 194, 244)' }),\r\n        new ColorItem({ color: 'rgb(159, 197, 232)' }),\r\n        new ColorItem({ color: 'rgb(180, 167, 214)' }),\r\n        new ColorItem({ color: 'rgb(213, 166, 189)' }),\r\n\r\n        new ColorItem({ color: 'rgb(204, 65, 37)' }),\r\n        new ColorItem({ color: 'rgb(224, 102, 102)' }),\r\n        new ColorItem({ color: 'rgb(246, 178, 107)' }),\r\n        new ColorItem({ color: 'rgb(255, 217, 102)' }),\r\n        new ColorItem({ color: 'rgb(147, 196, 125)' }),\r\n        new ColorItem({ color: 'rgb(118, 165, 175)' }),\r\n        new ColorItem({ color: 'rgb(109, 158, 235)' }),\r\n        new ColorItem({ color: 'rgb(111, 168, 220)' }),\r\n        new ColorItem({ color: 'rgb(142, 124, 195)' }),\r\n        new ColorItem({ color: 'rgb(194, 123, 160)' }),\r\n\r\n        new ColorItem({ color: 'rgb(166, 28, 0)' }),\r\n        new ColorItem({ color: 'rgb(204, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(230, 145, 56)' }),\r\n        new ColorItem({ color: 'rgb(241, 194, 50)' }),\r\n        new ColorItem({ color: 'rgb(106, 168, 79)' }),\r\n        new ColorItem({ color: 'rgb(69, 129, 142)' }),\r\n        new ColorItem({ color: 'rgb(60, 120, 216)' }),\r\n        new ColorItem({ color: 'rgb(61, 133, 198)' }),\r\n        new ColorItem({ color: 'rgb(103, 78, 167)' }),\r\n        new ColorItem({ color: 'rgb(166, 77, 121)' }),\r\n\r\n        new ColorItem({ color: 'rgb(133, 32, 12)' }),\r\n        new ColorItem({ color: 'rgb(153, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(180, 95, 6)' }),\r\n        new ColorItem({ color: 'rgb(191, 144, 0)' }),\r\n        new ColorItem({ color: 'rgb(56, 118, 29)' }),\r\n        new ColorItem({ color: 'rgb(19, 79, 92)' }),\r\n        new ColorItem({ color: 'rgb(17, 85, 204)' }),\r\n        new ColorItem({ color: 'rgb(11, 83, 148)' }),\r\n        new ColorItem({ color: 'rgb(53, 28, 117)' }),\r\n        new ColorItem({ color: 'rgb(116, 27, 71)' }),\r\n\r\n        new ColorItem({ color: 'rgb(91, 15, 0)' }),\r\n        new ColorItem({ color: 'rgb(102, 0, 0)' }),\r\n        new ColorItem({ color: 'rgb(120, 63, 4)' }),\r\n        new ColorItem({ color: 'rgb(127, 96, 0)' }),\r\n        new ColorItem({ color: 'rgb(39, 78, 19)' }),\r\n        new ColorItem({ color: 'rgb(12, 52, 61)' }),\r\n        new ColorItem({ color: 'rgb(28, 69, 135)' }),\r\n        new ColorItem({ color: 'rgb(7, 55, 99)' }),\r\n        new ColorItem({ color: 'rgb(32, 18, 77)' }),\r\n        new ColorItem({ color: 'rgb(76, 17, 48)' }),\r\n      ],\r\n      selectCb: () => {},\r\n    }, options);\r\n    this.colors = [];\r\n    this.activeColor = null;\r\n    this.options.colors.forEach((item) => {\r\n      this.add(item);\r\n    });\r\n    if (this.colors.length > 0) {\r\n      this.setActiveByColor(this.colors[0].options.color);\r\n    }\r\n  }\r\n\r\n  add(item) {\r\n    const find = this.colors.findIndex(color => color.color === item.color);\r\n    if (find === -1) {\r\n      const { colors } = this;\r\n      colors.push(item);\r\n      this.childrenNodes(item);\r\n      this.bind(item);\r\n    }\r\n  }\r\n\r\n  unbind() {\r\n    this.colors.forEach((item) => {\r\n      XEvent.unbind(item);\r\n    });\r\n  }\r\n\r\n  bind(item) {\r\n    XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\r\n      this.options.selectCb(item);\r\n      if (item.options.color) {\r\n        this.setActiveByColor(item.options.color);\r\n      }\r\n    });\r\n  }\r\n\r\n  findItemByColor(color) {\r\n    color = SheetUtils.blankClear(color);\r\n    return this.colors.find(item => item.color === color);\r\n  }\r\n\r\n  setActiveByColor(color) {\r\n    color = SheetUtils.blankClear(color);\r\n    this.colors.forEach((item) => {\r\n      if (item.color === color) {\r\n        item.setActive(true);\r\n        this.activeColor = item.color;\r\n      } else {\r\n        item.setActive(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  clear() {\r\n    this.unbind();\r\n    this.colors = [];\r\n    this.empty();\r\n  }\r\n\r\n  destroy() {\r\n    super.destroy();\r\n    this.unbind();\r\n  }\r\n\r\n}\r\n\r\nColorArray.BLACK = 'rgb(0, 0, 0)';\r\nColorArray.WHITE = 'rgb(255, 255, 255)';\r\n\r\nexport {\r\n  ColorArray,\r\n};\r\n","import { BaseFont } from '../../../draw/font/BaseFont';\r\nimport { ColorArray } from '../../../module/colorpicker/colorarray/ColorArray';\r\nimport { SheetUtils } from '../../../utils/SheetUtils';\r\n\r\n/**\r\n *  CellFont\r\n *  @author jerry\r\n */\r\nclass CellFont {\r\n\r\n  /**\r\n   * CellFont\r\n   * @param align\r\n   * @param verticalAlign\r\n   * @param textWrap\r\n   * @param strikethrough\r\n   * @param underline\r\n   * @param color\r\n   * @param name\r\n   * @param size\r\n   * @param bold\r\n   * @param italic\r\n   * @param angle\r\n   * @param direction\r\n   * @param padding\r\n   */\r\n  constructor({\r\n    align = BaseFont.ALIGN.left,\r\n    verticalAlign = BaseFont.VERTICAL_ALIGN.center,\r\n    textWrap = BaseFont.TEXT_WRAP.TRUNCATE,\r\n    strikethrough = false,\r\n    underline = false,\r\n    color = ColorArray.BLACK,\r\n    name = 'Arial',\r\n    size = 14,\r\n    bold = false,\r\n    italic = false,\r\n    angle = 0,\r\n    direction = BaseFont.TEXT_DIRECTION.HORIZONTAL,\r\n    padding = 5,\r\n  }) {\r\n    this.align = align;\r\n    this.verticalAlign = verticalAlign;\r\n    this.textWrap = textWrap;\r\n    this.strikethrough = strikethrough;\r\n    this.underline = underline;\r\n    this.color = color;\r\n    this.name = name;\r\n    this.size = size;\r\n    this.bold = bold;\r\n    this.italic = italic;\r\n    this.direction = direction;\r\n    this.angle = angle;\r\n    this.padding = padding;\r\n  }\r\n\r\n  clone() {\r\n    const {\r\n      align,\r\n      verticalAlign,\r\n      textWrap,\r\n      strikethrough,\r\n      underline,\r\n      color,\r\n      name,\r\n      size,\r\n      bold,\r\n      italic,\r\n      angle,\r\n      direction,\r\n      padding,\r\n    } = this;\r\n    return new CellFont({\r\n      align,\r\n      verticalAlign,\r\n      textWrap,\r\n      strikethrough,\r\n      underline,\r\n      color,\r\n      name,\r\n      size,\r\n      bold,\r\n      italic,\r\n      angle,\r\n      direction,\r\n      padding,\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.align = BaseFont.ALIGN.left;\r\n    this.verticalAlign = BaseFont.VERTICAL_ALIGN.center;\r\n    this.textWrap = BaseFont.TEXT_WRAP.TRUNCATE;\r\n    this.strikethrough = false;\r\n    this.underline = false;\r\n    this.color = ColorArray.BLACK;\r\n    this.name = 'Arial';\r\n    this.size = 14;\r\n    this.bold = false;\r\n    this.italic = false;\r\n    this.angle = 0;\r\n    this.direction = BaseFont.TEXT_DIRECTION.HORIZONTAL;\r\n    this.padding = 5;\r\n  }\r\n\r\n  like(other) {\r\n    let keys1 = Object.keys(this);\r\n    let keys2 = Object.keys(other);\r\n    for (let key of keys2) {\r\n      if (!keys1.includes(key)) {\r\n        return false;\r\n      }\r\n    }\r\n    for (let key of keys2) {\r\n      let src = this[key];\r\n      let val = other[key];\r\n      switch (key) {\r\n        case 'color': {\r\n          src = SheetUtils.clearBlank(src);\r\n          val = SheetUtils.clearBlank(val);\r\n          break;\r\n        }\r\n      }\r\n      if (src !== val) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  equals(other) {\r\n    let keys1 = Object.keys(this);\r\n    let keys2 = Object.keys(other);\r\n    for (let key of keys1) {\r\n      if (!keys2.includes(key)) {\r\n        return false;\r\n      }\r\n    }\r\n    for (let key of keys1) {\r\n      let src = this[key];\r\n      let val = other[key];\r\n      switch (key) {\r\n        case 'color': {\r\n          src = SheetUtils.clearBlank(src);\r\n          val = SheetUtils.clearBlank(val);\r\n          break;\r\n        }\r\n      }\r\n      if (src !== val) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\nCellFont.scaleAdapter = null;\r\n\r\nexport { CellFont };\r\n","/* global devicePixelRatio */\r\nimport { SheetUtils } from '../utils/SheetUtils';\r\n\r\nlet DPR = SheetUtils.inWorker() ? 1 : devicePixelRatio;\r\nlet LINE_WIDTH_LOW = Math.round(DPR);\r\nlet LINE_WIDTH_MEDIUM = LINE_WIDTH_LOW + 2;\r\nlet LINE_WIDTH_HIGH = LINE_WIDTH_MEDIUM + 2;\r\nlet LINE_PIXEL_OFFSET = LINE_WIDTH_LOW / 2;\r\n\r\nclass Base {\r\n\r\n  static srcPx(px) {\r\n    return px / this.dpr();\r\n  }\r\n\r\n  static cssPx(px) {\r\n    return this.srcPx(this.stylePx(px));\r\n  }\r\n\r\n  static stylePx(px) {\r\n    return this.round(px * this.dpr());\r\n  }\r\n\r\n  static round(val) {\r\n    return Math.round(val);\r\n  }\r\n\r\n  static ceil(val) {\r\n    return Math.ceil(val);\r\n  }\r\n\r\n  static trunc(val) {\r\n    return Math.trunc(val);\r\n  }\r\n\r\n  static radian(angle) {\r\n    return -angle * (Math.PI / 180);\r\n  }\r\n\r\n  static dpr() {\r\n    return DPR;\r\n  }\r\n\r\n  static refresh(val = 1) {\r\n    DPR = SheetUtils.inWorker() ? val : devicePixelRatio;\r\n    LINE_WIDTH_LOW = Math.round(DPR);\r\n    LINE_WIDTH_MEDIUM = LINE_WIDTH_LOW + 2;\r\n    LINE_WIDTH_HIGH = LINE_WIDTH_MEDIUM + 2;\r\n    LINE_PIXEL_OFFSET = LINE_WIDTH_LOW / 2;\r\n  }\r\n\r\n  constructor(canvas) {\r\n    this.canvas = canvas;\r\n    this.ctx = canvas.getContext('2d');\r\n  }\r\n\r\n  attr(options) {\r\n    for (const key in options) {\r\n      if (options.hasOwnProperty(key)) {\r\n        let value = options[key];\r\n        if (typeof value === 'string' || value instanceof String) {\r\n          value = value.trim();\r\n        }\r\n        if (this.ctx[key] !== value) {\r\n          this.ctx[key] = value;\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  resize(width, height) {\r\n    const { canvas } = this;\r\n    canvas.width = Base.stylePx(width);\r\n    canvas.height = Base.stylePx(height);\r\n    canvas.style.width = `${canvas.width / Base.dpr()}px`;\r\n    canvas.style.height = `${canvas.height / Base.dpr()}px`;\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nclass Wrapping extends Base {\r\n\r\n  constructor(canvas) {\r\n    super(canvas);\r\n    this.dash = [];\r\n  }\r\n\r\n  beginPath() {\r\n    const { ctx } = this;\r\n    ctx.beginPath();\r\n    return this;\r\n  }\r\n\r\n  measureText(text) {\r\n    const { ctx } = this;\r\n    return ctx.measureText(text);\r\n  }\r\n\r\n  save() {\r\n    const { ctx } = this;\r\n    ctx.save();\r\n    return this;\r\n  }\r\n\r\n  restore() {\r\n    const { ctx } = this;\r\n    ctx.restore();\r\n    return this;\r\n  }\r\n\r\n  fill() {\r\n    const { ctx } = this;\r\n    ctx.fill();\r\n    return this;\r\n  }\r\n\r\n  clip() {\r\n    const { ctx } = this;\r\n    ctx.clip();\r\n    return this;\r\n  }\r\n\r\n  setLineDash(dash = []) {\r\n    const { ctx } = this;\r\n    this.dash = dash;\r\n    ctx.setLineDash(dash);\r\n    return this;\r\n  }\r\n\r\n  scale(x, y) {\r\n    const { ctx } = this;\r\n    ctx.scale(x, y);\r\n    return this;\r\n  }\r\n\r\n  translate(x, y) {\r\n    const { ctx } = this;\r\n    ctx.translate(x, y);\r\n    return this;\r\n  }\r\n\r\n  rotate(deg) {\r\n    const { ctx } = this;\r\n    ctx.rotate(deg);\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nclass Extends extends Wrapping {\r\n\r\n  polyStroke(interpolation = xys => xys, ...xys) {\r\n    const { ctx } = this;\r\n    if (xys.length > 1) {\r\n      this.beginPath();\r\n      const [x, y] = interpolation(xys[0]);\r\n      ctx.moveTo(x, y);\r\n      for (let i = 1, len = xys.length; i < len; i += 1) {\r\n        const [x, y] = interpolation(xys[i]);\r\n        ctx.lineTo(x, y);\r\n      }\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  polyInFill(interpolation = xys => xys, ...xys) {\r\n    const { ctx } = this;\r\n    if (xys.length > 1) {\r\n      this.beginPath();\r\n      const [x, y] = interpolation(xys[0]);\r\n      ctx.moveTo(x, y);\r\n      for (let i = 1, len = xys.length; i < len; i += 1) {\r\n        const [x, y] = interpolation(xys[i]);\r\n        ctx.lineTo(x, y);\r\n      }\r\n      ctx.fill();\r\n    }\r\n  }\r\n\r\n  fullRect() {\r\n    const { canvas } = this;\r\n    const { width, height } = canvas;\r\n    this.ctx.fillRect(0, 0, width, height);\r\n    return this;\r\n  }\r\n\r\n  rotate(angle) {\r\n    super.rotate(Base.radian(angle));\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nclass Position extends Extends {\r\n\r\n  constructor(canvas) {\r\n    super(canvas);\r\n    this.offsetX = 0;\r\n    this.offsetY = 0;\r\n  }\r\n\r\n  offset(x, y) {\r\n    this.offsetX = x;\r\n    this.offsetY = y;\r\n  }\r\n\r\n  getOffsetX() {\r\n    return this.offsetX;\r\n  }\r\n\r\n  getOffsetY() {\r\n    return this.offsetY;\r\n  }\r\n\r\n  fillText() {\r\n    throw TypeError('child impl');\r\n  }\r\n\r\n  fillRect() {\r\n    throw TypeError('child impl');\r\n  }\r\n\r\n  rect() {\r\n    throw TypeError('child impl');\r\n  }\r\n\r\n  drawImage() {\r\n    throw TypeError('child impl');\r\n  }\r\n\r\n}\r\n\r\nclass BaseLine extends Position {\r\n\r\n  line(...xys) {\r\n    this.polyStroke((xys) => {\r\n      const [x, y] = xys;\r\n      return [this.linePx(Base.round(x + this.getOffsetX())),\r\n        this.linePx(Base.round(y + this.getOffsetY()))];\r\n    }, ...xys);\r\n    return this;\r\n  }\r\n\r\n  linePx(pixel) {\r\n    const { ctx } = this;\r\n    const {\r\n      lineWidth,\r\n    } = ctx;\r\n    return lineWidth % 2 === 0\r\n      ? pixel : pixel - 0.5;\r\n  }\r\n\r\n}\r\n\r\nclass CorsLine extends BaseLine {\r\n\r\n  static offsetToLineInside(val) {\r\n    return LINE_WIDTH_LOW > 1\r\n      ? val - LINE_PIXEL_OFFSET\r\n      : val - LINE_WIDTH_LOW;\r\n  }\r\n\r\n  static getLineWidthTypePx(type) {\r\n    switch (type) {\r\n      case CorsLine.LINE_WIDTH_TYPE.medium:\r\n        return LINE_WIDTH_MEDIUM;\r\n      case CorsLine.LINE_WIDTH_TYPE.low:\r\n        return LINE_WIDTH_LOW;\r\n      case CorsLine.LINE_WIDTH_TYPE.high:\r\n        return LINE_WIDTH_HIGH;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  constructor(canvas) {\r\n    super(canvas);\r\n    this.lineWidthType = CorsLine.LINE_WIDTH_TYPE.low;\r\n    this.lineColor = 'rgb(0,0,0)';\r\n  }\r\n\r\n  corsLine([sx, sy], [ex, ey]) {\r\n    const {\r\n      lineWidthType, lineColor,\r\n    } = this;\r\n    let lineWidth = LINE_WIDTH_LOW;\r\n    switch (lineWidthType) {\r\n      case CorsLine.LINE_WIDTH_TYPE.medium:\r\n        lineWidth = LINE_WIDTH_MEDIUM;\r\n        break;\r\n      case CorsLine.LINE_WIDTH_TYPE.low:\r\n        lineWidth = LINE_WIDTH_LOW;\r\n        break;\r\n      case CorsLine.LINE_WIDTH_TYPE.high:\r\n        lineWidth = LINE_WIDTH_HIGH;\r\n        break;\r\n    }\r\n    this.attr({\r\n      strokeStyle: lineColor,\r\n      lineWidth,\r\n    });\r\n    this.polyStroke((xys) => {\r\n      const [x, y] = xys;\r\n      return [\r\n        Base.round(x + this.getOffsetX()) - LINE_PIXEL_OFFSET,\r\n        Base.round(y + this.getOffsetY()) - LINE_PIXEL_OFFSET,\r\n      ];\r\n    }, [sx, sy], [ex, ey]);\r\n  }\r\n\r\n  setLineColor(color) {\r\n    this.lineColor = color;\r\n  }\r\n\r\n  setLineWidthType(type) {\r\n    this.lineWidthType = type;\r\n  }\r\n\r\n  horizonLine([sx, sy], [ex, ey]) {\r\n    if (sy !== ey) {\r\n      throw new TypeError('Error Horizon Line');\r\n    }\r\n    this.corsLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  verticalLine([sx, sy], [ex, ey]) {\r\n    if (sx !== ex) {\r\n      throw new TypeError('Error Vertical Line');\r\n    }\r\n    this.corsLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n}\r\nCorsLine.LINE_WIDTH_TYPE = {\r\n  low: 'low',\r\n  medium: 'medium',\r\n  high: 'high',\r\n};\r\n\r\nclass XDraw extends CorsLine {\r\n\r\n  fillText(text, x, y) {\r\n    x += this.getOffsetX();\r\n    y += this.getOffsetY();\r\n    this.ctx.fillText(text, XDraw.round(x), XDraw.round(y));\r\n    return this;\r\n  }\r\n\r\n  fillPath(path) {\r\n    this.polyInFill((xys) => {\r\n      const { x, y } = xys;\r\n      return [Base.round(x + this.getOffsetX()), Base.round(y + this.getOffsetY())];\r\n    }, ...path.points);\r\n    return this;\r\n  }\r\n\r\n  fillRect(x, y, w, h) {\r\n    x += this.getOffsetX();\r\n    y += this.getOffsetY();\r\n    this.ctx.fillRect(XDraw.round(x), XDraw.round(y),\r\n      XDraw.round(w), XDraw.round(h));\r\n    return this;\r\n  }\r\n\r\n  rect(x, y, w, h) {\r\n    x += this.getOffsetX();\r\n    y += this.getOffsetY();\r\n    this.ctx.rect(XDraw.round(x), XDraw.round(y),\r\n      XDraw.round(w), XDraw.round(h));\r\n    return this;\r\n  }\r\n\r\n  copyImage(sx, sy, sw, sh, tx, ty, tw, th) {\r\n    const { ctx } = this;\r\n    tx += this.getOffsetX();\r\n    sx += this.getOffsetX();\r\n    ty += this.getOffsetY();\r\n    sy += this.getOffsetY();\r\n    ctx.drawImage(this.canvas,\r\n      XDraw.round(sx), XDraw.round(sy),\r\n      XDraw.round(sw), XDraw.round(sh),\r\n      XDraw.round(tx), XDraw.round(ty),\r\n      XDraw.round(tw), XDraw.round(th));\r\n    return this;\r\n  }\r\n\r\n  drawImage(el, sx, sy, sw, sh, tx, ty, tw, th) {\r\n    const { ctx } = this;\r\n    tx += this.getOffsetX();\r\n    ty += this.getOffsetY();\r\n    ctx.drawImage(el,\r\n      XDraw.round(sx), XDraw.round(sy),\r\n      XDraw.round(sw), XDraw.round(sh),\r\n      XDraw.round(tx), XDraw.round(ty),\r\n      XDraw.round(tw), XDraw.round(th));\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XDraw,\r\n};\r\n","import { SheetUtils } from '../utils/SheetUtils';\r\nimport { XDraw } from './XDraw';\r\n\r\nconst LINE_TYPE = {\r\n  SOLID_LINE: 0,\r\n  DOTTED_LINE: 1,\r\n  POINT_LINE: 2,\r\n  DOUBLE_LINE: 3,\r\n};\r\n\r\nclass SolidLine {\r\n\r\n  constructor(draw, attr) {\r\n    this.draw = draw;\r\n    SheetUtils.copy(this, {\r\n      color: 'rgb(0,0,0)',\r\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\r\n    }, attr);\r\n  }\r\n\r\n  setWidthType(widthType) {\r\n    this.widthType = widthType;\r\n  }\r\n\r\n  setColor(color) {\r\n    this.color = color;\r\n  }\r\n\r\n  horizonLine(sx, sy, ex, ey) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    draw.horizonLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  verticalLine(sx, sy, ex, ey) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    draw.verticalLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  tiltingLine(sx, sy, ex, ey) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    draw.corsLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n}\r\n\r\nclass DottedLine {\r\n\r\n  constructor(draw, attr) {\r\n    this.draw = draw;\r\n    SheetUtils.copy(this, {\r\n      color: 'rgb(0,0,0)',\r\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\r\n      dash: [5],\r\n    }, attr);\r\n  }\r\n\r\n  setWidthType(widthType) {\r\n    this.widthType = widthType;\r\n  }\r\n\r\n  setColor(color) {\r\n    this.color = color;\r\n  }\r\n\r\n  horizonLine(sx, sy, ex, ey) {\r\n    const { draw, dash } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash(dash);\r\n    draw.horizonLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  verticalLine(sx, sy, ex, ey) {\r\n    const { draw, dash } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash(dash);\r\n    draw.verticalLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n  tiltingLine(sx, sy, ex, ey) {\r\n    const { draw, dash } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash(dash);\r\n    draw.corsLine([sx, sy], [ex, ey]);\r\n  }\r\n\r\n}\r\n\r\nclass DoubleLine {\r\n\r\n  constructor(draw, attr) {\r\n    this.draw = draw;\r\n    SheetUtils.copy(this, {\r\n      color: 'rgb(0,0,0)',\r\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\r\n      padding: 1,\r\n      spacing: DoubleLine.spacing,\r\n      leftShow: () => false,\r\n      topShow: () => false,\r\n      rightShow: () => false,\r\n      bottomShow: () => false,\r\n      iFMerge: () => false,\r\n      iFMergeFirstRow: () => false,\r\n      iFMergeLastRow: () => false,\r\n      iFMergeFirstCol: () => false,\r\n      iFMergeLastCol: () => false,\r\n    }, attr);\r\n  }\r\n\r\n  setWidthType(widthType) {\r\n    this.widthType = widthType;\r\n  }\r\n\r\n  setColor(color) {\r\n    this.color = color;\r\n  }\r\n\r\n  handleExternal(sx, sy, ex, ey, row, col, pos) {\r\n    const external = {};\r\n    const { leftShow, topShow, rightShow, bottomShow } = this;\r\n    const { iFMerge, iFMergeFirstRow, iFMergeLastRow, iFMergeFirstCol, iFMergeLastCol } = this;\r\n    const { spacing } = this;\r\n    let ifMerge = null;\r\n    let firstRow = null;\r\n    let lastRow = null;\r\n    let firstCol = null;\r\n    let lastCol = null;\r\n    switch (pos) {\r\n      case 'left':\r\n        ifMerge = iFMerge(row, col - 1);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row, col - 1);\r\n          lastRow = iFMergeLastRow(row, col - 1);\r\n          firstCol = iFMergeFirstCol(row, col - 1);\r\n          lastCol = iFMergeLastCol(row, col - 1);\r\n        }\r\n        break;\r\n      case 'top':\r\n        ifMerge = iFMerge(row - 1, col);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row - 1, col);\r\n          lastRow = iFMergeLastRow(row - 1, col);\r\n          firstCol = iFMergeFirstCol(row - 1, col);\r\n          lastCol = iFMergeLastCol(row - 1, col);\r\n        }\r\n        break;\r\n      case 'right':\r\n        ifMerge = iFMerge(row, col + 1);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row, col + 1);\r\n          lastRow = iFMergeLastRow(row, col + 1);\r\n          firstCol = iFMergeFirstCol(row, col + 1);\r\n          lastCol = iFMergeLastCol(row, col + 1);\r\n        }\r\n        break;\r\n      case 'bottom':\r\n        ifMerge = iFMerge(row + 1, col);\r\n        if (ifMerge) {\r\n          firstRow = iFMergeFirstRow(row + 1, col);\r\n          lastRow = iFMergeLastRow(row + 1, col);\r\n          firstCol = iFMergeFirstCol(row + 1, col);\r\n          lastCol = iFMergeLastCol(row + 1, col);\r\n        }\r\n        break;\r\n      default: break;\r\n    }\r\n    if (ifMerge) {\r\n      switch (pos) {\r\n        case 'left': {\r\n          external.sx = sx - spacing;\r\n          external.ex = ex - spacing;\r\n          // 检查顶边和上底边及左上角底边及左顶边\r\n          const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          external.sy = sy;\r\n          if (sTop || sBottom) external.sy = sy - spacing;\r\n          if (sTopLeftCorner && firstRow) external.sy = sy + spacing;\r\n          // 检查底边和下顶边及左下角顶边和左底边\r\n          const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          external.ey = ey;\r\n          if (eBottom || eTop) external.ey = ey + spacing;\r\n          if (eBottomLeftCorner && lastRow) external.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'top': {\r\n          external.sy = sy - spacing;\r\n          external.ey = ey - spacing;\r\n          // 检查左边和左右边及左上角右边及上左边\r\n          const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          external.sx = sx;\r\n          if (sLeft || sRight) external.sx = sx - spacing;\r\n          if (sTopLeftCorner && firstCol) external.sx = sx + spacing;\r\n          // 检查右边和右左边及右上角左边及上右边\r\n          const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          external.ex = ex;\r\n          if (eRight || eLeft) external.ex = ex + spacing;\r\n          if (eTopRightCorner && lastCol) external.ex = ex - spacing;\r\n          break;\r\n        }\r\n        case 'right': {\r\n          external.sx = sx + spacing;\r\n          external.ex = ex + spacing;\r\n          // 检查顶边和上底边及右上角底边及右顶边\r\n          const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          external.sy = sy;\r\n          if (sTop || sBottom) external.sy = sy - spacing;\r\n          if (sTopRightCorner && firstRow) external.sy = sy + spacing;\r\n          // 检查底边和下顶边及右下角顶边及右底边\r\n          const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          external.ey = ey;\r\n          if (eBottom || eTop) external.ey = ey + spacing;\r\n          if (eBottomRightCorner && lastRow) external.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'bottom': {\r\n          external.sy = sy + spacing;\r\n          external.ey = ey + spacing;\r\n          // 检查左边和左右边及左下角右边及下左边\r\n          const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          external.sx = sx;\r\n          if (sLeft || sRight) external.sx = sx - spacing;\r\n          if (sBottomLeftCorner && firstCol) external.sx = sx + spacing;\r\n          // 检查右边和右左边及右下角左边及下右边\r\n          const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          external.ex = ex;\r\n          if (eRight || eLeft) external.ex = ex + spacing;\r\n          if (eBottomRightCorner && lastCol) external.ex = ex - spacing;\r\n          break;\r\n        }\r\n        default: break;\r\n      }\r\n      return external;\r\n    }\r\n    switch (pos) {\r\n      case 'left': {\r\n        external.sx = sx - spacing;\r\n        external.ex = ex - spacing;\r\n        // 检查顶边和上底边及左上角底边及左顶边\r\n        const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        external.sy = sy;\r\n        if (sTop || sBottom) external.sy = sy - spacing;\r\n        if (sTopLeftCorner) external.sy = sy + spacing;\r\n        // 检查底边和下顶边及左下角顶边和左底边\r\n        const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        external.ey = ey;\r\n        if (eBottom || eTop) external.ey = ey + spacing;\r\n        if (eBottomLeftCorner) external.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'top': {\r\n        external.sy = sy - spacing;\r\n        external.ey = ey - spacing;\r\n        // 检查左边和左右边及左上角右边及上左边\r\n        const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        external.sx = sx;\r\n        if (sLeft || sRight) external.sx = sx - spacing;\r\n        if (sTopLeftCorner) external.sx = sx + spacing;\r\n        // 检查右边和右左边及右上角左边及上右边\r\n        const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        external.ex = ex;\r\n        if (eRight || eLeft) external.ex = ex + spacing;\r\n        if (eTopRightCorner) external.ex = ex - spacing;\r\n        break;\r\n      }\r\n      case 'right': {\r\n        external.sx = sx + spacing;\r\n        external.ex = ex + spacing;\r\n        // 检查顶边和上底边及右上角底边及右顶边\r\n        const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        external.sy = sy;\r\n        if (sTop || sBottom) external.sy = sy - spacing;\r\n        if (sTopRightCorner) external.sy = sy + spacing;\r\n        // 检查底边和下顶边及右下角顶边及右底边\r\n        const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        external.ey = ey;\r\n        if (eBottom || eTop) external.ey = ey + spacing;\r\n        if (eBottomRightCorner) external.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'bottom': {\r\n        external.sy = sy + spacing;\r\n        external.ey = ey + spacing;\r\n        // 检查左边和左右边及左下角右边及下左边\r\n        const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        external.sx = sx;\r\n        if (sLeft || sRight) external.sx = sx - spacing;\r\n        if (sBottomLeftCorner) external.sx = sx + spacing;\r\n        // 检查右边和右左边及右下角左边及下右边\r\n        const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        external.ex = ex;\r\n        if (eRight || eLeft) external.ex = ex + spacing;\r\n        if (eBottomRightCorner) external.ex = ex - spacing;\r\n        break;\r\n      }\r\n      default: break;\r\n    }\r\n    return external;\r\n  }\r\n\r\n  handleInternal(sx, sy, ex, ey, row, col, pos) {\r\n    const internal = {};\r\n    const { leftShow, topShow, rightShow, bottomShow } = this;\r\n    const { iFMerge, iFMergeFirstRow, iFMergeLastRow, iFMergeFirstCol, iFMergeLastCol } = this;\r\n    const { spacing } = this;\r\n    const ifMerge = iFMerge(row, col);\r\n    // merge\r\n    if (ifMerge) {\r\n      const firstRow = iFMergeFirstRow(row, col);\r\n      const lastRow = iFMergeLastRow(row, col);\r\n      const firstCol = iFMergeFirstCol(row, col);\r\n      const lastCol = iFMergeLastCol(row, col);\r\n      switch (pos) {\r\n        case 'left': {\r\n          internal.sx = sx + spacing;\r\n          internal.ex = ex + spacing;\r\n          // 检查顶边和上底边及左上角底边及左顶边\r\n          const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          internal.sy = sy;\r\n          if (sTopLeftCorner) internal.sy = sy - spacing;\r\n          if ((sTop || sBottom) && firstRow) internal.sy = sy + spacing;\r\n          // 检查底边和下顶边及左下角顶边和左底边\r\n          const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          internal.ey = ey;\r\n          if (eBottomLeftCorner) internal.ey = ey + spacing;\r\n          if ((eBottom || eTop) && lastRow) internal.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'top': {\r\n          internal.sy = sy + spacing;\r\n          internal.ey = ey + spacing;\r\n          // 检查左边和左右边及左上角右边及上左边\r\n          const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          internal.sx = sx;\r\n          if (sTopLeftCorner) internal.sx = sx - spacing;\r\n          if ((sLeft || sRight) && firstCol) internal.sx = sx + spacing;\r\n          // 检查右边和右左边及右上角左边及上右边\r\n          const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          internal.ex = ex;\r\n          if (eTopRightCorner) internal.ex = ex + spacing;\r\n          if ((eRight || eLeft) && lastCol) internal.ex = ex - spacing;\r\n          break;\r\n        }\r\n        case 'right': {\r\n          internal.sx = sx - spacing;\r\n          internal.ex = ex - spacing;\r\n          // 检查顶边和上底边及右上角底边及右上边\r\n          const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n          const sTop = topShow(row, col);\r\n          const sBottom = bottomShow(row - 1, col);\r\n          internal.sy = sy;\r\n          if (sTopRightCorner) internal.sy = sy - spacing;\r\n          if ((sTop || sBottom) && firstRow) internal.sy = sy + spacing;\r\n          // 检查底边和下顶边右下角顶边及右下边\r\n          const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n          const eBottom = bottomShow(row, col);\r\n          const eTop = topShow(row + 1, col);\r\n          internal.ey = ey;\r\n          if (eBottomRightCorner) internal.ey = ey + spacing;\r\n          if ((eBottom || eTop) && lastRow) internal.ey = ey - spacing;\r\n          break;\r\n        }\r\n        case 'bottom': {\r\n          internal.sy = sy - spacing;\r\n          internal.ey = ey - spacing;\r\n          // 检查左边和左右边及左下角右边及下左边\r\n          const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n          const sLeft = leftShow(row, col);\r\n          const sRight = rightShow(row, col - 1);\r\n          internal.sx = sx;\r\n          if (sBottomLeftCorner) internal.sx = sx - spacing;\r\n          if ((sLeft || sRight) && firstCol) internal.sx = sx + spacing;\r\n          // 检查右边和右左边及右下角左边及下右边\r\n          const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n          const eRight = rightShow(row, col);\r\n          const eLeft = leftShow(row, col + 1);\r\n          internal.ex = ex;\r\n          if (eBottomRightCorner) internal.ex = ex + spacing;\r\n          if ((eRight || eLeft) && lastCol) internal.ex = ex - spacing;\r\n          break;\r\n        }\r\n        default: break;\r\n      }\r\n      return internal;\r\n    }\r\n    switch (pos) {\r\n      case 'left': {\r\n        internal.sx = sx + spacing;\r\n        internal.ex = ex + spacing;\r\n        // 检查顶边和上底边及左上角底边及左顶边\r\n        const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        internal.sy = sy;\r\n        if (sTopLeftCorner) internal.sy = sy - spacing;\r\n        if (sTop || sBottom) internal.sy = sy + spacing;\r\n        // 检查底边和下顶边及左下角顶边和左底边\r\n        const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        internal.ey = ey;\r\n        if (eBottomLeftCorner) internal.ey = ey + spacing;\r\n        if (eBottom || eTop) internal.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'top': {\r\n        internal.sy = sy + spacing;\r\n        internal.ey = ey + spacing;\r\n        // 检查左边和左右边及左上角右边及上左边\r\n        const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        internal.sx = sx;\r\n        if (sTopLeftCorner) internal.sx = sx - spacing;\r\n        if (sLeft || sRight) internal.sx = sx + spacing;\r\n        // 检查右边和右左边及右上角左边及上右边\r\n        const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        internal.ex = ex;\r\n        if (eTopRightCorner) internal.ex = ex + spacing;\r\n        if (eRight || eLeft) internal.ex = ex - spacing;\r\n        break;\r\n      }\r\n      case 'right': {\r\n        internal.sx = sx - spacing;\r\n        internal.ex = ex - spacing;\r\n        // 检查顶边和上底边及右上角底边及右上边\r\n        const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\r\n        const sTop = topShow(row, col);\r\n        const sBottom = bottomShow(row - 1, col);\r\n        internal.sy = sy;\r\n        if (sTopRightCorner) internal.sy = sy - spacing;\r\n        if (sTop || sBottom) internal.sy = sy + spacing;\r\n        // 检查底边和下顶边右下角顶边及右下边\r\n        const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\r\n        const eBottom = bottomShow(row, col);\r\n        const eTop = topShow(row + 1, col);\r\n        internal.ey = ey;\r\n        if (eBottomRightCorner) internal.ey = ey + spacing;\r\n        if (eBottom || eTop) internal.ey = ey - spacing;\r\n        break;\r\n      }\r\n      case 'bottom': {\r\n        internal.sy = sy - spacing;\r\n        internal.ey = ey - spacing;\r\n        // 检查左边和左右边及左下角右边及下左边\r\n        const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\r\n        const sLeft = leftShow(row, col);\r\n        const sRight = rightShow(row, col - 1);\r\n        internal.sx = sx;\r\n        if (sBottomLeftCorner) internal.sx = sx - spacing;\r\n        if (sLeft || sRight) internal.sx = sx + spacing;\r\n        // 检查右边和右左边及右下角左边及下右边\r\n        const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\r\n        const eRight = rightShow(row, col);\r\n        const eLeft = leftShow(row, col + 1);\r\n        internal.ex = ex;\r\n        if (eBottomRightCorner) internal.ex = ex + spacing;\r\n        if (eRight || eLeft) internal.ex = ex - spacing;\r\n        break;\r\n      }\r\n      default: break;\r\n    }\r\n    return internal;\r\n  }\r\n\r\n  horizonLine(sx, sy, ex, ey, row, col, pos) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    const external = this.handleExternal(sx, sy, ex, ey, row, col, pos);\r\n    const internal = this.handleInternal(sx, sy, ex, ey, row, col, pos);\r\n    if (!SheetUtils.isEmptyObject(internal)) {\r\n      draw.horizonLine([internal.sx, internal.sy], [internal.ex, internal.ey]);\r\n    }\r\n    if (!SheetUtils.isEmptyObject(external)) {\r\n      draw.horizonLine([external.sx, external.sy], [external.ex, external.ey]);\r\n    }\r\n  }\r\n\r\n  verticalLine(sx, sy, ex, ey, row, col, pos) {\r\n    const { draw } = this;\r\n    const {\r\n      widthType, color,\r\n    } = this;\r\n    draw.setLineColor(color);\r\n    draw.setLineWidthType(widthType);\r\n    draw.setLineDash([]);\r\n    const external = this.handleExternal(sx, sy, ex, ey, row, col, pos);\r\n    const internal = this.handleInternal(sx, sy, ex, ey, row, col, pos);\r\n    if (!SheetUtils.isEmptyObject(internal)) {\r\n      draw.verticalLine([internal.sx, internal.sy], [internal.ex, internal.ey]);\r\n    }\r\n    if (!SheetUtils.isEmptyObject(external)) {\r\n      draw.verticalLine([external.sx, external.sy], [external.ex, external.ey]);\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  tiltingLine(sx, sy, ex, ey, row, col, pos) {\r\n    // TODO ..\r\n    // ...\r\n  }\r\n\r\n}\r\nDoubleLine.spacing = XDraw.dpr() >= 2 ? 3 : 2;\r\n\r\nclass Line {\r\n\r\n  constructor(draw, attr = {}) {\r\n    this.widthType = XDraw.LINE_WIDTH_TYPE.low;\r\n    this.type = LINE_TYPE.SOLID_LINE;\r\n    this.solidLine = new SolidLine(draw, SheetUtils.copy({}, attr));\r\n    this.dottedLine = new DottedLine(draw, SheetUtils.copy({\r\n      dash: [5],\r\n    }, attr));\r\n    this.pointLine = new DottedLine(draw, SheetUtils.copy({\r\n      dash: [2, 2],\r\n    }, attr));\r\n    this.doubleLine = new DoubleLine(draw, SheetUtils.copy({}, attr));\r\n  }\r\n\r\n  setWidthType(widthType) {\r\n    if (widthType) {\r\n      if (this.type === LINE_TYPE.SOLID_LINE) {\r\n        this.solidLine.setWidthType(widthType);\r\n      }\r\n    }\r\n  }\r\n\r\n  setColor(color) {\r\n    if (color) {\r\n      this.solidLine.setColor(color);\r\n      this.dottedLine.setColor(color);\r\n      this.pointLine.setColor(color);\r\n      this.doubleLine.setColor(color);\r\n    }\r\n  }\r\n\r\n  setType(type) {\r\n    this.type = type;\r\n  }\r\n\r\n  horizonLine(sx, sy, ex, ey, row, col, pos) {\r\n    const {\r\n      type,\r\n      solidLine,\r\n      dottedLine,\r\n      pointLine,\r\n      doubleLine,\r\n    } = this;\r\n    switch (type) {\r\n      case LINE_TYPE.SOLID_LINE:\r\n        solidLine.horizonLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOTTED_LINE:\r\n        dottedLine.horizonLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.POINT_LINE:\r\n        pointLine.horizonLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOUBLE_LINE:\r\n        doubleLine.horizonLine(sx, sy, ex, ey, row, col, pos);\r\n        break;\r\n    }\r\n  }\r\n\r\n  verticalLine(sx, sy, ex, ey, row, col, pos) {\r\n    const {\r\n      type,\r\n      solidLine,\r\n      dottedLine,\r\n      pointLine,\r\n      doubleLine,\r\n    } = this;\r\n    switch (type) {\r\n      case LINE_TYPE.SOLID_LINE:\r\n        solidLine.verticalLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOTTED_LINE:\r\n        dottedLine.verticalLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.POINT_LINE:\r\n        pointLine.verticalLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOUBLE_LINE:\r\n        doubleLine.verticalLine(sx, sy, ex, ey, row, col, pos);\r\n        break;\r\n    }\r\n  }\r\n\r\n  tiltingLine(sx, sy, ex, ey, row, col, pos) {\r\n    const {\r\n      type,\r\n      solidLine,\r\n      dottedLine,\r\n      pointLine,\r\n      doubleLine,\r\n    } = this;\r\n    switch (type) {\r\n      case LINE_TYPE.SOLID_LINE:\r\n        solidLine.tiltingLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOTTED_LINE:\r\n        dottedLine.tiltingLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.POINT_LINE:\r\n        pointLine.tiltingLine(sx, sy, ex, ey);\r\n        break;\r\n      case LINE_TYPE.DOUBLE_LINE:\r\n        doubleLine.tiltingLine(sx, sy, ex, ey, row, col, pos);\r\n        break;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Line, LINE_TYPE, SolidLine,\r\n};\r\n","import { LINE_TYPE } from '../../../draw/Line';\r\nimport { SheetUtils } from '../../../utils/SheetUtils';\r\nimport { XDraw } from '../../../draw/XDraw';\r\n\r\nlet zIndexID = 0;\r\n\r\n/**\r\n * Border\r\n * @author jerry\r\n */\r\nclass Border {\r\n\r\n  static getZIndex() {\r\n    zIndexID += 1;\r\n    return zIndexID;\r\n  }\r\n\r\n  /**\r\n   * Border\r\n   * @param widthType\r\n   * @param width\r\n   * @param color\r\n   * @param zIndex\r\n   * @param display\r\n   * @param type\r\n   */\r\n  constructor({\r\n    widthType = XDraw.LINE_WIDTH_TYPE.low,\r\n    width = -1,\r\n    color = 'rgb(0,0,0)',\r\n    zIndex = 0,\r\n    display = false,\r\n    type = LINE_TYPE.SOLID_LINE,\r\n  }) {\r\n    this.zIndex = zIndex;\r\n    this.display = display;\r\n    this.color = color;\r\n    this.type = type;\r\n    if (width === 1) {\r\n      this.widthType = XDraw.LINE_WIDTH_TYPE.low;\r\n    } else if (width === 2) {\r\n      this.widthType = XDraw.LINE_WIDTH_TYPE.medium;\r\n    } else if (width === 3) {\r\n      this.widthType = XDraw.LINE_WIDTH_TYPE.high;\r\n    } else {\r\n      this.widthType = widthType;\r\n    }\r\n    if (zIndex > zIndexID) {\r\n      zIndexID = zIndex;\r\n    }\r\n  }\r\n\r\n  setWidthType(value) {\r\n    this.zIndex = Border.getZIndex();\r\n    this.widthType = value;\r\n  }\r\n\r\n  setColor(value) {\r\n    this.zIndex = Border.getZIndex();\r\n    this.color = value;\r\n  }\r\n\r\n  setDisplay(value) {\r\n    this.zIndex = Border.getZIndex();\r\n    this.display = value;\r\n  }\r\n\r\n  setType(value) {\r\n    this.zIndex = Border.getZIndex();\r\n    this.type = value;\r\n  }\r\n\r\n  setZIndex(value) {\r\n    this.zIndex = value;\r\n  }\r\n\r\n  priority(border) {\r\n    if (SheetUtils.isUnDef(border)) {\r\n      return -2;\r\n    }\r\n    const origin = this.zIndex;\r\n    const target = border.zIndex;\r\n    if (origin > target) {\r\n      return 1;\r\n    }\r\n    if (target > origin) {\r\n      return -1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  clone() {\r\n    return new Border({\r\n      widthType: this.widthType,\r\n      color: this.color,\r\n      zIndex: this.zIndex,\r\n      type: this.type,\r\n      display: this.display,\r\n    });\r\n  }\r\n\r\n  equal(target) {\r\n    const widthType = this.widthType === target.widthType;\r\n    const color = this.color === target.color;\r\n    const type = this.type === target.type;\r\n    return color && widthType && type;\r\n  }\r\n\r\n}\r\n\r\nexport { Border };\r\n","import { Border } from './Border';\r\nimport { LINE_TYPE } from '../../../draw/Line';\r\n\r\n/**\r\n * CellBorder\r\n * @author jerry\r\n */\r\nclass CellBorder {\r\n\r\n  /**\r\n   * CellBorder\r\n   * @param time\r\n   * @param left\r\n   * @param top\r\n   * @param right\r\n   * @param bottom\r\n   */\r\n  constructor({\r\n    left = {},\r\n    bottom = {},\r\n    top = {},\r\n    right = {},\r\n  }) {\r\n    this.left = new Border(left);\r\n    this.bottom = new Border(bottom);\r\n    this.top = new Border(top);\r\n    this.right = new Border(right);\r\n  }\r\n\r\n  hasDouble() {\r\n    const { top, left, right, bottom } = this;\r\n    if (top.type === LINE_TYPE.DOUBLE_LINE) {\r\n      return true;\r\n    }\r\n    if (left.type === LINE_TYPE.DOUBLE_LINE) {\r\n      return true;\r\n    }\r\n    if (right.type === LINE_TYPE.DOUBLE_LINE) {\r\n      return true;\r\n    }\r\n    return bottom.type === LINE_TYPE.DOUBLE_LINE;\r\n  }\r\n\r\n  isDisplay() {\r\n    return this.left.display || this.top.display\r\n      || this.bottom.display || this.right.display;\r\n  }\r\n\r\n  setAllDisplay(display) {\r\n    this.setBDisplay(display);\r\n    this.setLDisplay(display);\r\n    this.setTDisplay(display);\r\n    this.setRDisplay(display);\r\n  }\r\n\r\n  setLDisplay(display) {\r\n    this.left.setDisplay(display);\r\n  }\r\n\r\n  setTDisplay(display) {\r\n    this.top.setDisplay(display);\r\n  }\r\n\r\n  setRDisplay(display) {\r\n    this.right.setDisplay(display);\r\n  }\r\n\r\n  setBDisplay(display) {\r\n    this.bottom.setDisplay(display);\r\n  }\r\n\r\n  setAllColor(color) {\r\n    this.setBColor(color);\r\n    this.setLColor(color);\r\n    this.setTColor(color);\r\n    this.setRColor(color);\r\n  }\r\n\r\n  setLColor(color) {\r\n    this.left.setColor(color);\r\n  }\r\n\r\n  setTColor(color) {\r\n    this.top.setColor(color);\r\n  }\r\n\r\n  setRColor(color) {\r\n    this.right.setColor(color);\r\n  }\r\n\r\n  setBColor(color) {\r\n    this.bottom.setColor(color);\r\n  }\r\n\r\n  setAllWidthType(widthType) {\r\n    this.setBWidthType(widthType);\r\n    this.setLWidthType(widthType);\r\n    this.setTWidthType(widthType);\r\n    this.setRWidthType(widthType);\r\n  }\r\n\r\n  setLWidthType(widthType) {\r\n    this.left.setWidthType(widthType);\r\n  }\r\n\r\n  setTWidthType(widthType) {\r\n    this.top.setWidthType(widthType);\r\n  }\r\n\r\n  setRWidthType(widthType) {\r\n    this.right.setWidthType(widthType);\r\n  }\r\n\r\n  setBWidthType(widthType) {\r\n    this.bottom.setWidthType(widthType);\r\n  }\r\n\r\n  setAllType(type) {\r\n    this.setBType(type);\r\n    this.setLType(type);\r\n    this.setTType(type);\r\n    this.setRType(type);\r\n  }\r\n\r\n  setLType(type) {\r\n    this.left.setType(type);\r\n  }\r\n\r\n  setTType(type) {\r\n    this.top.setType(type);\r\n  }\r\n\r\n  setRType(type) {\r\n    this.right.setType(type);\r\n  }\r\n\r\n  setBType(type) {\r\n    this.bottom.setType(type);\r\n  }\r\n\r\n  updateMaxIndex() {\r\n    const zIndex = Border.getZIndex();\r\n    this.left.setZIndex(zIndex);\r\n    this.bottom.setZIndex(zIndex);\r\n    this.top.setZIndex(zIndex);\r\n    this.right.setZIndex(zIndex);\r\n  }\r\n\r\n  clone() {\r\n    const { left, top, right, bottom } = this;\r\n    return new CellBorder({\r\n      left: left.clone(),\r\n      top: top.clone(),\r\n      right: right.clone(),\r\n      bottom: bottom.clone(),\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport { CellBorder };\r\n","class Rect {\r\n\r\n  /**\r\n   * Rect\r\n   * @param x\r\n   * @param y\r\n   * @param width\r\n   * @param height\r\n   */\r\n  constructor({\r\n    x, y, width, height,\r\n  }) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  /**\r\n   * 判断两个矩形是否不发生重合\r\n   * @param {Rect} other 区域\r\n   * @returns {boolean}\r\n   */\r\n  disjoint(other) {\r\n    return this.x > other.x + other.width\r\n      || this.y > this.y + other.height\r\n      || other.x > this.x + this.width\r\n      || other.y > this.y + this.height;\r\n  }\r\n\r\n  /**\r\n   * 扩展尺寸\r\n   * @param size\r\n   * @returns {Rect}\r\n   */\r\n  expandSize(size) {\r\n    this.width += size;\r\n    this.height += size;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 是否包含点\r\n   * @param x\r\n   * @param y\r\n   * @returns {boolean}\r\n   */\r\n  includePoint(x, y) {\r\n    return x >= this.x && x <= this.x + this.width\r\n      && y >= this.y && y <= this.y + this.height;\r\n  }\r\n\r\n  /**\r\n   * 是否包含矩形\r\n   * @param rect\r\n   * @returns {boolean|boolean}\r\n   */\r\n  includeRect(rect) {\r\n    const { x, y, width, height } = rect;\r\n    return this.x <= x && this.x + this.width >= x + width\r\n      && this.y <= y && this.y + this.height >= y + height;\r\n  }\r\n\r\n  /**\r\n   * 计算当前矩形在指定矩形内部的位置\r\n   * @param rect\r\n   * @returns {Rect}\r\n   */\r\n  inRectPosition(rect) {\r\n    return new Rect({\r\n      x: this.x - rect.x,\r\n      y: this.y - rect.y,\r\n      width: this.width,\r\n      height: this.height,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 复制\r\n   * @returns {Rect}\r\n   */\r\n  clone() {\r\n    const { x, y, width, height } = this;\r\n    return new Rect({ x, y, width, height });\r\n  }\r\n\r\n}\r\n\r\nexport { Rect };\r\n","\r\n/**\r\n * XIconOffset\r\n */\r\nclass XIconOffset {\r\n\r\n  /**\r\n   * XIconOffset\r\n   * @param x\r\n   * @param y\r\n   */\r\n  constructor({ x = 0, y = 0 } = {}) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XIconOffset,\r\n};\r\n","class Crop {\r\n\r\n  constructor({\r\n    rect, draw, offset = 0,\r\n  }) {\r\n    this.rect = rect;\r\n    this.draw = draw;\r\n    this.offset = offset;\r\n  }\r\n\r\n  open() {\r\n    const {\r\n      rect, draw, offset,\r\n    } = this;\r\n    const {\r\n      x, y, width, height,\r\n    } = rect;\r\n    draw.save()\r\n      .rect(x, y, width + offset, height + offset)\r\n      .clip()\r\n      .beginPath();\r\n    return this;\r\n  }\r\n\r\n  close() {\r\n    const { draw } = this;\r\n    draw.restore();\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\nexport { Crop };\r\n","/* global Image console */\r\nimport { SheetUtils } from '../../../utils/SheetUtils';\r\nimport { XDraw } from '../../../draw/XDraw';\r\nimport { Rect } from '../../../draw/Rect';\r\nimport { XIconOffset } from './XIconOffset';\r\nimport { Crop } from '../../../draw/Crop';\r\n\r\n/**\r\n * XIcon\r\n * @author jerry\r\n * @date 2020/10/20\r\n */\r\nclass XIcon {\r\n\r\n  /**\r\n   * 多图标初始化\r\n   * @param icons\r\n   * @returns {[]}\r\n   */\r\n  static newInstances(icons = []) {\r\n    const instances = [];\r\n    for (let i = 0; i < icons.length; i += 1) {\r\n      const icon = icons[i];\r\n      instances.push(new XIcon(icon));\r\n    }\r\n    return instances;\r\n  }\r\n\r\n  /**\r\n   * XIcon\r\n   * @param vertical\r\n   * @param horizontal\r\n   * @param type\r\n   * @param image\r\n   * @param focus\r\n   * @param height\r\n   * @param width\r\n   * @param color\r\n   * @param offset\r\n   * @param onDraw\r\n   * @param onLeave\r\n   * @param onMove\r\n   * @param onDown\r\n   * @param onEnter\r\n   */\r\n  constructor({\r\n    vertical = XIcon.ICON_VERTICAL.CENTER,\r\n    horizontal = XIcon.ICON_HORIZONTAL.RIGHT,\r\n    type = XIcon.ICON_TYPE.image,\r\n    image = SheetUtils.Nul,\r\n    iconFocus = null,\r\n    height = 16,\r\n    width = 16,\r\n    color = 'rgb(255,255,255)',\r\n    offset = { x: 0, y: 0 },\r\n    onDraw = () => {},\r\n    onLeave = () => {},\r\n    onMove = () => {},\r\n    onDown = () => {},\r\n    onEnter = () => {},\r\n  }) {\r\n    this.vertical = vertical;\r\n    this.horizontal = horizontal;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.type = type;\r\n    this.image = image;\r\n    this.color = color;\r\n    this.iconFocus = iconFocus;\r\n    this.offset = new XIconOffset(offset);\r\n    this.onLeave = onLeave;\r\n    this.onMove = onMove;\r\n    this.onDraw = onDraw;\r\n    this.onDown = onDown;\r\n    this.onEnter = onEnter;\r\n    this.rect = null;\r\n  }\r\n\r\n  /**\r\n   * 计算绘制坐标\r\n   * @param rect\r\n   * @returns {{x: number, y: number}}\r\n   */\r\n  position(rect) {\r\n    // 图标信息\r\n    const iconHorizontal = this.horizontal;\r\n    const iconVertical = this.vertical;\r\n    const iconOffsetX = XDraw.stylePx(this.offset.x);\r\n    const iconOffsetY = XDraw.stylePx(this.offset.y);\r\n    const iconWidth = XDraw.stylePx(this.width);\r\n    const iconHeight = XDraw.stylePx(this.height);\r\n    // 矩形位置\r\n    const rectX = rect.x;\r\n    const rectY = rect.y;\r\n    const rectWidth = rect.width;\r\n    const rectHeight = rect.height;\r\n    // 计算位置\r\n    let px = 0;\r\n    let py = 0;\r\n    switch (iconHorizontal) {\r\n      case XIcon.ICON_HORIZONTAL.CENTER:\r\n        px = (rectX + rectWidth / 2) - (iconWidth / 2);\r\n        break;\r\n      case XIcon.ICON_HORIZONTAL.LEFT:\r\n        px = rectX;\r\n        break;\r\n      case XIcon.ICON_HORIZONTAL.RIGHT:\r\n        px = rectX + rectWidth - iconWidth;\r\n        break;\r\n    }\r\n    switch (iconVertical) {\r\n      case XIcon.ICON_VERTICAL.CENTER:\r\n        py = (rectY + rectHeight / 2) - (iconHeight / 2);\r\n        break;\r\n      case XIcon.ICON_VERTICAL.TOP:\r\n        py = rectY;\r\n        break;\r\n      case XIcon.ICON_VERTICAL.BOTTOM:\r\n        py = rectY + rectHeight - iconHeight;\r\n        break;\r\n    }\r\n    px += iconOffsetX;\r\n    py += iconOffsetY;\r\n    return new Rect({\r\n      x: px, y: py, width: iconWidth, height: iconHeight,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 加载图片信息\r\n   * @param async\r\n   * @param sync\r\n   */\r\n  loadImage({\r\n    load, sync,\r\n  }) {\r\n    const { image, type } = this;\r\n    switch (type) {\r\n      case XIcon.ICON_TYPE.image:\r\n        if (image instanceof Image) {\r\n          sync(image);\r\n        } else {\r\n          const loadImg = new Image();\r\n          loadImg.src = image;\r\n          if (loadImg.complete) {\r\n            this.image = loadImg;\r\n            sync(this.image);\r\n          } else {\r\n            loadImg.onload = () => {\r\n              this.image = loadImg;\r\n              load(loadImg);\r\n            };\r\n            loadImg.onerror = () => {\r\n              // eslint-disable-next-line no-console\r\n              console.error(`图片加载失败${image}`);\r\n            };\r\n          }\r\n        }\r\n        break;\r\n      case XIcon.ICON_TYPE.draw:\r\n        sync();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绘制小图标\r\n   * @param rect\r\n   * @param draw\r\n   */\r\n  drawIcon({\r\n    rect, draw,\r\n  }) {\r\n    const { type } = this;\r\n    this.rect = rect;\r\n    switch (type) {\r\n      case XIcon.ICON_TYPE.image:\r\n        this.drawImage({\r\n          rect, draw,\r\n        });\r\n        break;\r\n      case XIcon.ICON_TYPE.draw:\r\n        this.drawCustom({\r\n          rect, draw,\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 自定义绘制\r\n   * @param rect\r\n   * @param icon\r\n   * @param draw\r\n   */\r\n  drawCustom({\r\n    rect, draw,\r\n  }) {\r\n    this.onDraw({\r\n      rect, draw,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 绘制图片\r\n   * @param rect\r\n   * @param icon\r\n   * @param draw\r\n   */\r\n  drawImage({\r\n    rect, draw,\r\n  }) {\r\n    const image = this.image;\r\n    const color = this.color;\r\n    const positionRect = this.position(rect);\r\n    const {\r\n      x, y, width, height,\r\n    } = positionRect;\r\n    const include = rect.includeRect(positionRect);\r\n    const crop = new Crop({\r\n      rect, draw,\r\n    });\r\n    if (include === false) {\r\n      crop.open();\r\n    }\r\n    if (color) {\r\n      draw.attr({ fillStyle: color });\r\n      draw.fillRect(x, y, width, height);\r\n    }\r\n    draw.drawImage(image, 0, 0, image.width, image.height, x, y, width, height);\r\n    if (include === false) {\r\n      crop.close();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 事件处理\r\n   * @param type\r\n   * @param x\r\n   * @param y\r\n   * @param native\r\n   */\r\n  eventHandle({\r\n    type, x, y, native,\r\n  }) {\r\n    const { rect, iconFocus } = this;\r\n    if (rect) {\r\n      const position = this.position(rect);\r\n      const location = position.inRectPosition(rect);\r\n      const { activate } = iconFocus;\r\n      switch (type) {\r\n        case XIcon.ICON_EVENT_TYPE.MOUSE_DOWN:\r\n          if (location.includePoint(x, y)) {\r\n            iconFocus.setActivate(this);\r\n            this.onDown({\r\n              native, position,\r\n            });\r\n          }\r\n          break;\r\n        case XIcon.ICON_EVENT_TYPE.MOUSE_MOVE:\r\n          if (location.includePoint(x, y)) {\r\n            if (activate !== this) {\r\n              this.onEnter({\r\n                native, position,\r\n              });\r\n            }\r\n            iconFocus.setActivate(this);\r\n            this.onMove({\r\n              native, position,\r\n            });\r\n          } else if (activate) {\r\n            iconFocus.setActivate(null);\r\n            this.onLeave({\r\n              native, position,\r\n            });\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 绘制回调\r\n   * @param callback\r\n   */\r\n  setOnDraw(callback) {\r\n    this.onDraw = callback;\r\n  }\r\n\r\n  /**\r\n   * 按下回调\r\n   * @param callback\r\n   */\r\n  setOnDown(callback) {\r\n    this.onDown = callback;\r\n  }\r\n\r\n  /**\r\n   * 移动回调\r\n   * @param callback\r\n   */\r\n  setOnMove(callback) {\r\n    this.onMove = callback;\r\n  }\r\n\r\n  /**\r\n   * 进入回调\r\n   * @param callback\r\n   */\r\n  setOnEnter(callback) {\r\n    this.onEnter = callback;\r\n  }\r\n\r\n  /**\r\n   * 离开回调\r\n   * @param callback\r\n   */\r\n  setOnLeave(callback) {\r\n    this.onLeave = callback;\r\n  }\r\n\r\n  /**\r\n   * 设置焦点元素\r\n   * @param iconFocus\r\n   */\r\n  setFocus(iconFocus) {\r\n    this.iconFocus = iconFocus;\r\n  }\r\n\r\n}\r\nXIcon.ICON_HORIZONTAL = {\r\n  LEFT: 0,\r\n  RIGHT: 1,\r\n  CENTER: 2,\r\n};\r\nXIcon.ICON_VERTICAL = {\r\n  TOP: 3,\r\n  BOTTOM: 4,\r\n  CENTER: 5,\r\n};\r\nXIcon.ICON_TYPE = {\r\n  image: 1,\r\n  custom: 2,\r\n};\r\nXIcon.ICON_EVENT_TYPE = {\r\n  MOUSE_DOWN: 1,\r\n  MOUSE_MOVE: 2,\r\n};\r\n\r\nexport { XIcon };\r\n","class DateUtils {\r\n\r\n  static dateFormat(fmt, date) {\r\n    if (!(date instanceof Date)) {\r\n      return date;\r\n    }\r\n    const o = {\r\n      'M+': date.getMonth() + 1,\r\n      'd+': date.getDate(),\r\n      'h+': date.getHours(),\r\n      'm+': date.getMinutes(),\r\n      's+': date.getSeconds(),\r\n      'q+': Math.floor((date.getMonth() + 3) / 3),\r\n      S: date.getMilliseconds(),\r\n    };\r\n    const reYear = /(y+)/;\r\n    const resultYear = reYear.exec(fmt);\r\n    if (resultYear) {\r\n      const yearFormatPart = resultYear[0];\r\n      const yearVal = (date.getFullYear().toString()).substr(4 - yearFormatPart.length);\r\n      fmt = fmt.replace(yearFormatPart, yearVal);\r\n    }\r\n    // eslint-disable-next-line guard-for-in,no-restricted-syntax\r\n    for (const k in o) {\r\n      const re = new RegExp(`(${k})`);\r\n      const res = re.exec(fmt);\r\n      if (res) {\r\n        const Val = o[k].toString();\r\n        const formatPart = res[0];\r\n        const replaceVal = (formatPart.length === 1) ? (Val) : ((`00${Val}`).substr(Val.length));\r\n        fmt = fmt.replace(formatPart, replaceVal);\r\n      }\r\n    }\r\n    return fmt;\r\n  }\r\n\r\n  static parse(text) {\r\n    let result = text;\r\n    if (result instanceof Date) {\r\n      return result;\r\n    }\r\n\r\n    result = DateUtils.parserToDate(text, 'yyyy/MM/dd');\r\n    if (result) {\r\n      return result;\r\n    }\r\n    result = DateUtils.parserToDate(text, 'MM/dd');\r\n    if (result) {\r\n      return result;\r\n    }\r\n    result = DateUtils.parserToDate(text, 'yyyy/MM/dd hh:mm:ss');\r\n    if (result) {\r\n      return result;\r\n    }\r\n\r\n    result = DateUtils.parserToDate(text, 'yyyy-MM-dd');\r\n    if (result) {\r\n      return result;\r\n    }\r\n    result = DateUtils.parserToDate(text, 'MM-dd');\r\n    if (result) {\r\n      return result;\r\n    }\r\n    result = DateUtils.parserToDate(text, 'yyyy-MM-dd hh:mm:ss');\r\n    if (result) {\r\n      return result;\r\n    }\r\n\r\n    result = DateUtils.parserToDate(text, 'hh:mm:ss');\r\n    if (result) {\r\n      return result;\r\n    }\r\n\r\n    result = DateUtils.parserToDate(text, 'yyyy年MM月');\r\n    if (result) {\r\n      return result;\r\n    }\r\n    result = DateUtils.parserToDate(text, 'MM月dd日');\r\n    if (result) {\r\n      return result;\r\n    }\r\n    result = DateUtils.parserToDate(text, 'yyyy年MM月dd日 hh:mm:ss');\r\n    if (result) {\r\n      return result;\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  static parserToDate(dateText, format) {\r\n    if (!dateText) {\r\n      return null;\r\n    }\r\n    const defaultVal = new Date('1970/01/01 00:00:00');\r\n    const o = [{\r\n      reg: 'y+',\r\n    }, {\r\n      reg: 'M+',\r\n    }, {\r\n      reg: 'd+',\r\n    }, {\r\n      reg: 'h+',\r\n    }, {\r\n      reg: 'm+',\r\n    }, {\r\n      reg: 's+',\r\n    }, {\r\n      reg: 'S',\r\n    }];\r\n    let year = defaultVal.getFullYear();\r\n    let month = defaultVal.getMonth() + 1;\r\n    let day = defaultVal.getDate();\r\n    let hours = defaultVal.getHours();\r\n    let minutes = defaultVal.getMinutes();\r\n    let seconds = defaultVal.getSeconds();\r\n    let milliseconds = defaultVal.getMilliseconds();\r\n    let index = 1;\r\n    for (let j = 0; j < format.length; j += 1) {\r\n      const oneChar = format[j];\r\n      for (let i = 0; i < o.length; i += 1) {\r\n        const onePart = o[i];\r\n        const onePartReg = onePart.reg;\r\n        if (onePartReg[0] === oneChar) {\r\n          if (!onePart.index) {\r\n            onePart.index = index;\r\n            index += 1;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    for (let i = 0; i < o.length; i += 1) {\r\n      const onePart = o[i];\r\n      const onePartReg = onePart.reg;\r\n      const re = new RegExp(`(${onePartReg})`);\r\n      const res = re.exec(format);\r\n      if (res) {\r\n        const formatPart = res[0];\r\n        const replaceVal = `([0-9]{1,${formatPart.length}})`;\r\n        // eslint-disable-next-line no-param-reassign\r\n        format = format.replace(formatPart, replaceVal);\r\n      }\r\n    }\r\n    const dataInfo = {};\r\n    const re = new RegExp(format);\r\n    const res = re.exec(dateText);\r\n    if (res) {\r\n      for (let i = 1; i < res.length; i += 1) {\r\n        dataInfo[i] = res[i];\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n    if (o[0].index) {\r\n      const { index } = o[0];\r\n      year = dataInfo[index];\r\n    }\r\n    if (o[1].index) {\r\n      const { index } = o[1];\r\n      month = dataInfo[index];\r\n    }\r\n    if (o[2].index) {\r\n      const { index } = o[2];\r\n      day = dataInfo[index];\r\n    }\r\n    if (o[3].index) {\r\n      const { index } = o[3];\r\n      hours = dataInfo[index];\r\n    }\r\n    if (o[4].index) {\r\n      const { index } = o[4];\r\n      minutes = dataInfo[index];\r\n    }\r\n    if (o[5].index) {\r\n      const { index } = o[5];\r\n      seconds = dataInfo[index];\r\n    }\r\n    if (o[6].index) {\r\n      const { index } = o[6];\r\n      milliseconds = dataInfo[index];\r\n    }\r\n    return new Date(year, month - 1, day, hours, minutes, seconds, milliseconds);\r\n  }\r\n\r\n}\r\n\r\nexport { DateUtils };\r\n","import { SheetUtils } from '../../utils/SheetUtils';\nimport { DateUtils } from '../../utils/DateUtils';\n\nclass Format {\n\n  default(value) {\n    return this.text(value);\n  }\n\n  text(value) {\n    return value ? `${value}` : '';\n  }\n\n  eNotation(value) {\n    if (SheetUtils.isNumber(value)) {\n      const number = SheetUtils.parseFloat(value);\n      return number.toExponential(2);\n    }\n    return this.text(value);\n  }\n\n  decimal(value) {\n    if (SheetUtils.isNumber(value)) {\n      const indexOf = value.toString().indexOf('.');\n      if (indexOf !== -1) {\n        return value.toString().substring(0, indexOf + 3);\n      }\n      return `${value}.00`;\n    }\n    return this.text(value);\n  }\n\n  number(value) {\n    return this.text(value);\n  }\n\n  percentage(value) {\n    if (SheetUtils.isNumber(value)) {\n      return `${value}%`;\n    }\n    return this.text(value);\n  }\n\n  fraction(value) {\n    if (SheetUtils.isFraction(value)) {\n      const left = value.split('/')[0];\n      const right = value.split('/')[1];\n      return this.text(SheetUtils.parseInt(left) / SheetUtils.parseInt(right));\n    }\n    return this.text(value);\n  }\n\n  rmb(value) {\n    if (SheetUtils.isNumber(value)) {\n      return `￥${value}`;\n    }\n    return this.text(value);\n  }\n\n  hk(value) {\n    if (SheetUtils.isNumber(value)) {\n      return `HK${value}`;\n    }\n    return this.text(value);\n  }\n\n  time(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('hh:mm:ss', result);\n    }\n    return this.text(value);\n  }\n\n  date1(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('yyyy/MM/dd', result);\n    }\n    return this.text(value);\n  }\n\n  date2(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('MM月dd日', result);\n    }\n    return this.text(value);\n  }\n\n  date3(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('yyyy年MM月', result);\n    }\n    return this.text(value);\n  }\n\n  date4(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('yyyy年MM月dd日', result);\n    }\n    return this.text(value);\n  }\n\n  date5(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('yyyy/MM/dd hh:mm:ss', result);\n    }\n    return this.text(value);\n  }\n\n  dollar(value) {\n    if (SheetUtils.isNumber(value)) {\n      return `$${value}`;\n    }\n    return this.text(value);\n  }\n\n}\n\nconst format = new Format();\n\nexport default (type, value) => format[type](value);\n","import { SheetUtils } from '../../../utils/SheetUtils';\r\nimport { ColorArray } from '../../../module/colorpicker/colorarray/ColorArray';\r\n\r\nclass RichFont {\r\n\r\n  constructor({\r\n    text = '',\r\n    color = ColorArray.BLACK,\r\n    name = 'Arial',\r\n    size = 14,\r\n    bold = false,\r\n    italic = false,\r\n    strikethrough = false,\r\n    underline = false,\r\n    scaleAdapter,\r\n  } = {}) {\r\n    this.color = color;\r\n    this.text = text;\r\n    this.name = name;\r\n    this.size = size;\r\n    this.italic = italic;\r\n    this.bold = bold;\r\n    this.strikethrough = strikethrough;\r\n    this.underline = underline;\r\n    this.scaleAdapter = scaleAdapter;\r\n  }\r\n\r\n  clone() {\r\n    const { text, color, name, size } = this;\r\n    const { italic, bold, underline } = this;\r\n    const { strikethrough, scaleAdapter } = this;\r\n    return new RichFont({\r\n      text, color, name, size, italic, bold, underline, strikethrough, scaleAdapter,\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.color = ColorArray.BLACK;\r\n    this.name = 'Arial';\r\n    this.size = 14;\r\n    this.bold = false;\r\n    this.italic = false;\r\n    this.strikethrough = false;\r\n    this.underline = false;\r\n  }\r\n\r\n  plain(option = v => v) {\r\n    return option(this.clone());\r\n  }\r\n\r\n  like(other) {\r\n    let ignore = ['scaleAdapter'];\r\n    let keys1 = Object.keys(this);\r\n    let keys2 = Object.keys(other);\r\n    for (let key of keys2) {\r\n      if (ignore.includes(key)) {\r\n        continue;\r\n      }\r\n      if (!keys1.includes(key)) {\r\n        return false;\r\n      }\r\n    }\r\n    for (let key of keys2) {\r\n      if (ignore.includes(key)) {\r\n        continue;\r\n      }\r\n      let src = this[key];\r\n      let val = other[key];\r\n      switch (key) {\r\n        case 'color': {\r\n          src = SheetUtils.clearBlank(src);\r\n          val = SheetUtils.clearBlank(val);\r\n          break;\r\n        }\r\n      }\r\n      if (src !== val) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  equals(other) {\r\n    let ignore = ['scaleAdapter'];\r\n    let keys1 = Object.keys(this);\r\n    let keys2 = Object.keys(other);\r\n    for (let key of keys1) {\r\n      if (ignore.includes(key)) {\r\n        continue;\r\n      }\r\n      if (!keys2.includes(key)) {\r\n        return false;\r\n      }\r\n    }\r\n    for (let key of keys1) {\r\n      if (ignore.includes(key)) {\r\n        continue;\r\n      }\r\n      let src = this[key];\r\n      let val = other[key];\r\n      switch (key) {\r\n        case 'color': {\r\n          src = SheetUtils.clearBlank(src);\r\n          val = SheetUtils.clearBlank(val);\r\n          break;\r\n        }\r\n      }\r\n      if (src !== val) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RichFont,\r\n};\r\n","import { RichFont } from './RichFont';\r\nimport { SheetUtils } from '../../../utils/SheetUtils';\r\n\r\nclass RichFonts {\r\n\r\n  constructor({\r\n    rich = [],\r\n  } = {}) {\r\n    this.rich = rich.map(font => new RichFont(font));\r\n  }\r\n\r\n  setRich(rich = []) {\r\n    this.rich = rich;\r\n  }\r\n\r\n  each(cb = () => {}) {\r\n    this.rich.forEach((font) => {\r\n      cb(font);\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.each((i) => {\r\n      i.reset();\r\n    });\r\n  }\r\n\r\n  getRich() {\r\n    return this.rich;\r\n  }\r\n\r\n  clone() {\r\n    const rich = [];\r\n    this.rich.forEach((font) => {\r\n      rich.push(font.clone());\r\n    });\r\n    return new RichFonts({\r\n      rich,\r\n    });\r\n  }\r\n\r\n  hasLength() {\r\n    return this.rich.length > 0;\r\n  }\r\n\r\n  plain(option) {\r\n    const result = [];\r\n    this.rich.forEach((font) => {\r\n      result.push(font.plain(option));\r\n    });\r\n    return result;\r\n  }\r\n\r\n  like(other) {\r\n    if (SheetUtils.isUnDef(other)) {\r\n      return false;\r\n    }\r\n    if (other.rich.length !== this.rich.length) {\r\n      return false;\r\n    }\r\n    for (let i = 0; i < this.rich.length; i++) {\r\n      let item1 = this.rich[i];\r\n      let item2 = other.rich[i];\r\n      if (!item1.like(item2)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  equals(other) {\r\n    if (SheetUtils.isUnDef(other)) {\r\n      return false;\r\n    }\r\n    if (other.rich.length !== this.rich.length) {\r\n      return false;\r\n    }\r\n    for (let i = 0; i < this.rich.length; i++) {\r\n      let item1 = this.rich[i];\r\n      let item2 = other.rich[i];\r\n      if (!item1.equals(item2)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  RichFonts,\r\n};\r\n","/**\r\n * 运行函数注册\r\n * @type {{}}\r\n */\r\nclass EvalFunctions {\r\n\r\n  /**\r\n   * EvalFunctions\r\n   */\r\n  constructor() {\r\n    this.functions = {};\r\n  }\r\n\r\n  /**\r\n   * 删除函数\r\n   * @param name\r\n   */\r\n  remove(name) {\r\n    delete this.functions[name];\r\n  }\r\n\r\n  /**\r\n   * 获取函数\r\n   * @param name\r\n   * @returns {*}\r\n   */\r\n  getFunction(name) {\r\n    return this.functions[name.toLocaleString()];\r\n  }\r\n\r\n  /**\r\n   * 注册函数\r\n   * @param name\r\n   * @param func\r\n   */\r\n  register(name, func) {\r\n    this.functions[name.toLocaleString()] = func;\r\n  }\r\n}\r\n\r\n/**\r\n * 函数注册\r\n * @type {EvalFunctions}\r\n */\r\nconst Functions = new EvalFunctions();\r\n\r\n/**\r\n * 指令序列\r\n */\r\nclass Assembly {\r\n\r\n  /**\r\n   * Assembly\r\n   */\r\n  constructor() {\r\n    this.assembly = '';\r\n  }\r\n\r\n  /**\r\n   * 获取指令详情\r\n   * @returns {string}\r\n   */\r\n  getInstruct() {\r\n    let { assembly } = this;\r\n    let flag = '\\r\\n';\r\n    while (assembly.endsWith(flag)) {\r\n      let { length } = assembly;\r\n      assembly = assembly.substring(0, length - flag.length);\r\n    }\r\n    return assembly;\r\n  }\r\n\r\n  /**\r\n   * 写入操作数\r\n   * @param value\r\n   */\r\n  writeOperand(value) {\r\n    this.assembly += `OPush ${value}\\r\\n`;\r\n  }\r\n\r\n  /**\r\n   * 写入运算符\r\n   * @param op\r\n   */\r\n  writeOperator(op) {\r\n    this.assembly += `${op}\\r\\n`;\r\n  }\r\n\r\n  /**\r\n   * 写入操作数\r\n   * @param value\r\n   */\r\n  writeString(value) {\r\n    this.assembly += `SPush ${value}\\r\\n`;\r\n  }\r\n\r\n  /**\r\n   * 写入操作数\r\n   * @param value\r\n   */\r\n  writeNumber(value) {\r\n    this.assembly += `NPush ${value}\\r\\n`;\r\n  }\r\n}\r\n\r\n/**\r\n * 词法分析\r\n */\r\nclass Tokenizer {\r\n\r\n  /**\r\n   * Tokenizer\r\n   * @param syntaxCheck\r\n   */\r\n  constructor({\r\n    syntaxCheck = true,\r\n  } = {}) {\r\n    this.syntaxCheck = syntaxCheck;\r\n  }\r\n\r\n  /**\r\n   * 词法分析\r\n   * @param input\r\n   * @returns {*[]}\r\n   */\r\n  lexical(input) {\r\n    let OPERATOR = /^(\\+|-|\\*|\\/|%|>|<|,|\\^|=|&|!|:|>=|<=|<>)$/;\r\n    let NUMBERS = /[0-9.]/;\r\n    let LETTERS = /[a-z0-9_$]/i;\r\n    // 文本字符长度\r\n    let { length } = input;\r\n    // 函数调用记录\r\n    let bracketsStack = [];\r\n    // 当前的字符索引\r\n    let current = 0;\r\n    // 处理的字符数组\r\n    let tokens = [];\r\n    // 循环处理所有字符\r\n    while (current < length) {\r\n      // 当前处理的字符\r\n      let char = input[current];\r\n      // 跳过连续空格\r\n      let SPACE = /\\s/;\r\n      if (SPACE.test(char)) {\r\n        const next = input[current + 1];\r\n        if (SPACE.test(next)) {\r\n          current++;\r\n          continue;\r\n        }\r\n      }\r\n      // 记录交叉区域运算符\r\n      if (SPACE.test(char)) {\r\n        const last = input[current - 1];\r\n        const next = input[current + 1];\r\n        if (LETTERS.test(last) && LETTERS.test(next)) {\r\n          tokens.push({\r\n            type: 'operator',\r\n            value: char,\r\n          });\r\n        }\r\n        current++;\r\n        continue;\r\n      }\r\n      // 记录括号\r\n      if (char === '(') {\r\n        tokens.push({\r\n          type: 'brackets',\r\n          value: '(',\r\n        });\r\n        bracketsStack.push({\r\n          type: 'brackets',\r\n          value: '(',\r\n        });\r\n        current++;\r\n        continue;\r\n      }\r\n      if (char === ')') {\r\n        const brackets = bracketsStack.pop();\r\n        if (brackets && brackets.type === 'function') {\r\n          tokens.push({\r\n            type: 'function',\r\n            value: ')',\r\n          });\r\n        } else {\r\n          tokens.push({\r\n            type: 'brackets',\r\n            value: ')',\r\n          });\r\n        }\r\n        current++;\r\n        continue;\r\n      }\r\n      // 记录数组\r\n      if (char === '{') {\r\n        tokens.push({\r\n          type: 'array',\r\n          value: 'array',\r\n        });\r\n        tokens.push({\r\n          type: 'array',\r\n          value: '{',\r\n        });\r\n        current++;\r\n        continue;\r\n      }\r\n      if (char === '}') {\r\n        tokens.push({\r\n          type: 'array',\r\n          value: '}',\r\n        });\r\n        current++;\r\n        continue;\r\n      }\r\n      // 记录字符串\r\n      if (char === '\"') {\r\n        let result = '';\r\n        current++;\r\n        char = input[current];\r\n        while (char !== '\"') {\r\n          if (current < length) {\r\n            result += char;\r\n            current++;\r\n            char = input[current];\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n        current++;\r\n        char = input[current];\r\n        tokens.push({\r\n          type: 'string',\r\n          value: result,\r\n        });\r\n        continue;\r\n      }\r\n      if (char === '\\'') {\r\n        let result = '';\r\n        current++;\r\n        char = input[current];\r\n        while (char !== '\\'') {\r\n          if (current < length) {\r\n            result += char;\r\n            current++;\r\n            char = input[current];\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n        current++;\r\n        char = input[current];\r\n        tokens.push({\r\n          type: 'string',\r\n          value: result,\r\n        });\r\n        continue;\r\n      }\r\n      // 记录运算符\r\n      if (OPERATOR.test(char)) {\r\n        let next = input[current + 1];\r\n        let result = `${char}${next}`;\r\n        if (OPERATOR.test(result)) {\r\n          tokens.push({\r\n            type: 'operator',\r\n            value: result,\r\n          });\r\n          current++;\r\n        } else {\r\n          tokens.push({\r\n            type: 'operator',\r\n            value: char,\r\n          });\r\n        }\r\n        current++;\r\n        continue;\r\n      }\r\n      // 记录数字值\r\n      if (NUMBERS.test(char)) {\r\n        let result = '';\r\n        while (NUMBERS.test(char)) {\r\n          if (current < length) {\r\n            result += char;\r\n            current++;\r\n            char = input[current];\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n        tokens.push({\r\n          type: 'number',\r\n          value: result,\r\n        });\r\n        continue;\r\n      }\r\n      // 记录函数名称, 参数名称, 操作数名称\r\n      if (LETTERS.test(char)) {\r\n        let result = '';\r\n        while (LETTERS.test(char)) {\r\n          if (current < length) {\r\n            result += char;\r\n            current++;\r\n            char = input[current];\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n        // 是否为函数名称\r\n        if (char === '(') {\r\n          tokens.push({\r\n            type: 'function',\r\n            value: result,\r\n          });\r\n          tokens.push({\r\n            type: 'function',\r\n            value: '(',\r\n          });\r\n          bracketsStack.push({\r\n            type: 'function',\r\n            value: '(',\r\n          });\r\n          current++;\r\n        } else {\r\n          tokens.push({\r\n            type: 'operand',\r\n            value: result,\r\n          });\r\n        }\r\n        continue;\r\n      }\r\n      // 无法识别的token\r\n      throw new TypeError(`无法识别的token ${char} `);\r\n    }\r\n    // 返回处理结果\r\n    if (this.syntaxCheck) {\r\n      return this.syntax(tokens);\r\n    }\r\n    return tokens;\r\n  }\r\n\r\n  /**\r\n   * 语法分析\r\n   * @param tokens\r\n   */\r\n  syntax(tokens) {\r\n    // 单引号对校验\r\n    let sQuotesStack = [];\r\n    // 双引号对校验\r\n    let dQuotesStack = [];\r\n    // 函数闭合标签校验\r\n    let callStack = [];\r\n    // 数组闭合标签校验\r\n    let arrayStack = [];\r\n    // 括号闭合标签校验\r\n    let bracketsStack = [];\r\n    // 当前的字符索引\r\n    let current = 0;\r\n    // tokens长度\r\n    let { length } = tokens;\r\n    // 忽略的数组token\r\n    let ignoreArray = (token) => {\r\n      if (token.type === 'array') {\r\n        return token.value === 'array';\r\n      }\r\n      return false;\r\n    };\r\n    // 忽略的函数token\r\n    let ignoreFunc = (token) => {\r\n      if (token.type === 'function') {\r\n        return token.value !== '(' && token.value !== ')';\r\n      }\r\n      return false;\r\n    };\r\n    // 跳过忽略的元素\r\n    let skipIgnoreToken = (dir, index) => {\r\n      if (dir === 'last') {\r\n        while (index >= 0) {\r\n          let token = tokens[index];\r\n          if (ignoreFunc(token)) {\r\n            index--;\r\n            continue;\r\n          }\r\n          if (ignoreArray(token)) {\r\n            index--;\r\n            continue;\r\n          }\r\n          return token;\r\n        }\r\n      }\r\n      if (dir === 'next') {\r\n        while (index < length) {\r\n          let token = tokens[index];\r\n          if (ignoreFunc(token)) {\r\n            index++;\r\n            continue;\r\n          }\r\n          if (ignoreArray(token)) {\r\n            index++;\r\n            continue;\r\n          }\r\n          return token;\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n    // 检查数组\r\n    let checkArray = (dir, target) => {\r\n      let token = tokens[current];\r\n      let local = dir === 'last' ? '前面' : '后面';\r\n      if (token.value === '{') {\r\n        if (dir === 'last') {\r\n          switch (target.type) {\r\n            case 'array': {\r\n              if (target.value === '{') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n            case 'function': {\r\n              if (target.value === '(') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n            case 'brackets': {\r\n              if (target.value === '(') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n            case 'operator': {\r\n              if (target.value === ',') {\r\n                return;\r\n              }\r\n              return;\r\n            }\r\n          }\r\n        }\r\n        if (dir === 'next') {\r\n          switch (target.type) {\r\n            case 'string':\r\n            case 'array':\r\n            case 'number':\r\n            case 'operand': {\r\n              return;\r\n            }\r\n            case 'function': {\r\n              if (target.value === '(') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n            case 'brackets': {\r\n              if (target.value === '(') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (token.value === '}') {\r\n        if (dir === 'last') {\r\n          switch (target.type) {\r\n            case 'number':\r\n            case 'string':\r\n            case 'array':\r\n            case 'operand': {\r\n              return;\r\n            }\r\n            case 'function': {\r\n              if (target.value === ')') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n            case 'brackets': {\r\n              if (target.value === ')') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (dir === 'next') {\r\n          switch (target.type) {\r\n            case 'array': {\r\n              if (target.value === '}') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n            case 'function': {\r\n              if (target.value === ')') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n            case 'brackets': {\r\n              if (target.value === ')') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n            case 'operator': {\r\n              if (target.value === ',') {\r\n                return;\r\n              }\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      throw TypeError(`错误表达式 ${token.value} ${local} ${target.value}`);\r\n    };\r\n    // 检查数字和字符\r\n    let checkValue = (dir, target) => {\r\n      let token = tokens[current];\r\n      let local = dir === 'last' ? '前面' : '后面';\r\n      switch (target.type) {\r\n        case 'array': {\r\n          if (dir === 'last') {\r\n            if (target.value === '{') {\r\n              return;\r\n            }\r\n          }\r\n          if (dir === 'next') {\r\n            if (target.value === '}') {\r\n              return;\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 'brackets': {\r\n          if (dir === 'last') {\r\n            if (target.value === '(') {\r\n              return;\r\n            }\r\n          }\r\n          if (dir === 'next') {\r\n            if (target.value === ')') {\r\n              return;\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 'function': {\r\n          if (dir === 'last') {\r\n            if (target.value === '(') {\r\n              return;\r\n            }\r\n          }\r\n          if (dir === 'next') {\r\n            if (target.value === ')') {\r\n              return;\r\n            }\r\n          }\r\n          break;\r\n        }\r\n        case 'operator': {\r\n          return;\r\n        }\r\n      }\r\n      throw TypeError(`错误表达式 ${token.value} ${local} ${target.value}`);\r\n    };\r\n    // 检查运算符\r\n    let checkOperator = (dir, target) => {\r\n      let token = tokens[current];\r\n      let local = dir === 'last' ? '前面' : '后面';\r\n      switch (target.type) {\r\n        case 'brackets':\r\n        case 'function':\r\n        case 'string':\r\n        case 'number':\r\n        case 'operand': {\r\n          return;\r\n        }\r\n        case 'array': {\r\n          if (token.value === ',') {\r\n            return;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n      throw TypeError(`错误表达式 ${token.value} ${local} ${target.value}`);\r\n    };\r\n    // 检查函数\r\n    let checkFunction = (dir, target) => {\r\n      let token = tokens[current];\r\n      let local = dir === 'last' ? '前面' : '后面';\r\n      if (token.value === '(') {\r\n        if (dir === 'last') {\r\n          switch (target.type) {\r\n            case 'array': {\r\n              if (target.value === '{') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n            case 'function': {\r\n              if (target.value === '(') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n            case 'brackets': {\r\n              if (target.value === '(') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n            case 'operator': {\r\n              return;\r\n            }\r\n          }\r\n        }\r\n        if (dir === 'next') {\r\n          switch (target.type) {\r\n            case 'function':\r\n            case 'string':\r\n            case 'number':\r\n            case 'operand': {\r\n              return;\r\n            }\r\n            case 'array': {\r\n              if (target.value === '{') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n            case 'brackets': {\r\n              if (target.value === '(') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (token.value === ')') {\r\n        if (dir === 'last') {\r\n          switch (target.type) {\r\n            case 'function':\r\n            case 'number':\r\n            case 'string':\r\n            case 'operand': {\r\n              return;\r\n            }\r\n            case 'array': {\r\n              if (target.value === '}') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n            case 'brackets': {\r\n              if (target.value === ')') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (dir === 'next') {\r\n          switch (target.type) {\r\n            case 'array': {\r\n              if (target.value === '}') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n            case 'function': {\r\n              if (target.value === ')') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n            case 'brackets': {\r\n              if (target.value === ')') {\r\n                return;\r\n              }\r\n              break;\r\n            }\r\n            case 'operator': {\r\n              if (target.value === ',') {\r\n                return;\r\n              }\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      throw TypeError(`错误表达式 ${token.value} ${local} ${target.value}`);\r\n    };\r\n    // 循环处理所有token\r\n    while (current < length) {\r\n      // 当前处理的token\r\n      let token = tokens[current];\r\n      // 跳过忽略token\r\n      if (ignoreArray(token)) {\r\n        current++;\r\n        continue;\r\n      }\r\n      if (ignoreFunc(token)) {\r\n        current++;\r\n        continue;\r\n      }\r\n      let { type, value } = token;\r\n      // 处理单引号\r\n      if (type === \"'\") {\r\n        if (sQuotesStack.length) {\r\n          sQuotesStack.pop();\r\n        } else {\r\n          // 双引号中嵌套单引号\r\n          if (!dQuotesStack.length) {\r\n            sQuotesStack.push(\"'\");\r\n          }\r\n        }\r\n      }\r\n      // 处理双引号\r\n      if (type === '\"') {\r\n        if (dQuotesStack.length) {\r\n          dQuotesStack.pop();\r\n        } else {\r\n          // 单引号中嵌套双引号\r\n          if (!sQuotesStack.length) {\r\n            dQuotesStack.push('\"');\r\n          }\r\n        }\r\n      }\r\n      // 处理字符\r\n      if (type === 'string') {\r\n        let last = skipIgnoreToken('last', current - 1);\r\n        let next = skipIgnoreToken('next', current + 1);\r\n        if (last) {\r\n          checkValue('last', last);\r\n        }\r\n        if (next) {\r\n          checkValue('next', next);\r\n        }\r\n      }\r\n      // 处理数字\r\n      if (type === 'number') {\r\n        let last = skipIgnoreToken('last', current - 1);\r\n        let next = skipIgnoreToken('next', current + 1);\r\n        if (last) {\r\n          checkValue('last', last);\r\n        }\r\n        if (next) {\r\n          checkValue('next', next);\r\n        }\r\n      }\r\n      // 处理数组\r\n      if (type === 'array') {\r\n        if (value === '{') {\r\n          arrayStack.push(token);\r\n        }\r\n        if (value === '}') {\r\n          if (arrayStack.length === 0) {\r\n            throw new TypeError('数组缺少闭合标签');\r\n          }\r\n          arrayStack.pop();\r\n        }\r\n        let last = skipIgnoreToken('last', current - 1);\r\n        let next = skipIgnoreToken('next', current + 1);\r\n        if (last) {\r\n          checkArray('last', last);\r\n        }\r\n        if (next) {\r\n          checkArray('next', next);\r\n        }\r\n      }\r\n      // 处理函数调用\r\n      if (type === 'function') {\r\n        if (value === '(') {\r\n          callStack.push(token);\r\n        }\r\n        if (value === ')') {\r\n          callStack.pop();\r\n        }\r\n        let last = skipIgnoreToken('last', current - 1);\r\n        let next = skipIgnoreToken('next', current + 1);\r\n        if (last) {\r\n          checkFunction('last', last);\r\n        }\r\n        if (next) {\r\n          checkFunction('next', next);\r\n        }\r\n      }\r\n      // 处理运算符号\r\n      if (type === 'operator') {\r\n        let last = skipIgnoreToken('last', current - 1);\r\n        let next = skipIgnoreToken('next', current + 1);\r\n        // 运算符需要两边都有操作数\r\n        if (last) {\r\n          checkOperator('last', last);\r\n        } else {\r\n          throw TypeError(`错误表达式: ${token.value} 错误`);\r\n        }\r\n        if (next) {\r\n          checkOperator('next', next);\r\n        } else {\r\n          throw TypeError(`错误表达式: ${token.value} 错误`);\r\n        }\r\n      }\r\n      // 处理括号\r\n      if (type === 'brackets') {\r\n        if (value === '(') {\r\n          bracketsStack.push(token);\r\n        }\r\n        if (value === ')') {\r\n          if (bracketsStack.length === 0) {\r\n            throw new TypeError('括号缺少闭合标签');\r\n          }\r\n          bracketsStack.pop();\r\n        }\r\n      }\r\n      // 处理下一个字符\r\n      current++;\r\n    }\r\n    // 闭合标签检查\r\n    if (arrayStack.length) {\r\n      throw new TypeError('数组缺少闭合标签');\r\n    }\r\n    if (callStack.length) {\r\n      throw new TypeError('函数缺少闭合标签');\r\n    }\r\n    if (sQuotesStack.length) {\r\n      throw new TypeError('单引号缺少闭合标签');\r\n    }\r\n    if (dQuotesStack.length) {\r\n      throw new TypeError('双引号缺少闭合标签');\r\n    }\r\n    if (bracketsStack.length) {\r\n      throw new TypeError('括号缺少闭合标签');\r\n    }\r\n    return tokens;\r\n  }\r\n}\r\n\r\n/**\r\n * 编译表达式\r\n */\r\nclass Compiler {\r\n\r\n  /**\r\n   * Compiler\r\n   * @param tokens\r\n   * @param writer\r\n   */\r\n  constructor({\r\n    tokens, writer,\r\n  } = {}) {\r\n    this.writer = writer;\r\n    this.tokens = tokens;\r\n    this.groupStack = [];\r\n    this.index = -1;\r\n    this.ignore = [','];\r\n    // 运算符\r\n    this.opIf = {\r\n      '>': 'ifge',\r\n      '<': 'ifgt',\r\n      '=': 'ifeq',\r\n      '>=': 'if_icmpge',\r\n      '<=': 'if_icmpgt',\r\n      '<>': 'ifne',\r\n    };\r\n    this.opAdd = {\r\n      '+': 'add',\r\n      '-': 'sub',\r\n      '&': 'link',\r\n    };\r\n    this.opMul = {\r\n      '*': 'mul',\r\n      '/': 'div',\r\n      '%': 'mod',\r\n      '^': 'power',\r\n    };\r\n    this.opCommon = {\r\n      ' ': 'common',\r\n    };\r\n    this.opRel = {\r\n      '!': 'rel',\r\n      ':': 'uni',\r\n    };\r\n    this.opNew = {\r\n      array: 'newarray',\r\n    };\r\n    this.opCell = {\r\n      function: 'invoke',\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 结束\r\n   */\r\n  eofToken() {\r\n    const { index, tokens } = this;\r\n    const { length } = tokens;\r\n    return index >= length - 1;\r\n  }\r\n\r\n  /**\r\n   * 切换下一个Token\r\n   */\r\n  nextToken() {\r\n    this.index++;\r\n    this.token = this.tokens[this.index];\r\n    return this.token;\r\n  }\r\n\r\n  /**\r\n   * 返回上一个Token\r\n   */\r\n  backToken() {\r\n    this.index--;\r\n    this.token = this.tokens[this.index];\r\n    return this.token;\r\n  }\r\n\r\n  /**\r\n   * 记录参数\r\n   */\r\n  reduceGroup() {\r\n    const { groupStack } = this;\r\n    const { length } = groupStack;\r\n    if (length > 0) {\r\n      const last = groupStack[length - 1];\r\n      const number = last.number;\r\n      last.number = number - 1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 记录参数\r\n   */\r\n  increaseGroup() {\r\n    const { groupStack } = this;\r\n    const { length } = groupStack;\r\n    if (length > 0) {\r\n      const last = groupStack[length - 1];\r\n      const number = last.number;\r\n      last.number = number + 1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 弹出组\r\n   */\r\n  popGroup() {\r\n    return this.groupStack.pop();\r\n  }\r\n\r\n  /**\r\n   * 添加组\r\n   */\r\n  addGroup(token) {\r\n    token.number = 0;\r\n    this.groupStack.push(token);\r\n    return token;\r\n  }\r\n\r\n  /**\r\n   * 忽略的Token\r\n   * @returns {*}\r\n   */\r\n  isSkipNextToken() {\r\n    if (!this.eofToken()) {\r\n      const { ignore } = this;\r\n      this.nextToken();\r\n      const { token } = this;\r\n      this.backToken();\r\n      const { value } = token;\r\n      return ignore.includes(value);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * 编译表达式\r\n   */\r\n  compile() {\r\n    const { writer } = this;\r\n    this.compileIfge();\r\n    while (this.isSkipNextToken()) {\r\n      this.nextToken();\r\n      this.compileIfge();\r\n    }\r\n    return writer.getInstruct();\r\n  }\r\n\r\n  /**\r\n   * 编译条件运算\r\n   */\r\n  compileIfge() {\r\n    this.compileAdd();\r\n    while (!this.eofToken()) {\r\n      const token = this.nextToken();\r\n      const { type, value } = token;\r\n      if (type !== 'operator') {\r\n        this.backToken();\r\n        break;\r\n      }\r\n      if (!this.opIf[value]) {\r\n        this.backToken();\r\n        break;\r\n      }\r\n      let operator = this.opIf[value];\r\n      this.compileAdd();\r\n      this.reduceGroup();\r\n      this.writer.writeOperator(operator);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 编译加减运算\r\n   */\r\n  compileAdd() {\r\n    this.compileMul();\r\n    while (!this.eofToken()) {\r\n      const token = this.nextToken();\r\n      const { type, value } = token;\r\n      if (type !== 'operator') {\r\n        this.backToken();\r\n        break;\r\n      }\r\n      if (!this.opAdd[value]) {\r\n        this.backToken();\r\n        break;\r\n      }\r\n      let operator = this.opAdd[value];\r\n      this.compileMul();\r\n      this.reduceGroup();\r\n      this.writer.writeOperator(operator);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 编译乘除运算\r\n   */\r\n  compileMul() {\r\n    this.compileCommon();\r\n    while (!this.eofToken()) {\r\n      const token = this.nextToken();\r\n      const { type, value } = token;\r\n      if (type !== 'operator') {\r\n        this.backToken();\r\n        break;\r\n      }\r\n      if (!this.opMul[value]) {\r\n        this.backToken();\r\n        break;\r\n      }\r\n      let operator = this.opMul[value];\r\n      this.compileCommon();\r\n      this.reduceGroup();\r\n      this.writer.writeOperator(operator);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 编译公共区域运算\r\n   */\r\n  compileCommon() {\r\n    this.compileRel();\r\n    while (!this.eofToken()) {\r\n      const token = this.nextToken();\r\n      const { type, value } = token;\r\n      if (type !== 'operator') {\r\n        this.backToken();\r\n        break;\r\n      }\r\n      if (!this.opCommon[value]) {\r\n        this.backToken();\r\n        break;\r\n      }\r\n      let operator = this.opCommon[value];\r\n      this.compileRel();\r\n      this.reduceGroup();\r\n      this.writer.writeOperator(operator);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 编译跨Sheet引用运算\r\n   */\r\n  compileRel() {\r\n    this.compileArray();\r\n    while (!this.eofToken()) {\r\n      const token = this.nextToken();\r\n      const { type, value } = token;\r\n      if (type !== 'operator') {\r\n        this.backToken();\r\n        break;\r\n      }\r\n      if (!this.opRel[value]) {\r\n        this.backToken();\r\n        break;\r\n      }\r\n      let operator = this.opRel[value];\r\n      this.compileArray();\r\n      this.reduceGroup();\r\n      this.writer.writeOperator(operator);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 编译数组创建\r\n   */\r\n  compileArray() {\r\n    this.compileFunction();\r\n    while (!this.eofToken()) {\r\n      const token = this.nextToken();\r\n      const { type, value } = token;\r\n      if (type !== 'array') {\r\n        this.backToken();\r\n        break;\r\n      }\r\n      // 返回跳过 } 标记\r\n      if (value === '}') {\r\n        this.backToken();\r\n        break;\r\n      }\r\n      this.addGroup(token);\r\n      // 跳过当前 {  标记\r\n      this.nextToken();\r\n      // 处理数组中的子元素\r\n      this.compileIfge();\r\n      // 下一个是忽略的标记\r\n      // 则继续处理\r\n      while (this.isSkipNextToken()) {\r\n        this.nextToken();\r\n        this.compileIfge();\r\n      }\r\n      // 记录数组需要\r\n      // 操作的元素数量\r\n      this.popGroup();\r\n      const { number } = token;\r\n      const operator = this.opNew[type];\r\n      this.writer.writeOperator(`${operator} ${number}`);\r\n      // 跳过闭合标签 }\r\n      this.nextToken();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 编译函数调用\r\n   */\r\n  compileFunction() {\r\n    this.compilePushValue();\r\n    while (!this.eofToken()) {\r\n      const token = this.nextToken();\r\n      const { type, value } = token;\r\n      if (type !== 'function') {\r\n        this.backToken();\r\n        break;\r\n      }\r\n      // 返回跳过 ) 标记\r\n      if (value === ')') {\r\n        this.backToken();\r\n        break;\r\n      }\r\n      this.addGroup(token);\r\n      // 跳过当前 (  标记\r\n      this.nextToken();\r\n      // 处理函数的参数列表\r\n      this.compileIfge();\r\n      // 下一个是忽略的标记\r\n      // 则继续处理\r\n      while (this.isSkipNextToken()) {\r\n        this.nextToken();\r\n        this.compileIfge();\r\n      }\r\n      // 记录函数需要\r\n      // 操作的元素数量\r\n      this.popGroup();\r\n      const { number } = token;\r\n      const operator = this.opCell[type];\r\n      this.writer.writeOperator(`${operator} ${value} ${number}`);\r\n      // 跳过闭合标签 )\r\n      this.nextToken();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * compilePushValue\r\n   */\r\n  compilePushValue() {\r\n    if (!this.eofToken()) {\r\n      const token = this.nextToken();\r\n      const { writer } = this;\r\n      const { type, value } = token;\r\n      // 推送操作数\r\n      // 递增函数/数组的参数数量(有的话)\r\n      switch (type) {\r\n        case 'string': {\r\n          this.increaseGroup();\r\n          writer.writeString(`${value}`);\r\n          return;\r\n        }\r\n        case 'number': {\r\n          this.increaseGroup();\r\n          writer.writeNumber(`${value}`);\r\n          return;\r\n        }\r\n        case 'operand': {\r\n          this.increaseGroup();\r\n          writer.writeOperand(value);\r\n          return;\r\n        }\r\n      }\r\n      // 处理括号计算\r\n      switch (type) {\r\n        case 'brackets': {\r\n          if (value === '(') {\r\n            this.compileIfge();\r\n            // 下一个是忽略的标记\r\n            // 则继续处理\r\n            while (this.isSkipNextToken()) {\r\n              this.nextToken();\r\n              this.compileIfge();\r\n            }\r\n            // 跳过闭合标签 )\r\n            this.nextToken();\r\n          }\r\n          return;\r\n        }\r\n      }\r\n      // 递增函数/数组的参数数量(有的话)\r\n      switch (type) {\r\n        case 'array': {\r\n          // {} 这种清空不需要增加参数数量\r\n          if (value !== '}') {\r\n            this.increaseGroup();\r\n          }\r\n          this.backToken();\r\n          return;\r\n        }\r\n        case 'function': {\r\n          // func() 这种清空不需要增加参数数量\r\n          if (value !== ')') {\r\n            this.increaseGroup();\r\n          }\r\n          this.backToken();\r\n          return;\r\n        }\r\n      }\r\n      // 过滤掉运算符\r\n      switch (type) {\r\n        case 'operator': {\r\n          this.backToken();\r\n          return;\r\n        }\r\n      }\r\n      // 无法识别的token\r\n      throw new TypeError(`无法识别的token ${type} ${value} `);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 运行表达式\r\n */\r\nclass Evaluation {\r\n\r\n  /**\r\n   * Evaluate\r\n   * @param instruct\r\n   */\r\n  constructor(instruct) {\r\n    this.instruct = instruct.split('\\r\\n');\r\n    this.memory = [];\r\n  }\r\n\r\n  /**\r\n   * 运行表达式\r\n   */\r\n  eval() {\r\n    const newArray = /^newarray/;\r\n    const invoke = /^invoke/;\r\n    const pushSRegexp = /^SPush/;\r\n    const pushNRegexp = /^NPush/;\r\n    const pushORegexp = /^OPush/;\r\n    const { instruct } = this;\r\n    instruct.forEach((name) => {\r\n      switch (name) {\r\n        case 'if_icmpge': {\r\n          this.ificmpge();\r\n          break;\r\n        }\r\n        case 'if_icmpgt': {\r\n          this.ificmpgt();\r\n          break;\r\n        }\r\n        case 'ifge': {\r\n          this.ifge();\r\n          break;\r\n        }\r\n        case 'ifgt': {\r\n          this.ifgt();\r\n          break;\r\n        }\r\n        case 'ifeq': {\r\n          this.ifeq();\r\n          break;\r\n        }\r\n        case 'ifne': {\r\n          this.ifne();\r\n          break;\r\n        }\r\n        case 'add': {\r\n          this.add();\r\n          break;\r\n        }\r\n        case 'sub': {\r\n          this.sub();\r\n          break;\r\n        }\r\n        case 'mul': {\r\n          this.mul();\r\n          break;\r\n        }\r\n        case 'div': {\r\n          this.div();\r\n          break;\r\n        }\r\n        case 'mod': {\r\n          this.mod();\r\n          break;\r\n        }\r\n        case 'power': {\r\n          this.power();\r\n          break;\r\n        }\r\n        case 'rel': {\r\n          this.rel();\r\n          break;\r\n        }\r\n        case 'link': {\r\n          this.link();\r\n          break;\r\n        }\r\n        case 'uni': {\r\n          this.uni();\r\n          break;\r\n        }\r\n        case 'common': {\r\n          this.common();\r\n          break;\r\n        }\r\n        default: {\r\n          if (newArray.test(name)) {\r\n            const group = name.split(' ');\r\n            const index = group[1];\r\n            this.array(index);\r\n            break;\r\n          }\r\n          if (invoke.test(name)) {\r\n            const group = name.split(' ');\r\n            const func = group[1];\r\n            const index = group[2];\r\n            this.invoke(func, index);\r\n            break;\r\n          }\r\n          if (pushSRegexp.test(name)) {\r\n            const value = name.split(' ')[1];\r\n            this.pushS(value);\r\n            break;\r\n          }\r\n          if (pushNRegexp.test(name)) {\r\n            const value = name.split(' ')[1];\r\n            this.pushN(value);\r\n            break;\r\n          }\r\n          if (pushORegexp.test(name)) {\r\n            const value = name.split(' ')[1];\r\n            this.pushO(value);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return this.memory.pop();\r\n  }\r\n\r\n  /**\r\n   * 推送操作数\r\n   * @param value\r\n   */\r\n  pushS(value) {\r\n    this.memory.push(value);\r\n  }\r\n\r\n  /**\r\n   * 推送操作数\r\n   * @param value\r\n   */\r\n  pushN(value) {\r\n    value = parseFloat(value);\r\n    this.memory.push(value);\r\n  }\r\n\r\n  /**\r\n   * 推送操作数\r\n   * @param value\r\n   */\r\n  pushO(value) {\r\n    this.memory.push(value);\r\n  }\r\n\r\n  /**\r\n   * 两个值的大于比较\r\n   */\r\n  ifge() {\r\n    const b = this.memory.pop();\r\n    const a = this.memory.pop();\r\n    this.memory.push(a > b);\r\n  }\r\n\r\n  /**\r\n   * 两个值的小于比较\r\n   */\r\n  ifgt() {\r\n    const b = this.memory.pop();\r\n    const a = this.memory.pop();\r\n    this.memory.push(a < b);\r\n  }\r\n\r\n  /**\r\n   * 两个值的相等比较\r\n   */\r\n  ifeq() {\r\n    const b = this.memory.pop();\r\n    const a = this.memory.pop();\r\n    this.memory.push(a === b);\r\n  }\r\n\r\n  /**\r\n   * 两个值的不等比较\r\n   */\r\n  ifne() {\r\n    const b = this.memory.pop();\r\n    const a = this.memory.pop();\r\n    this.memory.push(a !== b);\r\n  }\r\n\r\n  /**\r\n   * 两个值的大于等于比较\r\n   */\r\n  ificmpge() {\r\n    const b = this.memory.pop();\r\n    const a = this.memory.pop();\r\n    this.memory.push(a >= b);\r\n  }\r\n\r\n  /**\r\n   * 两个值的小于等于比较\r\n   */\r\n  ificmpgt() {\r\n    const b = this.memory.pop();\r\n    const a = this.memory.pop();\r\n    this.memory.push(a <= b);\r\n  }\r\n\r\n  /**\r\n   * 两个值的加法运算\r\n   */\r\n  add() {\r\n    const b = this.memory.pop();\r\n    const a = this.memory.pop();\r\n    this.memory.push(a + b);\r\n  }\r\n\r\n  /**\r\n   * 两个值的减法运算\r\n   */\r\n  sub() {\r\n    const b = this.memory.pop();\r\n    const a = this.memory.pop();\r\n    this.memory.push(a - b);\r\n  }\r\n\r\n  /**\r\n   * 两个值的乘法运算\r\n   */\r\n  mul() {\r\n    const b = this.memory.pop();\r\n    const a = this.memory.pop();\r\n    this.memory.push(a * b);\r\n  }\r\n\r\n  /**\r\n   * 两个值的除法运算\r\n   */\r\n  div() {\r\n    const b = this.memory.pop();\r\n    const a = this.memory.pop();\r\n    this.memory.push(a / b);\r\n  }\r\n\r\n  /**\r\n   * 两个值的mod运算\r\n   */\r\n  mod() {\r\n    const b = this.memory.pop();\r\n    const a = this.memory.pop();\r\n    this.memory.push(a % b);\r\n  }\r\n\r\n  /**\r\n   * 计算两个区域的并集\r\n   */\r\n  common() {\r\n    // TODO ...\r\n    // ....\r\n  }\r\n\r\n  /**\r\n   * 跨sheet引用运算\r\n   */\r\n  rel() {\r\n    // TODO ...\r\n    // ....\r\n  }\r\n\r\n  /**\r\n   * 计算两个区域连接的新区域\r\n   */\r\n  uni() {\r\n    // TODO ...\r\n    // ....\r\n  }\r\n\r\n  /**\r\n   * 字符串连接运算\r\n   */\r\n  link() {\r\n    const b = this.memory.pop();\r\n    const a = this.memory.pop();\r\n    this.memory.push(`${a}${b}`);\r\n  }\r\n\r\n  /**\r\n   * 乘方计算\r\n   */\r\n  power() {\r\n    const b = this.memory.pop();\r\n    const a = this.memory.pop();\r\n    this.memory.push(Math.pow(a, b));\r\n  }\r\n\r\n  /**\r\n   * 创建数组\r\n   * @param index\r\n   */\r\n  array(index) {\r\n    const array = [];\r\n    for (let i = 1; i <= index; i++) {\r\n      const item = this.memory.pop();\r\n      array.push(item);\r\n    }\r\n    array.reverse();\r\n    this.memory.push(array);\r\n  }\r\n\r\n  /**\r\n   * 执行函数\r\n   * @param func\r\n   * @param index\r\n   */\r\n  invoke(func, index) {\r\n    const array = [];\r\n    for (let i = 1; i <= index; i++) {\r\n      const item = this.memory.pop();\r\n      array.push(item);\r\n    }\r\n    array.reverse();\r\n    const execute = Functions.getFunction(func);\r\n    const result = execute.apply(this, array);\r\n    this.memory.push(result);\r\n  }\r\n}\r\n\r\n/**\r\n * 编译输出指令\r\n * @param input\r\n * @returns {string|*}\r\n * @constructor\r\n */\r\nconst Compile = (input) => {\r\n  if (input.startsWith('=')) {\r\n    input = input.substring(1);\r\n  }\r\n  const tokenizer = new Tokenizer();\r\n  const writer = new Assembly();\r\n  const tokens = tokenizer.lexical(input);\r\n  const compiler = new Compiler({\r\n    writer, tokens,\r\n  });\r\n  return compiler.compile();\r\n};\r\n\r\n/**\r\n * 运行指令\r\n * @param inst\r\n * @returns {*}\r\n * @constructor\r\n */\r\nconst Instruct = (inst) => {\r\n  const evaluation = new Evaluation(inst);\r\n  return evaluation.eval();\r\n};\r\n\r\n/**\r\n * 编译运行\r\n * @constructor\r\n */\r\nconst Evaluate = input => Instruct(Compile(input));\r\n\r\nexport {\r\n  Tokenizer,\r\n  Compiler,\r\n  Assembly,\r\n  Compile,\r\n  Evaluate,\r\n  Instruct,\r\n  Functions,\r\n};\r\n","import { Compile, Instruct } from './Compiler';\r\nimport { SheetUtils } from '../utils/SheetUtils';\r\n\r\n/**\r\n * Formula\r\n */\r\nclass Formula {\r\n\r\n  /**\r\n   * Formula\r\n   * @param expr\r\n   */\r\n  constructor({\r\n    expr = SheetUtils.EMPTY,\r\n  } = {}) {\r\n    this.expr = expr;\r\n    this.content = SheetUtils.Nul;\r\n    this.instruct = SheetUtils.Nul;\r\n  }\r\n\r\n  /**\r\n   * 计算公式\r\n   * @return {string}\r\n   */\r\n  getValue() {\r\n    let { expr } = this;\r\n    let { content } = this;\r\n    let { instruct } = this;\r\n    if (!content) {\r\n      if (!instruct) {\r\n        instruct = Compile(expr);\r\n      }\r\n      content = Instruct(instruct);\r\n    }\r\n    this.content = content;\r\n    this.instruct = instruct;\r\n    return content;\r\n  }\r\n\r\n  /**\r\n   * 有效的表达式\r\n   * @return {boolean}\r\n   */\r\n  hasExpr() {\r\n    let { expr } = this;\r\n    return !SheetUtils.isBlank(expr);\r\n  }\r\n\r\n  /**\r\n   * 获取表达式\r\n   * @return {string}\r\n   */\r\n  getExpr() {\r\n    return this.expr;\r\n  }\r\n\r\n  /**\r\n   * 设置表达式\r\n   * @param expr\r\n   */\r\n  setExpr(expr) {\r\n    this.expr = expr;\r\n    this.content = SheetUtils.Nul;\r\n    this.instruct = SheetUtils.Nul;\r\n  }\r\n\r\n  /**\r\n   * 复制\r\n   * @returns {Formula}\r\n   */\r\n  clone() {\r\n    return new Formula({\r\n      expr: this.expr,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Formula,\r\n};\r\n","import { SheetUtils } from '../../../utils/SheetUtils';\r\nimport { CellFont } from './CellFont';\r\nimport { CellBorder } from './CellBorder';\r\nimport { XIcon } from '../tableicon/XIcon';\r\nimport XTableFormat from '../XTableTextFormat';\r\nimport { RichFonts } from './RichFonts';\r\nimport { Formula } from '../../../formula/Formula';\r\nimport { DateUtils } from '../../../utils/DateUtils';\r\n\r\n/**\r\n * 单元格\r\n */\r\nclass Cell {\r\n\r\n  /**\r\n   * Cell\r\n   * @param background\r\n   * @param format\r\n   * @param text\r\n   * @param richText\r\n   * @param ruler\r\n   * @param custom\r\n   * @param icons\r\n   * @param borderAttr\r\n   * @param fontAttr\r\n   * @param formula\r\n   * @param contentWidth\r\n   * @param contentHeight\r\n   * @param contentType\r\n   */\r\n  constructor({\r\n    ruler = SheetUtils.Undef,\r\n    format = 'default',\r\n    icons = [],\r\n    fontAttr = {},\r\n    custom = {},\r\n    borderAttr = {},\r\n    formula = {},\r\n    richText = {},\r\n    background = SheetUtils.Undef,\r\n    text = SheetUtils.EMPTY,\r\n    contentWidth = 0,\r\n    contentHeight = 0,\r\n    contentType = Cell.TYPE.STRING,\r\n  } = {}) {\r\n    // 背景颜色\r\n    this.background = background;\r\n    // 单元格图标\r\n    this.icons = XIcon.newInstances(icons);\r\n    // 自定义属性\r\n    this.custom = custom;\r\n    // 字体测量尺子\r\n    this.ruler = ruler;\r\n    // 格式化类型\r\n    this.format = format;\r\n    // 单元格公式\r\n    this.formula = new Formula(formula);\r\n    // 文本内容\r\n    this.text = text;\r\n    // 富文本内容\r\n    this.richText = new RichFonts(richText);\r\n    // 格式化后的内容\r\n    this.formatText = SheetUtils.EMPTY;\r\n    // 内容的高度\r\n    this.contentHeight = contentHeight;\r\n    // 内容的宽度\r\n    this.contentWidth = contentWidth;\r\n    // 字体属性\r\n    this.fontAttr = new CellFont(fontAttr);\r\n    // 边框属性\r\n    this.borderAttr = new CellBorder(borderAttr);\r\n    // 内容类型\r\n    this.setContentType(contentType);\r\n  }\r\n\r\n  /**\r\n   * 设置单元格小图标\r\n   * @param icons\r\n   */\r\n  setIcons(icons) {\r\n    this.icons = icons;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 设置内容文本\r\n   * @param text\r\n   */\r\n  setText(text) {\r\n    this.formatText = null;\r\n    this.text = text;\r\n    this.formula.setExpr(null);\r\n    this.richText.setRich([]);\r\n    this.setContentWidth(0);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 设置富文本\r\n   */\r\n  setRichText(rich) {\r\n    this.formatText = null;\r\n    this.text = null;\r\n    this.formula.setExpr(null);\r\n    this.richText.setRich(rich);\r\n    this.setContentWidth(0);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 设置公式\r\n   */\r\n  setExpr(expr) {\r\n    this.formatText = null;\r\n    this.text = null;\r\n    this.formula.setExpr(expr);\r\n    this.richText.setRich([]);\r\n    this.setContentWidth(0);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 获取公式\r\n   */\r\n  getExpr() {\r\n    return this.formula.getExpr();\r\n  }\r\n\r\n  /**\r\n   * 设置格式化类型\r\n   * @param format\r\n   */\r\n  setFormat(format = 'default') {\r\n    this.format = format;\r\n    this.formatText = null;\r\n    this.setContentWidth(0);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 保存测量尺子\r\n   * @param ruler\r\n   */\r\n  setRuler(ruler) {\r\n    this.ruler = ruler;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 设置内容类型\r\n   * @param type\r\n   */\r\n  setContentType(type = Cell.TYPE.STRING) {\r\n    const { text } = this;\r\n    switch (type) {\r\n      case Cell.TYPE.STRING: {\r\n        this.contentType = Cell.TYPE.STRING;\r\n        break;\r\n      }\r\n      case Cell.TYPE.NUMBER: {\r\n        this.contentType = type;\r\n        if (SheetUtils.isNumber(text)) {\r\n          this.contentType = Cell.TYPE.NUMBER;\r\n          this.text = SheetUtils.parseFloat(text);\r\n        } else {\r\n          this.contentType = Cell.TYPE.STRING;\r\n          this.text = `${text}`;\r\n        }\r\n        break;\r\n      }\r\n      case Cell.TYPE.DATE_TIME: {\r\n        const parse = DateUtils.parse(text);\r\n        if (SheetUtils.isDate(parse)) {\r\n          this.contentType = Cell.TYPE.DATE_TIME;\r\n          this.text = text;\r\n        } else {\r\n          this.contentType = Cell.TYPE.STRING;\r\n          this.text = `${text}`;\r\n        }\r\n        break;\r\n      }\r\n      case Cell.TYPE.RICH_TEXT: {\r\n        this.contentType = Cell.TYPE.RICH_TEXT;\r\n        break;\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 单元格是否为空\r\n   * @returns {boolean}\r\n   */\r\n  isEmpty() {\r\n    return SheetUtils.isBlank(this.getComputeText());\r\n  }\r\n\r\n  /**\r\n   * 公式是否存在\r\n   */\r\n  hasFormula() {\r\n    return this.formula.hasExpr();\r\n  }\r\n\r\n  /**\r\n   * 获取格式后的文本\r\n   * @returns {string|*}\r\n   */\r\n  getFormatText() {\r\n    let { text, formula, format } = this;\r\n    let { formatText } = this;\r\n    let { contentType } = this;\r\n    // 优先获取公式值\r\n    if (formula.hasExpr()) {\r\n      let value = formula.getValue();\r\n      if (value) {\r\n        if (SheetUtils.isBlank(formatText)) {\r\n          formatText = XTableFormat(format, value);\r\n        }\r\n      }\r\n      this.formatText = formatText;\r\n      return formatText;\r\n    }\r\n    // 格式化文本\r\n    switch (contentType) {\r\n      case Cell.TYPE.STRING:\r\n      case Cell.TYPE.NUMBER:\r\n      case Cell.TYPE.DATE_TIME: {\r\n        if (format) {\r\n          if (SheetUtils.isBlank(formatText)) {\r\n            this.formatText = XTableFormat(format, text);\r\n            return this.formatText;\r\n          }\r\n        }\r\n        return formatText;\r\n      }\r\n    }\r\n    // 默认返回\r\n    return SheetUtils.EMPTY;\r\n  }\r\n\r\n  /**\r\n   * 获取计算后的文本\r\n   * @returns {string|*}\r\n   */\r\n  getComputeText() {\r\n    let { text, formula } = this;\r\n    let { richText } = this;\r\n    let { contentType } = this;\r\n    // 优先获取公式值\r\n    if (formula.hasExpr()) {\r\n      return formula.getValue();\r\n    }\r\n    // 读取不同类型\r\n    switch (contentType) {\r\n      case Cell.TYPE.STRING:\r\n      case Cell.TYPE.NUMBER:\r\n      case Cell.TYPE.DATE_TIME: {\r\n        return text;\r\n      }\r\n      case Cell.TYPE.RICH_TEXT: {\r\n        return richText;\r\n      }\r\n    }\r\n    // 默认返回\r\n    return SheetUtils.EMPTY;\r\n  }\r\n\r\n  /**\r\n   * 字体属性\r\n   * @param attr\r\n   */\r\n  setFontAttr(attr) {\r\n    this.fontAttr = attr;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 设置边框类型\r\n   * @param attr\r\n   */\r\n  setBorderAttr(attr) {\r\n    this.borderAttr = attr;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 复制单元格\r\n   * @returns {Cell}\r\n   */\r\n  clone() {\r\n    const { background, text, format, custom } = this;\r\n    const { icons, contentType, formula } = this;\r\n    const { richText, fontAttr, borderAttr } = this;\r\n    return new Cell({\r\n      background,\r\n      text,\r\n      custom,\r\n      contentType,\r\n      format,\r\n      fontAttr,\r\n      borderAttr,\r\n      icons,\r\n      formula,\r\n      richText,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * toJSON\r\n   */\r\n  toJSON() {\r\n    const { background, text, format, custom } = this;\r\n    const { icons, contentType, formula } = this;\r\n    const { richText, fontAttr, borderAttr } = this;\r\n    return {\r\n      custom,\r\n      expr: formula.getExpr(),\r\n      rich: richText.getRich(),\r\n      contentType,\r\n      text,\r\n      icons,\r\n      background,\r\n      format,\r\n      fontAttr,\r\n      borderAttr,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * toString\r\n   * @returns {string|*}\r\n   */\r\n  toString() {\r\n    return this.getFormatText();\r\n  }\r\n\r\n  /**\r\n   * 内容宽度\r\n   * @param width\r\n   */\r\n  setContentWidth(width) {\r\n    this.contentWidth = width;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * 内容宽度\r\n   * @param height\r\n   */\r\n  setContentHeight(height) {\r\n    this.contentHeight = height;\r\n    return this;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * 单元格类型\r\n */\r\nCell.TYPE = {\r\n  // 数字\r\n  NUMBER: 0,\r\n  // 字符\r\n  STRING: 1,\r\n  // 富文本\r\n  RICH_TEXT: 2,\r\n  // 日期\r\n  DATE_TIME: 3,\r\n};\r\n\r\nexport {\r\n  Cell,\r\n};\r\n","import { SheetUtils } from '../../utils/SheetUtils';\r\nimport { Cell } from './tablecell/Cell';\r\n\r\nclass XTableDataItem {\r\n\r\n  constructor(options) {\r\n    if (options) {\r\n      const { cell } = options;\r\n      this.cell = SheetUtils.safeValue(cell, options);\r\n    } else {\r\n      this.cell = undefined;\r\n    }\r\n  }\r\n\r\n  getCell() {\r\n    const { cell } = this;\r\n    if (cell instanceof Cell) {\r\n      return cell;\r\n    }\r\n    if (SheetUtils.isString(cell)) {\r\n      this.cell = new Cell({\r\n        text: cell,\r\n      });\r\n    } else {\r\n      this.cell = new Cell(cell);\r\n    }\r\n    return this.cell;\r\n  }\r\n\r\n  setCell(cell) {\r\n    this.cell = cell;\r\n    return this;\r\n  }\r\n\r\n  clone() {\r\n    return new XTableDataItem({\r\n      mergeId: this.mergeId,\r\n      cell: this.cell,\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableDataItem,\r\n};\r\n","class Listen {\r\n\r\n  constructor() {\r\n    this.pool = {};\r\n  }\r\n\r\n  clear() {\r\n    Object.keys((key) => {\r\n      delete this.pool[key];\r\n    });\r\n  }\r\n\r\n  removeListen(key) {\r\n    delete this.pool[key];\r\n  }\r\n\r\n  registerListen(key, call) {\r\n    this.pool[key] = call;\r\n  }\r\n\r\n  execute(key, ...message) {\r\n    if (this.pool[key]) {\r\n      this.pool[key](...message);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  Listen,\r\n};\r\n","/**\r\n * 数据快照\r\n */\r\nimport { Listen } from '../../../lib/Listen';\r\n\r\nclass Snapshot {\r\n\r\n  /**\r\n   * Snapshot\r\n   */\r\n  constructor() {\r\n    // 撤销\r\n    this.undoStack = [];\r\n    // 反撤销\r\n    this.redoStack = [];\r\n    // 当前记录层\r\n    this.layer = {\r\n      event: '',\r\n      data: [],\r\n    };\r\n    // 启用记录\r\n    this.apply = false;\r\n    // 数据监听\r\n    this.listen = new Listen();\r\n  }\r\n\r\n  /**\r\n   * 能否反撤销\r\n   * @returns {boolean}\r\n   */\r\n  canRedo() {\r\n    return this.redoStack.length > 0;\r\n  }\r\n\r\n  /**\r\n   * 能否撤销\r\n   * @returns {boolean}\r\n   */\r\n  canUndo() {\r\n    return this.undoStack.length > 0;\r\n  }\r\n\r\n  /**\r\n   * 撤销\r\n   */\r\n  undo() {\r\n    const layer = this.undoStack.pop();\r\n    for (let i = layer.data.length - 1; i >= 0; i--) {\r\n      const action = layer.data[i];\r\n      action.undo();\r\n    }\r\n    this.redoStack.push(layer);\r\n    this.listen.execute('change', layer.event, 'undo');\r\n  }\r\n\r\n  /**\r\n   * 反撤销\r\n   */\r\n  redo() {\r\n    const layer = this.redoStack.pop();\r\n    for (let i = 0, len = layer.data.length; i < len; i++) {\r\n      const action = layer.data[i];\r\n      action.redo();\r\n    }\r\n    this.undoStack.push(layer);\r\n    this.listen.execute('change', layer.event, 'redo');\r\n  }\r\n\r\n  /**\r\n   * 打开快照\r\n   */\r\n  open() {\r\n    this.layer = {\r\n      event: '',\r\n      data: [],\r\n    };\r\n    this.apply = true;\r\n  }\r\n\r\n  /**\r\n   * 关闭快照\r\n   */\r\n  close(event) {\r\n    if (this.layer.data.length) {\r\n      this.layer.event = event;\r\n      this.redoStack = [];\r\n      this.undoStack.push(this.layer);\r\n    }\r\n    this.layer = {\r\n      event: '',\r\n      data: [],\r\n    };\r\n    this.apply = false;\r\n    this.listen.execute('change', event, 'close');\r\n  }\r\n\r\n  /**\r\n   * 添加动作\r\n   * @param action\r\n   */\r\n  addAction(action = {\r\n    undo: () => {},\r\n    redo: () => {},\r\n  }) {\r\n    if (this.apply) {\r\n      this.layer.data.push(action);\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  Snapshot,\r\n};\r\n","import { XTableDataItem } from './XTableDataItem';\r\nimport { Snapshot } from './snapshot/Snapshot';\r\n\r\nclass XTableDataItems {\r\n\r\n  constructor({\r\n    snapshot = new Snapshot(),\r\n    items = [],\r\n  } = {}) {\r\n    this.items = items;\r\n    this.snapshot = snapshot;\r\n  }\r\n\r\n  getOrNew(ri, ci) {\r\n    const find = this.get(ri, ci);\r\n    if (find) {\r\n      return find;\r\n    }\r\n    const item = new XTableDataItem();\r\n    this.set(ri, ci, item);\r\n    return item;\r\n  }\r\n\r\n  getItems() {\r\n    return this.items;\r\n  }\r\n\r\n  slice(sri, sci, eri, eci) {\r\n    const rows = this.items.slice(sri, eri + 1);\r\n    return rows.map((row) => {\r\n      if (row) {\r\n        return row.slice(sci, eci + 1);\r\n      }\r\n      return row;\r\n    });\r\n  }\r\n\r\n  get(ri, ci) {\r\n    const line = this.items[ri];\r\n    return line && line[ci]\r\n      ? this.wrap(line, ci)\r\n      : undefined;\r\n  }\r\n\r\n  set(ri, ci, item) {\r\n    const line = this.items[ri] || [];\r\n    line[ci] = item;\r\n    this.items[ri] = line;\r\n  }\r\n\r\n  wrap(line, ci) {\r\n    let item = line[ci];\r\n    if (item) {\r\n      item = item instanceof XTableDataItem\r\n        ? item : new XTableDataItem(item);\r\n      line[ci] = item;\r\n      return item;\r\n    }\r\n    return item;\r\n  }\r\n\r\n  each(callback) {\r\n    const { items } = this;\r\n    const { length } = items;\r\n    for (let i = 0; i < length; i++) {\r\n      let item = items[i];\r\n      if (item) {\r\n        const { length } = item;\r\n        for (let j = 0; j < length; j++) {\r\n          let cell = this.get(i, j);\r\n          callback(cell);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  clear(rectRange, {\r\n    ignoreCorner = false,\r\n  } = {}) {\r\n    let { sri, eri } = rectRange;\r\n    let { sci, eci } = rectRange;\r\n    let { items } = this;\r\n    let { snapshot } = this;\r\n    let { length } = items;\r\n    let oldItems = [];\r\n    let effRiLength = eri - sri + 1;\r\n    let effCiLength = eci - sci + 1;\r\n    let action = {\r\n      undo: () => {\r\n        for (let ri = sri; ri <= eri; ri++) {\r\n          if (ri >= length) {\r\n            break;\r\n          }\r\n          let oldRowItem = oldItems[ri];\r\n          let rowItem = items[ri];\r\n          if (rowItem) {\r\n            for (let ci = sci; ci <= eci; ci++) {\r\n              if (ci >= length) {\r\n                break;\r\n              }\r\n              if (ignoreCorner) {\r\n                let firstRi = ri === sri;\r\n                let firstCi = ci === sci;\r\n                if (firstRi && firstCi) {\r\n                  continue;\r\n                }\r\n                rowItem[ci] = oldRowItem[ci];\r\n              } else {\r\n                rowItem[ci] = oldRowItem[ci];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      redo: () => {\r\n        oldItems = new Array(effRiLength);\r\n        for (let ri = sri; ri <= eri; ri++) {\r\n          if (ri >= length) {\r\n            break;\r\n          }\r\n          let rowItem = items[ri];\r\n          if (rowItem) {\r\n            let oldRowItem = new Array(effCiLength);\r\n            let { length } = rowItem;\r\n            for (let ci = sci; ci <= eci; ci++) {\r\n              if (ci >= length) {\r\n                break;\r\n              }\r\n              if (ignoreCorner) {\r\n                let firstRi = ri === sri;\r\n                let firstCi = ci === sci;\r\n                if (firstRi && firstCi) {\r\n                  continue;\r\n                }\r\n                oldRowItem[ci] = rowItem[ci];\r\n                rowItem[ci] = undefined;\r\n              } else {\r\n                oldRowItem[ci] = rowItem[ci];\r\n                rowItem[ci] = undefined;\r\n              }\r\n            }\r\n            oldItems[ri] = oldRowItem;\r\n          }\r\n        }\r\n      },\r\n    };\r\n    snapshot.addAction(action);\r\n    action.redo();\r\n  }\r\n\r\n  setOrNew(ri, ci, item) {\r\n    const line = this.items[ri];\r\n    if (line) {\r\n      line[ci] = item;\r\n    }\r\n  }\r\n\r\n  removeRow(ri) {\r\n    let { snapshot } = this;\r\n    let orderValue;\r\n    let action = {\r\n      undo: () => {\r\n        if (orderValue) {\r\n          this.items.splice(ri, 0, orderValue);\r\n        }\r\n      },\r\n      redo: () => {\r\n        orderValue = this.items.splice(ri, 1)[0];\r\n      },\r\n    };\r\n    snapshot.addAction(action);\r\n    action.redo();\r\n  }\r\n\r\n  removeCol(ci) {\r\n    let { snapshot } = this;\r\n    let orderValue = [];\r\n    let action = {\r\n      undo: () => {\r\n        let { length } = orderValue;\r\n        for (let i = 0; i < length; i++) {\r\n          const value = orderValue[i];\r\n          const { ri, item } = value;\r\n          const subItems = this.items[ri];\r\n          subItems.splice(ci, 0, item);\r\n        }\r\n      },\r\n      redo: () => {\r\n        let { length } = this.items;\r\n        orderValue = [];\r\n        for (let ri = 0; ri < length; ri++) {\r\n          const subItems = this.items[ri];\r\n          if (subItems) {\r\n            const item = subItems.splice(ci, 1)[0];\r\n            orderValue.push({\r\n              ri, item,\r\n            });\r\n          }\r\n        }\r\n      },\r\n    };\r\n    snapshot.addAction(action);\r\n    action.redo();\r\n  }\r\n\r\n  insertRowAfter(ri) {\r\n    let { snapshot } = this;\r\n    let action = {\r\n      undo: () => {\r\n        this.items.splice(ri + 1, 1);\r\n      },\r\n      redo: () => {\r\n        const subItems = this.items[ri];\r\n        if (subItems) {\r\n          const newSubItems = [];\r\n          for (let i = 0, len = subItems.length; i < len; i++) {\r\n            const item = subItems[i];\r\n            if (item) {\r\n              const { mergeId } = item;\r\n              newSubItems[i] = { mergeId };\r\n            }\r\n          }\r\n          this.items.splice(ri + 1, 0, newSubItems);\r\n        } else {\r\n          this.items.splice(ri + 1, 0, []);\r\n        }\r\n      },\r\n    };\r\n    snapshot.addAction(action);\r\n    action.redo();\r\n  }\r\n\r\n  insertColAfter(ci) {\r\n    let { snapshot } = this;\r\n    let action = {\r\n      undo: () => {\r\n        for (let i = 0, len = this.items.length; i < len; i++) {\r\n          const subItems = this.items[i];\r\n          if (subItems) {\r\n            subItems.splice(ci + 1, 1);\r\n          }\r\n        }\r\n      },\r\n      redo: () => {\r\n        for (let i = 0, len = this.items.length; i < len; i++) {\r\n          const subItems = this.items[i];\r\n          if (subItems) {\r\n            const item = subItems[ci];\r\n            if (item) {\r\n              const { mergeId } = item;\r\n              subItems.splice(ci + 1, 0, { mergeId });\r\n            } else {\r\n              subItems.splice(ci + 1, 0, {});\r\n            }\r\n          }\r\n        }\r\n      },\r\n    };\r\n    snapshot.addAction(action);\r\n    action.redo();\r\n  }\r\n\r\n  insertRowBefore(ri) {\r\n    let { snapshot } = this;\r\n    let action = {\r\n      undo: () => {\r\n        this.items.splice(ri, 1);\r\n      },\r\n      redo: () => {\r\n        const subItems = this.items[ri];\r\n        if (subItems) {\r\n          const newSubItems = [];\r\n          for (let i = 0, len = subItems.length; i < len; i++) {\r\n            const item = subItems[i];\r\n            if (item) {\r\n              const { mergeId } = item;\r\n              newSubItems[i] = { mergeId };\r\n            }\r\n          }\r\n          this.items.splice(ri, 0, newSubItems);\r\n        } else {\r\n          this.items.splice(ri, 0, []);\r\n        }\r\n      },\r\n    };\r\n    snapshot.addAction(action);\r\n    action.redo();\r\n  }\r\n\r\n  insertColBefore(ci) {\r\n    let { snapshot } = this;\r\n    let action = {\r\n      undo: () => {\r\n        for (let i = 0, len = this.items.length; i < len; i++) {\r\n          const subItems = this.items[i];\r\n          if (subItems) {\r\n            subItems.splice(ci, 1);\r\n          }\r\n        }\r\n      },\r\n      redo: () => {\r\n        for (let i = 0, len = this.items.length; i < len; i++) {\r\n          const subItems = this.items[i];\r\n          if (subItems) {\r\n            const item = subItems[ci];\r\n            if (item) {\r\n              const { mergeId } = item;\r\n              subItems.splice(ci, 0, { mergeId });\r\n            } else {\r\n              subItems.splice(ci, 0, {});\r\n            }\r\n          }\r\n        }\r\n      },\r\n    };\r\n    snapshot.addAction(action);\r\n    action.redo();\r\n  }\r\n\r\n}\r\n\r\nexport {\r\n  XTableDataItems,\r\n};\r\n","import { Cell } from '../../core/xtable/tablecell/Cell';\r\nimport { XTableDataItems } from '../../core/xtable/XTableDataItems';\r\nimport { SheetUtils } from '../../utils/SheetUtils';\r\n\r\naddEventListener('message', (event) => {\r\n  const { data } = event;\r\n  const items = new XTableDataItems({\r\n    items: data\r\n  });\r\n  let total = 0;\r\n  let number = 0;\r\n  items.each(item => {\r\n    if (item) {\r\n      const cell = item.getCell();\r\n      if (cell.hasFormula()) {\r\n        const value = cell.getComputeText();\r\n        if (SheetUtils.isNumber(value)) {\r\n          total += SheetUtils.parseFloat(value);\r\n          number++;\r\n        }\r\n      } else {\r\n        switch (cell.contentType) {\r\n          case Cell.TYPE.NUMBER:\r\n            total += cell.getComputeText();\r\n            number++;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  });\r\n  postMessage({\r\n    total, number\r\n  });\r\n});\r\n"],"sourceRoot":""}