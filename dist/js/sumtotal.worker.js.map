{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/SheetUtils.js","webpack:///./src/draw/font/BaseFont.js","webpack:///./src/core/xtable/tablecell/CellFont.js","webpack:///./src/draw/XDraw.js","webpack:///./src/draw/Line.js","webpack:///./src/core/xtable/tablecell/Border.js","webpack:///./src/core/xtable/tablecell/CellBorder.js","webpack:///./src/draw/Rect.js","webpack:///./src/core/xtable/tableicon/XIconOffset.js","webpack:///./src/draw/Crop.js","webpack:///./src/core/xtable/tableicon/XIcon.js","webpack:///./src/utils/DateUtils.js","webpack:///./src/core/xtable/XTableTextFormat.js","webpack:///./src/core/xtable/tablecell/RichFont.js","webpack:///./src/core/xtable/tablecell/RichFonts.js","webpack:///./src/formula/Compiler.js","webpack:///./src/formula/Formula.js","webpack:///./src/core/xtable/tablecell/Cell.js","webpack:///./src/core/xtable/XTableDataItem.js","webpack:///./src/lib/Listen.js","webpack:///./src/core/xtable/snapshot/Snapshot.js","webpack:///./src/core/xtable/XTableDataItems.js","webpack:///./src/task/worker/sumtotal.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","S4","Math","random","toString","substring","alphabets","DATA_TYPE","String","Boolean","Number","Array","Function","Null","Undefined","Promise","GeneratorFunction","AsyncFunction","BigInt","DedicatedWorkerGlobalScope","Date","Un","SheetUtils","test","navigator","userAgent","isEmptyObject","e","this","isUnDef","type","length","trim","obj","getPrototypeOf","parent","str","toLowerCase","arg","sources","forEach","source","keys","v","isArray","isPlainObject","copy","json","JSON","stringify","parse","target","len","item","objOrAry","cb","total","size","val","isNumber","parseFloat","parseInt","index","idx","ret","charCodeAt","expoNet","src","x","y","charAt","indexAt","stringAt","xn","yn","expr2xy","xy2expr","min","range","window","getSelection","selectAllChildren","collapseToEnd","isBlank","now","width","innerWidth","height","innerHeight","document","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","element","el","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","explorer","indexOf","version","match","array","isString","replace","EMPTY","num","fixed","toFixed","defaultValue","self","condition","establish","otherwise","likeArray","slice","Nul","Undef","undefined","noop","BaseFont","draw","ruler","attr","align","ALIGN","center","padding","verticalAlign","VERTICAL_ALIGN","top","bottom","left","right","TEXT_WRAP","OVER_FLOW","WORD_WRAP","TRUNCATE","TEXT_DIRECTION","HORIZONTAL","VERTICAL","ANGLE","ANGLE_BAR","DEFAULT_FONT_ATTR","color","bold","italic","strikethrough","underline","angle","textWrap","direction","DEFAULT_RICH_ATTR","DEFAULT_RICH_ITEM_ATTR","CellFont","scaleAdapter","DPR","inWorker","devicePixelRatio","LINE_WIDTH_LOW","round","LINE_WIDTH_MEDIUM","LINE_WIDTH_HIGH","LINE_PIXEL_OFFSET","Base","canvas","ctx","getContext","px","dpr","srcPx","stylePx","ceil","trunc","PI","options","style","CorsLine","lineWidthType","LINE_WIDTH_TYPE","low","lineColor","medium","high","sx","sy","ex","ey","lineWidth","strokeStyle","polyStroke","xys","getOffsetX","getOffsetY","TypeError","corsLine","linePx","pixel","offsetX","offsetY","interpolation","beginPath","moveTo","lineTo","stroke","fill","fillRect","radian","dash","text","measureText","save","restore","clip","setLineDash","scale","translate","deg","rotate","XDraw","fillText","path","polyInFill","points","w","h","rect","sw","sh","tx","ty","tw","th","drawImage","LINE_TYPE","DoubleLine","widthType","spacing","leftShow","topShow","rightShow","bottomShow","iFMerge","iFMergeFirstRow","iFMergeLastRow","iFMergeFirstCol","iFMergeLastCol","row","col","pos","external","ifMerge","firstRow","lastRow","firstCol","lastCol","sTopLeftCorner","sTop","sBottom","eBottomLeftCorner","eBottom","eTop","sLeft","sRight","eTopRightCorner","eRight","eLeft","sTopRightCorner","eBottomRightCorner","sBottomLeftCorner","internal","setLineColor","setLineWidthType","handleExternal","handleInternal","horizonLine","verticalLine","zIndexID","Border","zIndex","display","getZIndex","border","origin","CellBorder","setBDisplay","setLDisplay","setTDisplay","setRDisplay","setDisplay","setBColor","setLColor","setTColor","setRColor","setColor","setBWidthType","setLWidthType","setTWidthType","setRWidthType","setWidthType","setBType","setLType","setTType","setRType","setType","setZIndex","clone","Rect","other","XIconOffset","Crop","offset","XIcon","vertical","ICON_VERTICAL","CENTER","horizontal","ICON_HORIZONTAL","RIGHT","ICON_TYPE","image","iconFocus","onDraw","onLeave","onMove","onDown","onEnter","icons","instances","icon","push","iconHorizontal","iconVertical","iconOffsetX","iconOffsetY","iconWidth","iconHeight","rectX","rectY","rectWidth","rectHeight","py","LEFT","TOP","BOTTOM","load","sync","Image","loadImg","complete","onload","onerror","console","error","drawCustom","positionRect","position","include","includeRect","crop","open","fillStyle","close","native","location","inRectPosition","activate","ICON_EVENT_TYPE","MOUSE_DOWN","includePoint","setActivate","MOUSE_MOVE","callback","custom","DateUtils","fmt","date","getMonth","getDate","getHours","getMinutes","getSeconds","floor","S","getMilliseconds","resultYear","exec","yearFormatPart","yearVal","getFullYear","substr","k","res","RegExp","Val","formatPart","replaceVal","result","parserToDate","dateText","format","defaultVal","reg","year","month","day","hours","minutes","seconds","milliseconds","j","oneChar","onePart","onePartReg","dataInfo","toExponential","isFraction","split","dateFormat","RichFont","option","RichFonts","rich","map","font","plain","item1","item2","equals","Functions","functions","toLocaleString","func","Assembly","assembly","endsWith","op","Tokenizer","syntaxCheck","input","OPERATOR","NUMBERS","LETTERS","bracketsStack","current","tokens","char","SPACE","next","last","brackets","pop","syntax","sQuotesStack","dQuotesStack","callStack","arrayStack","ignoreArray","token","ignoreFunc","skipIgnoreToken","dir","checkArray","local","checkValue","checkOperator","checkFunction","Compiler","writer","groupStack","ignore","opIf","opAdd","opMul","opCommon","opRel","opNew","opCell","function","number","eofToken","nextToken","backToken","includes","compileIfge","isSkipNextToken","getInstruct","compileAdd","operator","reduceGroup","writeOperator","compileMul","compileCommon","compileRel","compileArray","compileFunction","addGroup","popGroup","compilePushValue","increaseGroup","writeString","writeNumber","writeOperand","Evaluation","instruct","memory","newArray","invoke","pushSRegexp","pushNRegexp","pushORegexp","ificmpge","ificmpgt","ifge","ifgt","ifeq","ifne","add","sub","mul","div","mod","power","rel","link","uni","common","group","pushS","pushN","pushO","b","a","pow","reverse","getFunction","apply","Compile","startsWith","tokenizer","lexical","compile","Instruct","inst","eval","Formula","expr","content","Cell","fontAttr","borderAttr","formula","richText","background","contentWidth","contentHeight","contentType","TYPE","STRING","newInstances","formatText","setContentType","setExpr","setRich","setContentWidth","getExpr","NUMBER","DATE_TIME","isDate","RICH_TEXT","getComputeText","hasExpr","getValue","XTableFormat","getRich","getFormatText","XTableDataItem","cell","safeValue","mergeId","Listen","pool","message","Snapshot","undoStack","redoStack","layer","event","data","listen","undo","execute","redo","action","XTableDataItems","snapshot","items","ri","ci","find","set","sri","sci","eri","eci","line","wrap","rectRange","ignoreCorner","oldItems","effRiLength","effCiLength","oldRowItem","rowItem","addAction","orderValue","splice","subItems","newSubItems","addEventListener","each","getCell","hasFormula","postMessage"],"mappings":"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","file":"js/sumtotal.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* global navigator document window self */\nfunction S4() {\n  // eslint-disable-next-line no-bitwise\n  return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n}\n\nconst alphabets = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\nconst DATA_TYPE = {\n  String: 1,\n  Boolean: 2,\n  Number: 3,\n  Object: 4,\n  Array: 5,\n  Function: 6,\n  Null: 7,\n  Undefined: 8,\n  Promise: 9,\n  GeneratorFunction: 10,\n  AsyncFunction: 11,\n  BigInt: 12,\n  Symbol: 13,\n  DedicatedWorkerGlobalScope: 14,\n  Date: 15,\n  Un: 0,\n};\n\nclass SheetUtils {\n\n  static isWindows() {\n    return /windows|win32/i.test(navigator.userAgent);\n  }\n\n  static isMac() {\n    return /macintosh|mac os x/i.test(navigator.userAgent);\n  }\n\n  static isNotEmptyObject(object) {\n    return !SheetUtils.isEmptyObject(object);\n  }\n\n  static isEmptyObject(object) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in object) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (object.hasOwnProperty(key)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static isUnDef(e) {\n    return e === undefined || e === null;\n  }\n\n  static isNotUnDef(e) {\n    return !this.isUnDef(e);\n  }\n\n  static isNumber(e) {\n    return /^(-?\\d+.\\d+)$|^(-?\\d+)$/.test(e);\n  }\n\n  static isFraction(e) {\n    return /^\\d+\\/\\d+$/.test(e);\n  }\n\n  static isDate(e) {\n    return SheetUtils.type(e) === DATA_TYPE.Date;\n  }\n\n  static isFunction(e) {\n    const type = SheetUtils.type(e);\n    return type === DATA_TYPE.Function;\n  }\n\n  static isArray(e) {\n    return SheetUtils.type(e) === DATA_TYPE.Array;\n  }\n\n  static isLikeArray(e) {\n    if (SheetUtils.isUnDef(e)) {\n      return false;\n    }\n    return typeof e.length === 'number';\n  }\n\n  static isBlank(s) {\n    if (SheetUtils.isUnDef(s)) {\n      return true;\n    }\n    return s.toString().trim() === '';\n  }\n\n  static isPlainObject(obj) {\n    if (SheetUtils.isUnDef(obj)) {\n      return false;\n    }\n    return Object.getPrototypeOf(obj) === Object.getPrototypeOf({});\n  }\n\n  static isString(obj) {\n    return SheetUtils.type(obj) === DATA_TYPE.String;\n  }\n\n  static isChildType(obj, parent) {\n    return obj instanceof parent;\n  }\n\n  static toLowCase(str) {\n    return str.toLowerCase();\n  }\n\n  static type(arg) {\n    const type = Object.prototype.toString.call(arg);\n    switch (type) {\n      case '[object Null]':\n        return DATA_TYPE.Null;\n      case '[object Object]':\n        return DATA_TYPE.Object;\n      case '[object Undefined]':\n        return DATA_TYPE.Undefined;\n      case '[object String]':\n        return DATA_TYPE.String;\n      case '[object Boolean]':\n        return DATA_TYPE.Boolean;\n      case '[object Number]':\n        return DATA_TYPE.Number;\n      case '[object Function]':\n        return DATA_TYPE.Function;\n      case '[object Array]':\n        return DATA_TYPE.Array;\n      case '[object Promise]':\n        return DATA_TYPE.Promise;\n      case '[object GeneratorFunction]':\n        return DATA_TYPE.GeneratorFunction;\n      case '[object AsyncFunction]':\n        return DATA_TYPE.AsyncFunction;\n      case '[object BigInt]':\n        return DATA_TYPE.BigInt;\n      case '[object Symbol]':\n        return DATA_TYPE.Symbol;\n      case '[object Date]':\n        return DATA_TYPE.Date;\n      case '[object DedicatedWorkerGlobalScope]':\n        return DATA_TYPE.DedicatedWorkerGlobalScope;\n      default:\n        return DATA_TYPE.Un;\n    }\n  }\n\n  static copy(object = {}, ...sources) {\n    if (SheetUtils.isUnDef(object)) {\n      return {};\n    }\n    if (SheetUtils.isUnDef(sources) || sources.length === 0) {\n      return object;\n    }\n    sources.forEach((source) => {\n      if (SheetUtils.isUnDef(source)) return;\n      Object.keys(source).forEach((key) => {\n        const v = source[key];\n        if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean') {\n          object[key] = v;\n        } else if (typeof v !== 'function' && !Array.isArray(v) && SheetUtils.isPlainObject(v)) {\n          object[key] = object[key] || {};\n          SheetUtils.copy(object[key], v);\n        } else {\n          object[key] = v;\n        }\n      });\n    });\n    return object;\n  }\n\n  static cloneDeep(object) {\n    const json = JSON.stringify(object);\n    return JSON.parse(json);\n  }\n\n  static extends(target, ...src) {\n    for (let i = 0, len = src.length; i < len; i++) {\n      const item = src[i];\n      for (let key in item) {\n        if (item.hasOwnProperty(key)) {\n          const value = item[key];\n          if (value) {\n            target[key] = value;\n          }\n        }\n      }\n    }\n    return target;\n  }\n\n  static sum(objOrAry, cb = value => value) {\n    let total = 0;\n    let size = 0;\n    Object.keys(objOrAry).forEach((key) => {\n      total += cb(objOrAry[key], key);\n      size += 1;\n    });\n    return [total, size];\n  }\n\n  static parseFloat(val) {\n    if (SheetUtils.isNumber(val)) return parseFloat(val);\n    return 0;\n  }\n\n  static parseInt(val) {\n    if (SheetUtils.isNumber(val)) return parseInt(val, 10);\n    return 0;\n  }\n\n  static stringAt(index) {\n    let str = '';\n    let idx = index;\n    while (idx >= alphabets.length) {\n      idx /= alphabets.length;\n      idx -= 1;\n      str += alphabets[parseInt(idx, 10) % alphabets.length];\n    }\n    const last = index % alphabets.length;\n    str += alphabets[last];\n    return str;\n  }\n\n  static indexAt(str) {\n    let ret = 0;\n    for (let i = 0; i < str.length - 1; i += 1) {\n      const idx = str.charCodeAt(i) - 65;\n      const expoNet = str.length - 1 - i;\n      ret += (alphabets.length ** expoNet) + (alphabets.length * idx);\n    }\n    ret += str.charCodeAt(str.length - 1) - 65;\n    return ret;\n  }\n\n  static expr2xy(src) {\n    let x = '';\n    let y = '';\n    for (let i = 0; i < src.length; i += 1) {\n      if (src.charAt(i) >= '0' && src.charAt(i) <= '9') {\n        y += src.charAt(i);\n      } else {\n        x += src.charAt(i);\n      }\n    }\n    return [SheetUtils.indexAt(x), parseInt(y, 10) - 1];\n  }\n\n  static xy2expr(x, y) {\n    return `${SheetUtils.stringAt(x)}${y + 1}`;\n  }\n\n  static expr2expr(src, xn, yn) {\n    const [x, y] = SheetUtils.expr2xy(src);\n    return SheetUtils.xy2expr(x + xn, y + yn);\n  }\n\n  static minIf(v, min) {\n    if (v < min) return min;\n    return v;\n  }\n\n  static keepLastIndex(obj) {\n    const range = window.getSelection();\n    range.selectAllChildren(obj);\n    range.collapseToEnd();\n  }\n\n  static trim(s) {\n    if (this.isBlank(s)) return '';\n    return s.trim();\n  }\n\n  static now() {\n    return Date.now().toString();\n  }\n\n  static viewPort() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  }\n\n  static exitFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    }\n  }\n\n  static fullScreen(element) {\n    if (element.el) {\n      element = element.el;\n    }\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.msRequestFullscreen) {\n      element.msRequestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n      element.webkitRequestFullscreen();\n    }\n  }\n\n  static isFull() {\n    return !!(document.webkitIsFullScreen || document.mozFullScreen\n      || document.msFullscreenElement || document.fullscreenElement);\n  }\n\n  static uuid() {\n    return (`${S4() + S4()}${S4()}${S4()}${S4()}${S4()}${S4()}${S4()}`);\n  }\n\n  static getExplorerInfo() {\n    const explorer = window.navigator.userAgent.toLowerCase();\n    // firefox\n    if (explorer.indexOf('firefox') >= 0) {\n      const ver = explorer.match(/firefox\\/([\\d.]+)/)[1];\n      return { type: 'Firefox', version: ver };\n    }\n    // Chrome\n    if (explorer.indexOf('chrome') >= 0) {\n      const ver = explorer.match(/chrome\\/([\\d.]+)/)[1];\n      return { type: 'Chrome', version: ver };\n    }\n    // Opera\n    if (explorer.indexOf('opera') >= 0) {\n      const ver = explorer.match(/opera.([\\d.]+)/)[1];\n      return { type: 'Opera', version: ver };\n    }\n    // Safari\n    if (explorer.indexOf('safari') >= 0) {\n      const ver = explorer.match(/version\\/([\\d.]+)/)[1];\n      return { type: 'Safari', version: ver };\n    }\n    // ie\n    if (explorer.indexOf('msie') >= 0) {\n      const ver = explorer.match(/msie ([\\d.]+)/)[1];\n      return { type: 'IE', version: ver };\n    }\n    // undefined\n    return undefined;\n  }\n\n  static arrayLast(array) {\n    return array[array.length - 1];\n  }\n\n  static arrayHead(array) {\n    return array[0];\n  }\n\n  static blankClear(value) {\n    if (SheetUtils.isString(value)) {\n      return value.replace(/\\s*/g, SheetUtils.EMPTY);\n    }\n    return value;\n  }\n\n  static equals(src, target) {\n    if (SheetUtils.isUnDef(src)) {\n      return false;\n    }\n    if (SheetUtils.isUnDef(target)) {\n      return false;\n    }\n    return JSON.stringify(src) === JSON.stringify(target);\n  }\n\n  static toFixed(num, fixed) {\n    if (num.toString().indexOf('.') > -1) {\n      return num.toFixed(fixed);\n    }\n    return num;\n  }\n\n  static safeValue(value, defaultValue = '') {\n    return SheetUtils.isUnDef(value) ? defaultValue : value;\n  }\n\n  static inWorker() {\n    // eslint-disable-next-line no-restricted-globals\n    const type = SheetUtils.type(self);\n    return type === DATA_TYPE.DedicatedWorkerGlobalScope;\n  }\n\n  static if(condition, establish, otherwise) {\n    return condition ? establish() : otherwise();\n  }\n\n  static slice(likeArray) {\n    return Array.prototype.slice.call(likeArray);\n  }\n\n  static clearBlank(str) {\n    return str.replace(/\\s/g, '');\n  }\n\n}\n\nSheetUtils.EMPTY = '';\nSheetUtils.Nul = null;\nSheetUtils.Undef = undefined;\nSheetUtils.noop = () => {};\nSheetUtils.DATA_TYPE = DATA_TYPE;\n\nexport {\n  SheetUtils,\n};\n","class BaseFont {\n\n  constructor({\n    draw, ruler, attr,\n  }) {\n    this.draw = draw;\n    this.attr = attr;\n    this.ruler = ruler;\n  }\n\n  setRuler(ruler) {\n    this.ruler = ruler;\n  }\n\n  getAlignPadding() {\n    if (this.attr.align === BaseFont.ALIGN.center) {\n      return 0;\n    }\n    return this.attr.padding;\n  }\n\n  getVerticalAlignPadding() {\n    if (this.attr.verticalAlign === BaseFont.VERTICAL_ALIGN.center) {\n      return 0;\n    }\n    return this.attr.padding;\n  }\n\n}\n\nBaseFont.VERTICAL_ALIGN = {\n  top: 'top',\n  center: 'middle',\n  bottom: 'bottom',\n};\nBaseFont.ALIGN = {\n  left: 'left',\n  center: 'center',\n  right: 'right',\n};\nBaseFont.TEXT_WRAP = {\n  OVER_FLOW: 1,\n  WORD_WRAP: 2,\n  TRUNCATE: 3,\n};\nBaseFont.TEXT_DIRECTION = {\n  HORIZONTAL: 'horizontal',\n  VERTICAL: 'vertical',\n  ANGLE: 'angle',\n  ANGLE_BAR: 'bar',\n};\nBaseFont.DEFAULT_FONT_ATTR = {\n  name: 'Arial',\n  size: 14,\n  color: 'rgb(0,0,0)',\n  bold: false,\n  italic: false,\n  strikethrough: false,\n  underline: false,\n  angle: 0,\n  padding: 8,\n  align: BaseFont.ALIGN.left,\n  textWrap: BaseFont.TEXT_WRAP.TRUNCATE,\n  verticalAlign: BaseFont.VERTICAL_ALIGN.center,\n  direction: BaseFont.TEXT_DIRECTION.HORIZONTAL,\n};\nBaseFont.DEFAULT_RICH_ATTR = {\n  angle: 0,\n  padding: 8,\n  align: BaseFont.ALIGN.left,\n  textWrap: BaseFont.TEXT_WRAP.TRUNCATE,\n  verticalAlign: BaseFont.VERTICAL_ALIGN.center,\n  direction: BaseFont.TEXT_DIRECTION.HORIZONTAL,\n};\nBaseFont.DEFAULT_RICH_ITEM_ATTR = {\n  name: 'Arial',\n  size: 14,\n  color: 'rgb(0,0,0)',\n  bold: false,\n  italic: false,\n  strikethrough: false,\n  underline: false,\n};\n\nexport {\n  BaseFont,\n};\n","import { BaseFont } from '../../../draw/font/BaseFont';\n\n/**\n *  CellFont\n *  @author jerry\n */\nclass CellFont {\n\n  /**\n   * CellFont\n   * @param align\n   * @param verticalAlign\n   * @param textWrap\n   * @param strikethrough\n   * @param underline\n   * @param color\n   * @param name\n   * @param size\n   * @param bold\n   * @param italic\n   * @param angle\n   * @param direction\n   * @param padding\n   */\n  constructor({\n    align = BaseFont.ALIGN.left,\n    verticalAlign = BaseFont.VERTICAL_ALIGN.center,\n    textWrap = BaseFont.TEXT_WRAP.TRUNCATE,\n    strikethrough = false,\n    underline = false,\n    color = 'rgb(0,0,0)',\n    name = 'Arial',\n    size = 14,\n    bold = false,\n    italic = false,\n    angle = 0,\n    direction = BaseFont.TEXT_DIRECTION.HORIZONTAL,\n    padding = 5,\n  }) {\n    this.align = align;\n    this.verticalAlign = verticalAlign;\n    this.textWrap = textWrap;\n    this.strikethrough = strikethrough;\n    this.underline = underline;\n    this.color = color;\n    this.name = name;\n    this.size = size;\n    this.bold = bold;\n    this.italic = italic;\n    this.direction = direction;\n    this.angle = angle;\n    this.padding = padding;\n  }\n\n  clone() {\n    const {\n      align,\n      verticalAlign,\n      textWrap,\n      strikethrough,\n      underline,\n      color,\n      name,\n      size,\n      bold,\n      italic,\n      angle,\n      direction,\n      padding,\n    } = this;\n    return new CellFont({\n      align,\n      verticalAlign,\n      textWrap,\n      strikethrough,\n      underline,\n      color,\n      name,\n      size,\n      bold,\n      italic,\n      angle,\n      direction,\n      padding,\n    });\n  }\n\n}\n\nCellFont.scaleAdapter = null;\n\nexport { CellFont };\n","/* global devicePixelRatio */\nimport { SheetUtils } from '../utils/SheetUtils';\n\nlet DPR = SheetUtils.inWorker() ? 1 : devicePixelRatio;\nlet LINE_WIDTH_LOW = Math.round(DPR);\nlet LINE_WIDTH_MEDIUM = LINE_WIDTH_LOW + 2;\nlet LINE_WIDTH_HIGH = LINE_WIDTH_MEDIUM + 2;\nlet LINE_PIXEL_OFFSET = LINE_WIDTH_LOW / 2;\n\nclass Base {\n\n  static srcPx(px) {\n    return px / this.dpr();\n  }\n\n  static cssPx(px) {\n    return this.srcPx(this.stylePx(px));\n  }\n\n  static stylePx(px) {\n    return this.round(px * this.dpr());\n  }\n\n  static round(val) {\n    return Math.round(val);\n  }\n\n  static ceil(val) {\n    return Math.ceil(val);\n  }\n\n  static trunc(val) {\n    return Math.trunc(val);\n  }\n\n  static radian(angle) {\n    return -angle * (Math.PI / 180);\n  }\n\n  static dpr() {\n    return DPR;\n  }\n\n  static refresh(val = 1) {\n    DPR = SheetUtils.inWorker() ? val : devicePixelRatio;\n    LINE_WIDTH_LOW = Math.round(DPR);\n    LINE_WIDTH_MEDIUM = LINE_WIDTH_LOW + 2;\n    LINE_WIDTH_HIGH = LINE_WIDTH_MEDIUM + 2;\n    LINE_PIXEL_OFFSET = LINE_WIDTH_LOW / 2;\n  }\n\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n  }\n\n  attr(options) {\n    for (const key in options) {\n      if (options.hasOwnProperty(key)) {\n        let value = options[key];\n        if (typeof value === 'string' || value instanceof String) {\n          value = value.trim();\n        }\n        if (this.ctx[key] !== value) {\n          this.ctx[key] = value;\n        }\n      }\n    }\n    return this;\n  }\n\n  resize(width, height) {\n    const { canvas } = this;\n    canvas.width = Base.stylePx(width);\n    canvas.height = Base.stylePx(height);\n    canvas.style.width = `${canvas.width / Base.dpr()}px`;\n    canvas.style.height = `${canvas.height / Base.dpr()}px`;\n    return this;\n  }\n\n}\n\nclass Wrapping extends Base {\n\n  constructor(canvas) {\n    super(canvas);\n    this.dash = [];\n  }\n\n  beginPath() {\n    const { ctx } = this;\n    ctx.beginPath();\n    return this;\n  }\n\n  measureText(text) {\n    const { ctx } = this;\n    return ctx.measureText(text);\n  }\n\n  save() {\n    const { ctx } = this;\n    ctx.save();\n    return this;\n  }\n\n  restore() {\n    const { ctx } = this;\n    ctx.restore();\n    return this;\n  }\n\n  fill() {\n    const { ctx } = this;\n    ctx.fill();\n    return this;\n  }\n\n  clip() {\n    const { ctx } = this;\n    ctx.clip();\n    return this;\n  }\n\n  setLineDash(dash = []) {\n    const { ctx } = this;\n    this.dash = dash;\n    ctx.setLineDash(dash);\n    return this;\n  }\n\n  scale(x, y) {\n    const { ctx } = this;\n    ctx.scale(x, y);\n    return this;\n  }\n\n  translate(x, y) {\n    const { ctx } = this;\n    ctx.translate(x, y);\n    return this;\n  }\n\n  rotate(deg) {\n    const { ctx } = this;\n    ctx.rotate(deg);\n    return this;\n  }\n\n}\n\nclass Extends extends Wrapping {\n\n  polyStroke(interpolation = xys => xys, ...xys) {\n    const { ctx } = this;\n    if (xys.length > 1) {\n      this.beginPath();\n      const [x, y] = interpolation(xys[0]);\n      ctx.moveTo(x, y);\n      for (let i = 1, len = xys.length; i < len; i += 1) {\n        const [x, y] = interpolation(xys[i]);\n        ctx.lineTo(x, y);\n      }\n      ctx.stroke();\n    }\n  }\n\n  polyInFill(interpolation = xys => xys, ...xys) {\n    const { ctx } = this;\n    if (xys.length > 1) {\n      this.beginPath();\n      const [x, y] = interpolation(xys[0]);\n      ctx.moveTo(x, y);\n      for (let i = 1, len = xys.length; i < len; i += 1) {\n        const [x, y] = interpolation(xys[i]);\n        ctx.lineTo(x, y);\n      }\n      ctx.fill();\n    }\n  }\n\n  fullRect() {\n    const { canvas } = this;\n    const { width, height } = canvas;\n    this.ctx.fillRect(0, 0, width, height);\n    return this;\n  }\n\n  rotate(angle) {\n    super.rotate(Base.radian(angle));\n    return this;\n  }\n\n}\n\nclass Position extends Extends {\n\n  constructor(canvas) {\n    super(canvas);\n    this.offsetX = 0;\n    this.offsetY = 0;\n  }\n\n  offset(x, y) {\n    this.offsetX = x;\n    this.offsetY = y;\n  }\n\n  getOffsetX() {\n    return this.offsetX;\n  }\n\n  getOffsetY() {\n    return this.offsetY;\n  }\n\n  fillText() {\n    throw TypeError('child impl');\n  }\n\n  fillRect() {\n    throw TypeError('child impl');\n  }\n\n  rect() {\n    throw TypeError('child impl');\n  }\n\n  drawImage() {\n    throw TypeError('child impl');\n  }\n\n}\n\nclass BaseLine extends Position {\n\n  line(...xys) {\n    this.polyStroke((xys) => {\n      const [x, y] = xys;\n      return [this.linePx(Base.round(x + this.getOffsetX())),\n        this.linePx(Base.round(y + this.getOffsetY()))];\n    }, ...xys);\n    return this;\n  }\n\n  linePx(pixel) {\n    const { ctx } = this;\n    const {\n      lineWidth,\n    } = ctx;\n    return lineWidth % 2 === 0\n      ? pixel : pixel - 0.5;\n  }\n\n}\n\nclass CorsLine extends BaseLine {\n\n  static offsetToLineInside(val) {\n    return LINE_WIDTH_LOW > 1\n      ? val - LINE_PIXEL_OFFSET\n      : val - LINE_WIDTH_LOW;\n  }\n\n  static getLineWidthTypePx(type) {\n    switch (type) {\n      case CorsLine.LINE_WIDTH_TYPE.medium:\n        return LINE_WIDTH_MEDIUM;\n      case CorsLine.LINE_WIDTH_TYPE.low:\n        return LINE_WIDTH_LOW;\n      case CorsLine.LINE_WIDTH_TYPE.high:\n        return LINE_WIDTH_HIGH;\n    }\n    return 0;\n  }\n\n  constructor(canvas) {\n    super(canvas);\n    this.lineWidthType = CorsLine.LINE_WIDTH_TYPE.low;\n    this.lineColor = 'rgb(0,0,0)';\n  }\n\n  corsLine([sx, sy], [ex, ey]) {\n    const {\n      lineWidthType, lineColor,\n    } = this;\n    let lineWidth = LINE_WIDTH_LOW;\n    switch (lineWidthType) {\n      case CorsLine.LINE_WIDTH_TYPE.medium:\n        lineWidth = LINE_WIDTH_MEDIUM;\n        break;\n      case CorsLine.LINE_WIDTH_TYPE.low:\n        lineWidth = LINE_WIDTH_LOW;\n        break;\n      case CorsLine.LINE_WIDTH_TYPE.high:\n        lineWidth = LINE_WIDTH_HIGH;\n        break;\n    }\n    this.attr({\n      strokeStyle: lineColor,\n      lineWidth,\n    });\n    this.polyStroke((xys) => {\n      const [x, y] = xys;\n      return [\n        Base.round(x + this.getOffsetX()) - LINE_PIXEL_OFFSET,\n        Base.round(y + this.getOffsetY()) - LINE_PIXEL_OFFSET,\n      ];\n    }, [sx, sy], [ex, ey]);\n  }\n\n  setLineColor(color) {\n    this.lineColor = color;\n  }\n\n  setLineWidthType(type) {\n    this.lineWidthType = type;\n  }\n\n  horizonLine([sx, sy], [ex, ey]) {\n    if (sy !== ey) {\n      throw new TypeError('Error Horizon Line');\n    }\n    this.corsLine([sx, sy], [ex, ey]);\n  }\n\n  verticalLine([sx, sy], [ex, ey]) {\n    if (sx !== ex) {\n      throw new TypeError('Error Vertical Line');\n    }\n    this.corsLine([sx, sy], [ex, ey]);\n  }\n\n}\nCorsLine.LINE_WIDTH_TYPE = {\n  low: 'low',\n  medium: 'medium',\n  high: 'high',\n};\n\nclass XDraw extends CorsLine {\n\n  fillText(text, x, y) {\n    x += this.getOffsetX();\n    y += this.getOffsetY();\n    this.ctx.fillText(text, XDraw.round(x), XDraw.round(y));\n    return this;\n  }\n\n  fillPath(path) {\n    this.polyInFill((xys) => {\n      const { x, y } = xys;\n      return [Base.round(x + this.getOffsetX()), Base.round(y + this.getOffsetY())];\n    }, ...path.points);\n    return this;\n  }\n\n  fillRect(x, y, w, h) {\n    x += this.getOffsetX();\n    y += this.getOffsetY();\n    this.ctx.fillRect(XDraw.round(x), XDraw.round(y),\n      XDraw.round(w), XDraw.round(h));\n    return this;\n  }\n\n  rect(x, y, w, h) {\n    x += this.getOffsetX();\n    y += this.getOffsetY();\n    this.ctx.rect(XDraw.round(x), XDraw.round(y),\n      XDraw.round(w), XDraw.round(h));\n    return this;\n  }\n\n  copyImage(sx, sy, sw, sh, tx, ty, tw, th) {\n    const { ctx } = this;\n    tx += this.getOffsetX();\n    sx += this.getOffsetX();\n    ty += this.getOffsetY();\n    sy += this.getOffsetY();\n    ctx.drawImage(this.canvas,\n      XDraw.round(sx), XDraw.round(sy),\n      XDraw.round(sw), XDraw.round(sh),\n      XDraw.round(tx), XDraw.round(ty),\n      XDraw.round(tw), XDraw.round(th));\n    return this;\n  }\n\n  drawImage(el, sx, sy, sw, sh, tx, ty, tw, th) {\n    const { ctx } = this;\n    tx += this.getOffsetX();\n    ty += this.getOffsetY();\n    ctx.drawImage(el,\n      XDraw.round(sx), XDraw.round(sy),\n      XDraw.round(sw), XDraw.round(sh),\n      XDraw.round(tx), XDraw.round(ty),\n      XDraw.round(tw), XDraw.round(th));\n    return this;\n  }\n\n}\n\nexport {\n  XDraw,\n};\n","import { SheetUtils } from '../utils/SheetUtils';\nimport { XDraw } from './XDraw';\n\nconst LINE_TYPE = {\n  SOLID_LINE: 0,\n  DOTTED_LINE: 1,\n  POINT_LINE: 2,\n  DOUBLE_LINE: 3,\n};\n\nclass SolidLine {\n\n  constructor(draw, attr) {\n    this.draw = draw;\n    SheetUtils.copy(this, {\n      color: 'rgb(0,0,0)',\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\n    }, attr);\n  }\n\n  setWidthType(widthType) {\n    this.widthType = widthType;\n  }\n\n  setColor(color) {\n    this.color = color;\n  }\n\n  horizonLine(sx, sy, ex, ey) {\n    const { draw } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash([]);\n    draw.horizonLine([sx, sy], [ex, ey]);\n  }\n\n  verticalLine(sx, sy, ex, ey) {\n    const { draw } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash([]);\n    draw.verticalLine([sx, sy], [ex, ey]);\n  }\n\n  tiltingLine(sx, sy, ex, ey) {\n    const { draw } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash([]);\n    draw.corsLine([sx, sy], [ex, ey]);\n  }\n\n}\n\nclass DottedLine {\n\n  constructor(draw, attr) {\n    this.draw = draw;\n    SheetUtils.copy(this, {\n      color: 'rgb(0,0,0)',\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\n      dash: [5],\n    }, attr);\n  }\n\n  setWidthType(widthType) {\n    this.widthType = widthType;\n  }\n\n  setColor(color) {\n    this.color = color;\n  }\n\n  horizonLine(sx, sy, ex, ey) {\n    const { draw, dash } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash(dash);\n    draw.horizonLine([sx, sy], [ex, ey]);\n  }\n\n  verticalLine(sx, sy, ex, ey) {\n    const { draw, dash } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash(dash);\n    draw.verticalLine([sx, sy], [ex, ey]);\n  }\n\n  tiltingLine(sx, sy, ex, ey) {\n    const { draw, dash } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash(dash);\n    draw.corsLine([sx, sy], [ex, ey]);\n  }\n\n}\n\nclass DoubleLine {\n\n  constructor(draw, attr) {\n    this.draw = draw;\n    SheetUtils.copy(this, {\n      color: 'rgb(0,0,0)',\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\n      padding: 1,\n      spacing: DoubleLine.spacing,\n      leftShow: () => false,\n      topShow: () => false,\n      rightShow: () => false,\n      bottomShow: () => false,\n      iFMerge: () => false,\n      iFMergeFirstRow: () => false,\n      iFMergeLastRow: () => false,\n      iFMergeFirstCol: () => false,\n      iFMergeLastCol: () => false,\n    }, attr);\n  }\n\n  setWidthType(widthType) {\n    this.widthType = widthType;\n  }\n\n  setColor(color) {\n    this.color = color;\n  }\n\n  handleExternal(sx, sy, ex, ey, row, col, pos) {\n    const external = {};\n    const { leftShow, topShow, rightShow, bottomShow } = this;\n    const { iFMerge, iFMergeFirstRow, iFMergeLastRow, iFMergeFirstCol, iFMergeLastCol } = this;\n    const { spacing } = this;\n    let ifMerge = null;\n    let firstRow = null;\n    let lastRow = null;\n    let firstCol = null;\n    let lastCol = null;\n    switch (pos) {\n      case 'left':\n        ifMerge = iFMerge(row, col - 1);\n        if (ifMerge) {\n          firstRow = iFMergeFirstRow(row, col - 1);\n          lastRow = iFMergeLastRow(row, col - 1);\n          firstCol = iFMergeFirstCol(row, col - 1);\n          lastCol = iFMergeLastCol(row, col - 1);\n        }\n        break;\n      case 'top':\n        ifMerge = iFMerge(row - 1, col);\n        if (ifMerge) {\n          firstRow = iFMergeFirstRow(row - 1, col);\n          lastRow = iFMergeLastRow(row - 1, col);\n          firstCol = iFMergeFirstCol(row - 1, col);\n          lastCol = iFMergeLastCol(row - 1, col);\n        }\n        break;\n      case 'right':\n        ifMerge = iFMerge(row, col + 1);\n        if (ifMerge) {\n          firstRow = iFMergeFirstRow(row, col + 1);\n          lastRow = iFMergeLastRow(row, col + 1);\n          firstCol = iFMergeFirstCol(row, col + 1);\n          lastCol = iFMergeLastCol(row, col + 1);\n        }\n        break;\n      case 'bottom':\n        ifMerge = iFMerge(row + 1, col);\n        if (ifMerge) {\n          firstRow = iFMergeFirstRow(row + 1, col);\n          lastRow = iFMergeLastRow(row + 1, col);\n          firstCol = iFMergeFirstCol(row + 1, col);\n          lastCol = iFMergeLastCol(row + 1, col);\n        }\n        break;\n      default: break;\n    }\n    if (ifMerge) {\n      switch (pos) {\n        case 'left': {\n          external.sx = sx - spacing;\n          external.ex = ex - spacing;\n          // 检查顶边和上底边及左上角底边及左顶边\n          const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\n          const sTop = topShow(row, col);\n          const sBottom = bottomShow(row - 1, col);\n          external.sy = sy;\n          if (sTop || sBottom) external.sy = sy - spacing;\n          if (sTopLeftCorner && firstRow) external.sy = sy + spacing;\n          // 检查底边和下顶边及左下角顶边和左底边\n          const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\n          const eBottom = bottomShow(row, col);\n          const eTop = topShow(row + 1, col);\n          external.ey = ey;\n          if (eBottom || eTop) external.ey = ey + spacing;\n          if (eBottomLeftCorner && lastRow) external.ey = ey - spacing;\n          break;\n        }\n        case 'top': {\n          external.sy = sy - spacing;\n          external.ey = ey - spacing;\n          // 检查左边和左右边及左上角右边及上左边\n          const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\n          const sLeft = leftShow(row, col);\n          const sRight = rightShow(row, col - 1);\n          external.sx = sx;\n          if (sLeft || sRight) external.sx = sx - spacing;\n          if (sTopLeftCorner && firstCol) external.sx = sx + spacing;\n          // 检查右边和右左边及右上角左边及上右边\n          const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\n          const eRight = rightShow(row, col);\n          const eLeft = leftShow(row, col + 1);\n          external.ex = ex;\n          if (eRight || eLeft) external.ex = ex + spacing;\n          if (eTopRightCorner && lastCol) external.ex = ex - spacing;\n          break;\n        }\n        case 'right': {\n          external.sx = sx + spacing;\n          external.ex = ex + spacing;\n          // 检查顶边和上底边及右上角底边及右顶边\n          const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\n          const sTop = topShow(row, col);\n          const sBottom = bottomShow(row - 1, col);\n          external.sy = sy;\n          if (sTop || sBottom) external.sy = sy - spacing;\n          if (sTopRightCorner && firstRow) external.sy = sy + spacing;\n          // 检查底边和下顶边及右下角顶边及右底边\n          const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\n          const eBottom = bottomShow(row, col);\n          const eTop = topShow(row + 1, col);\n          external.ey = ey;\n          if (eBottom || eTop) external.ey = ey + spacing;\n          if (eBottomRightCorner && lastRow) external.ey = ey - spacing;\n          break;\n        }\n        case 'bottom': {\n          external.sy = sy + spacing;\n          external.ey = ey + spacing;\n          // 检查左边和左右边及左下角右边及下左边\n          const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\n          const sLeft = leftShow(row, col);\n          const sRight = rightShow(row, col - 1);\n          external.sx = sx;\n          if (sLeft || sRight) external.sx = sx - spacing;\n          if (sBottomLeftCorner && firstCol) external.sx = sx + spacing;\n          // 检查右边和右左边及右下角左边及下右边\n          const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\n          const eRight = rightShow(row, col);\n          const eLeft = leftShow(row, col + 1);\n          external.ex = ex;\n          if (eRight || eLeft) external.ex = ex + spacing;\n          if (eBottomRightCorner && lastCol) external.ex = ex - spacing;\n          break;\n        }\n        default: break;\n      }\n      return external;\n    }\n    switch (pos) {\n      case 'left': {\n        external.sx = sx - spacing;\n        external.ex = ex - spacing;\n        // 检查顶边和上底边及左上角底边及左顶边\n        const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\n        const sTop = topShow(row, col);\n        const sBottom = bottomShow(row - 1, col);\n        external.sy = sy;\n        if (sTop || sBottom) external.sy = sy - spacing;\n        if (sTopLeftCorner) external.sy = sy + spacing;\n        // 检查底边和下顶边及左下角顶边和左底边\n        const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\n        const eBottom = bottomShow(row, col);\n        const eTop = topShow(row + 1, col);\n        external.ey = ey;\n        if (eBottom || eTop) external.ey = ey + spacing;\n        if (eBottomLeftCorner) external.ey = ey - spacing;\n        break;\n      }\n      case 'top': {\n        external.sy = sy - spacing;\n        external.ey = ey - spacing;\n        // 检查左边和左右边及左上角右边及上左边\n        const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\n        const sLeft = leftShow(row, col);\n        const sRight = rightShow(row, col - 1);\n        external.sx = sx;\n        if (sLeft || sRight) external.sx = sx - spacing;\n        if (sTopLeftCorner) external.sx = sx + spacing;\n        // 检查右边和右左边及右上角左边及上右边\n        const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\n        const eRight = rightShow(row, col);\n        const eLeft = leftShow(row, col + 1);\n        external.ex = ex;\n        if (eRight || eLeft) external.ex = ex + spacing;\n        if (eTopRightCorner) external.ex = ex - spacing;\n        break;\n      }\n      case 'right': {\n        external.sx = sx + spacing;\n        external.ex = ex + spacing;\n        // 检查顶边和上底边及右上角底边及右顶边\n        const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\n        const sTop = topShow(row, col);\n        const sBottom = bottomShow(row - 1, col);\n        external.sy = sy;\n        if (sTop || sBottom) external.sy = sy - spacing;\n        if (sTopRightCorner) external.sy = sy + spacing;\n        // 检查底边和下顶边及右下角顶边及右底边\n        const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\n        const eBottom = bottomShow(row, col);\n        const eTop = topShow(row + 1, col);\n        external.ey = ey;\n        if (eBottom || eTop) external.ey = ey + spacing;\n        if (eBottomRightCorner) external.ey = ey - spacing;\n        break;\n      }\n      case 'bottom': {\n        external.sy = sy + spacing;\n        external.ey = ey + spacing;\n        // 检查左边和左右边及左下角右边及下左边\n        const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\n        const sLeft = leftShow(row, col);\n        const sRight = rightShow(row, col - 1);\n        external.sx = sx;\n        if (sLeft || sRight) external.sx = sx - spacing;\n        if (sBottomLeftCorner) external.sx = sx + spacing;\n        // 检查右边和右左边及右下角左边及下右边\n        const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\n        const eRight = rightShow(row, col);\n        const eLeft = leftShow(row, col + 1);\n        external.ex = ex;\n        if (eRight || eLeft) external.ex = ex + spacing;\n        if (eBottomRightCorner) external.ex = ex - spacing;\n        break;\n      }\n      default: break;\n    }\n    return external;\n  }\n\n  handleInternal(sx, sy, ex, ey, row, col, pos) {\n    const internal = {};\n    const { leftShow, topShow, rightShow, bottomShow } = this;\n    const { iFMerge, iFMergeFirstRow, iFMergeLastRow, iFMergeFirstCol, iFMergeLastCol } = this;\n    const { spacing } = this;\n    const ifMerge = iFMerge(row, col);\n    // merge\n    if (ifMerge) {\n      const firstRow = iFMergeFirstRow(row, col);\n      const lastRow = iFMergeLastRow(row, col);\n      const firstCol = iFMergeFirstCol(row, col);\n      const lastCol = iFMergeLastCol(row, col);\n      switch (pos) {\n        case 'left': {\n          internal.sx = sx + spacing;\n          internal.ex = ex + spacing;\n          // 检查顶边和上底边及左上角底边及左顶边\n          const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\n          const sTop = topShow(row, col);\n          const sBottom = bottomShow(row - 1, col);\n          internal.sy = sy;\n          if (sTopLeftCorner) internal.sy = sy - spacing;\n          if ((sTop || sBottom) && firstRow) internal.sy = sy + spacing;\n          // 检查底边和下顶边及左下角顶边和左底边\n          const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\n          const eBottom = bottomShow(row, col);\n          const eTop = topShow(row + 1, col);\n          internal.ey = ey;\n          if (eBottomLeftCorner) internal.ey = ey + spacing;\n          if ((eBottom || eTop) && lastRow) internal.ey = ey - spacing;\n          break;\n        }\n        case 'top': {\n          internal.sy = sy + spacing;\n          internal.ey = ey + spacing;\n          // 检查左边和左右边及左上角右边及上左边\n          const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\n          const sLeft = leftShow(row, col);\n          const sRight = rightShow(row, col - 1);\n          internal.sx = sx;\n          if (sTopLeftCorner) internal.sx = sx - spacing;\n          if ((sLeft || sRight) && firstCol) internal.sx = sx + spacing;\n          // 检查右边和右左边及右上角左边及上右边\n          const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\n          const eRight = rightShow(row, col);\n          const eLeft = leftShow(row, col + 1);\n          internal.ex = ex;\n          if (eTopRightCorner) internal.ex = ex + spacing;\n          if ((eRight || eLeft) && lastCol) internal.ex = ex - spacing;\n          break;\n        }\n        case 'right': {\n          internal.sx = sx - spacing;\n          internal.ex = ex - spacing;\n          // 检查顶边和上底边及右上角底边及右上边\n          const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\n          const sTop = topShow(row, col);\n          const sBottom = bottomShow(row - 1, col);\n          internal.sy = sy;\n          if (sTopRightCorner) internal.sy = sy - spacing;\n          if ((sTop || sBottom) && firstRow) internal.sy = sy + spacing;\n          // 检查底边和下顶边右下角顶边及右下边\n          const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\n          const eBottom = bottomShow(row, col);\n          const eTop = topShow(row + 1, col);\n          internal.ey = ey;\n          if (eBottomRightCorner) internal.ey = ey + spacing;\n          if ((eBottom || eTop) && lastRow) internal.ey = ey - spacing;\n          break;\n        }\n        case 'bottom': {\n          internal.sy = sy - spacing;\n          internal.ey = ey - spacing;\n          // 检查左边和左右边及左下角右边及下左边\n          const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\n          const sLeft = leftShow(row, col);\n          const sRight = rightShow(row, col - 1);\n          internal.sx = sx;\n          if (sBottomLeftCorner) internal.sx = sx - spacing;\n          if ((sLeft || sRight) && firstCol) internal.sx = sx + spacing;\n          // 检查右边和右左边及右下角左边及下右边\n          const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\n          const eRight = rightShow(row, col);\n          const eLeft = leftShow(row, col + 1);\n          internal.ex = ex;\n          if (eBottomRightCorner) internal.ex = ex + spacing;\n          if ((eRight || eLeft) && lastCol) internal.ex = ex - spacing;\n          break;\n        }\n        default: break;\n      }\n      return internal;\n    }\n    switch (pos) {\n      case 'left': {\n        internal.sx = sx + spacing;\n        internal.ex = ex + spacing;\n        // 检查顶边和上底边及左上角底边及左顶边\n        const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\n        const sTop = topShow(row, col);\n        const sBottom = bottomShow(row - 1, col);\n        internal.sy = sy;\n        if (sTopLeftCorner) internal.sy = sy - spacing;\n        if (sTop || sBottom) internal.sy = sy + spacing;\n        // 检查底边和下顶边及左下角顶边和左底边\n        const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\n        const eBottom = bottomShow(row, col);\n        const eTop = topShow(row + 1, col);\n        internal.ey = ey;\n        if (eBottomLeftCorner) internal.ey = ey + spacing;\n        if (eBottom || eTop) internal.ey = ey - spacing;\n        break;\n      }\n      case 'top': {\n        internal.sy = sy + spacing;\n        internal.ey = ey + spacing;\n        // 检查左边和左右边及左上角右边及上左边\n        const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\n        const sLeft = leftShow(row, col);\n        const sRight = rightShow(row, col - 1);\n        internal.sx = sx;\n        if (sTopLeftCorner) internal.sx = sx - spacing;\n        if (sLeft || sRight) internal.sx = sx + spacing;\n        // 检查右边和右左边及右上角左边及上右边\n        const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\n        const eRight = rightShow(row, col);\n        const eLeft = leftShow(row, col + 1);\n        internal.ex = ex;\n        if (eTopRightCorner) internal.ex = ex + spacing;\n        if (eRight || eLeft) internal.ex = ex - spacing;\n        break;\n      }\n      case 'right': {\n        internal.sx = sx - spacing;\n        internal.ex = ex - spacing;\n        // 检查顶边和上底边及右上角底边及右上边\n        const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\n        const sTop = topShow(row, col);\n        const sBottom = bottomShow(row - 1, col);\n        internal.sy = sy;\n        if (sTopRightCorner) internal.sy = sy - spacing;\n        if (sTop || sBottom) internal.sy = sy + spacing;\n        // 检查底边和下顶边右下角顶边及右下边\n        const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\n        const eBottom = bottomShow(row, col);\n        const eTop = topShow(row + 1, col);\n        internal.ey = ey;\n        if (eBottomRightCorner) internal.ey = ey + spacing;\n        if (eBottom || eTop) internal.ey = ey - spacing;\n        break;\n      }\n      case 'bottom': {\n        internal.sy = sy - spacing;\n        internal.ey = ey - spacing;\n        // 检查左边和左右边及左下角右边及下左边\n        const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\n        const sLeft = leftShow(row, col);\n        const sRight = rightShow(row, col - 1);\n        internal.sx = sx;\n        if (sBottomLeftCorner) internal.sx = sx - spacing;\n        if (sLeft || sRight) internal.sx = sx + spacing;\n        // 检查右边和右左边及右下角左边及下右边\n        const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\n        const eRight = rightShow(row, col);\n        const eLeft = leftShow(row, col + 1);\n        internal.ex = ex;\n        if (eBottomRightCorner) internal.ex = ex + spacing;\n        if (eRight || eLeft) internal.ex = ex - spacing;\n        break;\n      }\n      default: break;\n    }\n    return internal;\n  }\n\n  horizonLine(sx, sy, ex, ey, row, col, pos) {\n    const { draw } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash([]);\n    const external = this.handleExternal(sx, sy, ex, ey, row, col, pos);\n    const internal = this.handleInternal(sx, sy, ex, ey, row, col, pos);\n    if (!SheetUtils.isEmptyObject(internal)) {\n      draw.horizonLine([internal.sx, internal.sy], [internal.ex, internal.ey]);\n    }\n    if (!SheetUtils.isEmptyObject(external)) {\n      draw.horizonLine([external.sx, external.sy], [external.ex, external.ey]);\n    }\n  }\n\n  verticalLine(sx, sy, ex, ey, row, col, pos) {\n    const { draw } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash([]);\n    const external = this.handleExternal(sx, sy, ex, ey, row, col, pos);\n    const internal = this.handleInternal(sx, sy, ex, ey, row, col, pos);\n    if (!SheetUtils.isEmptyObject(internal)) {\n      draw.verticalLine([internal.sx, internal.sy], [internal.ex, internal.ey]);\n    }\n    if (!SheetUtils.isEmptyObject(external)) {\n      draw.verticalLine([external.sx, external.sy], [external.ex, external.ey]);\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  tiltingLine(sx, sy, ex, ey, row, col, pos) {\n    // TODO ..\n    // ...\n  }\n\n}\nDoubleLine.spacing = XDraw.dpr() >= 2 ? 3 : 2;\n\nclass Line {\n\n  constructor(draw, attr = {}) {\n    this.widthType = XDraw.LINE_WIDTH_TYPE.low;\n    this.type = LINE_TYPE.SOLID_LINE;\n    this.solidLine = new SolidLine(draw, SheetUtils.copy({}, attr));\n    this.dottedLine = new DottedLine(draw, SheetUtils.copy({\n      dash: [5],\n    }, attr));\n    this.pointLine = new DottedLine(draw, SheetUtils.copy({\n      dash: [2, 2],\n    }, attr));\n    this.doubleLine = new DoubleLine(draw, SheetUtils.copy({}, attr));\n  }\n\n  setWidthType(widthType) {\n    if (widthType) {\n      if (this.type === LINE_TYPE.SOLID_LINE) {\n        this.solidLine.setWidthType(widthType);\n      }\n    }\n  }\n\n  setColor(color) {\n    if (color) {\n      this.solidLine.setColor(color);\n      this.dottedLine.setColor(color);\n      this.pointLine.setColor(color);\n      this.doubleLine.setColor(color);\n    }\n  }\n\n  setType(type) {\n    this.type = type;\n  }\n\n  horizonLine(sx, sy, ex, ey, row, col, pos) {\n    const {\n      type,\n      solidLine,\n      dottedLine,\n      pointLine,\n      doubleLine,\n    } = this;\n    switch (type) {\n      case LINE_TYPE.SOLID_LINE:\n        solidLine.horizonLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.DOTTED_LINE:\n        dottedLine.horizonLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.POINT_LINE:\n        pointLine.horizonLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.DOUBLE_LINE:\n        doubleLine.horizonLine(sx, sy, ex, ey, row, col, pos);\n        break;\n    }\n  }\n\n  verticalLine(sx, sy, ex, ey, row, col, pos) {\n    const {\n      type,\n      solidLine,\n      dottedLine,\n      pointLine,\n      doubleLine,\n    } = this;\n    switch (type) {\n      case LINE_TYPE.SOLID_LINE:\n        solidLine.verticalLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.DOTTED_LINE:\n        dottedLine.verticalLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.POINT_LINE:\n        pointLine.verticalLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.DOUBLE_LINE:\n        doubleLine.verticalLine(sx, sy, ex, ey, row, col, pos);\n        break;\n    }\n  }\n\n  tiltingLine(sx, sy, ex, ey, row, col, pos) {\n    const {\n      type,\n      solidLine,\n      dottedLine,\n      pointLine,\n      doubleLine,\n    } = this;\n    switch (type) {\n      case LINE_TYPE.SOLID_LINE:\n        solidLine.tiltingLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.DOTTED_LINE:\n        dottedLine.tiltingLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.POINT_LINE:\n        pointLine.tiltingLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.DOUBLE_LINE:\n        doubleLine.tiltingLine(sx, sy, ex, ey, row, col, pos);\n        break;\n    }\n  }\n\n}\n\nexport {\n  Line, LINE_TYPE, SolidLine,\n};\n","import { LINE_TYPE } from '../../../draw/Line';\nimport { SheetUtils } from '../../../utils/SheetUtils';\nimport { XDraw } from '../../../draw/XDraw';\n\nlet zIndexID = 0;\n\n/**\n * Border\n * @author jerry\n */\nclass Border {\n\n  static getZIndex() {\n    zIndexID += 1;\n    return zIndexID;\n  }\n\n  /**\n   * Border\n   * @param widthType\n   * @param width\n   * @param color\n   * @param zIndex\n   * @param display\n   * @param type\n   */\n  constructor({\n    widthType = XDraw.LINE_WIDTH_TYPE.low,\n    width = -1,\n    color = 'rgb(0,0,0)',\n    zIndex = 0,\n    display = false,\n    type = LINE_TYPE.SOLID_LINE,\n  }) {\n    this.zIndex = zIndex;\n    this.display = display;\n    this.color = color;\n    this.type = type;\n    if (width === 1) {\n      this.widthType = XDraw.LINE_WIDTH_TYPE.low;\n    } else if (width === 2) {\n      this.widthType = XDraw.LINE_WIDTH_TYPE.medium;\n    } else if (width === 3) {\n      this.widthType = XDraw.LINE_WIDTH_TYPE.high;\n    } else {\n      this.widthType = widthType;\n    }\n    if (zIndex > zIndexID) {\n      zIndexID = zIndex;\n    }\n  }\n\n  setWidthType(value) {\n    this.zIndex = Border.getZIndex();\n    this.widthType = value;\n  }\n\n  setColor(value) {\n    this.zIndex = Border.getZIndex();\n    this.color = value;\n  }\n\n  setDisplay(value) {\n    this.zIndex = Border.getZIndex();\n    this.display = value;\n  }\n\n  setType(value) {\n    this.zIndex = Border.getZIndex();\n    this.type = value;\n  }\n\n  setZIndex(value) {\n    this.zIndex = value;\n  }\n\n  priority(border) {\n    if (SheetUtils.isUnDef(border)) {\n      return -2;\n    }\n    const origin = this.zIndex;\n    const target = border.zIndex;\n    if (origin > target) {\n      return 1;\n    }\n    if (target > origin) {\n      return -1;\n    }\n    return 0;\n  }\n\n  clone() {\n    return new Border({\n      widthType: this.widthType,\n      color: this.color,\n      zIndex: this.zIndex,\n      type: this.type,\n      display: this.display,\n    });\n  }\n\n  equal(target) {\n    const widthType = this.widthType === target.widthType;\n    const color = this.color === target.color;\n    const type = this.type === target.type;\n    return color && widthType && type;\n  }\n\n}\n\nexport { Border };\n","import { Border } from './Border';\nimport { LINE_TYPE } from '../../../draw/Line';\n\n/**\n * CellBorder\n * @author jerry\n */\nclass CellBorder {\n\n  /**\n   * CellBorder\n   * @param time\n   * @param left\n   * @param top\n   * @param right\n   * @param bottom\n   */\n  constructor({\n    left = {},\n    bottom = {},\n    top = {},\n    right = {},\n  }) {\n    this.left = new Border(left);\n    this.bottom = new Border(bottom);\n    this.top = new Border(top);\n    this.right = new Border(right);\n  }\n\n  hasDouble() {\n    const { top, left, right, bottom } = this;\n    if (top.type === LINE_TYPE.DOUBLE_LINE) {\n      return true;\n    }\n    if (left.type === LINE_TYPE.DOUBLE_LINE) {\n      return true;\n    }\n    if (right.type === LINE_TYPE.DOUBLE_LINE) {\n      return true;\n    }\n    return bottom.type === LINE_TYPE.DOUBLE_LINE;\n  }\n\n  isDisplay() {\n    return this.left.display || this.top.display\n      || this.bottom.display || this.right.display;\n  }\n\n  setAllDisplay(display) {\n    this.setBDisplay(display);\n    this.setLDisplay(display);\n    this.setTDisplay(display);\n    this.setRDisplay(display);\n  }\n\n  setLDisplay(display) {\n    this.left.setDisplay(display);\n  }\n\n  setTDisplay(display) {\n    this.top.setDisplay(display);\n  }\n\n  setRDisplay(display) {\n    this.right.setDisplay(display);\n  }\n\n  setBDisplay(display) {\n    this.bottom.setDisplay(display);\n  }\n\n  setAllColor(color) {\n    this.setBColor(color);\n    this.setLColor(color);\n    this.setTColor(color);\n    this.setRColor(color);\n  }\n\n  setLColor(color) {\n    this.left.setColor(color);\n  }\n\n  setTColor(color) {\n    this.top.setColor(color);\n  }\n\n  setRColor(color) {\n    this.right.setColor(color);\n  }\n\n  setBColor(color) {\n    this.bottom.setColor(color);\n  }\n\n  setAllWidthType(widthType) {\n    this.setBWidthType(widthType);\n    this.setLWidthType(widthType);\n    this.setTWidthType(widthType);\n    this.setRWidthType(widthType);\n  }\n\n  setLWidthType(widthType) {\n    this.left.setWidthType(widthType);\n  }\n\n  setTWidthType(widthType) {\n    this.top.setWidthType(widthType);\n  }\n\n  setRWidthType(widthType) {\n    this.right.setWidthType(widthType);\n  }\n\n  setBWidthType(widthType) {\n    this.bottom.setWidthType(widthType);\n  }\n\n  setAllType(type) {\n    this.setBType(type);\n    this.setLType(type);\n    this.setTType(type);\n    this.setRType(type);\n  }\n\n  setLType(type) {\n    this.left.setType(type);\n  }\n\n  setTType(type) {\n    this.top.setType(type);\n  }\n\n  setRType(type) {\n    this.right.setType(type);\n  }\n\n  setBType(type) {\n    this.bottom.setType(type);\n  }\n\n  updateMaxIndex() {\n    const zIndex = Border.getZIndex();\n    this.left.setZIndex(zIndex);\n    this.bottom.setZIndex(zIndex);\n    this.top.setZIndex(zIndex);\n    this.right.setZIndex(zIndex);\n  }\n\n  clone() {\n    const { left, top, right, bottom } = this;\n    return new CellBorder({\n      left: left.clone(),\n      top: top.clone(),\n      right: right.clone(),\n      bottom: bottom.clone(),\n    });\n  }\n\n}\n\nexport { CellBorder };\n","class Rect {\n\n  /**\n   * Rect\n   * @param x\n   * @param y\n   * @param width\n   * @param height\n   */\n  constructor({\n    x, y, width, height,\n  }) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * 判断两个矩形是否不发生重合\n   * @param {Rect} other 区域\n   * @returns {boolean}\n   */\n  disjoint(other) {\n    return this.x > other.x + other.width\n      || this.y > this.y + other.height\n      || other.x > this.x + this.width\n      || other.y > this.y + this.height;\n  }\n\n  /**\n   * 扩展尺寸\n   * @param size\n   * @returns {Rect}\n   */\n  expandSize(size) {\n    this.width += size;\n    this.height += size;\n    return this;\n  }\n\n  /**\n   * 是否包含点\n   * @param x\n   * @param y\n   * @returns {boolean}\n   */\n  includePoint(x, y) {\n    return x >= this.x && x <= this.x + this.width\n      && y >= this.y && y <= this.y + this.height;\n  }\n\n  /**\n   * 是否包含矩形\n   * @param rect\n   * @returns {boolean|boolean}\n   */\n  includeRect(rect) {\n    const { x, y, width, height } = rect;\n    return this.x <= x && this.x + this.width >= x + width\n      && this.y <= y && this.y + this.height >= y + height;\n  }\n\n  /**\n   * 计算当前矩形在指定矩形内部的位置\n   * @param rect\n   * @returns {Rect}\n   */\n  inRectPosition(rect) {\n    return new Rect({\n      x: this.x - rect.x,\n      y: this.y - rect.y,\n      width: this.width,\n      height: this.height,\n    });\n  }\n\n  /**\n   * 复制\n   * @returns {Rect}\n   */\n  clone() {\n    const { x, y, width, height } = this;\n    return new Rect({ x, y, width, height });\n  }\n\n}\n\nexport { Rect };\n","\n/**\n * XIconOffset\n */\nclass XIconOffset {\n\n  /**\n   * XIconOffset\n   * @param x\n   * @param y\n   */\n  constructor({ x = 0, y = 0 } = {}) {\n    this.x = x;\n    this.y = y;\n  }\n\n}\n\nexport {\n  XIconOffset,\n};\n","class Crop {\n\n  constructor({\n    rect, draw, offset = 0,\n  }) {\n    this.rect = rect;\n    this.draw = draw;\n    this.offset = offset;\n  }\n\n  open() {\n    const {\n      rect, draw, offset,\n    } = this;\n    const {\n      x, y, width, height,\n    } = rect;\n    draw.save()\n      .rect(x, y, width + offset, height + offset)\n      .clip()\n      .beginPath();\n    return this;\n  }\n\n  close() {\n    const { draw } = this;\n    draw.restore();\n    return this;\n  }\n\n}\n\nexport { Crop };\n","/* global Image console */\nimport { SheetUtils } from '../../../utils/SheetUtils';\nimport { XDraw } from '../../../draw/XDraw';\nimport { Rect } from '../../../draw/Rect';\nimport { XIconOffset } from './XIconOffset';\nimport { Crop } from '../../../draw/Crop';\n\n/**\n * XIcon\n * @author jerry\n * @date 2020/10/20\n */\nclass XIcon {\n\n  /**\n   * 多图标初始化\n   * @param icons\n   * @returns {[]}\n   */\n  static newInstances(icons = []) {\n    const instances = [];\n    for (let i = 0; i < icons.length; i += 1) {\n      const icon = icons[i];\n      instances.push(new XIcon(icon));\n    }\n    return instances;\n  }\n\n  /**\n   * XIcon\n   * @param vertical\n   * @param horizontal\n   * @param type\n   * @param image\n   * @param focus\n   * @param height\n   * @param width\n   * @param color\n   * @param offset\n   * @param onDraw\n   * @param onLeave\n   * @param onMove\n   * @param onDown\n   * @param onEnter\n   */\n  constructor({\n    vertical = XIcon.ICON_VERTICAL.CENTER,\n    horizontal = XIcon.ICON_HORIZONTAL.RIGHT,\n    type = XIcon.ICON_TYPE.image,\n    image = SheetUtils.Nul,\n    iconFocus = null,\n    height = 16,\n    width = 16,\n    color = 'rgb(255,255,255)',\n    offset = { x: 0, y: 0 },\n    onDraw = () => {},\n    onLeave = () => {},\n    onMove = () => {},\n    onDown = () => {},\n    onEnter = () => {},\n  }) {\n    this.vertical = vertical;\n    this.horizontal = horizontal;\n    this.width = width;\n    this.height = height;\n    this.type = type;\n    this.image = image;\n    this.color = color;\n    this.iconFocus = iconFocus;\n    this.offset = new XIconOffset(offset);\n    this.onLeave = onLeave;\n    this.onMove = onMove;\n    this.onDraw = onDraw;\n    this.onDown = onDown;\n    this.onEnter = onEnter;\n    this.rect = null;\n  }\n\n  /**\n   * 计算绘制坐标\n   * @param rect\n   * @returns {{x: number, y: number}}\n   */\n  position(rect) {\n    // 图标信息\n    const iconHorizontal = this.horizontal;\n    const iconVertical = this.vertical;\n    const iconOffsetX = XDraw.stylePx(this.offset.x);\n    const iconOffsetY = XDraw.stylePx(this.offset.y);\n    const iconWidth = XDraw.stylePx(this.width);\n    const iconHeight = XDraw.stylePx(this.height);\n    // 矩形位置\n    const rectX = rect.x;\n    const rectY = rect.y;\n    const rectWidth = rect.width;\n    const rectHeight = rect.height;\n    // 计算位置\n    let px = 0;\n    let py = 0;\n    switch (iconHorizontal) {\n      case XIcon.ICON_HORIZONTAL.CENTER:\n        px = (rectX + rectWidth / 2) - (iconWidth / 2);\n        break;\n      case XIcon.ICON_HORIZONTAL.LEFT:\n        px = rectX;\n        break;\n      case XIcon.ICON_HORIZONTAL.RIGHT:\n        px = rectX + rectWidth - iconWidth;\n        break;\n    }\n    switch (iconVertical) {\n      case XIcon.ICON_VERTICAL.CENTER:\n        py = (rectY + rectHeight / 2) - (iconHeight / 2);\n        break;\n      case XIcon.ICON_VERTICAL.TOP:\n        py = rectY;\n        break;\n      case XIcon.ICON_VERTICAL.BOTTOM:\n        py = rectY + rectHeight - iconHeight;\n        break;\n    }\n    px += iconOffsetX;\n    py += iconOffsetY;\n    return new Rect({\n      x: px, y: py, width: iconWidth, height: iconHeight,\n    });\n  }\n\n  /**\n   * 加载图片信息\n   * @param async\n   * @param sync\n   */\n  loadImage({\n    load, sync,\n  }) {\n    const { image, type } = this;\n    switch (type) {\n      case XIcon.ICON_TYPE.image:\n        if (image instanceof Image) {\n          sync(image);\n        } else {\n          const loadImg = new Image();\n          loadImg.src = image;\n          if (loadImg.complete) {\n            this.image = loadImg;\n            sync(this.image);\n          } else {\n            loadImg.onload = () => {\n              this.image = loadImg;\n              load(loadImg);\n            };\n            loadImg.onerror = () => {\n              // eslint-disable-next-line no-console\n              console.error(`图片加载失败${image}`);\n            };\n          }\n        }\n        break;\n      case XIcon.ICON_TYPE.draw:\n        sync();\n        break;\n    }\n  }\n\n  /**\n   * 绘制小图标\n   * @param rect\n   * @param draw\n   */\n  drawIcon({\n    rect, draw,\n  }) {\n    const { type } = this;\n    this.rect = rect;\n    switch (type) {\n      case XIcon.ICON_TYPE.image:\n        this.drawImage({\n          rect, draw,\n        });\n        break;\n      case XIcon.ICON_TYPE.draw:\n        this.drawCustom({\n          rect, draw,\n        });\n        break;\n    }\n  }\n\n  /**\n   * 自定义绘制\n   * @param rect\n   * @param icon\n   * @param draw\n   */\n  drawCustom({\n    rect, draw,\n  }) {\n    this.onDraw({\n      rect, draw,\n    });\n  }\n\n  /**\n   * 绘制图片\n   * @param rect\n   * @param icon\n   * @param draw\n   */\n  drawImage({\n    rect, draw,\n  }) {\n    const image = this.image;\n    const color = this.color;\n    const positionRect = this.position(rect);\n    const {\n      x, y, width, height,\n    } = positionRect;\n    const include = rect.includeRect(positionRect);\n    const crop = new Crop({\n      rect, draw,\n    });\n    if (include === false) {\n      crop.open();\n    }\n    if (color) {\n      draw.attr({ fillStyle: color });\n      draw.fillRect(x, y, width, height);\n    }\n    draw.drawImage(image, 0, 0, image.width, image.height, x, y, width, height);\n    if (include === false) {\n      crop.close();\n    }\n  }\n\n  /**\n   * 事件处理\n   * @param type\n   * @param x\n   * @param y\n   * @param native\n   */\n  eventHandle({\n    type, x, y, native,\n  }) {\n    const { rect, iconFocus } = this;\n    if (rect) {\n      const position = this.position(rect);\n      const location = position.inRectPosition(rect);\n      const { activate } = iconFocus;\n      switch (type) {\n        case XIcon.ICON_EVENT_TYPE.MOUSE_DOWN:\n          if (location.includePoint(x, y)) {\n            iconFocus.setActivate(this);\n            this.onDown({\n              native, position,\n            });\n          }\n          break;\n        case XIcon.ICON_EVENT_TYPE.MOUSE_MOVE:\n          if (location.includePoint(x, y)) {\n            if (activate !== this) {\n              this.onEnter({\n                native, position,\n              });\n            }\n            iconFocus.setActivate(this);\n            this.onMove({\n              native, position,\n            });\n          } else if (activate) {\n            iconFocus.setActivate(null);\n            this.onLeave({\n              native, position,\n            });\n          }\n          break;\n      }\n    }\n  }\n\n  /**\n   * 绘制回调\n   * @param callback\n   */\n  setOnDraw(callback) {\n    this.onDraw = callback;\n  }\n\n  /**\n   * 按下回调\n   * @param callback\n   */\n  setOnDown(callback) {\n    this.onDown = callback;\n  }\n\n  /**\n   * 移动回调\n   * @param callback\n   */\n  setOnMove(callback) {\n    this.onMove = callback;\n  }\n\n  /**\n   * 进入回调\n   * @param callback\n   */\n  setOnEnter(callback) {\n    this.onEnter = callback;\n  }\n\n  /**\n   * 离开回调\n   * @param callback\n   */\n  setOnLeave(callback) {\n    this.onLeave = callback;\n  }\n\n  /**\n   * 设置焦点元素\n   * @param iconFocus\n   */\n  setFocus(iconFocus) {\n    this.iconFocus = iconFocus;\n  }\n\n}\nXIcon.ICON_HORIZONTAL = {\n  LEFT: 0,\n  RIGHT: 1,\n  CENTER: 2,\n};\nXIcon.ICON_VERTICAL = {\n  TOP: 3,\n  BOTTOM: 4,\n  CENTER: 5,\n};\nXIcon.ICON_TYPE = {\n  image: 1,\n  custom: 2,\n};\nXIcon.ICON_EVENT_TYPE = {\n  MOUSE_DOWN: 1,\n  MOUSE_MOVE: 2,\n};\n\nexport { XIcon };\n","class DateUtils {\n\n  static dateFormat(fmt, date) {\n    if (!(date instanceof Date)) {\n      return date;\n    }\n    const o = {\n      'M+': date.getMonth() + 1,\n      'd+': date.getDate(),\n      'h+': date.getHours(),\n      'm+': date.getMinutes(),\n      's+': date.getSeconds(),\n      'q+': Math.floor((date.getMonth() + 3) / 3),\n      S: date.getMilliseconds(),\n    };\n    const reYear = /(y+)/;\n    const resultYear = reYear.exec(fmt);\n    if (resultYear) {\n      const yearFormatPart = resultYear[0];\n      const yearVal = (date.getFullYear().toString()).substr(4 - yearFormatPart.length);\n      fmt = fmt.replace(yearFormatPart, yearVal);\n    }\n    // eslint-disable-next-line guard-for-in,no-restricted-syntax\n    for (const k in o) {\n      const re = new RegExp(`(${k})`);\n      const res = re.exec(fmt);\n      if (res) {\n        const Val = o[k].toString();\n        const formatPart = res[0];\n        const replaceVal = (formatPart.length === 1) ? (Val) : ((`00${Val}`).substr(Val.length));\n        fmt = fmt.replace(formatPart, replaceVal);\n      }\n    }\n    return fmt;\n  }\n\n  static parse(text) {\n    let result = text;\n    if (result instanceof Date) {\n      return result;\n    }\n\n    result = DateUtils.parserToDate(text, 'yyyy/MM/dd');\n    if (result) {\n      return result;\n    }\n    result = DateUtils.parserToDate(text, 'MM/dd');\n    if (result) {\n      return result;\n    }\n    result = DateUtils.parserToDate(text, 'yyyy/MM/dd hh:mm:ss');\n    if (result) {\n      return result;\n    }\n\n    result = DateUtils.parserToDate(text, 'yyyy-MM-dd');\n    if (result) {\n      return result;\n    }\n    result = DateUtils.parserToDate(text, 'MM-dd');\n    if (result) {\n      return result;\n    }\n    result = DateUtils.parserToDate(text, 'yyyy-MM-dd hh:mm:ss');\n    if (result) {\n      return result;\n    }\n\n    result = DateUtils.parserToDate(text, 'hh:mm:ss');\n    if (result) {\n      return result;\n    }\n\n    result = DateUtils.parserToDate(text, 'yyyy年MM月');\n    if (result) {\n      return result;\n    }\n    result = DateUtils.parserToDate(text, 'MM月dd日');\n    if (result) {\n      return result;\n    }\n    result = DateUtils.parserToDate(text, 'yyyy年MM月dd日 hh:mm:ss');\n    if (result) {\n      return result;\n    }\n\n    return text;\n  }\n\n  static parserToDate(dateText, format) {\n    if (!dateText) {\n      return null;\n    }\n    const defaultVal = new Date('1970/01/01 00:00:00');\n    const o = [{\n      reg: 'y+',\n    }, {\n      reg: 'M+',\n    }, {\n      reg: 'd+',\n    }, {\n      reg: 'h+',\n    }, {\n      reg: 'm+',\n    }, {\n      reg: 's+',\n    }, {\n      reg: 'S',\n    }];\n    let year = defaultVal.getFullYear();\n    let month = defaultVal.getMonth() + 1;\n    let day = defaultVal.getDate();\n    let hours = defaultVal.getHours();\n    let minutes = defaultVal.getMinutes();\n    let seconds = defaultVal.getSeconds();\n    let milliseconds = defaultVal.getMilliseconds();\n    let index = 1;\n    for (let j = 0; j < format.length; j += 1) {\n      const oneChar = format[j];\n      for (let i = 0; i < o.length; i += 1) {\n        const onePart = o[i];\n        const onePartReg = onePart.reg;\n        if (onePartReg[0] === oneChar) {\n          if (!onePart.index) {\n            onePart.index = index;\n            index += 1;\n          }\n          break;\n        }\n      }\n    }\n    for (let i = 0; i < o.length; i += 1) {\n      const onePart = o[i];\n      const onePartReg = onePart.reg;\n      const re = new RegExp(`(${onePartReg})`);\n      const res = re.exec(format);\n      if (res) {\n        const formatPart = res[0];\n        const replaceVal = `([0-9]{1,${formatPart.length}})`;\n        // eslint-disable-next-line no-param-reassign\n        format = format.replace(formatPart, replaceVal);\n      }\n    }\n    const dataInfo = {};\n    const re = new RegExp(format);\n    const res = re.exec(dateText);\n    if (res) {\n      for (let i = 1; i < res.length; i += 1) {\n        dataInfo[i] = res[i];\n      }\n    } else {\n      return null;\n    }\n    if (o[0].index) {\n      const { index } = o[0];\n      year = dataInfo[index];\n    }\n    if (o[1].index) {\n      const { index } = o[1];\n      month = dataInfo[index];\n    }\n    if (o[2].index) {\n      const { index } = o[2];\n      day = dataInfo[index];\n    }\n    if (o[3].index) {\n      const { index } = o[3];\n      hours = dataInfo[index];\n    }\n    if (o[4].index) {\n      const { index } = o[4];\n      minutes = dataInfo[index];\n    }\n    if (o[5].index) {\n      const { index } = o[5];\n      seconds = dataInfo[index];\n    }\n    if (o[6].index) {\n      const { index } = o[6];\n      milliseconds = dataInfo[index];\n    }\n    return new Date(year, month - 1, day, hours, minutes, seconds, milliseconds);\n  }\n\n}\n\nexport { DateUtils };\n","import { SheetUtils } from '../../utils/SheetUtils';\nimport { DateUtils } from '../../utils/DateUtils';\n\nclass Format {\n\n  eNotation(value) {\n    if (SheetUtils.isNumber(value)) {\n      const number = SheetUtils.parseFloat(value);\n      return number.toExponential(2);\n    }\n    return value;\n  }\n\n  default(value) {\n    return value ? value.toString() : '';\n  }\n\n  text(value) {\n    return value;\n  }\n\n  decimal(value) {\n    if (SheetUtils.isNumber(value)) {\n      const indexOf = value.toString().indexOf('.');\n      if (indexOf !== -1) {\n        return value.toString().substring(0, indexOf + 3);\n      }\n      return `${value}.00`;\n    }\n    return value;\n  }\n\n  number(value) {\n    if (SheetUtils.isNumber(value)) {\n      return SheetUtils.parseFloat(value);\n    }\n    return value;\n  }\n\n  percentage(value) {\n    if (SheetUtils.isNumber(value)) {\n      return `${value}%`;\n    }\n    return value;\n  }\n\n  fraction(value) {\n    if (SheetUtils.isFraction(value)) {\n      const left = value.split('/')[0];\n      const right = value.split('/')[1];\n      return SheetUtils.parseInt(left) / SheetUtils.parseInt(right);\n    }\n    return value;\n  }\n\n  rmb(value) {\n    if (SheetUtils.isNumber(value)) {\n      return `￥${value}`;\n    }\n    return value;\n  }\n\n  hk(value) {\n    if (SheetUtils.isNumber(value)) {\n      return `HK${value}`;\n    }\n    return value;\n  }\n\n  time(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('hh:mm:ss', result);\n    }\n    return value;\n  }\n\n  date1(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('yyyy/MM/dd', result);\n    }\n    return value;\n  }\n\n  date2(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('MM月dd日', result);\n    }\n    return value;\n  }\n\n  date3(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('yyyy年MM月', result);\n    }\n    return value;\n  }\n\n  date4(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('yyyy年MM月dd日', result);\n    }\n    return value;\n  }\n\n  date5(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('yyyy/MM/dd hh:mm:ss', result);\n    }\n    return value;\n  }\n\n  dollar(value) {\n    if (SheetUtils.isNumber(value)) {\n      return `$${value}`;\n    }\n    return value;\n  }\n\n}\n\nconst format = new Format();\n\nexport default (type, value) => format[type](value);\n","import { SheetUtils } from '../../../utils/SheetUtils';\n\nclass RichFont {\n\n  constructor({\n    text, color, name, size,\n    italic, bold, underline,\n    strikethrough, scaleAdapter,\n  } = {}) {\n    this.text = text;\n    this.color = color;\n    this.name = name;\n    this.size = size;\n    this.italic = italic;\n    this.bold = bold;\n    this.strikethrough = strikethrough;\n    this.underline = underline;\n    this.scaleAdapter = scaleAdapter;\n  }\n\n  clone() {\n    const { text, color, name, size } = this;\n    const { italic, bold, underline } = this;\n    const { strikethrough, scaleAdapter } = this;\n    return new RichFont({\n      text, color, name, size, italic, bold, underline, strikethrough, scaleAdapter,\n    });\n  }\n\n  plain(option = v => v) {\n    return option(this.clone());\n  }\n\n  equals(other) {\n    if (SheetUtils.isUnDef(other)) {\n      return false;\n    }\n    if (other.text !== this.text) {\n      return false;\n    }\n    if (other.color !== this.color) {\n      return false;\n    }\n    if (other.name !== this.name) {\n      return false;\n    }\n    if (other.size !== this.size) {\n      return false;\n    }\n    if (other.italic !== this.italic) {\n      return false;\n    }\n    if (other.bold !== this.bold) {\n      return false;\n    }\n    if (other.strikethrough !== this.strikethrough) {\n      return false;\n    }\n    return other.underline === this.underline;\n  }\n\n}\n\nexport {\n  RichFont,\n};\n","import { RichFont } from './RichFont';\nimport { SheetUtils } from '../../../utils/SheetUtils';\n\nclass RichFonts {\n\n  constructor({\n    rich = [],\n  } = {}) {\n    this.rich = rich.map(font => new RichFont(font));\n  }\n\n  setRich(rich = []) {\n    this.rich = rich;\n  }\n\n  getRich() {\n    return this.rich;\n  }\n\n  clone() {\n    const rich = [];\n    this.rich.forEach((font) => {\n      rich.push(font.clone());\n    });\n    return new RichFonts({\n      rich,\n    });\n  }\n\n  plain(option) {\n    const result = [];\n    this.rich.forEach((font) => {\n      result.push(font.plain(option));\n    });\n    return result;\n  }\n\n  equals(other) {\n    if (SheetUtils.isUnDef(other)) {\n      return false;\n    }\n    if (other.rich.length !== this.rich.length) {\n      return false;\n    }\n    for (let i = 0; i < this.rich.length; i++) {\n      let item1 = this.rich[i];\n      let item2 = other.rich[i];\n      if (!item1.equals(item2)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n\nexport {\n  RichFonts,\n};\n","/**\n * 运行函数注册\n * @type {{}}\n */\nclass EvalFunctions {\n\n  /**\n   * EvalFunctions\n   */\n  constructor() {\n    this.functions = {};\n  }\n\n  /**\n   * 删除函数\n   * @param name\n   */\n  remove(name) {\n    delete this.functions[name];\n  }\n\n  /**\n   * 获取函数\n   * @param name\n   * @returns {*}\n   */\n  getFunction(name) {\n    return this.functions[name.toLocaleString()];\n  }\n\n  /**\n   * 注册函数\n   * @param name\n   * @param func\n   */\n  register(name, func) {\n    this.functions[name.toLocaleString()] = func;\n  }\n}\n\n/**\n * 函数注册\n * @type {EvalFunctions}\n */\nconst Functions = new EvalFunctions();\n\n/**\n * 指令序列\n */\nclass Assembly {\n\n  /**\n   * Assembly\n   */\n  constructor() {\n    this.assembly = '';\n  }\n\n  /**\n   * 获取指令详情\n   * @returns {string}\n   */\n  getInstruct() {\n    let { assembly } = this;\n    let flag = '\\r\\n';\n    while (assembly.endsWith(flag)) {\n      let { length } = assembly;\n      assembly = assembly.substring(0, length - flag.length);\n    }\n    return assembly;\n  }\n\n  /**\n   * 写入操作数\n   * @param value\n   */\n  writeOperand(value) {\n    this.assembly += `OPush ${value}\\r\\n`;\n  }\n\n  /**\n   * 写入运算符\n   * @param op\n   */\n  writeOperator(op) {\n    this.assembly += `${op}\\r\\n`;\n  }\n\n  /**\n   * 写入操作数\n   * @param value\n   */\n  writeString(value) {\n    this.assembly += `SPush ${value}\\r\\n`;\n  }\n\n  /**\n   * 写入操作数\n   * @param value\n   */\n  writeNumber(value) {\n    this.assembly += `NPush ${value}\\r\\n`;\n  }\n}\n\n/**\n * 词法分析\n */\nclass Tokenizer {\n\n  /**\n   * Tokenizer\n   * @param syntaxCheck\n   */\n  constructor({\n    syntaxCheck = true,\n  } = {}) {\n    this.syntaxCheck = syntaxCheck;\n  }\n\n  /**\n   * 词法分析\n   * @param input\n   * @returns {*[]}\n   */\n  lexical(input) {\n    let OPERATOR = /^(\\+|-|\\*|\\/|%|>|<|,|\\^|=|&|!|:|>=|<=|<>)$/;\n    let NUMBERS = /[0-9.]/;\n    let LETTERS = /[a-z0-9_$]/i;\n    // 文本字符长度\n    let { length } = input;\n    // 函数调用记录\n    let bracketsStack = [];\n    // 当前的字符索引\n    let current = 0;\n    // 处理的字符数组\n    let tokens = [];\n    // 循环处理所有字符\n    while (current < length) {\n      // 当前处理的字符\n      let char = input[current];\n      // 跳过连续空格\n      let SPACE = /\\s/;\n      if (SPACE.test(char)) {\n        const next = input[current + 1];\n        if (SPACE.test(next)) {\n          current++;\n          continue;\n        }\n      }\n      // 记录交叉区域运算符\n      if (SPACE.test(char)) {\n        const last = input[current - 1];\n        const next = input[current + 1];\n        if (LETTERS.test(last) && LETTERS.test(next)) {\n          tokens.push({\n            type: 'operator',\n            value: char,\n          });\n        }\n        current++;\n        continue;\n      }\n      // 记录括号\n      if (char === '(') {\n        tokens.push({\n          type: 'brackets',\n          value: '(',\n        });\n        bracketsStack.push({\n          type: 'brackets',\n          value: '(',\n        });\n        current++;\n        continue;\n      }\n      if (char === ')') {\n        const brackets = bracketsStack.pop();\n        if (brackets && brackets.type === 'function') {\n          tokens.push({\n            type: 'function',\n            value: ')',\n          });\n        } else {\n          tokens.push({\n            type: 'brackets',\n            value: ')',\n          });\n        }\n        current++;\n        continue;\n      }\n      // 记录数组\n      if (char === '{') {\n        tokens.push({\n          type: 'array',\n          value: 'array',\n        });\n        tokens.push({\n          type: 'array',\n          value: '{',\n        });\n        current++;\n        continue;\n      }\n      if (char === '}') {\n        tokens.push({\n          type: 'array',\n          value: '}',\n        });\n        current++;\n        continue;\n      }\n      // 记录字符串\n      if (char === '\"') {\n        let result = '';\n        current++;\n        char = input[current];\n        while (char !== '\"') {\n          if (current < length) {\n            result += char;\n            current++;\n            char = input[current];\n          } else {\n            break;\n          }\n        }\n        current++;\n        char = input[current];\n        tokens.push({\n          type: 'string',\n          value: result,\n        });\n        continue;\n      }\n      if (char === '\\'') {\n        let result = '';\n        current++;\n        char = input[current];\n        while (char !== '\\'') {\n          if (current < length) {\n            result += char;\n            current++;\n            char = input[current];\n          } else {\n            break;\n          }\n        }\n        current++;\n        char = input[current];\n        tokens.push({\n          type: 'string',\n          value: result,\n        });\n        continue;\n      }\n      // 记录运算符\n      if (OPERATOR.test(char)) {\n        let next = input[current + 1];\n        let result = `${char}${next}`;\n        if (OPERATOR.test(result)) {\n          tokens.push({\n            type: 'operator',\n            value: result,\n          });\n          current++;\n        } else {\n          tokens.push({\n            type: 'operator',\n            value: char,\n          });\n        }\n        current++;\n        continue;\n      }\n      // 记录数字值\n      if (NUMBERS.test(char)) {\n        let result = '';\n        while (NUMBERS.test(char)) {\n          if (current < length) {\n            result += char;\n            current++;\n            char = input[current];\n          } else {\n            break;\n          }\n        }\n        tokens.push({\n          type: 'number',\n          value: result,\n        });\n        continue;\n      }\n      // 记录函数名称, 参数名称, 操作数名称\n      if (LETTERS.test(char)) {\n        let result = '';\n        while (LETTERS.test(char)) {\n          if (current < length) {\n            result += char;\n            current++;\n            char = input[current];\n          } else {\n            break;\n          }\n        }\n        // 是否为函数名称\n        if (char === '(') {\n          tokens.push({\n            type: 'function',\n            value: result,\n          });\n          tokens.push({\n            type: 'function',\n            value: '(',\n          });\n          bracketsStack.push({\n            type: 'function',\n            value: '(',\n          });\n          current++;\n        } else {\n          tokens.push({\n            type: 'operand',\n            value: result,\n          });\n        }\n        continue;\n      }\n      // 无法识别的token\n      throw new TypeError(`无法识别的token ${char} `);\n    }\n    // 返回处理结果\n    if (this.syntaxCheck) {\n      return this.syntax(tokens);\n    }\n    return tokens;\n  }\n\n  /**\n   * 语法分析\n   * @param tokens\n   */\n  syntax(tokens) {\n    // 单引号对校验\n    let sQuotesStack = [];\n    // 双引号对校验\n    let dQuotesStack = [];\n    // 函数闭合标签校验\n    let callStack = [];\n    // 数组闭合标签校验\n    let arrayStack = [];\n    // 括号闭合标签校验\n    let bracketsStack = [];\n    // 当前的字符索引\n    let current = 0;\n    // tokens长度\n    let { length } = tokens;\n    // 忽略的数组token\n    let ignoreArray = (token) => {\n      if (token.type === 'array') {\n        return token.value === 'array';\n      }\n      return false;\n    };\n    // 忽略的函数token\n    let ignoreFunc = (token) => {\n      if (token.type === 'function') {\n        return token.value !== '(' && token.value !== ')';\n      }\n      return false;\n    };\n    // 跳过忽略的元素\n    let skipIgnoreToken = (dir, index) => {\n      if (dir === 'last') {\n        while (index >= 0) {\n          let token = tokens[index];\n          if (ignoreFunc(token)) {\n            index--;\n            continue;\n          }\n          if (ignoreArray(token)) {\n            index--;\n            continue;\n          }\n          return token;\n        }\n      }\n      if (dir === 'next') {\n        while (index < length) {\n          let token = tokens[index];\n          if (ignoreFunc(token)) {\n            index++;\n            continue;\n          }\n          if (ignoreArray(token)) {\n            index++;\n            continue;\n          }\n          return token;\n        }\n      }\n      return null;\n    };\n    // 检查数组\n    let checkArray = (dir, target) => {\n      let token = tokens[current];\n      let local = dir === 'last' ? '前面' : '后面';\n      if (token.value === '{') {\n        if (dir === 'last') {\n          switch (target.type) {\n            case 'array': {\n              if (target.value === '{') {\n                return;\n              }\n              break;\n            }\n            case 'function': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n            case 'operator': {\n              if (target.value === ',') {\n                return;\n              }\n              return;\n            }\n          }\n        }\n        if (dir === 'next') {\n          switch (target.type) {\n            case 'string':\n            case 'array':\n            case 'number':\n            case 'operand': {\n              return;\n            }\n            case 'function': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n          }\n        }\n      }\n      if (token.value === '}') {\n        if (dir === 'last') {\n          switch (target.type) {\n            case 'number':\n            case 'string':\n            case 'array':\n            case 'operand': {\n              return;\n            }\n            case 'function': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n          }\n        }\n        if (dir === 'next') {\n          switch (target.type) {\n            case 'array': {\n              if (target.value === '}') {\n                return;\n              }\n              break;\n            }\n            case 'function': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n            case 'operator': {\n              if (target.value === ',') {\n                return;\n              }\n              return;\n            }\n          }\n        }\n      }\n      throw TypeError(`错误表达式 ${token.value} ${local} ${target.value}`);\n    };\n    // 检查数字和字符\n    let checkValue = (dir, target) => {\n      let token = tokens[current];\n      let local = dir === 'last' ? '前面' : '后面';\n      switch (target.type) {\n        case 'array': {\n          if (dir === 'last') {\n            if (target.value === '{') {\n              return;\n            }\n          }\n          if (dir === 'next') {\n            if (target.value === '}') {\n              return;\n            }\n          }\n          break;\n        }\n        case 'brackets': {\n          if (dir === 'last') {\n            if (target.value === '(') {\n              return;\n            }\n          }\n          if (dir === 'next') {\n            if (target.value === ')') {\n              return;\n            }\n          }\n          break;\n        }\n        case 'function': {\n          if (dir === 'last') {\n            if (target.value === '(') {\n              return;\n            }\n          }\n          if (dir === 'next') {\n            if (target.value === ')') {\n              return;\n            }\n          }\n          break;\n        }\n        case 'operator': {\n          return;\n        }\n      }\n      throw TypeError(`错误表达式 ${token.value} ${local} ${target.value}`);\n    };\n    // 检查运算符\n    let checkOperator = (dir, target) => {\n      let token = tokens[current];\n      let local = dir === 'last' ? '前面' : '后面';\n      switch (target.type) {\n        case 'brackets':\n        case 'function':\n        case 'string':\n        case 'number':\n        case 'operand': {\n          return;\n        }\n        case 'array': {\n          if (token.value === ',') {\n            return;\n          }\n          break;\n        }\n      }\n      throw TypeError(`错误表达式 ${token.value} ${local} ${target.value}`);\n    };\n    // 检查函数\n    let checkFunction = (dir, target) => {\n      let token = tokens[current];\n      let local = dir === 'last' ? '前面' : '后面';\n      if (token.value === '(') {\n        if (dir === 'last') {\n          switch (target.type) {\n            case 'array': {\n              if (target.value === '{') {\n                return;\n              }\n              break;\n            }\n            case 'function': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n            case 'operator': {\n              return;\n            }\n          }\n        }\n        if (dir === 'next') {\n          switch (target.type) {\n            case 'function':\n            case 'string':\n            case 'number':\n            case 'operand': {\n              return;\n            }\n            case 'array': {\n              if (target.value === '{') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n          }\n        }\n      }\n      if (token.value === ')') {\n        if (dir === 'last') {\n          switch (target.type) {\n            case 'function':\n            case 'number':\n            case 'string':\n            case 'operand': {\n              return;\n            }\n            case 'array': {\n              if (target.value === '}') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n          }\n        }\n        if (dir === 'next') {\n          switch (target.type) {\n            case 'array': {\n              if (target.value === '}') {\n                return;\n              }\n              break;\n            }\n            case 'function': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n            case 'operator': {\n              if (target.value === ',') {\n                return;\n              }\n              return;\n            }\n          }\n        }\n      }\n      throw TypeError(`错误表达式 ${token.value} ${local} ${target.value}`);\n    };\n    // 循环处理所有token\n    while (current < length) {\n      // 当前处理的token\n      let token = tokens[current];\n      // 跳过忽略token\n      if (ignoreArray(token)) {\n        current++;\n        continue;\n      }\n      if (ignoreFunc(token)) {\n        current++;\n        continue;\n      }\n      let { type, value } = token;\n      // 处理单引号\n      if (type === \"'\") {\n        if (sQuotesStack.length) {\n          sQuotesStack.pop();\n        } else {\n          // 双引号中嵌套单引号\n          if (!dQuotesStack.length) {\n            sQuotesStack.push(\"'\");\n          }\n        }\n      }\n      // 处理双引号\n      if (type === '\"') {\n        if (dQuotesStack.length) {\n          dQuotesStack.pop();\n        } else {\n          // 单引号中嵌套双引号\n          if (!sQuotesStack.length) {\n            dQuotesStack.push('\"');\n          }\n        }\n      }\n      // 处理字符\n      if (type === 'string') {\n        let last = skipIgnoreToken('last', current - 1);\n        let next = skipIgnoreToken('next', current + 1);\n        if (last) {\n          checkValue('last', last);\n        }\n        if (next) {\n          checkValue('next', next);\n        }\n      }\n      // 处理数字\n      if (type === 'number') {\n        let last = skipIgnoreToken('last', current - 1);\n        let next = skipIgnoreToken('next', current + 1);\n        if (last) {\n          checkValue('last', last);\n        }\n        if (next) {\n          checkValue('next', next);\n        }\n      }\n      // 处理数组\n      if (type === 'array') {\n        if (value === '{') {\n          arrayStack.push(token);\n        }\n        if (value === '}') {\n          if (arrayStack.length === 0) {\n            throw new TypeError('数组缺少闭合标签');\n          }\n          arrayStack.pop();\n        }\n        let last = skipIgnoreToken('last', current - 1);\n        let next = skipIgnoreToken('next', current + 1);\n        if (last) {\n          checkArray('last', last);\n        }\n        if (next) {\n          checkArray('next', next);\n        }\n      }\n      // 处理函数调用\n      if (type === 'function') {\n        if (value === '(') {\n          callStack.push(token);\n        }\n        if (value === ')') {\n          callStack.pop();\n        }\n        let last = skipIgnoreToken('last', current - 1);\n        let next = skipIgnoreToken('next', current + 1);\n        if (last) {\n          checkFunction('last', last);\n        }\n        if (next) {\n          checkFunction('next', next);\n        }\n      }\n      // 处理运算符号\n      if (type === 'operator') {\n        let last = skipIgnoreToken('last', current - 1);\n        let next = skipIgnoreToken('next', current + 1);\n        // 运算符需要两边都有操作数\n        if (last) {\n          checkOperator('last', last);\n        } else {\n          throw TypeError(`错误表达式: ${token.value} 错误`);\n        }\n        if (next) {\n          checkOperator('next', next);\n        } else {\n          throw TypeError(`错误表达式: ${token.value} 错误`);\n        }\n      }\n      // 处理括号\n      if (type === 'brackets') {\n        if (value === '(') {\n          bracketsStack.push(token);\n        }\n        if (value === ')') {\n          if (bracketsStack.length === 0) {\n            throw new TypeError('括号缺少闭合标签');\n          }\n          bracketsStack.pop();\n        }\n      }\n      // 处理下一个字符\n      current++;\n    }\n    // 闭合标签检查\n    if (arrayStack.length) {\n      throw new TypeError('数组缺少闭合标签');\n    }\n    if (callStack.length) {\n      throw new TypeError('函数缺少闭合标签');\n    }\n    if (sQuotesStack.length) {\n      throw new TypeError('单引号缺少闭合标签');\n    }\n    if (dQuotesStack.length) {\n      throw new TypeError('双引号缺少闭合标签');\n    }\n    if (bracketsStack.length) {\n      throw new TypeError('括号缺少闭合标签');\n    }\n    return tokens;\n  }\n}\n\n/**\n * 编译表达式\n */\nclass Compiler {\n\n  /**\n   * Compiler\n   * @param tokens\n   * @param writer\n   */\n  constructor({\n    tokens, writer,\n  } = {}) {\n    this.writer = writer;\n    this.tokens = tokens;\n    this.groupStack = [];\n    this.index = -1;\n    this.ignore = [','];\n    // 运算符\n    this.opIf = {\n      '>': 'ifge',\n      '<': 'ifgt',\n      '=': 'ifeq',\n      '>=': 'if_icmpge',\n      '<=': 'if_icmpgt',\n      '<>': 'ifne',\n    };\n    this.opAdd = {\n      '+': 'add',\n      '-': 'sub',\n      '&': 'link',\n    };\n    this.opMul = {\n      '*': 'mul',\n      '/': 'div',\n      '%': 'mod',\n      '^': 'power',\n    };\n    this.opCommon = {\n      ' ': 'common',\n    };\n    this.opRel = {\n      '!': 'rel',\n      ':': 'uni',\n    };\n    this.opNew = {\n      array: 'newarray',\n    };\n    this.opCell = {\n      function: 'invoke',\n    };\n  }\n\n  /**\n   * 结束\n   */\n  eofToken() {\n    const { index, tokens } = this;\n    const { length } = tokens;\n    return index >= length - 1;\n  }\n\n  /**\n   * 切换下一个Token\n   */\n  nextToken() {\n    this.index++;\n    this.token = this.tokens[this.index];\n    return this.token;\n  }\n\n  /**\n   * 返回上一个Token\n   */\n  backToken() {\n    this.index--;\n    this.token = this.tokens[this.index];\n    return this.token;\n  }\n\n  /**\n   * 记录参数\n   */\n  reduceGroup() {\n    const { groupStack } = this;\n    const { length } = groupStack;\n    if (length > 0) {\n      const last = groupStack[length - 1];\n      const number = last.number;\n      last.number = number - 1;\n    }\n  }\n\n  /**\n   * 记录参数\n   */\n  increaseGroup() {\n    const { groupStack } = this;\n    const { length } = groupStack;\n    if (length > 0) {\n      const last = groupStack[length - 1];\n      const number = last.number;\n      last.number = number + 1;\n    }\n  }\n\n  /**\n   * 弹出组\n   */\n  popGroup() {\n    return this.groupStack.pop();\n  }\n\n  /**\n   * 添加组\n   */\n  addGroup(token) {\n    token.number = 0;\n    this.groupStack.push(token);\n    return token;\n  }\n\n  /**\n   * 忽略的Token\n   * @returns {*}\n   */\n  isSkipNextToken() {\n    if (!this.eofToken()) {\n      const { ignore } = this;\n      this.nextToken();\n      const { token } = this;\n      this.backToken();\n      const { value } = token;\n      return ignore.includes(value);\n    }\n    return false;\n  }\n\n  /**\n   * 编译表达式\n   */\n  compile() {\n    const { writer } = this;\n    this.compileIfge();\n    while (this.isSkipNextToken()) {\n      this.nextToken();\n      this.compileIfge();\n    }\n    return writer.getInstruct();\n  }\n\n  /**\n   * 编译条件运算\n   */\n  compileIfge() {\n    this.compileAdd();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'operator') {\n        this.backToken();\n        break;\n      }\n      if (!this.opIf[value]) {\n        this.backToken();\n        break;\n      }\n      let operator = this.opIf[value];\n      this.compileAdd();\n      this.reduceGroup();\n      this.writer.writeOperator(operator);\n    }\n  }\n\n  /**\n   * 编译加减运算\n   */\n  compileAdd() {\n    this.compileMul();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'operator') {\n        this.backToken();\n        break;\n      }\n      if (!this.opAdd[value]) {\n        this.backToken();\n        break;\n      }\n      let operator = this.opAdd[value];\n      this.compileMul();\n      this.reduceGroup();\n      this.writer.writeOperator(operator);\n    }\n  }\n\n  /**\n   * 编译乘除运算\n   */\n  compileMul() {\n    this.compileCommon();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'operator') {\n        this.backToken();\n        break;\n      }\n      if (!this.opMul[value]) {\n        this.backToken();\n        break;\n      }\n      let operator = this.opMul[value];\n      this.compileCommon();\n      this.reduceGroup();\n      this.writer.writeOperator(operator);\n    }\n  }\n\n  /**\n   * 编译公共区域运算\n   */\n  compileCommon() {\n    this.compileRel();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'operator') {\n        this.backToken();\n        break;\n      }\n      if (!this.opCommon[value]) {\n        this.backToken();\n        break;\n      }\n      let operator = this.opCommon[value];\n      this.compileRel();\n      this.reduceGroup();\n      this.writer.writeOperator(operator);\n    }\n  }\n\n  /**\n   * 编译跨Sheet引用运算\n   */\n  compileRel() {\n    this.compileArray();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'operator') {\n        this.backToken();\n        break;\n      }\n      if (!this.opRel[value]) {\n        this.backToken();\n        break;\n      }\n      let operator = this.opRel[value];\n      this.compileArray();\n      this.reduceGroup();\n      this.writer.writeOperator(operator);\n    }\n  }\n\n  /**\n   * 编译数组创建\n   */\n  compileArray() {\n    this.compileFunction();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'array') {\n        this.backToken();\n        break;\n      }\n      // 返回跳过 } 标记\n      if (value === '}') {\n        this.backToken();\n        break;\n      }\n      this.addGroup(token);\n      // 跳过当前 {  标记\n      this.nextToken();\n      // 处理数组中的子元素\n      this.compileIfge();\n      // 下一个是忽略的标记\n      // 则继续处理\n      while (this.isSkipNextToken()) {\n        this.nextToken();\n        this.compileIfge();\n      }\n      // 记录数组需要\n      // 操作的元素数量\n      this.popGroup();\n      const { number } = token;\n      const operator = this.opNew[type];\n      this.writer.writeOperator(`${operator} ${number}`);\n      // 跳过闭合标签 }\n      this.nextToken();\n    }\n  }\n\n  /**\n   * 编译函数调用\n   */\n  compileFunction() {\n    this.compilePushValue();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'function') {\n        this.backToken();\n        break;\n      }\n      // 返回跳过 ) 标记\n      if (value === ')') {\n        this.backToken();\n        break;\n      }\n      this.addGroup(token);\n      // 跳过当前 (  标记\n      this.nextToken();\n      // 处理函数的参数列表\n      this.compileIfge();\n      // 下一个是忽略的标记\n      // 则继续处理\n      while (this.isSkipNextToken()) {\n        this.nextToken();\n        this.compileIfge();\n      }\n      // 记录函数需要\n      // 操作的元素数量\n      this.popGroup();\n      const { number } = token;\n      const operator = this.opCell[type];\n      this.writer.writeOperator(`${operator} ${value} ${number}`);\n      // 跳过闭合标签 )\n      this.nextToken();\n    }\n  }\n\n  /**\n   * compilePushValue\n   */\n  compilePushValue() {\n    if (!this.eofToken()) {\n      const token = this.nextToken();\n      const { writer } = this;\n      const { type, value } = token;\n      // 推送操作数\n      // 递增函数/数组的参数数量(有的话)\n      switch (type) {\n        case 'string': {\n          this.increaseGroup();\n          writer.writeString(`${value}`);\n          return;\n        }\n        case 'number': {\n          this.increaseGroup();\n          writer.writeNumber(`${value}`);\n          return;\n        }\n        case 'operand': {\n          this.increaseGroup();\n          writer.writeOperand(value);\n          return;\n        }\n      }\n      // 处理括号计算\n      switch (type) {\n        case 'brackets': {\n          if (value === '(') {\n            this.compileIfge();\n            // 下一个是忽略的标记\n            // 则继续处理\n            while (this.isSkipNextToken()) {\n              this.nextToken();\n              this.compileIfge();\n            }\n            // 跳过闭合标签 )\n            this.nextToken();\n          }\n          return;\n        }\n      }\n      // 递增函数/数组的参数数量(有的话)\n      switch (type) {\n        case 'array': {\n          // {} 这种清空不需要增加参数数量\n          if (value !== '}') {\n            this.increaseGroup();\n          }\n          this.backToken();\n          return;\n        }\n        case 'function': {\n          // func() 这种清空不需要增加参数数量\n          if (value !== ')') {\n            this.increaseGroup();\n          }\n          this.backToken();\n          return;\n        }\n      }\n      // 过滤掉运算符\n      switch (type) {\n        case 'operator': {\n          this.backToken();\n          return;\n        }\n      }\n      // 无法识别的token\n      throw new TypeError(`无法识别的token ${type} ${value} `);\n    }\n  }\n}\n\n/**\n * 运行表达式\n */\nclass Evaluation {\n\n  /**\n   * Evaluate\n   * @param instruct\n   */\n  constructor(instruct) {\n    this.instruct = instruct.split('\\r\\n');\n    this.memory = [];\n  }\n\n  /**\n   * 运行表达式\n   */\n  eval() {\n    const newArray = /^newarray/;\n    const invoke = /^invoke/;\n    const pushSRegexp = /^SPush/;\n    const pushNRegexp = /^NPush/;\n    const pushORegexp = /^OPush/;\n    const { instruct } = this;\n    instruct.forEach((name) => {\n      switch (name) {\n        case 'if_icmpge': {\n          this.ificmpge();\n          break;\n        }\n        case 'if_icmpgt': {\n          this.ificmpgt();\n          break;\n        }\n        case 'ifge': {\n          this.ifge();\n          break;\n        }\n        case 'ifgt': {\n          this.ifgt();\n          break;\n        }\n        case 'ifeq': {\n          this.ifeq();\n          break;\n        }\n        case 'ifne': {\n          this.ifne();\n          break;\n        }\n        case 'add': {\n          this.add();\n          break;\n        }\n        case 'sub': {\n          this.sub();\n          break;\n        }\n        case 'mul': {\n          this.mul();\n          break;\n        }\n        case 'div': {\n          this.div();\n          break;\n        }\n        case 'mod': {\n          this.mod();\n          break;\n        }\n        case 'power': {\n          this.power();\n          break;\n        }\n        case 'rel': {\n          this.rel();\n          break;\n        }\n        case 'link': {\n          this.link();\n          break;\n        }\n        case 'uni': {\n          this.uni();\n          break;\n        }\n        case 'common': {\n          this.common();\n          break;\n        }\n        default: {\n          if (newArray.test(name)) {\n            const group = name.split(' ');\n            const index = group[1];\n            this.array(index);\n            break;\n          }\n          if (invoke.test(name)) {\n            const group = name.split(' ');\n            const func = group[1];\n            const index = group[2];\n            this.invoke(func, index);\n            break;\n          }\n          if (pushSRegexp.test(name)) {\n            const value = name.split(' ')[1];\n            this.pushS(value);\n            break;\n          }\n          if (pushNRegexp.test(name)) {\n            const value = name.split(' ')[1];\n            this.pushN(value);\n            break;\n          }\n          if (pushORegexp.test(name)) {\n            const value = name.split(' ')[1];\n            this.pushO(value);\n            break;\n          }\n        }\n      }\n    });\n    return this.memory.pop();\n  }\n\n  /**\n   * 推送操作数\n   * @param value\n   */\n  pushS(value) {\n    this.memory.push(value);\n  }\n\n  /**\n   * 推送操作数\n   * @param value\n   */\n  pushN(value) {\n    value = parseFloat(value);\n    this.memory.push(value);\n  }\n\n  /**\n   * 推送操作数\n   * @param value\n   */\n  pushO(value) {\n    this.memory.push(value);\n  }\n\n  /**\n   * 两个值的大于比较\n   */\n  ifge() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a > b);\n  }\n\n  /**\n   * 两个值的小于比较\n   */\n  ifgt() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a < b);\n  }\n\n  /**\n   * 两个值的相等比较\n   */\n  ifeq() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a === b);\n  }\n\n  /**\n   * 两个值的不等比较\n   */\n  ifne() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a !== b);\n  }\n\n  /**\n   * 两个值的大于等于比较\n   */\n  ificmpge() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a >= b);\n  }\n\n  /**\n   * 两个值的小于等于比较\n   */\n  ificmpgt() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a <= b);\n  }\n\n  /**\n   * 两个值的加法运算\n   */\n  add() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a + b);\n  }\n\n  /**\n   * 两个值的减法运算\n   */\n  sub() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a - b);\n  }\n\n  /**\n   * 两个值的乘法运算\n   */\n  mul() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a * b);\n  }\n\n  /**\n   * 两个值的除法运算\n   */\n  div() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a / b);\n  }\n\n  /**\n   * 两个值的mod运算\n   */\n  mod() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a % b);\n  }\n\n  /**\n   * 计算两个区域的并集\n   */\n  common() {\n    // TODO ...\n    // ....\n  }\n\n  /**\n   * 跨sheet引用运算\n   */\n  rel() {\n    // TODO ...\n    // ....\n  }\n\n  /**\n   * 计算两个区域连接的新区域\n   */\n  uni() {\n    // TODO ...\n    // ....\n  }\n\n  /**\n   * 字符串连接运算\n   */\n  link() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(`${a}${b}`);\n  }\n\n  /**\n   * 乘方计算\n   */\n  power() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(Math.pow(a, b));\n  }\n\n  /**\n   * 创建数组\n   * @param index\n   */\n  array(index) {\n    const array = [];\n    for (let i = 1; i <= index; i++) {\n      const item = this.memory.pop();\n      array.push(item);\n    }\n    array.reverse();\n    this.memory.push(array);\n  }\n\n  /**\n   * 执行函数\n   * @param func\n   * @param index\n   */\n  invoke(func, index) {\n    const array = [];\n    for (let i = 1; i <= index; i++) {\n      const item = this.memory.pop();\n      array.push(item);\n    }\n    array.reverse();\n    const execute = Functions.getFunction(func);\n    const result = execute.apply(this, array);\n    this.memory.push(result);\n  }\n}\n\n/**\n * 编译输出指令\n * @param input\n * @returns {string|*}\n * @constructor\n */\nconst Compile = (input) => {\n  if (input.startsWith('=')) {\n    input = input.substring(1);\n  }\n  const tokenizer = new Tokenizer();\n  const writer = new Assembly();\n  const tokens = tokenizer.lexical(input);\n  const compiler = new Compiler({\n    writer, tokens,\n  });\n  return compiler.compile();\n};\n\n/**\n * 运行指令\n * @param inst\n * @returns {*}\n * @constructor\n */\nconst Instruct = (inst) => {\n  const evaluation = new Evaluation(inst);\n  return evaluation.eval();\n};\n\n/**\n * 编译运行\n * @constructor\n */\nconst Evaluate = input => Instruct(Compile(input));\n\nexport {\n  Tokenizer,\n  Compiler,\n  Assembly,\n  Compile,\n  Evaluate,\n  Instruct,\n  Functions,\n};\n","import { Compile, Instruct } from './Compiler';\nimport { SheetUtils } from '../utils/SheetUtils';\n\n/**\n * Formula\n */\nclass Formula {\n\n  /**\n   * Formula\n   * @param expr\n   */\n  constructor({\n    expr = SheetUtils.EMPTY,\n  } = {}) {\n    this.expr = expr;\n    this.content = SheetUtils.Nul;\n    this.instruct = SheetUtils.Nul;\n  }\n\n  /**\n   * 计算公式\n   * @return {string}\n   */\n  getValue() {\n    let { expr } = this;\n    let { content } = this;\n    let { instruct } = this;\n    if (!content) {\n      if (!instruct) {\n        instruct = Compile(expr);\n      }\n      content = Instruct(instruct);\n    }\n    this.content = content;\n    this.instruct = instruct;\n    return content;\n  }\n\n  /**\n   * 有效的表达式\n   * @return {boolean}\n   */\n  hasExpr() {\n    let { expr } = this;\n    return !SheetUtils.isBlank(expr);\n  }\n\n  /**\n   * 获取表达式\n   * @return {string}\n   */\n  getExpr() {\n    return this.expr;\n  }\n\n  /**\n   * 设置表达式\n   * @param expr\n   */\n  setExpr(expr) {\n    this.expr = expr;\n    this.content = SheetUtils.Nul;\n    this.instruct = SheetUtils.Nul;\n  }\n\n  /**\n   * 复制\n   * @returns {Formula}\n   */\n  clone() {\n    return new Formula({\n      expr: this.expr,\n    });\n  }\n\n}\n\nexport {\n  Formula,\n};\n","import { SheetUtils } from '../../../utils/SheetUtils';\nimport { CellFont } from './CellFont';\nimport { CellBorder } from './CellBorder';\nimport { XIcon } from '../tableicon/XIcon';\nimport XTableFormat from '../XTableTextFormat';\nimport { RichFonts } from './RichFonts';\nimport { Formula } from '../../../formula/Formula';\nimport { DateUtils } from '../../../utils/DateUtils';\n\n/**\n * 单元格\n */\nclass Cell {\n\n  /**\n   * Cell\n   * @param background\n   * @param format\n   * @param text\n   * @param richText\n   * @param ruler\n   * @param custom\n   * @param icons\n   * @param borderAttr\n   * @param fontAttr\n   * @param formula\n   * @param contentWidth\n   * @param contentHeight\n   * @param contentType\n   */\n  constructor({\n    ruler = SheetUtils.Undef,\n    format = 'default',\n    icons = [],\n    fontAttr = {},\n    custom = {},\n    borderAttr = {},\n    formula = {},\n    richText = {},\n    background = SheetUtils.Undef,\n    text = SheetUtils.EMPTY,\n    contentWidth = 0,\n    contentHeight = 0,\n    contentType = Cell.TYPE.STRING,\n  } = {}) {\n    // 背景颜色\n    this.background = background;\n    // 单元格图标\n    this.icons = XIcon.newInstances(icons);\n    // 自定义属性\n    this.custom = custom;\n    // 字体测量尺子\n    this.ruler = ruler;\n    // 格式化类型\n    this.format = format;\n    // 单元格公式\n    this.formula = new Formula(formula);\n    // 文本内容\n    this.text = text;\n    // 富文本内容\n    this.richText = new RichFonts(richText);\n    // 格式化后的内容\n    this.formatText = SheetUtils.EMPTY;\n    // 内容的高度\n    this.contentHeight = contentHeight;\n    // 内容的宽度\n    this.contentWidth = contentWidth;\n    // 字体属性\n    this.fontAttr = new CellFont(fontAttr);\n    // 边框属性\n    this.borderAttr = new CellBorder(borderAttr);\n    // 内容类型\n    this.setContentType(contentType);\n  }\n\n  /**\n   * 设置单元格小图标\n   * @param icons\n   */\n  setIcons(icons) {\n    this.icons = icons;\n    return this;\n  }\n\n  /**\n   * 设置内容文本\n   * @param text\n   */\n  setText(text) {\n    this.formatText = null;\n    this.text = text;\n    this.formula.setExpr(null);\n    this.richText.setRich([]);\n    this.setContentWidth(0);\n    return this;\n  }\n\n  /**\n   * 设置富文本\n   */\n  setRichText(rich) {\n    this.formatText = null;\n    this.text = null;\n    this.formula.setExpr(null);\n    this.richText.setRich(rich);\n    this.setContentWidth(0);\n    return this;\n  }\n\n  /**\n   * 设置公式\n   */\n  setExpr(expr) {\n    this.formatText = null;\n    this.text = null;\n    this.formula.setExpr(expr);\n    this.richText.setRich([]);\n    this.setContentWidth(0);\n    return this;\n  }\n\n  /**\n   * 获取公式\n   */\n  getExpr() {\n    return this.formula.getExpr();\n  }\n\n  /**\n   * 设置格式化类型\n   * @param format\n   */\n  setFormat(format = 'default') {\n    this.format = format;\n    this.formatText = null;\n    this.setContentWidth(0);\n    return this;\n  }\n\n  /**\n   * 保存测量尺子\n   * @param ruler\n   */\n  setRuler(ruler) {\n    this.ruler = ruler;\n    return this;\n  }\n\n  /**\n   * 设置内容类型\n   * @param type\n   */\n  setContentType(type = Cell.TYPE.STRING) {\n    const { text } = this;\n    switch (type) {\n      case Cell.TYPE.STRING: {\n        this.contentType = Cell.TYPE.STRING;\n        break;\n      }\n      case Cell.TYPE.NUMBER: {\n        this.contentType = type;\n        if (SheetUtils.isNumber(text)) {\n          this.contentType = Cell.TYPE.NUMBER;\n          this.text = SheetUtils.parseFloat(text);\n        } else {\n          this.contentType = Cell.TYPE.STRING;\n          this.text = `${text}`;\n        }\n        break;\n      }\n      case Cell.TYPE.DATE_TIME: {\n        const parse = DateUtils.parse(text);\n        if (SheetUtils.isDate(parse)) {\n          this.contentType = Cell.TYPE.DATE_TIME;\n          this.text = SheetUtils.parseFloat(text);\n        } else {\n          this.contentType = Cell.TYPE.STRING;\n          this.text = `${text}`;\n        }\n        break;\n      }\n      case Cell.TYPE.RICH_TEXT: {\n        this.contentType = Cell.TYPE.RICH_TEXT;\n        break;\n      }\n    }\n    return this;\n  }\n\n  /**\n   * 单元格是否为空\n   * @returns {boolean}\n   */\n  isEmpty() {\n    return SheetUtils.isBlank(this.getComputeText());\n  }\n\n  /**\n   * 公式是否存在\n   */\n  hasFormula() {\n    return this.formula.hasExpr();\n  }\n\n  /**\n   * 获取格式后的文本\n   * @returns {string|*}\n   */\n  getFormatText() {\n    let { text, formula, format } = this;\n    let { formatText } = this;\n    let { contentType } = this;\n    // 优先获取公式值\n    if (formula.hasExpr()) {\n      let value = formula.getValue();\n      if (value) {\n        if (SheetUtils.isBlank(formatText)) {\n          formatText = XTableFormat(format, value);\n        }\n      }\n      this.formatText = formatText;\n      return formatText;\n    }\n    // 格式化文本\n    switch (contentType) {\n      case Cell.TYPE.STRING:\n      case Cell.TYPE.NUMBER:\n      case Cell.TYPE.DATE_TIME: {\n        if (format) {\n          if (!formatText) {\n            this.formatText = XTableFormat(format, text);\n            return this.formatText;\n          }\n        }\n        return formatText;\n      }\n    }\n    // 默认返回\n    return SheetUtils.EMPTY;\n  }\n\n  /**\n   * 获取计算后的文本\n   * @returns {string|*}\n   */\n  getComputeText() {\n    let { text, formula } = this;\n    let { richText } = this;\n    let { contentType } = this;\n    // 优先获取公式值\n    if (formula.hasExpr()) {\n      return formula.getValue();\n    }\n    // 读取不同类型\n    switch (contentType) {\n      case Cell.TYPE.STRING:\n      case Cell.TYPE.NUMBER:\n      case Cell.TYPE.DATE_TIME: {\n        return text;\n      }\n      case Cell.TYPE.RICH_TEXT: {\n        return richText;\n      }\n    }\n    // 默认返回\n    return SheetUtils.EMPTY;\n  }\n\n  /**\n   * 字体属性\n   * @param attr\n   */\n  setFontAttr(attr) {\n    this.fontAttr = attr;\n    return this;\n  }\n\n  /**\n   * 设置边框类型\n   * @param attr\n   */\n  setBorderAttr(attr) {\n    this.borderAttr = attr;\n    return this;\n  }\n\n  /**\n   * 复制单元格\n   * @returns {Cell}\n   */\n  clone() {\n    const { background, text, format, custom } = this;\n    const { icons, contentType, formula } = this;\n    const { richText, fontAttr, borderAttr } = this;\n    return new Cell({\n      background,\n      text,\n      custom,\n      contentType,\n      format,\n      fontAttr,\n      borderAttr,\n      icons,\n      formula,\n      richText,\n    });\n  }\n\n  /**\n   * toJSON\n   */\n  toJSON() {\n    const { background, text, format, custom } = this;\n    const { icons, contentType, formula } = this;\n    const { richText, fontAttr, borderAttr } = this;\n    return {\n      custom,\n      expr: formula.getExpr(),\n      rich: richText.getRich(),\n      contentType,\n      text,\n      icons,\n      background,\n      format,\n      fontAttr,\n      borderAttr,\n    };\n  }\n\n  /**\n   * toString\n   * @returns {string|*}\n   */\n  toString() {\n    return this.getFormatText();\n  }\n\n  /**\n   * 内容宽度\n   * @param width\n   */\n  setContentWidth(width) {\n    this.contentWidth = width;\n    return this;\n  }\n\n  /**\n   * 内容宽度\n   * @param height\n   */\n  setContentHeight(height) {\n    this.contentHeight = height;\n    return this;\n  }\n\n}\n\n/**\n * 单元格类型\n */\nCell.TYPE = {\n  // 数字\n  NUMBER: 0,\n  // 字符\n  STRING: 1,\n  // 富文本\n  RICH_TEXT: 2,\n  // 日期\n  DATE_TIME: 3,\n};\n\nexport {\n  Cell,\n};\n","import { SheetUtils } from '../../utils/SheetUtils';\nimport { Cell } from './tablecell/Cell';\n\nclass XTableDataItem {\n\n  constructor(options) {\n    if (options) {\n      const { cell } = options;\n      this.cell = SheetUtils.safeValue(cell, options);\n    } else {\n      this.cell = undefined;\n    }\n  }\n\n  getCell() {\n    const { cell } = this;\n    if (cell instanceof Cell) {\n      return cell;\n    }\n    if (SheetUtils.isString(cell)) {\n      this.cell = new Cell({\n        text: cell,\n      });\n    } else {\n      this.cell = new Cell(cell);\n    }\n    return this.cell;\n  }\n\n  setCell(cell) {\n    this.cell = cell;\n    return this;\n  }\n\n  clone() {\n    return new XTableDataItem({\n      mergeId: this.mergeId,\n      cell: this.cell,\n    });\n  }\n\n}\n\nexport {\n  XTableDataItem,\n};\n","class Listen {\n\n  constructor() {\n    this.pool = {};\n  }\n\n  clear() {\n    Object.keys((key) => {\n      delete this.pool[key];\n    });\n  }\n\n  removeListen(key) {\n    delete this.pool[key];\n  }\n\n  registerListen(key, call) {\n    this.pool[key] = call;\n  }\n\n  execute(key, ...message) {\n    if (this.pool[key]) {\n      this.pool[key](...message);\n    }\n  }\n\n}\n\nexport {\n  Listen,\n};\n","/**\n * 数据快照\n */\nimport { Listen } from '../../../lib/Listen';\n\nclass Snapshot {\n\n  /**\n   * Snapshot\n   */\n  constructor() {\n    // 撤销\n    this.undoStack = [];\n    // 反撤销\n    this.redoStack = [];\n    // 当前记录层\n    this.layer = {\n      event: '',\n      data: [],\n    };\n    // 启用记录\n    this.apply = false;\n    // 数据监听\n    this.listen = new Listen();\n  }\n\n  /**\n   * 能否反撤销\n   * @returns {boolean}\n   */\n  canRedo() {\n    return this.redoStack.length > 0;\n  }\n\n  /**\n   * 能否撤销\n   * @returns {boolean}\n   */\n  canUndo() {\n    return this.undoStack.length > 0;\n  }\n\n  /**\n   * 撤销\n   */\n  undo() {\n    const layer = this.undoStack.pop();\n    for (let i = layer.data.length - 1; i >= 0; i--) {\n      const action = layer.data[i];\n      action.undo();\n    }\n    this.redoStack.push(layer);\n    this.listen.execute('change', layer.event, 'undo');\n  }\n\n  /**\n   * 反撤销\n   */\n  redo() {\n    const layer = this.redoStack.pop();\n    for (let i = 0, len = layer.data.length; i < len; i++) {\n      const action = layer.data[i];\n      action.redo();\n    }\n    this.undoStack.push(layer);\n    this.listen.execute('change', layer.event, 'redo');\n  }\n\n  /**\n   * 打开快照\n   */\n  open() {\n    this.layer = {\n      event: '',\n      data: [],\n    };\n    this.apply = true;\n  }\n\n  /**\n   * 关闭快照\n   */\n  close(event) {\n    if (this.layer.data.length) {\n      this.layer.event = event;\n      this.undoStack.push(this.layer);\n    }\n    this.layer = {\n      event: '',\n      data: [],\n    };\n    this.apply = false;\n    this.listen.execute('change', event, 'close');\n  }\n\n  /**\n   * 添加动作\n   * @param action\n   */\n  addAction(action = {\n    undo: () => {},\n    redo: () => {},\n  }) {\n    if (this.apply) {\n      this.layer.data.push(action);\n    }\n  }\n}\n\nexport {\n  Snapshot,\n};\n","import { XTableDataItem } from './XTableDataItem';\nimport { Snapshot } from './snapshot/Snapshot';\n\nclass XTableDataItems {\n\n  constructor({\n    snapshot = new Snapshot(),\n    items = [],\n  } = {}) {\n    this.items = items;\n    this.snapshot = snapshot;\n  }\n\n  getOrNew(ri, ci) {\n    const find = this.get(ri, ci);\n    if (find) {\n      return find;\n    }\n    const item = new XTableDataItem();\n    this.set(ri, ci, item);\n    return item;\n  }\n\n  getItems() {\n    return this.items;\n  }\n\n  slice(sri, sci, eri, eci) {\n    const rows = this.items.slice(sri, eri + 1);\n    return rows.map((row) => {\n      if (row) {\n        return row.slice(sci, eci + 1);\n      }\n      return row;\n    });\n  }\n\n  get(ri, ci) {\n    const line = this.items[ri];\n    return line && line[ci]\n      ? this.wrap(line, ci)\n      : undefined;\n  }\n\n  set(ri, ci, item) {\n    const line = this.items[ri] || [];\n    line[ci] = item;\n    this.items[ri] = line;\n  }\n\n  wrap(line, ci) {\n    let item = line[ci];\n    if (item) {\n      item = item instanceof XTableDataItem\n        ? item : new XTableDataItem(item);\n      line[ci] = item;\n      return item;\n    }\n    return item;\n  }\n\n  each(callback) {\n    const { items } = this;\n    const { length } = items;\n    for (let i = 0; i < length; i++) {\n      let item = items[i];\n      if (item) {\n        const { length } = item;\n        for (let j = 0; j < length; j++) {\n          let cell = this.get(i, j);\n          callback(cell);\n        }\n      }\n    }\n  }\n\n  clear(rectRange, {\n    ignoreCorner = false,\n  } = {}) {\n    let { sri, eri } = rectRange;\n    let { sci, eci } = rectRange;\n    let { items } = this;\n    let { snapshot } = this;\n    let { length } = items;\n    let oldItems = [];\n    let effRiLength = eri - sri + 1;\n    let effCiLength = eci - sci + 1;\n    let action = {\n      undo: () => {\n        for (let ri = sri; ri <= eri; ri++) {\n          if (ri >= length) {\n            break;\n          }\n          let oldRowItem = oldItems[ri];\n          let rowItem = items[ri];\n          if (rowItem) {\n            for (let ci = sci; ci <= eci; ci++) {\n              if (ci >= length) {\n                break;\n              }\n              if (ignoreCorner) {\n                let firstRi = ri === sri;\n                let firstCi = ci === sci;\n                if (firstRi && firstCi) {\n                  continue;\n                }\n                rowItem[ci] = oldRowItem[ci];\n              } else {\n                rowItem[ci] = oldRowItem[ci];\n              }\n            }\n          }\n        }\n      },\n      redo: () => {\n        oldItems = new Array(effRiLength);\n        for (let ri = sri; ri <= eri; ri++) {\n          if (ri >= length) {\n            break;\n          }\n          let rowItem = items[ri];\n          if (rowItem) {\n            let oldRowItem = new Array(effCiLength);\n            let { length } = rowItem;\n            for (let ci = sci; ci <= eci; ci++) {\n              if (ci >= length) {\n                break;\n              }\n              if (ignoreCorner) {\n                let firstRi = ri === sri;\n                let firstCi = ci === sci;\n                if (firstRi && firstCi) {\n                  continue;\n                }\n                oldRowItem[ci] = rowItem[ci];\n                rowItem[ci] = undefined;\n              } else {\n                oldRowItem[ci] = rowItem[ci];\n                rowItem[ci] = undefined;\n              }\n            }\n            oldItems[ri] = oldRowItem;\n          }\n        }\n      },\n    };\n    snapshot.addAction(action);\n    action.redo();\n  }\n\n  setOrNew(ri, ci, item) {\n    const line = this.items[ri];\n    if (line) {\n      line[ci] = item;\n    }\n  }\n\n  removeRow(ri) {\n    let { snapshot } = this;\n    let orderValue;\n    let action = {\n      undo: () => {\n        if (orderValue) {\n          this.items.splice(ri, 0, orderValue);\n        }\n      },\n      redo: () => {\n        orderValue = this.items.splice(ri, 1)[0];\n      },\n    };\n    snapshot.addAction(action);\n    action.redo();\n  }\n\n  removeCol(ci) {\n    let { snapshot } = this;\n    let orderValue = [];\n    let action = {\n      undo: () => {\n        let { length } = orderValue;\n        for (let i = 0; i < length; i++) {\n          const value = orderValue[i];\n          const { ri, item } = value;\n          const subItems = this.items[ri];\n          subItems.splice(ci, 0, item);\n        }\n      },\n      redo: () => {\n        let { length } = this.items;\n        orderValue = [];\n        for (let ri = 0; ri < length; ri++) {\n          const subItems = this.items[ri];\n          if (subItems) {\n            const item = subItems.splice(ci, 1)[0];\n            orderValue.push({\n              ri, item,\n            });\n          }\n        }\n      },\n    };\n    snapshot.addAction(action);\n    action.redo();\n  }\n\n  insertRowAfter(ri) {\n    let { snapshot } = this;\n    let action = {\n      undo: () => {\n        this.items.splice(ri + 1, 1);\n      },\n      redo: () => {\n        const subItems = this.items[ri];\n        if (subItems) {\n          const newSubItems = [];\n          for (let i = 0, len = subItems.length; i < len; i++) {\n            const item = subItems[i];\n            if (item) {\n              const { mergeId } = item;\n              newSubItems[i] = { mergeId };\n            }\n          }\n          this.items.splice(ri + 1, 0, newSubItems);\n        } else {\n          this.items.splice(ri + 1, 0, []);\n        }\n      },\n    };\n    snapshot.addAction(action);\n    action.redo();\n  }\n\n  insertColAfter(ci) {\n    let { snapshot } = this;\n    let action = {\n      undo: () => {\n        for (let i = 0, len = this.items.length; i < len; i++) {\n          const subItems = this.items[i];\n          if (subItems) {\n            subItems.splice(ci + 1, 1);\n          }\n        }\n      },\n      redo: () => {\n        for (let i = 0, len = this.items.length; i < len; i++) {\n          const subItems = this.items[i];\n          if (subItems) {\n            const item = subItems[ci];\n            if (item) {\n              const { mergeId } = item;\n              subItems.splice(ci + 1, 0, { mergeId });\n            } else {\n              subItems.splice(ci + 1, 0, {});\n            }\n          }\n        }\n      },\n    };\n    snapshot.addAction(action);\n    action.redo();\n  }\n\n  insertRowBefore(ri) {\n    let { snapshot } = this;\n    let action = {\n      undo: () => {\n        this.items.splice(ri, 1);\n      },\n      redo: () => {\n        const subItems = this.items[ri];\n        if (subItems) {\n          const newSubItems = [];\n          for (let i = 0, len = subItems.length; i < len; i++) {\n            const item = subItems[i];\n            if (item) {\n              const { mergeId } = item;\n              newSubItems[i] = { mergeId };\n            }\n          }\n          this.items.splice(ri, 0, newSubItems);\n        } else {\n          this.items.splice(ri, 0, []);\n        }\n      },\n    };\n    snapshot.addAction(action);\n    action.redo();\n  }\n\n  insertColBefore(ci) {\n    let { snapshot } = this;\n    let action = {\n      undo: () => {\n        for (let i = 0, len = this.items.length; i < len; i++) {\n          const subItems = this.items[i];\n          if (subItems) {\n            subItems.splice(ci, 1);\n          }\n        }\n      },\n      redo: () => {\n        for (let i = 0, len = this.items.length; i < len; i++) {\n          const subItems = this.items[i];\n          if (subItems) {\n            const item = subItems[ci];\n            if (item) {\n              const { mergeId } = item;\n              subItems.splice(ci, 0, { mergeId });\n            } else {\n              subItems.splice(ci, 0, {});\n            }\n          }\n        }\n      },\n    };\n    snapshot.addAction(action);\n    action.redo();\n  }\n\n}\n\nexport {\n  XTableDataItems,\n};\n","import { Cell } from '../../core/xtable/tablecell/Cell';\r\nimport { XTableDataItems } from '../../core/xtable/XTableDataItems';\r\nimport { SheetUtils } from '../../utils/SheetUtils';\r\n\r\naddEventListener('message', (event) => {\r\n  const { data } = event;\r\n  const items = new XTableDataItems({\r\n    items: data\r\n  });\r\n  let total = 0;\r\n  let number = 0;\r\n  items.each(item => {\r\n    if (item) {\r\n      const cell = item.getCell();\r\n      if (cell.hasFormula()) {\r\n        const value = cell.getComputeText();\r\n        if (SheetUtils.isNumber(value)) {\r\n          total += SheetUtils.parseFloat(value);\r\n          number++;\r\n        }\r\n      } else {\r\n        switch (cell.contentType) {\r\n          case Cell.TYPE.NUMBER:\r\n            total += cell.getComputeText();\r\n            number++;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  });\r\n  postMessage({\r\n    total, number\r\n  });\r\n});\r\n"],"sourceRoot":""}