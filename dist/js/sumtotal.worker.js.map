{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/SheetUtils.js","webpack:///./src/draw/font/BaseFont.js","webpack:///./src/lib/Element.js","webpack:///./src/const/Constant.js","webpack:///./src/lib/XEvent.js","webpack:///./src/lib/Widget.js","webpack:///./src/core/work/head/tool/Icon.js","webpack:///./src/module/dragpanel/DragPanel.js","webpack:///./src/module/colorpicker/ColorPicker.js","webpack:///./src/module/colorpicker/colorarray/ColorItem.js","webpack:///./src/module/colorpicker/colorarray/ColorArray.js","webpack:///./src/core/table/tablecell/CellFont.js","webpack:///./src/draw/XDraw.js","webpack:///./src/draw/Line.js","webpack:///./src/core/table/tablecell/Border.js","webpack:///./src/core/table/tablecell/CellBorder.js","webpack:///./src/draw/Rect.js","webpack:///./src/core/table/tableicon/XIconOffset.js","webpack:///./src/draw/Crop.js","webpack:///./src/core/table/tableicon/XIcon.js","webpack:///./src/utils/DateUtils.js","webpack:///./src/core/table/XTableTextFormat.js","webpack:///./src/core/table/tablecell/RichFont.js","webpack:///./src/core/table/tablecell/RichFonts.js","webpack:///./src/formula/Compiler.js","webpack:///./src/formula/Formula.js","webpack:///./src/core/table/tablecell/Cell.js","webpack:///./src/lib/Listen.js","webpack:///./src/core/table/tablebase/RectRange.js","webpack:///./src/core/table/snapshot/Snapshot.js","webpack:///./src/lib/rtree/Qselect.js","webpack:///./src/lib/rtree/Rtree.js","webpack:///./src/utils/RtreeUtils.js","webpack:///./src/core/table/tablebase/RangeTree.js","webpack:///./src/core/table/merges/Merges.js","webpack:///./src/core/table/tablecell/Cells.js","webpack:///./src/task/worker/sumtotal.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","S4","Math","random","toString","substring","alphabets","DATA_TYPE","String","Boolean","Number","Array","Function","Null","Undefined","Promise","GeneratorFunction","AsyncFunction","BigInt","DedicatedWorkerGlobalScope","Date","Un","SheetUtils","test","navigator","userAgent","isEmptyObject","e","this","isUnDef","type","length","trim","obj","getPrototypeOf","parent","str","toLowerCase","arg","sources","forEach","source","keys","v","isArray","isPlainObject","copy","json","JSON","stringify","parse","target","len","item","isDef","objOrAry","cb","total","size","val","isNumber","parseFloat","parseInt","index","idx","ret","charCodeAt","expoNet","src","x","y","charAt","indexAt","stringAt","xn","yn","expr2xy","xy2expr","min","range","window","getSelection","selectAllChildren","collapseToEnd","isBlank","now","width","innerWidth","height","innerHeight","document","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","element","el","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","explorer","indexOf","version","match","array","isString","replace","EMPTY","num","fixed","toFixed","defaultValue","self","condition","establish","otherwise","likeArray","slice","Nul","Undef","undefined","noop","BaseFont","draw","ruler","attr","align","ALIGN","center","padding","verticalAlign","VERTICAL_ALIGN","top","bottom","left","right","TEXT_WRAP","OVER_FLOW","WORD_WRAP","TRUNCATE","TEXT_DIRECTION","HORIZONTAL","VERTICAL","ANGLE","ANGLE_BAR","DEFAULT_FONT_ATTR","color","bold","italic","strikethrough","underline","angle","textWrap","direction","DEFAULT_RICH_ATTR","DEFAULT_RICH_ITEM_ATTR","Element","tag","className","createElement","map","HTMLCollection","NodeList","includes","elements","push","text","createTextNode","args","arguments","wrapElement","children","ele","append","childNodes","isTextNode","childrenNodes","prepend","k","css","offsetTop","offsetLeft","offsetHeight","offsetWidth","parentNode","classList","add","contains","remove","getBoundingClientRect","firstChild","lastChild","find","handle","elem","hasChild","reverse","removeChild","previousSibling","nextSibling","flag","cls","addClass","removeClass","nodeValue","innerText","html","innerHTML","focus","blur","removeAttribute","style","setAttribute","getAttribute","removeProperty","hyphenateRE","newValue","getPropertyValue","setProperty","getComputedStyle","computedStyle","display","message","evt","MouseEvent","detail","bubbles","cancelable","initEvent","dispatchEvent","CustomEvent","select","result","querySelectorAll","sibling","previousElementSibling","nextElementSibling","nodeName","toLocaleLowerCase","nodeType","after","before","cloneNode","other","equals","tagName","DocumentFragment","h","Constant","WORK_BODY_EVENT_TYPE","CHANGE_ACTIVE","REMOVE_SHEET","SYSTEM_EVENT_TYPE","MOUSE_MOVE","MOUSE_DOWN","CONTEXT_MENU","SCROLL","RESIZE","MOUSE_UP","INPUT","KEY_DOWN","KEY_UP","MOUSE_OVER","MOUSE_LEAVE","MOUSE_WHEEL","MOUSE_ENTER","CLICK","FOCUS","DRAG_START","CHANGE","VISIBILITY_CHANGE","TABLE_EVENT_TYPE","RENDER","SNAPSHOT_CHANGE","CHANGE_ROW_HEIGHT","CHANGE_COL_WIDTH","SCALE_CHANGE","EDIT_START","EDIT_INPUT","EDIT_FINISH","REMOVE_ROW","REMOVE_COL","ADD_NEW_ROW","ADD_NEW_COL","FIXED_CHANGE","FIXED_COL_CHANGE","FIXED_ROW_CHANGE","SELECT_OVER","SELECT_DOWN","SELECT_CHANGE","DATA_CHANGE","RESIZE_CHANGE","FORM_EVENT_TYPE","SEARCH_INPUT_CHANGE","PLAIN_INPUT_CHANGE","FORM_SELECT_CHANGE","pool","callback","option","removeEventListener","addEventListener","rem","eqElem","eqOpt","eqType","eqCall","eles","unbind","XEvent","fn","multipleUnbind","multipleBind","holdFunc","endFunc","time","setInterval","xEvtUp","clearInterval","moveFunc","upFunc","xEvtMove","stopPropagation","preventDefault","WrapFuncion","doubleClick","lastPageX","lastPageY","lastTime","event","button","pageX","pageY","current","mouseClick","Widget","$$rootFlag","clazz","node","body","is","hasClass","data","widget","parentWidget","onAttach","box","clientY","clientX","Icon","iconNameEl","instances","DragPanel","options","position","DRAG_PANEL_POSITION","CENTER","status","mask","content","instance","filter","close","root","getRootWidget","dragPanelLocation","evt1","downEventXy","eventXy","mouseMoveUp","evt2","offset","rootBox","elemBox","LEFT","RIGHT","TOP","removeInstance","ColorPicker","selectCb","dragPanel","preViewColorPoint","colorValueTips","colorInput","selectColorPoint","selectColorArea1","selectColorArea2","selectColorArea3","colorHuxTips","colorBar","colorBarPoint","cancelButton","selectButton","buttons","hex","join","hsx","max","rgb","startsWith","isHex","hexToRgb","g","b","parseRgb","rgbToHsb","hsb","delta","t1","t2","t3","round","nr","rgbToHex","hsbToRgb","e1","hexColor","xy","colorBarBox","downHue","e2","moveHue","centerBox","downSelect","moveSelect","fixHsx","open","isRgb","change","colorBarPointBox","colorBarPointLeft","selectColorPointBox","selectColorPointLeft","selectColorPointTop","colorValue","hsbToHex","areaColorValue","sliderPosition","hueChange","selectChange","hexToHsb","fixHex","destroy","ColorItem","icon","blankClear","isDark","checkedIcon","hide","active","show","ColorArray","colors","activeColor","setActiveByColor","findIndex","setActive","empty","BLACK","WHITE","CellFont","keys1","keys2","clearBlank","getInstance","config","DPR","inWorker","devicePixelRatio","LINE_WIDTH_LOW","LINE_WIDTH_MEDIUM","LINE_WIDTH_HIGH","LINE_PIXEL_OFFSET","Base","canvas","ctx","getContext","px","dpr","srcPx","stylePx","ceil","trunc","PI","CorsLine","lineWidthType","LINE_WIDTH_TYPE","low","lineColor","medium","high","sx","sy","ex","ey","lineWidth","strokeStyle","polyStroke","xys","getOffsetX","getOffsetY","TypeError","corsLine","linePx","pixel","offsetX","offsetY","interpolation","beginPath","moveTo","lineTo","stroke","fill","fillRect","radian","dash","measureText","save","restore","clip","setLineDash","scale","translate","deg","rotate","XDraw","fillText","path","polyInFill","points","w","rect","sw","sh","tx","ty","tw","th","drawImage","LINE_TYPE","DoubleLine","widthType","spacing","leftShow","topShow","rightShow","bottomShow","iFMerge","iFMergeFirstRow","iFMergeLastRow","iFMergeFirstCol","iFMergeLastCol","row","col","pos","external","ifMerge","firstRow","lastRow","firstCol","lastCol","sTopLeftCorner","sTop","sBottom","eBottomLeftCorner","eBottom","eTop","sLeft","sRight","eTopRightCorner","eRight","eLeft","sTopRightCorner","eBottomRightCorner","sBottomLeftCorner","internal","setLineColor","setLineWidthType","handleExternal","handleInternal","horizonLine","verticalLine","zIndexID","Border","zIndex","border","origin","getZIndex","CellBorder","setBDisplay","setLDisplay","setTDisplay","setRDisplay","setDisplay","setBColor","setLColor","setTColor","setRColor","setColor","setBWidthType","setLWidthType","setTWidthType","setRWidthType","setWidthType","setBType","setLType","setTType","setRType","setType","setZIndex","clone","Rect","XIconOffset","Crop","XIcon","vertical","ICON_VERTICAL","horizontal","ICON_HORIZONTAL","ICON_TYPE","image","iconFocus","onDraw","onLeave","onMove","onDown","onEnter","icons","iconHorizontal","iconVertical","iconOffsetX","iconOffsetY","iconWidth","iconHeight","rectX","rectY","rectWidth","rectHeight","py","BOTTOM","load","sync","Image","loadImg","complete","onload","onerror","console","error","drawCustom","positionRect","include","includeRect","crop","fillStyle","native","location","inRectPosition","activate","ICON_EVENT_TYPE","includePoint","setActivate","custom","newInstances","DateUtils","fmt","date","getMonth","getDate","getHours","getMinutes","getSeconds","floor","S","getMilliseconds","resultYear","exec","yearFormatPart","yearVal","getFullYear","substr","res","RegExp","Val","formatPart","replaceVal","parserToDate","dateText","format","defaultVal","reg","year","month","day","hours","minutes","seconds","milliseconds","j","oneChar","onePart","onePartReg","dataInfo","isFraction","split","toExponential","dateFormat","RichFont","scaleAdapter","ignore","RichFonts","rich","font","each","reset","plain","item1","item2","like","Functions","functions","toLocaleString","func","Assembly","assembly","endsWith","op","Tokenizer","syntaxCheck","input","OPERATOR","NUMBERS","SPACE","LETTERS","bracketsStack","tokens","char","next","last","brackets","pop","syntax","sQuotesStack","dQuotesStack","callStack","arrayStack","ignoreArray","token","ignoreFunc","skipIgnoreToken","dir","checkArray","local","checkValue","checkOperator","checkFunction","Compiler","writer","groupStack","opIf","opAdd","opMul","opCommon","opRel","opNew","opCell","function","number","eofToken","nextToken","backToken","compileIfge","isSkipNextToken","getInstruct","compileAdd","operator","reduceGroup","writeOperator","compileMul","compileCommon","compileRel","compileArray","compileFunction","addGroup","popGroup","compilePushValue","increaseGroup","writeString","writeNumber","writeOperand","Evaluation","instruct","memory","newArray","invoke","pushSRegexp","pushNRegexp","pushORegexp","ificmpge","ificmpgt","ifge","ifgt","ifeq","ifne","sub","mul","div","mod","power","rel","link","uni","common","group","pushS","pushN","pushO","a","pow","getFunction","apply","Compile","tokenizer","lexical","compile","Instruct","inst","eval","Formula","expr","Cell","borderAttr","fontAttr","richText","formula","background","contentWidth","contentHeight","contentType","TYPE","STRING","formatText","setContentType","setExpr","setRich","setContentWidth","getExpr","NUMBER","DATE_TIME","isDate","RICH_TEXT","getComputeText","hasExpr","getValue","XTableFormat","getFormatText","Listen","RectRange","sri","sci","eri","eci","ref","refs","iteratorBuilder","rowFilter","getRowIterator","setBegin","setEnd","setLoop","getColIterator","execute","ri","ci","disjoint","coincide","difference","addRet","dsr","dsc","der","dec","lt","rt","lb","rb","multiple","Snapshot","undoStack","redoStack","layer","listen","undo","redo","action","Compare","Swap","arr","tmp","QSelect","compare","QStep","z","log","exp","sd","sqrt","findItem","items","equalsFn","extend","minX","minY","maxX","maxY","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","intersects","createNode","leaf","Infinity","distBBox","toBBox","destNode","child","calcBBox","multiSelect","stack","mid","Rtree","maxEntries","_maxEntries","_minEntries","clear","_all","bbox","nodesToSearch","childBBox","search","insert","_build","_splitRoot","tmpNode","_insert","goingUp","indexes","splice","_condense","N","M","N2","N1","compareMinX","right2","compareMinY","right3","level","minArea","minEnlargement","targetNode","area","enlargement","isNode","insertPath","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","minOverlap","bbox1","bbox2","overlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","RtreeUtils","RangeTree","snapshot","rTree","first","bboxToRange","getFirstInclude","rectRange","rangeToBbox","shift","addAction","rectRanges","all","union","MAX_COL","MAX_ROW","Merges","merges","merge","valueOf","view","footRange","fullRange","getFullRowRange","fullBbox","footBbox","divers","mergeAction","diffMax","oldMax","diffMin","oldMin","diffValue","getFullColRange","colAfterShrink","colAfterExpand","colBeforeShrink","colBeforeExpand","rowAfterShrink","rowAfterExpand","rowBeforeShrink","rowBeforeExpand","getAll","Cells","cell","getCell","getItemsOrNew","oldValue","getItems","hasCell","hasItems","getData","orderValue","ignoreCorner","oldItems","effRiLength","effCiLength","oldRowItem","rowItem","cells","hasFormula","postMessage"],"mappings":"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","file":"js/sumtotal.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* global navigator document window self */\nfunction S4() {\n  // eslint-disable-next-line no-bitwise\n  return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n}\n\nconst alphabets = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n\nconst DATA_TYPE = {\n  String: 1,\n  Boolean: 2,\n  Number: 3,\n  Object: 4,\n  Array: 5,\n  Function: 6,\n  Null: 7,\n  Undefined: 8,\n  Promise: 9,\n  GeneratorFunction: 10,\n  AsyncFunction: 11,\n  BigInt: 12,\n  Symbol: 13,\n  DedicatedWorkerGlobalScope: 14,\n  Date: 15,\n  Un: 0,\n};\n\nclass SheetUtils {\n\n  static isWindows() {\n    return /windows|win32/i.test(navigator.userAgent);\n  }\n\n  static isMac() {\n    return /macintosh|mac os x/i.test(navigator.userAgent);\n  }\n\n  static isNotEmptyObject(object) {\n    return !SheetUtils.isEmptyObject(object);\n  }\n\n  static isEmptyObject(object) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in object) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (object.hasOwnProperty(key)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  static isUnDef(e) {\n    return e === undefined || e === null;\n  }\n\n  static isDef(e) {\n    return !this.isUnDef(e);\n  }\n\n  static isNumber(e) {\n    return /^(-?\\d+.\\d+)$|^(-?\\d+)$/.test(e);\n  }\n\n  static isFraction(e) {\n    return /^\\d+\\/\\d+$/.test(e);\n  }\n\n  static isDate(e) {\n    return SheetUtils.type(e) === DATA_TYPE.Date;\n  }\n\n  static isFunction(e) {\n    const type = SheetUtils.type(e);\n    return type === DATA_TYPE.Function;\n  }\n\n  static isArray(e) {\n    return SheetUtils.type(e) === DATA_TYPE.Array;\n  }\n\n  static isLikeArray(e) {\n    if (SheetUtils.isUnDef(e)) {\n      return false;\n    }\n    return typeof e.length === 'number';\n  }\n\n  static isBlank(s) {\n    if (SheetUtils.isUnDef(s)) {\n      return true;\n    }\n    return s.toString().trim() === '';\n  }\n\n  static isPlainObject(obj) {\n    if (SheetUtils.isUnDef(obj)) {\n      return false;\n    }\n    return Object.getPrototypeOf(obj) === Object.getPrototypeOf({});\n  }\n\n  static isString(obj) {\n    return SheetUtils.type(obj) === DATA_TYPE.String;\n  }\n\n  static isChildType(obj, parent) {\n    return obj instanceof parent;\n  }\n\n  static toLowCase(str) {\n    return str.toLowerCase();\n  }\n\n  static type(arg) {\n    const type = Object.prototype.toString.call(arg);\n    switch (type) {\n      case '[object Null]':\n        return DATA_TYPE.Null;\n      case '[object Object]':\n        return DATA_TYPE.Object;\n      case '[object Undefined]':\n        return DATA_TYPE.Undefined;\n      case '[object String]':\n        return DATA_TYPE.String;\n      case '[object Boolean]':\n        return DATA_TYPE.Boolean;\n      case '[object Number]':\n        return DATA_TYPE.Number;\n      case '[object Function]':\n        return DATA_TYPE.Function;\n      case '[object Array]':\n        return DATA_TYPE.Array;\n      case '[object Promise]':\n        return DATA_TYPE.Promise;\n      case '[object GeneratorFunction]':\n        return DATA_TYPE.GeneratorFunction;\n      case '[object AsyncFunction]':\n        return DATA_TYPE.AsyncFunction;\n      case '[object BigInt]':\n        return DATA_TYPE.BigInt;\n      case '[object Symbol]':\n        return DATA_TYPE.Symbol;\n      case '[object Date]':\n        return DATA_TYPE.Date;\n      case '[object DedicatedWorkerGlobalScope]':\n        return DATA_TYPE.DedicatedWorkerGlobalScope;\n      default:\n        return DATA_TYPE.Un;\n    }\n  }\n\n  static copy(object = {}, ...sources) {\n    if (SheetUtils.isUnDef(object)) {\n      return {};\n    }\n    if (SheetUtils.isUnDef(sources) || sources.length === 0) {\n      return object;\n    }\n    sources.forEach((source) => {\n      if (SheetUtils.isUnDef(source)) return;\n      Object.keys(source).forEach((key) => {\n        const v = source[key];\n        if (typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean') {\n          object[key] = v;\n        } else if (typeof v !== 'function' && !Array.isArray(v) && SheetUtils.isPlainObject(v)) {\n          object[key] = object[key] || {};\n          SheetUtils.copy(object[key], v);\n        } else {\n          object[key] = v;\n        }\n      });\n    });\n    return object;\n  }\n\n  static cloneDeep(object) {\n    const json = JSON.stringify(object);\n    return JSON.parse(json);\n  }\n\n  static extends(target, ...src) {\n    for (let i = 0, len = src.length; i < len; i++) {\n      const item = src[i];\n      for (let key in item) {\n        if (item.hasOwnProperty(key)) {\n          const value = item[key];\n          if (SheetUtils.isDef(value)) {\n            target[key] = value;\n          }\n        }\n      }\n    }\n    return target;\n  }\n\n  static sum(objOrAry, cb = value => value) {\n    let total = 0;\n    let size = 0;\n    Object.keys(objOrAry).forEach((key) => {\n      total += cb(objOrAry[key], key);\n      size += 1;\n    });\n    return [total, size];\n  }\n\n  static parseFloat(val) {\n    if (SheetUtils.isNumber(val)) return parseFloat(val);\n    return 0;\n  }\n\n  static parseInt(val) {\n    if (SheetUtils.isNumber(val)) return parseInt(val, 10);\n    return 0;\n  }\n\n  static stringAt(index) {\n    let str = '';\n    let idx = index;\n    while (idx >= alphabets.length) {\n      idx /= alphabets.length;\n      idx -= 1;\n      str += alphabets[parseInt(idx, 10) % alphabets.length];\n    }\n    const last = index % alphabets.length;\n    str += alphabets[last];\n    return str;\n  }\n\n  static indexAt(str) {\n    let ret = 0;\n    for (let i = 0; i < str.length - 1; i += 1) {\n      const idx = str.charCodeAt(i) - 65;\n      const expoNet = str.length - 1 - i;\n      ret += (alphabets.length ** expoNet) + (alphabets.length * idx);\n    }\n    ret += str.charCodeAt(str.length - 1) - 65;\n    return ret;\n  }\n\n  static expr2xy(src) {\n    let x = '';\n    let y = '';\n    for (let i = 0; i < src.length; i += 1) {\n      if (src.charAt(i) >= '0' && src.charAt(i) <= '9') {\n        y += src.charAt(i);\n      } else {\n        x += src.charAt(i);\n      }\n    }\n    return [SheetUtils.indexAt(x), parseInt(y, 10) - 1];\n  }\n\n  static xy2expr(x, y) {\n    return `${SheetUtils.stringAt(x)}${y + 1}`;\n  }\n\n  static expr2expr(src, xn, yn) {\n    const [x, y] = SheetUtils.expr2xy(src);\n    return SheetUtils.xy2expr(x + xn, y + yn);\n  }\n\n  static minIf(v, min) {\n    if (v < min) return min;\n    return v;\n  }\n\n  static keepLastIndex(obj) {\n    const range = window.getSelection();\n    range.selectAllChildren(obj);\n    range.collapseToEnd();\n  }\n\n  static trim(s) {\n    if (this.isBlank(s)) return '';\n    return s.trim();\n  }\n\n  static now() {\n    return Date.now().toString();\n  }\n\n  static viewPort() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  }\n\n  static exitFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    }\n  }\n\n  static fullScreen(element) {\n    if (element.el) {\n      element = element.el;\n    }\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.msRequestFullscreen) {\n      element.msRequestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n      element.webkitRequestFullscreen();\n    }\n  }\n\n  static isFull() {\n    return !!(document.webkitIsFullScreen || document.mozFullScreen\n      || document.msFullscreenElement || document.fullscreenElement);\n  }\n\n  static uuid() {\n    return (`${S4() + S4()}${S4()}${S4()}${S4()}${S4()}${S4()}${S4()}`);\n  }\n\n  static getExplorerInfo() {\n    const explorer = window.navigator.userAgent.toLowerCase();\n    // firefox\n    if (explorer.indexOf('firefox') >= 0) {\n      const ver = explorer.match(/firefox\\/([\\d.]+)/)[1];\n      return { type: 'Firefox', version: ver };\n    }\n    // Chrome\n    if (explorer.indexOf('chrome') >= 0) {\n      const ver = explorer.match(/chrome\\/([\\d.]+)/)[1];\n      return { type: 'Chrome', version: ver };\n    }\n    // Opera\n    if (explorer.indexOf('opera') >= 0) {\n      const ver = explorer.match(/opera.([\\d.]+)/)[1];\n      return { type: 'Opera', version: ver };\n    }\n    // Safari\n    if (explorer.indexOf('safari') >= 0) {\n      const ver = explorer.match(/version\\/([\\d.]+)/)[1];\n      return { type: 'Safari', version: ver };\n    }\n    // ie\n    if (explorer.indexOf('msie') >= 0) {\n      const ver = explorer.match(/msie ([\\d.]+)/)[1];\n      return { type: 'IE', version: ver };\n    }\n    // undefined\n    return undefined;\n  }\n\n  static arrayLast(array) {\n    return array[array.length - 1];\n  }\n\n  static arrayHead(array) {\n    return array[0];\n  }\n\n  static blankClear(value) {\n    if (SheetUtils.isString(value)) {\n      return value.replace(/\\s*/g, SheetUtils.EMPTY);\n    }\n    return value;\n  }\n\n  static equals(src, target) {\n    if (SheetUtils.isUnDef(src)) {\n      return false;\n    }\n    if (SheetUtils.isUnDef(target)) {\n      return false;\n    }\n    return JSON.stringify(src) === JSON.stringify(target);\n  }\n\n  static toFixed(num, fixed) {\n    if (num.toString().indexOf('.') > -1) {\n      return num.toFixed(fixed);\n    }\n    return num;\n  }\n\n  static safeValue(value, defaultValue = '') {\n    return SheetUtils.isUnDef(value) ? defaultValue : value;\n  }\n\n  static inWorker() {\n    // eslint-disable-next-line no-restricted-globals\n    const type = SheetUtils.type(self);\n    return type === DATA_TYPE.DedicatedWorkerGlobalScope;\n  }\n\n  static if(condition, establish, otherwise) {\n    return condition ? establish() : otherwise();\n  }\n\n  static slice(likeArray) {\n    return Array.prototype.slice.call(likeArray);\n  }\n\n  static clearBlank(str) {\n    return str.replace(/\\s/g, '');\n  }\n\n}\n\nSheetUtils.EMPTY = '';\nSheetUtils.Nul = null;\nSheetUtils.Undef = undefined;\nSheetUtils.noop = () => {};\nSheetUtils.DATA_TYPE = DATA_TYPE;\n\nexport {\n  SheetUtils,\n};\n","class BaseFont {\n\n  constructor({\n    draw, ruler, attr,\n  }) {\n    this.draw = draw;\n    this.attr = attr;\n    this.ruler = ruler;\n  }\n\n  setRuler(ruler) {\n    this.ruler = ruler;\n  }\n\n  getAlignPadding() {\n    if (this.attr.align === BaseFont.ALIGN.center) {\n      return 0;\n    }\n    return this.attr.padding;\n  }\n\n  getVerticalAlignPadding() {\n    if (this.attr.verticalAlign === BaseFont.VERTICAL_ALIGN.center) {\n      return 0;\n    }\n    return this.attr.padding;\n  }\n\n}\n\nBaseFont.VERTICAL_ALIGN = {\n  top: 'top',\n  center: 'middle',\n  bottom: 'bottom',\n};\nBaseFont.ALIGN = {\n  left: 'left',\n  center: 'center',\n  right: 'right',\n};\nBaseFont.TEXT_WRAP = {\n  OVER_FLOW: 1,\n  WORD_WRAP: 2,\n  TRUNCATE: 3,\n};\nBaseFont.TEXT_DIRECTION = {\n  HORIZONTAL: 'horizontal',\n  VERTICAL: 'vertical',\n  ANGLE: 'angle',\n  ANGLE_BAR: 'bar',\n};\nBaseFont.DEFAULT_FONT_ATTR = {\n  name: 'Arial',\n  size: 14,\n  color: 'rgb(0,0,0)',\n  bold: false,\n  italic: false,\n  strikethrough: false,\n  underline: false,\n  angle: 0,\n  padding: 8,\n  align: BaseFont.ALIGN.left,\n  textWrap: BaseFont.TEXT_WRAP.TRUNCATE,\n  verticalAlign: BaseFont.VERTICAL_ALIGN.center,\n  direction: BaseFont.TEXT_DIRECTION.HORIZONTAL,\n};\nBaseFont.DEFAULT_RICH_ATTR = {\n  angle: 0,\n  padding: 8,\n  align: BaseFont.ALIGN.left,\n  textWrap: BaseFont.TEXT_WRAP.TRUNCATE,\n  verticalAlign: BaseFont.VERTICAL_ALIGN.center,\n  direction: BaseFont.TEXT_DIRECTION.HORIZONTAL,\n};\nBaseFont.DEFAULT_RICH_ITEM_ATTR = {\n  name: 'Arial',\n  size: 14,\n  color: 'rgb(0,0,0)',\n  bold: false,\n  italic: false,\n  strikethrough: false,\n  underline: false,\n};\n\nexport {\n  BaseFont,\n};\n","/* global document MouseEvent CustomEvent window NodeList HTMLCollection DocumentFragment */\nimport { SheetUtils } from '../utils/SheetUtils';\n\n/**\n * Element\n */\nclass Element {\n\n  /**\n   * 包装元素\n   */\n  static wrapElement(object) {\n    if ([\n      SheetUtils.isArray(object),\n      object instanceof HTMLCollection,\n      object instanceof NodeList,\n    ].includes(true)) {\n      let elements = [];\n      for (let i = 0; i < object.length; i++) {\n        const item = object[i];\n        if (item instanceof Element) {\n          elements.push(item);\n        } else {\n          elements.push(new Element(item));\n        }\n      }\n      return elements;\n    }\n    return new Element(object);\n  }\n\n  static createText(text) {\n    return new Element(document.createTextNode(text));\n  }\n\n  /**\n   * 驼峰转连字符\n   * @param value\n   * @returns {string|null}\n   */\n  static hyphenateRE(value) {\n    if (value) {\n      return value.replace(/([A-Z])/g, '-$1').toLowerCase();\n    }\n    return null;\n  }\n\n  /**\n   * Element\n   * @param tag\n   * @param className\n   */\n  constructor(tag, className = '') {\n    if (typeof tag === 'string') {\n      this.el = document.createElement(tag);\n      if (className) {\n        this.el.className = className;\n      }\n    } else {\n      this.el = tag;\n    }\n    this.map = {};\n  }\n\n  /**\n   * 数据绑定\n   * @param key\n   * @param value\n   * @returns {Element|*}\n   */\n  data(key, value) {\n    if (value !== undefined) {\n      this.map[key] = value;\n      return this;\n    }\n    return this.map[key];\n  }\n\n  /**\n   * 空参数时返回子元素,\n   * 有参数时插入子节点\n   * @param args\n   * @returns {*[]|Element}\n   */\n  children(...args) {\n    if (arguments.length === 0) {\n      return Element.wrapElement(this.el.children);\n    }\n    args.forEach(ele => this.append(ele));\n    return this;\n  }\n\n  /**\n   * 空参数时返回子节点,\n   * 有参数时插入子节点\n   * @param args\n   * @returns {*[]|Element}\n   */\n  childrenNodes(...args) {\n    if (arguments.length === 0) {\n      return Element.wrapElement(this.el.childNodes);\n    }\n    args.forEach(ele => this.append(ele));\n    return this;\n  }\n\n  /**\n   * 将目标节点添加到当前元素中\n   * @param ele\n   */\n  childrenNodesAppend(ele) {\n    if (!this.isTextNode()) {\n      ele.childrenNodes().forEach(i => this.append(i));\n    }\n    return this;\n  }\n\n  /**\n   * 将目标节点添加到当前元素中\n   * @param ele\n   */\n  childrenNodesPrepend(ele) {\n    if (!this.isTextNode()) {\n      ele.childrenNodes().forEach(i => this.prepend(i));\n    }\n    return this;\n  }\n\n  /**\n   * 在当前元素中插入指定节点\n   * @param ele\n   */\n  append(ele) {\n    if (!this.isTextNode()) {\n      if (ele && ele.el) {\n        this.el.append(ele.el);\n      }\n    }\n    return this;\n  }\n\n  /**\n   * 在当前元素中插入指定节点\n   * @param ele\n   */\n  prepend(ele) {\n    if (!this.isTextNode()) {\n      if (ele && ele.el) {\n        this.el.prepend(ele.el);\n      }\n    }\n    return this;\n  }\n\n  /**\n   * 元素定位\n   * @param value\n   * @returns {{top: *, left: *, width: *, height: *}|Element}\n   */\n  offset(value) {\n    if (value !== undefined) {\n      Object.keys(value).forEach((k) => {\n        this.css(k, `${value[k]}px`);\n      });\n      return this;\n    }\n    const { offsetTop, offsetLeft } = this.el;\n    const { offsetHeight, offsetWidth } = this.el;\n    return {\n      top: offsetTop,\n      left: offsetLeft,\n      height: offsetHeight,\n      width: offsetWidth,\n    };\n  }\n\n  /**\n   * 获取当前元素的父节点\n   * @returns {Element}\n   */\n  parent() {\n    return this.el.parentNode\n      ? new Element(this.el.parentNode) : null;\n  }\n\n  /**\n   * 添加Class名称\n   * @param name\n   * @returns {Element}\n   */\n  addClass(name) {\n    if (!this.isTextNode()) {\n      this.el.classList.add(name);\n    }\n    return this;\n  }\n\n  /**\n   * 是否具有指定Class名称\n   * @param name\n   * @returns {boolean}\n   */\n  hasClass(name) {\n    if (!this.isTextNode()) {\n      return this.el.classList.contains(name);\n    }\n    return false;\n  }\n\n  /**\n   * 是否有子元素\n   * @returns {boolean}\n   */\n  hasChildElement() {\n    return this.children().length > 0;\n  }\n\n  /**\n   * 是否有子节点\n   * @returns {boolean}\n   */\n  hasChild() {\n    return this.childrenNodes().length > 0;\n  }\n\n  /**\n   * 删除Class名称\n   * @param name\n   * @returns {Element}\n   */\n  removeClass(name) {\n    if (!this.isTextNode()) {\n      this.el.classList.remove(name);\n    }\n    return this;\n  }\n\n  /**\n   * 获取元素坐标信息\n   * getBoundingClientRect\n   * @returns {DOMRect}\n   */\n  box() {\n    if (!this.isTextNode()) {\n      return this.el.getBoundingClientRect();\n    }\n    return null;\n  }\n\n  /**\n   * 获取当前第一个子元素\n   * @returns {*}\n   */\n  first() {\n    if (!this.isTextNode()) {\n      return Element.wrapElement(this.el.firstChild);\n    }\n    return null;\n  }\n\n  /**\n   * 获取最后一个子元素\n   * @returns {*}\n   */\n  last() {\n    if (!this.isTextNode()) {\n      return Element.wrapElement(this.el.lastChild);\n    }\n    return null;\n  }\n\n  /**\n   * 获取第一个文本节点\n   */\n  firstTextNode() {\n    if (this.isTextNode()) {\n      return this;\n    }\n    let find = null;\n    let handle = (elem) => {\n      if (elem.hasChild()) {\n        elem.childrenNodes().forEach((elem) => {\n          if (find === null) {\n            handle(elem);\n          }\n        });\n      }\n      if (find === null) {\n        if (elem.isTextNode()) {\n          find = elem;\n        }\n      }\n    };\n    handle(this);\n    return find;\n  }\n\n  /**\n   * 获取最后一个文本节点\n   */\n  lastTextNode() {\n    if (this.isTextNode()) {\n      return this;\n    }\n    let find = null;\n    let handle = (elem) => {\n      if (elem.hasChild()) {\n        elem.childrenNodes().reverse().forEach((elem) => {\n          if (find === null) {\n            handle(elem);\n          }\n        });\n      }\n      if (find === null) {\n        if (elem.isTextNode()) {\n          find = elem;\n        }\n      }\n    };\n    handle(this);\n    return find;\n  }\n\n  /**\n   * 删除当前元素下的子元素\n   * @param target\n   * @returns {boolean|ActiveX.IXMLDOMNode|*}\n   */\n  remove(target = null) {\n    if (target) {\n      if (!this.isTextNode()) {\n        this.el.removeChild(target.el || target);\n      }\n    } else {\n      const parent = this.parent();\n      if (parent) {\n        this.parent().remove(this);\n      }\n    }\n    return this;\n  }\n\n  /**\n   * 当前元素是否包含指定节点\n   * @param ele\n   * @returns {boolean|*}\n   */\n  contains(ele) {\n    if (this.isTextNode()) {\n      return false;\n    }\n    return this.el.contains(ele.el);\n  }\n\n  /**\n   * 获取当前元素的上一个元素\n   * @returns {*}\n   */\n  prev() {\n    return this.el.previousSibling\n      ? Element.wrapElement(this.el.previousSibling) : null;\n  }\n\n  /**\n   * 获取当前元素的下一个元素\n   * @returns {*}\n   */\n  next() {\n    return this.el.nextSibling\n      ? Element.wrapElement(this.el.nextSibling) : null;\n  }\n\n  /**\n   * 设置元素的激活状态\n   * @param flag\n   * @param cls\n   * @returns {Element}\n   */\n  active(flag = true, cls = 'active') {\n    if (!this.isTextNode()) {\n      if (flag) this.addClass(cls);\n      else this.removeClass(cls);\n    }\n    return this;\n  }\n\n  /**\n   * 设置元素文本\n   * @param text\n   * @returns {string|Element}\n   */\n  text(text) {\n    if (this.isTextNode()) {\n      return this.nodeValue();\n    }\n    if (text !== undefined) {\n      this.el.innerText = text;\n      return this;\n    }\n    return this.el.innerText;\n  }\n\n  /**\n   * 设置元素html内容\n   * @param html\n   * @returns {Element|*}\n   */\n  html(html) {\n    if (this.isTextNode()) {\n      return this.nodeValue();\n    }\n    if (html !== undefined) {\n      this.el.innerHTML = html;\n      return this;\n    }\n    return this.el.innerHTML;\n  }\n\n  /**\n   * 当前元素设置焦点\n   */\n  focus() {\n    if (!this.isTextNode()) {\n      this.el.focus();\n    }\n    return this;\n  }\n\n  /**\n   * 移除焦点\n   */\n  blur() {\n    if (!this.isTextNode()) {\n      this.el.blur();\n    }\n    return this;\n  }\n\n  /**\n   * 删除元素属性\n   * @param key\n   * @returns {Element}\n   */\n  removeAttr(key) {\n    if (!this.isTextNode()) {\n      this.el.removeAttribute(key);\n    }\n    return this;\n  }\n\n  /**\n   * 添加style\n   * @param style\n   */\n  style(style) {\n    if (!this.isTextNode()) {\n      this.attr('style', style);\n    }\n    return this;\n  }\n\n  /**\n   * 添加元素属性\n   * @param key\n   * @param value\n   * @returns {string|Element}\n   */\n  attr(key, value) {\n    if (!this.isTextNode()) {\n      if (value !== undefined) {\n        if (this.el.setAttribute) {\n          this.el.setAttribute(key, value);\n        }\n      } else {\n        if (typeof key === 'string') {\n          if (this.el.setAttribute) {\n            return this.el.getAttribute(key);\n          }\n          return null;\n        }\n        if (this.el.setAttribute) {\n          Object.keys(key).forEach((k) => {\n            this.el.setAttribute(k, key[k]);\n          });\n        }\n      }\n    }\n    return this;\n  }\n\n  /**\n   * 设置元素Value\n   * @param v\n   * @returns {Element|*}\n   */\n  val(v) {\n    if (!this.isTextNode()) {\n      if (v !== undefined) {\n        this.el.value = v;\n        return this;\n      }\n      return this.el.value;\n    }\n    if (v === undefined) {\n      return this.nodeValue();\n    }\n    return this;\n  }\n\n  /**\n   * 获取原始节点\n   * @returns {*}\n   */\n  get() {\n    return this.el;\n  }\n\n  /**\n   * 删除元素style属性\n   * @param keys\n   * @returns {Element}\n   */\n  cssRemoveKeys(...keys) {\n    if (!this.isTextNode()) {\n      if (this.el.style) {\n        keys.forEach((k) => {\n          if (this.el.style) {\n            this.el.style.removeProperty(Element.hyphenateRE(k));\n          }\n        });\n      }\n    }\n    return this;\n  }\n\n  /**\n   * 删除元素style属性\n   * @param key\n   * @param value\n   * @returns {Element}\n   */\n  cssRemoveVal(key, value) {\n    if (!this.isTextNode()) {\n      if (this.el.style) {\n        const property = Element.hyphenateRE(key);\n        const propertyValue = this.el.style.getPropertyValue(property);\n        const newValue = propertyValue.replace(value, '');\n        this.css(key, newValue);\n      }\n    }\n    return this;\n  }\n\n  /**\n   * 设置元素属性\n   * @param name\n   * @param value\n   * @returns {Element|*}\n   */\n  css(name, value) {\n    if (!this.isTextNode()) {\n      if (this.el.style) {\n        if (value === undefined && typeof name !== 'string') {\n          Object.keys(name).forEach((key) => {\n            const property = Element.hyphenateRE(key);\n            this.el.style.setProperty(property, name[key]);\n          });\n          return this;\n        }\n        if (value !== undefined) {\n          const property = Element.hyphenateRE(name);\n          this.el.style.setProperty(property, value);\n          return this;\n        }\n        const property = Element.hyphenateRE(name);\n        return this.el.style.getPropertyValue(property);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * 获取元素计算完成的样式\n   * @returns {CSSStyleDeclaration}\n   */\n  computedStyle() {\n    if (!this.isTextNode()) {\n      return window.getComputedStyle(this.el, null);\n    }\n    return null;\n  }\n\n  /**\n   * 显示\n   * @returns {Element}\n   */\n  show() {\n    if (!this.isTextNode()) {\n      const style = this.computedStyle();\n      if (style && style.display !== 'block') {\n        this.css('display', 'block');\n      }\n    }\n    return this;\n  }\n\n  /**\n   * 隐藏\n   * @returns {Element}\n   */\n  hide() {\n    if (!this.isTextNode()) {\n      const style = this.computedStyle();\n      if (style && style.display !== 'none') {\n        this.css('display', 'none');\n      }\n    }\n    return this;\n  }\n\n  /**\n   * 事件触发\n   * @param type\n   * @param message\n   */\n  trigger(type, message) {\n    if (!this.isTextNode()) {\n      switch (type) {\n        case 'click': {\n          const evt = new MouseEvent(type, {\n            detail: message,\n            bubbles: true,\n            cancelable: false,\n          });\n          evt.initEvent('click', true, true);\n          this.el.dispatchEvent(evt);\n          break;\n        }\n        default: {\n          const evt = new CustomEvent(type, {\n            detail: message,\n            bubbles: true,\n            cancelable: false,\n          });\n          this.el.dispatchEvent(evt);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * 查找子元素\n   * @param select\n   * @returns {[]|Element}\n   */\n  find(select) {\n    if (!this.isTextNode()) {\n      const result = this.el.querySelectorAll(select);\n      if (result && result.length === 1) {\n        return new Element(result[0]);\n      }\n      const array = [];\n      if (result) {\n        for (const item of result) {\n          array.push(new Element(item));\n        }\n      }\n      return array;\n    }\n    return [];\n  }\n\n  /**\n   * 查找子元素\n   * @param select\n   * @returns {[]|Element}\n   */\n  finds(select) {\n    if (!this.isTextNode()) {\n      const result = this.el.querySelectorAll(select);\n      const array = [];\n      if (result) {\n        for (const item of result) {\n          array.push(new Element(item));\n        }\n      }\n      return array;\n    }\n    return [];\n  }\n\n  /**\n   * 获取当前元素的兄弟节点\n   * @returns {[]}\n   */\n  sibling() {\n    let sibling = this.el;\n    const result = [];\n    // eslint-disable-next-line no-cond-assign\n    while ((sibling = sibling.previousElementSibling) !== null) result.push(new Element(sibling));\n    sibling = this.el;\n    // eslint-disable-next-line no-cond-assign\n    while ((sibling = sibling.nextElementSibling) !== null) result.push(new Element(sibling));\n    return result;\n  }\n\n  /**\n   * 节点名称\n   * @returns {string}\n   */\n  tagName() {\n    return this.el.nodeName.toLocaleLowerCase();\n  }\n\n  /**\n   * 节点内容\n   * @returns {string}\n   */\n  nodeValue() {\n    return this.el.nodeValue;\n  }\n\n  /**\n   * 节点类型\n   * @returns {number}\n   */\n  nodeType() {\n    return this.el.nodeType;\n  }\n\n  /**\n   * 在当前元素之后插入新元素\n   * @param ele\n   */\n  after(ele) {\n    if (this.el && ele && ele.el) {\n      this.el.after(ele.el);\n    }\n    return this;\n  }\n\n  /**\n   * 在当前元素之前插入新元素\n   * @param ele\n   */\n  before(ele) {\n    if (this.el && ele && ele.el) {\n      this.el.before(ele.el);\n    }\n    return this;\n  }\n\n  /**\n   * 复制\n   */\n  clone() {\n    return new Element(this.el.cloneNode(true));\n  }\n\n  /**\n   * 清空元素中的所有内容\n   */\n  empty() {\n    if (!this.isTextNode()) {\n      this.html('');\n    }\n    return this;\n  }\n\n  /**\n   * 相等比较\n   * @param other\n   * @returns {boolean}\n   */\n  equals(other) {\n    return this.el === other.el;\n  }\n\n  /**\n   * 获取当前元素在父元素中的索引\n   * @returns {number}\n   */\n  index() {\n    let parent = this.parent();\n    let index = -1;\n    parent.childrenNodes()\n      .forEach((v, i) => {\n        if (v.equals(this)) {\n          index = i;\n        }\n      });\n    return index;\n  }\n\n  /**\n   * 比较dom是否相同\n   * @param ele\n   * @returns {boolean}\n   */\n  is(ele) {\n    return this.el === ele.el;\n  }\n\n  /**\n   * 是否文本节点\n   * @returns {boolean}\n   */\n  isTextNode() {\n    return this.tagName() === '#text';\n  }\n\n  /**\n   * 是否换行节点\n   * @returns {boolean}\n   */\n  isBreakNode() {\n    return this.tagName() === 'br';\n  }\n\n  /**\n   * 是否文档碎片\n   * @returns {boolean}\n   */\n  isDocumentFragment() {\n    return this.el instanceof DocumentFragment;\n  }\n\n}\n\nconst h = (tag, className = '') => new Element(tag, className);\n\nconst TextNode = text => Element.createText(text);\n\nexport {\n  Element,\n  TextNode,\n  h,\n};\n","const cssPrefix = 'x-sheet';\nconst XSheetVersion = `${cssPrefix} 1.0.0-develop`;\nconst Constant = {};\nConstant.WORK_BODY_EVENT_TYPE = {\n  CHANGE_ACTIVE: 'changeactive',\n  REMOVE_SHEET: 'removesheet',\n};\nConstant.SYSTEM_EVENT_TYPE = {\n  MOUSE_MOVE: 'mousemove',\n  MOUSE_DOWN: 'mousedown',\n  CONTEXT_MENU: 'contextmenu',\n  SCROLL: 'scroll',\n  RESIZE: 'resize',\n  MOUSE_UP: 'mouseup',\n  INPUT: 'input',\n  KEY_DOWN: 'keydown',\n  KEY_UP: 'keyup',\n  MOUSE_OVER: 'mouseover',\n  MOUSE_LEAVE: 'mouseleave',\n  MOUSE_WHEEL: 'wheel',\n  MOUSE_ENTER: 'mouseenter',\n  CLICK: 'click',\n  FOCUS: 'focus',\n  DRAG_START: 'dragstart',\n  CHANGE: 'change',\n  VISIBILITY_CHANGE: 'visibilitychange',\n};\nConstant.TABLE_EVENT_TYPE = {\n  RENDER: 'render',\n  SNAPSHOT_CHANGE: 'snapshotchange',\n  CHANGE_ROW_HEIGHT: 'changerowheight',\n  CHANGE_COL_WIDTH: 'changecolwidth',\n  SCALE_CHANGE: 'scalechange',\n  EDIT_START: 'editstart',\n  EDIT_INPUT: 'editinput',\n  EDIT_FINISH: 'editfinish',\n  REMOVE_ROW: 'removerow',\n  REMOVE_COL: 'removecol',\n  ADD_NEW_ROW: 'addnewrow',\n  ADD_NEW_COL: 'addnewcol',\n  FIXED_CHANGE: 'fixedchange',\n  FIXED_COL_CHANGE: 'fixedcolchange',\n  FIXED_ROW_CHANGE: 'fixedrowchange',\n  SELECT_OVER: 'selectover',\n  SELECT_DOWN: 'selectdown',\n  SELECT_CHANGE: 'selectchange',\n  DATA_CHANGE: 'datachange',\n  RESIZE_CHANGE: 'resizechange',\n};\nConstant.FORM_EVENT_TYPE = {\n  SEARCH_INPUT_CHANGE: 'searchinputchange',\n  PLAIN_INPUT_CHANGE: 'plaininputchange',\n  FORM_SELECT_CHANGE: 'formselectchange',\n};\nexport {\n  XSheetVersion,\n  Constant,\n  cssPrefix,\n};\n","import { Constant } from '../const/Constant';\nimport { Element } from './Element';\n\nclass BindPool {\n\n  constructor() {\n    this.pool = [];\n  }\n\n  unbind(ele, type, callback, option) {\n    if (ele instanceof Element) {\n      ele = ele.el;\n    }\n    const result = this.remove(ele, type, callback, option);\n    if (result.length) {\n      result.forEach((item) => {\n        ele.removeEventListener(item.type, item.callback, item.option);\n      });\n    } else {\n      ele.removeEventListener(type, callback, option);\n    }\n  }\n\n  bind(ele, type, callback, option) {\n    if (ele instanceof Element) {\n      ele = ele.el;\n    }\n    this.pool.push({\n      ele, type, callback, option,\n    });\n    ele.addEventListener(type, callback, option);\n  }\n\n  remove(ele, type = '*', callback = null, option = null) {\n    const pool = [];\n    const rem = [];\n    this.pool.forEach((item) => {\n      const eqElem = ele === item.ele;\n      const eqOpt = option === null || option === item.option;\n      const eqType = type === '*' || type === item.type;\n      const eqCall = callback === null || callback === item.callback;\n      if (eqElem && eqType && eqCall && eqOpt) {\n        rem.push(item);\n      } else {\n        pool.push(item);\n      }\n    });\n    this.pool = pool;\n    return rem;\n  }\n\n  multipleUnbind(eles, type, callback, option) {\n    eles.forEach((item) => {\n      this.unbind(item, type, callback, option);\n    });\n  }\n\n  multipleBind(eles, type, callback, option) {\n    eles.forEach((item) => {\n      this.bind(item, type, callback, option);\n    });\n  }\n\n}\n\nconst pool = new BindPool();\n\nclass XEvent {\n\n  static unbind(target, name, fn, option = false) {\n    if (Array.isArray(target)) {\n      pool.multipleUnbind(target, name, fn, option);\n    } else {\n      pool.unbind(target, name, fn, option);\n    }\n    return target;\n  }\n\n  static bind(target, name, fn, option = false) {\n    if (Array.isArray(target)) {\n      pool.multipleBind(target, name, fn, option);\n    } else {\n      pool.bind(target, name, fn, option);\n    }\n    return target;\n  }\n\n  static mouseHold(target, holdFunc = () => {}, endFunc = () => {}, time = 150) {\n    let handle = setInterval(() => {\n      holdFunc();\n    }, time);\n    let xEvtUp = (evt) => {\n      clearInterval(handle);\n      XEvent.unbind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp, true);\n      endFunc(evt);\n    };\n    holdFunc();\n    XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp, true);\n  }\n\n  static mouseMoveUp(target, moveFunc = () => {}, upFunc = () => {}) {\n    const xEvtMove = (evt) => {\n      moveFunc(evt);\n      evt.stopPropagation();\n      evt.preventDefault();\n    };\n    const xEvtUp = (evt) => {\n      XEvent.unbind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, xEvtMove, true);\n      XEvent.unbind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp, true);\n      upFunc(evt);\n      evt.preventDefault();\n    };\n    XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_MOVE, xEvtMove, true);\n    XEvent.bind(target, Constant.SYSTEM_EVENT_TYPE.MOUSE_UP, xEvtUp, true);\n    return target;\n  }\n\n}\n\nXEvent.WrapFuncion = {\n  doubleClick: (callback) => {\n    let lastPageX = 0;\n    let lastPageY = 0;\n    let lastTime = 0;\n    return (event) => {\n      if (event.button === 2) {\n        lastPageX = 0;\n        lastTime = 0;\n        lastPageY = 0;\n        return;\n      }\n      const { pageX, pageY } = event;\n      const current = Date.now();\n      const diffTime = current - lastTime <= 300;\n      const diffPageX = pageX === lastPageX;\n      const diffPageY = pageY === lastPageY;\n      if (diffTime && diffPageX && diffPageY) {\n        callback(event);\n        lastTime = 0;\n        lastPageX = 0;\n        lastPageY = 0;\n      } else {\n        lastPageX = pageX;\n        lastPageY = pageY;\n        lastTime = current;\n      }\n    };\n  },\n  mouseClick: callback => (event) => {\n    callback(event);\n  },\n};\n\nexport {\n  XEvent,\n};\n","/* global document */\n\nimport { Element, h } from './Element';\nimport { cssPrefix } from '../const/Constant';\nimport { XEvent } from './XEvent';\n\n/**\n * Life\n */\nclass Life extends Element {\n\n  onAttach() { }\n\n}\n\n/**\n * Widget\n */\nclass Widget extends Life {\n\n  /**\n   * Widget\n   * @param className\n   * @param nodeType\n   * @param $$rootFlag\n   */\n  constructor(className = '', nodeType = 'div', $$rootFlag = false) {\n    if (typeof className === 'string') {\n      super(nodeType, `${cssPrefix}-widget ${className}`);\n    } else {\n      super(className);\n    }\n    this.$$rootFlag = $$rootFlag;\n  }\n\n  /**\n   * 查找最邻近\n   * 的class元素\n   * @param clazz\n   */\n  closestClass(clazz) {\n    let node = this;\n    while (!h(document.body).is(node)) {\n      if (node.hasClass(clazz)) {\n        return node;\n      }\n      node = node.parent();\n    }\n    return null;\n  }\n\n  /**\n   * 获取 root widget\n   */\n  getRootWidget() {\n    let parent = this.data('parent');\n    while (parent && !parent.$$rootFlag) {\n      parent = parent.data('parent');\n    }\n    return parent;\n  }\n\n  /**\n   * 绑定处理事件\n   */\n  bind() {\n\n  }\n\n  /**\n   * 解绑事件处理\n   */\n  unbind() {\n    XEvent.unbind(this);\n  }\n\n  /**\n   * 追加节点\n   * 触发onAttach事件\n   * @param widget\n   */\n  attach(widget) {\n    this.childrenNodes(widget);\n    widget.parentWidget(this);\n    widget.onAttach(this);\n  }\n\n  /**\n   * 设置 parent widget\n   * @param widget\n   */\n  parentWidget(widget) {\n    if (widget) {\n      this.data('parent', widget);\n      return this;\n    }\n    return this.data('parent');\n  }\n\n  /**\n   * 计算鼠标在当前\n   * 元素中的位置\n   * @param event\n   * @param elem\n   * @returns {{x: number, y: number}}\n   */\n  eventXy(event, elem = this) {\n    const { top, left } = elem.box();\n    return {\n      y: event.clientY - top,\n      x: event.clientX - left,\n    };\n  }\n\n  /**\n   * 销毁组件\n   */\n  destroy() {\n    this.unbind();\n    this.remove();\n  }\n\n}\n\nconst w = (className = '', nodeType = 'div') => new Widget(className, nodeType);\n\nexport {\n  Widget,\n  w,\n};\n","import { Widget } from '../../../../lib/Widget';\nimport { cssPrefix } from '../../../../const/Constant';\nimport { h } from '../../../../lib/Element';\n\nclass Icon extends Widget {\n\n  constructor(className = '') {\n    super(`${cssPrefix}-icon`);\n    this.iconNameEl = h('div', `${cssPrefix}-icon-img ${className}`);\n    this.childrenNodes(this.iconNameEl);\n  }\n\n  setWidth(width) {\n    this.iconNameEl.css('width', `${width}px`);\n  }\n\n  setHeight(height) {\n    this.iconNameEl.css('height', `${height}px`);\n  }\n\n}\n\nexport { Icon };\n","/* global document */\nimport { Widget } from '../../lib/Widget';\nimport { cssPrefix, Constant } from '../../const/Constant';\nimport { XEvent } from '../../lib/XEvent';\n\nimport { h } from '../../lib/Element';\nimport { SheetUtils } from '../../utils/SheetUtils';\n\nlet instances = [];\n\n/**\n * DragPanel\n * @author jerry\n * @date 2020/10/19\n */\nclass DragPanel extends Widget {\n\n  /**\n   * DragPanel\n   * @param options\n   */\n  constructor(options) {\n    super(`${cssPrefix}-drag-panel`);\n    instances.push(this);\n    this.options = SheetUtils.copy({\n      position: DragPanel.DRAG_PANEL_POSITION.CENTER,\n    }, options);\n    this.status = false;\n    this.mask = h('div', `${cssPrefix}-drag-panel-mask`);\n    this.content = h('div', `${cssPrefix}-drag-panel-content`);\n    super.childrenNodes(this.content);\n    this.bind();\n  }\n\n  /**\n   * 显示弹框\n   */\n  open() {\n    const root = this.getRootWidget();\n    const { mask } = this;\n    if (this.status === false && root) {\n      this.status = true;\n      root.childrenNodes(mask);\n      root.childrenNodes(this);\n      this.dragPanelLocation();\n    }\n    return this;\n  }\n\n  /**\n   * 关闭弹框\n   */\n  close() {\n    const root = this.getRootWidget();\n    if (this.status === true && root) {\n      const { mask } = this;\n      this.status = false;\n      root.remove(this);\n      root.remove(mask);\n    }\n    return this;\n  }\n\n  /**\n   * 卸载事件\n   */\n  unbind() {\n    const { mask } = this;\n    XEvent.unbind(mask);\n  }\n\n  /**\n   * 绑定事件\n   */\n  bind() {\n    const { mask } = this;\n    XEvent.bind(mask, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e) => {\n      this.close();\n      e.stopPropagation();\n    });\n    XEvent.bind(this, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (evt1) => {\n      if (evt1.button !== 0) return;\n      const downEventXy = this.eventXy(evt1, this);\n      XEvent.mouseMoveUp(h(document), (evt2) => {\n        // 计算移动的距离\n        const top = evt2.pageY - downEventXy.y;\n        const left = evt2.pageX - downEventXy.x;\n        this.offset({ top, left });\n        evt2.stopPropagation();\n      });\n      evt1.stopPropagation();\n    });\n  }\n\n  /**\n   * 设置显示位置\n   */\n  dragPanelLocation() {\n    const root = this.getRootWidget();\n    const { options } = this;\n    const { position } = options;\n    const rootBox = root.box();\n    const elemBox = this.box();\n    switch (position) {\n      case DragPanel.DRAG_PANEL_POSITION.LEFT:\n        break;\n      case DragPanel.DRAG_PANEL_POSITION.RIGHT:\n        break;\n      case DragPanel.DRAG_PANEL_POSITION.TOP:\n        break;\n      case DragPanel.DRAG_PANEL_POSITION.CENTER:\n        this.offset({\n          left: rootBox.width / 2 - elemBox.width / 2,\n          top: rootBox.height / 2 - elemBox.height / 2,\n        });\n        break;\n      default: break;\n    }\n    return this;\n  }\n\n  /**\n   * 添加子元素\n   * @param args\n   * @returns {DragPanel}\n   */\n  childrenNodes(...args) {\n    this.content.childrenNodes(...args);\n    return this;\n  }\n\n  /**\n   * 销毁组件\n   */\n  destroy() {\n    super.destroy();\n    this.unbind();\n    DragPanel.removeInstance(this);\n  }\n\n  /**\n   * 删除实例\n   * @param instance\n   */\n  static removeInstance(instance) {\n    const filter = [];\n    instances.forEach((item) => {\n      if (item !== instance) {\n        filter.push(item);\n      }\n    });\n    instances = filter;\n  }\n\n  /**\n   * 关闭所有实例\n   * @param filter\n   */\n  static closeAll(filter = []) {\n    instances.forEach((item) => {\n      if (filter.indexOf(item) === -1) {\n        item.close();\n      }\n    });\n  }\n\n}\n\nDragPanel.DRAG_PANEL_POSITION = {\n  LEFT: 1,\n  TOP: 2,\n  RIGHT: 3,\n  CENTER: 4,\n};\n\nexport { DragPanel };\n","/* global document */\nimport { h } from '../../lib/Element';\nimport { cssPrefix, Constant } from '../../const/Constant';\nimport { Widget } from '../../lib/Widget';\nimport { DragPanel } from '../dragpanel/DragPanel';\nimport { XEvent } from '../../lib/XEvent';\nimport { SheetUtils } from '../../utils/SheetUtils';\n\nclass ColorPicker extends Widget {\n\n  constructor(options) {\n    super(`${cssPrefix}-color-picker`);\n    this.options = SheetUtils.copy({\n      selectCb: () => {},\n    }, options);\n    // 拖拽组件\n    this.dragPanel = new DragPanel().parentWidget(this);\n    this.color = [360, 0, 100];\n    // 头部\n    this.preViewColorPoint = h('div', `${cssPrefix}-color-picker-pre-view-color-point`);\n    this.colorValueTips = h('div', `${cssPrefix}-color-picker-color-value-tips`);\n    this.colorValueTips.text('十六进制颜色值');\n    this.colorInput = h('input', `${cssPrefix}-color-picker-color-input`);\n    this.top = h('div', `${cssPrefix}-color-picker-top`);\n    this.top.childrenNodes(this.preViewColorPoint);\n    this.top.childrenNodes(this.colorValueTips);\n    this.top.childrenNodes(this.colorInput);\n    // 中间部分\n    this.selectColorPoint = h('div', `${cssPrefix}-color-picker-select-color-point`);\n    this.selectColorArea1 = h('div', `${cssPrefix}-color-picker-select-color-area area1`);\n    this.selectColorArea2 = h('div', `${cssPrefix}-color-picker-select-color-area area2`);\n    this.selectColorArea3 = h('div', `${cssPrefix}-color-picker-select-color-area area3`);\n    this.center = h('div', `${cssPrefix}-color-picker-center`);\n    this.center.childrenNodes(this.selectColorArea1);\n    this.center.childrenNodes(this.selectColorArea2);\n    this.center.childrenNodes(this.selectColorArea3);\n    this.center.childrenNodes(this.selectColorPoint);\n    // 底部\n    this.colorHuxTips = h('div', `${cssPrefix}-color-picker-color-hux-tips`);\n    this.colorBar = h('div', `${cssPrefix}-color-picker-color-bar`);\n    this.colorBarPoint = h('div', `${cssPrefix}-color-picker-bar-point`);\n    this.bottom = h('div', `${cssPrefix}-color-picker-bottom`);\n    this.colorHuxTips.text('HUE');\n    this.colorBar.childrenNodes(this.colorBarPoint);\n    this.bottom.childrenNodes(this.colorHuxTips);\n    this.bottom.childrenNodes(this.colorBar);\n    // 按钮\n    this.cancelButton = h('div', `${cssPrefix}-color-picker-button cancel`);\n    this.selectButton = h('div', `${cssPrefix}-color-picker-button select`);\n    this.buttons = h('div', `${cssPrefix}-color-picker-buttons`);\n    this.cancelButton.text('取消');\n    this.selectButton.text('确定');\n    this.buttons.childrenNodes(this.selectButton);\n    this.buttons.childrenNodes(this.cancelButton);\n    this.childrenNodes(this.top);\n    this.childrenNodes(this.center);\n    this.childrenNodes(this.bottom);\n    this.childrenNodes(this.buttons);\n    this.dragPanel.childrenNodes(this);\n    this.dragPanel.css('background', '#ffffff');\n    this.bind();\n  }\n\n  unbind() {\n    const { selectColorPoint } = this;\n    const { colorBarPoint } = this;\n    const {\n      colorInput, cancelButton, selectButton,\n    } = this;\n    XEvent.unbind(colorInput);\n    XEvent.unbind(colorInput);\n    XEvent.unbind(colorBarPoint);\n    XEvent.unbind(selectColorPoint);\n    XEvent.unbind(cancelButton);\n    XEvent.unbind(selectButton);\n  }\n\n  bind() {\n    const { selectColorPoint, center } = this;\n    const { colorBarPoint, colorBar } = this;\n    const {\n      colorInput, cancelButton, selectButton,\n    } = this;\n    XEvent.bind(colorInput, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\n      e1.stopPropagation();\n    });\n    XEvent.bind(colorInput, Constant.SYSTEM_EVENT_TYPE.CHANGE, () => {\n      const value = colorInput.val();\n      if (value) {\n        this.hexColor(value);\n      }\n    });\n    XEvent.bind(colorBarPoint, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\n      const xy = this.eventXy(e1, colorBar);\n      const colorBarBox = colorBar.box();\n      if (xy.x < 0) xy.x = 0;\n      if (xy.x > colorBarBox.width) xy.x = colorBarBox.width;\n      this.downHue(xy.x, colorBarBox.width);\n      XEvent.mouseMoveUp(h(document), (e2) => {\n        const xy = this.eventXy(e2, colorBar);\n        const colorBarBox = colorBar.box();\n        if (xy.x < 0) xy.x = 0;\n        if (xy.x > colorBarBox.width) xy.x = colorBarBox.width;\n        this.moveHue(xy.x, colorBarBox.width);\n      });\n      e1.stopPropagation();\n    });\n    XEvent.bind(selectColorPoint, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, (e1) => {\n      const xy = this.eventXy(e1, center);\n      const centerBox = center.box();\n      if (xy.x < 0) xy.x = 0;\n      if (xy.x > centerBox.width) xy.x = centerBox.width;\n      if (xy.y < 0) xy.y = 0;\n      if (xy.y > centerBox.height) xy.y = centerBox.height;\n      this.downSelect(xy.x, xy.y, centerBox.width, centerBox.height);\n      XEvent.mouseMoveUp(h(document), (e2) => {\n        const xy = this.eventXy(e2, center);\n        if (xy.x < 0) xy.x = 0;\n        if (xy.x > centerBox.width) xy.x = centerBox.width;\n        if (xy.y < 0) xy.y = 0;\n        if (xy.y > centerBox.height) xy.y = centerBox.height;\n        this.moveSelect(xy.x, xy.y, centerBox.width, centerBox.height);\n      });\n      e1.stopPropagation();\n    });\n    XEvent.bind(cancelButton, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\n      this.close();\n    });\n    XEvent.bind(selectButton, Constant.SYSTEM_EVENT_TYPE.CLICK, () => {\n      const { color } = this;\n      const hsb = ColorPicker.fixHsx({\n        h: parseInt(color[0], 10),\n        s: parseInt(color[1], 10),\n        x: parseInt(color[2], 10),\n      });\n      const rgb = ColorPicker.hsbToRgb(hsb);\n      this.options.selectCb(`rgb(${rgb.r},${rgb.g},${rgb.b})`);\n      this.close();\n    });\n  }\n\n  open(hex) {\n    const { dragPanel } = this;\n    dragPanel.open();\n    if (hex) {\n      if (ColorPicker.isRgb(hex)) {\n        const rgb = ColorPicker.parseRgb(hex);\n        // eslint-disable-next-line no-param-reassign\n        hex = ColorPicker.rgbToHex(rgb);\n      }\n      this.hexColor(hex);\n    } else {\n      this.change();\n    }\n    return this;\n  }\n\n  close() {\n    const { dragPanel } = this;\n    dragPanel.close();\n    return this;\n  }\n\n  sliderPosition(hsb) {\n    // hue 滑块位置\n    const { colorBar, colorBarPoint } = this;\n    const colorBarPointBox = colorBarPoint.box();\n    const colorBarBox = colorBar.box();\n    let colorBarPointLeft = parseInt(colorBarBox.width - colorBarBox.width * hsb.h / 360, 10);\n    colorBarPointLeft -= colorBarPointBox.width / 2;\n    colorBarPoint.offset({\n      left: colorBarPointLeft,\n    });\n    // select color 滑块位置\n    const { center, selectColorPoint } = this;\n    const selectColorPointBox = selectColorPoint.box();\n    const centerBox = center.box();\n    let selectColorPointLeft = parseInt(centerBox.width * hsb.s / 100, 10);\n    let selectColorPointTop = parseInt(centerBox.height * (100 - hsb.x) / 100, 10);\n    selectColorPointLeft -= selectColorPointBox.width / 2;\n    selectColorPointTop -= selectColorPointBox.height / 2;\n    selectColorPoint.offset({\n      left: selectColorPointLeft,\n      top: selectColorPointTop,\n    });\n  }\n\n  hueChange() {\n    const { color } = this;\n    const hsb = ColorPicker.fixHsx({\n      h: parseInt(color[0], 10),\n      s: parseInt(color[1], 10),\n      x: parseInt(color[2], 10),\n    });\n    const {\n      colorBarPoint, selectColorPoint, preViewColorPoint, selectColorArea1, colorInput,\n    } = this;\n    const colorValue = ColorPicker.hsbToHex(hsb);\n    const areaColorValue = ColorPicker.hsbToHex({ h: hsb.h, s: 100, x: 100 });\n    selectColorPoint.css('backgroundColor', `#${colorValue}`);\n    preViewColorPoint.css('backgroundColor', `#${colorValue}`);\n    colorBarPoint.css('backgroundColor', `#${areaColorValue}`);\n    selectColorArea1.css('backgroundColor', `#${areaColorValue}`);\n    colorInput.val(`#${colorValue}`);\n    this.sliderPosition(hsb);\n  }\n\n  selectChange() {\n    const { color } = this;\n    const hsb = ColorPicker.fixHsx({\n      h: parseInt(color[0], 10),\n      s: parseInt(color[1], 10),\n      x: parseInt(color[2], 10),\n    });\n    const { preViewColorPoint, selectColorPoint, colorInput } = this;\n    const colorValue = ColorPicker.hsbToHex(hsb);\n    selectColorPoint.css('backgroundColor', `#${colorValue}`);\n    preViewColorPoint.css('backgroundColor', `#${colorValue}`);\n    colorInput.val(`#${colorValue}`);\n    this.sliderPosition(hsb);\n  }\n\n  change() {\n    this.hueChange();\n    this.selectChange();\n  }\n\n  downSelect(x, y, width, height) {\n    const { color } = this;\n    color[1] = parseInt(100 * x / width, 10);\n    color[2] = parseInt(100 * (height - y) / height, 10);\n    this.selectChange();\n  }\n\n  moveSelect(x, y, width, height) {\n    const { color } = this;\n    color[1] = parseInt(100 * (Math.max(0, Math.min(width, x))) / width, 10);\n    color[2] = parseInt(100 * (height - Math.max(0, Math.min(height, y))) / height, 10);\n    this.selectChange();\n  }\n\n  downHue(x, width) {\n    const { color } = this;\n    color[0] = parseInt(360 * (width - x) / width, 10);\n    this.hueChange();\n  }\n\n  moveHue(x, width) {\n    const { color } = this;\n    color[0] = parseInt(360 * (width - Math.max(0, Math.min(width, x))) / width, 10);\n    this.hueChange();\n  }\n\n  hexColor(hex) {\n    const { color } = this;\n    const result = ColorPicker.hexToHsb(ColorPicker.fixHex(hex));\n    color[0] = result.h;\n    color[1] = result.s;\n    color[2] = result.x;\n    this.change();\n  }\n\n  destroy() {\n    super.destroy();\n    this.unbind();\n    this.dragPanel.destroy();\n  }\n\n  static fixHex(hex) {\n    const len = 6 - hex.length;\n    if (len > 0) {\n      const o = [];\n      for (let i = 0; i < len; i += 1) {\n        o.push('0');\n      }\n      o.push(hex);\n      // eslint-disable-next-line no-param-reassign\n      hex = o.join('');\n    }\n    return hex;\n  }\n\n  static fixHsx(hsx) {\n    return {\n      h: Math.min(360, Math.max(0, hsx.h)),\n      s: Math.min(100, Math.max(0, hsx.s)),\n      x: Math.min(100, Math.max(0, hsx.x)),\n    };\n  }\n\n  static isRgb(rgb) {\n    return rgb.startsWith('rgb');\n  }\n\n  static isHex(hex) {\n    return hex.startsWith('#');\n  }\n\n  static isDark(rgb) {\n    if (SheetUtils.isString(rgb)) {\n      if (this.isHex(rgb)) {\n        const v = ColorPicker.hexToRgb(rgb);\n        rgb = `rgb(${v.r}, ${v.g}, ${v.b})`;\n      }\n      const result = ColorPicker.parseRgb(rgb);\n      const { r, g, b } = result;\n      return (r * 0.299) + (g * 0.578) + (b * 0.114) >= 192;\n    }\n    return false;\n  }\n\n  static hexToRgb(hex) {\n    // eslint-disable-next-line no-redeclare,no-param-reassign\n    hex = parseInt(((hex.indexOf('#') > -1) ? hex.substring(1) : hex), 16);\n    // eslint-disable-next-line no-bitwise\n    return { r: hex >> 16, g: (hex & 0x00FF00) >> 8, b: (hex & 0x0000FF) };\n  }\n\n  static hexToHsb(hex) {\n    return this.rgbToHsb(this.hexToRgb(hex));\n  }\n\n  static rgbToHsb(rgb) {\n    const hsb = { h: 0, s: 0, x: 0 };\n    const min = Math.min(rgb.r, rgb.g, rgb.b);\n    const max = Math.max(rgb.r, rgb.g, rgb.b);\n    const delta = max - min;\n    hsb.x = max;\n    hsb.s = max !== 0 ? 255 * delta / max : 0;\n    if (hsb.s !== 0) {\n      if (rgb.r === max) hsb.h = (rgb.g - rgb.b) / delta;\n      else if (rgb.g === max) hsb.h = 2 + (rgb.b - rgb.r) / delta;\n      else hsb.h = 4 + (rgb.r - rgb.g) / delta;\n    } else hsb.h = -1;\n    hsb.h *= 60;\n    if (hsb.h < 0) hsb.h += 360;\n    hsb.s *= 100 / 255;\n    hsb.x *= 100 / 255;\n    return hsb;\n  }\n\n  static hsbToRgb(hsb) {\n    const rgb = {};\n    let { h } = hsb;\n    const s = hsb.s * 255 / 100;\n    const v = hsb.x * 255 / 100;\n    if (s === 0) {\n      rgb.r = v;\n      rgb.g = v;\n      rgb.b = v;\n    } else {\n      const t1 = v;\n      const t2 = (255 - s) * v / 255;\n      const t3 = (t1 - t2) * (h % 60) / 60;\n      if (h === 360) h = 0;\n      if (h < 60) {\n        rgb.r = t1;\n        rgb.b = t2;\n        rgb.g = t2 + t3;\n      } else if (h < 120) {\n        rgb.g = t1;\n        rgb.b = t2;\n        rgb.r = t1 - t3;\n      } else if (h < 180) {\n        rgb.g = t1;\n        rgb.r = t2;\n        rgb.b = t2 + t3;\n      } else if (h < 240) {\n        rgb.b = t1;\n        rgb.r = t2;\n        rgb.g = t1 - t3;\n      } else if (h < 300) {\n        rgb.b = t1;\n        rgb.g = t2;\n        rgb.r = t2 + t3;\n      } else if (h < 360) {\n        rgb.r = t1;\n        rgb.g = t2;\n        rgb.b = t1 - t3;\n      } else {\n        rgb.r = 0;\n        rgb.g = 0;\n        rgb.b = 0;\n      }\n    }\n    return { r: Math.round(rgb.r), g: Math.round(rgb.g), b: Math.round(rgb.b) };\n  }\n\n  static rgbToHex(rgb) {\n    const hex = [\n      rgb.r.toString(16),\n      rgb.g.toString(16),\n      rgb.b.toString(16),\n    ];\n    hex.forEach((val, nr) => {\n      if (val.length === 1) {\n        hex[nr] = `0${val}`;\n      }\n    });\n    return hex.join('');\n  }\n\n  static hsbToHex(hsb) {\n    return this.rgbToHex(this.hsbToRgb(hsb));\n  }\n\n  static parseRgb(rgb) {\n    const rxp = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/;\n    const result = rgb.match(rxp);\n    return {\n      r: parseInt(result[1], 10),\n      g: parseInt(result[2], 10),\n      b: parseInt(result[3], 10),\n    };\n  }\n\n  static parseRgbToHex(rgb, defaultValue = null) {\n    if (rgb) {\n      if (this.isHex(rgb)) {\n        return rgb.substring(1);\n      }\n      const value = this.parseRgb(rgb);\n      return this.rgbToHex(value);\n    }\n    return defaultValue;\n  }\n\n  static parseHexToRgb(hex, defaultValue = null) {\n    if (hex) {\n      const rgb = ColorPicker.hexToRgb(hex);\n      return `rgb(${rgb.r},${rgb.g},${rgb.b})`;\n    }\n    return defaultValue;\n  }\n\n}\n\nexport { ColorPicker };\n","import { Widget } from '../../../lib/Widget';\nimport { cssPrefix } from '../../../const/Constant';\nimport { SheetUtils } from '../../../utils/SheetUtils';\nimport { Icon } from '../../../core/work/head/tool/Icon';\nimport { ColorPicker } from '../ColorPicker';\n\nclass ColorItem extends Widget {\n\n  constructor(options) {\n    super(`${cssPrefix}-color-array-item`);\n    this.options = SheetUtils.copy({\n      color: null,\n      icon: null,\n    }, options);\n    this.icon = this.options.icon;\n    this.color = SheetUtils.blankClear(this.options.color);\n    if (this.icon) {\n      this.childrenNodes(this.options.icon);\n    }\n    if (this.color) {\n      this.css('backgroundColor', this.color);\n      if (ColorPicker.isDark(this.options.color)) {\n        this.checkedIcon = new Icon('checked-dark');\n        this.childrenNodes(this.checkedIcon);\n      } else {\n        this.checkedIcon = new Icon('checked-light');\n        this.childrenNodes(this.checkedIcon);\n      }\n      this.checkedIcon.hide();\n    }\n  }\n\n  setActive(active) {\n    if (this.checkedIcon) {\n      if (active) {\n        this.checkedIcon.show();\n      } else {\n        this.checkedIcon.hide();\n      }\n    }\n  }\n\n}\n\nexport { ColorItem };\n","import { Widget } from '../../../lib/Widget';\nimport { cssPrefix, Constant } from '../../../const/Constant';\nimport { ColorItem } from './ColorItem';\nimport { SheetUtils } from '../../../utils/SheetUtils';\nimport { XEvent } from '../../../lib/XEvent';\n\nclass ColorArray extends Widget {\n\n  constructor(options) {\n    super(`${cssPrefix}-color-array`);\n    this.options = SheetUtils.copy({\n      colors: [\n        new ColorItem({ color: 'rgb(0, 0, 0)' }),\n        new ColorItem({ color: 'rgb(67, 67, 67)' }),\n        new ColorItem({ color: 'rgb(102, 102, 102)' }),\n        new ColorItem({ color: 'rgb(153, 153, 153)' }),\n        new ColorItem({ color: 'rgb(183, 183, 183)' }),\n        new ColorItem({ color: 'rgb(204, 204, 204)' }),\n        new ColorItem({ color: 'rgb(217, 217, 217)' }),\n        new ColorItem({ color: 'rgb(239, 239, 239)' }),\n        new ColorItem({ color: 'rgb(255, 255, 255)' }),\n\n        new ColorItem({ color: 'rgb(152, 0, 0)' }),\n        new ColorItem({ color: 'rgb(255, 0, 0)' }),\n        new ColorItem({ color: 'rgb(255, 153, 0)' }),\n        new ColorItem({ color: 'rgb(255, 255, 0)' }),\n        new ColorItem({ color: 'rgb(0, 255, 0)' }),\n        new ColorItem({ color: 'rgb(0, 255, 255)' }),\n        new ColorItem({ color: 'rgb(74, 134, 232)' }),\n        new ColorItem({ color: 'rgb(0, 0, 255)' }),\n        new ColorItem({ color: 'rgb(153, 0, 255)' }),\n        new ColorItem({ color: 'rgb(255, 0, 255)' }),\n\n        new ColorItem({ color: 'rgb(230, 184, 175)' }),\n        new ColorItem({ color: 'rgb(244, 204, 204)' }),\n        new ColorItem({ color: 'rgb(252, 229, 205)' }),\n        new ColorItem({ color: 'rgb(255, 242, 204)' }),\n        new ColorItem({ color: 'rgb(217, 234, 211)' }),\n        new ColorItem({ color: 'rgb(208, 224, 227)' }),\n        new ColorItem({ color: 'rgb(201, 218, 248)' }),\n        new ColorItem({ color: 'rgb(207, 226, 243)' }),\n        new ColorItem({ color: 'rgb(217, 210, 233)' }),\n        new ColorItem({ color: 'rgb(234, 209, 220)' }),\n\n        new ColorItem({ color: 'rgb(221, 126, 107)' }),\n        new ColorItem({ color: 'rgb(234, 153, 153)' }),\n        new ColorItem({ color: 'rgb(249, 203, 156)' }),\n        new ColorItem({ color: 'rgb(255, 229, 153)' }),\n        new ColorItem({ color: 'rgb(182, 215, 168)' }),\n        new ColorItem({ color: 'rgb(162, 196, 201)' }),\n        new ColorItem({ color: 'rgb(164, 194, 244)' }),\n        new ColorItem({ color: 'rgb(159, 197, 232)' }),\n        new ColorItem({ color: 'rgb(180, 167, 214)' }),\n        new ColorItem({ color: 'rgb(213, 166, 189)' }),\n\n        new ColorItem({ color: 'rgb(204, 65, 37)' }),\n        new ColorItem({ color: 'rgb(224, 102, 102)' }),\n        new ColorItem({ color: 'rgb(246, 178, 107)' }),\n        new ColorItem({ color: 'rgb(255, 217, 102)' }),\n        new ColorItem({ color: 'rgb(147, 196, 125)' }),\n        new ColorItem({ color: 'rgb(118, 165, 175)' }),\n        new ColorItem({ color: 'rgb(109, 158, 235)' }),\n        new ColorItem({ color: 'rgb(111, 168, 220)' }),\n        new ColorItem({ color: 'rgb(142, 124, 195)' }),\n        new ColorItem({ color: 'rgb(194, 123, 160)' }),\n\n        new ColorItem({ color: 'rgb(166, 28, 0)' }),\n        new ColorItem({ color: 'rgb(204, 0, 0)' }),\n        new ColorItem({ color: 'rgb(230, 145, 56)' }),\n        new ColorItem({ color: 'rgb(241, 194, 50)' }),\n        new ColorItem({ color: 'rgb(106, 168, 79)' }),\n        new ColorItem({ color: 'rgb(69, 129, 142)' }),\n        new ColorItem({ color: 'rgb(60, 120, 216)' }),\n        new ColorItem({ color: 'rgb(61, 133, 198)' }),\n        new ColorItem({ color: 'rgb(103, 78, 167)' }),\n        new ColorItem({ color: 'rgb(166, 77, 121)' }),\n\n        new ColorItem({ color: 'rgb(133, 32, 12)' }),\n        new ColorItem({ color: 'rgb(153, 0, 0)' }),\n        new ColorItem({ color: 'rgb(180, 95, 6)' }),\n        new ColorItem({ color: 'rgb(191, 144, 0)' }),\n        new ColorItem({ color: 'rgb(56, 118, 29)' }),\n        new ColorItem({ color: 'rgb(19, 79, 92)' }),\n        new ColorItem({ color: 'rgb(17, 85, 204)' }),\n        new ColorItem({ color: 'rgb(11, 83, 148)' }),\n        new ColorItem({ color: 'rgb(53, 28, 117)' }),\n        new ColorItem({ color: 'rgb(116, 27, 71)' }),\n\n        new ColorItem({ color: 'rgb(91, 15, 0)' }),\n        new ColorItem({ color: 'rgb(102, 0, 0)' }),\n        new ColorItem({ color: 'rgb(120, 63, 4)' }),\n        new ColorItem({ color: 'rgb(127, 96, 0)' }),\n        new ColorItem({ color: 'rgb(39, 78, 19)' }),\n        new ColorItem({ color: 'rgb(12, 52, 61)' }),\n        new ColorItem({ color: 'rgb(28, 69, 135)' }),\n        new ColorItem({ color: 'rgb(7, 55, 99)' }),\n        new ColorItem({ color: 'rgb(32, 18, 77)' }),\n        new ColorItem({ color: 'rgb(76, 17, 48)' }),\n      ],\n      selectCb: () => {},\n    }, options);\n    this.colors = [];\n    this.activeColor = null;\n    this.options.colors.forEach((item) => {\n      this.add(item);\n    });\n    if (this.colors.length > 0) {\n      this.setActiveByColor(this.colors[0].options.color);\n    }\n  }\n\n  add(item) {\n    const find = this.colors.findIndex(color => color.color === item.color);\n    if (find === -1) {\n      const { colors } = this;\n      colors.push(item);\n      this.childrenNodes(item);\n      this.bind(item);\n    }\n  }\n\n  unbind() {\n    this.colors.forEach((item) => {\n      XEvent.unbind(item);\n    });\n  }\n\n  bind(item) {\n    XEvent.bind(item, Constant.SYSTEM_EVENT_TYPE.MOUSE_DOWN, () => {\n      this.options.selectCb(item);\n      if (item.options.color) {\n        this.setActiveByColor(item.options.color);\n      }\n    });\n  }\n\n  findItemByColor(color) {\n    color = SheetUtils.blankClear(color);\n    return this.colors.find(item => item.color === color);\n  }\n\n  setActiveByColor(color) {\n    color = SheetUtils.blankClear(color);\n    this.colors.forEach((item) => {\n      if (item.color === color) {\n        item.setActive(true);\n        this.activeColor = item.color;\n      } else {\n        item.setActive(false);\n      }\n    });\n  }\n\n  clear() {\n    this.unbind();\n    this.colors = [];\n    this.empty();\n  }\n\n  destroy() {\n    super.destroy();\n    this.unbind();\n  }\n\n}\n\nColorArray.BLACK = 'rgb(0, 0, 0)';\nColorArray.WHITE = 'rgb(255, 255, 255)';\n\nexport {\n  ColorArray,\n};\n","import { BaseFont } from '../../../draw/font/BaseFont';\nimport { ColorArray } from '../../../module/colorpicker/colorarray/ColorArray';\nimport { SheetUtils } from '../../../utils/SheetUtils';\n\n/**\n *  CellFont\n *  @author jerry\n */\nclass CellFont {\n\n  /**\n   * CellFont\n   * @param align\n   * @param verticalAlign\n   * @param textWrap\n   * @param strikethrough\n   * @param underline\n   * @param color\n   * @param name\n   * @param size\n   * @param bold\n   * @param italic\n   * @param angle\n   * @param direction\n   * @param padding\n   */\n  constructor({\n    align = BaseFont.ALIGN.left,\n    verticalAlign = BaseFont.VERTICAL_ALIGN.center,\n    textWrap = BaseFont.TEXT_WRAP.TRUNCATE,\n    strikethrough = false,\n    underline = false,\n    color = ColorArray.BLACK,\n    name = 'Arial',\n    size = 14,\n    bold = false,\n    italic = false,\n    angle = 0,\n    direction = BaseFont.TEXT_DIRECTION.HORIZONTAL,\n    padding = 5,\n  } = {}) {\n    this.align = align;\n    this.verticalAlign = verticalAlign;\n    this.textWrap = textWrap;\n    this.strikethrough = strikethrough;\n    this.underline = underline;\n    this.color = color;\n    this.name = name;\n    this.size = size;\n    this.bold = bold;\n    this.italic = italic;\n    this.direction = direction;\n    this.angle = angle;\n    this.padding = padding;\n  }\n\n  like(other) {\n    let keys1 = Object.keys(this);\n    let keys2 = Object.keys(other);\n    for (let key of keys2) {\n      if (!keys1.includes(key)) {\n        return false;\n      }\n    }\n    for (let key of keys2) {\n      let src = this[key];\n      let val = other[key];\n      switch (key) {\n        case 'color': {\n          src = SheetUtils.clearBlank(src);\n          val = SheetUtils.clearBlank(val);\n          break;\n        }\n      }\n      if (src !== val) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  clone() {\n    const {\n      align,\n      verticalAlign,\n      textWrap,\n      strikethrough,\n      underline,\n      color,\n      name,\n      size,\n      bold,\n      italic,\n      angle,\n      direction,\n      padding,\n    } = this;\n    return new CellFont({\n      align,\n      verticalAlign,\n      textWrap,\n      strikethrough,\n      underline,\n      color,\n      name,\n      size,\n      bold,\n      italic,\n      angle,\n      direction,\n      padding,\n    });\n  }\n\n  reset() {\n    this.align = BaseFont.ALIGN.left;\n    this.verticalAlign = BaseFont.VERTICAL_ALIGN.center;\n    this.textWrap = BaseFont.TEXT_WRAP.TRUNCATE;\n    this.strikethrough = false;\n    this.underline = false;\n    this.color = ColorArray.BLACK;\n    this.name = 'Arial';\n    this.size = 14;\n    this.bold = false;\n    this.italic = false;\n    this.angle = 0;\n    this.direction = BaseFont.TEXT_DIRECTION.HORIZONTAL;\n    this.padding = 5;\n  }\n\n  equals(other) {\n    let keys1 = Object.keys(this);\n    let keys2 = Object.keys(other);\n    for (let key of keys1) {\n      if (!keys2.includes(key)) {\n        return false;\n      }\n    }\n    for (let key of keys1) {\n      let src = this[key];\n      let val = other[key];\n      switch (key) {\n        case 'color': {\n          src = SheetUtils.clearBlank(src);\n          val = SheetUtils.clearBlank(val);\n          break;\n        }\n      }\n      if (src !== val) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n\nCellFont.EMPTY = new CellFont();\n\nCellFont.getInstance = (config) => {\n  if (config) {\n    return new CellFont(config);\n  }\n  return CellFont.EMPTY;\n};\n\nexport { CellFont };\n","/* global devicePixelRatio */\nimport { SheetUtils } from '../utils/SheetUtils';\n\nlet DPR = SheetUtils.inWorker() ? 1 : devicePixelRatio;\nlet LINE_WIDTH_LOW = Math.round(DPR);\nlet LINE_WIDTH_MEDIUM = LINE_WIDTH_LOW + 2;\nlet LINE_WIDTH_HIGH = LINE_WIDTH_MEDIUM + 2;\nlet LINE_PIXEL_OFFSET = LINE_WIDTH_LOW / 2;\n\nclass Base {\n\n  static srcPx(px) {\n    return px / this.dpr();\n  }\n\n  static cssPx(px) {\n    return this.srcPx(this.stylePx(px));\n  }\n\n  static stylePx(px) {\n    return this.round(px * this.dpr());\n  }\n\n  static round(val) {\n    return Math.round(val);\n  }\n\n  static ceil(val) {\n    return Math.ceil(val);\n  }\n\n  static trunc(val) {\n    return Math.trunc(val);\n  }\n\n  static radian(angle) {\n    return -angle * (Math.PI / 180);\n  }\n\n  static dpr() {\n    return DPR;\n  }\n\n  static refresh(val = 1) {\n    DPR = SheetUtils.inWorker() ? val : devicePixelRatio;\n    LINE_WIDTH_LOW = Math.round(DPR);\n    LINE_WIDTH_MEDIUM = LINE_WIDTH_LOW + 2;\n    LINE_WIDTH_HIGH = LINE_WIDTH_MEDIUM + 2;\n    LINE_PIXEL_OFFSET = LINE_WIDTH_LOW / 2;\n  }\n\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n  }\n\n  attr(options) {\n    for (const key in options) {\n      if (options.hasOwnProperty(key)) {\n        let value = options[key];\n        if (typeof value === 'string' || value instanceof String) {\n          value = value.trim();\n        }\n        if (this.ctx[key] !== value) {\n          this.ctx[key] = value;\n        }\n      }\n    }\n    return this;\n  }\n\n  resize(width, height) {\n    const { canvas } = this;\n    canvas.width = Base.stylePx(width);\n    canvas.height = Base.stylePx(height);\n    canvas.style.width = `${canvas.width / Base.dpr()}px`;\n    canvas.style.height = `${canvas.height / Base.dpr()}px`;\n    return this;\n  }\n\n}\n\nclass Wrapping extends Base {\n\n  constructor(canvas) {\n    super(canvas);\n    this.dash = [];\n  }\n\n  beginPath() {\n    const { ctx } = this;\n    ctx.beginPath();\n    return this;\n  }\n\n  measureText(text) {\n    const { ctx } = this;\n    return ctx.measureText(text);\n  }\n\n  save() {\n    const { ctx } = this;\n    ctx.save();\n    return this;\n  }\n\n  restore() {\n    const { ctx } = this;\n    ctx.restore();\n    return this;\n  }\n\n  fill() {\n    const { ctx } = this;\n    ctx.fill();\n    return this;\n  }\n\n  clip() {\n    const { ctx } = this;\n    ctx.clip();\n    return this;\n  }\n\n  setLineDash(dash = []) {\n    const { ctx } = this;\n    this.dash = dash;\n    ctx.setLineDash(dash);\n    return this;\n  }\n\n  scale(x, y) {\n    const { ctx } = this;\n    ctx.scale(x, y);\n    return this;\n  }\n\n  translate(x, y) {\n    const { ctx } = this;\n    ctx.translate(x, y);\n    return this;\n  }\n\n  rotate(deg) {\n    const { ctx } = this;\n    ctx.rotate(deg);\n    return this;\n  }\n\n}\n\nclass Extends extends Wrapping {\n\n  polyStroke(interpolation = xys => xys, ...xys) {\n    const { ctx } = this;\n    if (xys.length > 1) {\n      this.beginPath();\n      const [x, y] = interpolation(xys[0]);\n      ctx.moveTo(x, y);\n      for (let i = 1, len = xys.length; i < len; i += 1) {\n        const [x, y] = interpolation(xys[i]);\n        ctx.lineTo(x, y);\n      }\n      ctx.stroke();\n    }\n  }\n\n  polyInFill(interpolation = xys => xys, ...xys) {\n    const { ctx } = this;\n    if (xys.length > 1) {\n      this.beginPath();\n      const [x, y] = interpolation(xys[0]);\n      ctx.moveTo(x, y);\n      for (let i = 1, len = xys.length; i < len; i += 1) {\n        const [x, y] = interpolation(xys[i]);\n        ctx.lineTo(x, y);\n      }\n      ctx.fill();\n    }\n  }\n\n  fullRect() {\n    const { canvas } = this;\n    const { width, height } = canvas;\n    this.ctx.fillRect(0, 0, width, height);\n    return this;\n  }\n\n  rotate(angle) {\n    super.rotate(Base.radian(angle));\n    return this;\n  }\n\n}\n\nclass Position extends Extends {\n\n  constructor(canvas) {\n    super(canvas);\n    this.offsetX = 0;\n    this.offsetY = 0;\n  }\n\n  offset(x, y) {\n    this.offsetX = x;\n    this.offsetY = y;\n  }\n\n  getOffsetX() {\n    return this.offsetX;\n  }\n\n  getOffsetY() {\n    return this.offsetY;\n  }\n\n  fillText() {\n    throw TypeError('child impl');\n  }\n\n  fillRect() {\n    throw TypeError('child impl');\n  }\n\n  rect() {\n    throw TypeError('child impl');\n  }\n\n  drawImage() {\n    throw TypeError('child impl');\n  }\n\n}\n\nclass BaseLine extends Position {\n\n  line(...xys) {\n    this.polyStroke((xys) => {\n      const [x, y] = xys;\n      return [this.linePx(Base.round(x + this.getOffsetX())),\n        this.linePx(Base.round(y + this.getOffsetY()))];\n    }, ...xys);\n    return this;\n  }\n\n  linePx(pixel) {\n    const { ctx } = this;\n    const {\n      lineWidth,\n    } = ctx;\n    return lineWidth % 2 === 0\n      ? pixel : pixel - 0.5;\n  }\n\n}\n\nclass CorsLine extends BaseLine {\n\n  static offsetToLineInside(val) {\n    return LINE_WIDTH_LOW > 1\n      ? val - LINE_PIXEL_OFFSET\n      : val - LINE_WIDTH_LOW;\n  }\n\n  static getLineWidthTypePx(type) {\n    switch (type) {\n      case CorsLine.LINE_WIDTH_TYPE.medium:\n        return LINE_WIDTH_MEDIUM;\n      case CorsLine.LINE_WIDTH_TYPE.low:\n        return LINE_WIDTH_LOW;\n      case CorsLine.LINE_WIDTH_TYPE.high:\n        return LINE_WIDTH_HIGH;\n    }\n    return 0;\n  }\n\n  constructor(canvas) {\n    super(canvas);\n    this.lineWidthType = CorsLine.LINE_WIDTH_TYPE.low;\n    this.lineColor = 'rgb(0,0,0)';\n  }\n\n  corsLine([sx, sy], [ex, ey]) {\n    const {\n      lineWidthType, lineColor,\n    } = this;\n    let lineWidth = LINE_WIDTH_LOW;\n    switch (lineWidthType) {\n      case CorsLine.LINE_WIDTH_TYPE.medium:\n        lineWidth = LINE_WIDTH_MEDIUM;\n        break;\n      case CorsLine.LINE_WIDTH_TYPE.low:\n        lineWidth = LINE_WIDTH_LOW;\n        break;\n      case CorsLine.LINE_WIDTH_TYPE.high:\n        lineWidth = LINE_WIDTH_HIGH;\n        break;\n    }\n    this.attr({\n      strokeStyle: lineColor,\n      lineWidth,\n    });\n    this.polyStroke((xys) => {\n      const [x, y] = xys;\n      return [\n        Base.round(x + this.getOffsetX()) - LINE_PIXEL_OFFSET,\n        Base.round(y + this.getOffsetY()) - LINE_PIXEL_OFFSET,\n      ];\n    }, [sx, sy], [ex, ey]);\n  }\n\n  setLineColor(color) {\n    this.lineColor = color;\n  }\n\n  setLineWidthType(type) {\n    this.lineWidthType = type;\n  }\n\n  horizonLine([sx, sy], [ex, ey]) {\n    if (sy !== ey) {\n      throw new TypeError('Error Horizon Line');\n    }\n    this.corsLine([sx, sy], [ex, ey]);\n  }\n\n  verticalLine([sx, sy], [ex, ey]) {\n    if (sx !== ex) {\n      throw new TypeError('Error Vertical Line');\n    }\n    this.corsLine([sx, sy], [ex, ey]);\n  }\n\n}\nCorsLine.LINE_WIDTH_TYPE = {\n  low: 'low',\n  medium: 'medium',\n  high: 'high',\n};\n\nclass XDraw extends CorsLine {\n\n  fillText(text, x, y) {\n    x += this.getOffsetX();\n    y += this.getOffsetY();\n    this.ctx.fillText(text, XDraw.round(x), XDraw.round(y));\n    return this;\n  }\n\n  fillPath(path) {\n    this.polyInFill((xys) => {\n      const { x, y } = xys;\n      return [Base.round(x + this.getOffsetX()), Base.round(y + this.getOffsetY())];\n    }, ...path.points);\n    return this;\n  }\n\n  fillRect(x, y, w, h) {\n    x += this.getOffsetX();\n    y += this.getOffsetY();\n    this.ctx.fillRect(XDraw.round(x), XDraw.round(y),\n      XDraw.round(w), XDraw.round(h));\n    return this;\n  }\n\n  rect(x, y, w, h) {\n    x += this.getOffsetX();\n    y += this.getOffsetY();\n    this.ctx.rect(XDraw.round(x), XDraw.round(y),\n      XDraw.round(w), XDraw.round(h));\n    return this;\n  }\n\n  copyImage(sx, sy, sw, sh, tx, ty, tw, th) {\n    const { ctx } = this;\n    tx += this.getOffsetX();\n    sx += this.getOffsetX();\n    ty += this.getOffsetY();\n    sy += this.getOffsetY();\n    ctx.drawImage(this.canvas,\n      XDraw.round(sx), XDraw.round(sy),\n      XDraw.round(sw), XDraw.round(sh),\n      XDraw.round(tx), XDraw.round(ty),\n      XDraw.round(tw), XDraw.round(th));\n    return this;\n  }\n\n  drawImage(el, sx, sy, sw, sh, tx, ty, tw, th) {\n    const { ctx } = this;\n    tx += this.getOffsetX();\n    ty += this.getOffsetY();\n    ctx.drawImage(el,\n      XDraw.round(sx), XDraw.round(sy),\n      XDraw.round(sw), XDraw.round(sh),\n      XDraw.round(tx), XDraw.round(ty),\n      XDraw.round(tw), XDraw.round(th));\n    return this;\n  }\n\n}\n\nexport {\n  XDraw,\n};\n","import { SheetUtils } from '../utils/SheetUtils';\nimport { XDraw } from './XDraw';\n\nconst LINE_TYPE = {\n  SOLID_LINE: 0,\n  DOTTED_LINE: 1,\n  POINT_LINE: 2,\n  DOUBLE_LINE: 3,\n};\n\nclass SolidLine {\n\n  constructor(draw, attr) {\n    this.draw = draw;\n    SheetUtils.copy(this, {\n      color: 'rgb(0,0,0)',\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\n    }, attr);\n  }\n\n  setWidthType(widthType) {\n    this.widthType = widthType;\n  }\n\n  setColor(color) {\n    this.color = color;\n  }\n\n  horizonLine(sx, sy, ex, ey) {\n    const { draw } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash([]);\n    draw.horizonLine([sx, sy], [ex, ey]);\n  }\n\n  verticalLine(sx, sy, ex, ey) {\n    const { draw } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash([]);\n    draw.verticalLine([sx, sy], [ex, ey]);\n  }\n\n  tiltingLine(sx, sy, ex, ey) {\n    const { draw } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash([]);\n    draw.corsLine([sx, sy], [ex, ey]);\n  }\n\n}\n\nclass DottedLine {\n\n  constructor(draw, attr) {\n    this.draw = draw;\n    SheetUtils.copy(this, {\n      color: 'rgb(0,0,0)',\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\n      dash: [5],\n    }, attr);\n  }\n\n  setWidthType(widthType) {\n    this.widthType = widthType;\n  }\n\n  setColor(color) {\n    this.color = color;\n  }\n\n  horizonLine(sx, sy, ex, ey) {\n    const { draw, dash } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash(dash);\n    draw.horizonLine([sx, sy], [ex, ey]);\n  }\n\n  verticalLine(sx, sy, ex, ey) {\n    const { draw, dash } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash(dash);\n    draw.verticalLine([sx, sy], [ex, ey]);\n  }\n\n  tiltingLine(sx, sy, ex, ey) {\n    const { draw, dash } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash(dash);\n    draw.corsLine([sx, sy], [ex, ey]);\n  }\n\n}\n\nclass DoubleLine {\n\n  constructor(draw, attr) {\n    this.draw = draw;\n    SheetUtils.copy(this, {\n      color: 'rgb(0,0,0)',\n      widthType: XDraw.LINE_WIDTH_TYPE.low,\n      padding: 1,\n      spacing: DoubleLine.spacing,\n      leftShow: () => false,\n      topShow: () => false,\n      rightShow: () => false,\n      bottomShow: () => false,\n      iFMerge: () => false,\n      iFMergeFirstRow: () => false,\n      iFMergeLastRow: () => false,\n      iFMergeFirstCol: () => false,\n      iFMergeLastCol: () => false,\n    }, attr);\n  }\n\n  setWidthType(widthType) {\n    this.widthType = widthType;\n  }\n\n  setColor(color) {\n    this.color = color;\n  }\n\n  handleExternal(sx, sy, ex, ey, row, col, pos) {\n    const external = {};\n    const { leftShow, topShow, rightShow, bottomShow } = this;\n    const { iFMerge, iFMergeFirstRow, iFMergeLastRow, iFMergeFirstCol, iFMergeLastCol } = this;\n    const { spacing } = this;\n    let ifMerge = null;\n    let firstRow = null;\n    let lastRow = null;\n    let firstCol = null;\n    let lastCol = null;\n    switch (pos) {\n      case 'left':\n        ifMerge = iFMerge(row, col - 1);\n        if (ifMerge) {\n          firstRow = iFMergeFirstRow(row, col - 1);\n          lastRow = iFMergeLastRow(row, col - 1);\n          firstCol = iFMergeFirstCol(row, col - 1);\n          lastCol = iFMergeLastCol(row, col - 1);\n        }\n        break;\n      case 'top':\n        ifMerge = iFMerge(row - 1, col);\n        if (ifMerge) {\n          firstRow = iFMergeFirstRow(row - 1, col);\n          lastRow = iFMergeLastRow(row - 1, col);\n          firstCol = iFMergeFirstCol(row - 1, col);\n          lastCol = iFMergeLastCol(row - 1, col);\n        }\n        break;\n      case 'right':\n        ifMerge = iFMerge(row, col + 1);\n        if (ifMerge) {\n          firstRow = iFMergeFirstRow(row, col + 1);\n          lastRow = iFMergeLastRow(row, col + 1);\n          firstCol = iFMergeFirstCol(row, col + 1);\n          lastCol = iFMergeLastCol(row, col + 1);\n        }\n        break;\n      case 'bottom':\n        ifMerge = iFMerge(row + 1, col);\n        if (ifMerge) {\n          firstRow = iFMergeFirstRow(row + 1, col);\n          lastRow = iFMergeLastRow(row + 1, col);\n          firstCol = iFMergeFirstCol(row + 1, col);\n          lastCol = iFMergeLastCol(row + 1, col);\n        }\n        break;\n      default: break;\n    }\n    if (ifMerge) {\n      switch (pos) {\n        case 'left': {\n          external.sx = sx - spacing;\n          external.ex = ex - spacing;\n          // 检查顶边和上底边及左上角底边及左顶边\n          const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\n          const sTop = topShow(row, col);\n          const sBottom = bottomShow(row - 1, col);\n          external.sy = sy;\n          if (sTop || sBottom) external.sy = sy - spacing;\n          if (sTopLeftCorner && firstRow) external.sy = sy + spacing;\n          // 检查底边和下顶边及左下角顶边和左底边\n          const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\n          const eBottom = bottomShow(row, col);\n          const eTop = topShow(row + 1, col);\n          external.ey = ey;\n          if (eBottom || eTop) external.ey = ey + spacing;\n          if (eBottomLeftCorner && lastRow) external.ey = ey - spacing;\n          break;\n        }\n        case 'top': {\n          external.sy = sy - spacing;\n          external.ey = ey - spacing;\n          // 检查左边和左右边及左上角右边及上左边\n          const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\n          const sLeft = leftShow(row, col);\n          const sRight = rightShow(row, col - 1);\n          external.sx = sx;\n          if (sLeft || sRight) external.sx = sx - spacing;\n          if (sTopLeftCorner && firstCol) external.sx = sx + spacing;\n          // 检查右边和右左边及右上角左边及上右边\n          const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\n          const eRight = rightShow(row, col);\n          const eLeft = leftShow(row, col + 1);\n          external.ex = ex;\n          if (eRight || eLeft) external.ex = ex + spacing;\n          if (eTopRightCorner && lastCol) external.ex = ex - spacing;\n          break;\n        }\n        case 'right': {\n          external.sx = sx + spacing;\n          external.ex = ex + spacing;\n          // 检查顶边和上底边及右上角底边及右顶边\n          const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\n          const sTop = topShow(row, col);\n          const sBottom = bottomShow(row - 1, col);\n          external.sy = sy;\n          if (sTop || sBottom) external.sy = sy - spacing;\n          if (sTopRightCorner && firstRow) external.sy = sy + spacing;\n          // 检查底边和下顶边及右下角顶边及右底边\n          const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\n          const eBottom = bottomShow(row, col);\n          const eTop = topShow(row + 1, col);\n          external.ey = ey;\n          if (eBottom || eTop) external.ey = ey + spacing;\n          if (eBottomRightCorner && lastRow) external.ey = ey - spacing;\n          break;\n        }\n        case 'bottom': {\n          external.sy = sy + spacing;\n          external.ey = ey + spacing;\n          // 检查左边和左右边及左下角右边及下左边\n          const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\n          const sLeft = leftShow(row, col);\n          const sRight = rightShow(row, col - 1);\n          external.sx = sx;\n          if (sLeft || sRight) external.sx = sx - spacing;\n          if (sBottomLeftCorner && firstCol) external.sx = sx + spacing;\n          // 检查右边和右左边及右下角左边及下右边\n          const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\n          const eRight = rightShow(row, col);\n          const eLeft = leftShow(row, col + 1);\n          external.ex = ex;\n          if (eRight || eLeft) external.ex = ex + spacing;\n          if (eBottomRightCorner && lastCol) external.ex = ex - spacing;\n          break;\n        }\n        default: break;\n      }\n      return external;\n    }\n    switch (pos) {\n      case 'left': {\n        external.sx = sx - spacing;\n        external.ex = ex - spacing;\n        // 检查顶边和上底边及左上角底边及左顶边\n        const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\n        const sTop = topShow(row, col);\n        const sBottom = bottomShow(row - 1, col);\n        external.sy = sy;\n        if (sTop || sBottom) external.sy = sy - spacing;\n        if (sTopLeftCorner) external.sy = sy + spacing;\n        // 检查底边和下顶边及左下角顶边和左底边\n        const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\n        const eBottom = bottomShow(row, col);\n        const eTop = topShow(row + 1, col);\n        external.ey = ey;\n        if (eBottom || eTop) external.ey = ey + spacing;\n        if (eBottomLeftCorner) external.ey = ey - spacing;\n        break;\n      }\n      case 'top': {\n        external.sy = sy - spacing;\n        external.ey = ey - spacing;\n        // 检查左边和左右边及左上角右边及上左边\n        const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\n        const sLeft = leftShow(row, col);\n        const sRight = rightShow(row, col - 1);\n        external.sx = sx;\n        if (sLeft || sRight) external.sx = sx - spacing;\n        if (sTopLeftCorner) external.sx = sx + spacing;\n        // 检查右边和右左边及右上角左边及上右边\n        const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\n        const eRight = rightShow(row, col);\n        const eLeft = leftShow(row, col + 1);\n        external.ex = ex;\n        if (eRight || eLeft) external.ex = ex + spacing;\n        if (eTopRightCorner) external.ex = ex - spacing;\n        break;\n      }\n      case 'right': {\n        external.sx = sx + spacing;\n        external.ex = ex + spacing;\n        // 检查顶边和上底边及右上角底边及右顶边\n        const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\n        const sTop = topShow(row, col);\n        const sBottom = bottomShow(row - 1, col);\n        external.sy = sy;\n        if (sTop || sBottom) external.sy = sy - spacing;\n        if (sTopRightCorner) external.sy = sy + spacing;\n        // 检查底边和下顶边及右下角顶边及右底边\n        const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\n        const eBottom = bottomShow(row, col);\n        const eTop = topShow(row + 1, col);\n        external.ey = ey;\n        if (eBottom || eTop) external.ey = ey + spacing;\n        if (eBottomRightCorner) external.ey = ey - spacing;\n        break;\n      }\n      case 'bottom': {\n        external.sy = sy + spacing;\n        external.ey = ey + spacing;\n        // 检查左边和左右边及左下角右边及下左边\n        const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\n        const sLeft = leftShow(row, col);\n        const sRight = rightShow(row, col - 1);\n        external.sx = sx;\n        if (sLeft || sRight) external.sx = sx - spacing;\n        if (sBottomLeftCorner) external.sx = sx + spacing;\n        // 检查右边和右左边及右下角左边及下右边\n        const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\n        const eRight = rightShow(row, col);\n        const eLeft = leftShow(row, col + 1);\n        external.ex = ex;\n        if (eRight || eLeft) external.ex = ex + spacing;\n        if (eBottomRightCorner) external.ex = ex - spacing;\n        break;\n      }\n      default: break;\n    }\n    return external;\n  }\n\n  handleInternal(sx, sy, ex, ey, row, col, pos) {\n    const internal = {};\n    const { leftShow, topShow, rightShow, bottomShow } = this;\n    const { iFMerge, iFMergeFirstRow, iFMergeLastRow, iFMergeFirstCol, iFMergeLastCol } = this;\n    const { spacing } = this;\n    const ifMerge = iFMerge(row, col);\n    // merge\n    if (ifMerge) {\n      const firstRow = iFMergeFirstRow(row, col);\n      const lastRow = iFMergeLastRow(row, col);\n      const firstCol = iFMergeFirstCol(row, col);\n      const lastCol = iFMergeLastCol(row, col);\n      switch (pos) {\n        case 'left': {\n          internal.sx = sx + spacing;\n          internal.ex = ex + spacing;\n          // 检查顶边和上底边及左上角底边及左顶边\n          const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\n          const sTop = topShow(row, col);\n          const sBottom = bottomShow(row - 1, col);\n          internal.sy = sy;\n          if (sTopLeftCorner) internal.sy = sy - spacing;\n          if ((sTop || sBottom) && firstRow) internal.sy = sy + spacing;\n          // 检查底边和下顶边及左下角顶边和左底边\n          const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\n          const eBottom = bottomShow(row, col);\n          const eTop = topShow(row + 1, col);\n          internal.ey = ey;\n          if (eBottomLeftCorner) internal.ey = ey + spacing;\n          if ((eBottom || eTop) && lastRow) internal.ey = ey - spacing;\n          break;\n        }\n        case 'top': {\n          internal.sy = sy + spacing;\n          internal.ey = ey + spacing;\n          // 检查左边和左右边及左上角右边及上左边\n          const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\n          const sLeft = leftShow(row, col);\n          const sRight = rightShow(row, col - 1);\n          internal.sx = sx;\n          if (sTopLeftCorner) internal.sx = sx - spacing;\n          if ((sLeft || sRight) && firstCol) internal.sx = sx + spacing;\n          // 检查右边和右左边及右上角左边及上右边\n          const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\n          const eRight = rightShow(row, col);\n          const eLeft = leftShow(row, col + 1);\n          internal.ex = ex;\n          if (eTopRightCorner) internal.ex = ex + spacing;\n          if ((eRight || eLeft) && lastCol) internal.ex = ex - spacing;\n          break;\n        }\n        case 'right': {\n          internal.sx = sx - spacing;\n          internal.ex = ex - spacing;\n          // 检查顶边和上底边及右上角底边及右上边\n          const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\n          const sTop = topShow(row, col);\n          const sBottom = bottomShow(row - 1, col);\n          internal.sy = sy;\n          if (sTopRightCorner) internal.sy = sy - spacing;\n          if ((sTop || sBottom) && firstRow) internal.sy = sy + spacing;\n          // 检查底边和下顶边右下角顶边及右下边\n          const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\n          const eBottom = bottomShow(row, col);\n          const eTop = topShow(row + 1, col);\n          internal.ey = ey;\n          if (eBottomRightCorner) internal.ey = ey + spacing;\n          if ((eBottom || eTop) && lastRow) internal.ey = ey - spacing;\n          break;\n        }\n        case 'bottom': {\n          internal.sy = sy - spacing;\n          internal.ey = ey - spacing;\n          // 检查左边和左右边及左下角右边及下左边\n          const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\n          const sLeft = leftShow(row, col);\n          const sRight = rightShow(row, col - 1);\n          internal.sx = sx;\n          if (sBottomLeftCorner) internal.sx = sx - spacing;\n          if ((sLeft || sRight) && firstCol) internal.sx = sx + spacing;\n          // 检查右边和右左边及右下角左边及下右边\n          const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\n          const eRight = rightShow(row, col);\n          const eLeft = leftShow(row, col + 1);\n          internal.ex = ex;\n          if (eBottomRightCorner) internal.ex = ex + spacing;\n          if ((eRight || eLeft) && lastCol) internal.ex = ex - spacing;\n          break;\n        }\n        default: break;\n      }\n      return internal;\n    }\n    switch (pos) {\n      case 'left': {\n        internal.sx = sx + spacing;\n        internal.ex = ex + spacing;\n        // 检查顶边和上底边及左上角底边及左顶边\n        const sTopLeftCorner = bottomShow(row - 1, col - 1) || topShow(row, col - 1);\n        const sTop = topShow(row, col);\n        const sBottom = bottomShow(row - 1, col);\n        internal.sy = sy;\n        if (sTopLeftCorner) internal.sy = sy - spacing;\n        if (sTop || sBottom) internal.sy = sy + spacing;\n        // 检查底边和下顶边及左下角顶边和左底边\n        const eBottomLeftCorner = topShow(row + 1, col - 1) || bottomShow(row, col - 1);\n        const eBottom = bottomShow(row, col);\n        const eTop = topShow(row + 1, col);\n        internal.ey = ey;\n        if (eBottomLeftCorner) internal.ey = ey + spacing;\n        if (eBottom || eTop) internal.ey = ey - spacing;\n        break;\n      }\n      case 'top': {\n        internal.sy = sy + spacing;\n        internal.ey = ey + spacing;\n        // 检查左边和左右边及左上角右边及上左边\n        const sTopLeftCorner = rightShow(row - 1, col - 1) || leftShow(row - 1, col);\n        const sLeft = leftShow(row, col);\n        const sRight = rightShow(row, col - 1);\n        internal.sx = sx;\n        if (sTopLeftCorner) internal.sx = sx - spacing;\n        if (sLeft || sRight) internal.sx = sx + spacing;\n        // 检查右边和右左边及右上角左边及上右边\n        const eTopRightCorner = leftShow(row - 1, col + 1) || rightShow(row - 1, col);\n        const eRight = rightShow(row, col);\n        const eLeft = leftShow(row, col + 1);\n        internal.ex = ex;\n        if (eTopRightCorner) internal.ex = ex + spacing;\n        if (eRight || eLeft) internal.ex = ex - spacing;\n        break;\n      }\n      case 'right': {\n        internal.sx = sx - spacing;\n        internal.ex = ex - spacing;\n        // 检查顶边和上底边及右上角底边及右上边\n        const sTopRightCorner = bottomShow(row - 1, col + 1) || topShow(row, col + 1);\n        const sTop = topShow(row, col);\n        const sBottom = bottomShow(row - 1, col);\n        internal.sy = sy;\n        if (sTopRightCorner) internal.sy = sy - spacing;\n        if (sTop || sBottom) internal.sy = sy + spacing;\n        // 检查底边和下顶边右下角顶边及右下边\n        const eBottomRightCorner = topShow(row + 1, col + 1) || bottomShow(row, col + 1);\n        const eBottom = bottomShow(row, col);\n        const eTop = topShow(row + 1, col);\n        internal.ey = ey;\n        if (eBottomRightCorner) internal.ey = ey + spacing;\n        if (eBottom || eTop) internal.ey = ey - spacing;\n        break;\n      }\n      case 'bottom': {\n        internal.sy = sy - spacing;\n        internal.ey = ey - spacing;\n        // 检查左边和左右边及左下角右边及下左边\n        const sBottomLeftCorner = rightShow(row + 1, col - 1) || leftShow(row + 1, col);\n        const sLeft = leftShow(row, col);\n        const sRight = rightShow(row, col - 1);\n        internal.sx = sx;\n        if (sBottomLeftCorner) internal.sx = sx - spacing;\n        if (sLeft || sRight) internal.sx = sx + spacing;\n        // 检查右边和右左边及右下角左边及下右边\n        const eBottomRightCorner = leftShow(row + 1, col + 1) || rightShow(row + 1, col);\n        const eRight = rightShow(row, col);\n        const eLeft = leftShow(row, col + 1);\n        internal.ex = ex;\n        if (eBottomRightCorner) internal.ex = ex + spacing;\n        if (eRight || eLeft) internal.ex = ex - spacing;\n        break;\n      }\n      default: break;\n    }\n    return internal;\n  }\n\n  horizonLine(sx, sy, ex, ey, row, col, pos) {\n    const { draw } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash([]);\n    const external = this.handleExternal(sx, sy, ex, ey, row, col, pos);\n    const internal = this.handleInternal(sx, sy, ex, ey, row, col, pos);\n    if (!SheetUtils.isEmptyObject(internal)) {\n      draw.horizonLine([internal.sx, internal.sy], [internal.ex, internal.ey]);\n    }\n    if (!SheetUtils.isEmptyObject(external)) {\n      draw.horizonLine([external.sx, external.sy], [external.ex, external.ey]);\n    }\n  }\n\n  verticalLine(sx, sy, ex, ey, row, col, pos) {\n    const { draw } = this;\n    const {\n      widthType, color,\n    } = this;\n    draw.setLineColor(color);\n    draw.setLineWidthType(widthType);\n    draw.setLineDash([]);\n    const external = this.handleExternal(sx, sy, ex, ey, row, col, pos);\n    const internal = this.handleInternal(sx, sy, ex, ey, row, col, pos);\n    if (!SheetUtils.isEmptyObject(internal)) {\n      draw.verticalLine([internal.sx, internal.sy], [internal.ex, internal.ey]);\n    }\n    if (!SheetUtils.isEmptyObject(external)) {\n      draw.verticalLine([external.sx, external.sy], [external.ex, external.ey]);\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  tiltingLine(sx, sy, ex, ey, row, col, pos) {\n    // TODO ..\n    // ...\n  }\n\n}\nDoubleLine.spacing = XDraw.dpr() >= 2 ? 3 : 2;\n\nclass Line {\n\n  constructor(draw, attr = {}) {\n    this.widthType = XDraw.LINE_WIDTH_TYPE.low;\n    this.type = LINE_TYPE.SOLID_LINE;\n    this.solidLine = new SolidLine(draw, SheetUtils.copy({}, attr));\n    this.dottedLine = new DottedLine(draw, SheetUtils.copy({\n      dash: [5],\n    }, attr));\n    this.pointLine = new DottedLine(draw, SheetUtils.copy({\n      dash: [2, 2],\n    }, attr));\n    this.doubleLine = new DoubleLine(draw, SheetUtils.copy({}, attr));\n  }\n\n  setWidthType(widthType) {\n    if (widthType) {\n      if (this.type === LINE_TYPE.SOLID_LINE) {\n        this.solidLine.setWidthType(widthType);\n      }\n    }\n  }\n\n  setColor(color) {\n    if (color) {\n      this.solidLine.setColor(color);\n      this.dottedLine.setColor(color);\n      this.pointLine.setColor(color);\n      this.doubleLine.setColor(color);\n    }\n  }\n\n  setType(type) {\n    this.type = type;\n  }\n\n  horizonLine(sx, sy, ex, ey, row, col, pos) {\n    const {\n      type,\n      solidLine,\n      dottedLine,\n      pointLine,\n      doubleLine,\n    } = this;\n    switch (type) {\n      case LINE_TYPE.SOLID_LINE:\n        solidLine.horizonLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.DOTTED_LINE:\n        dottedLine.horizonLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.POINT_LINE:\n        pointLine.horizonLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.DOUBLE_LINE:\n        doubleLine.horizonLine(sx, sy, ex, ey, row, col, pos);\n        break;\n    }\n  }\n\n  verticalLine(sx, sy, ex, ey, row, col, pos) {\n    const {\n      type,\n      solidLine,\n      dottedLine,\n      pointLine,\n      doubleLine,\n    } = this;\n    switch (type) {\n      case LINE_TYPE.SOLID_LINE:\n        solidLine.verticalLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.DOTTED_LINE:\n        dottedLine.verticalLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.POINT_LINE:\n        pointLine.verticalLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.DOUBLE_LINE:\n        doubleLine.verticalLine(sx, sy, ex, ey, row, col, pos);\n        break;\n    }\n  }\n\n  tiltingLine(sx, sy, ex, ey, row, col, pos) {\n    const {\n      type,\n      solidLine,\n      dottedLine,\n      pointLine,\n      doubleLine,\n    } = this;\n    switch (type) {\n      case LINE_TYPE.SOLID_LINE:\n        solidLine.tiltingLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.DOTTED_LINE:\n        dottedLine.tiltingLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.POINT_LINE:\n        pointLine.tiltingLine(sx, sy, ex, ey);\n        break;\n      case LINE_TYPE.DOUBLE_LINE:\n        doubleLine.tiltingLine(sx, sy, ex, ey, row, col, pos);\n        break;\n    }\n  }\n\n}\n\nexport {\n  Line, LINE_TYPE, SolidLine,\n};\n","import { LINE_TYPE } from '../../../draw/Line';\nimport { SheetUtils } from '../../../utils/SheetUtils';\nimport { XDraw } from '../../../draw/XDraw';\n\nlet zIndexID = 0;\n\n/**\n * Border\n * @author jerry\n */\nclass Border {\n\n  static getZIndex() {\n    zIndexID += 1;\n    return zIndexID;\n  }\n\n  constructor({\n    widthType = XDraw.LINE_WIDTH_TYPE.low,\n    type = LINE_TYPE.SOLID_LINE,\n    width = -1,\n    color = 'rgb(0,0,0)',\n    zIndex = 0,\n    display = false,\n  } = {}) {\n    this.zIndex = zIndex;\n    this.display = display;\n    this.color = color;\n    this.type = type;\n    if (width === 1) {\n      this.widthType = XDraw.LINE_WIDTH_TYPE.low;\n    } else if (width === 2) {\n      this.widthType = XDraw.LINE_WIDTH_TYPE.medium;\n    } else if (width === 3) {\n      this.widthType = XDraw.LINE_WIDTH_TYPE.high;\n    } else {\n      this.widthType = widthType;\n    }\n    if (zIndex > zIndexID) {\n      zIndexID = zIndex;\n    }\n  }\n\n  priority(border) {\n    if (SheetUtils.isUnDef(border)) {\n      return -2;\n    }\n    const origin = this.zIndex;\n    const target = border.zIndex;\n    if (origin > target) {\n      return 1;\n    }\n    if (target > origin) {\n      return -1;\n    }\n    return 0;\n  }\n\n  setColor(value) {\n    this.zIndex = Border.getZIndex();\n    this.color = value;\n  }\n\n  setDisplay(value) {\n    this.zIndex = Border.getZIndex();\n    this.display = value;\n  }\n\n  setType(value) {\n    this.zIndex = Border.getZIndex();\n    this.type = value;\n  }\n\n  setZIndex(value) {\n    this.zIndex = value;\n  }\n\n  setWidthType(value) {\n    this.zIndex = Border.getZIndex();\n    this.widthType = value;\n  }\n\n  clone() {\n    return new Border({\n      widthType: this.widthType,\n      color: this.color,\n      zIndex: this.zIndex,\n      type: this.type,\n      display: this.display,\n    });\n  }\n\n  equal(target) {\n    const widthType = this.widthType === target.widthType;\n    const color = this.color === target.color;\n    const type = this.type === target.type;\n    return color && widthType && type;\n  }\n\n}\n\nexport { Border };\n","import { Border } from './Border';\nimport { LINE_TYPE } from '../../../draw/Line';\n\n/**\n * CellBorder\n * @author jerry\n */\nclass CellBorder {\n\n  /**\n   * CellBorder\n   * @param time\n   * @param left\n   * @param top\n   * @param right\n   * @param bottom\n   */\n  constructor({\n    left = {},\n    bottom = {},\n    top = {},\n    right = {},\n  } = {}) {\n    this.left = new Border(left);\n    this.bottom = new Border(bottom);\n    this.top = new Border(top);\n    this.right = new Border(right);\n  }\n\n  hasDouble() {\n    const { top, left, right, bottom } = this;\n    if (top.type === LINE_TYPE.DOUBLE_LINE) {\n      return true;\n    }\n    if (left.type === LINE_TYPE.DOUBLE_LINE) {\n      return true;\n    }\n    if (right.type === LINE_TYPE.DOUBLE_LINE) {\n      return true;\n    }\n    return bottom.type === LINE_TYPE.DOUBLE_LINE;\n  }\n\n  isDisplay() {\n    return this.left.display || this.top.display\n      || this.bottom.display || this.right.display;\n  }\n\n  setAllDisplay(display) {\n    this.setBDisplay(display);\n    this.setLDisplay(display);\n    this.setTDisplay(display);\n    this.setRDisplay(display);\n  }\n\n  setLDisplay(display) {\n    this.left.setDisplay(display);\n  }\n\n  setTDisplay(display) {\n    this.top.setDisplay(display);\n  }\n\n  setRDisplay(display) {\n    this.right.setDisplay(display);\n  }\n\n  setBDisplay(display) {\n    this.bottom.setDisplay(display);\n  }\n\n  setAllColor(color) {\n    this.setBColor(color);\n    this.setLColor(color);\n    this.setTColor(color);\n    this.setRColor(color);\n  }\n\n  setLColor(color) {\n    this.left.setColor(color);\n  }\n\n  setTColor(color) {\n    this.top.setColor(color);\n  }\n\n  setRColor(color) {\n    this.right.setColor(color);\n  }\n\n  setBColor(color) {\n    this.bottom.setColor(color);\n  }\n\n  setAllWidthType(widthType) {\n    this.setBWidthType(widthType);\n    this.setLWidthType(widthType);\n    this.setTWidthType(widthType);\n    this.setRWidthType(widthType);\n  }\n\n  setLWidthType(widthType) {\n    this.left.setWidthType(widthType);\n  }\n\n  setTWidthType(widthType) {\n    this.top.setWidthType(widthType);\n  }\n\n  setRWidthType(widthType) {\n    this.right.setWidthType(widthType);\n  }\n\n  setBWidthType(widthType) {\n    this.bottom.setWidthType(widthType);\n  }\n\n  setAllType(type) {\n    this.setBType(type);\n    this.setLType(type);\n    this.setTType(type);\n    this.setRType(type);\n  }\n\n  setLType(type) {\n    this.left.setType(type);\n  }\n\n  setTType(type) {\n    this.top.setType(type);\n  }\n\n  setRType(type) {\n    this.right.setType(type);\n  }\n\n  setBType(type) {\n    this.bottom.setType(type);\n  }\n\n  updateMaxIndex() {\n    const zIndex = Border.getZIndex();\n    this.left.setZIndex(zIndex);\n    this.bottom.setZIndex(zIndex);\n    this.top.setZIndex(zIndex);\n    this.right.setZIndex(zIndex);\n  }\n\n  clone() {\n    const { left, top, right, bottom } = this;\n    return new CellBorder({\n      left: left.clone(),\n      top: top.clone(),\n      right: right.clone(),\n      bottom: bottom.clone(),\n    });\n  }\n\n}\n\nCellBorder.EMPTY = new CellBorder();\n\nCellBorder.getInstance = (config) => {\n  if (config) {\n    return new CellBorder(config);\n  }\n  return CellBorder.EMPTY;\n};\n\nexport { CellBorder };\n","class Rect {\n\n  /**\n   * Rect\n   * @param x\n   * @param y\n   * @param width\n   * @param height\n   */\n  constructor({\n    x, y, width, height,\n  }) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * 判断两个矩形是否不发生重合\n   * @param {Rect} other 区域\n   * @returns {boolean}\n   */\n  disjoint(other) {\n    return this.x > other.x + other.width\n      || this.y > this.y + other.height\n      || other.x > this.x + this.width\n      || other.y > this.y + this.height;\n  }\n\n  /**\n   * 扩展尺寸\n   * @param size\n   * @returns {Rect}\n   */\n  expandSize(size) {\n    this.width += size;\n    this.height += size;\n    return this;\n  }\n\n  /**\n   * 是否包含点\n   * @param x\n   * @param y\n   * @returns {boolean}\n   */\n  includePoint(x, y) {\n    return x >= this.x && x <= this.x + this.width\n      && y >= this.y && y <= this.y + this.height;\n  }\n\n  /**\n   * 是否包含矩形\n   * @param rect\n   * @returns {boolean|boolean}\n   */\n  includeRect(rect) {\n    const { x, y, width, height } = rect;\n    return this.x <= x && this.x + this.width >= x + width\n      && this.y <= y && this.y + this.height >= y + height;\n  }\n\n  /**\n   * 计算当前矩形在指定矩形内部的位置\n   * @param rect\n   * @returns {Rect}\n   */\n  inRectPosition(rect) {\n    return new Rect({\n      x: this.x - rect.x,\n      y: this.y - rect.y,\n      width: this.width,\n      height: this.height,\n    });\n  }\n\n  /**\n   * 复制\n   * @returns {Rect}\n   */\n  clone() {\n    const { x, y, width, height } = this;\n    return new Rect({ x, y, width, height });\n  }\n\n}\n\nexport { Rect };\n","\n/**\n * XIconOffset\n */\nclass XIconOffset {\n\n  /**\n   * XIconOffset\n   * @param x\n   * @param y\n   */\n  constructor({ x = 0, y = 0 } = {}) {\n    this.x = x;\n    this.y = y;\n  }\n\n}\n\nexport {\n  XIconOffset,\n};\n","class Crop {\n\n  constructor({\n    rect, draw, offset = 0,\n  }) {\n    this.rect = rect;\n    this.draw = draw;\n    this.offset = offset;\n  }\n\n  open() {\n    const {\n      rect, draw, offset,\n    } = this;\n    const {\n      x, y, width, height,\n    } = rect;\n    draw.save()\n      .rect(x, y, width + offset, height + offset)\n      .clip()\n      .beginPath();\n    return this;\n  }\n\n  close() {\n    const { draw } = this;\n    draw.restore();\n    return this;\n  }\n\n}\n\nexport { Crop };\n","/* global Image console */\nimport { SheetUtils } from '../../../utils/SheetUtils';\nimport { XDraw } from '../../../draw/XDraw';\nimport { Rect } from '../../../draw/Rect';\nimport { XIconOffset } from './XIconOffset';\nimport { Crop } from '../../../draw/Crop';\n\n/**\n * XIcon\n * @author jerry\n * @date 2020/10/20\n */\nclass XIcon {\n\n  /**\n   * 多图标初始化\n   * @param icons\n   * @returns {[]}\n   */\n  static newInstances(icons = []) {\n    const instances = [];\n    for (let i = 0; i < icons.length; i += 1) {\n      const icon = icons[i];\n      instances.push(new XIcon(icon));\n    }\n    return instances;\n  }\n\n  /**\n   * XIcon\n   * @param vertical\n   * @param horizontal\n   * @param type\n   * @param image\n   * @param focus\n   * @param height\n   * @param width\n   * @param color\n   * @param offset\n   * @param onDraw\n   * @param onLeave\n   * @param onMove\n   * @param onDown\n   * @param onEnter\n   */\n  constructor({\n    vertical = XIcon.ICON_VERTICAL.CENTER,\n    horizontal = XIcon.ICON_HORIZONTAL.RIGHT,\n    type = XIcon.ICON_TYPE.image,\n    image = SheetUtils.Nul,\n    iconFocus = null,\n    height = 16,\n    width = 16,\n    color = 'rgb(255,255,255)',\n    offset = { x: 0, y: 0 },\n    onDraw = () => {},\n    onLeave = () => {},\n    onMove = () => {},\n    onDown = () => {},\n    onEnter = () => {},\n  }) {\n    this.vertical = vertical;\n    this.horizontal = horizontal;\n    this.width = width;\n    this.height = height;\n    this.type = type;\n    this.image = image;\n    this.color = color;\n    this.iconFocus = iconFocus;\n    this.offset = new XIconOffset(offset);\n    this.onLeave = onLeave;\n    this.onMove = onMove;\n    this.onDraw = onDraw;\n    this.onDown = onDown;\n    this.onEnter = onEnter;\n    this.rect = null;\n  }\n\n  /**\n   * 计算绘制坐标\n   * @param rect\n   * @returns {{x: number, y: number}}\n   */\n  position(rect) {\n    // 图标信息\n    const iconHorizontal = this.horizontal;\n    const iconVertical = this.vertical;\n    const iconOffsetX = XDraw.stylePx(this.offset.x);\n    const iconOffsetY = XDraw.stylePx(this.offset.y);\n    const iconWidth = XDraw.stylePx(this.width);\n    const iconHeight = XDraw.stylePx(this.height);\n    // 矩形位置\n    const rectX = rect.x;\n    const rectY = rect.y;\n    const rectWidth = rect.width;\n    const rectHeight = rect.height;\n    // 计算位置\n    let px = 0;\n    let py = 0;\n    switch (iconHorizontal) {\n      case XIcon.ICON_HORIZONTAL.CENTER:\n        px = (rectX + rectWidth / 2) - (iconWidth / 2);\n        break;\n      case XIcon.ICON_HORIZONTAL.LEFT:\n        px = rectX;\n        break;\n      case XIcon.ICON_HORIZONTAL.RIGHT:\n        px = rectX + rectWidth - iconWidth;\n        break;\n    }\n    switch (iconVertical) {\n      case XIcon.ICON_VERTICAL.CENTER:\n        py = (rectY + rectHeight / 2) - (iconHeight / 2);\n        break;\n      case XIcon.ICON_VERTICAL.TOP:\n        py = rectY;\n        break;\n      case XIcon.ICON_VERTICAL.BOTTOM:\n        py = rectY + rectHeight - iconHeight;\n        break;\n    }\n    px += iconOffsetX;\n    py += iconOffsetY;\n    return new Rect({\n      x: px, y: py, width: iconWidth, height: iconHeight,\n    });\n  }\n\n  /**\n   * 加载图片信息\n   * @param async\n   * @param sync\n   */\n  loadImage({\n    load, sync,\n  }) {\n    const { image, type } = this;\n    switch (type) {\n      case XIcon.ICON_TYPE.image:\n        if (image instanceof Image) {\n          sync(image);\n        } else {\n          const loadImg = new Image();\n          loadImg.src = image;\n          if (loadImg.complete) {\n            this.image = loadImg;\n            sync(this.image);\n          } else {\n            loadImg.onload = () => {\n              this.image = loadImg;\n              load(loadImg);\n            };\n            loadImg.onerror = () => {\n              // eslint-disable-next-line no-console\n              console.error(`图片加载失败${image}`);\n            };\n          }\n        }\n        break;\n      case XIcon.ICON_TYPE.draw:\n        sync();\n        break;\n    }\n  }\n\n  /**\n   * 绘制小图标\n   * @param rect\n   * @param draw\n   */\n  drawIcon({\n    rect, draw,\n  }) {\n    const { type } = this;\n    this.rect = rect;\n    switch (type) {\n      case XIcon.ICON_TYPE.image:\n        this.drawImage({\n          rect, draw,\n        });\n        break;\n      case XIcon.ICON_TYPE.draw:\n        this.drawCustom({\n          rect, draw,\n        });\n        break;\n    }\n  }\n\n  /**\n   * 自定义绘制\n   * @param rect\n   * @param icon\n   * @param draw\n   */\n  drawCustom({\n    rect, draw,\n  }) {\n    this.onDraw({\n      rect, draw,\n    });\n  }\n\n  /**\n   * 绘制图片\n   * @param rect\n   * @param icon\n   * @param draw\n   */\n  drawImage({\n    rect, draw,\n  }) {\n    const image = this.image;\n    const color = this.color;\n    const positionRect = this.position(rect);\n    const {\n      x, y, width, height,\n    } = positionRect;\n    const include = rect.includeRect(positionRect);\n    const crop = new Crop({\n      rect, draw,\n    });\n    if (include === false) {\n      crop.open();\n    }\n    if (color) {\n      draw.attr({ fillStyle: color });\n      draw.fillRect(x, y, width, height);\n    }\n    draw.drawImage(image, 0, 0, image.width, image.height, x, y, width, height);\n    if (include === false) {\n      crop.close();\n    }\n  }\n\n  /**\n   * 事件处理\n   * @param type\n   * @param x\n   * @param y\n   * @param native\n   */\n  eventHandle({\n    type, x, y, native,\n  }) {\n    const { rect, iconFocus } = this;\n    if (rect) {\n      const position = this.position(rect);\n      const location = position.inRectPosition(rect);\n      const { activate } = iconFocus;\n      switch (type) {\n        case XIcon.ICON_EVENT_TYPE.MOUSE_DOWN:\n          if (location.includePoint(x, y)) {\n            iconFocus.setActivate(this);\n            this.onDown({\n              native, position,\n            });\n          }\n          break;\n        case XIcon.ICON_EVENT_TYPE.MOUSE_MOVE:\n          if (location.includePoint(x, y)) {\n            if (activate !== this) {\n              this.onEnter({\n                native, position,\n              });\n            }\n            iconFocus.setActivate(this);\n            this.onMove({\n              native, position,\n            });\n          } else if (activate) {\n            iconFocus.setActivate(null);\n            this.onLeave({\n              native, position,\n            });\n          }\n          break;\n      }\n    }\n  }\n\n  /**\n   * 绘制回调\n   * @param callback\n   */\n  setOnDraw(callback) {\n    this.onDraw = callback;\n  }\n\n  /**\n   * 按下回调\n   * @param callback\n   */\n  setOnDown(callback) {\n    this.onDown = callback;\n  }\n\n  /**\n   * 移动回调\n   * @param callback\n   */\n  setOnMove(callback) {\n    this.onMove = callback;\n  }\n\n  /**\n   * 进入回调\n   * @param callback\n   */\n  setOnEnter(callback) {\n    this.onEnter = callback;\n  }\n\n  /**\n   * 离开回调\n   * @param callback\n   */\n  setOnLeave(callback) {\n    this.onLeave = callback;\n  }\n\n  /**\n   * 设置焦点元素\n   * @param iconFocus\n   */\n  setFocus(iconFocus) {\n    this.iconFocus = iconFocus;\n  }\n\n}\n\nXIcon.ICON_HORIZONTAL = {\n  LEFT: 0,\n  RIGHT: 1,\n  CENTER: 2,\n};\nXIcon.ICON_VERTICAL = {\n  TOP: 3,\n  BOTTOM: 4,\n  CENTER: 5,\n};\nXIcon.ICON_TYPE = {\n  image: 1,\n  custom: 2,\n};\nXIcon.ICON_EVENT_TYPE = {\n  MOUSE_DOWN: 1,\n  MOUSE_MOVE: 2,\n};\n\nXIcon.EMPTY = [];\nXIcon.getInstance = (config) => {\n  if (config) {\n    return XIcon.newInstances(config);\n  }\n  return XIcon.EMPTY;\n};\n\nexport { XIcon };\n","class DateUtils {\n\n  static dateFormat(fmt, date) {\n    if (!(date instanceof Date)) {\n      return date;\n    }\n    const o = {\n      'M+': date.getMonth() + 1,\n      'd+': date.getDate(),\n      'h+': date.getHours(),\n      'm+': date.getMinutes(),\n      's+': date.getSeconds(),\n      'q+': Math.floor((date.getMonth() + 3) / 3),\n      S: date.getMilliseconds(),\n    };\n    const reYear = /(y+)/;\n    const resultYear = reYear.exec(fmt);\n    if (resultYear) {\n      const yearFormatPart = resultYear[0];\n      const yearVal = (date.getFullYear().toString()).substr(4 - yearFormatPart.length);\n      fmt = fmt.replace(yearFormatPart, yearVal);\n    }\n    // eslint-disable-next-line guard-for-in,no-restricted-syntax\n    for (const k in o) {\n      const re = new RegExp(`(${k})`);\n      const res = re.exec(fmt);\n      if (res) {\n        const Val = o[k].toString();\n        const formatPart = res[0];\n        const replaceVal = (formatPart.length === 1) ? (Val) : ((`00${Val}`).substr(Val.length));\n        fmt = fmt.replace(formatPart, replaceVal);\n      }\n    }\n    return fmt;\n  }\n\n  static parse(text) {\n    let result = text;\n    if (result instanceof Date) {\n      return result;\n    }\n\n    result = DateUtils.parserToDate(text, 'yyyy/MM/dd');\n    if (result) {\n      return result;\n    }\n    result = DateUtils.parserToDate(text, 'MM/dd');\n    if (result) {\n      return result;\n    }\n    result = DateUtils.parserToDate(text, 'yyyy/MM/dd hh:mm:ss');\n    if (result) {\n      return result;\n    }\n\n    result = DateUtils.parserToDate(text, 'yyyy-MM-dd');\n    if (result) {\n      return result;\n    }\n    result = DateUtils.parserToDate(text, 'MM-dd');\n    if (result) {\n      return result;\n    }\n    result = DateUtils.parserToDate(text, 'yyyy-MM-dd hh:mm:ss');\n    if (result) {\n      return result;\n    }\n\n    result = DateUtils.parserToDate(text, 'hh:mm:ss');\n    if (result) {\n      return result;\n    }\n\n    result = DateUtils.parserToDate(text, 'yyyy年MM月');\n    if (result) {\n      return result;\n    }\n    result = DateUtils.parserToDate(text, 'MM月dd日');\n    if (result) {\n      return result;\n    }\n    result = DateUtils.parserToDate(text, 'yyyy年MM月dd日 hh:mm:ss');\n    if (result) {\n      return result;\n    }\n\n    return text;\n  }\n\n  static parserToDate(dateText, format) {\n    if (!dateText) {\n      return null;\n    }\n    const defaultVal = new Date('1970/01/01 00:00:00');\n    const o = [{\n      reg: 'y+',\n    }, {\n      reg: 'M+',\n    }, {\n      reg: 'd+',\n    }, {\n      reg: 'h+',\n    }, {\n      reg: 'm+',\n    }, {\n      reg: 's+',\n    }, {\n      reg: 'S',\n    }];\n    let year = defaultVal.getFullYear();\n    let month = defaultVal.getMonth() + 1;\n    let day = defaultVal.getDate();\n    let hours = defaultVal.getHours();\n    let minutes = defaultVal.getMinutes();\n    let seconds = defaultVal.getSeconds();\n    let milliseconds = defaultVal.getMilliseconds();\n    let index = 1;\n    for (let j = 0; j < format.length; j += 1) {\n      const oneChar = format[j];\n      for (let i = 0; i < o.length; i += 1) {\n        const onePart = o[i];\n        const onePartReg = onePart.reg;\n        if (onePartReg[0] === oneChar) {\n          if (!onePart.index) {\n            onePart.index = index;\n            index += 1;\n          }\n          break;\n        }\n      }\n    }\n    for (let i = 0; i < o.length; i += 1) {\n      const onePart = o[i];\n      const onePartReg = onePart.reg;\n      const re = new RegExp(`(${onePartReg})`);\n      const res = re.exec(format);\n      if (res) {\n        const formatPart = res[0];\n        const replaceVal = `([0-9]{1,${formatPart.length}})`;\n        // eslint-disable-next-line no-param-reassign\n        format = format.replace(formatPart, replaceVal);\n      }\n    }\n    const dataInfo = {};\n    const re = new RegExp(format);\n    const res = re.exec(dateText);\n    if (res) {\n      for (let i = 1; i < res.length; i += 1) {\n        dataInfo[i] = res[i];\n      }\n    } else {\n      return null;\n    }\n    if (o[0].index) {\n      const { index } = o[0];\n      year = dataInfo[index];\n    }\n    if (o[1].index) {\n      const { index } = o[1];\n      month = dataInfo[index];\n    }\n    if (o[2].index) {\n      const { index } = o[2];\n      day = dataInfo[index];\n    }\n    if (o[3].index) {\n      const { index } = o[3];\n      hours = dataInfo[index];\n    }\n    if (o[4].index) {\n      const { index } = o[4];\n      minutes = dataInfo[index];\n    }\n    if (o[5].index) {\n      const { index } = o[5];\n      seconds = dataInfo[index];\n    }\n    if (o[6].index) {\n      const { index } = o[6];\n      milliseconds = dataInfo[index];\n    }\n    return new Date(year, month - 1, day, hours, minutes, seconds, milliseconds);\n  }\n\n}\n\nexport { DateUtils };\n","import { SheetUtils } from '../../utils/SheetUtils';\nimport { DateUtils } from '../../utils/DateUtils';\n\nclass Format {\n\n  default(value) {\n    return this.text(value);\n  }\n\n  text(value) {\n    return value ? `${value}` : '';\n  }\n\n  // =============================数字==============================\n\n  number(value) {\n    return this.text(value);\n  }\n\n  fraction(value) {\n    if (SheetUtils.isFraction(value)) {\n      const left = value.split('/')[0];\n      const right = value.split('/')[1];\n      return this.text(SheetUtils.parseInt(left) / SheetUtils.parseInt(right));\n    }\n    return this.text(value);\n  }\n\n  eNotation(value) {\n    if (SheetUtils.isNumber(value)) {\n      const number = SheetUtils.parseFloat(value);\n      return number.toExponential(2);\n    }\n    return this.text(value);\n  }\n\n  decimal(value) {\n    if (SheetUtils.isNumber(value)) {\n      const indexOf = value.toString().indexOf('.');\n      if (indexOf !== -1) {\n        return value.toString().substring(0, indexOf + 3);\n      }\n      return `${value}.00`;\n    }\n    return this.text(value);\n  }\n\n  percentage(value) {\n    if (SheetUtils.isNumber(value)) {\n      return `${value}%`;\n    }\n    return this.text(value);\n  }\n\n  // =============================货币==============================\n\n  rmb(value) {\n    if (SheetUtils.isNumber(value)) {\n      return `￥${value}`;\n    }\n    return this.text(value);\n  }\n\n  hk(value) {\n    if (SheetUtils.isNumber(value)) {\n      return `HK${value}`;\n    }\n    return this.text(value);\n  }\n\n  dollar(value) {\n    if (SheetUtils.isNumber(value)) {\n      return `$${value}`;\n    }\n    return this.text(value);\n  }\n\n  // =============================日期==============================\n\n  time(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('hh:mm:ss', result);\n    }\n    return this.text(value);\n  }\n\n  date1(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('yyyy/MM/dd', result);\n    }\n    return this.text(value);\n  }\n\n  date2(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('MM月dd日', result);\n    }\n    return this.text(value);\n  }\n\n  date3(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('yyyy年MM月', result);\n    }\n    return this.text(value);\n  }\n\n  date4(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('yyyy年MM月dd日', result);\n    }\n    return this.text(value);\n  }\n\n  date5(value) {\n    const result = DateUtils.parse(value);\n    if (result) {\n      return DateUtils.dateFormat('yyyy/MM/dd hh:mm:ss', result);\n    }\n    return this.text(value);\n  }\n\n}\n\nconst format = new Format();\n\nexport default (type, value) => format[type](value);\n","import { SheetUtils } from '../../../utils/SheetUtils';\nimport { ColorArray } from '../../../module/colorpicker/colorarray/ColorArray';\n\nclass RichFont {\n\n  constructor({\n    text = '',\n    color = ColorArray.BLACK,\n    name = 'Arial',\n    size = 14,\n    bold = false,\n    italic = false,\n    strikethrough = false,\n    underline = false,\n    scaleAdapter,\n  } = {}) {\n    this.color = color;\n    this.text = `${text}`;\n    this.name = name;\n    this.size = size;\n    this.italic = italic;\n    this.bold = bold;\n    this.strikethrough = strikethrough;\n    this.underline = underline;\n    this.scaleAdapter = scaleAdapter;\n  }\n\n  clone() {\n    const { text, color, name, size } = this;\n    const { italic, bold, underline } = this;\n    const { strikethrough, scaleAdapter } = this;\n    return new RichFont({\n      text, color, name, size, italic, bold, underline, strikethrough, scaleAdapter,\n    });\n  }\n\n  reset() {\n    this.color = ColorArray.BLACK;\n    this.name = 'Arial';\n    this.size = 14;\n    this.bold = false;\n    this.italic = false;\n    this.strikethrough = false;\n    this.underline = false;\n  }\n\n  plain(option = v => v) {\n    return option(this.clone());\n  }\n\n  like(other) {\n    let ignore = ['scaleAdapter'];\n    let keys1 = Object.keys(this);\n    let keys2 = Object.keys(other);\n    for (let key of keys2) {\n      if (ignore.includes(key)) {\n        continue;\n      }\n      if (!keys1.includes(key)) {\n        return false;\n      }\n    }\n    for (let key of keys2) {\n      if (ignore.includes(key)) {\n        continue;\n      }\n      let src = this[key];\n      let val = other[key];\n      switch (key) {\n        case 'color': {\n          src = SheetUtils.clearBlank(src);\n          val = SheetUtils.clearBlank(val);\n          break;\n        }\n      }\n      if (src !== val) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  equals(other) {\n    let ignore = ['scaleAdapter'];\n    let keys1 = Object.keys(this);\n    let keys2 = Object.keys(other);\n    for (let key of keys1) {\n      if (ignore.includes(key)) {\n        continue;\n      }\n      if (!keys2.includes(key)) {\n        return false;\n      }\n    }\n    for (let key of keys1) {\n      if (ignore.includes(key)) {\n        continue;\n      }\n      let src = this[key];\n      let val = other[key];\n      switch (key) {\n        case 'color': {\n          src = SheetUtils.clearBlank(src);\n          val = SheetUtils.clearBlank(val);\n          break;\n        }\n      }\n      if (src !== val) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n\nexport {\n  RichFont,\n};\n","import { RichFont } from './RichFont';\nimport { SheetUtils } from '../../../utils/SheetUtils';\n\nclass RichFonts {\n\n  constructor({\n    rich = [],\n  } = {}) {\n    this.rich = rich.map(font => new RichFont(font));\n  }\n\n  setRich(rich = []) {\n    this.rich = rich;\n  }\n\n  each(cb = () => {}) {\n    this.rich.forEach((font) => {\n      cb(font);\n    });\n  }\n\n  reset() {\n    this.each((i) => {\n      i.reset();\n    });\n  }\n\n  getRich() {\n    return this.rich;\n  }\n\n  clone() {\n    const rich = [];\n    this.rich.forEach((font) => {\n      rich.push(font.clone());\n    });\n    return new RichFonts({\n      rich,\n    });\n  }\n\n  hasLength() {\n    return this.rich.length > 0;\n  }\n\n  plain(option) {\n    const result = [];\n    this.rich.forEach((font) => {\n      result.push(font.plain(option));\n    });\n    return result;\n  }\n\n  like(other) {\n    if (SheetUtils.isUnDef(other)) {\n      return false;\n    }\n    if (other.rich.length !== this.rich.length) {\n      return false;\n    }\n    for (let i = 0; i < this.rich.length; i++) {\n      let item1 = this.rich[i];\n      let item2 = other.rich[i];\n      if (!item1.like(item2)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  toString() {\n    let text = [];\n    this.each(i => text.push(i.text));\n    return text.join('');\n  }\n\n  equals(other) {\n    if (SheetUtils.isUnDef(other)) {\n      return false;\n    }\n    if (other.rich.length !== this.rich.length) {\n      return false;\n    }\n    for (let i = 0; i < this.rich.length; i++) {\n      let item1 = this.rich[i];\n      let item2 = other.rich[i];\n      if (!item1.equals(item2)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n\nRichFonts.EMPTY = new RichFonts();\n\nRichFonts.getInstance = (config) => {\n  if (config) {\n    return new RichFonts(config);\n  }\n  return RichFonts.EMPTY;\n};\n\nexport {\n  RichFonts,\n};\n","/**\n * 运行函数注册\n * @type {{}}\n */\nclass EvalFunctions {\n\n  /**\n   * EvalFunctions\n   */\n  constructor() {\n    this.functions = {};\n  }\n\n  /**\n   * 删除函数\n   * @param name\n   */\n  remove(name) {\n    delete this.functions[name];\n  }\n\n  /**\n   * 获取函数\n   * @param name\n   * @returns {*}\n   */\n  getFunction(name) {\n    return this.functions[name.toLocaleString()];\n  }\n\n  /**\n   * 注册函数\n   * @param name\n   * @param func\n   */\n  register(name, func) {\n    this.functions[name.toLocaleString()] = func;\n  }\n}\n\n/**\n * 函数注册\n * @type {EvalFunctions}\n */\nconst Functions = new EvalFunctions();\n\n/**\n * 指令序列\n */\nclass Assembly {\n\n  /**\n   * Assembly\n   */\n  constructor() {\n    this.assembly = '';\n  }\n\n  /**\n   * 获取指令详情\n   * @returns {string}\n   */\n  getInstruct() {\n    let { assembly } = this;\n    let flag = '\\r\\n';\n    while (assembly.endsWith(flag)) {\n      let { length } = assembly;\n      assembly = assembly.substring(0, length - flag.length);\n    }\n    return assembly;\n  }\n\n  /**\n   * 写入操作数\n   * @param value\n   */\n  writeOperand(value) {\n    this.assembly += `OPush ${value}\\r\\n`;\n  }\n\n  /**\n   * 写入运算符\n   * @param op\n   */\n  writeOperator(op) {\n    this.assembly += `${op}\\r\\n`;\n  }\n\n  /**\n   * 写入操作数\n   * @param value\n   */\n  writeString(value) {\n    this.assembly += `SPush ${value}\\r\\n`;\n  }\n\n  /**\n   * 写入操作数\n   * @param value\n   */\n  writeNumber(value) {\n    this.assembly += `NPush ${value}\\r\\n`;\n  }\n}\n\n/**\n * 词法分析\n */\nclass Tokenizer {\n\n  /**\n   * Tokenizer\n   * @param syntaxCheck\n   */\n  constructor({\n    syntaxCheck = true,\n  } = {}) {\n    this.syntaxCheck = syntaxCheck;\n  }\n\n  /**\n   * 词法分析\n   * @param input\n   * @returns {*[]}\n   */\n  lexical(input) {\n    let OPERATOR = /^(\\+|-|\\*|\\/|%|>|<|,|\\^|=|&|!|:|>=|<=|<>)$/;\n    let NUMBERS = /[0-9.]/;\n    let SPACE = /\\s/;\n    let LETTERS = /[a-z0-9_$]/i;\n    // 文本字符长度\n    let { length } = input;\n    // 函数调用记录\n    let bracketsStack = [];\n    // 当前的字符索引\n    let current = 0;\n    // 处理的字符数组\n    let tokens = [];\n    // 循环处理所有字符\n    while (current < length) {\n      // 当前处理的字符\n      let char = input[current];\n      // 跳过连续空格\n      if (SPACE.test(char)) {\n        const next = input[current + 1];\n        if (SPACE.test(next)) {\n          current++;\n          continue;\n        }\n      }\n      // 记录交叉区域运算符\n      if (SPACE.test(char)) {\n        const last = input[current - 1];\n        const next = input[current + 1];\n        if (LETTERS.test(last) && LETTERS.test(next)) {\n          tokens.push({\n            type: 'operator',\n            value: char,\n          });\n        }\n        current++;\n        continue;\n      }\n      // 记录括号\n      if (char === '(') {\n        tokens.push({\n          type: 'brackets',\n          value: '(',\n        });\n        bracketsStack.push({\n          type: 'brackets',\n          value: '(',\n        });\n        current++;\n        continue;\n      }\n      if (char === ')') {\n        const brackets = bracketsStack.pop();\n        if (brackets && brackets.type === 'function') {\n          tokens.push({\n            type: 'function',\n            value: ')',\n          });\n        } else {\n          tokens.push({\n            type: 'brackets',\n            value: ')',\n          });\n        }\n        current++;\n        continue;\n      }\n      // 记录数组\n      if (char === '{') {\n        tokens.push({\n          type: 'array',\n          value: 'array',\n        });\n        tokens.push({\n          type: 'array',\n          value: '{',\n        });\n        current++;\n        continue;\n      }\n      if (char === '}') {\n        tokens.push({\n          type: 'array',\n          value: '}',\n        });\n        current++;\n        continue;\n      }\n      // 记录字符串\n      if (char === '\"') {\n        let result = '';\n        current++;\n        char = input[current];\n        while (char !== '\"') {\n          if (current < length) {\n            result += char;\n            current++;\n            char = input[current];\n          } else {\n            break;\n          }\n        }\n        current++;\n        char = input[current];\n        tokens.push({\n          type: 'string',\n          value: result,\n        });\n        continue;\n      }\n      if (char === '\\'') {\n        let result = '';\n        current++;\n        char = input[current];\n        while (char !== '\\'') {\n          if (current < length) {\n            result += char;\n            current++;\n            char = input[current];\n          } else {\n            break;\n          }\n        }\n        current++;\n        char = input[current];\n        tokens.push({\n          type: 'string',\n          value: result,\n        });\n        continue;\n      }\n      // 记录运算符\n      if (OPERATOR.test(char)) {\n        let next = input[current + 1];\n        let result = `${char}${next}`;\n        if (OPERATOR.test(result)) {\n          tokens.push({\n            type: 'operator',\n            value: result,\n          });\n          current++;\n        } else {\n          tokens.push({\n            type: 'operator',\n            value: char,\n          });\n        }\n        current++;\n        continue;\n      }\n      // 记录数字值\n      if (NUMBERS.test(char)) {\n        let result = '';\n        while (NUMBERS.test(char)) {\n          if (current < length) {\n            result += char;\n            current++;\n            char = input[current];\n          } else {\n            break;\n          }\n        }\n        tokens.push({\n          type: 'number',\n          value: result,\n        });\n        continue;\n      }\n      // 记录函数名称, 参数名称, 操作数名称\n      if (LETTERS.test(char)) {\n        let result = '';\n        while (LETTERS.test(char)) {\n          if (current < length) {\n            result += char;\n            current++;\n            char = input[current];\n          } else {\n            break;\n          }\n        }\n        // 是否为函数名称\n        if (char === '(') {\n          tokens.push({\n            type: 'function',\n            value: result,\n          });\n          tokens.push({\n            type: 'function',\n            value: '(',\n          });\n          bracketsStack.push({\n            type: 'function',\n            value: '(',\n          });\n          current++;\n        } else {\n          tokens.push({\n            type: 'operand',\n            value: result,\n          });\n        }\n        continue;\n      }\n      // 无法识别的token\n      throw new TypeError(`无法识别的token ${char} `);\n    }\n    // 返回处理结果\n    if (this.syntaxCheck) {\n      return this.syntax(tokens);\n    }\n    return tokens;\n  }\n\n  /**\n   * 语法分析\n   * @param tokens\n   */\n  syntax(tokens) {\n    // 单引号对校验\n    let sQuotesStack = [];\n    // 双引号对校验\n    let dQuotesStack = [];\n    // 函数闭合标签校验\n    let callStack = [];\n    // 数组闭合标签校验\n    let arrayStack = [];\n    // 括号闭合标签校验\n    let bracketsStack = [];\n    // 当前的字符索引\n    let current = 0;\n    // tokens长度\n    let { length } = tokens;\n    // 忽略的数组token\n    let ignoreArray = (token) => {\n      if (token.type === 'array') {\n        return token.value === 'array';\n      }\n      return false;\n    };\n    // 忽略的函数token\n    let ignoreFunc = (token) => {\n      if (token.type === 'function') {\n        return token.value !== '(' && token.value !== ')';\n      }\n      return false;\n    };\n    // 跳过忽略的元素\n    let skipIgnoreToken = (dir, index) => {\n      if (dir === 'last') {\n        while (index >= 0) {\n          let token = tokens[index];\n          if (ignoreFunc(token)) {\n            index--;\n            continue;\n          }\n          if (ignoreArray(token)) {\n            index--;\n            continue;\n          }\n          return token;\n        }\n      }\n      if (dir === 'next') {\n        while (index < length) {\n          let token = tokens[index];\n          if (ignoreFunc(token)) {\n            index++;\n            continue;\n          }\n          if (ignoreArray(token)) {\n            index++;\n            continue;\n          }\n          return token;\n        }\n      }\n      return null;\n    };\n    // 检查数组\n    let checkArray = (dir, target) => {\n      let token = tokens[current];\n      let local = dir === 'last' ? '前面' : '后面';\n      if (token.value === '{') {\n        if (dir === 'last') {\n          switch (target.type) {\n            case 'array': {\n              if (target.value === '{') {\n                return;\n              }\n              break;\n            }\n            case 'function': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n            case 'operator': {\n              if (target.value === ',') {\n                return;\n              }\n              return;\n            }\n          }\n        }\n        if (dir === 'next') {\n          switch (target.type) {\n            case 'string':\n            case 'array':\n            case 'number':\n            case 'operand': {\n              return;\n            }\n            case 'function': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n          }\n        }\n      }\n      if (token.value === '}') {\n        if (dir === 'last') {\n          switch (target.type) {\n            case 'number':\n            case 'string':\n            case 'array':\n            case 'operand': {\n              return;\n            }\n            case 'function': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n          }\n        }\n        if (dir === 'next') {\n          switch (target.type) {\n            case 'array': {\n              if (target.value === '}') {\n                return;\n              }\n              break;\n            }\n            case 'function': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n            case 'operator': {\n              if (target.value === ',') {\n                return;\n              }\n              return;\n            }\n          }\n        }\n      }\n      throw TypeError(`错误表达式 ${token.value} ${local} ${target.value}`);\n    };\n    // 检查数字和字符\n    let checkValue = (dir, target) => {\n      let token = tokens[current];\n      let local = dir === 'last' ? '前面' : '后面';\n      switch (target.type) {\n        case 'array': {\n          if (dir === 'last') {\n            if (target.value === '{') {\n              return;\n            }\n          }\n          if (dir === 'next') {\n            if (target.value === '}') {\n              return;\n            }\n          }\n          break;\n        }\n        case 'brackets': {\n          if (dir === 'last') {\n            if (target.value === '(') {\n              return;\n            }\n          }\n          if (dir === 'next') {\n            if (target.value === ')') {\n              return;\n            }\n          }\n          break;\n        }\n        case 'function': {\n          if (dir === 'last') {\n            if (target.value === '(') {\n              return;\n            }\n          }\n          if (dir === 'next') {\n            if (target.value === ')') {\n              return;\n            }\n          }\n          break;\n        }\n        case 'operator': {\n          return;\n        }\n      }\n      throw TypeError(`错误表达式 ${token.value} ${local} ${target.value}`);\n    };\n    // 检查运算符\n    let checkOperator = (dir, target) => {\n      let token = tokens[current];\n      let local = dir === 'last' ? '前面' : '后面';\n      switch (target.type) {\n        case 'brackets':\n        case 'function':\n        case 'string':\n        case 'number':\n        case 'operand': {\n          return;\n        }\n        case 'array': {\n          if (token.value === ',') {\n            return;\n          }\n          break;\n        }\n      }\n      throw TypeError(`错误表达式 ${token.value} ${local} ${target.value}`);\n    };\n    // 检查函数\n    let checkFunction = (dir, target) => {\n      let token = tokens[current];\n      let local = dir === 'last' ? '前面' : '后面';\n      if (token.value === '(') {\n        if (dir === 'last') {\n          switch (target.type) {\n            case 'array': {\n              if (target.value === '{') {\n                return;\n              }\n              break;\n            }\n            case 'function': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n            case 'operator': {\n              return;\n            }\n          }\n        }\n        if (dir === 'next') {\n          switch (target.type) {\n            case 'function':\n            case 'string':\n            case 'number':\n            case 'operand': {\n              return;\n            }\n            case 'array': {\n              if (target.value === '{') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === '(') {\n                return;\n              }\n              break;\n            }\n          }\n        }\n      }\n      if (token.value === ')') {\n        if (dir === 'last') {\n          switch (target.type) {\n            case 'function':\n            case 'number':\n            case 'string':\n            case 'operand': {\n              return;\n            }\n            case 'array': {\n              if (target.value === '}') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n          }\n        }\n        if (dir === 'next') {\n          switch (target.type) {\n            case 'array': {\n              if (target.value === '}') {\n                return;\n              }\n              break;\n            }\n            case 'function': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n            case 'brackets': {\n              if (target.value === ')') {\n                return;\n              }\n              break;\n            }\n            case 'operator': {\n              if (target.value === ',') {\n                return;\n              }\n              return;\n            }\n          }\n        }\n      }\n      throw TypeError(`错误表达式 ${token.value} ${local} ${target.value}`);\n    };\n    // 循环处理所有token\n    while (current < length) {\n      // 当前处理的token\n      let token = tokens[current];\n      // 跳过忽略token\n      if (ignoreArray(token)) {\n        current++;\n        continue;\n      }\n      if (ignoreFunc(token)) {\n        current++;\n        continue;\n      }\n      let { type, value } = token;\n      // 处理单引号\n      if (type === \"'\") {\n        if (sQuotesStack.length) {\n          sQuotesStack.pop();\n        } else {\n          // 双引号中嵌套单引号\n          if (!dQuotesStack.length) {\n            sQuotesStack.push(\"'\");\n          }\n        }\n      }\n      // 处理双引号\n      if (type === '\"') {\n        if (dQuotesStack.length) {\n          dQuotesStack.pop();\n        } else {\n          // 单引号中嵌套双引号\n          if (!sQuotesStack.length) {\n            dQuotesStack.push('\"');\n          }\n        }\n      }\n      // 处理字符\n      if (type === 'string') {\n        let last = skipIgnoreToken('last', current - 1);\n        let next = skipIgnoreToken('next', current + 1);\n        if (last) {\n          checkValue('last', last);\n        }\n        if (next) {\n          checkValue('next', next);\n        }\n      }\n      // 处理数字\n      if (type === 'number') {\n        let last = skipIgnoreToken('last', current - 1);\n        let next = skipIgnoreToken('next', current + 1);\n        if (last) {\n          checkValue('last', last);\n        }\n        if (next) {\n          checkValue('next', next);\n        }\n      }\n      // 处理数组\n      if (type === 'array') {\n        if (value === '{') {\n          arrayStack.push(token);\n        }\n        if (value === '}') {\n          if (arrayStack.length === 0) {\n            throw new TypeError('数组缺少闭合标签');\n          }\n          arrayStack.pop();\n        }\n        let last = skipIgnoreToken('last', current - 1);\n        let next = skipIgnoreToken('next', current + 1);\n        if (last) {\n          checkArray('last', last);\n        }\n        if (next) {\n          checkArray('next', next);\n        }\n      }\n      // 处理函数调用\n      if (type === 'function') {\n        if (value === '(') {\n          callStack.push(token);\n        }\n        if (value === ')') {\n          callStack.pop();\n        }\n        let last = skipIgnoreToken('last', current - 1);\n        let next = skipIgnoreToken('next', current + 1);\n        if (last) {\n          checkFunction('last', last);\n        }\n        if (next) {\n          checkFunction('next', next);\n        }\n      }\n      // 处理运算符号\n      if (type === 'operator') {\n        let last = skipIgnoreToken('last', current - 1);\n        let next = skipIgnoreToken('next', current + 1);\n        // 运算符需要两边都有操作数\n        if (last) {\n          checkOperator('last', last);\n        } else {\n          throw TypeError(`错误表达式: ${token.value} 错误`);\n        }\n        if (next) {\n          checkOperator('next', next);\n        } else {\n          throw TypeError(`错误表达式: ${token.value} 错误`);\n        }\n      }\n      // 处理括号\n      if (type === 'brackets') {\n        if (value === '(') {\n          bracketsStack.push(token);\n        }\n        if (value === ')') {\n          if (bracketsStack.length === 0) {\n            throw new TypeError('括号缺少闭合标签');\n          }\n          bracketsStack.pop();\n        }\n      }\n      // 处理下一个字符\n      current++;\n    }\n    // 闭合标签检查\n    if (arrayStack.length) {\n      throw new TypeError('数组缺少闭合标签');\n    }\n    if (callStack.length) {\n      throw new TypeError('函数缺少闭合标签');\n    }\n    if (sQuotesStack.length) {\n      throw new TypeError('单引号缺少闭合标签');\n    }\n    if (dQuotesStack.length) {\n      throw new TypeError('双引号缺少闭合标签');\n    }\n    if (bracketsStack.length) {\n      throw new TypeError('括号缺少闭合标签');\n    }\n    return tokens;\n  }\n}\n\n/**\n * 编译表达式\n */\nclass Compiler {\n\n  /**\n   * Compiler\n   * @param tokens\n   * @param writer\n   */\n  constructor({\n    tokens, writer,\n  } = {}) {\n    this.writer = writer;\n    this.tokens = tokens;\n    this.groupStack = [];\n    this.index = -1;\n    this.ignore = [','];\n    // 运算符\n    this.opIf = {\n      '>': 'ifge',\n      '<': 'ifgt',\n      '=': 'ifeq',\n      '>=': 'if_icmpge',\n      '<=': 'if_icmpgt',\n      '<>': 'ifne',\n    };\n    this.opAdd = {\n      '+': 'add',\n      '-': 'sub',\n      '&': 'link',\n    };\n    this.opMul = {\n      '*': 'mul',\n      '/': 'div',\n      '%': 'mod',\n      '^': 'power',\n    };\n    this.opCommon = {\n      ' ': 'common',\n    };\n    this.opRel = {\n      '!': 'rel',\n      ':': 'uni',\n    };\n    this.opNew = {\n      array: 'newarray',\n    };\n    this.opCell = {\n      function: 'invoke',\n    };\n  }\n\n  /**\n   * 结束\n   */\n  eofToken() {\n    const { index, tokens } = this;\n    const { length } = tokens;\n    return index >= length - 1;\n  }\n\n  /**\n   * 切换下一个Token\n   */\n  nextToken() {\n    this.index++;\n    this.token = this.tokens[this.index];\n    return this.token;\n  }\n\n  /**\n   * 返回上一个Token\n   */\n  backToken() {\n    this.index--;\n    this.token = this.tokens[this.index];\n    return this.token;\n  }\n\n  /**\n   * 记录参数\n   */\n  reduceGroup() {\n    const { groupStack } = this;\n    const { length } = groupStack;\n    if (length > 0) {\n      const last = groupStack[length - 1];\n      const number = last.number;\n      last.number = number - 1;\n    }\n  }\n\n  /**\n   * 记录参数\n   */\n  increaseGroup() {\n    const { groupStack } = this;\n    const { length } = groupStack;\n    if (length > 0) {\n      const last = groupStack[length - 1];\n      const number = last.number;\n      last.number = number + 1;\n    }\n  }\n\n  /**\n   * 弹出组\n   */\n  popGroup() {\n    return this.groupStack.pop();\n  }\n\n  /**\n   * 添加组\n   */\n  addGroup(token) {\n    token.number = 0;\n    this.groupStack.push(token);\n    return token;\n  }\n\n  /**\n   * 忽略的Token\n   * @returns {*}\n   */\n  isSkipNextToken() {\n    if (!this.eofToken()) {\n      const { ignore } = this;\n      this.nextToken();\n      const { token } = this;\n      this.backToken();\n      const { value } = token;\n      return ignore.includes(value);\n    }\n    return false;\n  }\n\n  /**\n   * 编译表达式\n   */\n  compile() {\n    const { writer } = this;\n    this.compileIfge();\n    while (this.isSkipNextToken()) {\n      this.nextToken();\n      this.compileIfge();\n    }\n    return writer.getInstruct();\n  }\n\n  /**\n   * 编译条件运算\n   */\n  compileIfge() {\n    this.compileAdd();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'operator') {\n        this.backToken();\n        break;\n      }\n      if (!this.opIf[value]) {\n        this.backToken();\n        break;\n      }\n      let operator = this.opIf[value];\n      this.compileAdd();\n      this.reduceGroup();\n      this.writer.writeOperator(operator);\n    }\n  }\n\n  /**\n   * 编译加减运算\n   */\n  compileAdd() {\n    this.compileMul();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'operator') {\n        this.backToken();\n        break;\n      }\n      if (!this.opAdd[value]) {\n        this.backToken();\n        break;\n      }\n      let operator = this.opAdd[value];\n      this.compileMul();\n      this.reduceGroup();\n      this.writer.writeOperator(operator);\n    }\n  }\n\n  /**\n   * 编译乘除运算\n   */\n  compileMul() {\n    this.compileCommon();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'operator') {\n        this.backToken();\n        break;\n      }\n      if (!this.opMul[value]) {\n        this.backToken();\n        break;\n      }\n      let operator = this.opMul[value];\n      this.compileCommon();\n      this.reduceGroup();\n      this.writer.writeOperator(operator);\n    }\n  }\n\n  /**\n   * 编译公共区域运算\n   */\n  compileCommon() {\n    this.compileRel();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'operator') {\n        this.backToken();\n        break;\n      }\n      if (!this.opCommon[value]) {\n        this.backToken();\n        break;\n      }\n      let operator = this.opCommon[value];\n      this.compileRel();\n      this.reduceGroup();\n      this.writer.writeOperator(operator);\n    }\n  }\n\n  /**\n   * 编译跨Sheet引用运算\n   */\n  compileRel() {\n    this.compileArray();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'operator') {\n        this.backToken();\n        break;\n      }\n      if (!this.opRel[value]) {\n        this.backToken();\n        break;\n      }\n      let operator = this.opRel[value];\n      this.compileArray();\n      this.reduceGroup();\n      this.writer.writeOperator(operator);\n    }\n  }\n\n  /**\n   * 编译数组创建\n   */\n  compileArray() {\n    this.compileFunction();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'array') {\n        this.backToken();\n        break;\n      }\n      // 返回跳过 } 标记\n      if (value === '}') {\n        this.backToken();\n        break;\n      }\n      this.addGroup(token);\n      // 跳过当前 {  标记\n      this.nextToken();\n      // 处理数组中的子元素\n      this.compileIfge();\n      // 下一个是忽略的标记\n      // 则继续处理\n      while (this.isSkipNextToken()) {\n        this.nextToken();\n        this.compileIfge();\n      }\n      // 记录数组需要\n      // 操作的元素数量\n      this.popGroup();\n      const { number } = token;\n      const operator = this.opNew[type];\n      this.writer.writeOperator(`${operator} ${number}`);\n      // 跳过闭合标签 }\n      this.nextToken();\n    }\n  }\n\n  /**\n   * 编译函数调用\n   */\n  compileFunction() {\n    this.compilePushValue();\n    while (!this.eofToken()) {\n      const token = this.nextToken();\n      const { type, value } = token;\n      if (type !== 'function') {\n        this.backToken();\n        break;\n      }\n      // 返回跳过 ) 标记\n      if (value === ')') {\n        this.backToken();\n        break;\n      }\n      this.addGroup(token);\n      // 跳过当前 (  标记\n      this.nextToken();\n      // 处理函数的参数列表\n      this.compileIfge();\n      // 下一个是忽略的标记\n      // 则继续处理\n      while (this.isSkipNextToken()) {\n        this.nextToken();\n        this.compileIfge();\n      }\n      // 记录函数需要\n      // 操作的元素数量\n      this.popGroup();\n      const { number } = token;\n      const operator = this.opCell[type];\n      this.writer.writeOperator(`${operator} ${value} ${number}`);\n      // 跳过闭合标签 )\n      this.nextToken();\n    }\n  }\n\n  /**\n   * compilePushValue\n   */\n  compilePushValue() {\n    if (!this.eofToken()) {\n      const token = this.nextToken();\n      const { writer } = this;\n      const { type, value } = token;\n      // 推送操作数\n      // 递增函数/数组的参数数量(有的话)\n      switch (type) {\n        case 'string': {\n          this.increaseGroup();\n          writer.writeString(`${value}`);\n          return;\n        }\n        case 'number': {\n          this.increaseGroup();\n          writer.writeNumber(`${value}`);\n          return;\n        }\n        case 'operand': {\n          this.increaseGroup();\n          writer.writeOperand(value);\n          return;\n        }\n      }\n      // 处理括号计算\n      switch (type) {\n        case 'brackets': {\n          if (value === '(') {\n            this.compileIfge();\n            // 下一个是忽略的标记\n            // 则继续处理\n            while (this.isSkipNextToken()) {\n              this.nextToken();\n              this.compileIfge();\n            }\n            // 跳过闭合标签 )\n            this.nextToken();\n          }\n          return;\n        }\n      }\n      // 递增函数/数组的参数数量(有的话)\n      switch (type) {\n        case 'array': {\n          // {} 这种清空不需要增加参数数量\n          if (value !== '}') {\n            this.increaseGroup();\n          }\n          this.backToken();\n          return;\n        }\n        case 'function': {\n          // func() 这种清空不需要增加参数数量\n          if (value !== ')') {\n            this.increaseGroup();\n          }\n          this.backToken();\n          return;\n        }\n      }\n      // 过滤掉运算符\n      switch (type) {\n        case 'operator': {\n          this.backToken();\n          return;\n        }\n      }\n      // 无法识别的token\n      throw new TypeError(`无法识别的token ${type} ${value} `);\n    }\n  }\n}\n\n/**\n * 运行表达式\n */\nclass Evaluation {\n\n  /**\n   * Evaluate\n   * @param instruct\n   */\n  constructor(instruct) {\n    this.instruct = instruct.split('\\r\\n');\n    this.memory = [];\n  }\n\n  /**\n   * 运行表达式\n   */\n  eval() {\n    const newArray = /^newarray/;\n    const invoke = /^invoke/;\n    const pushSRegexp = /^SPush/;\n    const pushNRegexp = /^NPush/;\n    const pushORegexp = /^OPush/;\n    const { instruct } = this;\n    instruct.forEach((name) => {\n      switch (name) {\n        case 'if_icmpge': {\n          this.ificmpge();\n          break;\n        }\n        case 'if_icmpgt': {\n          this.ificmpgt();\n          break;\n        }\n        case 'ifge': {\n          this.ifge();\n          break;\n        }\n        case 'ifgt': {\n          this.ifgt();\n          break;\n        }\n        case 'ifeq': {\n          this.ifeq();\n          break;\n        }\n        case 'ifne': {\n          this.ifne();\n          break;\n        }\n        case 'add': {\n          this.add();\n          break;\n        }\n        case 'sub': {\n          this.sub();\n          break;\n        }\n        case 'mul': {\n          this.mul();\n          break;\n        }\n        case 'div': {\n          this.div();\n          break;\n        }\n        case 'mod': {\n          this.mod();\n          break;\n        }\n        case 'power': {\n          this.power();\n          break;\n        }\n        case 'rel': {\n          this.rel();\n          break;\n        }\n        case 'link': {\n          this.link();\n          break;\n        }\n        case 'uni': {\n          this.uni();\n          break;\n        }\n        case 'common': {\n          this.common();\n          break;\n        }\n        default: {\n          if (newArray.test(name)) {\n            const group = name.split(' ');\n            const index = group[1];\n            this.array(index);\n            break;\n          }\n          if (invoke.test(name)) {\n            const group = name.split(' ');\n            const func = group[1];\n            const index = group[2];\n            this.invoke(func, index);\n            break;\n          }\n          if (pushSRegexp.test(name)) {\n            const value = name.split(' ')[1];\n            this.pushS(value);\n            break;\n          }\n          if (pushNRegexp.test(name)) {\n            const value = name.split(' ')[1];\n            this.pushN(value);\n            break;\n          }\n          if (pushORegexp.test(name)) {\n            const value = name.split(' ')[1];\n            this.pushO(value);\n            break;\n          }\n        }\n      }\n    });\n    return this.memory.pop();\n  }\n\n  /**\n   * 推送操作数\n   * @param value\n   */\n  pushS(value) {\n    this.memory.push(value);\n  }\n\n  /**\n   * 推送操作数\n   * @param value\n   */\n  pushN(value) {\n    value = parseFloat(value);\n    this.memory.push(value);\n  }\n\n  /**\n   * 推送操作数\n   * @param value\n   */\n  pushO(value) {\n    this.memory.push(value);\n  }\n\n  /**\n   * 两个值的大于比较\n   */\n  ifge() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a > b);\n  }\n\n  /**\n   * 两个值的小于比较\n   */\n  ifgt() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a < b);\n  }\n\n  /**\n   * 两个值的相等比较\n   */\n  ifeq() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a === b);\n  }\n\n  /**\n   * 两个值的不等比较\n   */\n  ifne() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a !== b);\n  }\n\n  /**\n   * 两个值的大于等于比较\n   */\n  ificmpge() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a >= b);\n  }\n\n  /**\n   * 两个值的小于等于比较\n   */\n  ificmpgt() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a <= b);\n  }\n\n  /**\n   * 两个值的加法运算\n   */\n  add() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a + b);\n  }\n\n  /**\n   * 两个值的减法运算\n   */\n  sub() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a - b);\n  }\n\n  /**\n   * 两个值的乘法运算\n   */\n  mul() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a * b);\n  }\n\n  /**\n   * 两个值的除法运算\n   */\n  div() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a / b);\n  }\n\n  /**\n   * 两个值的mod运算\n   */\n  mod() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(a % b);\n  }\n\n  /**\n   * 计算两个区域的并集\n   */\n  common() {\n    // TODO ...\n    // ....\n  }\n\n  /**\n   * 跨sheet引用运算\n   */\n  rel() {\n    // TODO ...\n    // ....\n  }\n\n  /**\n   * 计算两个区域连接的新区域\n   */\n  uni() {\n    // TODO ...\n    // ....\n  }\n\n  /**\n   * 字符串连接运算\n   */\n  link() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(`${a}${b}`);\n  }\n\n  /**\n   * 乘方计算\n   */\n  power() {\n    const b = this.memory.pop();\n    const a = this.memory.pop();\n    this.memory.push(Math.pow(a, b));\n  }\n\n  /**\n   * 创建数组\n   * @param index\n   */\n  array(index) {\n    const array = [];\n    for (let i = 1; i <= index; i++) {\n      const item = this.memory.pop();\n      array.push(item);\n    }\n    array.reverse();\n    this.memory.push(array);\n  }\n\n  /**\n   * 执行函数\n   * @param func\n   * @param index\n   */\n  invoke(func, index) {\n    const array = [];\n    for (let i = 1; i <= index; i++) {\n      const item = this.memory.pop();\n      array.push(item);\n    }\n    array.reverse();\n    const execute = Functions.getFunction(func);\n    const result = execute.apply(this, array);\n    this.memory.push(result);\n  }\n}\n\n/**\n * 编译输出指令\n * @param input\n * @returns {string|*}\n * @constructor\n */\nconst Compile = (input) => {\n  if (input.startsWith('=')) {\n    input = input.substring(1);\n  }\n  const tokenizer = new Tokenizer();\n  const writer = new Assembly();\n  const tokens = tokenizer.lexical(input);\n  const compiler = new Compiler({\n    writer, tokens,\n  });\n  return compiler.compile();\n};\n\n/**\n * 运行指令\n * @param inst\n * @returns {*}\n * @constructor\n */\nconst Instruct = (inst) => {\n  const evaluation = new Evaluation(inst);\n  return evaluation.eval();\n};\n\n/**\n * 编译运行\n * @constructor\n */\nconst Evaluate = input => Instruct(Compile(input));\n\nexport {\n  Tokenizer,\n  Compiler,\n  Assembly,\n  Compile,\n  Evaluate,\n  Instruct,\n  Functions,\n};\n","import { Compile, Instruct } from './Compiler';\nimport { SheetUtils } from '../utils/SheetUtils';\n\n/**\n * Formula\n */\nclass Formula {\n\n  /**\n   * Formula\n   * @param expr\n   */\n  constructor({\n    expr = SheetUtils.EMPTY,\n  } = {}) {\n    this.expr = expr;\n    this.content = SheetUtils.Nul;\n    this.instruct = SheetUtils.Nul;\n  }\n\n  /**\n   * 计算公式\n   * @return {string}\n   */\n  getValue() {\n    let { expr } = this;\n    let { content } = this;\n    let { instruct } = this;\n    if (!content) {\n      if (!instruct) {\n        instruct = Compile(expr);\n      }\n      content = Instruct(instruct);\n    }\n    this.content = content;\n    this.instruct = instruct;\n    return content;\n  }\n\n  /**\n   * 有效的表达式\n   * @return {boolean}\n   */\n  hasExpr() {\n    let { expr } = this;\n    return !SheetUtils.isBlank(expr);\n  }\n\n  /**\n   * 获取表达式\n   * @return {string}\n   */\n  getExpr() {\n    return this.expr;\n  }\n\n  /**\n   * 设置表达式\n   * @param expr\n   */\n  setExpr(expr) {\n    this.expr = expr;\n    this.content = SheetUtils.Nul;\n    this.instruct = SheetUtils.Nul;\n  }\n\n  /**\n   * 复制\n   * @returns {Formula}\n   */\n  clone() {\n    return new Formula({\n      expr: this.expr,\n    });\n  }\n\n}\n\nFormula.EMPTY = new Formula();\n\nFormula.getInstance = (config) => {\n  if (config) {\n    return new Formula(config);\n  }\n  return Formula.EMPTY;\n};\n\nexport {\n  Formula,\n};\n","import { SheetUtils } from '../../../utils/SheetUtils';\nimport { CellFont } from './CellFont';\nimport { CellBorder } from './CellBorder';\nimport { XIcon } from '../tableicon/XIcon';\nimport XTableFormat from '../XTableTextFormat';\nimport { RichFonts } from './RichFonts';\nimport { Formula } from '../../../formula/Formula';\nimport { DateUtils } from '../../../utils/DateUtils';\n\n/**\n * 单元格\n */\nclass Cell {\n\n  /**\n   * Cell\n   * @param background\n   * @param format\n   * @param text\n   * @param richText\n   * @param ruler\n   * @param custom\n   * @param icons\n   * @param borderAttr\n   * @param fontAttr\n   * @param formula\n   * @param contentWidth\n   * @param contentHeight\n   * @param contentType\n   */\n  constructor({\n    format = 'default',\n    custom = {},\n    icons = [],\n    borderAttr = SheetUtils.Undef,\n    ruler = SheetUtils.Undef,\n    fontAttr = SheetUtils.Undef,\n    richText = SheetUtils.Undef,\n    formula = SheetUtils.Undef,\n    background = SheetUtils.Undef,\n    text = SheetUtils.EMPTY,\n    contentWidth = 0,\n    contentHeight = 0,\n    contentType = Cell.TYPE.STRING,\n  } = {}) {\n    // 背景颜色\n    this.background = background;\n    // 单元格图标\n    this.icons = XIcon.getInstance(icons);\n    // 自定义属性\n    this.custom = custom;\n    // 字体测量尺子\n    this.ruler = ruler;\n    // 格式化类型\n    this.format = format;\n    // 单元格公式\n    this.formula = Formula.getInstance(formula);\n    // 文本内容\n    this.text = text;\n    // 富文本内容\n    this.richText = RichFonts.getInstance(richText);\n    // 格式化后的内容\n    this.formatText = SheetUtils.EMPTY;\n    // 内容的高度\n    this.contentHeight = contentHeight;\n    // 内容的宽度\n    this.contentWidth = contentWidth;\n    // 字体属性\n    this.fontAttr = CellFont.getInstance(fontAttr);\n    // 边框属性\n    this.borderAttr = CellBorder.getInstance(borderAttr);\n    // 内容类型\n    this.setContentType(contentType);\n  }\n\n  /**\n   * 设置单元格小图标\n   * @param icons\n   */\n  setIcons(icons) {\n    this.icons = icons;\n    return this;\n  }\n\n  /**\n   * 设置内容文本\n   * @param text\n   */\n  setText(text) {\n    this.formatText = null;\n    this.text = text;\n    this.formula.setExpr(null);\n    this.richText.setRich([]);\n    this.setContentWidth(0);\n    return this;\n  }\n\n  /**\n   * 设置富文本\n   */\n  setRichText(rich) {\n    this.formatText = null;\n    this.text = null;\n    this.formula.setExpr(null);\n    this.richText.setRich(rich);\n    this.setContentWidth(0);\n    return this;\n  }\n\n  /**\n   * 设置公式\n   */\n  setExpr(expr) {\n    this.formatText = null;\n    this.text = null;\n    this.formula.setExpr(expr);\n    this.richText.setRich([]);\n    this.setContentWidth(0);\n    return this;\n  }\n\n  /**\n   * 获取公式\n   */\n  getExpr() {\n    return this.formula.getExpr();\n  }\n\n  /**\n   * 设置格式化类型\n   * @param format\n   */\n  setFormat(format = 'default') {\n    this.format = format;\n    this.formatText = null;\n    this.setContentWidth(0);\n    return this;\n  }\n\n  /**\n   * 保存测量尺子\n   * @param ruler\n   */\n  setRuler(ruler) {\n    this.ruler = ruler;\n    return this;\n  }\n\n  /**\n   * 设置内容类型\n   * @param type\n   */\n  setContentType(type = Cell.TYPE.STRING) {\n    const { text } = this;\n    switch (type) {\n      case Cell.TYPE.STRING: {\n        this.contentType = Cell.TYPE.STRING;\n        break;\n      }\n      case Cell.TYPE.NUMBER: {\n        this.contentType = type;\n        if (SheetUtils.isNumber(text)) {\n          this.contentType = Cell.TYPE.NUMBER;\n          this.text = SheetUtils.parseFloat(text);\n        } else {\n          this.contentType = Cell.TYPE.STRING;\n          this.text = `${text}`;\n        }\n        break;\n      }\n      case Cell.TYPE.DATE_TIME: {\n        const parse = DateUtils.parse(text);\n        if (SheetUtils.isDate(parse)) {\n          this.contentType = Cell.TYPE.DATE_TIME;\n          this.text = text;\n        } else {\n          this.contentType = Cell.TYPE.STRING;\n          this.text = `${text}`;\n        }\n        break;\n      }\n      case Cell.TYPE.RICH_TEXT: {\n        this.contentType = Cell.TYPE.RICH_TEXT;\n        break;\n      }\n    }\n    return this;\n  }\n\n  /**\n   * 单元格是否为空\n   * @returns {boolean}\n   */\n  isEmpty() {\n    return SheetUtils.isBlank(this.getComputeText());\n  }\n\n  /**\n   * 公式是否存在\n   */\n  hasFormula() {\n    return this.formula.hasExpr();\n  }\n\n  /**\n   * 获取格式后的文本\n   * @returns {string|*}\n   */\n  getFormatText() {\n    let {\n      text,\n      formula,\n      format,\n    } = this;\n    let { formatText } = this;\n    let { contentType } = this;\n    // 优先获取公式值\n    if (formula.hasExpr()) {\n      let value = formula.getValue();\n      if (value) {\n        if (SheetUtils.isBlank(formatText)) {\n          formatText = XTableFormat(format, value);\n        }\n      }\n      this.formatText = formatText;\n      return formatText;\n    }\n    // 格式化文本\n    switch (contentType) {\n      case Cell.TYPE.STRING:\n      case Cell.TYPE.NUMBER:\n      case Cell.TYPE.DATE_TIME: {\n        if (format) {\n          if (SheetUtils.isBlank(formatText)) {\n            this.formatText = XTableFormat(format, text);\n            return this.formatText;\n          }\n        }\n        return formatText;\n      }\n    }\n    // 默认返回\n    return SheetUtils.EMPTY;\n  }\n\n  /**\n   * 获取计算后的文本\n   * @returns {string|*}\n   */\n  getComputeText() {\n    let {\n      text,\n      formula,\n    } = this;\n    let { richText } = this;\n    let { contentType } = this;\n    // 优先获取公式值\n    if (formula.hasExpr()) {\n      return formula.getValue();\n    }\n    // 读取不同类型\n    switch (contentType) {\n      case Cell.TYPE.STRING:\n      case Cell.TYPE.NUMBER:\n      case Cell.TYPE.DATE_TIME: {\n        return text;\n      }\n      case Cell.TYPE.RICH_TEXT: {\n        return richText;\n      }\n    }\n    // 默认返回\n    return SheetUtils.EMPTY;\n  }\n\n  /**\n   * 字体属性\n   * @param attr\n   */\n  setFontAttr(attr) {\n    this.fontAttr = attr;\n    return this;\n  }\n\n  /**\n   * 设置边框类型\n   * @param attr\n   */\n  setBorderAttr(attr) {\n    this.borderAttr = attr;\n    return this;\n  }\n\n  /**\n   * 复制单元格\n   * @returns {Cell}\n   */\n  clone() {\n    return new Cell(this);\n  }\n\n  /**\n   * toJSON\n   */\n  toJSON() {\n    const { background, text, format, custom } = this;\n    const { icons, contentType, formula } = this;\n    const { richText, fontAttr, borderAttr } = this;\n    return {\n      custom,\n      richText,\n      formula,\n      contentType,\n      text,\n      icons,\n      background,\n      format,\n      fontAttr,\n      borderAttr,\n    };\n  }\n\n  /**\n   * toString\n   * @returns {string|*}\n   */\n  toString() {\n    return this.getFormatText();\n  }\n\n  /**\n   * 内容宽度\n   * @param width\n   */\n  setContentWidth(width) {\n    this.contentWidth = width;\n    return this;\n  }\n\n  /**\n   * 内容宽度\n   * @param height\n   */\n  setContentHeight(height) {\n    this.contentHeight = height;\n    return this;\n  }\n\n}\n\n/**\n * 单元格类型\n */\nCell.TYPE = {\n  // 数字\n  NUMBER: 0,\n  // 字符\n  STRING: 1,\n  // 富文本\n  RICH_TEXT: 2,\n  // 日期\n  DATE_TIME: 3,\n};\n\nexport {\n  Cell,\n};\n","class Listen {\n\n  constructor() {\n    this.pool = {};\n  }\n\n  clear() {\n    Object.keys((key) => {\n      delete this.pool[key];\n    });\n  }\n\n  removeListen(key) {\n    delete this.pool[key];\n  }\n\n  registerListen(key, call) {\n    this.pool[key] = call;\n  }\n\n  execute(key, ...message) {\n    if (this.pool[key]) {\n      this.pool[key](...message);\n    }\n  }\n\n}\n\nexport {\n  Listen,\n};\n","import { SheetUtils } from '../../../utils/SheetUtils';\n\nclass RectRange {\n\n  /**\n   * RectRange\n   * @param {int} sri 起始行\n   * @param {int} sci 起始列\n   * @param {int} eri 结束行\n   * @param {int} eci 结束列\n   * @param {int} w 宽度\n   * @param {int} h 高度\n   */\n  constructor(sri, sci, eri, eci, w = 0, h = 0) {\n    this.sri = sri;\n    this.sci = sci;\n    this.eri = eri;\n    this.eci = eci;\n    this.w = w;\n    this.h = h;\n  }\n\n  /**\n   * 循环过滤指定的行列\n   * @param {XIteratorBuilder} iteratorBuilder 迭代器\n   * @param {Function} cb 回调函数\n   * @param {Function} rowFilter 过滤使用的回调函数\n   */\n  each(iteratorBuilder, cb, rowFilter = () => true) {\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    let ret = false;\n    iteratorBuilder.getRowIterator()\n      .setBegin(sri)\n      .setEnd(eri)\n      .setLoop((i) => {\n        if (rowFilter(i)) {\n          iteratorBuilder.getColIterator()\n            .setBegin(sci)\n            .setEnd(eci)\n            .setLoop((j) => {\n              ret = cb(i, j);\n              return ret;\n            })\n            .execute();\n        }\n        return ret;\n      })\n      .execute();\n  }\n\n  /**\n   * 设置区域\n   * @param {int} sri 起始行\n   * @param {int} sci 起始列\n   * @param {int} eri 结束行\n   * @param {int} eci 结束列\n   */\n  set(sri, sci, eri, eci) {\n    this.sri = sri;\n    this.sci = sci;\n    this.eri = eri;\n    this.eci = eci;\n  }\n\n  /**\n   * 判断是否跨多个单元格\n   * @returns {boolean}\n   */\n  multiple() {\n    return this.eri - this.sri > 0 || this.eci - this.sci > 0;\n  }\n\n  /**\n   * 判断当前的区域是否包含指定的行和列\n   * 参数支持 ri, ci 和 A10 两种形式\n   * @param {[int, int] | String} args 行索引,列索引 或者 字符串\n   * @returns {boolean}\n   */\n  includes(...args) {\n    let [ri, ci] = [0, 0];\n    if (args.length === 1) {\n      [ci, ri] = SheetUtils.expr2xy(args[0]);\n    } else if (args.length === 2) {\n      [ri, ci] = args;\n    }\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    return sri <= ri && ri <= eri && sci <= ci && ci <= eci;\n  }\n\n  /**\n   * 判断当前的区域是否包含指定的区域\n   * @param {RectRange} other 区域\n   * @returns {boolean}\n   */\n  contains(other) {\n    return this.sri <= other.sri\n      && this.sci <= other.sci\n      && this.eri >= other.eri\n      && this.eci >= other.eci;\n  }\n\n  /**\n   * 判断当前的区域是否被指定的区域包含\n   * @param {RectRange} other 区域\n   * @returns {boolean}\n   */\n  within(other) {\n    return this.sri >= other.sri\n      && this.sci >= other.sci\n      && this.eri <= other.eri\n      && this.eci <= other.eci;\n  }\n\n  /**\n   * 判断当前的区域和指定的区域不发生重合\n   * @param {RectRange} other 区域\n   * @returns {boolean}\n   */\n  disjoint(other) {\n    return this.sri > other.eri\n      || this.sci > other.eci\n      || other.sri > this.eri\n      || other.sci > this.eci;\n  }\n\n  /**\n   * 判断当前的区域和指定的区域发生重合\n   * @param {RectRange} other 区域\n   * @returns {boolean}\n   */\n  intersects(other) {\n    return this.sri <= other.eri\n      && this.sci <= other.eci\n      && other.sri <= this.eri\n      && other.sci <= this.eci;\n  }\n\n  /**\n   * 返回当前区域和指定区域合并后的新区域\n   * @param {RectRange} other 区域\n   * @returns {RectRange}\n   */\n  union(other) {\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    return new RectRange(\n      other.sri < sri ? other.sri : sri,\n      other.sci < sci ? other.sci : sci,\n      other.eri > eri ? other.eri : eri,\n      other.eci > eci ? other.eci : eci,\n    );\n  }\n\n  /**\n   * 返回当前区域和指定区域合重合的新区域\n   * @param {RectRange} other\n   * @returns {RectRange}\n   */\n  coincide(other) {\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    if (this.disjoint(other)) {\n      return RectRange.EMPTY;\n    }\n    return new RectRange(\n      other.sri > sri ? other.sri : sri,\n      other.sci > sci ? other.sci : sci,\n      other.eri < eri ? other.eri : eri,\n      other.eci < eci ? other.eci : eci,\n    );\n  }\n\n  /**\n   * 当前区域和指定区域重合\n   * 返回当前区域和指定区域不重合的部分\n   * @param {RectRange} other 区域\n   * @returns {Array}\n   */\n  coincideDifference(other) {\n    if (this.coincide(other).equals(RectRange.EMPTY)) {\n      return [];\n    }\n    return this.difference(other);\n  }\n\n  /**\n   * 返回当前区域和指定区域不重合的部分\n   * @param {RectRange} other 区域\n   * @returns {Array}\n   */\n  difference(other) {\n    const ret = [];\n    const addRet = (sri, sci, eri, eci) => {\n      ret.push(new RectRange(sri, sci, eri, eci));\n    };\n    const { sri, sci, eri, eci } = this;\n    const dsr = other.sri - sri;\n    const dsc = other.sci - sci;\n    const der = eri - other.eri;\n    const dec = eci - other.eci;\n    if (dsr > 0) {\n      addRet(sri, sci, other.sri - 1, eci);\n      if (der > 0) {\n        addRet(other.eri + 1, sci, eri, eci);\n        if (dsc > 0) {\n          addRet(other.sri, sci, other.eri, other.sci - 1);\n        }\n        if (dec > 0) {\n          addRet(other.sri, other.eci + 1, other.eri, eci);\n        }\n      } else {\n        if (dsc > 0) {\n          addRet(other.sri, sci, eri, other.sci - 1);\n        }\n        if (dec > 0) {\n          addRet(other.sri, other.eci + 1, eri, eci);\n        }\n      }\n    } else if (der > 0) {\n      addRet(other.eri + 1, sci, eri, eci);\n      if (dsc > 0) {\n        addRet(sri, sci, other.eri, other.sci - 1);\n      }\n      if (dec > 0) {\n        addRet(sri, other.eci + 1, other.eri, eci);\n      }\n    }\n    if (dsc > 0) {\n      addRet(sri, sci, eri, other.sci - 1);\n      if (dec > 0) {\n        addRet(sri, other.eri + 1, eri, eci);\n        if (dsr > 0) {\n          addRet(sri, other.sci, other.sri - 1, other.eci);\n        }\n        if (der > 0) {\n          addRet(other.sri + 1, other.sci, eri, other.eci);\n        }\n      } else {\n        if (dsr > 0) {\n          addRet(sri, other.sci, other.sri - 1, eci);\n        }\n        if (der > 0) {\n          addRet(other.sri + 1, other.sci, eri, eci);\n        }\n      }\n    } else if (dec > 0) {\n      addRet(sri, other.eci + 1, eri, eci);\n      if (dsr > 0) {\n        addRet(sri, sci, other.sri - 1, other.eci);\n      }\n      if (der > 0) {\n        addRet(other.eri + 1, sci, eri, other.eci);\n      }\n    }\n    return ret;\n  }\n\n  /**\n   * 当前区域跨的行列数\n   * @returns {number[]}\n   */\n  size() {\n    return [\n      this.eri - this.sri + 1,\n      this.eci - this.sci + 1,\n    ];\n  }\n\n  /**\n   * 返回边缘区域\n   * @returns {{top: RectRange, left: RectRange, bottom: RectRange, right: RectRange}}\n   */\n  brink() {\n    const { sri, eri, sci, eci } = this;\n    const top = new RectRange(sri, sci, sri, eci);\n    const bottom = new RectRange(eri, sci, eri, eci);\n    const right = new RectRange(sri, eci, eri, eci);\n    const left = new RectRange(sri, sci, eri, sci);\n    return { top, right, bottom, left };\n  }\n\n  /**\n   * 方位点\n   * @returns {{rb: RectRange, rt: RectRange, lb: RectRange, lt: RectRange}}\n   */\n  point() {\n    const { sri, eri, sci, eci } = this;\n    const lt = new RectRange(sri, sci, sri, sci);\n    const rt = new RectRange(sri, eci, sri, eci);\n    const lb = new RectRange(eri, sci, eri, sci);\n    const rb = new RectRange(eri, eci, eri, eci);\n    return { lt, rt, lb, rb };\n  }\n\n  /**\n   * equals\n   * @param {RectRange} other 区域\n   * @returns {boolean}\n   */\n  equals(other) {\n    return this.eri === other.eri\n      && this.eci === other.eci\n      && this.sri === other.sri\n      && this.sci === other.sci;\n  }\n\n  /**\n   * 克隆\n   * @returns {RectRange}\n   */\n  clone() {\n    const {\n      sri, sci, eri, eci, w, h,\n    } = this;\n    return new RectRange(sri, sci, eri, eci, w, h);\n  }\n\n  toString() {\n    const {\n      sri, sci, eri, eci,\n    } = this;\n    let ref = SheetUtils.xy2expr(sci, sri);\n    if (this.multiple()) {\n      ref = `${ref}:${SheetUtils.xy2expr(eci, eri)}`;\n    }\n    return ref;\n  }\n\n  /**\n   * 将 B1:B8 或者 B1 参数转换成新的区域\n   * @param {String} ref 行列字符串\n   * @returns {RectRange}\n   */\n  static valueOf(ref) {\n    const refs = ref.split(':');\n    const [sci, sri] = SheetUtils.expr2xy(refs[0]);\n    let [eri, eci] = [sri, sci];\n    if (refs.length > 1) {\n      [eci, eri] = SheetUtils.expr2xy(refs[1]);\n    }\n    return new RectRange(sri, sci, eri, eci);\n  }\n}\n\nRectRange.EMPTY = new RectRange(-1, -1, -1, -1);\n\nexport { RectRange };\n","/**\n * 数据快照\n */\nimport { Listen } from '../../../lib/Listen';\n\nclass Snapshot {\n\n  /**\n   * Snapshot\n   */\n  constructor() {\n    // 撤销\n    this.undoStack = [];\n    // 反撤销\n    this.redoStack = [];\n    // 当前记录层\n    this.layer = {\n      event: '',\n      data: [],\n    };\n    // 启用记录\n    this.apply = false;\n    // 数据监听\n    this.listen = new Listen();\n  }\n\n  /**\n   * 撤销\n   */\n  undo() {\n    const layer = this.undoStack.pop();\n    for (let i = layer.data.length - 1; i >= 0; i--) {\n      const action = layer.data[i];\n      action.undo();\n    }\n    this.redoStack.push(layer);\n    this.listen.execute('change', layer.event, 'undo');\n  }\n\n  /**\n   * 反撤销\n   */\n  redo() {\n    const layer = this.redoStack.pop();\n    for (let i = 0, len = layer.data.length; i < len; i++) {\n      const action = layer.data[i];\n      action.redo();\n    }\n    this.undoStack.push(layer);\n    this.listen.execute('change', layer.event, 'redo');\n  }\n\n  /**\n   * 打开快照\n   */\n  open() {\n    this.layer = {\n      event: '',\n      data: [],\n    };\n    this.apply = true;\n  }\n\n  /**\n   * 能否反撤销\n   * @returns {boolean}\n   */\n  canRedo() {\n    return this.redoStack.length > 0;\n  }\n\n  /**\n   * 能否撤销\n   * @returns {boolean}\n   */\n  canUndo() {\n    return this.undoStack.length > 0;\n  }\n\n  /**\n   * 关闭快照\n   */\n  close(event) {\n    if (this.layer.data.length) {\n      this.layer.event = event;\n      this.redoStack = [];\n      this.undoStack.push(this.layer);\n    }\n    this.layer = {\n      event: '',\n      data: [],\n    };\n    this.apply = false;\n    this.listen.execute('change', event, 'close');\n  }\n\n  /**\n   * 添加动作\n   * @param action\n   */\n  addAction(action = {\n    undo: () => {},\n    redo: () => {},\n  }) {\n    if (this.apply) {\n      this.layer.data.push(action);\n    }\n  }\n}\n\nexport {\n  Snapshot,\n};\n","function Compare(a, b) {\n  return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction Swap(arr, i, j) {\n  let tmp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = tmp;\n}\n\nfunction QStep(arr, k, left, right, compare) {\n  while (right > left) {\n    if (right - left > 600) {\n      let n = right - left + 1;\n      let m = k - left + 1;\n      let z = Math.log(n);\n      let s = 0.5 * Math.exp(2 * z / 3);\n      let sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      let newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      let newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      QStep(arr, k, newLeft, newRight, compare);\n    }\n\n    let t = arr[k];\n    let i = left;\n    let j = right;\n\n    Swap(arr, left, k);\n    if (compare(arr[right], t) > 0) Swap(arr, left, right);\n\n    while (i < j) {\n      Swap(arr, i, j);\n      i++;\n      j--;\n      while (compare(arr[i], t) < 0) i++;\n      while (compare(arr[j], t) > 0) j--;\n    }\n\n    if (compare(arr[left], t) === 0) Swap(arr, left, j);\n    else {\n      j++;\n      Swap(arr, j, right);\n    }\n\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n}\n\nfunction QSelect(arr, k, left, right, compare) {\n  QStep(arr, k, left || 0, right || (arr.length - 1), compare || Compare);\n}\n\nexport {\n  QSelect,\n};\n","import { QSelect } from './Qselect';\n\nfunction findItem(item, items, equalsFn) {\n  if (!equalsFn) {\n    return items.indexOf(item);\n  }\n  for (let i = 0; i < items.length; i++) {\n    if (equalsFn(item, items[i])) return i;\n  }\n  return -1;\n}\nfunction extend(a, b) {\n  a.minX = Math.min(a.minX, b.minX);\n  a.minY = Math.min(a.minY, b.minY);\n  a.maxX = Math.max(a.maxX, b.maxX);\n  a.maxY = Math.max(a.maxY, b.maxY);\n  return a;\n}\nfunction compareNodeMinX(a, b) {\n  return a.minX - b.minX;\n}\nfunction compareNodeMinY(a, b) {\n  return a.minY - b.minY;\n}\nfunction bboxArea(a) {\n  return (a.maxX - a.minX) * (a.maxY - a.minY);\n}\nfunction bboxMargin(a) {\n  return (a.maxX - a.minX) + (a.maxY - a.minY);\n}\nfunction enlargedArea(a, b) {\n  return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) * (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\nfunction intersectionArea(a, b) {\n  const minX = Math.max(a.minX, b.minX);\n  const minY = Math.max(a.minY, b.minY);\n  const maxX = Math.min(a.maxX, b.maxX);\n  const maxY = Math.min(a.maxY, b.maxY);\n  return Math.max(0, maxX - minX) * Math.max(0, maxY - minY);\n}\nfunction contains(a, b) {\n  return a.minX <= b.minX && a.minY <= b.minY && b.maxX <= a.maxX && b.maxY <= a.maxY;\n}\nfunction intersects(a, b) {\n  return b.minX <= a.maxX && b.minY <= a.maxY && b.maxX >= a.minX && b.maxY >= a.minY;\n}\nfunction createNode(childrenNodes) {\n  return {\n    childrenNodes,\n    height: 1,\n    leaf: true,\n    minX: Infinity,\n    minY: Infinity,\n    maxX: -Infinity,\n    maxY: -Infinity,\n  };\n}\nfunction distBBox(node, k, p, toBBox, destNode) {\n  // 从 k 到 p-1 的节点子节点的最小边界矩形\n  if (!destNode) destNode = createNode(null);\n  destNode.minX = Infinity;\n  destNode.minY = Infinity;\n  destNode.maxX = -Infinity;\n  destNode.maxY = -Infinity;\n  for (let i = k; i < p; i++) {\n    const child = node.childrenNodes[i];\n    extend(destNode, node.leaf ? toBBox(child) : child);\n  }\n  return destNode;\n}\nfunction calcBBox(node, toBBox) {\n  // 从其子节点的框计算节点框\n  distBBox(node, 0, node.childrenNodes.length, toBBox, node);\n}\nfunction multiSelect(arr, left, right, n, compare) {\n  // 对数组进行排序，以便项目以 n 个未排序项目为一组，各组在彼此之间排序；\n  // 将选择算法与二元分治法相结合\n  const stack = [left, right];\n  while (stack.length) {\n    right = stack.pop();\n    left = stack.pop();\n    if (right - left <= n) continue;\n    const mid = left + Math.ceil((right - left) / n / 2) * n;\n    QSelect(arr, mid, left, right, compare);\n    stack.push(left, mid, mid, right);\n  }\n}\n\nclass Rtree {\n  constructor(maxEntries = 9) {\n    // 默认情况下，节点中的最大条目数为 9； 最小节点填充为 40% 以获得最佳性能\n    this._maxEntries = Math.max(4, maxEntries);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n    this.clear();\n  }\n\n  all() {\n    return this._all(this.data, []);\n  }\n\n  search(bbox) {\n    let node = this.data;\n    const result = [];\n\n    if (!intersects(bbox, node)) {\n      return result;\n    }\n\n    const toBBox = this.toBBox;\n    const nodesToSearch = [];\n\n    while (node) {\n      for (let i = 0; i < node.childrenNodes.length; i++) {\n        const child = node.childrenNodes[i];\n        const childBBox = node.leaf ? toBBox(child) : child;\n        if (intersects(bbox, childBBox)) {\n          if (node.leaf) result.push(child);\n          else if (contains(bbox, childBBox)) this._all(child, result);\n          else nodesToSearch.push(child);\n        }\n      }\n      node = nodesToSearch.pop();\n    }\n\n    return result;\n  }\n\n  first(bbox) {\n    return this.search(bbox)[0];\n  }\n\n  collides(bbox) {\n    let node = this.data;\n\n    if (!intersects(bbox, node)) {\n      return false;\n    }\n\n    const nodesToSearch = [];\n    while (node) {\n      for (let i = 0; i < node.childrenNodes.length; i++) {\n        const child = node.childrenNodes[i];\n        const childBBox = node.leaf ? this.toBBox(child) : child;\n        if (intersects(bbox, childBBox)) {\n          if (node.leaf || contains(bbox, childBBox)) return true;\n          nodesToSearch.push(child);\n        }\n      }\n      node = nodesToSearch.pop();\n    }\n\n    return false;\n  }\n\n  load(data) {\n    if (!(data && data.length)) {\n      return this;\n    }\n\n    if (data.length < this._minEntries) {\n      for (let i = 0; i < data.length; i++) {\n        this.insert(data[i]);\n      }\n      return this;\n    }\n\n    // 使用 OMT 算法从头开始使用给定数据递归构建树\n    let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n    if (!this.data.childrenNodes.length) {\n      // 如果树为空，则按原样保存\n      this.data = node;\n    } else if (this.data.height === node.height) {\n      // 如果树具有相同的高度，则拆分根\n      this._splitRoot(this.data, node);\n    } else {\n      if (this.data.height < node.height) {\n        // 如果插入的树更大，则交换树\n        const tmpNode = this.data;\n        this.data = node;\n        node = tmpNode;\n      }\n      // 将小树插入大树中适当的层次\n      this._insert(node, this.data.height - node.height - 1, true);\n    }\n\n    return this;\n  }\n\n  insert(item) {\n    if (item) {\n      this._insert(item, this.data.height - 1);\n    }\n    return this;\n  }\n\n  clear() {\n    this.data = createNode([]);\n    return this;\n  }\n\n  remove(item, equalsFn) {\n    if (!item) {\n      return this;\n    }\n\n    let node = this.data;\n    const bbox = this.toBBox(item);\n    const path = [];\n    const indexes = [];\n    let i;\n    let parent;\n    let goingUp;\n\n    // 深度优先迭代树遍历\n    while (node || path.length) {\n      if (!node) {\n        // 往上\n        node = path.pop();\n        parent = path[path.length - 1];\n        i = indexes.pop();\n        goingUp = true;\n      }\n\n      if (node.leaf) {\n        // 检查当前节点\n        const index = findItem(item, node.childrenNodes, equalsFn);\n        if (index !== -1) {\n          // 找到项目，移除项目并向上压缩树\n          node.childrenNodes.splice(index, 1);\n          path.push(node);\n          this._condense(path);\n          return this;\n        }\n      }\n\n      if (!goingUp && !node.leaf && contains(node, bbox)) {\n        // 往下\n        path.push(node);\n        indexes.push(i);\n        i = 0;\n        parent = node;\n        node = node.childrenNodes[0];\n      } else if (parent) {\n        // 向右走\n        i++;\n        node = parent.childrenNodes[i];\n        goingUp = false;\n      } else {\n        // 没有发现\n        node = null;\n      }\n    }\n\n    return this;\n  }\n\n  toBBox(item) {\n    return item;\n  }\n\n  compareMinX(a, b) {\n    return a.minX - b.minX;\n  }\n\n  compareMinY(a, b) {\n    return a.minY - b.minY;\n  }\n\n  _all(node, result) {\n    const nodesToSearch = [];\n    while (node) {\n      if (node.leaf) {\n        result.push(...node.childrenNodes);\n      } else {\n        nodesToSearch.push(...node.childrenNodes);\n      }\n      node = nodesToSearch.pop();\n    }\n    return result;\n  }\n\n  _build(items, left, right, height) {\n    const N = right - left + 1;\n    let M = this._maxEntries;\n    let node;\n\n    if (N <= M) {\n      // 达到叶级； 回叶\n      node = createNode(items.slice(left, right + 1));\n      calcBBox(node, this.toBBox);\n      return node;\n    }\n\n    if (!height) {\n      // 散装树的目标高度\n      height = Math.ceil(Math.log(N) / Math.log(M));\n      // 目标根条目数以最大限度地提高存储利用率\n      M = Math.ceil(N / Math.pow(M, height - 1));\n    }\n\n    node = createNode([]);\n    node.leaf = false;\n    node.height = height;\n\n    // 将项目分成 M 个主要为方形的元素\n    const N2 = Math.ceil(N / M);\n    const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n    multiSelect(items, left, right, N1, this.compareMinX);\n\n    for (let i = left; i <= right; i += N1) {\n      const right2 = Math.min(i + N1 - 1, right);\n      multiSelect(items, i, right2, N2, this.compareMinY);\n      for (let j = i; j <= right2; j += N2) {\n        const right3 = Math.min(j + N2 - 1, right2);\n        // 递归地打包每个条目\n        node.childrenNodes.push(this._build(items, j, right3, height - 1));\n      }\n    }\n\n    calcBBox(node, this.toBBox);\n\n    return node;\n  }\n\n  _chooseSubtree(bbox, node, level, path) {\n    while (true) {\n      path.push(node);\n\n      if (node.leaf || path.length - 1 === level) {\n        break;\n      }\n\n      let minArea = Infinity;\n      let minEnlargement = Infinity;\n      let targetNode;\n\n      for (let i = 0; i < node.childrenNodes.length; i++) {\n        const child = node.childrenNodes[i];\n        const area = bboxArea(child);\n        const enlargement = enlargedArea(bbox, child) - area;\n\n        // 选择最小面积扩大的入口\n        if (enlargement < minEnlargement) {\n          minEnlargement = enlargement;\n          minArea = area < minArea ? area : minArea;\n          targetNode = child;\n        } else if (enlargement === minEnlargement) {\n          // 否则选择面积最小的一个\n          if (area < minArea) {\n            minArea = area;\n            targetNode = child;\n          }\n        }\n      }\n\n      node = targetNode || node.childrenNodes[0];\n    }\n\n    return node;\n  }\n\n  _insert(item, level, isNode) {\n    const bbox = isNode ? item : this.toBBox(item);\n    const insertPath = [];\n\n    // 找到容纳物品的最佳节点，同时保存路径上的所有节点\n    const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n    // 将项目放入节点\n    node.childrenNodes.push(item);\n    extend(node, bbox);\n\n    // 节点溢出时分裂； 必要时向上传播\n    while (level >= 0) {\n      if (insertPath[level].childrenNodes.length > this._maxEntries) {\n        this._split(insertPath, level);\n        level--;\n      } else {\n        break;\n      }\n    }\n\n    // 沿插入路径调整 bboxes\n    this._adjustParentBBoxes(bbox, insertPath, level);\n  }\n\n  // 将溢出的节点一分为二\n  _split(insertPath, level) {\n    const node = insertPath[level];\n    const M = node.childrenNodes.length;\n    const m = this._minEntries;\n\n    this._chooseSplitAxis(node, m, M);\n\n    const splitIndex = this._chooseSplitIndex(node, m, M);\n\n    const newNode = createNode(node.childrenNodes.splice(splitIndex, node.childrenNodes.length - splitIndex));\n    newNode.height = node.height;\n    newNode.leaf = node.leaf;\n\n    calcBBox(node, this.toBBox);\n    calcBBox(newNode, this.toBBox);\n\n    if (level) {\n      insertPath[level - 1].childrenNodes.push(newNode);\n    } else {\n      this._splitRoot(node, newNode);\n    }\n  }\n\n  _splitRoot(node, newNode) {\n    // 分裂根节点\n    this.data = createNode([node, newNode]);\n    this.data.height = node.height + 1;\n    this.data.leaf = false;\n    calcBBox(this.data, this.toBBox);\n  }\n\n  _chooseSplitIndex(node, m, M) {\n    let index;\n    let minOverlap = Infinity;\n    let minArea = Infinity;\n\n    for (let i = m; i <= M - m; i++) {\n      const bbox1 = distBBox(node, 0, i, this.toBBox);\n      const bbox2 = distBBox(node, i, M, this.toBBox);\n\n      const overlap = intersectionArea(bbox1, bbox2);\n      const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n      // 选择重叠最小的分布\n      if (overlap < minOverlap) {\n        minOverlap = overlap;\n        index = i;\n        minArea = area < minArea ? area : minArea;\n      } else if (overlap === minOverlap) {\n        // 否则选择面积最小的分布\n        if (area < minArea) {\n          minArea = area;\n          index = i;\n        }\n      }\n    }\n\n    return index || M - m;\n  }\n\n  // 按最佳轴对节点子节点进行排序以进行拆分\n  _chooseSplitAxis(node, m, M) {\n    const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n    const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n    const xMargin = this._allDistMargin(node, m, M, compareMinX);\n    const yMargin = this._allDistMargin(node, m, M, compareMinY);\n    // 如果 x 的总分配边际值最小，则按 minX 排序,\n    // 否则它已经按 minY 排序\n    if (xMargin < yMargin) {\n      node.childrenNodes.sort(compareMinX);\n    }\n  }\n\n  // 所有可能的分割分布的总边际，其中每个节点至少是 m 满\n  _allDistMargin(node, m, M, compare) {\n    node.childrenNodes.sort(compare);\n\n    const toBBox = this.toBBox;\n    const leftBBox = distBBox(node, 0, m, toBBox);\n    const rightBBox = distBBox(node, M - m, M, toBBox);\n    let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n    for (let i = m; i < M - m; i++) {\n      const child = node.childrenNodes[i];\n      extend(leftBBox, node.leaf ? toBBox(child) : child);\n      margin += bboxMargin(leftBBox);\n    }\n\n    for (let i = M - m - 1; i >= m; i--) {\n      const child = node.childrenNodes[i];\n      extend(rightBBox, node.leaf ? toBBox(child) : child);\n      margin += bboxMargin(rightBBox);\n    }\n\n    return margin;\n  }\n\n  _adjustParentBBoxes(bbox, path, level) {\n    // 沿给定的树路径调整 bbox\n    for (let i = level; i >= 0; i--) {\n      extend(path[i], bbox);\n    }\n  }\n\n  _condense(path) {\n    // 遍历路径，删除空节点并更新 bboxes\n    for (let i = path.length - 1, siblings; i >= 0; i--) {\n      if (path[i].childrenNodes.length === 0) {\n        if (i > 0) {\n          siblings = path[i - 1].childrenNodes;\n          siblings.splice(siblings.indexOf(path[i]), 1);\n        } else {\n          this.clear();\n        }\n      } else {\n        calcBBox(path[i], this.toBBox);\n      }\n    }\n  }\n}\n\nexport {\n  Rtree,\n};\n","import { RectRange } from '../core/table/tablebase/RectRange';\n\nclass RtreeUtils {\n\n  static bboxToRange(bbox) {\n    return new RectRange(bbox.minY, bbox.minX, bbox.maxY, bbox.maxX);\n  }\n\n  static rangeToBbox(range) {\n    return {\n      minX: range.sci,\n      minY: range.sri,\n      maxX: range.eci,\n      maxY: range.eri,\n    };\n  }\n\n}\n\nexport {\n  RtreeUtils,\n};\n","import { Snapshot } from '../snapshot/Snapshot';\nimport { Rtree } from '../../../lib/rtree/Rtree';\nimport { Listen } from '../../../lib/Listen';\nimport { RtreeUtils } from '../../../utils/RtreeUtils';\nimport { SheetUtils } from '../../../utils/SheetUtils';\nimport { RectRange } from './RectRange';\n\n/**\n * RangeTree\n */\nclass RangeTree {\n\n  /**\n     * RangeTree 区域管理\n     */\n  constructor({\n    snapshot = new Snapshot(),\n  }) {\n    this.snapshot = snapshot;\n    this.rTree = new Rtree();\n    this.listen = new Listen();\n  }\n\n  /**\n     * 获取包含点的矩形区域\n     * @param ri\n     * @param ci\n     */\n  getFirstInclude(ri, ci) {\n    let { rTree } = this;\n    let bbox = {\n      minX: ci,\n      minY: ri,\n      maxX: ci,\n      maxY: ri,\n    };\n    let find = rTree.first(bbox);\n    if (find) {\n      return RtreeUtils.bboxToRange(find);\n    }\n    return SheetUtils.Undef;\n  }\n\n  /**\n   * 获取包含点的矩形区域\n   * @param ri\n   * @param ci\n   */\n  getMasterInclude(ri, ci) {\n    const find = this.getFirstInclude(ri, ci);\n    if (find.sri === ri) {\n      if (find.sci === ci) {\n        return find;\n      }\n    }\n    return SheetUtils.Undef;\n  }\n\n  /**\n     * 获取重合的区域\n     * @param rectRange\n     */\n  getIntersects(rectRange) {\n    let { rTree } = this;\n    let bbox = RtreeUtils.rangeToBbox(rectRange);\n    const array = rTree.search(bbox);\n    return array.map(bbox => RtreeUtils.bboxToRange(bbox));\n  }\n\n  /**\n     * 添加矩形区域\n     * @param rectRange\n     */\n  push(rectRange) {\n    let { rTree } = this;\n    let bbox = RtreeUtils.rangeToBbox(rectRange);\n    rTree.insert(bbox);\n    return this;\n  }\n\n  /**\n     * 删除矩形区域\n     * @param rectRange\n     */\n  shift(rectRange) {\n    let { rTree } = this;\n    let bbox = RtreeUtils.rangeToBbox(rectRange);\n    let array = rTree.search(bbox);\n    for (let i = 0, len = array.length; i < len; i++) {\n      let item = array[i];\n      rTree.remove(item);\n    }\n    return this;\n  }\n\n  /**\n     * 添加矩形区域\n     * @param rectRange\n     */\n  add(rectRange) {\n    let { listen, snapshot } = this;\n    let action = {\n      undo: () => {\n        this.shift(rectRange);\n      },\n      redo: () => {\n        this.push(rectRange);\n        listen.execute('add', rectRange);\n      },\n    };\n    snapshot.addAction(action);\n    action.redo();\n  }\n\n  /**\n     * 删除矩形区域\n     * @param rectRange\n     */\n  delete(rectRange) {\n    let { listen, snapshot } = this;\n    let action = {\n      undo: () => {\n        this.push(rectRange);\n      },\n      redo: () => {\n        this.shift(rectRange);\n        listen.execute('delete', rectRange);\n      },\n    };\n    snapshot.addAction(action);\n    action.redo();\n  }\n\n  /**\n   * 删除矩形区域\n   * @param rectRanges\n   */\n  batchDelete(rectRanges) {\n    let { listen, snapshot } = this;\n    let action = {\n      undo: () => {\n        rectRanges.forEach((rectRange) => {\n          this.push(rectRange);\n        });\n      },\n      redo: () => {\n        rectRanges.forEach((rectRange) => {\n          this.shift(rectRange);\n        });\n        listen.execute('batchDelete', rectRanges);\n      },\n    };\n    snapshot.addAction(action);\n    action.redo();\n  }\n\n  /**\n     * 获取所有的矩形区域\n     */\n  getAll() {\n    let { rTree } = this;\n    return rTree.all().map(bbox => RtreeUtils.bboxToRange(bbox));\n  }\n\n  /**\n     * 获取交叉矩形新区域\n     * @param rectRange\n     */\n  union(rectRange) {\n    let { rTree } = this;\n    let bbox = RtreeUtils.rangeToBbox(rectRange);\n    let array = rTree.search(bbox);\n    if (array.length === 0) {\n      return rectRange;\n    }\n    let clone = rectRange.clone();\n    for (let i = 0, len = array.length; i < len; i++) {\n      let range = RtreeUtils.bboxToRange(array[i]);\n      clone = clone.union(range);\n    }\n    if (!clone.equals(rectRange)) {\n      return this.union(clone);\n    }\n    return rectRange;\n  }\n\n  /**\n   * 获取整行区域\n   * @param ri\n   * @param number\n   * @returns {RectRange}\n   */\n  getFullRowRange(ri, number) {\n    return new RectRange(ri, 0, Math.max(ri, ri + number - 1), RangeTree.MAX_COL);\n  }\n\n  /**\n   * 获取整列区域\n   * @param ci\n   * @param number\n   * @returns {RectRange}\n   */\n  getFullColRange(ci, number) {\n    return new RectRange(0, ci, RangeTree.MAX_ROW, Math.max(ci, ci + number - 1));\n  }\n\n  /**\n     * 行扩展\n     * @param ri\n     * @param number\n     */\n  rowAfterExpand(ri, number) {\n    let bbox = {\n      minX: 0,\n      minY: ri,\n      maxX: RangeTree.MAX_COL,\n      maxY: RangeTree.MAX_ROW,\n    };\n    let { rTree } = this;\n    let array = rTree.search(bbox);\n    for (let i = 0, len = array.length; i < len; i++) {\n      let item = array[i];\n      rTree.remove(item);\n      if (item.minY > ri) {\n        item.minY += number;\n      }\n      if (item.maxY > ri) {\n        item.maxY += number;\n      }\n    }\n    rTree.load(array);\n  }\n\n  /**\n     * 列扩展\n     * @param ci\n     * @param number\n     */\n  colAfterExpand(ci, number) {\n    const bbox = {\n      minX: ci,\n      minY: 0,\n      maxX: RangeTree.MAX_COL,\n      maxY: RangeTree.MAX_ROW,\n    };\n    let { rTree } = this;\n    let array = rTree.search(bbox);\n    for (let i = 0, len = array.length; i < len; i++) {\n      let item = array[i];\n      rTree.remove(item);\n      if (item.minX > ci) {\n        item.minX += number;\n      }\n      if (item.maxX > ci) {\n        item.maxX += number;\n      }\n    }\n    rTree.load(array);\n  }\n\n  /**\n     * 行收缩\n     * @param ri\n     * @param number\n     */\n  rowAfterShrink(ri, number) {\n    let bbox = {\n      minX: 0,\n      minY: ri,\n      maxX: RangeTree.MAX_COL,\n      maxY: RangeTree.MAX_ROW,\n    };\n    let { rTree } = this;\n    let array = rTree.search(bbox);\n    for (let i = 0, len = array.length; i < len; i++) {\n      let item = array[i];\n      rTree.remove(item);\n      if (item.minY > ri) {\n        item.minY -= number;\n      }\n      if (item.maxY > ri) {\n        item.maxY -= number;\n      }\n    }\n    rTree.load(array);\n  }\n\n  /**\n     * 列收索\n     * @param ci\n     * @param number\n     */\n  colAfterShrink(ci, number) {\n    const bbox = {\n      minX: ci,\n      minY: 0,\n      maxX: RangeTree.MAX_COL,\n      maxY: RangeTree.MAX_ROW,\n    };\n    let { rTree } = this;\n    let array = rTree.search(bbox);\n    for (let i = 0, len = array.length; i < len; i++) {\n      let item = array[i];\n      rTree.remove(item);\n      if (item.minX > ci) {\n        item.minX -= number;\n      }\n      if (item.maxX > ci) {\n        item.maxX -= number;\n      }\n    }\n    rTree.load(array);\n  }\n\n  /**\n   * 行扩展\n   * @param ri\n   * @param number\n   */\n  rowBeforeExpand(ri, number) {\n    let bbox = {\n      minX: 0,\n      minY: ri,\n      maxX: RangeTree.MAX_COL,\n      maxY: RangeTree.MAX_ROW,\n    };\n    let { rTree } = this;\n    let array = rTree.search(bbox);\n    for (let i = 0, len = array.length; i < len; i++) {\n      let item = array[i];\n      rTree.remove(item);\n      if (item.minY >= ri) {\n        item.minY += number;\n      }\n      if (item.maxY >= ri) {\n        item.maxY += number;\n      }\n    }\n    rTree.load(array);\n  }\n\n  /**\n   * 列扩展\n   * @param ci\n   * @param number\n   */\n  colBeforeExpand(ci, number) {\n    const bbox = {\n      minX: ci,\n      minY: 0,\n      maxX: RangeTree.MAX_COL,\n      maxY: RangeTree.MAX_ROW,\n    };\n    let { rTree } = this;\n    let array = rTree.search(bbox);\n    for (let i = 0, len = array.length; i < len; i++) {\n      let item = array[i];\n      rTree.remove(item);\n      if (item.minX >= ci) {\n        item.minX += number;\n      }\n      if (item.maxX >= ci) {\n        item.maxX += number;\n      }\n    }\n    rTree.load(array);\n  }\n\n  /**\n   * 行收缩\n   * @param ri\n   * @param number\n   */\n  rowBeforeShrink(ri, number) {\n    let bbox = {\n      minX: 0,\n      minY: ri,\n      maxX: RangeTree.MAX_COL,\n      maxY: RangeTree.MAX_ROW,\n    };\n    let { rTree } = this;\n    let array = rTree.search(bbox);\n    for (let i = 0, len = array.length; i < len; i++) {\n      let item = array[i];\n      rTree.remove(item);\n      if (item.minY >= ri) {\n        item.minY -= number;\n      }\n      if (item.maxY >= ri) {\n        item.maxY -= number;\n      }\n    }\n    rTree.load(array);\n  }\n\n  /**\n   * 列收索\n   * @param ci\n   * @param number\n   */\n  colBeforeShrink(ci, number) {\n    const bbox = {\n      minX: ci,\n      minY: 0,\n      maxX: RangeTree.MAX_COL,\n      maxY: RangeTree.MAX_ROW,\n    };\n    let { rTree } = this;\n    let array = rTree.search(bbox);\n    for (let i = 0, len = array.length; i < len; i++) {\n      let item = array[i];\n      rTree.remove(item);\n      if (item.minX >= ci) {\n        item.minX -= number;\n      }\n      if (item.maxX >= ci) {\n        item.maxX -= number;\n      }\n    }\n    rTree.load(array);\n  }\n}\n\nRangeTree.MAX_COL = 1433;\nRangeTree.MAX_ROW = 1048576;\n\nexport {\n  RangeTree,\n};\n","import { RectRange } from '../tablebase/RectRange';\nimport { Snapshot } from '../snapshot/Snapshot';\nimport { RangeTree } from '../tablebase/RangeTree';\nimport { RtreeUtils } from '../../../utils/RtreeUtils';\n\n/**\n * Merges\n */\nclass Merges extends RangeTree {\n\n  /**\n     * Merges 合并区域管理\n     */\n  constructor({\n    snapshot = new Snapshot(),\n    merges = [],\n  } = {}) {\n    super({ snapshot });\n    merges.map(merge => RectRange.valueOf(merge)).forEach(view => this.add(view));\n  }\n\n  /**\n   * 删除行号\n   * @param ri\n   * @param number\n   */\n  removeRow(ri, number) {\n    let { rTree, snapshot } = this;\n    let footRange = new RectRange(ri, 0, RangeTree.MAX_ROW, RangeTree.MAX_COL);\n    let fullRange = this.getFullRowRange(ri, number);\n    let fullBbox = RtreeUtils.rangeToBbox(fullRange);\n    let footBbox = RtreeUtils.rangeToBbox(footRange);\n    let divers = [];\n    let search = [];\n    let mergeAction = {\n      undo: () => {\n        let { length } = divers;\n        for (let i = 0; i < length; i++) {\n          const item = divers[i];\n          rTree.remove(item);\n        }\n        rTree.load(search);\n      },\n      redo: () => {\n        divers = [];\n        search = rTree.search(footBbox);\n        let { length } = search;\n        for (let i = 0; i < length; i++) {\n          const item = search[i];\n          const clone = { ...item };\n          rTree.remove(item);\n          if (clone.minY < fullBbox.minY) {\n            if (clone.maxY < fullBbox.maxY) {\n              let diffMax = clone.maxY - fullBbox.minY;\n              diffMax += 1;\n              clone.oldMax = clone.maxY;\n              clone.maxY -= diffMax;\n              clone.style = 'oddValue';\n              if (clone.maxX !== clone.minX || clone.maxY !== clone.minY) {\n                divers.push(clone);\n              }\n              continue;\n            }\n            if (clone.maxY > fullBbox.maxY) {\n              let diffMax = fullBbox.maxY - footBbox.minY;\n              diffMax += 1;\n              clone.oldMax = clone.maxY;\n              clone.maxY -= diffMax;\n              clone.style = 'oddValue';\n              if (clone.maxX !== clone.minX || clone.maxY !== clone.minY) {\n                divers.push(clone);\n              }\n              continue;\n            }\n            if (clone.maxY === fullBbox.maxY) {\n              let diffMax = fullBbox.maxY - footBbox.minY;\n              diffMax += 1;\n              clone.oldMax = clone.maxY;\n              clone.maxY -= diffMax;\n              clone.style = 'oddValue';\n              if (clone.maxX !== clone.minX || clone.maxY !== clone.minY) {\n                divers.push(clone);\n              }\n              continue;\n            }\n          }\n          if (clone.minY > fullBbox.minY) {\n            if (clone.minY < fullBbox.maxY) {\n              if (clone.maxY > fullBbox.maxY) {\n                let diffMin = clone.minY - fullBbox.minY;\n                let diffMax = fullBbox.maxY - clone.minY;\n                diffMax += diffMin + 1;\n                clone.oldMax = clone.maxY;\n                clone.oldMin = clone.minY;\n                clone.maxY -= diffMax;\n                clone.minY -= diffMin;\n                clone.style = 'evenValue';\n                if (clone.maxX !== clone.minX || clone.maxY !== clone.minY) {\n                  divers.push(clone);\n                }\n                continue;\n              }\n            }\n            if (clone.minY > fullBbox.maxY) {\n              let diffValue = fullBbox.maxY - fullBbox.minY;\n              diffValue += 1;\n              clone.oldMax = clone.maxY;\n              clone.oldMin = clone.minY;\n              clone.maxY -= diffValue;\n              clone.minY -= diffValue;\n              clone.style = 'evenValue';\n              if (clone.maxX !== clone.minX || clone.maxY !== clone.minY) {\n                divers.push(clone);\n              }\n              continue;\n            }\n          }\n          if (clone.minY === fullBbox.minY) {\n            if (clone.maxY > fullBbox.maxY) {\n              let diffMax = fullBbox.maxY - clone.minY;\n              diffMax += 1;\n              clone.oldMax = clone.maxY;\n              clone.maxY -= diffMax;\n              clone.style = 'oddValue';\n              if (clone.maxX !== clone.minX || clone.maxY !== clone.minY) {\n                divers.push(clone);\n              }\n            }\n          }\n        }\n        rTree.load(divers);\n      },\n    };\n    snapshot.addAction(mergeAction);\n    mergeAction.redo();\n  }\n\n  /**\n   * 删除列号\n   * @param ci\n   * @param number\n   */\n  removeCol(ci, number) {\n    let { rTree, snapshot } = this;\n    let footRange = new RectRange(0, ci, RangeTree.MAX_ROW, RangeTree.MAX_COL);\n    let fullRange = this.getFullColRange(ci, number);\n    let fullBbox = RtreeUtils.rangeToBbox(fullRange);\n    let footBbox = RtreeUtils.rangeToBbox(footRange);\n    let divers = [];\n    let search = [];\n    let mergeAction = {\n      undo: () => {\n        let { length } = divers;\n        for (let i = 0; i < length; i++) {\n          const item = divers[i];\n          rTree.remove(item);\n        }\n        rTree.load(search);\n      },\n      redo: () => {\n        divers = [];\n        search = rTree.search(footBbox);\n        let { length } = search;\n        for (let i = 0; i < length; i++) {\n          const item = search[i];\n          const clone = { ...item };\n          rTree.remove(item);\n          if (clone.minX < fullBbox.minX) {\n            if (clone.maxX < fullBbox.maxX) {\n              let diffMax = clone.maxX - fullBbox.minX;\n              diffMax += 1;\n              clone.oldMax = clone.maxX;\n              clone.maxX -= diffMax;\n              clone.style = 'oddValue';\n              if (clone.maxX !== clone.minX || clone.maxY !== clone.minY) {\n                divers.push(clone);\n              }\n              continue;\n            }\n            if (clone.maxX > fullBbox.maxX) {\n              let diffMax = fullBbox.maxX - footBbox.minX;\n              diffMax += 1;\n              clone.oldMax = clone.maxX;\n              clone.maxX -= diffMax;\n              clone.style = 'oddValue';\n              if (clone.maxX !== clone.minX || clone.maxY !== clone.minY) {\n                divers.push(clone);\n              }\n              continue;\n            }\n            if (clone.maxX === fullBbox.maxX) {\n              let diffMax = fullBbox.maxX - footBbox.minX;\n              diffMax += 1;\n              clone.oldMax = clone.maxX;\n              clone.maxX -= diffMax;\n              clone.style = 'oddValue';\n              if (clone.maxX !== clone.minX || clone.maxY !== clone.minY) {\n                divers.push(clone);\n              }\n              continue;\n            }\n          }\n          if (clone.minX > fullBbox.minX) {\n            if (clone.minX < fullBbox.maxX) {\n              if (clone.maxX > fullBbox.maxX) {\n                let diffMin = clone.minX - fullBbox.minX;\n                let diffMax = fullBbox.maxX - clone.minX;\n                diffMax += diffMin + 1;\n                clone.oldMax = clone.maxX;\n                clone.oldMin = clone.minX;\n                clone.maxX -= diffMax;\n                clone.minX -= diffMin;\n                clone.style = 'evenValue';\n                if (clone.maxX !== clone.minX || clone.maxY !== clone.minY) {\n                  divers.push(clone);\n                }\n                continue;\n              }\n            }\n            if (clone.minX > fullBbox.maxX) {\n              let diffValue = fullBbox.maxX - fullBbox.minX;\n              diffValue += 1;\n              clone.oldMax = clone.maxX;\n              clone.oldMin = clone.minX;\n              clone.maxX -= diffValue;\n              clone.minX -= diffValue;\n              clone.style = 'evenValue';\n              if (clone.maxX !== clone.minX || clone.maxY !== clone.minY) {\n                divers.push(clone);\n              }\n              continue;\n            }\n          }\n          if (clone.minX === fullBbox.minX) {\n            if (clone.maxX > fullBbox.maxX) {\n              let diffMax = fullBbox.maxX - clone.minX;\n              diffMax += 1;\n              clone.oldMax = clone.maxX;\n              clone.maxX -= diffMax;\n              clone.style = 'oddValue';\n              if (clone.maxX !== clone.minX || clone.maxY !== clone.minY) {\n                divers.push(clone);\n              }\n            }\n          }\n        }\n        rTree.load(divers);\n      },\n    };\n    snapshot.addAction(mergeAction);\n    mergeAction.redo();\n  }\n\n  /**\n   * 插入新列时调整区域大小和位置\n   * @param ci\n   * @param number\n   */\n  insertColAfter(ci, number) {\n    const { snapshot } = this;\n    const mergeAction = {\n      undo: () => {\n        this.colAfterShrink(ci, number);\n      },\n      redo: () => {\n        this.colAfterExpand(ci, number);\n      },\n    };\n    snapshot.addAction(mergeAction);\n    mergeAction.redo();\n  }\n\n  /**\n   * 插入新列时调整区域大小和位置\n   * @param ci\n   * @param number\n   */\n  insertColBefore(ci, number) {\n    const { snapshot } = this;\n    const mergeAction = {\n      undo: () => {\n        this.colBeforeShrink(ci, number);\n      },\n      redo: () => {\n        this.colBeforeExpand(ci, number);\n      },\n    };\n    snapshot.addAction(mergeAction);\n    mergeAction.redo();\n  }\n\n  /**\n   * 插入新行时调整区域大小和位置\n   * @param ri\n   * @param number\n   */\n  insertRowAfter(ri, number) {\n    const { snapshot } = this;\n    const mergeAction = {\n      undo: () => {\n        this.rowAfterShrink(ri, number);\n      },\n      redo: () => {\n        this.rowAfterExpand(ri, number);\n      },\n    };\n    snapshot.addAction(mergeAction);\n    mergeAction.redo();\n  }\n\n  /**\n   * 插入新行时调整区域大小和位置\n   * @param ri\n   * @param number\n   */\n  insertRowBefore(ri, number) {\n    const { snapshot } = this;\n    const mergeAction = {\n      undo: () => {\n        this.rowBeforeShrink(ri, number);\n      },\n      redo: () => {\n        this.rowBeforeExpand(ri, number);\n      },\n    };\n    snapshot.addAction(mergeAction);\n    mergeAction.redo();\n  }\n\n  /**\n   * 获取矩形的json数据\n   */\n  getData() {\n    return {\n      merges: this.getAll().map(range => range.toString()),\n    };\n  }\n\n}\n\nexport {\n  Merges,\n};\n","import { Cell } from './Cell';\nimport { SheetUtils } from '../../../utils/SheetUtils';\nimport { Listen } from '../../../lib/Listen';\nimport { Merges } from '../merges/Merges';\nimport { Snapshot } from '../snapshot/Snapshot';\n\nclass Items {\n\n  constructor({ data = [] }) {\n    this.data = data;\n  }\n\n  getItems(ri) {\n    let { data } = this;\n    return data[ri];\n  }\n\n  clear(rectRange, { ignoreCorner = false } = {}) {\n    let { sri, eri } = rectRange;\n    let { sci, eci } = rectRange;\n    let { data } = this;\n    let { snapshot } = this;\n    let { length } = data;\n    let oldItems = [];\n    let effRiLength = eri - sri + 1;\n    let effCiLength = eci - sci + 1;\n    let action = {\n      undo: () => {\n        for (let ri = sri; ri <= eri; ri++) {\n          if (ri >= length) {\n            break;\n          }\n          let oldRowItem = oldItems[ri];\n          let rowItem = data[ri];\n          if (rowItem) {\n            for (let ci = sci; ci <= eci; ci++) {\n              if (ci >= length) {\n                break;\n              }\n              if (ignoreCorner) {\n                let firstRi = ri === sri;\n                let firstCi = ci === sci;\n                if (firstRi && firstCi) {\n                  continue;\n                }\n                rowItem[ci] = oldRowItem[ci];\n              } else {\n                rowItem[ci] = oldRowItem[ci];\n              }\n            }\n          }\n        }\n      },\n      redo: () => {\n        oldItems = new Array(effRiLength);\n        for (let ri = sri; ri <= eri; ri++) {\n          if (ri >= length) {\n            break;\n          }\n          let rowItem = data[ri];\n          if (rowItem) {\n            let oldRowItem = new Array(effCiLength);\n            let { length } = rowItem;\n            for (let ci = sci; ci <= eci; ci++) {\n              if (ci >= length) {\n                break;\n              }\n              if (ignoreCorner) {\n                let firstRi = ri === sri;\n                let firstCi = ci === sci;\n                if (firstRi && firstCi) {\n                  continue;\n                }\n                oldRowItem[ci] = rowItem[ci];\n                rowItem[ci] = undefined;\n              } else {\n                oldRowItem[ci] = rowItem[ci];\n                rowItem[ci] = undefined;\n              }\n            }\n            oldItems[ri] = oldRowItem;\n          }\n        }\n      },\n    };\n    snapshot.addAction(action);\n    action.redo();\n  }\n\n  shift() {\n    return this.data.shift();\n  }\n\n  slice(sri, sci, eri, eci) {\n    const rows = this.data.slice(sri, eri + 1);\n    return rows.map((row) => {\n      if (row) {\n        return row.slice(sci, eci + 1);\n      }\n      return row;\n    });\n  }\n\n  getLength() {\n    return this.data.length;\n  }\n\n  getData() {\n    return this.data;\n  }\n\n  hasItems(ri) {\n    return SheetUtils.isDef(this.getItems(ri));\n  }\n\n  getItemsOrNew(ri) {\n    let { data } = this;\n    let items = data[ri];\n    if (SheetUtils.isUnDef(items)) {\n      items = [];\n      data[ri] = items;\n    }\n    return items;\n  }\n\n}\n\nclass Cells extends Items {\n\n  constructor({\n    snapshot = new Snapshot(),\n    data = [],\n    merges = new Merges(),\n  } = {}) {\n    super({ data });\n    this.snapshot = snapshot;\n    this.merges = merges;\n    this.listen = new Listen();\n  }\n\n  getCellOrNew(ri, ci) {\n    if (ri < 0) {\n      throw new TypeError(`错误的行号${ri}`);\n    }\n    if (ci < 0) {\n      throw new TypeError(`错误的列号${ci}`);\n    }\n    let cell = this.getCell(ri, ci);\n    if (SheetUtils.isUnDef(cell)) {\n      let items = this.getItemsOrNew(ri);\n      cell = new Cell();\n      items[ci] = cell;\n    }\n    return cell;\n  }\n\n  getCell(ri, ci) {\n    let { data } = this;\n    let items = data[ri];\n    if (items) {\n      let item = items[ci];\n      if (item) {\n        if (item instanceof Cell) {\n          return item;\n        }\n        if (SheetUtils.isString(item)) {\n          let config = { text: item };\n          items[ci] = new Cell(config);\n        } else {\n          let config = item.cell ? item.cell : item;\n          items[ci] = new Cell(config);\n        }\n        return items[ci];\n      }\n    }\n    return SheetUtils.Undef;\n  }\n\n  each(callback) {\n    const { data } = this;\n    for (let i = 0, len = data.length; i < len; i++) {\n      let items = data[i];\n      if (items) {\n        for (let j = 0, len = items.length; j < len; j++) {\n          let cell = this.getCell(i, j);\n          callback(cell);\n        }\n      }\n    }\n  }\n\n  getCellOrMergeCell(ri, ci) {\n    const { merges } = this;\n    const merge = merges.getFirstInclude(ri, ci);\n    if (merge) {\n      return this.getCell(merge.sri, merge.sci);\n    }\n    return this.getCell(ri, ci);\n  }\n\n  hasCell(ri, ci) {\n    return SheetUtils.isDef(this.getCell(ri, ci));\n  }\n\n  setCell(ri, ci, cell) {\n    if (ri < 0) {\n      throw new TypeError(`错误的行号${ri}`);\n    }\n    if (ci < 0) {\n      throw new TypeError(`错误的列号${ci}`);\n    }\n    let { listen, snapshot } = this;\n    let oldValue = this.getCell(ri, ci);\n    if (oldValue) {\n      let action = {\n        undo: () => {\n          const items = this.getItems(ri);\n          items[ci] = oldValue;\n          listen.execute('change', {\n            ri, ci, oldValue,\n          });\n        },\n        redo: () => {\n          const items = this.getItemsOrNew(ri);\n          items[ci] = cell;\n          listen.execute('change', {\n            ri, ci, oldValue,\n          });\n        },\n      };\n      snapshot.addAction(action);\n      action.redo();\n    }\n  }\n\n  setCellOrNew(ri, ci, cell) {\n    if (ri < 0) {\n      throw new TypeError(`错误的行号${ri}`);\n    }\n    if (ci < 0) {\n      throw new TypeError(`错误的列号${ci}`);\n    }\n    let { listen, snapshot } = this;\n    let hasCell = this.hasCell(ri, ci);\n    let hasItems = this.hasItems(ri);\n    let oldValue = this.getCell(ri, ci);\n    let action = {\n      undo: () => {\n        if (hasItems) {\n          const items = this.getItems(ri);\n          if (hasCell) {\n            items[ci] = oldValue;\n          } else {\n            items.splice(ci, 1);\n          }\n          listen.execute('change', {\n            ri, ci, oldValue,\n          });\n        } else {\n          const data = this.getData();\n          data.splice(ri, 1);\n          listen.execute('change', {\n            ri, ci, oldValue,\n          });\n        }\n      },\n      redo: () => {\n        if (hasItems) {\n          const items = this.getItems(ri);\n          items[ci] = cell;\n          listen.execute('change', {\n            ri, ci, oldValue,\n          });\n        } else {\n          const items = this.getItemsOrNew(ri);\n          items[ci] = cell;\n          listen.execute('change', {\n            ri, ci, oldValue,\n          });\n        }\n      },\n    };\n    snapshot.addAction(action);\n    action.redo();\n  }\n\n  removeRow(ri) {\n    let { snapshot } = this;\n    let orderValue;\n    let action = {\n      undo: () => {\n        if (orderValue) {\n          this.data.splice(ri, 0, orderValue);\n        }\n      },\n      redo: () => {\n        orderValue = this.data.splice(ri, 1)[0];\n      },\n    };\n    snapshot.addAction(action);\n    action.redo();\n  }\n\n  removeCol(ci) {\n    let { snapshot } = this;\n    let orderValue = [];\n    let action = {\n      undo: () => {\n        let { length } = orderValue;\n        for (let i = 0; i < length; i++) {\n          const value = orderValue[i];\n          const { ri, item } = value;\n          const items = this.data[ri];\n          items.splice(ci, 0, item);\n        }\n      },\n      redo: () => {\n        let { length } = this.data;\n        orderValue = [];\n        for (let ri = 0; ri < length; ri++) {\n          const items = this.data[ri];\n          if (items) {\n            const item = items.splice(ci, 1)[0];\n            orderValue.push({ ri, item });\n          }\n        }\n      },\n    };\n    snapshot.addAction(action);\n    action.redo();\n  }\n\n  insertRowAfter(ri) {\n    let { snapshot } = this;\n    let action = {\n      undo: () => {\n        this.data.splice(ri + 1, 1);\n      },\n      redo: () => {\n        this.data.splice(ri + 1, 0, []);\n      },\n    };\n    snapshot.addAction(action);\n    action.redo();\n  }\n\n  insertColAfter(ci) {\n    let { snapshot } = this;\n    let action = {\n      undo: () => {\n        for (let i = 0, len = this.data.length; i < len; i++) {\n          const items = this.data[i];\n          if (items) {\n            items.splice(ci + 1, 1);\n          }\n        }\n      },\n      redo: () => {\n        for (let i = 0, len = this.data.length; i < len; i++) {\n          const items = this.data[i];\n          if (items) {\n            items.splice(ci + 1, 0, {});\n          }\n        }\n      },\n    };\n    snapshot.addAction(action);\n    action.redo();\n  }\n\n  insertRowBefore(ri) {\n    let { snapshot } = this;\n    let action = {\n      undo: () => {\n        this.items.splice(ri, 1);\n      },\n      redo: () => {\n        this.items.splice(ri, 0, []);\n      },\n    };\n    snapshot.addAction(action);\n    action.redo();\n  }\n\n  insertColBefore(ci) {\n    let { snapshot } = this;\n    let action = {\n      undo: () => {\n        for (let i = 0, len = this.data.length; i < len; i++) {\n          const items = this.data[i];\n          if (items) {\n            items.splice(ci, 1);\n          }\n        }\n      },\n      redo: () => {\n        for (let i = 0, len = this.data.length; i < len; i++) {\n          const items = this.data[i];\n          if (items) {\n            items.splice(ci, 0, {});\n          }\n        }\n      },\n    };\n    snapshot.addAction(action);\n    action.redo();\n  }\n\n}\n\nexport {\n  Cells,\n};\n","import { Cell } from '../../core/table/tablecell/Cell';\r\nimport { SheetUtils } from '../../utils/SheetUtils';\r\nimport { Cells } from '../../core/table/tablecell/Cells';\r\n\r\naddEventListener('message', (event) => {\r\n  const { data } = event;\r\n  const cells = new Cells({\r\n    data\r\n  });\r\n  let total = 0;\r\n  let number = 0;\r\n  cells.each(cell => {\r\n    if (cell) {\r\n      if (cell.hasFormula()) {\r\n        const value = cell.getComputeText();\r\n        if (SheetUtils.isNumber(value)) {\r\n          total += SheetUtils.parseFloat(value);\r\n          number++;\r\n        }\r\n      } else {\r\n        switch (cell.contentType) {\r\n          case Cell.TYPE.NUMBER:\r\n            total += cell.getComputeText();\r\n            number++;\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  });\r\n  postMessage({\r\n    total, number\r\n  });\r\n});\r\n"],"sourceRoot":""}